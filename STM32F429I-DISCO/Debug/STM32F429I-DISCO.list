
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028560  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005d48  08028710  08028710  00038710  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000317a  0802e458  0802e458  0003e458  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000001f0  080315d4  080315d4  000415d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000318  080317c4  080317c4  000417c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00052a40  08031adc  08031adc  00041adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0808451c  0808451c  000a0188  2**0
                  CONTENTS
  8 .ARM          00000008  0808451c  0808451c  0009451c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08084524  08084524  000a0188  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08084524  08084524  00094524  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08084538  08084538  00094538  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000188  20000000  08084540  000a0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014d48  20000188  080846c8  000a0188  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20014ed0  080846c8  000a4ed0  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000a0188  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000b0000  2**2
                  ALLOC
 17 .debug_line   00085097  00000000  00000000  000a01b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   0016c020  00000000  00000000  0012524f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001efdc  00000000  00000000  0029126f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00004448  00000000  00000000  002b0250  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    001291a3  00000000  00000000  002b4698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 0000a5f0  00000000  00000000  003dd840  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003d811  00000000  00000000  003e7e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00425641  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000c560  00000000  00000000  00425710  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loc    000596e6  00000000  00000000  00431c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000188 	.word	0x20000188
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080286f8 	.word	0x080286f8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000018c 	.word	0x2000018c
 80001ec:	080286f8 	.word	0x080286f8

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f007 fbdd 	bl	8007d8c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f027 f8ad 	bl	8027730 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 faef 	bl	8000bb8 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005dc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005e0:	08084540 	.word	0x08084540
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000188 	.word	0x20000188
  ldr  r2, =_sbss
 80005ec:	20000188 	.word	0x20000188
  ldr  r3, = _ebss
 80005f0:	20014ed0 	.word	0x20014ed0

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>
	...

080005f8 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */

void MX_FATFS_Init(void)
{
 80005f8:	b508      	push	{r3, lr}
  /*## FatFS: Link the SD driver ###########################*/
  retSD = FATFS_LinkDriver(&SD_Driver, SDPath);
 80005fa:	4903      	ldr	r1, [pc, #12]	; (8000608 <MX_FATFS_Init+0x10>)
 80005fc:	4803      	ldr	r0, [pc, #12]	; (800060c <MX_FATFS_Init+0x14>)
 80005fe:	f00c f9fb 	bl	800c9f8 <FATFS_LinkDriver>
 8000602:	4b03      	ldr	r3, [pc, #12]	; (8000610 <MX_FATFS_Init+0x18>)
 8000604:	7018      	strb	r0, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */
  /* USER CODE END Init */
}
 8000606:	bd08      	pop	{r3, pc}
 8000608:	200001a4 	.word	0x200001a4
 800060c:	08028750 	.word	0x08028750
 8000610:	200001a8 	.word	0x200001a8

08000614 <BSP_SD_ReadBlocks_DMA>:
  * @param  ReadAddr: Address from where data is to be read
  * @param  NumOfBlocks: Number of SD blocks to read
  * @retval SD status
  */
__weak uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
{
 8000614:	b508      	push	{r3, lr}
 8000616:	4613      	mov	r3, r2
  uint8_t sd_state = MSD_OK;

  /* Read block(s) in DMA transfer mode */
  if (HAL_SD_ReadBlocks_DMA(&hsd, (uint8_t *)pData, ReadAddr, NumOfBlocks) != HAL_OK)
 8000618:	460a      	mov	r2, r1
 800061a:	4601      	mov	r1, r0
 800061c:	4803      	ldr	r0, [pc, #12]	; (800062c <BSP_SD_ReadBlocks_DMA+0x18>)
 800061e:	f009 fb23 	bl	8009c68 <HAL_SD_ReadBlocks_DMA>
  {
    sd_state = MSD_ERROR;
  }

  return sd_state;
}
 8000622:	3800      	subs	r0, #0
 8000624:	bf18      	it	ne
 8000626:	2001      	movne	r0, #1
 8000628:	bd08      	pop	{r3, pc}
 800062a:	bf00      	nop
 800062c:	20000874 	.word	0x20000874

08000630 <BSP_SD_WriteBlocks_DMA>:
  * @param  WriteAddr: Address from where data is to be written
  * @param  NumOfBlocks: Number of SD blocks to write
  * @retval SD status
  */
__weak uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
{
 8000630:	b508      	push	{r3, lr}
 8000632:	4613      	mov	r3, r2
  uint8_t sd_state = MSD_OK;

  /* Write block(s) in DMA transfer mode */
  if (HAL_SD_WriteBlocks_DMA(&hsd, (uint8_t *)pData, WriteAddr, NumOfBlocks) != HAL_OK)
 8000634:	460a      	mov	r2, r1
 8000636:	4601      	mov	r1, r0
 8000638:	4803      	ldr	r0, [pc, #12]	; (8000648 <BSP_SD_WriteBlocks_DMA+0x18>)
 800063a:	f009 fbab 	bl	8009d94 <HAL_SD_WriteBlocks_DMA>
  {
    sd_state = MSD_ERROR;
  }

  return sd_state;
}
 800063e:	3800      	subs	r0, #0
 8000640:	bf18      	it	ne
 8000642:	2001      	movne	r0, #1
 8000644:	bd08      	pop	{r3, pc}
 8000646:	bf00      	nop
 8000648:	20000874 	.word	0x20000874

0800064c <BSP_SD_GetCardState>:
  *          This value can be one of the following values:
  *            @arg  SD_TRANSFER_OK: No data transfer is acting
  *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
  */
__weak uint8_t BSP_SD_GetCardState(void)
{
 800064c:	b508      	push	{r3, lr}
  return ((HAL_SD_GetCardState(&hsd) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY);
 800064e:	4803      	ldr	r0, [pc, #12]	; (800065c <BSP_SD_GetCardState+0x10>)
 8000650:	f009 fe37 	bl	800a2c2 <HAL_SD_GetCardState>
}
 8000654:	3804      	subs	r0, #4
 8000656:	bf18      	it	ne
 8000658:	2001      	movne	r0, #1
 800065a:	bd08      	pop	{r3, pc}
 800065c:	20000874 	.word	0x20000874

08000660 <BSP_SD_GetCardInfo>:
  * @brief  Get SD information about specific SD card.
  * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
  * @retval None
  */
__weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
{
 8000660:	4601      	mov	r1, r0
  /* Get SD card Information */
  HAL_SD_GetCardInfo(&hsd, CardInfo);
 8000662:	4801      	ldr	r0, [pc, #4]	; (8000668 <BSP_SD_GetCardInfo+0x8>)
 8000664:	f009 be1b 	b.w	800a29e <HAL_SD_GetCardInfo>
 8000668:	20000874 	.word	0x20000874

0800066c <BSP_SD_AbortCallback>:
 800066c:	4770      	bx	lr

0800066e <HAL_SD_AbortCallback>:
  * @brief SD Abort callbacks
  * @param hsd: SD handle
  * @retval None
  */
void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
{
 800066e:	b508      	push	{r3, lr}
  BSP_SD_AbortCallback();
 8000670:	f7ff fffc 	bl	800066c <BSP_SD_AbortCallback>
}
 8000674:	bd08      	pop	{r3, pc}

08000676 <HAL_SD_TxCpltCallback>:
  * @brief Tx Transfer completed callback
  * @param hsd: SD handle
  * @retval None
  */
void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
{
 8000676:	b508      	push	{r3, lr}
  BSP_SD_WriteCpltCallback();
 8000678:	f000 f910 	bl	800089c <BSP_SD_WriteCpltCallback>
}
 800067c:	bd08      	pop	{r3, pc}

0800067e <HAL_SD_RxCpltCallback>:
  * @brief Rx Transfer completed callback
  * @param hsd: SD handle
  * @retval None
  */
void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
{
 800067e:	b508      	push	{r3, lr}
  BSP_SD_ReadCpltCallback();
 8000680:	f000 f91e 	bl	80008c0 <BSP_SD_ReadCpltCallback>
}
 8000684:	bd08      	pop	{r3, pc}

08000686 <BSP_SD_IsDetected>:
 * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 * @param  None
 * @retval Returns if SD is detected or not
 */
__weak uint8_t BSP_SD_IsDetected(void)
{
 8000686:	b507      	push	{r0, r1, r2, lr}
  __IO uint8_t status = SD_PRESENT;
 8000688:	2301      	movs	r3, #1
 800068a:	f88d 3007 	strb.w	r3, [sp, #7]

  if (BSP_PlatformIsDetected() == 0x0)
 800068e:	f000 f817 	bl	80006c0 <BSP_PlatformIsDetected>
 8000692:	b908      	cbnz	r0, 8000698 <BSP_SD_IsDetected+0x12>
  {
    status = SD_NOT_PRESENT;
 8000694:	f88d 0007 	strb.w	r0, [sp, #7]
  }

  return status;
 8000698:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
 800069c:	b003      	add	sp, #12
 800069e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080006a4 <BSP_SD_Init>:
{
 80006a4:	b508      	push	{r3, lr}
  if (BSP_SD_IsDetected() != SD_PRESENT)
 80006a6:	f7ff ffee 	bl	8000686 <BSP_SD_IsDetected>
 80006aa:	2801      	cmp	r0, #1
 80006ac:	d104      	bne.n	80006b8 <BSP_SD_Init+0x14>
}
 80006ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  sd_state = HAL_SD_Init(&hsd);
 80006b2:	4802      	ldr	r0, [pc, #8]	; (80006bc <BSP_SD_Init+0x18>)
 80006b4:	f009 bdd8 	b.w	800a268 <HAL_SD_Init>
}
 80006b8:	2001      	movs	r0, #1
 80006ba:	bd08      	pop	{r3, pc}
 80006bc:	20000874 	.word	0x20000874

080006c0 <BSP_PlatformIsDetected>:
  ******************************************************************************
*/
/* USER CODE END Header */
#include "fatfs_platform.h"

uint8_t	BSP_PlatformIsDetected(void) {
 80006c0:	b508      	push	{r3, lr}
    uint8_t status = SD_PRESENT;
    /* Check SD card detect pin */
    if(HAL_GPIO_ReadPin(SD_DETECT_GPIO_PORT, SD_DETECT_PIN) != GPIO_PIN_RESET)
 80006c2:	2110      	movs	r1, #16
 80006c4:	4803      	ldr	r0, [pc, #12]	; (80006d4 <BSP_PlatformIsDetected+0x14>)
 80006c6:	f007 ff95 	bl	80085f4 <HAL_GPIO_ReadPin>
    }
    /* USER CODE BEGIN 1 */
    /* user code can be inserted here */
    /* USER CODE END 1 */
    return status;
}
 80006ca:	fab0 f080 	clz	r0, r0
 80006ce:	0940      	lsrs	r0, r0, #5
 80006d0:	bd08      	pop	{r3, pc}
 80006d2:	bf00      	nop
 80006d4:	40020c00 	.word	0x40020c00

080006d8 <SD_ioctl>:
  * @param  *buff: Buffer to send/receive control data
  * @retval DRESULT: Operation result
  */
#if _USE_IOCTL == 1
DRESULT SD_ioctl(BYTE lun, BYTE cmd, void *buff)
{
 80006d8:	b530      	push	{r4, r5, lr}
  DRESULT res = RES_ERROR;
  BSP_SD_CardInfo CardInfo;

  if (Stat & STA_NOINIT) return RES_NOTRDY;
 80006da:	4b13      	ldr	r3, [pc, #76]	; (8000728 <SD_ioctl+0x50>)
 80006dc:	781c      	ldrb	r4, [r3, #0]
 80006de:	f014 0401 	ands.w	r4, r4, #1
{
 80006e2:	b089      	sub	sp, #36	; 0x24
 80006e4:	4615      	mov	r5, r2
  if (Stat & STA_NOINIT) return RES_NOTRDY;
 80006e6:	d11b      	bne.n	8000720 <SD_ioctl+0x48>

  switch (cmd)
 80006e8:	2903      	cmp	r1, #3
 80006ea:	d803      	bhi.n	80006f4 <SD_ioctl+0x1c>
 80006ec:	e8df f001 	tbb	[pc, r1]
 80006f0:	120c061a 	.word	0x120c061a
 80006f4:	2404      	movs	r4, #4
  default:
    res = RES_PARERR;
  }

  return res;
}
 80006f6:	4620      	mov	r0, r4
 80006f8:	b009      	add	sp, #36	; 0x24
 80006fa:	bd30      	pop	{r4, r5, pc}
    BSP_SD_GetCardInfo(&CardInfo);
 80006fc:	4668      	mov	r0, sp
 80006fe:	f7ff ffaf 	bl	8000660 <BSP_SD_GetCardInfo>
    *(DWORD*)buff = CardInfo.LogBlockNbr;
 8000702:	9b06      	ldr	r3, [sp, #24]
    *(DWORD*)buff = CardInfo.LogBlockSize / SD_DEFAULT_BLOCK_SIZE;
 8000704:	602b      	str	r3, [r5, #0]
    break;
 8000706:	e7f6      	b.n	80006f6 <SD_ioctl+0x1e>
    BSP_SD_GetCardInfo(&CardInfo);
 8000708:	4668      	mov	r0, sp
 800070a:	f7ff ffa9 	bl	8000660 <BSP_SD_GetCardInfo>
    *(WORD*)buff = CardInfo.LogBlockSize;
 800070e:	9b07      	ldr	r3, [sp, #28]
 8000710:	802b      	strh	r3, [r5, #0]
    break;
 8000712:	e7f0      	b.n	80006f6 <SD_ioctl+0x1e>
    BSP_SD_GetCardInfo(&CardInfo);
 8000714:	4668      	mov	r0, sp
 8000716:	f7ff ffa3 	bl	8000660 <BSP_SD_GetCardInfo>
    *(DWORD*)buff = CardInfo.LogBlockSize / SD_DEFAULT_BLOCK_SIZE;
 800071a:	9b07      	ldr	r3, [sp, #28]
 800071c:	0a5b      	lsrs	r3, r3, #9
 800071e:	e7f1      	b.n	8000704 <SD_ioctl+0x2c>
  if (Stat & STA_NOINIT) return RES_NOTRDY;
 8000720:	2403      	movs	r4, #3
 8000722:	e7e8      	b.n	80006f6 <SD_ioctl+0x1e>
    res = RES_OK;
 8000724:	460c      	mov	r4, r1
 8000726:	e7e6      	b.n	80006f6 <SD_ioctl+0x1e>
 8000728:	20000004 	.word	0x20000004

0800072c <SD_status>:
{
 800072c:	b510      	push	{r4, lr}
  Stat = STA_NOINIT;
 800072e:	4c06      	ldr	r4, [pc, #24]	; (8000748 <SD_status+0x1c>)
 8000730:	2301      	movs	r3, #1
 8000732:	7023      	strb	r3, [r4, #0]
  if(BSP_SD_GetCardState() == SD_TRANSFER_OK)
 8000734:	f7ff ff8a 	bl	800064c <BSP_SD_GetCardState>
 8000738:	b918      	cbnz	r0, 8000742 <SD_status+0x16>
    Stat &= ~STA_NOINIT;
 800073a:	7823      	ldrb	r3, [r4, #0]
 800073c:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8000740:	7023      	strb	r3, [r4, #0]
  return Stat;
 8000742:	7820      	ldrb	r0, [r4, #0]
}
 8000744:	bd10      	pop	{r4, pc}
 8000746:	bf00      	nop
 8000748:	20000004 	.word	0x20000004

0800074c <SD_CheckStatusWithTimeout.constprop.0>:
static int SD_CheckStatusWithTimeout(uint32_t timeout)
 800074c:	b538      	push	{r3, r4, r5, lr}
  timer = osKernelGetTickCount();
 800074e:	f00c f9bb 	bl	800cac8 <osKernelGetTickCount>
  while( osKernelGetTickCount() - timer < timeout)
 8000752:	f247 552f 	movw	r5, #29999	; 0x752f
  timer = osKernelGetTickCount();
 8000756:	4604      	mov	r4, r0
  while( osKernelGetTickCount() - timer < timeout)
 8000758:	f00c f9b6 	bl	800cac8 <osKernelGetTickCount>
 800075c:	1b03      	subs	r3, r0, r4
 800075e:	42ab      	cmp	r3, r5
 8000760:	d902      	bls.n	8000768 <SD_CheckStatusWithTimeout.constprop.0+0x1c>
  return -1;
 8000762:	f04f 30ff 	mov.w	r0, #4294967295
 8000766:	e003      	b.n	8000770 <SD_CheckStatusWithTimeout.constprop.0+0x24>
    if (BSP_SD_GetCardState() == SD_TRANSFER_OK)
 8000768:	f7ff ff70 	bl	800064c <BSP_SD_GetCardState>
 800076c:	2800      	cmp	r0, #0
 800076e:	d1f3      	bne.n	8000758 <SD_CheckStatusWithTimeout.constprop.0+0xc>
}
 8000770:	bd38      	pop	{r3, r4, r5, pc}
	...

08000774 <SD_write>:
{
 8000774:	b530      	push	{r4, r5, lr}
 8000776:	b085      	sub	sp, #20
 8000778:	460c      	mov	r4, r1
 800077a:	9201      	str	r2, [sp, #4]
 800077c:	9300      	str	r3, [sp, #0]
  if (SD_CheckStatusWithTimeout(SD_TIMEOUT) < 0)
 800077e:	f7ff ffe5 	bl	800074c <SD_CheckStatusWithTimeout.constprop.0>
 8000782:	2800      	cmp	r0, #0
 8000784:	e9dd 2100 	ldrd	r2, r1, [sp]
 8000788:	da02      	bge.n	8000790 <SD_write+0x1c>
  DRESULT res = RES_ERROR;
 800078a:	2001      	movs	r0, #1
}
 800078c:	b005      	add	sp, #20
 800078e:	bd30      	pop	{r4, r5, pc}
  if(BSP_SD_WriteBlocks_DMA((uint32_t*)buff,
 8000790:	4620      	mov	r0, r4
 8000792:	f7ff ff4d 	bl	8000630 <BSP_SD_WriteBlocks_DMA>
 8000796:	4602      	mov	r2, r0
 8000798:	2800      	cmp	r0, #0
 800079a:	d1f6      	bne.n	800078a <SD_write+0x16>
    status = osMessageQueueGet(SDQueueID, (void *)&event, NULL, SD_TIMEOUT);
 800079c:	480e      	ldr	r0, [pc, #56]	; (80007d8 <SD_write+0x64>)
 800079e:	f247 5330 	movw	r3, #30000	; 0x7530
 80007a2:	6800      	ldr	r0, [r0, #0]
 80007a4:	f10d 010e 	add.w	r1, sp, #14
 80007a8:	f00c fb05 	bl	800cdb6 <osMessageQueueGet>
    if ((status == osOK) && (event == WRITE_CPLT_MSG))
 80007ac:	2800      	cmp	r0, #0
 80007ae:	d1ec      	bne.n	800078a <SD_write+0x16>
 80007b0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80007b4:	2b02      	cmp	r3, #2
 80007b6:	d1e8      	bne.n	800078a <SD_write+0x16>
        timer = osKernelGetTickCount();
 80007b8:	f00c f986 	bl	800cac8 <osKernelGetTickCount>
        while(osKernelGetTickCount() - timer  < SD_TIMEOUT)
 80007bc:	f247 552f 	movw	r5, #29999	; 0x752f
        timer = osKernelGetTickCount();
 80007c0:	4604      	mov	r4, r0
        while(osKernelGetTickCount() - timer  < SD_TIMEOUT)
 80007c2:	f00c f981 	bl	800cac8 <osKernelGetTickCount>
 80007c6:	1b03      	subs	r3, r0, r4
 80007c8:	42ab      	cmp	r3, r5
 80007ca:	d8de      	bhi.n	800078a <SD_write+0x16>
          if (BSP_SD_GetCardState() == SD_TRANSFER_OK)
 80007cc:	f7ff ff3e 	bl	800064c <BSP_SD_GetCardState>
 80007d0:	2800      	cmp	r0, #0
 80007d2:	d1f6      	bne.n	80007c2 <SD_write+0x4e>
 80007d4:	e7da      	b.n	800078c <SD_write+0x18>
 80007d6:	bf00      	nop
 80007d8:	200001ac 	.word	0x200001ac

080007dc <SD_read>:
{
 80007dc:	b530      	push	{r4, r5, lr}
 80007de:	b085      	sub	sp, #20
 80007e0:	460c      	mov	r4, r1
 80007e2:	9201      	str	r2, [sp, #4]
 80007e4:	9300      	str	r3, [sp, #0]
  if (SD_CheckStatusWithTimeout(SD_TIMEOUT) < 0)
 80007e6:	f7ff ffb1 	bl	800074c <SD_CheckStatusWithTimeout.constprop.0>
 80007ea:	2800      	cmp	r0, #0
 80007ec:	e9dd 2100 	ldrd	r2, r1, [sp]
 80007f0:	da02      	bge.n	80007f8 <SD_read+0x1c>
  DRESULT res = RES_ERROR;
 80007f2:	2001      	movs	r0, #1
}
 80007f4:	b005      	add	sp, #20
 80007f6:	bd30      	pop	{r4, r5, pc}
    ret = BSP_SD_ReadBlocks_DMA((uint32_t*)buff, (uint32_t)(sector), count);
 80007f8:	4620      	mov	r0, r4
 80007fa:	f7ff ff0b 	bl	8000614 <BSP_SD_ReadBlocks_DMA>
    if (ret == MSD_OK) {
 80007fe:	4602      	mov	r2, r0
 8000800:	2800      	cmp	r0, #0
 8000802:	d1f6      	bne.n	80007f2 <SD_read+0x16>
          status = osMessageQueueGet(SDQueueID, (void *)&event, NULL, SD_TIMEOUT);
 8000804:	480e      	ldr	r0, [pc, #56]	; (8000840 <SD_read+0x64>)
 8000806:	f247 5330 	movw	r3, #30000	; 0x7530
 800080a:	6800      	ldr	r0, [r0, #0]
 800080c:	f10d 010e 	add.w	r1, sp, #14
 8000810:	f00c fad1 	bl	800cdb6 <osMessageQueueGet>
          if ((status == osOK) && (event == READ_CPLT_MSG))
 8000814:	2800      	cmp	r0, #0
 8000816:	d1ec      	bne.n	80007f2 <SD_read+0x16>
 8000818:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800081c:	2b01      	cmp	r3, #1
 800081e:	d1e8      	bne.n	80007f2 <SD_read+0x16>
            timer = osKernelGetTickCount();
 8000820:	f00c f952 	bl	800cac8 <osKernelGetTickCount>
            while(osKernelGetTickCount() - timer <SD_TIMEOUT)
 8000824:	f247 552f 	movw	r5, #29999	; 0x752f
            timer = osKernelGetTickCount();
 8000828:	4604      	mov	r4, r0
            while(osKernelGetTickCount() - timer <SD_TIMEOUT)
 800082a:	f00c f94d 	bl	800cac8 <osKernelGetTickCount>
 800082e:	1b03      	subs	r3, r0, r4
 8000830:	42ab      	cmp	r3, r5
 8000832:	d8de      	bhi.n	80007f2 <SD_read+0x16>
              if (BSP_SD_GetCardState() == SD_TRANSFER_OK)
 8000834:	f7ff ff0a 	bl	800064c <BSP_SD_GetCardState>
 8000838:	2800      	cmp	r0, #0
 800083a:	d1f6      	bne.n	800082a <SD_read+0x4e>
 800083c:	e7da      	b.n	80007f4 <SD_read+0x18>
 800083e:	bf00      	nop
 8000840:	200001ac 	.word	0x200001ac

08000844 <SD_initialize>:
{
 8000844:	b538      	push	{r3, r4, r5, lr}
Stat = STA_NOINIT;
 8000846:	4c13      	ldr	r4, [pc, #76]	; (8000894 <SD_initialize+0x50>)
 8000848:	2501      	movs	r5, #1
 800084a:	7025      	strb	r5, [r4, #0]
  if(osKernelGetState() == osKernelRunning)
 800084c:	f00c f912 	bl	800ca74 <osKernelGetState>
 8000850:	2802      	cmp	r0, #2
 8000852:	d11d      	bne.n	8000890 <SD_initialize+0x4c>
    if(BSP_SD_Init() == MSD_OK)
 8000854:	f7ff ff26 	bl	80006a4 <BSP_SD_Init>
 8000858:	b950      	cbnz	r0, 8000870 <SD_initialize+0x2c>
  Stat = STA_NOINIT;
 800085a:	7025      	strb	r5, [r4, #0]
  if(BSP_SD_GetCardState() == SD_TRANSFER_OK)
 800085c:	f7ff fef6 	bl	800064c <BSP_SD_GetCardState>
 8000860:	b918      	cbnz	r0, 800086a <SD_initialize+0x26>
    Stat &= ~STA_NOINIT;
 8000862:	7823      	ldrb	r3, [r4, #0]
 8000864:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8000868:	7023      	strb	r3, [r4, #0]
  return Stat;
 800086a:	7823      	ldrb	r3, [r4, #0]
 800086c:	b2db      	uxtb	r3, r3
      Stat = SD_CheckStatus(lun);
 800086e:	7023      	strb	r3, [r4, #0]
    if (Stat != STA_NOINIT)
 8000870:	7823      	ldrb	r3, [r4, #0]
 8000872:	2b01      	cmp	r3, #1
 8000874:	d00c      	beq.n	8000890 <SD_initialize+0x4c>
      if (SDQueueID == NULL)
 8000876:	4d08      	ldr	r5, [pc, #32]	; (8000898 <SD_initialize+0x54>)
 8000878:	682a      	ldr	r2, [r5, #0]
 800087a:	b94a      	cbnz	r2, 8000890 <SD_initialize+0x4c>
      SDQueueID = osMessageQueueNew(QUEUE_SIZE, 2, NULL);
 800087c:	2102      	movs	r1, #2
 800087e:	200a      	movs	r0, #10
 8000880:	f00c fa2e 	bl	800cce0 <osMessageQueueNew>
 8000884:	6028      	str	r0, [r5, #0]
      if (SDQueueID == NULL)
 8000886:	b918      	cbnz	r0, 8000890 <SD_initialize+0x4c>
        Stat |= STA_NOINIT;
 8000888:	7823      	ldrb	r3, [r4, #0]
 800088a:	f043 0301 	orr.w	r3, r3, #1
 800088e:	7023      	strb	r3, [r4, #0]
  return Stat;
 8000890:	7820      	ldrb	r0, [r4, #0]
}
 8000892:	bd38      	pop	{r3, r4, r5, pc}
 8000894:	20000004 	.word	0x20000004
 8000898:	200001ac 	.word	0x200001ac

0800089c <BSP_SD_WriteCpltCallback>:
  * @brief Tx Transfer completed callbacks
  * @param hsd: SD handle
  * @retval None
  */
void BSP_SD_WriteCpltCallback(void)
{
 800089c:	b507      	push	{r0, r1, r2, lr}
   * is always called before any SD_Read()/SD_Write() call
   */
#if (osCMSIS < 0x20000U)
   osMessagePut(SDQueueID, WRITE_CPLT_MSG, 0);
#else
   const uint16_t msg = WRITE_CPLT_MSG;
 800089e:	2302      	movs	r3, #2
   osMessageQueuePut(SDQueueID, (const void *)&msg, NULL, 0);
 80008a0:	4806      	ldr	r0, [pc, #24]	; (80008bc <BSP_SD_WriteCpltCallback+0x20>)
   const uint16_t msg = WRITE_CPLT_MSG;
 80008a2:	f8ad 3006 	strh.w	r3, [sp, #6]
   osMessageQueuePut(SDQueueID, (const void *)&msg, NULL, 0);
 80008a6:	2300      	movs	r3, #0
 80008a8:	461a      	mov	r2, r3
 80008aa:	f10d 0106 	add.w	r1, sp, #6
 80008ae:	6800      	ldr	r0, [r0, #0]
 80008b0:	f00c fa51 	bl	800cd56 <osMessageQueuePut>
#endif
}
 80008b4:	b003      	add	sp, #12
 80008b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80008ba:	bf00      	nop
 80008bc:	200001ac 	.word	0x200001ac

080008c0 <BSP_SD_ReadCpltCallback>:
  * @brief Rx Transfer completed callbacks
  * @param hsd: SD handle
  * @retval None
  */
void BSP_SD_ReadCpltCallback(void)
{
 80008c0:	b507      	push	{r0, r1, r2, lr}
   * is always called before any SD_Read()/SD_Write() call
   */
#if (osCMSIS < 0x20000U)
   osMessagePut(SDQueueID, READ_CPLT_MSG, 0);
#else
   const uint16_t msg = READ_CPLT_MSG;
 80008c2:	2301      	movs	r3, #1
   osMessageQueuePut(SDQueueID, (const void *)&msg, NULL, 0);
 80008c4:	4806      	ldr	r0, [pc, #24]	; (80008e0 <BSP_SD_ReadCpltCallback+0x20>)
   const uint16_t msg = READ_CPLT_MSG;
 80008c6:	f8ad 3006 	strh.w	r3, [sp, #6]
   osMessageQueuePut(SDQueueID, (const void *)&msg, NULL, 0);
 80008ca:	2300      	movs	r3, #0
 80008cc:	461a      	mov	r2, r3
 80008ce:	f10d 0106 	add.w	r1, sp, #6
 80008d2:	6800      	ldr	r0, [r0, #0]
 80008d4:	f00c fa3f 	bl	800cd56 <osMessageQueuePut>
#endif
}
 80008d8:	b003      	add	sp, #12
 80008da:	f85d fb04 	ldr.w	pc, [sp], #4
 80008de:	bf00      	nop
 80008e0:	200001ac 	.word	0x200001ac

080008e4 <vApplicationStackOverflowHook>:
void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
{
   /* Run time stack overflow checking is performed if
   configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
   called if a stack overflow is detected. */
}
 80008e4:	4770      	bx	lr
	...

080008e8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80008e8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80008ea:	4b06      	ldr	r3, [pc, #24]	; (8000904 <SPI5_Write+0x1c>)
{
 80008ec:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	4805      	ldr	r0, [pc, #20]	; (8000908 <SPI5_Write+0x20>)
 80008f4:	2201      	movs	r2, #1
 80008f6:	f10d 0106 	add.w	r1, sp, #6
 80008fa:	f009 ffb3 	bl	800a864 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80008fe:	b003      	add	sp, #12
 8000900:	f85d fb04 	ldr.w	pc, [sp], #4
 8000904:	2000000c 	.word	0x2000000c
 8000908:	2000092c 	.word	0x2000092c

0800090c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800090c:	b508      	push	{r3, lr}
//		HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
	//Mount_SD("/");
  /* Infinite loop */
  for(;;)
  {
	  adcCurrent1++;
 800090e:	4c07      	ldr	r4, [pc, #28]	; (800092c <StartDefaultTask+0x20>)
	  if(adcCurrent1>1000) adcCurrent1 = 0;
 8000910:	2500      	movs	r5, #0
	  adcCurrent1++;
 8000912:	8823      	ldrh	r3, [r4, #0]
 8000914:	3301      	adds	r3, #1
 8000916:	b29b      	uxth	r3, r3
	  if(adcCurrent1>1000) adcCurrent1 = 0;
 8000918:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8

    osDelay(2000);
 800091c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
	  adcCurrent1++;
 8000920:	bf94      	ite	ls
 8000922:	8023      	strhls	r3, [r4, #0]
	  if(adcCurrent1>1000) adcCurrent1 = 0;
 8000924:	8025      	strhhi	r5, [r4, #0]
    osDelay(2000);
 8000926:	f00c f91f 	bl	800cb68 <osDelay>
	  adcCurrent1++;
 800092a:	e7f2      	b.n	8000912 <StartDefaultTask+0x6>
 800092c:	200001d8 	.word	0x200001d8

08000930 <StartClockTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartClockTask */
void StartClockTask(void *argument)
{
 8000930:	b508      	push	{r3, lr}
//	  if(HAL_RTC_GetTime(&hrtc, &Time, RTC_FORMAT_BIN) != HAL_OK){
//	  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
//	  }


	  HAL_RTC_GetTime(&hrtc, &RTC_Time, RTC_FORMAT_BIN);
 8000932:	4c0c      	ldr	r4, [pc, #48]	; (8000964 <StartClockTask+0x34>)
 8000934:	4d0c      	ldr	r5, [pc, #48]	; (8000968 <StartClockTask+0x38>)
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <StartClockTask+0x34>)
 8000938:	2200      	movs	r2, #0
 800093a:	4628      	mov	r0, r5
 800093c:	f009 f952 	bl	8009be4 <HAL_RTC_GetTime>
	  getTime.hour = RTC_Time.Hours;
 8000940:	490a      	ldr	r1, [pc, #40]	; (800096c <StartClockTask+0x3c>)
 8000942:	7823      	ldrb	r3, [r4, #0]
 8000944:	700b      	strb	r3, [r1, #0]
	  getTime.minute = RTC_Time.Minutes;
	  getTime.second = RTC_Time.Seconds;
	  osMessageQueuePut(getTimeQueueHandle, &getTime, 0, 20);
 8000946:	480a      	ldr	r0, [pc, #40]	; (8000970 <StartClockTask+0x40>)
	  getTime.minute = RTC_Time.Minutes;
 8000948:	7863      	ldrb	r3, [r4, #1]
 800094a:	704b      	strb	r3, [r1, #1]
	  getTime.second = RTC_Time.Seconds;
 800094c:	78a3      	ldrb	r3, [r4, #2]
 800094e:	708b      	strb	r3, [r1, #2]
	  osMessageQueuePut(getTimeQueueHandle, &getTime, 0, 20);
 8000950:	2200      	movs	r2, #0
 8000952:	2314      	movs	r3, #20
 8000954:	6800      	ldr	r0, [r0, #0]
 8000956:	f00c f9fe 	bl	800cd56 <osMessageQueuePut>
	  //Unmount_SD("/");
    osDelay(1000);
 800095a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800095e:	f00c f903 	bl	800cb68 <osDelay>
  for(;;)
 8000962:	e7e8      	b.n	8000936 <StartClockTask+0x6>
 8000964:	200001bc 	.word	0x200001bc
 8000968:	20000854 	.word	0x20000854
 800096c:	200006a8 	.word	0x200006a8
 8000970:	200006ac 	.word	0x200006ac

08000974 <StartSdTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartSdTask */
void StartSdTask(void *argument)
{
 8000974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000978:	f8df a124 	ldr.w	sl, [pc, #292]	; 8000aa0 <StartSdTask+0x12c>
  {
	  if(BSP_SD_IsDetected())
		  sdStatus = true;
	  else
		  sdStatus = false;
	  osMessageQueuePut(SdDetectQueueHandle, &sdStatus, 0, 10);
 800097c:	f8df b150 	ldr.w	fp, [pc, #336]	; 8000ad0 <StartSdTask+0x15c>

	  //taskENTER_CRITICAL();
	  if(f_mount(&fs, "/", 1) == FR_OK)
 8000980:	4e46      	ldr	r6, [pc, #280]	; (8000a9c <StartSdTask+0x128>)
{
 8000982:	b08f      	sub	sp, #60	; 0x3c
	  if(BSP_SD_IsDetected())
 8000984:	f7ff fe7f 	bl	8000686 <BSP_SD_IsDetected>
 8000988:	3800      	subs	r0, #0
 800098a:	bf18      	it	ne
 800098c:	2001      	movne	r0, #1
	  osMessageQueuePut(SdDetectQueueHandle, &sdStatus, 0, 10);
 800098e:	4944      	ldr	r1, [pc, #272]	; (8000aa0 <StartSdTask+0x12c>)
	  if(BSP_SD_IsDetected())
 8000990:	f88a 0000 	strb.w	r0, [sl]
	  osMessageQueuePut(SdDetectQueueHandle, &sdStatus, 0, 10);
 8000994:	230a      	movs	r3, #10
 8000996:	2200      	movs	r2, #0
 8000998:	f8db 0000 	ldr.w	r0, [fp]
 800099c:	4d41      	ldr	r5, [pc, #260]	; (8000aa4 <StartSdTask+0x130>)
 800099e:	f00c f9da 	bl	800cd56 <osMessageQueuePut>
	  if(f_mount(&fs, "/", 1) == FR_OK)
 80009a2:	4841      	ldr	r0, [pc, #260]	; (8000aa8 <StartSdTask+0x134>)
 80009a4:	2201      	movs	r2, #1
 80009a6:	4631      	mov	r1, r6
 80009a8:	f00b ff34 	bl	800c814 <f_mount>
 80009ac:	4604      	mov	r4, r0
 80009ae:	2800      	cmp	r0, #0
 80009b0:	d165      	bne.n	8000a7e <StartSdTask+0x10a>
	  {
		  strcpy(sdMessage.sdMsg, "SD Mount OKAY            ");
 80009b2:	493e      	ldr	r1, [pc, #248]	; (8000aac <StartSdTask+0x138>)
 80009b4:	483e      	ldr	r0, [pc, #248]	; (8000ab0 <StartSdTask+0x13c>)

		  f_opendir(&dir, "/");   // Open Root
		  uint8_t i = 0;
		  do
		  {
			  f_readdir(&dir, &fno);
 80009b6:	4f3f      	ldr	r7, [pc, #252]	; (8000ab4 <StartSdTask+0x140>)
			  if(fno.fname[0] != 0){
				  memset(sdMessage.sdMsg,0,sizeof(sdMessage.sdMsg));
 80009b8:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 8000ab0 <StartSdTask+0x13c>
		  strcpy(sdMessage.sdMsg, "SD Mount OKAY            ");
 80009bc:	f027 fbd5 	bl	802816a <strcpy>
		  osMessageQueuePut(sdMsgQueueHandle, &sdMessage, 0, 10);
 80009c0:	493b      	ldr	r1, [pc, #236]	; (8000ab0 <StartSdTask+0x13c>)
 80009c2:	6828      	ldr	r0, [r5, #0]
 80009c4:	230a      	movs	r3, #10
 80009c6:	4622      	mov	r2, r4
 80009c8:	f00c f9c5 	bl	800cd56 <osMessageQueuePut>
		  f_opendir(&dir, "/");   // Open Root
 80009cc:	4631      	mov	r1, r6
 80009ce:	a801      	add	r0, sp, #4
 80009d0:	f00b ff60 	bl	800c894 <f_opendir>
				  strcpy(sdMessage.sdMsg, fno.fname);
 80009d4:	f107 0916 	add.w	r9, r7, #22
			  f_readdir(&dir, &fno);
 80009d8:	4936      	ldr	r1, [pc, #216]	; (8000ab4 <StartSdTask+0x140>)
 80009da:	a801      	add	r0, sp, #4
 80009dc:	f00b ffbb 	bl	800c956 <f_readdir>
			  if(fno.fname[0] != 0){
 80009e0:	7dbb      	ldrb	r3, [r7, #22]
 80009e2:	b303      	cbz	r3, 8000a26 <StartSdTask+0xb2>
				  memset(sdMessage.sdMsg,0,sizeof(sdMessage.sdMsg));
 80009e4:	221e      	movs	r2, #30
 80009e6:	2100      	movs	r1, #0
 80009e8:	4640      	mov	r0, r8
 80009ea:	f026 fee7 	bl	80277bc <memset>
				  strcpy(sdMessage.sdMsg, fno.fname);
 80009ee:	4649      	mov	r1, r9
 80009f0:	4640      	mov	r0, r8
 80009f2:	f027 fbba 	bl	802816a <strcpy>
				  osMessageQueuePut(sdMsgQueueHandle, &sdMessage, 0, 10);
 80009f6:	230a      	movs	r3, #10
 80009f8:	2200      	movs	r2, #0
 80009fa:	4641      	mov	r1, r8
 80009fc:	6828      	ldr	r0, [r5, #0]
 80009fe:	f00c f9aa 	bl	800cd56 <osMessageQueuePut>
				  strcpy(fileList.file[i], fno.fname);
 8000a02:	b220      	sxth	r0, r4
 8000a04:	4b2c      	ldr	r3, [pc, #176]	; (8000ab8 <StartSdTask+0x144>)
 8000a06:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8000a0a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8000a0e:	4418      	add	r0, r3
 8000a10:	4649      	mov	r1, r9
 8000a12:	f027 fbaa 	bl	802816a <strcpy>
				  fileList.NoOfFile = i + 1;
 8000a16:	3401      	adds	r4, #1
 8000a18:	4b27      	ldr	r3, [pc, #156]	; (8000ab8 <StartSdTask+0x144>)
 8000a1a:	b2e4      	uxtb	r4, r4
 8000a1c:	f883 4177 	strb.w	r4, [r3, #375]	; 0x177
				  i++;
			  }
		  } while(fno.fname[0] != 0);
 8000a20:	7dbb      	ldrb	r3, [r7, #22]
 8000a22:	2b00      	cmp	r3, #0
 8000a24:	d1d8      	bne.n	80009d8 <StartSdTask+0x64>
		  f_closedir(&dir);
 8000a26:	a801      	add	r0, sp, #4
 8000a28:	f00b ff7e 	bl	800c928 <f_closedir>
		  osMessageQueuePut(sdFileQueueHandle, &fileList, 0, 100);
 8000a2c:	4823      	ldr	r0, [pc, #140]	; (8000abc <StartSdTask+0x148>)
 8000a2e:	4922      	ldr	r1, [pc, #136]	; (8000ab8 <StartSdTask+0x144>)
 8000a30:	6800      	ldr	r0, [r0, #0]
 8000a32:	2364      	movs	r3, #100	; 0x64
 8000a34:	2200      	movs	r2, #0
 8000a36:	f00c f98e 	bl	800cd56 <osMessageQueuePut>
//			  //				if (fresult == FR_OK){
//			  //					msg = "SD Unmounted Successfully ";
//			  //					osMessageQueuePut(sdMsgQueueHandle, &sdMessage, 0, 10);
//			  //				}
//		  }
		  f_closedir(&dir);
 8000a3a:	a801      	add	r0, sp, #4
 8000a3c:	f00b ff74 	bl	800c928 <f_closedir>
		  msg = "SD Mount ERROR ";
		  strcpy(sdMessage.sdMsg, "SD Mount ERROR           ");
		  osMessageQueuePut(sdMsgQueueHandle, &sdMessage, 0, 10);
	  }
	  //	  //taskEXIT_CRITICAL();
	  osDelay(1000);
 8000a40:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a44:	f00c f890 	bl	800cb68 <osDelay>
	  if(f_mount(NULL, "/", 1) == FR_OK){
 8000a48:	2201      	movs	r2, #1
 8000a4a:	4631      	mov	r1, r6
 8000a4c:	2000      	movs	r0, #0
 8000a4e:	f00b fee1 	bl	800c814 <f_mount>
 8000a52:	4604      	mov	r4, r0
 8000a54:	b970      	cbnz	r0, 8000a74 <StartSdTask+0x100>
		  memset(sdMessage.sdMsg,0,sizeof(sdMessage.sdMsg));
 8000a56:	221e      	movs	r2, #30
 8000a58:	4601      	mov	r1, r0
 8000a5a:	4815      	ldr	r0, [pc, #84]	; (8000ab0 <StartSdTask+0x13c>)
 8000a5c:	f026 feae 	bl	80277bc <memset>
		  strcpy(sdMessage.sdMsg, "SD UnMounted   ");
 8000a60:	4917      	ldr	r1, [pc, #92]	; (8000ac0 <StartSdTask+0x14c>)
 8000a62:	4813      	ldr	r0, [pc, #76]	; (8000ab0 <StartSdTask+0x13c>)
 8000a64:	f027 fb81 	bl	802816a <strcpy>
		  osMessageQueuePut(sdMsgQueueHandle, &sdMessage, 0, 10);
 8000a68:	4911      	ldr	r1, [pc, #68]	; (8000ab0 <StartSdTask+0x13c>)
 8000a6a:	6828      	ldr	r0, [r5, #0]
 8000a6c:	230a      	movs	r3, #10
 8000a6e:	4622      	mov	r2, r4
 8000a70:	f00c f971 	bl	800cd56 <osMessageQueuePut>
	  }
	  osDelay(1000);
 8000a74:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a78:	f00c f876 	bl	800cb68 <osDelay>
	  if(BSP_SD_IsDetected())
 8000a7c:	e782      	b.n	8000984 <StartSdTask+0x10>
		  msg = "SD Mount ERROR ";
 8000a7e:	4b11      	ldr	r3, [pc, #68]	; (8000ac4 <StartSdTask+0x150>)
 8000a80:	4a11      	ldr	r2, [pc, #68]	; (8000ac8 <StartSdTask+0x154>)
		  strcpy(sdMessage.sdMsg, "SD Mount ERROR           ");
 8000a82:	4912      	ldr	r1, [pc, #72]	; (8000acc <StartSdTask+0x158>)
 8000a84:	480a      	ldr	r0, [pc, #40]	; (8000ab0 <StartSdTask+0x13c>)
		  msg = "SD Mount ERROR ";
 8000a86:	601a      	str	r2, [r3, #0]
		  strcpy(sdMessage.sdMsg, "SD Mount ERROR           ");
 8000a88:	f027 fb6f 	bl	802816a <strcpy>
		  osMessageQueuePut(sdMsgQueueHandle, &sdMessage, 0, 10);
 8000a8c:	4908      	ldr	r1, [pc, #32]	; (8000ab0 <StartSdTask+0x13c>)
 8000a8e:	6828      	ldr	r0, [r5, #0]
 8000a90:	230a      	movs	r3, #10
 8000a92:	2200      	movs	r2, #0
 8000a94:	f00c f95f 	bl	800cd56 <osMessageQueuePut>
 8000a98:	e7d2      	b.n	8000a40 <StartSdTask+0xcc>
 8000a9a:	bf00      	nop
 8000a9c:	08028764 	.word	0x08028764
 8000aa0:	20000c10 	.word	0x20000c10
 8000aa4:	20000c0c 	.word	0x20000c0c
 8000aa8:	20000470 	.word	0x20000470
 8000aac:	08028766 	.word	0x08028766
 8000ab0:	20000010 	.word	0x20000010
 8000ab4:	20000358 	.word	0x20000358
 8000ab8:	200001e0 	.word	0x200001e0
 8000abc:	20000b98 	.word	0x20000b98
 8000ac0:	080287aa 	.word	0x080287aa
 8000ac4:	200009c8 	.word	0x200009c8
 8000ac8:	08028780 	.word	0x08028780
 8000acc:	08028790 	.word	0x08028790
 8000ad0:	200001d0 	.word	0x200001d0

08000ad4 <StartSetClockTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartSetClockTask */
void StartSetClockTask(void *argument)
{
 8000ad4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  /* USER CODE BEGIN StartSetClockTask */
	RTC_TimeTypeDef RTC_setTime = {0};
 8000ad6:	2214      	movs	r2, #20
 8000ad8:	2100      	movs	r1, #0
 8000ada:	a801      	add	r0, sp, #4
 8000adc:	f026 fe6e 	bl	80277bc <memset>
  /* Infinite loop */
  for(;;)
  {
	  if(osMessageQueueGet(setTimeQueueHandle, &setTime, 0, osWaitForever) == osOK)
 8000ae0:	4c0c      	ldr	r4, [pc, #48]	; (8000b14 <StartSetClockTask+0x40>)
 8000ae2:	4d0d      	ldr	r5, [pc, #52]	; (8000b18 <StartSetClockTask+0x44>)
 8000ae4:	490b      	ldr	r1, [pc, #44]	; (8000b14 <StartSetClockTask+0x40>)
 8000ae6:	6828      	ldr	r0, [r5, #0]
 8000ae8:	2200      	movs	r2, #0
 8000aea:	f04f 33ff 	mov.w	r3, #4294967295
 8000aee:	f00c f962 	bl	800cdb6 <osMessageQueueGet>
 8000af2:	4602      	mov	r2, r0
 8000af4:	2800      	cmp	r0, #0
 8000af6:	d1f5      	bne.n	8000ae4 <StartSetClockTask+0x10>
	  {
		  //HAL_RTCEx_DisableBypassShadow(&hrtc);
		  RTC_setTime.Hours = setTime.hour;
 8000af8:	7823      	ldrb	r3, [r4, #0]
 8000afa:	f88d 3004 	strb.w	r3, [sp, #4]
		  RTC_setTime.Minutes = setTime.minute;
 8000afe:	7863      	ldrb	r3, [r4, #1]
 8000b00:	f88d 3005 	strb.w	r3, [sp, #5]
		  RTC_setTime.Seconds = setTime.second;
		  if(HAL_RTC_SetTime(&hrtc, &RTC_setTime, RTC_FORMAT_BIN) != HAL_OK)
 8000b04:	a901      	add	r1, sp, #4
		  RTC_setTime.Seconds = setTime.second;
 8000b06:	78a3      	ldrb	r3, [r4, #2]
		  if(HAL_RTC_SetTime(&hrtc, &RTC_setTime, RTC_FORMAT_BIN) != HAL_OK)
 8000b08:	4804      	ldr	r0, [pc, #16]	; (8000b1c <StartSetClockTask+0x48>)
		  RTC_setTime.Seconds = setTime.second;
 8000b0a:	f88d 3006 	strb.w	r3, [sp, #6]
		  if(HAL_RTC_SetTime(&hrtc, &RTC_setTime, RTC_FORMAT_BIN) != HAL_OK)
 8000b0e:	f009 f804 	bl	8009b1a <HAL_RTC_SetTime>
 8000b12:	e7e7      	b.n	8000ae4 <StartSetClockTask+0x10>
 8000b14:	20000c18 	.word	0x20000c18
 8000b18:	20000c1c 	.word	0x20000c1c
 8000b1c:	20000854 	.word	0x20000854

08000b20 <SystemClock_Config>:
{
 8000b20:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b22:	2400      	movs	r4, #0
{
 8000b24:	b094      	sub	sp, #80	; 0x50
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b26:	4621      	mov	r1, r4
 8000b28:	2214      	movs	r2, #20
 8000b2a:	a803      	add	r0, sp, #12
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b2c:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000b30:	940c      	str	r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b32:	f026 fe43 	bl	80277bc <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b36:	4b1e      	ldr	r3, [pc, #120]	; (8000bb0 <SystemClock_Config+0x90>)
 8000b38:	9401      	str	r4, [sp, #4]
 8000b3a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000b3c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000b40:	641a      	str	r2, [r3, #64]	; 0x40
 8000b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b44:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b48:	9301      	str	r3, [sp, #4]
 8000b4a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b4c:	4b19      	ldr	r3, [pc, #100]	; (8000bb4 <SystemClock_Config+0x94>)
 8000b4e:	9402      	str	r4, [sp, #8]
 8000b50:	681a      	ldr	r2, [r3, #0]
 8000b52:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000b56:	601a      	str	r2, [r3, #0]
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000b5e:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000b60:	2209      	movs	r2, #9
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b62:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000b64:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000b68:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000b6c:	2502      	movs	r5, #2
 8000b6e:	2301      	movs	r3, #1
 8000b70:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000b74:	2604      	movs	r6, #4
 8000b76:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000b7a:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 144;
 8000b7e:	2390      	movs	r3, #144	; 0x90
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b80:	e9cd 3511 	strd	r3, r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b84:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 6;
 8000b86:	2306      	movs	r3, #6
 8000b88:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b8a:	f008 fb49 	bl	8009220 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b8e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b90:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b94:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8000b98:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b9c:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000ba0:	a803      	add	r0, sp, #12
 8000ba2:	4631      	mov	r1, r6
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ba4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000ba6:	f008 fd19 	bl	80095dc <HAL_RCC_ClockConfig>
}
 8000baa:	b014      	add	sp, #80	; 0x50
 8000bac:	bd70      	pop	{r4, r5, r6, pc}
 8000bae:	bf00      	nop
 8000bb0:	40023800 	.word	0x40023800
 8000bb4:	40007000 	.word	0x40007000

08000bb8 <main>:
{
 8000bb8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8000bbc:	b09b      	sub	sp, #108	; 0x6c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000bbe:	2400      	movs	r4, #0
 8000bc0:	4dc7      	ldr	r5, [pc, #796]	; (8000ee0 <main+0x328>)
  hi2c3.Instance = I2C3;
 8000bc2:	4fc8      	ldr	r7, [pc, #800]	; (8000ee4 <main+0x32c>)
  HAL_Init();
 8000bc4:	f007 f8f0 	bl	8007da8 <HAL_Init>
  SystemClock_Config();
 8000bc8:	f7ff ffaa 	bl	8000b20 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bcc:	2214      	movs	r2, #20
 8000bce:	2100      	movs	r1, #0
 8000bd0:	a80d      	add	r0, sp, #52	; 0x34
 8000bd2:	f026 fdf3 	bl	80277bc <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000bd6:	9400      	str	r4, [sp, #0]
 8000bd8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000bda:	48c3      	ldr	r0, [pc, #780]	; (8000ee8 <main+0x330>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000bdc:	f043 0310 	orr.w	r3, r3, #16
 8000be0:	632b      	str	r3, [r5, #48]	; 0x30
 8000be2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000be4:	f003 0310 	and.w	r3, r3, #16
 8000be8:	9300      	str	r3, [sp, #0]
 8000bea:	9b00      	ldr	r3, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000bec:	9401      	str	r4, [sp, #4]
 8000bee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000bf0:	f043 0320 	orr.w	r3, r3, #32
 8000bf4:	632b      	str	r3, [r5, #48]	; 0x30
 8000bf6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000bf8:	f003 0320 	and.w	r3, r3, #32
 8000bfc:	9301      	str	r3, [sp, #4]
 8000bfe:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c00:	9402      	str	r4, [sp, #8]
 8000c02:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c08:	632b      	str	r3, [r5, #48]	; 0x30
 8000c0a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c0c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c10:	9302      	str	r3, [sp, #8]
 8000c12:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c14:	9403      	str	r4, [sp, #12]
 8000c16:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c18:	f043 0304 	orr.w	r3, r3, #4
 8000c1c:	632b      	str	r3, [r5, #48]	; 0x30
 8000c1e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c20:	f003 0304 	and.w	r3, r3, #4
 8000c24:	9303      	str	r3, [sp, #12]
 8000c26:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c28:	9404      	str	r4, [sp, #16]
 8000c2a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c2c:	f043 0301 	orr.w	r3, r3, #1
 8000c30:	632b      	str	r3, [r5, #48]	; 0x30
 8000c32:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c34:	f003 0301 	and.w	r3, r3, #1
 8000c38:	9304      	str	r3, [sp, #16]
 8000c3a:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c3c:	9405      	str	r4, [sp, #20]
 8000c3e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c40:	f043 0302 	orr.w	r3, r3, #2
 8000c44:	632b      	str	r3, [r5, #48]	; 0x30
 8000c46:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c48:	f003 0302 	and.w	r3, r3, #2
 8000c4c:	9305      	str	r3, [sp, #20]
 8000c4e:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000c50:	9406      	str	r4, [sp, #24]
 8000c52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c58:	632b      	str	r3, [r5, #48]	; 0x30
 8000c5a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c5c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000c60:	9306      	str	r3, [sp, #24]
 8000c62:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c64:	9407      	str	r4, [sp, #28]
 8000c66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c68:	f043 0308 	orr.w	r3, r3, #8
 8000c6c:	632b      	str	r3, [r5, #48]	; 0x30
 8000c6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000c70:	f003 0308 	and.w	r3, r3, #8
 8000c74:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000c76:	4622      	mov	r2, r4
 8000c78:	213c      	movs	r1, #60	; 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c7a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8000c7c:	f007 fcc0 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c80:	489a      	ldr	r0, [pc, #616]	; (8000eec <main+0x334>)
 8000c82:	4622      	mov	r2, r4
 8000c84:	2104      	movs	r1, #4
 8000c86:	f007 fcbb 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c8a:	4899      	ldr	r0, [pc, #612]	; (8000ef0 <main+0x338>)
 8000c8c:	4622      	mov	r2, r4
 8000c8e:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c92:	f007 fcb5 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8000c96:	4622      	mov	r2, r4
 8000c98:	4896      	ldr	r0, [pc, #600]	; (8000ef4 <main+0x33c>)
 8000c9a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c9e:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8000ca0:	f007 fcae 	bl	8008600 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ca4:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ca8:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000caa:	488f      	ldr	r0, [pc, #572]	; (8000ee8 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cac:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cae:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cb0:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000cb4:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cb8:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cbc:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000cc0:	f007 fbb2 	bl	8008428 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cc4:	4889      	ldr	r0, [pc, #548]	; (8000eec <main+0x334>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc6:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cc8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cca:	e9cd a60d 	strd	sl, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cce:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cd2:	f007 fba9 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000cd6:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cda:	4887      	ldr	r0, [pc, #540]	; (8000ef8 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000cdc:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cde:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce0:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ce4:	f007 fba0 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000ce8:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cec:	4880      	ldr	r0, [pc, #512]	; (8000ef0 <main+0x338>)
 8000cee:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000cf0:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cf4:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cf8:	e9cd 480f 	strd	r4, r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfc:	f007 fb94 	bl	8008428 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d00:	487b      	ldr	r0, [pc, #492]	; (8000ef0 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d02:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d04:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d06:	e9cd b40d 	strd	fp, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0a:	f007 fb8d 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LD3_Pin;
 8000d0e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8000d12:	4878      	ldr	r0, [pc, #480]	; (8000ef4 <main+0x33c>)
 8000d14:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d16:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8000d1e:	f007 fb83 	bl	8008428 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 8000d22:	2105      	movs	r1, #5
 8000d24:	4622      	mov	r2, r4
 8000d26:	2006      	movs	r0, #6
 8000d28:	f007 f890 	bl	8007e4c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8000d2c:	2006      	movs	r0, #6
 8000d2e:	f007 f8bf 	bl	8007eb0 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d32:	4872      	ldr	r0, [pc, #456]	; (8000efc <main+0x344>)
 8000d34:	4a72      	ldr	r2, [pc, #456]	; (8000f00 <main+0x348>)
 8000d36:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d38:	f007 f8c8 	bl	8007ecc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d3c:	4b71      	ldr	r3, [pc, #452]	; (8000f04 <main+0x34c>)
 8000d3e:	4a72      	ldr	r2, [pc, #456]	; (8000f08 <main+0x350>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d40:	623c      	str	r4, [r7, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8000d42:	e9c7 3200 	strd	r3, r2, [r7]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d46:	4638      	mov	r0, r7
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d48:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000d4c:	e9c7 2404 	strd	r2, r4, [r7, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d50:	e9c7 4402 	strd	r4, r4, [r7, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000d54:	e9c7 4406 	strd	r4, r4, [r7, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d58:	f007 fe48 	bl	80089ec <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d5c:	4659      	mov	r1, fp
 8000d5e:	4638      	mov	r0, r7
 8000d60:	f008 f884 	bl	8008e6c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d64:	4621      	mov	r1, r4
 8000d66:	4638      	mov	r0, r7
 8000d68:	f008 f89f 	bl	8008eaa <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8000d6c:	4867      	ldr	r0, [pc, #412]	; (8000f0c <main+0x354>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d6e:	4968      	ldr	r1, [pc, #416]	; (8000f10 <main+0x358>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d70:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d72:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000d76:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d7a:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000d7e:	2218      	movs	r2, #24
 8000d80:	e9c0 7206 	strd	r7, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d84:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d86:	4f63      	ldr	r7, [pc, #396]	; (8000f14 <main+0x35c>)
  hspi5.Init.CRCPolynomial = 10;
 8000d88:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d8a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d8e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d92:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000d96:	f009 fd09 	bl	800a7ac <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d9a:	4a5f      	ldr	r2, [pc, #380]	; (8000f18 <main+0x360>)
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000d9c:	f8c7 b010 	str.w	fp, [r7, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000da0:	f04f 0c40 	mov.w	ip, #64	; 0x40
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8000da4:	e9c7 2600 	strd	r2, r6, [r7]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000da8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000dac:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000db0:	e9c7 c205 	strd	ip, r2, [r7, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000db4:	62bb      	str	r3, [r7, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000db6:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000dba:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dbc:	a90d      	add	r1, sp, #52	; 0x34
 8000dbe:	4638      	mov	r0, r7
  SdramTiming.SelfRefreshTime = 4;
 8000dc0:	e9cd 3a0e 	strd	r3, sl, [sp, #56]	; 0x38
  SdramTiming.WriteRecoveryTime = 3;
 8000dc4:	e9cd 3910 	strd	r3, r9, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dc8:	f04f 0b08 	mov.w	fp, #8
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dcc:	e9c7 2408 	strd	r2, r4, [r7, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000dd0:	e9c7 4a02 	strd	r4, sl, [r7, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dd4:	61fc      	str	r4, [r7, #28]
  SdramTiming.RCDDelay = 2;
 8000dd6:	e9cd 8812 	strd	r8, r8, [sp, #72]	; 0x48
  SdramTiming.LoadToActiveDelay = 2;
 8000dda:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dde:	f009 fbe5 	bl	800a5ac <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000de6:	a909      	add	r1, sp, #36	; 0x24
 8000de8:	4638      	mov	r0, r7
  Command->AutoRefreshNumber       = 1;
 8000dea:	e9cd b60a 	strd	fp, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8000dee:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8000df0:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8000df2:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000df4:	f009 fbfa 	bl	800a5ec <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000df8:	4630      	mov	r0, r6
 8000dfa:	f007 f801 	bl	8007e00 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e02:	a909      	add	r1, sp, #36	; 0x24
 8000e04:	4638      	mov	r0, r7
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e06:	e9cd 8b09 	strd	r8, fp, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8000e0a:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e0e:	f009 fbed 	bl	800a5ec <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e12:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e16:	a909      	add	r1, sp, #36	; 0x24
 8000e18:	4638      	mov	r0, r7
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e1a:	e9cd 9b09 	strd	r9, fp, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8000e1e:	e9cd a40b 	strd	sl, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e22:	f009 fbe3 	bl	800a5ec <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e26:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000e2a:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e2c:	9b08      	ldr	r3, [sp, #32]
 8000e2e:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e30:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e34:	a909      	add	r1, sp, #36	; 0x24
 8000e36:	4638      	mov	r0, r7
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e38:	e9cd ab09 	strd	sl, fp, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8000e3c:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e3e:	f009 fbd5 	bl	800a5ec <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e42:	f240 516a 	movw	r1, #1386	; 0x56a
 8000e46:	4638      	mov	r0, r7
 8000e48:	f009 fbee 	bl	800a628 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e4c:	2234      	movs	r2, #52	; 0x34
 8000e4e:	4621      	mov	r1, r4
 8000e50:	eb0d 0002 	add.w	r0, sp, r2
 8000e54:	f026 fcb2 	bl	80277bc <memset>
  hltdc.Instance = LTDC;
 8000e58:	4f30      	ldr	r7, [pc, #192]	; (8000f1c <main+0x364>)
 8000e5a:	4b31      	ldr	r3, [pc, #196]	; (8000f20 <main+0x368>)
  hltdc.Init.Backcolor.Blue = 0;
 8000e5c:	86bc      	strh	r4, [r7, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000e5e:	e9c7 3400 	strd	r3, r4, [r7]
  hltdc.Init.HorizontalSync = 9;
 8000e62:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8000e64:	e9c7 3605 	strd	r3, r6, [r7, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000e68:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 8000e6a:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8000e6e:	e9c7 3907 	strd	r3, r9, [r7, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e72:	f240 1343 	movw	r3, #323	; 0x143
 8000e76:	e9c7 e309 	strd	lr, r3, [r7, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000e7a:	f240 1b17 	movw	fp, #279	; 0x117
 8000e7e:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000e82:	4638      	mov	r0, r7
  hltdc.Init.TotalHeigh = 327;
 8000e84:	e9c7 b30b 	strd	fp, r3, [r7, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000e88:	e9c7 4402 	strd	r4, r4, [r7, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000e8c:	613c      	str	r4, [r7, #16]
  hltdc.Init.Backcolor.Red = 0;
 8000e8e:	f887 4036 	strb.w	r4, [r7, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000e92:	f008 f8af 	bl	8008ff4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8000e96:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8000e98:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8000e9a:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000e9e:	f04f 0b05 	mov.w	fp, #5
 8000ea2:	f44f 6180 	mov.w	r1, #1024	; 0x400
  pLayerCfg.WindowY1 = 320;
 8000ea6:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8000eaa:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000eae:	e9cd 1b14 	strd	r1, fp, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 8000eb2:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000eb6:	a90d      	add	r1, sp, #52	; 0x34
 8000eb8:	4622      	mov	r2, r4
 8000eba:	4638      	mov	r0, r7
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ebc:	e9cd 3810 	strd	r3, r8, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 8000ec0:	4f18      	ldr	r7, [pc, #96]	; (8000f24 <main+0x36c>)
  pLayerCfg.ImageHeight = 320;
 8000ec2:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8000ec4:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8000ec6:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8000eca:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ece:	f008 f95c 	bl	800918a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000ed2:	4b15      	ldr	r3, [pc, #84]	; (8000f28 <main+0x370>)
 8000ed4:	603b      	str	r3, [r7, #0]
  LcdDrv->Init();
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000eda:	683b      	ldr	r3, [r7, #0]
 8000edc:	e026      	b.n	8000f2c <main+0x374>
 8000ede:	bf00      	nop
 8000ee0:	40023800 	.word	0x40023800
 8000ee4:	20000758 	.word	0x20000758
 8000ee8:	40021000 	.word	0x40021000
 8000eec:	40020800 	.word	0x40020800
 8000ef0:	40020c00 	.word	0x40020c00
 8000ef4:	40021800 	.word	0x40021800
 8000ef8:	40020000 	.word	0x40020000
 8000efc:	200006b0 	.word	0x200006b0
 8000f00:	40023000 	.word	0x40023000
 8000f04:	40005c00 	.word	0x40005c00
 8000f08:	000186a0 	.word	0x000186a0
 8000f0c:	2000092c 	.word	0x2000092c
 8000f10:	40015000 	.word	0x40015000
 8000f14:	200008f8 	.word	0x200008f8
 8000f18:	a0000140 	.word	0xa0000140
 8000f1c:	200007ac 	.word	0x200007ac
 8000f20:	40016800 	.word	0x40016800
 8000f24:	200001b8 	.word	0x200001b8
 8000f28:	20000038 	.word	0x20000038
  hdma2d.Instance = DMA2D;
 8000f2c:	4f57      	ldr	r7, [pc, #348]	; (800108c <main+0x4d4>)
  LcdDrv->DisplayOff();
 8000f2e:	68db      	ldr	r3, [r3, #12]
 8000f30:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8000f32:	4b57      	ldr	r3, [pc, #348]	; (8001090 <main+0x4d8>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8000f34:	e9c7 480a 	strd	r4, r8, [r7, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000f38:	e9c7 440c 	strd	r4, r4, [r7, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000f3c:	4638      	mov	r0, r7
  hdma2d.Init.Mode = DMA2D_M2M;
 8000f3e:	e9c7 3400 	strd	r3, r4, [r7]
  hdma2d.Init.OutputOffset = 0;
 8000f42:	e9c7 8402 	strd	r8, r4, [r7, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000f46:	f007 f973 	bl	8008230 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000f4a:	4631      	mov	r1, r6
 8000f4c:	4638      	mov	r0, r7
 8000f4e:	f007 fa27 	bl	80083a0 <HAL_DMA2D_ConfigLayer>
  hsd.Instance = SDIO;
 8000f52:	4b50      	ldr	r3, [pc, #320]	; (8001094 <main+0x4dc>)
 8000f54:	4a50      	ldr	r2, [pc, #320]	; (8001098 <main+0x4e0>)
  hsd.Init.ClockDiv = 4;
 8000f56:	f8c3 a018 	str.w	sl, [r3, #24]
  hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 8000f5a:	e9c3 2400 	strd	r2, r4, [r3]
  hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 8000f5e:	e9c3 4402 	strd	r4, r4, [r3, #8]
  hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 8000f62:	e9c3 4404 	strd	r4, r4, [r3, #16]
  MX_FATFS_Init();
 8000f66:	f7ff fb47 	bl	80005f8 <MX_FATFS_Init>
  huart1.Instance = USART1;
 8000f6a:	484c      	ldr	r0, [pc, #304]	; (800109c <main+0x4e4>)
  huart1.Init.BaudRate = 115200;
 8000f6c:	4a4c      	ldr	r2, [pc, #304]	; (80010a0 <main+0x4e8>)
  huart1.Init.Parity = UART_PARITY_NONE;
 8000f6e:	6104      	str	r4, [r0, #16]
  huart1.Init.BaudRate = 115200;
 8000f70:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000f74:	e9c0 2300 	strd	r2, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000f78:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000f7a:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000f7e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000f82:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000f84:	f00a f888 	bl	800b098 <HAL_UART_Init>
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000f88:	940d      	str	r4, [sp, #52]	; 0x34
 8000f8a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8000f8c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000f90:	632b      	str	r3, [r5, #48]	; 0x30
 8000f92:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  hrtc.Instance = RTC;
 8000f94:	4d43      	ldr	r5, [pc, #268]	; (80010a4 <main+0x4ec>)
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000f96:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 8000f9a:	4622      	mov	r2, r4
 8000f9c:	4659      	mov	r1, fp
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000f9e:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 8000fa0:	203b      	movs	r0, #59	; 0x3b
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000fa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 5, 0);
 8000fa4:	f006 ff52 	bl	8007e4c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8000fa8:	203b      	movs	r0, #59	; 0x3b
 8000faa:	f006 ff81 	bl	8007eb0 <HAL_NVIC_EnableIRQ>
  hrtc.Instance = RTC;
 8000fae:	4b3e      	ldr	r3, [pc, #248]	; (80010a8 <main+0x4f0>)
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8000fb0:	61ac      	str	r4, [r5, #24]
  hrtc.Init.SynchPrediv = 249;
 8000fb2:	217f      	movs	r1, #127	; 0x7f
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8000fb4:	e9c5 3400 	strd	r3, r4, [r5]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8000fb8:	4628      	mov	r0, r5
  hrtc.Init.SynchPrediv = 249;
 8000fba:	23f9      	movs	r3, #249	; 0xf9
 8000fbc:	e9c5 1302 	strd	r1, r3, [r5, #8]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8000fc0:	e9c5 4404 	strd	r4, r4, [r5, #16]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8000fc4:	f008 fd5b 	bl	8009a7e <HAL_RTC_Init>
  HAL_RTCEx_EnableBypassShadow(&hrtc);
 8000fc8:	4628      	mov	r0, r5
 8000fca:	f008 fe2e 	bl	8009c2a <HAL_RTCEx_EnableBypassShadow>
  RTC_Time.Hours = 18;
 8000fce:	4937      	ldr	r1, [pc, #220]	; (80010ac <main+0x4f4>)
 8000fd0:	f643 0312 	movw	r3, #14354	; 0x3812
 8000fd4:	800b      	strh	r3, [r1, #0]
  if(HAL_RTC_SetTime(&hrtc, &RTC_Time, RTC_FORMAT_BIN) != HAL_OK)
 8000fd6:	4622      	mov	r2, r4
 8000fd8:	4628      	mov	r0, r5
  RTC_Time.Seconds = 00;
 8000fda:	708c      	strb	r4, [r1, #2]
  if(HAL_RTC_SetTime(&hrtc, &RTC_Time, RTC_FORMAT_BIN) != HAL_OK)
 8000fdc:	f008 fd9d 	bl	8009b1a <HAL_RTC_SetTime>
  MX_TouchGFX_Init();
 8000fe0:	f000 fd4a 	bl	8001a78 <MX_TouchGFX_Init>
  osKernelInitialize();
 8000fe4:	f00b fd34 	bl	800ca50 <osKernelInitialize>
  myBinarySem01Handle = osSemaphoreNew(1, 1, &myBinarySem01_attributes);
 8000fe8:	4a31      	ldr	r2, [pc, #196]	; (80010b0 <main+0x4f8>)
 8000fea:	4631      	mov	r1, r6
 8000fec:	4630      	mov	r0, r6
 8000fee:	f00b fdc7 	bl	800cb80 <osSemaphoreNew>
 8000ff2:	4b30      	ldr	r3, [pc, #192]	; (80010b4 <main+0x4fc>)
  SdDetectQueueHandle = osMessageQueueNew (1, sizeof(uint8_t), &SdDetectQueue_attributes);
 8000ff4:	4a30      	ldr	r2, [pc, #192]	; (80010b8 <main+0x500>)
  myBinarySem01Handle = osSemaphoreNew(1, 1, &myBinarySem01_attributes);
 8000ff6:	6018      	str	r0, [r3, #0]
  SdDetectQueueHandle = osMessageQueueNew (1, sizeof(uint8_t), &SdDetectQueue_attributes);
 8000ff8:	4631      	mov	r1, r6
 8000ffa:	4630      	mov	r0, r6
 8000ffc:	f00b fe70 	bl	800cce0 <osMessageQueueNew>
 8001000:	4b2e      	ldr	r3, [pc, #184]	; (80010bc <main+0x504>)
  setTimeQueueHandle = osMessageQueueNew (1, sizeof(Data), &setTimeQueue_attributes);
 8001002:	4a2f      	ldr	r2, [pc, #188]	; (80010c0 <main+0x508>)
  SdDetectQueueHandle = osMessageQueueNew (1, sizeof(uint8_t), &SdDetectQueue_attributes);
 8001004:	6018      	str	r0, [r3, #0]
  setTimeQueueHandle = osMessageQueueNew (1, sizeof(Data), &setTimeQueue_attributes);
 8001006:	4649      	mov	r1, r9
 8001008:	4630      	mov	r0, r6
 800100a:	f00b fe69 	bl	800cce0 <osMessageQueueNew>
 800100e:	4b2d      	ldr	r3, [pc, #180]	; (80010c4 <main+0x50c>)
  getTimeQueueHandle = osMessageQueueNew (1, sizeof(Data), &getTimeQueue_attributes);
 8001010:	4a2d      	ldr	r2, [pc, #180]	; (80010c8 <main+0x510>)
  setTimeQueueHandle = osMessageQueueNew (1, sizeof(Data), &setTimeQueue_attributes);
 8001012:	6018      	str	r0, [r3, #0]
  getTimeQueueHandle = osMessageQueueNew (1, sizeof(Data), &getTimeQueue_attributes);
 8001014:	4649      	mov	r1, r9
 8001016:	4630      	mov	r0, r6
 8001018:	f00b fe62 	bl	800cce0 <osMessageQueueNew>
 800101c:	4b2b      	ldr	r3, [pc, #172]	; (80010cc <main+0x514>)
  sdMsgQueueHandle = osMessageQueueNew (1, sizeof(SDmsg), &sdMsgQueue_attributes);
 800101e:	4a2c      	ldr	r2, [pc, #176]	; (80010d0 <main+0x518>)
  getTimeQueueHandle = osMessageQueueNew (1, sizeof(Data), &getTimeQueue_attributes);
 8001020:	6018      	str	r0, [r3, #0]
  sdMsgQueueHandle = osMessageQueueNew (1, sizeof(SDmsg), &sdMsgQueue_attributes);
 8001022:	211f      	movs	r1, #31
 8001024:	4630      	mov	r0, r6
 8001026:	f00b fe5b 	bl	800cce0 <osMessageQueueNew>
 800102a:	4b2a      	ldr	r3, [pc, #168]	; (80010d4 <main+0x51c>)
  sdFileQueueHandle = osMessageQueueNew (1, sizeof(FileList), &sdFileQueue_attributes);
 800102c:	4a2a      	ldr	r2, [pc, #168]	; (80010d8 <main+0x520>)
  sdMsgQueueHandle = osMessageQueueNew (1, sizeof(SDmsg), &sdMsgQueue_attributes);
 800102e:	6018      	str	r0, [r3, #0]
  sdFileQueueHandle = osMessageQueueNew (1, sizeof(FileList), &sdFileQueue_attributes);
 8001030:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8001034:	4630      	mov	r0, r6
 8001036:	f00b fe53 	bl	800cce0 <osMessageQueueNew>
 800103a:	4b28      	ldr	r3, [pc, #160]	; (80010dc <main+0x524>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800103c:	4a28      	ldr	r2, [pc, #160]	; (80010e0 <main+0x528>)
  sdFileQueueHandle = osMessageQueueNew (1, sizeof(FileList), &sdFileQueue_attributes);
 800103e:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001040:	4621      	mov	r1, r4
 8001042:	4828      	ldr	r0, [pc, #160]	; (80010e4 <main+0x52c>)
 8001044:	f00b fd47 	bl	800cad6 <osThreadNew>
 8001048:	4b27      	ldr	r3, [pc, #156]	; (80010e8 <main+0x530>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800104a:	4a28      	ldr	r2, [pc, #160]	; (80010ec <main+0x534>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800104c:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800104e:	4621      	mov	r1, r4
 8001050:	4827      	ldr	r0, [pc, #156]	; (80010f0 <main+0x538>)
 8001052:	f00b fd40 	bl	800cad6 <osThreadNew>
 8001056:	4b27      	ldr	r3, [pc, #156]	; (80010f4 <main+0x53c>)
  ClockTaskHandle = osThreadNew(StartClockTask, NULL, &ClockTask_attributes);
 8001058:	4a27      	ldr	r2, [pc, #156]	; (80010f8 <main+0x540>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800105a:	6018      	str	r0, [r3, #0]
  ClockTaskHandle = osThreadNew(StartClockTask, NULL, &ClockTask_attributes);
 800105c:	4621      	mov	r1, r4
 800105e:	4827      	ldr	r0, [pc, #156]	; (80010fc <main+0x544>)
 8001060:	f00b fd39 	bl	800cad6 <osThreadNew>
 8001064:	4b26      	ldr	r3, [pc, #152]	; (8001100 <main+0x548>)
  sdTaskHandle = osThreadNew(StartSdTask, NULL, &sdTask_attributes);
 8001066:	4a27      	ldr	r2, [pc, #156]	; (8001104 <main+0x54c>)
  ClockTaskHandle = osThreadNew(StartClockTask, NULL, &ClockTask_attributes);
 8001068:	6018      	str	r0, [r3, #0]
  sdTaskHandle = osThreadNew(StartSdTask, NULL, &sdTask_attributes);
 800106a:	4621      	mov	r1, r4
 800106c:	4826      	ldr	r0, [pc, #152]	; (8001108 <main+0x550>)
 800106e:	f00b fd32 	bl	800cad6 <osThreadNew>
 8001072:	4b26      	ldr	r3, [pc, #152]	; (800110c <main+0x554>)
  SetClockTaskHandle = osThreadNew(StartSetClockTask, NULL, &SetClockTask_attributes);
 8001074:	4a26      	ldr	r2, [pc, #152]	; (8001110 <main+0x558>)
  sdTaskHandle = osThreadNew(StartSdTask, NULL, &sdTask_attributes);
 8001076:	6018      	str	r0, [r3, #0]
  SetClockTaskHandle = osThreadNew(StartSetClockTask, NULL, &SetClockTask_attributes);
 8001078:	4621      	mov	r1, r4
 800107a:	4826      	ldr	r0, [pc, #152]	; (8001114 <main+0x55c>)
 800107c:	f00b fd2b 	bl	800cad6 <osThreadNew>
 8001080:	4b25      	ldr	r3, [pc, #148]	; (8001118 <main+0x560>)
 8001082:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001084:	f00b fd06 	bl	800ca94 <osKernelStart>
  while (1)
 8001088:	e7fe      	b.n	8001088 <main+0x4d0>
 800108a:	bf00      	nop
 800108c:	200006b8 	.word	0x200006b8
 8001090:	4002b000 	.word	0x4002b000
 8001094:	20000874 	.word	0x20000874
 8001098:	40012c00 	.word	0x40012c00
 800109c:	20000984 	.word	0x20000984
 80010a0:	40011000 	.word	0x40011000
 80010a4:	20000854 	.word	0x20000854
 80010a8:	40002800 	.word	0x40002800
 80010ac:	200001bc 	.word	0x200001bc
 80010b0:	080288f0 	.word	0x080288f0
 80010b4:	200009cc 	.word	0x200009cc
 80010b8:	08028878 	.word	0x08028878
 80010bc:	200001d0 	.word	0x200001d0
 80010c0:	08028954 	.word	0x08028954
 80010c4:	20000c1c 	.word	0x20000c1c
 80010c8:	080288d8 	.word	0x080288d8
 80010cc:	200006ac 	.word	0x200006ac
 80010d0:	08028918 	.word	0x08028918
 80010d4:	20000c0c 	.word	0x20000c0c
 80010d8:	08028900 	.word	0x08028900
 80010dc:	20000b98 	.word	0x20000b98
 80010e0:	080288b4 	.word	0x080288b4
 80010e4:	0800090d 	.word	0x0800090d
 80010e8:	200001dc 	.word	0x200001dc
 80010ec:	08028854 	.word	0x08028854
 80010f0:	08001a7d 	.word	0x08001a7d
 80010f4:	200001b4 	.word	0x200001b4
 80010f8:	08028830 	.word	0x08028830
 80010fc:	08000931 	.word	0x08000931
 8001100:	200001b0 	.word	0x200001b0
 8001104:	08028930 	.word	0x08028930
 8001108:	08000975 	.word	0x08000975
 800110c:	20000c14 	.word	0x20000c14
 8001110:	08028890 	.word	0x08028890
 8001114:	08000ad5 	.word	0x08000ad5
 8001118:	200001d4 	.word	0x200001d4

0800111c <IOE_Init>:
 800111c:	4770      	bx	lr

0800111e <IOE_ITConfig>:
 800111e:	4770      	bx	lr

08001120 <IOE_Write>:
{
 8001120:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001122:	4b09      	ldr	r3, [pc, #36]	; (8001148 <IOE_Write+0x28>)
 8001124:	f88d 2017 	strb.w	r2, [sp, #23]
 8001128:	681b      	ldr	r3, [r3, #0]
 800112a:	9302      	str	r3, [sp, #8]
 800112c:	f10d 0217 	add.w	r2, sp, #23
 8001130:	2301      	movs	r3, #1
 8001132:	9200      	str	r2, [sp, #0]
 8001134:	9301      	str	r3, [sp, #4]
 8001136:	460a      	mov	r2, r1
 8001138:	4601      	mov	r1, r0
 800113a:	4804      	ldr	r0, [pc, #16]	; (800114c <IOE_Write+0x2c>)
 800113c:	f007 fcfe 	bl	8008b3c <HAL_I2C_Mem_Write>
}
 8001140:	b007      	add	sp, #28
 8001142:	f85d fb04 	ldr.w	pc, [sp], #4
 8001146:	bf00      	nop
 8001148:	20000008 	.word	0x20000008
 800114c:	20000758 	.word	0x20000758

08001150 <IOE_Read>:
{
 8001150:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001152:	2300      	movs	r3, #0
 8001154:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001158:	4b08      	ldr	r3, [pc, #32]	; (800117c <IOE_Read+0x2c>)
 800115a:	681b      	ldr	r3, [r3, #0]
 800115c:	9302      	str	r3, [sp, #8]
{
 800115e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001160:	2301      	movs	r3, #1
 8001162:	f10d 0117 	add.w	r1, sp, #23
 8001166:	9100      	str	r1, [sp, #0]
 8001168:	9301      	str	r3, [sp, #4]
 800116a:	4601      	mov	r1, r0
 800116c:	4804      	ldr	r0, [pc, #16]	; (8001180 <IOE_Read+0x30>)
 800116e:	f007 fd75 	bl	8008c5c <HAL_I2C_Mem_Read>
}
 8001172:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001176:	b007      	add	sp, #28
 8001178:	f85d fb04 	ldr.w	pc, [sp], #4
 800117c:	20000008 	.word	0x20000008
 8001180:	20000758 	.word	0x20000758

08001184 <IOE_ReadMultiple>:
{
 8001184:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001186:	4c08      	ldr	r4, [pc, #32]	; (80011a8 <IOE_ReadMultiple+0x24>)
 8001188:	6824      	ldr	r4, [r4, #0]
 800118a:	9200      	str	r2, [sp, #0]
 800118c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001190:	460a      	mov	r2, r1
 8001192:	2301      	movs	r3, #1
 8001194:	4601      	mov	r1, r0
 8001196:	4805      	ldr	r0, [pc, #20]	; (80011ac <IOE_ReadMultiple+0x28>)
 8001198:	f007 fd60 	bl	8008c5c <HAL_I2C_Mem_Read>
}
 800119c:	3800      	subs	r0, #0
 800119e:	bf18      	it	ne
 80011a0:	2001      	movne	r0, #1
 80011a2:	b004      	add	sp, #16
 80011a4:	bd10      	pop	{r4, pc}
 80011a6:	bf00      	nop
 80011a8:	20000008 	.word	0x20000008
 80011ac:	20000758 	.word	0x20000758

080011b0 <IOE_Delay>:
 80011b0:	f006 be26 	b.w	8007e00 <HAL_Delay>

080011b4 <LCD_IO_Init>:
{
 80011b4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011b6:	4806      	ldr	r0, [pc, #24]	; (80011d0 <LCD_IO_Init+0x1c>)
 80011b8:	2200      	movs	r2, #0
 80011ba:	2104      	movs	r1, #4
 80011bc:	f007 fa20 	bl	8008600 <HAL_GPIO_WritePin>
}
 80011c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011c4:	4802      	ldr	r0, [pc, #8]	; (80011d0 <LCD_IO_Init+0x1c>)
 80011c6:	2201      	movs	r2, #1
 80011c8:	2104      	movs	r1, #4
 80011ca:	f007 ba19 	b.w	8008600 <HAL_GPIO_WritePin>
 80011ce:	bf00      	nop
 80011d0:	40020800 	.word	0x40020800

080011d4 <LCD_IO_WriteData>:
{
 80011d4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011d6:	4d0b      	ldr	r5, [pc, #44]	; (8001204 <LCD_IO_WriteData+0x30>)
{
 80011d8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80011da:	2201      	movs	r2, #1
 80011dc:	480a      	ldr	r0, [pc, #40]	; (8001208 <LCD_IO_WriteData+0x34>)
 80011de:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e2:	f007 fa0d 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011e6:	2200      	movs	r2, #0
 80011e8:	2104      	movs	r1, #4
 80011ea:	4628      	mov	r0, r5
 80011ec:	f007 fa08 	bl	8008600 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80011f0:	4620      	mov	r0, r4
 80011f2:	f7ff fb79 	bl	80008e8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011f6:	4628      	mov	r0, r5
 80011f8:	2201      	movs	r2, #1
}
 80011fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011fe:	2104      	movs	r1, #4
 8001200:	f007 b9fe 	b.w	8008600 <HAL_GPIO_WritePin>
 8001204:	40020800 	.word	0x40020800
 8001208:	40020c00 	.word	0x40020c00

0800120c <LCD_IO_WriteReg>:
{
 800120c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800120e:	4d0b      	ldr	r5, [pc, #44]	; (800123c <LCD_IO_WriteReg+0x30>)
{
 8001210:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001212:	2200      	movs	r2, #0
 8001214:	480a      	ldr	r0, [pc, #40]	; (8001240 <LCD_IO_WriteReg+0x34>)
 8001216:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800121a:	f007 f9f1 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800121e:	2200      	movs	r2, #0
 8001220:	2104      	movs	r1, #4
 8001222:	4628      	mov	r0, r5
 8001224:	f007 f9ec 	bl	8008600 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001228:	4620      	mov	r0, r4
 800122a:	f7ff fb5d 	bl	80008e8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800122e:	4628      	mov	r0, r5
 8001230:	2201      	movs	r2, #1
}
 8001232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001236:	2104      	movs	r1, #4
 8001238:	f007 b9e2 	b.w	8008600 <HAL_GPIO_WritePin>
 800123c:	40020800 	.word	0x40020800
 8001240:	40020c00 	.word	0x40020c00

08001244 <LCD_IO_ReadData>:
{
 8001244:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001246:	4e14      	ldr	r6, [pc, #80]	; (8001298 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001248:	4f14      	ldr	r7, [pc, #80]	; (800129c <LCD_IO_ReadData+0x58>)
{
 800124a:	4605      	mov	r5, r0
 800124c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800124e:	4630      	mov	r0, r6
 8001250:	2200      	movs	r2, #0
 8001252:	2104      	movs	r1, #4
 8001254:	f007 f9d4 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001258:	2200      	movs	r2, #0
 800125a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800125e:	4638      	mov	r0, r7
 8001260:	f007 f9ce 	bl	8008600 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001264:	4628      	mov	r0, r5
 8001266:	f7ff fb3f 	bl	80008e8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800126a:	4b0d      	ldr	r3, [pc, #52]	; (80012a0 <LCD_IO_ReadData+0x5c>)
 800126c:	480d      	ldr	r0, [pc, #52]	; (80012a4 <LCD_IO_ReadData+0x60>)
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	4622      	mov	r2, r4
 8001272:	a901      	add	r1, sp, #4
 8001274:	f009 fc98 	bl	800aba8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001278:	4638      	mov	r0, r7
 800127a:	2201      	movs	r2, #1
 800127c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001280:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001282:	f007 f9bd 	bl	8008600 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001286:	4630      	mov	r0, r6
 8001288:	2201      	movs	r2, #1
 800128a:	2104      	movs	r1, #4
 800128c:	f007 f9b8 	bl	8008600 <HAL_GPIO_WritePin>
}
 8001290:	4620      	mov	r0, r4
 8001292:	b003      	add	sp, #12
 8001294:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001296:	bf00      	nop
 8001298:	40020800 	.word	0x40020800
 800129c:	40020c00 	.word	0x40020c00
 80012a0:	2000000c 	.word	0x2000000c
 80012a4:	2000092c 	.word	0x2000092c

080012a8 <LCD_Delay>:
  HAL_Delay(Delay);
 80012a8:	f006 bdaa 	b.w	8007e00 <HAL_Delay>

080012ac <HAL_GPIO_EXTI_Callback>:
	osSemaphoreRelease(myBinarySem01Handle);
 80012ac:	4b01      	ldr	r3, [pc, #4]	; (80012b4 <HAL_GPIO_EXTI_Callback+0x8>)
 80012ae:	6818      	ldr	r0, [r3, #0]
 80012b0:	f00b bcdb 	b.w	800cc6a <osSemaphoreRelease>
 80012b4:	200009cc 	.word	0x200009cc

080012b8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80012b8:	6802      	ldr	r2, [r0, #0]
 80012ba:	4b03      	ldr	r3, [pc, #12]	; (80012c8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80012bc:	429a      	cmp	r2, r3
 80012be:	d101      	bne.n	80012c4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80012c0:	f006 bd8c 	b.w	8007ddc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012c4:	4770      	bx	lr
 80012c6:	bf00      	nop
 80012c8:	40001000 	.word	0x40001000

080012cc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012cc:	4770      	bx	lr
	...

080012d0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80012d0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80012d2:	4b0e      	ldr	r3, [pc, #56]	; (800130c <HAL_MspInit+0x3c>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	9200      	str	r2, [sp, #0]
 80012d8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80012da:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80012de:	6459      	str	r1, [r3, #68]	; 0x44
 80012e0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80012e2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80012e6:	9100      	str	r1, [sp, #0]
 80012e8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012ea:	9201      	str	r2, [sp, #4]
 80012ec:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80012ee:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80012f2:	6419      	str	r1, [r3, #64]	; 0x40
 80012f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80012f6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80012fa:	9301      	str	r3, [sp, #4]
 80012fc:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80012fe:	210f      	movs	r1, #15
 8001300:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001304:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001306:	f006 bda1 	b.w	8007e4c <HAL_NVIC_SetPriority>
 800130a:	bf00      	nop
 800130c:	40023800 	.word	0x40023800

08001310 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001310:	6802      	ldr	r2, [r0, #0]
 8001312:	4b09      	ldr	r3, [pc, #36]	; (8001338 <HAL_CRC_MspInit+0x28>)
 8001314:	429a      	cmp	r2, r3
{
 8001316:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001318:	d10b      	bne.n	8001332 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800131a:	2300      	movs	r3, #0
 800131c:	9301      	str	r3, [sp, #4]
 800131e:	4b07      	ldr	r3, [pc, #28]	; (800133c <HAL_CRC_MspInit+0x2c>)
 8001320:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001322:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001326:	631a      	str	r2, [r3, #48]	; 0x30
 8001328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800132a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800132e:	9301      	str	r3, [sp, #4]
 8001330:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001332:	b002      	add	sp, #8
 8001334:	4770      	bx	lr
 8001336:	bf00      	nop
 8001338:	40023000 	.word	0x40023000
 800133c:	40023800 	.word	0x40023800

08001340 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001340:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001342:	4b0f      	ldr	r3, [pc, #60]	; (8001380 <HAL_DMA2D_MspInit+0x40>)
 8001344:	6802      	ldr	r2, [r0, #0]
 8001346:	429a      	cmp	r2, r3
 8001348:	d116      	bne.n	8001378 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800134a:	2200      	movs	r2, #0
 800134c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001350:	9201      	str	r2, [sp, #4]
 8001352:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001354:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001358:	6319      	str	r1, [r3, #48]	; 0x30
 800135a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800135c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001360:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001362:	2105      	movs	r1, #5
 8001364:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001366:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001368:	f006 fd70 	bl	8007e4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800136c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800136e:	b003      	add	sp, #12
 8001370:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001374:	f006 bd9c 	b.w	8007eb0 <HAL_NVIC_EnableIRQ>
}
 8001378:	b003      	add	sp, #12
 800137a:	f85d fb04 	ldr.w	pc, [sp], #4
 800137e:	bf00      	nop
 8001380:	4002b000 	.word	0x4002b000

08001384 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001384:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001388:	4604      	mov	r4, r0
 800138a:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800138c:	2214      	movs	r2, #20
 800138e:	2100      	movs	r1, #0
 8001390:	a803      	add	r0, sp, #12
 8001392:	f026 fa13 	bl	80277bc <memset>
  if(hi2c->Instance==I2C3)
 8001396:	6822      	ldr	r2, [r4, #0]
 8001398:	4b24      	ldr	r3, [pc, #144]	; (800142c <HAL_I2C_MspInit+0xa8>)
 800139a:	429a      	cmp	r2, r3
 800139c:	d143      	bne.n	8001426 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800139e:	4c24      	ldr	r4, [pc, #144]	; (8001430 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013a0:	4824      	ldr	r0, [pc, #144]	; (8001434 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80013a2:	2500      	movs	r5, #0
 80013a4:	9500      	str	r5, [sp, #0]
 80013a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80013a8:	f043 0304 	orr.w	r3, r3, #4
 80013ac:	6323      	str	r3, [r4, #48]	; 0x30
 80013ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80013b0:	f003 0304 	and.w	r3, r3, #4
 80013b4:	9300      	str	r3, [sp, #0]
 80013b6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80013b8:	9501      	str	r5, [sp, #4]
 80013ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80013bc:	f043 0301 	orr.w	r3, r3, #1
 80013c0:	6323      	str	r3, [r4, #48]	; 0x30
 80013c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80013c4:	f003 0301 	and.w	r3, r3, #1
 80013c8:	9301      	str	r3, [sp, #4]
 80013ca:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80013cc:	f04f 0912 	mov.w	r9, #18
 80013d0:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013d4:	f04f 0801 	mov.w	r8, #1
 80013d8:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80013da:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013dc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80013de:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013e2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80013e6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013e8:	f007 f81e 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80013ec:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013f0:	4811      	ldr	r0, [pc, #68]	; (8001438 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80013f2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013f4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80013f6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013fa:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013fe:	f007 f813 	bl	8008428 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001402:	9502      	str	r5, [sp, #8]
 8001404:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001406:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800140a:	6423      	str	r3, [r4, #64]	; 0x40
 800140c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800140e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001412:	9302      	str	r3, [sp, #8]
 8001414:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001416:	6a23      	ldr	r3, [r4, #32]
 8001418:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800141c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800141e:	6a23      	ldr	r3, [r4, #32]
 8001420:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001424:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001426:	b009      	add	sp, #36	; 0x24
 8001428:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800142c:	40005c00 	.word	0x40005c00
 8001430:	40023800 	.word	0x40023800
 8001434:	40020800 	.word	0x40020800
 8001438:	40020000 	.word	0x40020000

0800143c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800143c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800143e:	b099      	sub	sp, #100	; 0x64
 8001440:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001442:	2214      	movs	r2, #20
 8001444:	2100      	movs	r1, #0
 8001446:	a807      	add	r0, sp, #28
 8001448:	f026 f9b8 	bl	80277bc <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800144c:	2230      	movs	r2, #48	; 0x30
 800144e:	eb0d 0002 	add.w	r0, sp, r2
 8001452:	2100      	movs	r1, #0
 8001454:	f026 f9b2 	bl	80277bc <memset>
  if(hltdc->Instance==LTDC)
 8001458:	6822      	ldr	r2, [r4, #0]
 800145a:	4b5e      	ldr	r3, [pc, #376]	; (80015d4 <HAL_LTDC_MspInit+0x198>)
 800145c:	429a      	cmp	r2, r3
 800145e:	f040 80b7 	bne.w	80015d0 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001462:	2308      	movs	r3, #8
 8001464:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 8001466:	2332      	movs	r3, #50	; 0x32
 8001468:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 800146a:	2302      	movs	r3, #2
 800146c:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800146e:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8001470:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001474:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001476:	f008 f98b 	bl	8009790 <HAL_RCCEx_PeriphCLKConfig>
 800147a:	b108      	cbz	r0, 8001480 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 800147c:	f7ff ff26 	bl	80012cc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001480:	4b55      	ldr	r3, [pc, #340]	; (80015d8 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001482:	4856      	ldr	r0, [pc, #344]	; (80015dc <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001484:	2400      	movs	r4, #0
 8001486:	9400      	str	r4, [sp, #0]
 8001488:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800148a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800148e:	645a      	str	r2, [r3, #68]	; 0x44
 8001490:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001492:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001496:	9200      	str	r2, [sp, #0]
 8001498:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800149a:	9401      	str	r4, [sp, #4]
 800149c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800149e:	f042 0220 	orr.w	r2, r2, #32
 80014a2:	631a      	str	r2, [r3, #48]	; 0x30
 80014a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a6:	f002 0220 	and.w	r2, r2, #32
 80014aa:	9201      	str	r2, [sp, #4]
 80014ac:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80014ae:	9402      	str	r4, [sp, #8]
 80014b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014b2:	f042 0201 	orr.w	r2, r2, #1
 80014b6:	631a      	str	r2, [r3, #48]	; 0x30
 80014b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ba:	f002 0201 	and.w	r2, r2, #1
 80014be:	9202      	str	r2, [sp, #8]
 80014c0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80014c2:	9403      	str	r4, [sp, #12]
 80014c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c6:	f042 0202 	orr.w	r2, r2, #2
 80014ca:	631a      	str	r2, [r3, #48]	; 0x30
 80014cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ce:	f002 0202 	and.w	r2, r2, #2
 80014d2:	9203      	str	r2, [sp, #12]
 80014d4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80014d6:	9404      	str	r4, [sp, #16]
 80014d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014da:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014de:	631a      	str	r2, [r3, #48]	; 0x30
 80014e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80014e6:	9204      	str	r2, [sp, #16]
 80014e8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80014ea:	9405      	str	r4, [sp, #20]
 80014ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ee:	f042 0204 	orr.w	r2, r2, #4
 80014f2:	631a      	str	r2, [r3, #48]	; 0x30
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f002 0204 	and.w	r2, r2, #4
 80014fa:	9205      	str	r2, [sp, #20]
 80014fc:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80014fe:	9406      	str	r4, [sp, #24]
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f042 0208 	orr.w	r2, r2, #8
 8001506:	631a      	str	r2, [r3, #48]	; 0x30
 8001508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800150a:	f003 0308 	and.w	r3, r3, #8
 800150e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001510:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001512:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001514:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001516:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001518:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800151c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800151e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001522:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001526:	f006 ff7f 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800152a:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800152e:	482c      	ldr	r0, [pc, #176]	; (80015e0 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001530:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001532:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001534:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001538:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800153a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800153e:	f006 ff73 	bl	8008428 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001542:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001544:	4827      	ldr	r0, [pc, #156]	; (80015e4 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001546:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001548:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800154a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800154e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001552:	f006 ff69 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001556:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800155a:	4822      	ldr	r0, [pc, #136]	; (80015e4 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800155c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800155e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001560:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001564:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001568:	f006 ff5e 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800156c:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001570:	481d      	ldr	r0, [pc, #116]	; (80015e8 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001572:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001574:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001576:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800157a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800157e:	f006 ff53 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001582:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001584:	4819      	ldr	r0, [pc, #100]	; (80015ec <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001586:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001588:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800158a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800158e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001592:	f006 ff49 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001596:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001598:	4815      	ldr	r0, [pc, #84]	; (80015f0 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800159a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800159c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800159e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015a2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015a6:	f006 ff3f 	bl	8008428 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80015aa:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015ae:	480e      	ldr	r0, [pc, #56]	; (80015e8 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80015b0:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015b2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015b4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b8:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015bc:	f006 ff34 	bl	8008428 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80015c0:	2058      	movs	r0, #88	; 0x58
 80015c2:	4622      	mov	r2, r4
 80015c4:	2105      	movs	r1, #5
 80015c6:	f006 fc41 	bl	8007e4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80015ca:	2058      	movs	r0, #88	; 0x58
 80015cc:	f006 fc70 	bl	8007eb0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80015d0:	b019      	add	sp, #100	; 0x64
 80015d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015d4:	40016800 	.word	0x40016800
 80015d8:	40023800 	.word	0x40023800
 80015dc:	40021400 	.word	0x40021400
 80015e0:	40020000 	.word	0x40020000
 80015e4:	40020400 	.word	0x40020400
 80015e8:	40021800 	.word	0x40021800
 80015ec:	40020800 	.word	0x40020800
 80015f0:	40020c00 	.word	0x40020c00

080015f4 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 80015f4:	b510      	push	{r4, lr}
 80015f6:	4604      	mov	r4, r0
 80015f8:	b08c      	sub	sp, #48	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80015fa:	2230      	movs	r2, #48	; 0x30
 80015fc:	2100      	movs	r1, #0
 80015fe:	4668      	mov	r0, sp
 8001600:	f026 f8dc 	bl	80277bc <memset>
  if(hrtc->Instance==RTC)
 8001604:	6822      	ldr	r2, [r4, #0]
 8001606:	4b0a      	ldr	r3, [pc, #40]	; (8001630 <HAL_RTC_MspInit+0x3c>)
 8001608:	429a      	cmp	r2, r3
 800160a:	d10e      	bne.n	800162a <HAL_RTC_MspInit+0x36>

  /* USER CODE END RTC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 800160c:	2320      	movs	r3, #32
 800160e:	9300      	str	r3, [sp, #0]
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001610:	4668      	mov	r0, sp
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 8001612:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001616:	930a      	str	r3, [sp, #40]	; 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001618:	f008 f8ba 	bl	8009790 <HAL_RCCEx_PeriphCLKConfig>
 800161c:	b108      	cbz	r0, 8001622 <HAL_RTC_MspInit+0x2e>
    {
      Error_Handler();
 800161e:	f7ff fe55 	bl	80012cc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 8001622:	4b04      	ldr	r3, [pc, #16]	; (8001634 <HAL_RTC_MspInit+0x40>)
 8001624:	2201      	movs	r2, #1
 8001626:	f8c3 2e3c 	str.w	r2, [r3, #3644]	; 0xe3c
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 800162a:	b00c      	add	sp, #48	; 0x30
 800162c:	bd10      	pop	{r4, pc}
 800162e:	bf00      	nop
 8001630:	40002800 	.word	0x40002800
 8001634:	42470000 	.word	0x42470000

08001638 <HAL_SD_MspInit>:
* This function configures the hardware resources used in this example
* @param hsd: SD handle pointer
* @retval None
*/
void HAL_SD_MspInit(SD_HandleTypeDef* hsd)
{
 8001638:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800163c:	4606      	mov	r6, r0
 800163e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001640:	2214      	movs	r2, #20
 8001642:	2100      	movs	r1, #0
 8001644:	a803      	add	r0, sp, #12
 8001646:	f026 f8b9 	bl	80277bc <memset>
  if(hsd->Instance==SDIO)
 800164a:	6832      	ldr	r2, [r6, #0]
 800164c:	4b37      	ldr	r3, [pc, #220]	; (800172c <HAL_SD_MspInit+0xf4>)
 800164e:	429a      	cmp	r2, r3
 8001650:	d168      	bne.n	8001724 <HAL_SD_MspInit+0xec>
  {
  /* USER CODE BEGIN SDIO_MspInit 0 */

  /* USER CODE END SDIO_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SDIO_CLK_ENABLE();
 8001652:	f503 3386 	add.w	r3, r3, #68608	; 0x10c00
 8001656:	2500      	movs	r5, #0
 8001658:	9500      	str	r5, [sp, #0]
 800165a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800165c:	4834      	ldr	r0, [pc, #208]	; (8001730 <HAL_SD_MspInit+0xf8>)
    __HAL_RCC_SDIO_CLK_ENABLE();
 800165e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001662:	645a      	str	r2, [r3, #68]	; 0x44
 8001664:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001666:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 800166a:	9200      	str	r2, [sp, #0]
 800166c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800166e:	9501      	str	r5, [sp, #4]
 8001670:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001672:	f042 0204 	orr.w	r2, r2, #4
 8001676:	631a      	str	r2, [r3, #48]	; 0x30
 8001678:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800167a:	f002 0204 	and.w	r2, r2, #4
 800167e:	9201      	str	r2, [sp, #4]
 8001680:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001682:	9502      	str	r5, [sp, #8]
 8001684:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001686:	f042 0208 	orr.w	r2, r2, #8
 800168a:	631a      	str	r2, [r3, #48]	; 0x30
 800168c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800168e:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
 8001692:	240c      	movs	r4, #12
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001694:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
 8001696:	2703      	movs	r7, #3
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001698:	eb0d 0104 	add.w	r1, sp, r4
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800169c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800169e:	f04f 0902 	mov.w	r9, #2
 80016a2:	f44f 5388 	mov.w	r3, #4352	; 0x1100
 80016a6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
 80016aa:	e9cd 7406 	strd	r7, r4, [sp, #24]

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80016ae:	f04f 0804 	mov.w	r8, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016b2:	f006 feb9 	bl	8008428 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80016b6:	eb0d 0104 	add.w	r1, sp, r4
 80016ba:	481e      	ldr	r0, [pc, #120]	; (8001734 <HAL_SD_MspInit+0xfc>)
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
 80016bc:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80016be:	e9cd 5705 	strd	r5, r7, [sp, #20]

    /* SDIO DMA Init */
    /* SDIO Init */
    hdma_sdio.Instance = DMA2_Stream3;
 80016c2:	4c1d      	ldr	r4, [pc, #116]	; (8001738 <HAL_SD_MspInit+0x100>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80016c4:	e9cd 8903 	strd	r8, r9, [sp, #12]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80016c8:	f006 feae 	bl	8008428 <HAL_GPIO_Init>
    hdma_sdio.Init.Channel = DMA_CHANNEL_4;
 80016cc:	4a1b      	ldr	r2, [pc, #108]	; (800173c <HAL_SD_MspInit+0x104>)
    hdma_sdio.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
    hdma_sdio.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_sdio.Init.Mode = DMA_PFCTRL;
    hdma_sdio.Init.Priority = DMA_PRIORITY_LOW;
    hdma_sdio.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
    hdma_sdio.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80016ce:	62a7      	str	r7, [r4, #40]	; 0x28
    hdma_sdio.Init.Channel = DMA_CHANNEL_4;
 80016d0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80016d4:	e9c4 2300 	strd	r2, r3, [r4]
    hdma_sdio.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80016d8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80016dc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    hdma_sdio.Init.Mode = DMA_PFCTRL;
 80016e0:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    hdma_sdio.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80016e4:	e9c4 1304 	strd	r1, r3, [r4, #16]
    hdma_sdio.Init.Mode = DMA_PFCTRL;
 80016e8:	2320      	movs	r3, #32
 80016ea:	e9c4 0306 	strd	r0, r3, [r4, #24]
    hdma_sdio.Init.PeriphInc = DMA_PINC_DISABLE;
 80016ee:	e9c4 5502 	strd	r5, r5, [r4, #8]
    hdma_sdio.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80016f2:	e9c4 5808 	strd	r5, r8, [r4, #32]
    hdma_sdio.Init.MemBurst = DMA_MBURST_INC4;
    hdma_sdio.Init.PeriphBurst = DMA_PBURST_INC4;
 80016f6:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 80016fa:	f44f 0500 	mov.w	r5, #8388608	; 0x800000
    if (HAL_DMA_Init(&hdma_sdio) != HAL_OK)
 80016fe:	4620      	mov	r0, r4
    hdma_sdio.Init.PeriphBurst = DMA_PBURST_INC4;
 8001700:	e9c4 530b 	strd	r5, r3, [r4, #44]	; 0x2c
    if (HAL_DMA_Init(&hdma_sdio) != HAL_OK)
 8001704:	f006 fc08 	bl	8007f18 <HAL_DMA_Init>
 8001708:	b108      	cbz	r0, 800170e <HAL_SD_MspInit+0xd6>
    {
      Error_Handler();
 800170a:	f7ff fddf 	bl	80012cc <Error_Handler>
     HAL_SD_ReadBlocks_DMA or HAL_SD_WriteBlocks_DMA. */
    __HAL_LINKDMA(hsd,hdmarx,hdma_sdio);
    __HAL_LINKDMA(hsd,hdmatx,hdma_sdio);

    /* SDIO interrupt Init */
    HAL_NVIC_SetPriority(SDIO_IRQn, 5, 0);
 800170e:	2031      	movs	r0, #49	; 0x31
    __HAL_LINKDMA(hsd,hdmarx,hdma_sdio);
 8001710:	6434      	str	r4, [r6, #64]	; 0x40
    __HAL_LINKDMA(hsd,hdmatx,hdma_sdio);
 8001712:	63f4      	str	r4, [r6, #60]	; 0x3c
    HAL_NVIC_SetPriority(SDIO_IRQn, 5, 0);
 8001714:	2200      	movs	r2, #0
 8001716:	2105      	movs	r1, #5
    __HAL_LINKDMA(hsd,hdmarx,hdma_sdio);
 8001718:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_NVIC_SetPriority(SDIO_IRQn, 5, 0);
 800171a:	f006 fb97 	bl	8007e4c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDIO_IRQn);
 800171e:	2031      	movs	r0, #49	; 0x31
 8001720:	f006 fbc6 	bl	8007eb0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SDIO_MspInit 1 */

  /* USER CODE END SDIO_MspInit 1 */
  }

}
 8001724:	b009      	add	sp, #36	; 0x24
 8001726:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800172a:	bf00      	nop
 800172c:	40012c00 	.word	0x40012c00
 8001730:	40020800 	.word	0x40020800
 8001734:	40020c00 	.word	0x40020c00
 8001738:	200006f8 	.word	0x200006f8
 800173c:	40026458 	.word	0x40026458

08001740 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001740:	b510      	push	{r4, lr}
 8001742:	4604      	mov	r4, r0
 8001744:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001746:	2214      	movs	r2, #20
 8001748:	2100      	movs	r1, #0
 800174a:	a803      	add	r0, sp, #12
 800174c:	f026 f836 	bl	80277bc <memset>
  if(hspi->Instance==SPI5)
 8001750:	6822      	ldr	r2, [r4, #0]
 8001752:	4b14      	ldr	r3, [pc, #80]	; (80017a4 <HAL_SPI_MspInit+0x64>)
 8001754:	429a      	cmp	r2, r3
 8001756:	d123      	bne.n	80017a0 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001758:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800175c:	2100      	movs	r1, #0
 800175e:	9101      	str	r1, [sp, #4]
 8001760:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001762:	4811      	ldr	r0, [pc, #68]	; (80017a8 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001764:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001768:	645a      	str	r2, [r3, #68]	; 0x44
 800176a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800176c:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001770:	9201      	str	r2, [sp, #4]
 8001772:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001774:	9102      	str	r1, [sp, #8]
 8001776:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001778:	f042 0220 	orr.w	r2, r2, #32
 800177c:	631a      	str	r2, [r3, #48]	; 0x30
 800177e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001780:	f003 0320 	and.w	r3, r3, #32
 8001784:	9302      	str	r3, [sp, #8]
 8001786:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001788:	f44f 7260 	mov.w	r2, #896	; 0x380
 800178c:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800178e:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001790:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001794:	2305      	movs	r3, #5
 8001796:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800179a:	a903      	add	r1, sp, #12
 800179c:	f006 fe44 	bl	8008428 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80017a0:	b008      	add	sp, #32
 80017a2:	bd10      	pop	{r4, pc}
 80017a4:	40015000 	.word	0x40015000
 80017a8:	40021400 	.word	0x40021400

080017ac <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80017ac:	b510      	push	{r4, lr}
 80017ae:	4604      	mov	r4, r0
 80017b0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017b2:	2214      	movs	r2, #20
 80017b4:	2100      	movs	r1, #0
 80017b6:	a803      	add	r0, sp, #12
 80017b8:	f026 f800 	bl	80277bc <memset>
  if(huart->Instance==USART1)
 80017bc:	6822      	ldr	r2, [r4, #0]
 80017be:	4b14      	ldr	r3, [pc, #80]	; (8001810 <HAL_UART_MspInit+0x64>)
 80017c0:	429a      	cmp	r2, r3
 80017c2:	d123      	bne.n	800180c <HAL_UART_MspInit+0x60>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80017c4:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 80017c8:	2100      	movs	r1, #0
 80017ca:	9101      	str	r1, [sp, #4]
 80017cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017ce:	4811      	ldr	r0, [pc, #68]	; (8001814 <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80017d0:	f042 0210 	orr.w	r2, r2, #16
 80017d4:	645a      	str	r2, [r3, #68]	; 0x44
 80017d6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80017d8:	f002 0210 	and.w	r2, r2, #16
 80017dc:	9201      	str	r2, [sp, #4]
 80017de:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80017e0:	9102      	str	r1, [sp, #8]
 80017e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017e4:	f042 0201 	orr.w	r2, r2, #1
 80017e8:	631a      	str	r2, [r3, #48]	; 0x30
 80017ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ec:	f003 0301 	and.w	r3, r3, #1
 80017f0:	9302      	str	r3, [sp, #8]
 80017f2:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017f4:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80017f8:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80017fa:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017fc:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001800:	2307      	movs	r3, #7
 8001802:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001806:	a903      	add	r1, sp, #12
 8001808:	f006 fe0e 	bl	8008428 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 800180c:	b008      	add	sp, #32
 800180e:	bd10      	pop	{r4, pc}
 8001810:	40011000 	.word	0x40011000
 8001814:	40020000 	.word	0x40020000

08001818 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800181c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800181e:	2300      	movs	r3, #0
 8001820:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001822:	4b2b      	ldr	r3, [pc, #172]	; (80018d0 <HAL_SDRAM_MspInit+0xb8>)
 8001824:	681c      	ldr	r4, [r3, #0]
 8001826:	2c00      	cmp	r4, #0
 8001828:	d14f      	bne.n	80018ca <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 800182a:	f04f 0801 	mov.w	r8, #1
 800182e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001832:	4b28      	ldr	r3, [pc, #160]	; (80018d4 <HAL_SDRAM_MspInit+0xbc>)
 8001834:	9400      	str	r4, [sp, #0]
 8001836:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001838:	4827      	ldr	r0, [pc, #156]	; (80018d8 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800183a:	ea42 0208 	orr.w	r2, r2, r8
 800183e:	639a      	str	r2, [r3, #56]	; 0x38
 8001840:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001842:	ea03 0308 	and.w	r3, r3, r8
 8001846:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001848:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800184a:	2603      	movs	r6, #3
 800184c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800184e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001850:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001852:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001856:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800185a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800185e:	f006 fde3 	bl	8008428 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001862:	481e      	ldr	r0, [pc, #120]	; (80018dc <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001864:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001866:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001868:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800186c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001870:	f006 fdda 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001874:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001878:	4819      	ldr	r0, [pc, #100]	; (80018e0 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800187a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800187c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800187e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001882:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001886:	f006 fdcf 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800188a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800188e:	4815      	ldr	r0, [pc, #84]	; (80018e4 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001890:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001892:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001894:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001898:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800189c:	f006 fdc4 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80018a0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018a4:	4810      	ldr	r0, [pc, #64]	; (80018e8 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80018a6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018a8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018aa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018ae:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018b2:	f006 fdb9 	bl	8008428 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80018b6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018b8:	480c      	ldr	r0, [pc, #48]	; (80018ec <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80018ba:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018bc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018be:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018c2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018c6:	f006 fdaf 	bl	8008428 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80018ca:	b006      	add	sp, #24
 80018cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018d0:	20000c20 	.word	0x20000c20
 80018d4:	40023800 	.word	0x40023800
 80018d8:	40021400 	.word	0x40021400
 80018dc:	40020800 	.word	0x40020800
 80018e0:	40021800 	.word	0x40021800
 80018e4:	40021000 	.word	0x40021000
 80018e8:	40020c00 	.word	0x40020c00
 80018ec:	40020400 	.word	0x40020400

080018f0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80018f0:	b530      	push	{r4, r5, lr}
 80018f2:	4601      	mov	r1, r0
 80018f4:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 80018f6:	2200      	movs	r2, #0
 80018f8:	2036      	movs	r0, #54	; 0x36
 80018fa:	f006 faa7 	bl	8007e4c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80018fe:	2036      	movs	r0, #54	; 0x36
 8001900:	f006 fad6 	bl	8007eb0 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001904:	2500      	movs	r5, #0
 8001906:	4b15      	ldr	r3, [pc, #84]	; (800195c <HAL_InitTick+0x6c>)
 8001908:	9502      	str	r5, [sp, #8]
 800190a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800190c:	4c14      	ldr	r4, [pc, #80]	; (8001960 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800190e:	f042 0210 	orr.w	r2, r2, #16
 8001912:	641a      	str	r2, [r3, #64]	; 0x40
 8001914:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001916:	f003 0310 	and.w	r3, r3, #16
 800191a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800191c:	a901      	add	r1, sp, #4
 800191e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001920:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001922:	f007 ff17 	bl	8009754 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001926:	f007 fef5 	bl	8009714 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 800192a:	4b0e      	ldr	r3, [pc, #56]	; (8001964 <HAL_InitTick+0x74>)
 800192c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800192e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001932:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001934:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001936:	4b0c      	ldr	r3, [pc, #48]	; (8001968 <HAL_InitTick+0x78>)
 8001938:	fbb0 f0f3 	udiv	r0, r0, r3
 800193c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800193e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001940:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001942:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001944:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001946:	f009 fb1b 	bl	800af80 <HAL_TIM_Base_Init>
 800194a:	b920      	cbnz	r0, 8001956 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 800194c:	4620      	mov	r0, r4
 800194e:	f009 f9d1 	bl	800acf4 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001952:	b009      	add	sp, #36	; 0x24
 8001954:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001956:	2001      	movs	r0, #1
 8001958:	e7fb      	b.n	8001952 <HAL_InitTick+0x62>
 800195a:	bf00      	nop
 800195c:	40023800 	.word	0x40023800
 8001960:	20000c24 	.word	0x20000c24
 8001964:	40001000 	.word	0x40001000
 8001968:	000f4240 	.word	0x000f4240

0800196c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800196c:	4770      	bx	lr
	...

08001970 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001970:	b508      	push	{r3, lr}

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
    /* USER CODE BEGIN W1_HardFault_IRQn 0 */
	  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
 8001972:	4c04      	ldr	r4, [pc, #16]	; (8001984 <HardFault_Handler+0x14>)
 8001974:	2201      	movs	r2, #1
 8001976:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800197a:	4620      	mov	r0, r4
 800197c:	f006 fe40 	bl	8008600 <HAL_GPIO_WritePin>
  while (1)
 8001980:	e7f8      	b.n	8001974 <HardFault_Handler+0x4>
 8001982:	bf00      	nop
 8001984:	40021800 	.word	0x40021800

08001988 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001988:	e7fe      	b.n	8001988 <MemManage_Handler>

0800198a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800198a:	e7fe      	b.n	800198a <BusFault_Handler>

0800198c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800198c:	e7fe      	b.n	800198c <UsageFault_Handler>

0800198e <DebugMon_Handler>:
 800198e:	4770      	bx	lr

08001990 <EXTI0_IRQHandler>:
void EXTI0_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 8001990:	2001      	movs	r0, #1
 8001992:	f006 be43 	b.w	800861c <HAL_GPIO_EXTI_IRQHandler>
	...

08001998 <SDIO_IRQHandler>:
void SDIO_IRQHandler(void)
{
  /* USER CODE BEGIN SDIO_IRQn 0 */

  /* USER CODE END SDIO_IRQn 0 */
  HAL_SD_IRQHandler(&hsd);
 8001998:	4801      	ldr	r0, [pc, #4]	; (80019a0 <SDIO_IRQHandler+0x8>)
 800199a:	f008 bcf9 	b.w	800a390 <HAL_SD_IRQHandler>
 800199e:	bf00      	nop
 80019a0:	20000874 	.word	0x20000874

080019a4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80019a4:	4801      	ldr	r0, [pc, #4]	; (80019ac <TIM6_DAC_IRQHandler+0x8>)
 80019a6:	f009 b9e3 	b.w	800ad70 <HAL_TIM_IRQHandler>
 80019aa:	bf00      	nop
 80019ac:	20000c24 	.word	0x20000c24

080019b0 <DMA2_Stream3_IRQHandler>:
void DMA2_Stream3_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_sdio);
 80019b0:	4801      	ldr	r0, [pc, #4]	; (80019b8 <DMA2_Stream3_IRQHandler+0x8>)
 80019b2:	f006 bb7d 	b.w	80080b0 <HAL_DMA_IRQHandler>
 80019b6:	bf00      	nop
 80019b8:	200006f8 	.word	0x200006f8

080019bc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80019bc:	4801      	ldr	r0, [pc, #4]	; (80019c4 <LTDC_IRQHandler+0x8>)
 80019be:	f007 bb87 	b.w	80090d0 <HAL_LTDC_IRQHandler>
 80019c2:	bf00      	nop
 80019c4:	200007ac 	.word	0x200007ac

080019c8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80019c8:	4801      	ldr	r0, [pc, #4]	; (80019d0 <DMA2D_IRQHandler+0x8>)
 80019ca:	f006 bc5f 	b.w	800828c <HAL_DMA2D_IRQHandler>
 80019ce:	bf00      	nop
 80019d0:	200006b8 	.word	0x200006b8

080019d4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80019d4:	2001      	movs	r0, #1
 80019d6:	4770      	bx	lr

080019d8 <_kill>:

int _kill(int pid, int sig)
{
 80019d8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80019da:	f025 fd9b 	bl	8027514 <__errno>
 80019de:	2316      	movs	r3, #22
 80019e0:	6003      	str	r3, [r0, #0]
	return -1;
}
 80019e2:	f04f 30ff 	mov.w	r0, #4294967295
 80019e6:	bd08      	pop	{r3, pc}

080019e8 <_exit>:

void _exit (int status)
{
 80019e8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80019ea:	f025 fd93 	bl	8027514 <__errno>
 80019ee:	2316      	movs	r3, #22
 80019f0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80019f2:	e7fe      	b.n	80019f2 <_exit+0xa>

080019f4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80019f4:	b570      	push	{r4, r5, r6, lr}
 80019f6:	460d      	mov	r5, r1
 80019f8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80019fa:	460e      	mov	r6, r1
 80019fc:	1b73      	subs	r3, r6, r5
 80019fe:	429c      	cmp	r4, r3
 8001a00:	dc01      	bgt.n	8001a06 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001a02:	4620      	mov	r0, r4
 8001a04:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001a06:	f3af 8000 	nop.w
 8001a0a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a0e:	e7f5      	b.n	80019fc <_read+0x8>

08001a10 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001a10:	b570      	push	{r4, r5, r6, lr}
 8001a12:	460d      	mov	r5, r1
 8001a14:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a16:	460e      	mov	r6, r1
 8001a18:	1b73      	subs	r3, r6, r5
 8001a1a:	429c      	cmp	r4, r3
 8001a1c:	dc01      	bgt.n	8001a22 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001a1e:	4620      	mov	r0, r4
 8001a20:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001a22:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001a26:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001a2a:	e7f5      	b.n	8001a18 <_write+0x8>

08001a2c <_close>:

int _close(int file)
{
	return -1;
}
 8001a2c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a30:	4770      	bx	lr

08001a32 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001a32:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001a36:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001a38:	2000      	movs	r0, #0
 8001a3a:	4770      	bx	lr

08001a3c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001a3c:	2001      	movs	r0, #1
 8001a3e:	4770      	bx	lr

08001a40 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001a40:	2000      	movs	r0, #0
 8001a42:	4770      	bx	lr

08001a44 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001a44:	4a0a      	ldr	r2, [pc, #40]	; (8001a70 <_sbrk+0x2c>)
 8001a46:	6811      	ldr	r1, [r2, #0]
{
 8001a48:	b508      	push	{r3, lr}
 8001a4a:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001a4c:	b909      	cbnz	r1, 8001a52 <_sbrk+0xe>
		heap_end = &end;
 8001a4e:	4909      	ldr	r1, [pc, #36]	; (8001a74 <_sbrk+0x30>)
 8001a50:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001a52:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001a54:	4669      	mov	r1, sp
 8001a56:	4403      	add	r3, r0
 8001a58:	428b      	cmp	r3, r1
 8001a5a:	d906      	bls.n	8001a6a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001a5c:	f025 fd5a 	bl	8027514 <__errno>
 8001a60:	230c      	movs	r3, #12
 8001a62:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001a64:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001a68:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001a6a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001a6c:	e7fc      	b.n	8001a68 <_sbrk+0x24>
 8001a6e:	bf00      	nop
 8001a70:	20000c6c 	.word	0x20000c6c
 8001a74:	20014ed0 	.word	0x20014ed0

08001a78 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 8001a78:	f000 bc74 	b.w	8002364 <touchgfx_init>

08001a7c <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001a7c:	f000 bce4 	b.w	8002448 <touchgfx_taskEntry>

08001a80 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001a80:	4770      	bx	lr

08001a82 <_ZN20STM32TouchControllerD0Ev>:
 8001a82:	b510      	push	{r4, lr}
 8001a84:	2104      	movs	r1, #4
 8001a86:	4604      	mov	r4, r0
 8001a88:	f025 fce3 	bl	8027452 <_ZdlPvj>
 8001a8c:	4620      	mov	r0, r4
 8001a8e:	bd10      	pop	{r4, pc}

08001a90 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001a90:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001a92:	4b0c      	ldr	r3, [pc, #48]	; (8001ac4 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001a94:	4c0c      	ldr	r4, [pc, #48]	; (8001ac8 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001a96:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001a98:	4b0c      	ldr	r3, [pc, #48]	; (8001acc <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001a9a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001a9c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001a9e:	6863      	ldr	r3, [r4, #4]
 8001aa0:	4798      	blx	r3
 8001aa2:	f640 0311 	movw	r3, #2065	; 0x811
 8001aa6:	4298      	cmp	r0, r3
 8001aa8:	d10a      	bne.n	8001ac0 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001aaa:	4d09      	ldr	r5, [pc, #36]	; (8001ad0 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001aac:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001aae:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001ab0:	2082      	movs	r0, #130	; 0x82
 8001ab2:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001ab4:	682b      	ldr	r3, [r5, #0]
 8001ab6:	2082      	movs	r0, #130	; 0x82
 8001ab8:	68db      	ldr	r3, [r3, #12]
 8001aba:	4798      	blx	r3
 8001abc:	2000      	movs	r0, #0
    }

    return ret;
}
 8001abe:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001ac0:	2001      	movs	r0, #1
 8001ac2:	e7fc      	b.n	8001abe <_Z11BSP_TS_Inittt+0x2e>
 8001ac4:	20000c70 	.word	0x20000c70
 8001ac8:	20000070 	.word	0x20000070
 8001acc:	20000c72 	.word	0x20000c72
 8001ad0:	20000c74 	.word	0x20000c74

08001ad4 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001ad4:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001ad8:	20f0      	movs	r0, #240	; 0xf0
 8001ada:	f7ff bfd9 	b.w	8001a90 <_Z11BSP_TS_Inittt>
	...

08001ae0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001ae0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001ae2:	4d2d      	ldr	r5, [pc, #180]	; (8001b98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8001ae4:	682b      	ldr	r3, [r5, #0]
{
 8001ae6:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001ae8:	691b      	ldr	r3, [r3, #16]
 8001aea:	2082      	movs	r0, #130	; 0x82
 8001aec:	4798      	blx	r3
 8001aee:	b280      	uxth	r0, r0
 8001af0:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001af2:	2800      	cmp	r0, #0
 8001af4:	d043      	beq.n	8001b7e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001af6:	682b      	ldr	r3, [r5, #0]
 8001af8:	f10d 0206 	add.w	r2, sp, #6
 8001afc:	695b      	ldr	r3, [r3, #20]
 8001afe:	a901      	add	r1, sp, #4
 8001b00:	2082      	movs	r0, #130	; 0x82
 8001b02:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8001b04:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001b08:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8001b0c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001b0e:	2a0a      	cmp	r2, #10
 8001b10:	d937      	bls.n	8001b82 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8001b12:	230b      	movs	r3, #11
 8001b14:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001b18:	4b20      	ldr	r3, [pc, #128]	; (8001b9c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8001b1a:	881b      	ldrh	r3, [r3, #0]
 8001b1c:	429a      	cmp	r2, r3
 8001b1e:	d901      	bls.n	8001b24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8001b20:	3b01      	subs	r3, #1
 8001b22:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001b24:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001b28:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001b2c:	428b      	cmp	r3, r1
 8001b2e:	d82a      	bhi.n	8001b86 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 8001b30:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001b34:	330e      	adds	r3, #14
 8001b36:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001b38:	210f      	movs	r1, #15
 8001b3a:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001b3e:	4918      	ldr	r1, [pc, #96]	; (8001ba0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 8001b40:	8809      	ldrh	r1, [r1, #0]
 8001b42:	428b      	cmp	r3, r1
 8001b44:	d901      	bls.n	8001b4a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 8001b46:	1e4b      	subs	r3, r1, #1
 8001b48:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001b4a:	4e16      	ldr	r6, [pc, #88]	; (8001ba4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001b4c:	4d16      	ldr	r5, [pc, #88]	; (8001ba8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001b4e:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001b50:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001b52:	4283      	cmp	r3, r0
 8001b54:	b281      	uxth	r1, r0
 8001b56:	bf8c      	ite	hi
 8001b58:	1a59      	subhi	r1, r3, r1
 8001b5a:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001b5c:	b2b8      	uxth	r0, r7
 8001b5e:	42ba      	cmp	r2, r7
 8001b60:	bf8c      	ite	hi
 8001b62:	1a10      	subhi	r0, r2, r0
 8001b64:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001b66:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001b68:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001b6a:	4401      	add	r1, r0
 8001b6c:	2905      	cmp	r1, #5
        {
            _x = x;
 8001b6e:	bfc8      	it	gt
 8001b70:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001b72:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001b74:	bfc8      	it	gt
 8001b76:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001b78:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001b7a:	682b      	ldr	r3, [r5, #0]
 8001b7c:	80a3      	strh	r3, [r4, #4]
    }
}
 8001b7e:	b003      	add	sp, #12
 8001b80:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 8001b82:	2200      	movs	r2, #0
 8001b84:	e7ce      	b.n	8001b24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 8001b86:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001b8a:	3308      	adds	r3, #8
 8001b8c:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001b8e:	2b0e      	cmp	r3, #14
 8001b90:	d8d2      	bhi.n	8001b38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8001b92:	2300      	movs	r3, #0
 8001b94:	e7d9      	b.n	8001b4a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8001b96:	bf00      	nop
 8001b98:	20000c74 	.word	0x20000c74
 8001b9c:	20000c72 	.word	0x20000c72
 8001ba0:	20000c70 	.word	0x20000c70
 8001ba4:	20000c78 	.word	0x20000c78
 8001ba8:	20000c7c 	.word	0x20000c7c

08001bac <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001bac:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001bae:	4668      	mov	r0, sp
{
 8001bb0:	460d      	mov	r5, r1
 8001bb2:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001bb4:	f7ff ff94 	bl	8001ae0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001bb8:	f8bd 0000 	ldrh.w	r0, [sp]
 8001bbc:	b130      	cbz	r0, 8001bcc <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8001bbe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001bc2:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001bc4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001bc8:	6023      	str	r3, [r4, #0]
        return true;
 8001bca:	2001      	movs	r0, #1
}
 8001bcc:	b003      	add	sp, #12
 8001bce:	bd30      	pop	{r4, r5, pc}

08001bd0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001bd0:	2801      	cmp	r0, #1
 8001bd2:	d00e      	beq.n	8001bf2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x22>
 8001bd4:	2803      	cmp	r0, #3
 8001bd6:	d014      	beq.n	8001c02 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x32>
 8001bd8:	b9d0      	cbnz	r0, 8001c10 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001bda:	4b0e      	ldr	r3, [pc, #56]	; (8001c14 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
 8001bdc:	681a      	ldr	r2, [r3, #0]
 8001bde:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001be2:	fab2 f282 	clz	r2, r2
 8001be6:	0952      	lsrs	r2, r2, #5
 8001be8:	2104      	movs	r1, #4
 8001bea:	f500 3004 	add.w	r0, r0, #135168	; 0x21000
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001bee:	f006 bd07 	b.w	8008600 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001bf2:	4b08      	ldr	r3, [pc, #32]	; (8001c14 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
 8001bf4:	685a      	ldr	r2, [r3, #4]
 8001bf6:	fab2 f282 	clz	r2, r2
 8001bfa:	0952      	lsrs	r2, r2, #5
 8001bfc:	2108      	movs	r1, #8
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001bfe:	4806      	ldr	r0, [pc, #24]	; (8001c18 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 8001c00:	e7f5      	b.n	8001bee <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1e>
 8001c02:	4b04      	ldr	r3, [pc, #16]	; (8001c14 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
 8001c04:	68da      	ldr	r2, [r3, #12]
 8001c06:	fab2 f282 	clz	r2, r2
 8001c0a:	0952      	lsrs	r2, r2, #5
 8001c0c:	2120      	movs	r1, #32
 8001c0e:	e7f6      	b.n	8001bfe <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2e>
#endif
        break;
    }
}
 8001c10:	4770      	bx	lr
 8001c12:	bf00      	nop
 8001c14:	20000c80 	.word	0x20000c80
 8001c18:	40021000 	.word	0x40021000

08001c1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001c1c:	2801      	cmp	r0, #1
 8001c1e:	d00e      	beq.n	8001c3e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x22>
 8001c20:	2803      	cmp	r0, #3
 8001c22:	d014      	beq.n	8001c4e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x32>
 8001c24:	b9d0      	cbnz	r0, 8001c5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001c26:	4b0e      	ldr	r3, [pc, #56]	; (8001c60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
 8001c28:	681a      	ldr	r2, [r3, #0]
 8001c2a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001c2e:	3a00      	subs	r2, #0
 8001c30:	bf18      	it	ne
 8001c32:	2201      	movne	r2, #1
 8001c34:	2104      	movs	r1, #4
 8001c36:	f500 3004 	add.w	r0, r0, #135168	; 0x21000
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001c3a:	f006 bce1 	b.w	8008600 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001c3e:	4b08      	ldr	r3, [pc, #32]	; (8001c60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
 8001c40:	685a      	ldr	r2, [r3, #4]
 8001c42:	3a00      	subs	r2, #0
 8001c44:	bf18      	it	ne
 8001c46:	2201      	movne	r2, #1
 8001c48:	2108      	movs	r1, #8
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001c4a:	4806      	ldr	r0, [pc, #24]	; (8001c64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 8001c4c:	e7f5      	b.n	8001c3a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1e>
 8001c4e:	4b04      	ldr	r3, [pc, #16]	; (8001c60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
 8001c50:	68da      	ldr	r2, [r3, #12]
 8001c52:	3a00      	subs	r2, #0
 8001c54:	bf18      	it	ne
 8001c56:	2201      	movne	r2, #1
 8001c58:	2120      	movs	r1, #32
 8001c5a:	e7f6      	b.n	8001c4a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2e>
#endif
        break;
    }
}
 8001c5c:	4770      	bx	lr
 8001c5e:	bf00      	nop
 8001c60:	20000c80 	.word	0x20000c80
 8001c64:	40021000 	.word	0x40021000

08001c68 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001c68:	2801      	cmp	r0, #1
 8001c6a:	d009      	beq.n	8001c80 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>
 8001c6c:	2803      	cmp	r0, #3
 8001c6e:	d00a      	beq.n	8001c86 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
 8001c70:	b958      	cbnz	r0, 8001c8a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x22>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001c72:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001c76:	2104      	movs	r1, #4
 8001c78:	f500 3004 	add.w	r0, r0, #135168	; 0x21000
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001c7c:	f006 bcc5 	b.w	800860a <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001c80:	2108      	movs	r1, #8
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001c82:	4802      	ldr	r0, [pc, #8]	; (8001c8c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8001c84:	e7fa      	b.n	8001c7c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>
 8001c86:	2120      	movs	r1, #32
 8001c88:	e7fb      	b.n	8001c82 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001c8a:	4770      	bx	lr
 8001c8c:	40021000 	.word	0x40021000

08001c90 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001c90:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001c92:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8001c96:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8001c9a:	4770      	bx	lr

08001c9c <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8001c9c:	2000      	movs	r0, #0
 8001c9e:	4770      	bx	lr

08001ca0 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001ca0:	4b03      	ldr	r3, [pc, #12]	; (8001cb0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001ca2:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001ca4:	3900      	subs	r1, #0
 8001ca6:	bf18      	it	ne
 8001ca8:	2101      	movne	r1, #1
 8001caa:	7019      	strb	r1, [r3, #0]
    }
 8001cac:	4770      	bx	lr
 8001cae:	bf00      	nop
 8001cb0:	20014c0b 	.word	0x20014c0b

08001cb4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001cb4:	2000      	movs	r0, #0
 8001cb6:	4770      	bx	lr

08001cb8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001cb8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001cba:	b10b      	cbz	r3, 8001cc0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001cbc:	4608      	mov	r0, r1
 8001cbe:	4718      	bx	r3
        }
    }
 8001cc0:	4770      	bx	lr

08001cc2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001cc2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001cc6:	4770      	bx	lr

08001cc8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001cc8:	6840      	ldr	r0, [r0, #4]
 8001cca:	6803      	ldr	r3, [r0, #0]
 8001ccc:	699b      	ldr	r3, [r3, #24]
 8001cce:	4718      	bx	r3

08001cd0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001cd0:	4770      	bx	lr

08001cd2 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001cd2:	4770      	bx	lr

08001cd4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001cd4:	4770      	bx	lr
	...

08001cd8 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 8001cd8:	b570      	push	{r4, r5, r6, lr}
 8001cda:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001cdc:	f000 fc54 	bl	8002588 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8001ce0:	6823      	ldr	r3, [r4, #0]
 8001ce2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001ce6:	4b04      	ldr	r3, [pc, #16]	; (8001cf8 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 8001ce8:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 8001cec:	4620      	mov	r0, r4
 8001cee:	46ac      	mov	ip, r5
}
 8001cf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8001cf4:	4760      	bx	ip
 8001cf6:	bf00      	nop
 8001cf8:	d0000000 	.word	0xd0000000

08001cfc <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001cfc:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001cfe:	6803      	ldr	r3, [r0, #0]
{
 8001d00:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001d02:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001d06:	4798      	blx	r3
    enableInterrupts();
 8001d08:	6823      	ldr	r3, [r4, #0]
 8001d0a:	4620      	mov	r0, r4
 8001d0c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001d0e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001d10:	f000 f8ec 	bl	8001eec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001d14:	6823      	ldr	r3, [r4, #0]
 8001d16:	4620      	mov	r0, r4
 8001d18:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d1a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001d1c:	2029      	movs	r0, #41	; 0x29
 8001d1e:	f7ff fa75 	bl	800120c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001d22:	f000 f8e3 	bl	8001eec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001d26:	6823      	ldr	r3, [r4, #0]
 8001d28:	4620      	mov	r0, r4
 8001d2a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d2c:	4798      	blx	r3
    for (;;)
 8001d2e:	e7f8      	b.n	8001d22 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001d30 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001d30:	b510      	push	{r4, lr}
 8001d32:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001d34:	f00f fac4 	bl	80112c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001d38:	6823      	ldr	r3, [r4, #0]
 8001d3a:	4620      	mov	r0, r4
 8001d3c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001d40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001d44:	4718      	bx	r3

08001d46 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001d46:	f000 bc11 	b.w	800256c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001d4a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001d4a:	f000 bc15 	b.w	8002578 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001d4e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001d4e:	f000 bc41 	b.w	80025d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001d52 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001d52:	f000 bbe7 	b.w	8002524 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001d56 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001d56:	f000 bc41 	b.w	80025dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001d5a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001d5a:	f000 bc49 	b.w	80025f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001d5e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001d5e:	f000 bbeb 	b.w	8002538 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001d62 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001d62:	f00e bc39 	b.w	80105d8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001d66 <_ZN11TouchGFXHALD0Ev>:
 8001d66:	b510      	push	{r4, lr}
 8001d68:	217c      	movs	r1, #124	; 0x7c
 8001d6a:	4604      	mov	r4, r0
 8001d6c:	f025 fb71 	bl	8027452 <_ZdlPvj>
 8001d70:	4620      	mov	r0, r4
 8001d72:	bd10      	pop	{r4, pc}

08001d74 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001d74:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8001d78:	b11b      	cbz	r3, 8001d82 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001d7a:	6840      	ldr	r0, [r0, #4]
 8001d7c:	6803      	ldr	r3, [r0, #0]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	4718      	bx	r3
    }
 8001d82:	4618      	mov	r0, r3
 8001d84:	4770      	bx	lr
	...

08001d88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001d88:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001d8a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001d8e:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8001d92:	4b0c      	ldr	r3, [pc, #48]	; (8001dc4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001d94:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001d96:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001d98:	d009      	beq.n	8001dae <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001d9a:	b93a      	cbnz	r2, 8001dac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001d9c:	4a0a      	ldr	r2, [pc, #40]	; (8001dc8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001d9e:	490b      	ldr	r1, [pc, #44]	; (8001dcc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001da0:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001da2:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001da4:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001da6:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001da8:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001daa:	701a      	strb	r2, [r3, #0]
    }
 8001dac:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001dae:	2a00      	cmp	r2, #0
 8001db0:	d0fc      	beq.n	8001dac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001db2:	4a05      	ldr	r2, [pc, #20]	; (8001dc8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001db4:	4905      	ldr	r1, [pc, #20]	; (8001dcc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001db6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001db8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001dba:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001dbc:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	e7f3      	b.n	8001daa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001dc2:	bf00      	nop
 8001dc4:	20014c04 	.word	0x20014c04
 8001dc8:	20014c00 	.word	0x20014c00
 8001dcc:	20014c02 	.word	0x20014c02

08001dd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001dd0:	b570      	push	{r4, r5, r6, lr}
 8001dd2:	460d      	mov	r5, r1
 8001dd4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001dd6:	b935      	cbnz	r5, 8001de6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001dd8:	4b09      	ldr	r3, [pc, #36]	; (8001e00 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001dda:	4a0a      	ldr	r2, [pc, #40]	; (8001e04 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001ddc:	480a      	ldr	r0, [pc, #40]	; (8001e08 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001dde:	f240 21bb 	movw	r1, #699	; 0x2bb
 8001de2:	f025 fb65 	bl	80274b0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001de6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001dea:	4b08      	ldr	r3, [pc, #32]	; (8001e0c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001dec:	3a00      	subs	r2, #0
 8001dee:	bf18      	it	ne
 8001df0:	2201      	movne	r2, #1
 8001df2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001df4:	6803      	ldr	r3, [r0, #0]
    }
 8001df6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001dfa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001dfe:	4718      	bx	r3
 8001e00:	08028984 	.word	0x08028984
 8001e04:	080289bc 	.word	0x080289bc
 8001e08:	08028a0a 	.word	0x08028a0a
 8001e0c:	20014c0a 	.word	0x20014c0a

08001e10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001e10:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001e12:	4b09      	ldr	r3, [pc, #36]	; (8001e38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001e14:	881b      	ldrh	r3, [r3, #0]
 8001e16:	428b      	cmp	r3, r1
 8001e18:	d803      	bhi.n	8001e22 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001e1a:	4b08      	ldr	r3, [pc, #32]	; (8001e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001e1c:	881b      	ldrh	r3, [r3, #0]
 8001e1e:	4293      	cmp	r3, r2
 8001e20:	d905      	bls.n	8001e2e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001e22:	4b07      	ldr	r3, [pc, #28]	; (8001e40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001e24:	4a07      	ldr	r2, [pc, #28]	; (8001e44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001e26:	4808      	ldr	r0, [pc, #32]	; (8001e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001e28:	219e      	movs	r1, #158	; 0x9e
 8001e2a:	f025 fb41 	bl	80274b0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001e2e:	4b07      	ldr	r3, [pc, #28]	; (8001e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001e30:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001e32:	4b07      	ldr	r3, [pc, #28]	; (8001e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001e34:	801a      	strh	r2, [r3, #0]
    }
 8001e36:	bd08      	pop	{r3, pc}
 8001e38:	20014c00 	.word	0x20014c00
 8001e3c:	20014c02 	.word	0x20014c02
 8001e40:	08028a4f 	.word	0x08028a4f
 8001e44:	08028ab2 	.word	0x08028ab2
 8001e48:	08028a0a 	.word	0x08028a0a
 8001e4c:	20014c06 	.word	0x20014c06
 8001e50:	20014c08 	.word	0x20014c08

08001e54 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001e54:	2101      	movs	r1, #1
{
 8001e56:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001e58:	2200      	movs	r2, #0
 8001e5a:	4608      	mov	r0, r1
 8001e5c:	f00a fe90 	bl	800cb80 <osSemaphoreNew>
 8001e60:	4b0a      	ldr	r3, [pc, #40]	; (8001e8c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001e62:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001e64:	b928      	cbnz	r0, 8001e72 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001e66:	4b0a      	ldr	r3, [pc, #40]	; (8001e90 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001e68:	4a0a      	ldr	r2, [pc, #40]	; (8001e94 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001e6a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001e6c:	480a      	ldr	r0, [pc, #40]	; (8001e98 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001e6e:	f025 fb1f 	bl	80274b0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001e72:	2200      	movs	r2, #0
 8001e74:	2104      	movs	r1, #4
 8001e76:	2001      	movs	r0, #1
 8001e78:	f00a ff32 	bl	800cce0 <osMessageQueueNew>
 8001e7c:	4b07      	ldr	r3, [pc, #28]	; (8001e9c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001e7e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001e80:	b918      	cbnz	r0, 8001e8a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001e82:	4b07      	ldr	r3, [pc, #28]	; (8001ea0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001e84:	4a03      	ldr	r2, [pc, #12]	; (8001e94 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001e86:	212c      	movs	r1, #44	; 0x2c
 8001e88:	e7f0      	b.n	8001e6c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001e8a:	bd08      	pop	{r3, pc}
 8001e8c:	20000c94 	.word	0x20000c94
 8001e90:	08028bd0 	.word	0x08028bd0
 8001e94:	08028c19 	.word	0x08028c19
 8001e98:	08028c48 	.word	0x08028c48
 8001e9c:	20000c90 	.word	0x20000c90
 8001ea0:	08028c8a 	.word	0x08028c8a

08001ea4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001ea4:	4b02      	ldr	r3, [pc, #8]	; (8001eb0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001ea6:	f04f 31ff 	mov.w	r1, #4294967295
 8001eaa:	6818      	ldr	r0, [r3, #0]
 8001eac:	f00a beb2 	b.w	800cc14 <osSemaphoreAcquire>
 8001eb0:	20000c94 	.word	0x20000c94

08001eb4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001eb4:	4b01      	ldr	r3, [pc, #4]	; (8001ebc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001eb6:	6818      	ldr	r0, [r3, #0]
 8001eb8:	f00a bed7 	b.w	800cc6a <osSemaphoreRelease>
 8001ebc:	20000c94 	.word	0x20000c94

08001ec0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001ec0:	4b02      	ldr	r3, [pc, #8]	; (8001ecc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001ec2:	2100      	movs	r1, #0
 8001ec4:	6818      	ldr	r0, [r3, #0]
 8001ec6:	f00a bea5 	b.w	800cc14 <osSemaphoreAcquire>
 8001eca:	bf00      	nop
 8001ecc:	20000c94 	.word	0x20000c94

08001ed0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001ed0:	f7ff bff0 	b.w	8001eb4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001ed4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001ed4:	4803      	ldr	r0, [pc, #12]	; (8001ee4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001ed6:	4904      	ldr	r1, [pc, #16]	; (8001ee8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001ed8:	6800      	ldr	r0, [r0, #0]
 8001eda:	2300      	movs	r3, #0
 8001edc:	461a      	mov	r2, r3
 8001ede:	f00a bf3a 	b.w	800cd56 <osMessageQueuePut>
 8001ee2:	bf00      	nop
 8001ee4:	20000c90 	.word	0x20000c90
 8001ee8:	20000030 	.word	0x20000030

08001eec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001eec:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001eee:	4c08      	ldr	r4, [pc, #32]	; (8001f10 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	461a      	mov	r2, r3
 8001ef4:	a901      	add	r1, sp, #4
 8001ef6:	6820      	ldr	r0, [r4, #0]
 8001ef8:	f00a ff5d 	bl	800cdb6 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001efc:	6820      	ldr	r0, [r4, #0]
 8001efe:	f04f 33ff 	mov.w	r3, #4294967295
 8001f02:	2200      	movs	r2, #0
 8001f04:	a901      	add	r1, sp, #4
 8001f06:	f00a ff56 	bl	800cdb6 <osMessageQueueGet>
}
 8001f0a:	b002      	add	sp, #8
 8001f0c:	bd10      	pop	{r4, pc}
 8001f0e:	bf00      	nop
 8001f10:	20000c90 	.word	0x20000c90

08001f14 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001f14:	6803      	ldr	r3, [r0, #0]
 8001f16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f18:	4718      	bx	r3

08001f1a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001f1a:	2001      	movs	r0, #1
 8001f1c:	4770      	bx	lr

08001f1e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001f1e:	6803      	ldr	r3, [r0, #0]
 8001f20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001f22:	4718      	bx	r3

08001f24 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001f24:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f26:	2300      	movs	r3, #0
 8001f28:	9301      	str	r3, [sp, #4]
 8001f2a:	4b0d      	ldr	r3, [pc, #52]	; (8001f60 <_ZN8STM32DMA10initializeEv+0x3c>)
 8001f2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f2e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001f32:	631a      	str	r2, [r3, #48]	; 0x30
 8001f34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f36:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8001f3a:	9201      	str	r2, [sp, #4]
 8001f3c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001f3e:	691a      	ldr	r2, [r3, #16]
 8001f40:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001f44:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001f46:	691a      	ldr	r2, [r3, #16]
 8001f48:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8001f4c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001f4e:	4b05      	ldr	r3, [pc, #20]	; (8001f64 <_ZN8STM32DMA10initializeEv+0x40>)
 8001f50:	4a05      	ldr	r2, [pc, #20]	; (8001f68 <_ZN8STM32DMA10initializeEv+0x44>)
 8001f52:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001f54:	4b05      	ldr	r3, [pc, #20]	; (8001f6c <_ZN8STM32DMA10initializeEv+0x48>)
 8001f56:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001f5a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001f5c:	b002      	add	sp, #8
 8001f5e:	4770      	bx	lr
 8001f60:	40023800 	.word	0x40023800
 8001f64:	200006b8 	.word	0x200006b8
 8001f68:	08001fb1 	.word	0x08001fb1
 8001f6c:	e000e100 	.word	0xe000e100

08001f70 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001f70:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001f74:	4770      	bx	lr
	...

08001f78 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001f78:	4b05      	ldr	r3, [pc, #20]	; (8001f90 <_ZN8STM32DMAD1Ev+0x18>)
 8001f7a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001f7c:	4b05      	ldr	r3, [pc, #20]	; (8001f94 <_ZN8STM32DMAD1Ev+0x1c>)
 8001f7e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001f82:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001f86:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001f8a:	f3bf 8f6f 	isb	sy
}
 8001f8e:	4770      	bx	lr
 8001f90:	08028e1c 	.word	0x08028e1c
 8001f94:	e000e100 	.word	0xe000e100

08001f98 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001f98:	b510      	push	{r4, lr}
 8001f9a:	4604      	mov	r4, r0
}
 8001f9c:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001fa0:	f7ff ffea 	bl	8001f78 <_ZN8STM32DMAD1Ev>
 8001fa4:	4620      	mov	r0, r4
 8001fa6:	f025 fa54 	bl	8027452 <_ZdlPvj>
 8001faa:	4620      	mov	r0, r4
 8001fac:	bd10      	pop	{r4, pc}
	...

08001fb0 <DMA2D_XferCpltCallback>:
        return instance;
 8001fb0:	4b02      	ldr	r3, [pc, #8]	; (8001fbc <DMA2D_XferCpltCallback+0xc>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001fb6:	6803      	ldr	r3, [r0, #0]
 8001fb8:	695b      	ldr	r3, [r3, #20]
 8001fba:	4718      	bx	r3
 8001fbc:	20014c0c 	.word	0x20014c0c

08001fc0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001fc0:	b570      	push	{r4, r5, r6, lr}
 8001fc2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001fc4:	4625      	mov	r5, r4
 8001fc6:	4b0a      	ldr	r3, [pc, #40]	; (8001ff0 <_ZN8STM32DMAC1Ev+0x30>)
 8001fc8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001fca:	2600      	movs	r6, #0
 8001fcc:	6060      	str	r0, [r4, #4]
 8001fce:	7226      	strb	r6, [r4, #8]
 8001fd0:	7266      	strb	r6, [r4, #9]
 8001fd2:	f845 3b20 	str.w	r3, [r5], #32
 8001fd6:	2260      	movs	r2, #96	; 0x60
 8001fd8:	4629      	mov	r1, r5
 8001fda:	f00f fad9 	bl	8011590 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001fde:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001fe2:	60ee      	str	r6, [r5, #12]
 8001fe4:	3524      	adds	r5, #36	; 0x24
 8001fe6:	42ab      	cmp	r3, r5
 8001fe8:	d1fb      	bne.n	8001fe2 <_ZN8STM32DMAC1Ev+0x22>
}
 8001fea:	4620      	mov	r0, r4
 8001fec:	bd70      	pop	{r4, r5, r6, pc}
 8001fee:	bf00      	nop
 8001ff0:	08028e1c 	.word	0x08028e1c

08001ff4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001ff4:	b508      	push	{r3, lr}
    switch (format)
 8001ff6:	290b      	cmp	r1, #11
 8001ff8:	d80b      	bhi.n	8002012 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001ffa:	e8df f001 	tbb	[pc, r1]
 8001ffe:	0612      	.short	0x0612
 8002000:	0a0a0a10 	.word	0x0a0a0a10
 8002004:	0808080a 	.word	0x0808080a
 8002008:	0808      	.short	0x0808
 800200a:	2001      	movs	r0, #1
}
 800200c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800200e:	2005      	movs	r0, #5
        break;
 8002010:	e7fc      	b.n	800200c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8002012:	4b05      	ldr	r3, [pc, #20]	; (8002028 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8002014:	4a05      	ldr	r2, [pc, #20]	; (800202c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8002016:	4806      	ldr	r0, [pc, #24]	; (8002030 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8002018:	2166      	movs	r1, #102	; 0x66
 800201a:	f025 fa49 	bl	80274b0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800201e:	2000      	movs	r0, #0
 8002020:	e7f4      	b.n	800200c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8002022:	2002      	movs	r0, #2
    return dma2dColorMode;
 8002024:	e7f2      	b.n	800200c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8002026:	bf00      	nop
 8002028:	08028ccc 	.word	0x08028ccc
 800202c:	08028ce7 	.word	0x08028ce7
 8002030:	08028d31 	.word	0x08028d31

08002034 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8002034:	b508      	push	{r3, lr}
    switch (format)
 8002036:	290a      	cmp	r1, #10
 8002038:	d809      	bhi.n	800204e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 800203a:	e8df f001 	tbb	[pc, r1]
 800203e:	0610      	.short	0x0610
 8002040:	0808080e 	.word	0x0808080e
 8002044:	06060608 	.word	0x06060608
 8002048:	06          	.byte	0x06
 8002049:	00          	.byte	0x00
 800204a:	2001      	movs	r0, #1
}
 800204c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800204e:	4b05      	ldr	r3, [pc, #20]	; (8002064 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8002050:	4a05      	ldr	r2, [pc, #20]	; (8002068 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8002052:	4806      	ldr	r0, [pc, #24]	; (800206c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8002054:	2187      	movs	r1, #135	; 0x87
 8002056:	f025 fa2b 	bl	80274b0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800205a:	2000      	movs	r0, #0
 800205c:	e7f6      	b.n	800204c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800205e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8002060:	e7f4      	b.n	800204c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8002062:	bf00      	nop
 8002064:	08028ccc 	.word	0x08028ccc
 8002068:	08028d71 	.word	0x08028d71
 800206c:	08028d31 	.word	0x08028d31

08002070 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8002070:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8002074:	7f4f      	ldrb	r7, [r1, #29]
{
 8002076:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8002078:	4639      	mov	r1, r7
{
 800207a:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800207c:	f7ff ffba 	bl	8001ff4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002080:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8002084:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002086:	4641      	mov	r1, r8
 8002088:	4648      	mov	r0, r9
 800208a:	f7ff ffb3 	bl	8001ff4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800208e:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002090:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002092:	4648      	mov	r0, r9
 8002094:	f7ff ffce 	bl	8002034 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002098:	8aa1      	ldrh	r1, [r4, #20]
 800209a:	8b62      	ldrh	r2, [r4, #26]
 800209c:	4b42      	ldr	r3, [pc, #264]	; (80021a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800209e:	1a52      	subs	r2, r2, r1
 80020a0:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80020a2:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80020a4:	8b22      	ldrh	r2, [r4, #24]
 80020a6:	1a52      	subs	r2, r2, r1
 80020a8:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80020aa:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80020ac:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80020ae:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80020b2:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80020b4:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80020b6:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80020b8:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80020ba:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 80020bc:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80020be:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 80020c2:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80020c4:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 80020c8:	d026      	beq.n	8002118 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 80020ca:	d810      	bhi.n	80020ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 80020cc:	2920      	cmp	r1, #32
 80020ce:	ea45 0402 	orr.w	r4, r5, r2
 80020d2:	d061      	beq.n	8002198 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80020d4:	2940      	cmp	r1, #64	; 0x40
 80020d6:	d05f      	beq.n	8002198 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80020d8:	2904      	cmp	r1, #4
 80020da:	d05d      	beq.n	8002198 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80020dc:	4b32      	ldr	r3, [pc, #200]	; (80021a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80020de:	432a      	orrs	r2, r5
 80020e0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 80020e4:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80020e6:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80020e8:	d05a      	beq.n	80021a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 80020ea:	4a30      	ldr	r2, [pc, #192]	; (80021ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80020ec:	e040      	b.n	8002170 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 80020ee:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80020f2:	d007      	beq.n	8002104 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 80020f4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80020f8:	d1f0      	bne.n	80020dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80020fa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80020fe:	f042 0209 	orr.w	r2, r2, #9
 8002102:	e003      	b.n	800210c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002104:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002108:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800210c:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800210e:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002110:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002112:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002114:	6158      	str	r0, [r3, #20]
 8002116:	e02a      	b.n	800216e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8002118:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800211a:	432a      	orrs	r2, r5
 800211c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002120:	1d21      	adds	r1, r4, #4
 8002122:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002124:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8002126:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002128:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800212a:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800212c:	b142      	cbz	r2, 8002140 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800212e:	2a01      	cmp	r2, #1
 8002130:	d021      	beq.n	8002176 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8002132:	4b1f      	ldr	r3, [pc, #124]	; (80021b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002134:	4a1f      	ldr	r2, [pc, #124]	; (80021b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8002136:	4820      	ldr	r0, [pc, #128]	; (80021b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8002138:	f240 1111 	movw	r1, #273	; 0x111
 800213c:	f025 f9b8 	bl	80274b0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002140:	69da      	ldr	r2, [r3, #28]
 8002142:	8861      	ldrh	r1, [r4, #2]
 8002144:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8002148:	3901      	subs	r1, #1
 800214a:	f022 0210 	bic.w	r2, r2, #16
 800214e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8002152:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8002154:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8002156:	4b14      	ldr	r3, [pc, #80]	; (80021a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002158:	69da      	ldr	r2, [r3, #28]
 800215a:	f042 0220 	orr.w	r2, r2, #32
 800215e:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8002160:	69da      	ldr	r2, [r3, #28]
 8002162:	0692      	lsls	r2, r2, #26
 8002164:	d4fc      	bmi.n	8002160 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8002166:	2210      	movs	r2, #16
 8002168:	609a      	str	r2, [r3, #8]
            if(blend)
 800216a:	2800      	cmp	r0, #0
 800216c:	d0bd      	beq.n	80020ea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800216e:	4a13      	ldr	r2, [pc, #76]	; (80021bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002170:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8002172:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002176:	8862      	ldrh	r2, [r4, #2]
 8002178:	69d9      	ldr	r1, [r3, #28]
 800217a:	1e54      	subs	r4, r2, #1
 800217c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8002180:	f022 0210 	bic.w	r2, r2, #16
 8002184:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8002188:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800218c:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8002190:	bf18      	it	ne
 8002192:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002194:	61da      	str	r2, [r3, #28]
                break;
 8002196:	e7de      	b.n	8002156 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002198:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 800219c:	61dc      	str	r4, [r3, #28]
 800219e:	e7b8      	b.n	8002112 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80021a0:	f240 2201 	movw	r2, #513	; 0x201
 80021a4:	e7e4      	b.n	8002170 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 80021a6:	bf00      	nop
 80021a8:	4002b000 	.word	0x4002b000
 80021ac:	00010201 	.word	0x00010201
 80021b0:	08028dbc 	.word	0x08028dbc
 80021b4:	08028dd6 	.word	0x08028dd6
 80021b8:	08028d31 	.word	0x08028d31
 80021bc:	00020201 	.word	0x00020201

080021c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80021c0:	b570      	push	{r4, r5, r6, lr}
 80021c2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80021c4:	7f89      	ldrb	r1, [r1, #30]
 80021c6:	f7ff ff35 	bl	8002034 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80021ca:	8aa6      	ldrh	r6, [r4, #20]
 80021cc:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021ce:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80021d0:	4b15      	ldr	r3, [pc, #84]	; (8002228 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80021d2:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80021d4:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80021d6:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021da:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80021dc:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80021de:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021e0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80021e2:	6826      	ldr	r6, [r4, #0]
 80021e4:	68e1      	ldr	r1, [r4, #12]
 80021e6:	2e08      	cmp	r6, #8
 80021e8:	d10d      	bne.n	8002206 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021ea:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80021ec:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80021ee:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 80021f0:	7f20      	ldrb	r0, [r4, #28]
 80021f2:	4a0e      	ldr	r2, [pc, #56]	; (800222c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80021f4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80021f8:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80021fa:	4a0d      	ldr	r2, [pc, #52]	; (8002230 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80021fc:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80021fe:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002200:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002202:	601a      	str	r2, [r3, #0]
    }
}
 8002204:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002206:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002208:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800220a:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800220c:	0948      	lsrs	r0, r1, #5
 800220e:	0a0a      	lsrs	r2, r1, #8
 8002210:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8002214:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8002218:	4302      	orrs	r2, r0
 800221a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800221e:	430a      	orrs	r2, r1
 8002220:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002222:	4a04      	ldr	r2, [pc, #16]	; (8002234 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8002224:	e7ed      	b.n	8002202 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002226:	bf00      	nop
 8002228:	4002b000 	.word	0x4002b000
 800222c:	00010009 	.word	0x00010009
 8002230:	00020201 	.word	0x00020201
 8002234:	00030201 	.word	0x00030201

08002238 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002238:	2001      	movs	r0, #1
 800223a:	4770      	bx	lr

0800223c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800223c:	200c      	movs	r0, #12
 800223e:	4770      	bx	lr

08002240 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002240:	230c      	movs	r3, #12
 8002242:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002246:	3008      	adds	r0, #8
 8002248:	4770      	bx	lr

0800224a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800224a:	230c      	movs	r3, #12
 800224c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002250:	3008      	adds	r0, #8
 8002252:	4770      	bx	lr

08002254 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002254:	2001      	movs	r0, #1
 8002256:	4770      	bx	lr

08002258 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002258:	f44f 50f3 	mov.w	r0, #7776	; 0x1e60
 800225c:	4770      	bx	lr

0800225e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800225e:	f44f 53f3 	mov.w	r3, #7776	; 0x1e60
 8002262:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002266:	3008      	adds	r0, #8
 8002268:	4770      	bx	lr

0800226a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800226a:	f44f 53f3 	mov.w	r3, #7776	; 0x1e60
 800226e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002272:	3008      	adds	r0, #8
 8002274:	4770      	bx	lr

08002276 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002276:	2001      	movs	r0, #1
 8002278:	4770      	bx	lr

0800227a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800227a:	2010      	movs	r0, #16
 800227c:	4770      	bx	lr

0800227e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800227e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002282:	3008      	adds	r0, #8
 8002284:	4770      	bx	lr

08002286 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002286:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800228a:	3008      	adds	r0, #8
 800228c:	4770      	bx	lr

0800228e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800228e:	4608      	mov	r0, r1
 8002290:	f001 ba04 	b.w	800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08002294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002294:	b510      	push	{r4, lr}
 8002296:	4b03      	ldr	r3, [pc, #12]	; (80022a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002298:	6003      	str	r3, [r0, #0]
 800229a:	4604      	mov	r4, r0
 800229c:	f00c fda8 	bl	800edf0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022a0:	4620      	mov	r0, r4
 80022a2:	bd10      	pop	{r4, pc}
 80022a4:	08028ed4 	.word	0x08028ed4

080022a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022a8:	b510      	push	{r4, lr}
 80022aa:	4604      	mov	r4, r0
 80022ac:	f7ff fff2 	bl	8002294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022b0:	4620      	mov	r0, r4
 80022b2:	2114      	movs	r1, #20
 80022b4:	f025 f8cd 	bl	8027452 <_ZdlPvj>
 80022b8:	4620      	mov	r0, r4
 80022ba:	bd10      	pop	{r4, pc}

080022bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80022bc:	b510      	push	{r4, lr}
 80022be:	4b03      	ldr	r3, [pc, #12]	; (80022cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80022c0:	6003      	str	r3, [r0, #0]
 80022c2:	4604      	mov	r4, r0
 80022c4:	f00c fd94 	bl	800edf0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022c8:	4620      	mov	r0, r4
 80022ca:	bd10      	pop	{r4, pc}
 80022cc:	08028ea0 	.word	0x08028ea0

080022d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022d0:	b510      	push	{r4, lr}
 80022d2:	4604      	mov	r4, r0
 80022d4:	f7ff fff2 	bl	80022bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022d8:	4620      	mov	r0, r4
 80022da:	f641 6168 	movw	r1, #7784	; 0x1e68
 80022de:	f025 f8b8 	bl	8027452 <_ZdlPvj>
 80022e2:	4620      	mov	r0, r4
 80022e4:	bd10      	pop	{r4, pc}
	...

080022e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80022e8:	b510      	push	{r4, lr}
 80022ea:	4b03      	ldr	r3, [pc, #12]	; (80022f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80022ec:	6003      	str	r3, [r0, #0]
 80022ee:	4604      	mov	r4, r0
 80022f0:	f00c fd7e 	bl	800edf0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022f4:	4620      	mov	r0, r4
 80022f6:	bd10      	pop	{r4, pc}
 80022f8:	08028e6c 	.word	0x08028e6c

080022fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022fc:	b510      	push	{r4, lr}
 80022fe:	4604      	mov	r4, r0
 8002300:	f7ff fff2 	bl	80022e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002304:	4620      	mov	r0, r4
 8002306:	2118      	movs	r1, #24
 8002308:	f025 f8a3 	bl	8027452 <_ZdlPvj>
 800230c:	4620      	mov	r0, r4
 800230e:	bd10      	pop	{r4, pc}

08002310 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002310:	b510      	push	{r4, lr}
 8002312:	4b09      	ldr	r3, [pc, #36]	; (8002338 <_ZN12FrontendHeapD1Ev+0x28>)
 8002314:	6003      	str	r3, [r0, #0]
 8002316:	4604      	mov	r4, r0
 8002318:	f500 50f4 	add.w	r0, r0, #7808	; 0x1e80
 800231c:	3014      	adds	r0, #20
 800231e:	f7ff ffb9 	bl	8002294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002322:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002326:	f7ff ffc9 	bl	80022bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21MeasurementScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800232a:	f104 0014 	add.w	r0, r4, #20
 800232e:	f7ff ffdb 	bl	80022e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FileScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002332:	4620      	mov	r0, r4
 8002334:	bd10      	pop	{r4, pc}
 8002336:	bf00      	nop
 8002338:	08028f08 	.word	0x08028f08

0800233c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800233c:	b508      	push	{r3, lr}
 800233e:	4802      	ldr	r0, [pc, #8]	; (8002348 <__tcf_0+0xc>)
 8002340:	f7ff ffe6 	bl	8002310 <_ZN12FrontendHeapD1Ev>
 8002344:	bd08      	pop	{r3, pc}
 8002346:	bf00      	nop
 8002348:	20000c9c 	.word	0x20000c9c

0800234c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800234c:	b510      	push	{r4, lr}
 800234e:	4604      	mov	r4, r0
 8002350:	f7ff ffde 	bl	8002310 <_ZN12FrontendHeapD1Ev>
 8002354:	4620      	mov	r0, r4
 8002356:	f242 11a0 	movw	r1, #8608	; 0x21a0
 800235a:	f025 f87a 	bl	8027452 <_ZdlPvj>
 800235e:	4620      	mov	r0, r4
 8002360:	bd10      	pop	{r4, pc}
	...

08002364 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002364:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002368:	f000 f9aa 	bl	80026c0 <_ZN14BitmapDatabase11getInstanceEv>
 800236c:	4605      	mov	r5, r0
 800236e:	f000 f9ab 	bl	80026c8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002372:	2400      	movs	r4, #0
 8002374:	4601      	mov	r1, r0
 8002376:	4623      	mov	r3, r4
 8002378:	4628      	mov	r0, r5
 800237a:	4622      	mov	r2, r4
 800237c:	9400      	str	r4, [sp, #0]
 800237e:	f017 fb1d 	bl	80199bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002382:	4b26      	ldr	r3, [pc, #152]	; (800241c <touchgfx_init+0xb8>)
 8002384:	4a26      	ldr	r2, [pc, #152]	; (8002420 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002386:	4d27      	ldr	r5, [pc, #156]	; (8002424 <touchgfx_init+0xc0>)
 8002388:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800238a:	4620      	mov	r0, r4
 800238c:	f004 fcd6 	bl	8006d3c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002390:	4825      	ldr	r0, [pc, #148]	; (8002428 <touchgfx_init+0xc4>)
 8002392:	f017 fa5f 	bl	8019854 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002396:	782b      	ldrb	r3, [r5, #0]
 8002398:	f3bf 8f5b 	dmb	ish
 800239c:	07db      	lsls	r3, r3, #31
 800239e:	d437      	bmi.n	8002410 <touchgfx_init+0xac>
 80023a0:	4628      	mov	r0, r5
 80023a2:	f025 f858 	bl	8027456 <__cxa_guard_acquire>
 80023a6:	b398      	cbz	r0, 8002410 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80023a8:	4c20      	ldr	r4, [pc, #128]	; (800242c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80023aa:	4b21      	ldr	r3, [pc, #132]	; (8002430 <touchgfx_init+0xcc>)
 80023ac:	6023      	str	r3, [r4, #0]
 80023ae:	f104 0014 	add.w	r0, r4, #20
 80023b2:	f500 57f4 	add.w	r7, r0, #7808	; 0x1e80
 80023b6:	f507 76da 	add.w	r6, r7, #436	; 0x1b4
 80023ba:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 80023be:	6060      	str	r0, [r4, #4]
 80023c0:	f8c4 8008 	str.w	r8, [r4, #8]
 80023c4:	60e7      	str	r7, [r4, #12]
 80023c6:	6126      	str	r6, [r4, #16]
 80023c8:	f00c fd14 	bl	800edf4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023cc:	4b19      	ldr	r3, [pc, #100]	; (8002434 <touchgfx_init+0xd0>)
 80023ce:	6163      	str	r3, [r4, #20]
 80023d0:	4640      	mov	r0, r8
 80023d2:	f00c fd0f 	bl	800edf4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023d6:	4b18      	ldr	r3, [pc, #96]	; (8002438 <touchgfx_init+0xd4>)
 80023d8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80023da:	4638      	mov	r0, r7
 80023dc:	f00c fd0a 	bl	800edf4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80023e4:	4a15      	ldr	r2, [pc, #84]	; (800243c <touchgfx_init+0xd8>)
 80023e6:	f8c3 2e94 	str.w	r2, [r3, #3732]	; 0xe94
 80023ea:	f603 60a8 	addw	r0, r3, #3752	; 0xea8
 80023ee:	f004 fff7 	bl	80073e0 <_ZN5ModelC1Ev>
 80023f2:	4622      	mov	r2, r4
 80023f4:	f107 0114 	add.w	r1, r7, #20
 80023f8:	4630      	mov	r0, r6
 80023fa:	f004 ff99 	bl	8007330 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80023fe:	4630      	mov	r0, r6
 8002400:	f001 f94c 	bl	800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8002404:	480e      	ldr	r0, [pc, #56]	; (8002440 <touchgfx_init+0xdc>)
 8002406:	f025 f871 	bl	80274ec <atexit>
 800240a:	4628      	mov	r0, r5
 800240c:	f025 f82f 	bl	802746e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002410:	480c      	ldr	r0, [pc, #48]	; (8002444 <touchgfx_init+0xe0>)
}
 8002412:	b002      	add	sp, #8
 8002414:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002418:	f7ff bc5e 	b.w	8001cd8 <_ZN11TouchGFXHAL10initializeEv>
 800241c:	20014c88 	.word	0x20014c88
 8002420:	20003c5c 	.word	0x20003c5c
 8002424:	20000c98 	.word	0x20000c98
 8002428:	20000034 	.word	0x20000034
 800242c:	20000c9c 	.word	0x20000c9c
 8002430:	08028f08 	.word	0x08028f08
 8002434:	08028e6c 	.word	0x08028e6c
 8002438:	08028ea0 	.word	0x08028ea0
 800243c:	08028ed4 	.word	0x08028ed4
 8002440:	0800233d 	.word	0x0800233d
 8002444:	20003be0 	.word	0x20003be0

08002448 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002448:	4801      	ldr	r0, [pc, #4]	; (8002450 <touchgfx_taskEntry+0x8>)
 800244a:	f7ff bc57 	b.w	8001cfc <_ZN11TouchGFXHAL9taskEntryEv>
 800244e:	bf00      	nop
 8002450:	20003be0 	.word	0x20003be0

08002454 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002454:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8002456:	4c23      	ldr	r4, [pc, #140]	; (80024e4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8002458:	4e23      	ldr	r6, [pc, #140]	; (80024e8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800245a:	4b24      	ldr	r3, [pc, #144]	; (80024ec <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 800245c:	4d24      	ldr	r5, [pc, #144]	; (80024f0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 800245e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002460:	4630      	mov	r0, r6
 8002462:	f7ff fdad 	bl	8001fc0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002466:	4628      	mov	r0, r5
 8002468:	f01a fc54 	bl	801cd14 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 800246c:	4b21      	ldr	r3, [pc, #132]	; (80024f4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 800246e:	4822      	ldr	r0, [pc, #136]	; (80024f8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8002470:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002472:	4c22      	ldr	r4, [pc, #136]	; (80024fc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8002474:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8002476:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002478:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 800247a:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800247e:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8002480:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002484:	4c1e      	ldr	r4, [pc, #120]	; (8002500 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8002486:	491f      	ldr	r1, [pc, #124]	; (8002504 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002488:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 800248a:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800248e:	4c1e      	ldr	r4, [pc, #120]	; (8002508 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002490:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8002492:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002496:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 800249a:	6759      	str	r1, [r3, #116]	; 0x74
 800249c:	2101      	movs	r1, #1
 800249e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80024a2:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80024a6:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80024aa:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80024ae:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80024b2:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80024b6:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 80024ba:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 80024be:	661a      	str	r2, [r3, #96]	; 0x60
 80024c0:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 80024c4:	671a      	str	r2, [r3, #112]	; 0x70
 80024c6:	e9c3 6501 	strd	r6, r5, [r3, #4]
 80024ca:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80024ce:	8020      	strh	r0, [r4, #0]
 80024d0:	4c0e      	ldr	r4, [pc, #56]	; (800250c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80024d2:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80024d6:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 80024d8:	480d      	ldr	r0, [pc, #52]	; (8002510 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80024da:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80024dc:	4a0d      	ldr	r2, [pc, #52]	; (8002514 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80024de:	601a      	str	r2, [r3, #0]
}
 80024e0:	bd70      	pop	{r4, r5, r6, pc}
 80024e2:	bf00      	nop
 80024e4:	20002e3c 	.word	0x20002e3c
 80024e8:	20002e40 	.word	0x20002e40
 80024ec:	08028974 	.word	0x08028974
 80024f0:	20003c60 	.word	0x20003c60
 80024f4:	20003be0 	.word	0x20003be0
 80024f8:	20014c0c 	.word	0x20014c0c
 80024fc:	20014c00 	.word	0x20014c00
 8002500:	20014c06 	.word	0x20014c06
 8002504:	01000001 	.word	0x01000001
 8002508:	20014c02 	.word	0x20014c02
 800250c:	20014c08 	.word	0x20014c08
 8002510:	20014c04 	.word	0x20014c04
 8002514:	08028b00 	.word	0x08028b00

08002518 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002518:	4801      	ldr	r0, [pc, #4]	; (8002520 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800251a:	f7ff bd2d 	b.w	8001f78 <_ZN8STM32DMAD1Ev>
 800251e:	bf00      	nop
 8002520:	20002e40 	.word	0x20002e40

08002524 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002524:	4b03      	ldr	r3, [pc, #12]	; (8002534 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8002526:	2290      	movs	r2, #144	; 0x90
 8002528:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800252c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002530:	4770      	bx	lr
 8002532:	bf00      	nop
 8002534:	e000e100 	.word	0xe000e100

08002538 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002538:	4a09      	ldr	r2, [pc, #36]	; (8002560 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800253a:	490a      	ldr	r1, [pc, #40]	; (8002564 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800253c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800253e:	480a      	ldr	r0, [pc, #40]	; (8002568 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002540:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002544:	3b01      	subs	r3, #1
 8002546:	b29b      	uxth	r3, r3
 8002548:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800254a:	6911      	ldr	r1, [r2, #16]
 800254c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002550:	3901      	subs	r1, #1
 8002552:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002554:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002556:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002558:	f043 0301 	orr.w	r3, r3, #1
 800255c:	6353      	str	r3, [r2, #52]	; 0x34
}
 800255e:	4770      	bx	lr
 8002560:	40016800 	.word	0x40016800
 8002564:	20003cdc 	.word	0x20003cdc
 8002568:	20003cda 	.word	0x20003cda

0800256c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800256c:	4b01      	ldr	r3, [pc, #4]	; (8002574 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800256e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002572:	4770      	bx	lr
 8002574:	40016800 	.word	0x40016800

08002578 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002578:	4b02      	ldr	r3, [pc, #8]	; (8002584 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800257a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800257c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002580:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002582:	4770      	bx	lr
 8002584:	40016800 	.word	0x40016800

08002588 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002588:	b570      	push	{r4, r5, r6, lr}
 800258a:	4604      	mov	r4, r0
    HAL::initialize();
 800258c:	f00e f879 	bl	8010682 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002590:	6823      	ldr	r3, [r4, #0]
 8002592:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002594:	f014 f8a8 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8002598:	4601      	mov	r1, r0
 800259a:	4620      	mov	r0, r4
 800259c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800259e:	6823      	ldr	r3, [r4, #0]
 80025a0:	4a05      	ldr	r2, [pc, #20]	; (80025b8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80025a2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80025a6:	4620      	mov	r0, r4
 80025a8:	46ac      	mov	ip, r5
 80025aa:	2300      	movs	r3, #0
}
 80025ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80025b0:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80025b4:	4760      	bx	ip
 80025b6:	bf00      	nop
 80025b8:	d004b000 	.word	0xd004b000

080025bc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80025bc:	f00e b848 	b.w	8010650 <_ZN8touchgfx3HAL10beginFrameEv>

080025c0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80025c0:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80025c4:	b113      	cbz	r3, 80025cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80025c6:	4b02      	ldr	r3, [pc, #8]	; (80025d0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80025c8:	2201      	movs	r2, #1
 80025ca:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80025cc:	f00e b84c 	b.w	8010668 <_ZN8touchgfx3HAL8endFrameEv>
 80025d0:	20003cd8 	.word	0x20003cd8

080025d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80025d4:	f00e b806 	b.w	80105e4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080025d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80025d8:	f00e b95f 	b.w	801089a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080025dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025dc:	4b03      	ldr	r3, [pc, #12]	; (80025ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80025de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80025e2:	609a      	str	r2, [r3, #8]
 80025e4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80025e8:	609a      	str	r2, [r3, #8]
}
 80025ea:	4770      	bx	lr
 80025ec:	e000e100 	.word	0xe000e100

080025f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025f0:	4b08      	ldr	r3, [pc, #32]	; (8002614 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80025f2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80025f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80025fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025fe:	f3bf 8f6f 	isb	sy
 8002602:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002606:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800260a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800260e:	f3bf 8f6f 	isb	sy
}
 8002612:	4770      	bx	lr
 8002614:	e000e100 	.word	0xe000e100

08002618 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002618:	b510      	push	{r4, lr}
        return instance;
 800261a:	4c14      	ldr	r4, [pc, #80]	; (800266c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800261c:	6823      	ldr	r3, [r4, #0]
 800261e:	b323      	cbz	r3, 800266a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002620:	4b13      	ldr	r3, [pc, #76]	; (8002670 <HAL_LTDC_LineEventCallback+0x58>)
 8002622:	4a14      	ldr	r2, [pc, #80]	; (8002674 <HAL_LTDC_LineEventCallback+0x5c>)
 8002624:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002626:	8811      	ldrh	r1, [r2, #0]
 8002628:	428b      	cmp	r3, r1
 800262a:	d113      	bne.n	8002654 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800262c:	4b12      	ldr	r3, [pc, #72]	; (8002678 <HAL_LTDC_LineEventCallback+0x60>)
 800262e:	8819      	ldrh	r1, [r3, #0]
 8002630:	f006 fdd8 	bl	80091e4 <HAL_LTDC_ProgramLineEvent>
 8002634:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002636:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 800263a:	3301      	adds	r3, #1
 800263c:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002640:	f7ff fc48 	bl	8001ed4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002644:	6820      	ldr	r0, [r4, #0]
 8002646:	f00e fe3b 	bl	80112c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800264a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800264e:	2000      	movs	r0, #0
 8002650:	f7ff babe 	b.w	8001bd0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002654:	f006 fdc6 	bl	80091e4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002658:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800265a:	6803      	ldr	r3, [r0, #0]
 800265c:	6a1b      	ldr	r3, [r3, #32]
 800265e:	4798      	blx	r3
    }
 8002660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002664:	2000      	movs	r0, #0
 8002666:	f7ff bad9 	b.w	8001c1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800266a:	bd10      	pop	{r4, pc}
 800266c:	20014c0c 	.word	0x20014c0c
 8002670:	40016800 	.word	0x40016800
 8002674:	20003cdc 	.word	0x20003cdc
 8002678:	20003cda 	.word	0x20003cda

0800267c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DIGIT_TYPE = 0; // verdana_20_4bpp
    static const touchgfx::FontId CLOCKTYPO = 3;  // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800267c:	4770      	bx	lr

0800267e <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800267e:	b508      	push	{r3, lr}
    switch (typography)
 8002680:	2904      	cmp	r1, #4
 8002682:	d814      	bhi.n	80026ae <_ZN23ApplicationFontProvider7getFontEt+0x30>
 8002684:	e8df f001 	tbb	[pc, r1]
 8002688:	0b07030b 	.word	0x0b07030b
 800268c:	0f          	.byte	0x0f
 800268d:	00          	.byte	0x00
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800268e:	f004 fba1 	bl	8006dd4 <_ZN17TypedTextDatabase8getFontsEv>
 8002692:	6840      	ldr	r0, [r0, #4]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002694:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002696:	f004 fb9d 	bl	8006dd4 <_ZN17TypedTextDatabase8getFontsEv>
 800269a:	6880      	ldr	r0, [r0, #8]
 800269c:	e7fa      	b.n	8002694 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800269e:	f004 fb99 	bl	8006dd4 <_ZN17TypedTextDatabase8getFontsEv>
 80026a2:	6800      	ldr	r0, [r0, #0]
 80026a4:	e7f6      	b.n	8002694 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80026a6:	f004 fb95 	bl	8006dd4 <_ZN17TypedTextDatabase8getFontsEv>
 80026aa:	68c0      	ldr	r0, [r0, #12]
 80026ac:	e7f2      	b.n	8002694 <_ZN23ApplicationFontProvider7getFontEt+0x16>
    switch (typography)
 80026ae:	2000      	movs	r0, #0
 80026b0:	e7f0      	b.n	8002694 <_ZN23ApplicationFontProvider7getFontEt+0x16>

080026b2 <_ZN23ApplicationFontProviderD0Ev>:
 80026b2:	b510      	push	{r4, lr}
 80026b4:	2104      	movs	r1, #4
 80026b6:	4604      	mov	r4, r0
 80026b8:	f024 fecb 	bl	8027452 <_ZdlPvj>
 80026bc:	4620      	mov	r0, r4
 80026be:	bd10      	pop	{r4, pc}

080026c0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80026c0:	4800      	ldr	r0, [pc, #0]	; (80026c4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80026c2:	4770      	bx	lr
 80026c4:	08028f28 	.word	0x08028f28

080026c8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80026c8:	2010      	movs	r0, #16
 80026ca:	4770      	bx	lr

080026cc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80026cc:	b513      	push	{r0, r1, r4, lr}
 80026ce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80026d0:	b151      	cbz	r1, 80026e8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026d2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80026d4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80026d6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026da:	aa01      	add	r2, sp, #4
 80026dc:	689c      	ldr	r4, [r3, #8]
 80026de:	f10d 0303 	add.w	r3, sp, #3
 80026e2:	47a0      	blx	r4
        return glyph;
    }
 80026e4:	b002      	add	sp, #8
 80026e6:	bd10      	pop	{r4, pc}
            return 0;
 80026e8:	4608      	mov	r0, r1
 80026ea:	e7fb      	b.n	80026e4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080026ec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80026ec:	8940      	ldrh	r0, [r0, #10]
 80026ee:	4770      	bx	lr

080026f0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80026f0:	8980      	ldrh	r0, [r0, #12]
 80026f2:	4770      	bx	lr

080026f4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80026f4:	8880      	ldrh	r0, [r0, #4]
 80026f6:	4770      	bx	lr

080026f8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80026f8:	7983      	ldrb	r3, [r0, #6]
 80026fa:	8880      	ldrh	r0, [r0, #4]
 80026fc:	4418      	add	r0, r3
    }
 80026fe:	b280      	uxth	r0, r0
 8002700:	4770      	bx	lr

08002702 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002702:	79c0      	ldrb	r0, [r0, #7]
    }
 8002704:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002708:	4770      	bx	lr

0800270a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800270a:	79c0      	ldrb	r0, [r0, #7]
    }
 800270c:	09c0      	lsrs	r0, r0, #7
 800270e:	4770      	bx	lr

08002710 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002710:	2000      	movs	r0, #0
 8002712:	4770      	bx	lr

08002714 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002714:	8081      	strh	r1, [r0, #4]
    }
 8002716:	4770      	bx	lr

08002718 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002718:	80c1      	strh	r1, [r0, #6]
    }
 800271a:	4770      	bx	lr

0800271c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800271c:	8101      	strh	r1, [r0, #8]
    }
 800271e:	4770      	bx	lr

08002720 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002720:	8141      	strh	r1, [r0, #10]
    }
 8002722:	4770      	bx	lr

08002724 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002724:	4770      	bx	lr

08002726 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002726:	4770      	bx	lr

08002728 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002728:	4770      	bx	lr

0800272a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800272a:	4770      	bx	lr

0800272c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800272c:	4770      	bx	lr

0800272e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800272e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002730:	88c4      	ldrh	r4, [r0, #6]
 8002732:	6803      	ldr	r3, [r0, #0]
 8002734:	1b12      	subs	r2, r2, r4
 8002736:	8884      	ldrh	r4, [r0, #4]
 8002738:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800273a:	1b09      	subs	r1, r1, r4
 800273c:	b212      	sxth	r2, r2
    }
 800273e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002742:	b209      	sxth	r1, r1
 8002744:	4718      	bx	r3

08002746 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002746:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800274a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800274c:	f04f 33ff 	mov.w	r3, #4294967295
 8002750:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002752:	6813      	ldr	r3, [r2, #0]
 8002754:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002756:	6010      	str	r0, [r2, #0]
    }
 8002758:	4770      	bx	lr

0800275a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800275a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800275c:	4770      	bx	lr

0800275e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 800275e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002762:	b11a      	cbz	r2, 800276c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002764:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002768:	b102      	cbz	r2, 800276c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800276a:	6018      	str	r0, [r3, #0]
        }
    }
 800276c:	4770      	bx	lr

0800276e <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800276e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002772:	b112      	cbz	r2, 800277a <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002774:	6803      	ldr	r3, [r0, #0]
 8002776:	695b      	ldr	r3, [r3, #20]
 8002778:	4718      	bx	r3
    }
 800277a:	4770      	bx	lr

0800277c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800277c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002780:	461d      	mov	r5, r3
        setX(x);
 8002782:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002784:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800278a:	4604      	mov	r4, r0
 800278c:	4616      	mov	r6, r2
        setX(x);
 800278e:	4798      	blx	r3
        setY(y);
 8002790:	6823      	ldr	r3, [r4, #0]
 8002792:	4631      	mov	r1, r6
 8002794:	4620      	mov	r0, r4
 8002796:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002798:	4798      	blx	r3
        setWidth(width);
 800279a:	6823      	ldr	r3, [r4, #0]
 800279c:	4629      	mov	r1, r5
 800279e:	4620      	mov	r0, r4
 80027a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80027a2:	4798      	blx	r3
        setHeight(height);
 80027a4:	6823      	ldr	r3, [r4, #0]
 80027a6:	4639      	mov	r1, r7
 80027a8:	4620      	mov	r0, r4
 80027aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80027ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 80027b0:	4718      	bx	r3

080027b2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80027b2:	4770      	bx	lr

080027b4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80027b4:	4770      	bx	lr

080027b6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80027b6:	4770      	bx	lr

080027b8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80027b8:	4770      	bx	lr

080027ba <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80027ba:	4770      	bx	lr

080027bc <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80027bc:	4770      	bx	lr

080027be <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80027be:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80027c0:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80027c2:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80027c4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027c6:	466d      	mov	r5, sp
 80027c8:	4601      	mov	r1, r0
 80027ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80027ce:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027d0:	4628      	mov	r0, r5
 80027d2:	4798      	blx	r3
 80027d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027d8:	343c      	adds	r4, #60	; 0x3c
 80027da:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027de:	b005      	add	sp, #20
 80027e0:	bd30      	pop	{r4, r5, pc}

080027e2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027e2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027e4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027e6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027e8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027ea:	466d      	mov	r5, sp
 80027ec:	4601      	mov	r1, r0
 80027ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80027f2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027f4:	4628      	mov	r0, r5
 80027f6:	4798      	blx	r3
 80027f8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027fc:	343c      	adds	r4, #60	; 0x3c
 80027fe:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002802:	b005      	add	sp, #20
 8002804:	bd30      	pop	{r4, r5, pc}

08002806 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002806:	2200      	movs	r2, #0
 8002808:	8002      	strh	r2, [r0, #0]
 800280a:	8042      	strh	r2, [r0, #2]
 800280c:	8082      	strh	r2, [r0, #4]
 800280e:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002810:	4770      	bx	lr

08002812 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002812:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002816:	4770      	bx	lr

08002818 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002818:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800281a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800281c:	4604      	mov	r4, r0
        setX(x);
 800281e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002820:	4615      	mov	r5, r2
        setX(x);
 8002822:	4798      	blx	r3
        setBaselineY(baselineY);
 8002824:	6823      	ldr	r3, [r4, #0]
 8002826:	4629      	mov	r1, r5
 8002828:	4620      	mov	r0, r4
 800282a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800282c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002830:	4718      	bx	r3

08002832 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002832:	2000      	movs	r0, #0
 8002834:	4770      	bx	lr

08002836 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002836:	2200      	movs	r2, #0
 8002838:	f04f 31ff 	mov.w	r1, #4294967295
 800283c:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002840:	6082      	str	r2, [r0, #8]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
 8002842:	4770      	bx	lr

08002844 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002844:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002846:	4770      	bx	lr

08002848 <_ZN18FileScreenViewBaseD1Ev>:

class FileScreenViewBase : public touchgfx::View<FileScreenPresenter>
{
public:
    FileScreenViewBase();
    virtual ~FileScreenViewBase() {}
 8002848:	4770      	bx	lr

0800284a <_ZN18FileScreenViewBase11setupScreenEv>:
}

void FileScreenViewBase::setupScreen()
{

}
 800284a:	4770      	bx	lr

0800284c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800284c:	4770      	bx	lr

0800284e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800284e:	4770      	bx	lr

08002850 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002850:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002854:	b14b      	cbz	r3, 800286a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002856:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 800285a:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800285c:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800285e:	b13b      	cbz	r3, 8002870 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002860:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002864:	681b      	ldr	r3, [r3, #0]
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 8002866:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002868:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 800286a:	f100 0268 	add.w	r2, r0, #104	; 0x68
 800286e:	e7f4      	b.n	800285a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002870:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002874:	e7f6      	b.n	8002864 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002876 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8002876:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002878:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800287c:	b13b      	cbz	r3, 800288e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x18>
 800287e:	f100 03c4 	add.w	r3, r0, #196	; 0xc4
 8002882:	681b      	ldr	r3, [r3, #0]
        this->color = color;
 8002884:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 8002888:	f7ff ffe2 	bl	8002850 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800288c:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 800288e:	f100 03c0 	add.w	r3, r0, #192	; 0xc0
 8002892:	e7f6      	b.n	8002882 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002894 <_ZN8touchgfx8CallbackI18FileScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002894:	4770      	bx	lr

08002896 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 8002896:	4770      	bx	lr

08002898 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002898:	4770      	bx	lr

0800289a <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
 800289a:	4770      	bx	lr

0800289c <_ZN8touchgfx8CallbackI18FileScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800289c:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 800289e:	68c2      	ldr	r2, [r0, #12]
 80028a0:	6844      	ldr	r4, [r0, #4]
 80028a2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80028a4:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80028a6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80028aa:	07d2      	lsls	r2, r2, #31
 80028ac:	bf48      	it	mi
 80028ae:	5962      	ldrmi	r2, [r4, r5]
 80028b0:	689b      	ldr	r3, [r3, #8]
    }
 80028b2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80028b4:	bf48      	it	mi
 80028b6:	58d3      	ldrmi	r3, [r2, r3]
 80028b8:	4718      	bx	r3

080028ba <_ZNK8touchgfx8CallbackI18FileScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 80028ba:	6843      	ldr	r3, [r0, #4]
 80028bc:	b12b      	cbz	r3, 80028ca <_ZNK8touchgfx8CallbackI18FileScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80028be:	6883      	ldr	r3, [r0, #8]
 80028c0:	b92b      	cbnz	r3, 80028ce <_ZNK8touchgfx8CallbackI18FileScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80028c2:	68c0      	ldr	r0, [r0, #12]
 80028c4:	f000 0001 	and.w	r0, r0, #1
 80028c8:	4770      	bx	lr
 80028ca:	4618      	mov	r0, r3
 80028cc:	4770      	bx	lr
 80028ce:	2001      	movs	r0, #1
    }
 80028d0:	4770      	bx	lr

080028d2 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 80028d2:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 80028d6:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80028da:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80028de:	4770      	bx	lr

080028e0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
 80028e0:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80028e4:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
 80028e8:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80028ec:	4770      	bx	lr

080028ee <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 80028ee:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80028f2:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80028f8:	b510      	push	{r4, lr}
    }
 80028fa:	2108      	movs	r1, #8
    virtual ~TypedText()
 80028fc:	4604      	mov	r4, r0
    }
 80028fe:	f024 fda8 	bl	8027452 <_ZdlPvj>
 8002902:	4620      	mov	r0, r4
 8002904:	bd10      	pop	{r4, pc}

08002906 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002906:	b510      	push	{r4, lr}
 8002908:	214c      	movs	r1, #76	; 0x4c
 800290a:	4604      	mov	r4, r0
 800290c:	f024 fda1 	bl	8027452 <_ZdlPvj>
 8002910:	4620      	mov	r0, r4
 8002912:	bd10      	pop	{r4, pc}

08002914 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEED0Ev>:
 8002914:	b510      	push	{r4, lr}
 8002916:	2150      	movs	r1, #80	; 0x50
 8002918:	4604      	mov	r4, r0
 800291a:	f024 fd9a 	bl	8027452 <_ZdlPvj>
 800291e:	4620      	mov	r0, r4
 8002920:	bd10      	pop	{r4, pc}

08002922 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002922:	b510      	push	{r4, lr}
 8002924:	2178      	movs	r1, #120	; 0x78
 8002926:	4604      	mov	r4, r0
 8002928:	f024 fd93 	bl	8027452 <_ZdlPvj>
 800292c:	4620      	mov	r0, r4
 800292e:	bd10      	pop	{r4, pc}

08002930 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002930:	b510      	push	{r4, lr}
 8002932:	21a8      	movs	r1, #168	; 0xa8
 8002934:	4604      	mov	r4, r0
 8002936:	f024 fd8c 	bl	8027452 <_ZdlPvj>
 800293a:	4620      	mov	r0, r4
 800293c:	bd10      	pop	{r4, pc}

0800293e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 800293e:	b510      	push	{r4, lr}
 8002940:	21c8      	movs	r1, #200	; 0xc8
 8002942:	4604      	mov	r4, r0
 8002944:	f024 fd85 	bl	8027452 <_ZdlPvj>
 8002948:	4620      	mov	r0, r4
 800294a:	bd10      	pop	{r4, pc}

0800294c <_ZN8touchgfx8CallbackI18FileScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800294c:	b510      	push	{r4, lr}
 800294e:	2110      	movs	r1, #16
 8002950:	4604      	mov	r4, r0
 8002952:	f024 fd7e 	bl	8027452 <_ZdlPvj>
 8002956:	4620      	mov	r0, r4
 8002958:	bd10      	pop	{r4, pc}

0800295a <_ZN18FileScreenViewBaseD0Ev>:
 800295a:	b510      	push	{r4, lr}
 800295c:	f44f 6127 	mov.w	r1, #2672	; 0xa70
 8002960:	4604      	mov	r4, r0
 8002962:	f024 fd76 	bl	8027452 <_ZdlPvj>
 8002966:	4620      	mov	r0, r4
 8002968:	bd10      	pop	{r4, pc}

0800296a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 800296a:	b510      	push	{r4, lr}
 800296c:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800296e:	307c      	adds	r0, #124	; 0x7c
 8002970:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002974:	b13b      	cbz	r3, 8002986 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002976:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 800297a:	f012 f8e1 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800297e:	4620      	mov	r0, r4
 8002980:	f7ff ff66 	bl	8002850 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002984:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002986:	f104 0178 	add.w	r1, r4, #120	; 0x78
 800298a:	e7f6      	b.n	800297a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

0800298c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800298c:	b510      	push	{r4, lr}
 800298e:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002990:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002992:	b150      	cbz	r0, 80029aa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002994:	6803      	ldr	r3, [r0, #0]
 8002996:	68db      	ldr	r3, [r3, #12]
 8002998:	4798      	blx	r3
 800299a:	b130      	cbz	r0, 80029aa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 800299c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800299e:	6803      	ldr	r3, [r0, #0]
 80029a0:	4621      	mov	r1, r4
 80029a2:	689b      	ldr	r3, [r3, #8]
        }
    }
 80029a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80029a8:	4718      	bx	r3
    }
 80029aa:	bd10      	pop	{r4, pc}

080029ac <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80029ac:	b513      	push	{r0, r1, r4, lr}
 80029ae:	4604      	mov	r4, r0
    {
        T::handleClickEvent(event);
        if (clickAction && clickAction->isValid())
 80029b0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    virtual void handleClickEvent(const ClickEvent& event)
 80029b2:	9101      	str	r1, [sp, #4]
        if (clickAction && clickAction->isValid())
 80029b4:	b160      	cbz	r0, 80029d0 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEE16handleClickEventERKNS_10ClickEventE+0x24>
 80029b6:	6803      	ldr	r3, [r0, #0]
 80029b8:	68db      	ldr	r3, [r3, #12]
 80029ba:	4798      	blx	r3
 80029bc:	b140      	cbz	r0, 80029d0 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEE16handleClickEventERKNS_10ClickEventE+0x24>
        {
            clickAction->execute(*this, event);
 80029be:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80029c0:	9a01      	ldr	r2, [sp, #4]
 80029c2:	6803      	ldr	r3, [r0, #0]
 80029c4:	689b      	ldr	r3, [r3, #8]
 80029c6:	4621      	mov	r1, r4
        }
    }
 80029c8:	b002      	add	sp, #8
 80029ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            clickAction->execute(*this, event);
 80029ce:	4718      	bx	r3
    }
 80029d0:	b002      	add	sp, #8
 80029d2:	bd10      	pop	{r4, pc}

080029d4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80029d4:	6803      	ldr	r3, [r0, #0]
class TypedText
 80029d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 80029d8:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80029da:	6b5e      	ldr	r6, [r3, #52]	; 0x34
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029dc:	4b11      	ldr	r3, [pc, #68]	; (8002a24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80029de:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029e0:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80029e2:	b28d      	uxth	r5, r1
 80029e4:	b92b      	cbnz	r3, 80029f2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 80029e6:	4b10      	ldr	r3, [pc, #64]	; (8002a28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80029e8:	4a10      	ldr	r2, [pc, #64]	; (8002a2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029ea:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029ec:	4810      	ldr	r0, [pc, #64]	; (8002a30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80029ee:	f024 fd5f 	bl	80274b0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029f2:	4910      	ldr	r1, [pc, #64]	; (8002a34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029f4:	8809      	ldrh	r1, [r1, #0]
 80029f6:	4291      	cmp	r1, r2
 80029f8:	d803      	bhi.n	8002a02 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029fa:	4b0f      	ldr	r3, [pc, #60]	; (8002a38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029fc:	4a0b      	ldr	r2, [pc, #44]	; (8002a2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029fe:	21af      	movs	r1, #175	; 0xaf
 8002a00:	e7f4      	b.n	80029ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002a02:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002a06:	4b0d      	ldr	r3, [pc, #52]	; (8002a3c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002a0e:	6803      	ldr	r3, [r0, #0]
 8002a10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002a12:	4798      	blx	r3
 8002a14:	1a28      	subs	r0, r5, r0
 8002a16:	b201      	sxth	r1, r0
 8002a18:	4633      	mov	r3, r6
 8002a1a:	4620      	mov	r0, r4
    }
 8002a1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002a20:	4718      	bx	r3
 8002a22:	bf00      	nop
 8002a24:	20014c7c 	.word	0x20014c7c
 8002a28:	08029068 	.word	0x08029068
 8002a2c:	080290aa 	.word	0x080290aa
 8002a30:	080290d8 	.word	0x080290d8
 8002a34:	20014c80 	.word	0x20014c80
 8002a38:	0802911f 	.word	0x0802911f
 8002a3c:	20014c84 	.word	0x20014c84

08002a40 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002a40:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002a42:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002a44:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002a48:	4604      	mov	r4, r0
 8002a4a:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002a4c:	b99b      	cbnz	r3, 8002a76 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002a4e:	b98e      	cbnz	r6, 8002a74 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002a50:	fab3 f383 	clz	r3, r3
 8002a54:	095b      	lsrs	r3, r3, #5
 8002a56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002a5a:	6823      	ldr	r3, [r4, #0]
 8002a5c:	4620      	mov	r0, r4
 8002a5e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002a62:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002a64:	6823      	ldr	r3, [r4, #0]
 8002a66:	4620      	mov	r0, r4
 8002a68:	695b      	ldr	r3, [r3, #20]
 8002a6a:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002a6c:	b116      	cbz	r6, 8002a74 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002a6e:	792b      	ldrb	r3, [r5, #4]
 8002a70:	2b01      	cmp	r3, #1
 8002a72:	d003      	beq.n	8002a7c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002a74:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002a76:	2e00      	cmp	r6, #0
 8002a78:	d0fc      	beq.n	8002a74 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002a7a:	e7e9      	b.n	8002a50 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002a7c:	6823      	ldr	r3, [r4, #0]
 8002a7e:	4620      	mov	r0, r4
 8002a80:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002a84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002a88:	4718      	bx	r3

08002a8a <_ZN18FileScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void FileScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8002a8a:	b508      	push	{r3, lr}
    if (&src == &backButton1)
 8002a8c:	f200 437c 	addw	r3, r0, #1148	; 0x47c
 8002a90:	4299      	cmp	r1, r3
 8002a92:	d105      	bne.n	8002aa0 <_ZN18FileScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a94:	f013 fe28 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When closePopUpButton clicked change screen to FileScreen
        //Go to FileScreen with no screen transition
        application().gotoFileScreenScreenNoTransition();
    }
}
 8002a98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8002a9c:	f000 bdfe 	b.w	800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    else if (&src == &closePopUpButton)
 8002aa0:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8002aa4:	4281      	cmp	r1, r0
 8002aa6:	d105      	bne.n	8002ab4 <_ZN18FileScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 8002aa8:	f013 fe1e 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
}
 8002aac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoFileScreenScreenNoTransition();
 8002ab0:	f000 be34 	b.w	800371c <_ZN23FrontendApplicationBase32gotoFileScreenScreenNoTransitionEv>
}
 8002ab4:	bd08      	pop	{r3, pc}

08002ab6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002ab6:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002ab8:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002aba:	4604      	mov	r4, r0
        setX(x);
 8002abc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002abe:	4615      	mov	r5, r2
        setX(x);
 8002ac0:	4798      	blx	r3
        setY(y);
 8002ac2:	6823      	ldr	r3, [r4, #0]
 8002ac4:	4629      	mov	r1, r5
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002aca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002ace:	4718      	bx	r3

08002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002ad0:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002ad2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002ad6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002ada:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002ade:	8813      	ldrh	r3, [r2, #0]
 8002ae0:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002ae4:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002ae6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8002aea:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002aec:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002aee:	f3c1 054f 	ubfx	r5, r1, #1, #16
 8002af2:	f016 ff77 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002af6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002afa:	4680      	mov	r8, r0
 8002afc:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002b00:	4638      	mov	r0, r7
 8002b02:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002b06:	f016 ffb1 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002b0a:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 8002b0e:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 8002b12:	b212      	sxth	r2, r2
 8002b14:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002b18:	b209      	sxth	r1, r1
 8002b1a:	f7ff ffcc 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002b1e:	6823      	ldr	r3, [r4, #0]
 8002b20:	4620      	mov	r0, r4
 8002b22:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002b26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002b2a:	4718      	bx	r3

08002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8002b2c:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 8002b2e:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 8002b30:	4604      	mov	r4, r0
        setWidth(width);
 8002b32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    void setWidthHeight(int16_t width, int16_t height)
 8002b34:	4615      	mov	r5, r2
        setWidth(width);
 8002b36:	4798      	blx	r3
        setHeight(height);
 8002b38:	6823      	ldr	r3, [r4, #0]
 8002b3a:	4629      	mov	r1, r5
 8002b3c:	4620      	mov	r0, r4
 8002b3e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002b40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002b44:	4718      	bx	r3
	...

08002b48 <_ZN8touchgfx6WidgetC1Ev>:
 8002b48:	2200      	movs	r2, #0
 8002b4a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002b4e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002b52:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002b56:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002b5a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002b5e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002b60:	4a01      	ldr	r2, [pc, #4]	; (8002b68 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002b62:	6002      	str	r2, [r0, #0]
 8002b64:	4770      	bx	lr
 8002b66:	bf00      	nop
 8002b68:	08029168 	.word	0x08029168

08002b6c <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002b6c:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002b6e:	2226      	movs	r2, #38	; 0x26
    Box()
 8002b70:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002b72:	2100      	movs	r1, #0
 8002b74:	f024 fe22 	bl	80277bc <memset>
 8002b78:	4620      	mov	r0, r4
 8002b7a:	f7ff ffe5 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8002b7e:	4b04      	ldr	r3, [pc, #16]	; (8002b90 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002b80:	6023      	str	r3, [r4, #0]
 8002b82:	23ff      	movs	r3, #255	; 0xff
 8002b84:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002b88:	2300      	movs	r3, #0
 8002b8a:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002b8c:	4620      	mov	r0, r4
 8002b8e:	bd10      	pop	{r4, pc}
 8002b90:	0802c778 	.word	0x0802c778

08002b94 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002b94:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b96:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002b98:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b9a:	2100      	movs	r1, #0
 8002b9c:	f024 fe0e 	bl	80277bc <memset>
 8002ba0:	4620      	mov	r0, r4
 8002ba2:	f7ff ffd1 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8002ba6:	4b0a      	ldr	r3, [pc, #40]	; (8002bd0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002ba8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002baa:	4b0a      	ldr	r3, [pc, #40]	; (8002bd4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002bac:	62a3      	str	r3, [r4, #40]	; 0x28
 8002bae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002bb2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002bb4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002bb8:	2300      	movs	r3, #0
 8002bba:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8002bbe:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002bc2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002bc6:	8723      	strh	r3, [r4, #56]	; 0x38
 8002bc8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002bca:	4620      	mov	r0, r4
 8002bcc:	bd10      	pop	{r4, pc}
 8002bce:	bf00      	nop
 8002bd0:	0802c6b8 	.word	0x0802c6b8
 8002bd4:	080291d0 	.word	0x080291d0

08002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>:
    ClickListener()
 8002bd8:	b510      	push	{r4, lr}
 8002bda:	4604      	mov	r4, r0
        : TextArea()
 8002bdc:	f7ff ffda 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002be0:	2300      	movs	r3, #0
        : T(), clickAction(0)
 8002be2:	4a04      	ldr	r2, [pc, #16]	; (8002bf4 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev+0x1c>)
 8002be4:	64a3      	str	r3, [r4, #72]	; 0x48
 8002be6:	64e3      	str	r3, [r4, #76]	; 0x4c
        touchable = touch;
 8002be8:	2301      	movs	r3, #1
 8002bea:	6022      	str	r2, [r4, #0]
 8002bec:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8002bf0:	4620      	mov	r0, r4
 8002bf2:	bd10      	pop	{r4, pc}
 8002bf4:	08029270 	.word	0x08029270

08002bf8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002bf8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    BoxWithBorderButtonStyle()
 8002bfc:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 8002bfe:	4606      	mov	r6, r0
 8002c00:	8583      	strh	r3, [r0, #44]	; 0x2c
 8002c02:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002c06:	2500      	movs	r5, #0
 8002c08:	8483      	strh	r3, [r0, #36]	; 0x24
 8002c0a:	4b12      	ldr	r3, [pc, #72]	; (8002c54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 8002c0c:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002c0e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002c12:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002c16:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002c1a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002c1e:	6305      	str	r5, [r0, #48]	; 0x30
 8002c20:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 8002c24:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002c26:	4630      	mov	r0, r6
 8002c28:	f7ff ffa0 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8002c2c:	4b0a      	ldr	r3, [pc, #40]	; (8002c58 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 8002c2e:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002c30:	462a      	mov	r2, r5
 8002c32:	4629      	mov	r1, r5
 8002c34:	4630      	mov	r0, r6
        : color(0)
 8002c36:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002c3a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002c3e:	6625      	str	r5, [r4, #96]	; 0x60
 8002c40:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002c44:	f7ff ff37 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002c48:	4620      	mov	r0, r4
 8002c4a:	4631      	mov	r1, r6
 8002c4c:	f00c fc1e 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002c50:	4620      	mov	r0, r4
 8002c52:	bd70      	pop	{r4, r5, r6, pc}
 8002c54:	08029300 	.word	0x08029300
 8002c58:	0802c810 	.word	0x0802c810

08002c5c <_ZN18FileScreenViewBaseC1Ev>:
FileScreenViewBase::FileScreenViewBase() :
 8002c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c60:	ed2d 8b10 	vpush	{d8-d15}
 8002c64:	4604      	mov	r4, r0
 8002c66:	b08d      	sub	sp, #52	; 0x34
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002c68:	f015 f894 	bl	8017d94 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &FileScreenViewBase::flexButtonCallbackHandler)
 8002c6c:	4622      	mov	r2, r4
 8002c6e:	2500      	movs	r5, #0
 8002c70:	4b94      	ldr	r3, [pc, #592]	; (8002ec4 <_ZN18FileScreenViewBaseC1Ev+0x268>)
 8002c72:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002c74:	f842 3b40 	str.w	r3, [r2], #64
 8002c78:	4610      	mov	r0, r2
 8002c7a:	ee0c 2a10 	vmov	s24, r2
 8002c7e:	f7ff ff75 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8002c82:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002c86:	4618      	mov	r0, r3
 8002c88:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8002c8c:	ee0e 3a90 	vmov	s29, r3
 8002c90:	f7ff ff6c 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8002c94:	4648      	mov	r0, r9
 8002c96:	f00d f971 	bl	800ff7c <_ZN8touchgfx19ScrollableContainerC1Ev>
 8002c9a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
 8002c9e:	4618      	mov	r0, r3
 8002ca0:	ee08 3a10 	vmov	s16, r3
 8002ca4:	f7ff ff98 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002ca8:	f504 73d2 	add.w	r3, r4, #420	; 0x1a4
 8002cac:	4618      	mov	r0, r3
 8002cae:	f504 78fa 	add.w	r8, r4, #500	; 0x1f4
 8002cb2:	ee0c 3a90 	vmov	s25, r3
 8002cb6:	f504 7711 	add.w	r7, r4, #580	; 0x244
 8002cba:	f7ff ff8d 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002cbe:	4640      	mov	r0, r8
 8002cc0:	f7ff ff8a 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002cc4:	4638      	mov	r0, r7
 8002cc6:	f7ff ff87 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002cca:	f504 7325 	add.w	r3, r4, #660	; 0x294
 8002cce:	4618      	mov	r0, r3
 8002cd0:	ee08 3a90 	vmov	s17, r3
 8002cd4:	f7ff ff80 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002cd8:	f504 7339 	add.w	r3, r4, #740	; 0x2e4
 8002cdc:	4618      	mov	r0, r3
 8002cde:	ee09 3a10 	vmov	s18, r3
 8002ce2:	f7ff ff79 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002ce6:	f504 734d 	add.w	r3, r4, #820	; 0x334
 8002cea:	4618      	mov	r0, r3
 8002cec:	ee09 3a90 	vmov	s19, r3
 8002cf0:	f7ff ff72 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002cf4:	f504 7361 	add.w	r3, r4, #900	; 0x384
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	ee0a 3a10 	vmov	s20, r3
 8002cfe:	f7ff ff6b 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002d02:	f504 7375 	add.w	r3, r4, #980	; 0x3d4
 8002d06:	4618      	mov	r0, r3
 8002d08:	ee0f 3a10 	vmov	s30, r3
 8002d0c:	f7ff ff2e 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8002d10:	f504 6380 	add.w	r3, r4, #1024	; 0x400
 8002d14:	4618      	mov	r0, r3
 8002d16:	ee0a 3a90 	vmov	s21, r3
 8002d1a:	f7ff ff5d 	bl	8002bd8 <_ZN8touchgfx13ClickListenerINS_23TextAreaWithOneWildcardEEC1Ev>
 8002d1e:	f504 638a 	add.w	r3, r4, #1104	; 0x450
 8002d22:	4618      	mov	r0, r3
 8002d24:	ee0f 3a90 	vmov	s31, r3
 8002d28:	f7ff ff20 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8002d2c:	f204 437c 	addw	r3, r4, #1148	; 0x47c
        : T()
 8002d30:	4618      	mov	r0, r3
 8002d32:	ee0b 3a10 	vmov	s22, r3
 8002d36:	f7ff ff5f 	bl	8002bf8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002d3a:	4b63      	ldr	r3, [pc, #396]	; (8002ec8 <_ZN18FileScreenViewBaseC1Ev+0x26c>)
 8002d3c:	f8c4 347c 	str.w	r3, [r4, #1148]	; 0x47c
 8002d40:	f504 669f 	add.w	r6, r4, #1272	; 0x4f8
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002d44:	f04f 33ff 	mov.w	r3, #4294967295
        : Widget(), bitmap(bmp), alpha(255)
 8002d48:	2226      	movs	r2, #38	; 0x26
 8002d4a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8002d4e:	f8c4 34f4 	str.w	r3, [r4, #1268]	; 0x4f4
 8002d52:	4629      	mov	r1, r5
 8002d54:	4630      	mov	r0, r6
 8002d56:	f8ad b028 	strh.w	fp, [sp, #40]	; 0x28
 8002d5a:	f024 fd2f 	bl	80277bc <memset>
 8002d5e:	4630      	mov	r0, r6
 8002d60:	f7ff fef2 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8002d64:	4b59      	ldr	r3, [pc, #356]	; (8002ecc <_ZN18FileScreenViewBaseC1Ev+0x270>)
 8002d66:	f8c4 34f8 	str.w	r3, [r4, #1272]	; 0x4f8
 8002d6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002d6e:	f8a4 351e 	strh.w	r3, [r4, #1310]	; 0x51e
        Image::setBitmap(bmp);
 8002d72:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8002d74:	f884 b520 	strb.w	fp, [r4, #1312]	; 0x520
        Image::setBitmap(bmp);
 8002d78:	a90a      	add	r1, sp, #40	; 0x28
 8002d7a:	f011 fee1 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d7e:	f204 5a24 	addw	sl, r4, #1316	; 0x524
        T::add(iconImage);
 8002d82:	4631      	mov	r1, r6
 8002d84:	ee1b 0a10 	vmov	r0, s22
 8002d88:	f00c fb80 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d8c:	4650      	mov	r0, sl
 8002d8e:	f00c fa83 	bl	800f298 <_ZN8touchgfx11ModalWindowC1Ev>
 8002d92:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
        : T()
 8002d96:	4618      	mov	r0, r3
 8002d98:	ee0b 3a90 	vmov	s23, r3
 8002d9c:	f7ff ff2c 	bl	8002bf8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002da0:	4b4b      	ldr	r3, [pc, #300]	; (8002ed0 <_ZN18FileScreenViewBaseC1Ev+0x274>)
 8002da2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8002da6:	f204 634c 	addw	r3, r4, #1612	; 0x64c
 8002daa:	ee0d 3a10 	vmov	s26, r3
 8002dae:	4618      	mov	r0, r3
 8002db0:	f7ff fef0 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
        T::add(text);
 8002db4:	ee1d 1a10 	vmov	r1, s26
 8002db8:	ee1b 0a90 	vmov	r0, s23
        : color(0)
 8002dbc:	f8c4 5694 	str.w	r5, [r4, #1684]	; 0x694
 8002dc0:	f8c4 5698 	str.w	r5, [r4, #1688]	; 0x698
 8002dc4:	f00c fb62 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002dc8:	f204 639c 	addw	r3, r4, #1692	; 0x69c
        : TextArea()
 8002dcc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002dce:	4e41      	ldr	r6, [pc, #260]	; (8002ed4 <_ZN18FileScreenViewBaseC1Ev+0x278>)
 8002dd0:	ee0d 3a90 	vmov	s27, r3
        : TextArea()
 8002dd4:	f7ff fede 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8002dd8:	f504 63dd 	add.w	r3, r4, #1768	; 0x6e8
        : TextAreaWithWildcardBase(), wc1(0)
 8002ddc:	f8c4 669c 	str.w	r6, [r4, #1692]	; 0x69c
 8002de0:	4618      	mov	r0, r3
 8002de2:	f8c4 56e4 	str.w	r5, [r4, #1764]	; 0x6e4
 8002de6:	9303      	str	r3, [sp, #12]
 8002de8:	f7ff fec0 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8002dec:	f204 7314 	addw	r3, r4, #1812	; 0x714
        : TextArea()
 8002df0:	4618      	mov	r0, r3
 8002df2:	ee0e 3a10 	vmov	s28, r3
 8002df6:	f7ff fecd 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002dfa:	4b37      	ldr	r3, [pc, #220]	; (8002ed8 <_ZN18FileScreenViewBaseC1Ev+0x27c>)
 8002dfc:	f8c4 3a60 	str.w	r3, [r4, #2656]	; 0xa60
 8002e00:	4b36      	ldr	r3, [pc, #216]	; (8002edc <_ZN18FileScreenViewBaseC1Ev+0x280>)
 8002e02:	f8c4 3a68 	str.w	r3, [r4, #2664]	; 0xa68
    __background.setPosition(0, 0, 320, 240);
 8002e06:	23f0      	movs	r3, #240	; 0xf0
 8002e08:	ee1c 0a10 	vmov	r0, s24
        : TextAreaWithWildcardBase(), wc1(0)
 8002e0c:	f8c4 6714 	str.w	r6, [r4, #1812]	; 0x714
 8002e10:	9300      	str	r3, [sp, #0]
 8002e12:	462a      	mov	r2, r5
 8002e14:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002e18:	4629      	mov	r1, r5
 8002e1a:	f8c4 575c 	str.w	r5, [r4, #1884]	; 0x75c
 8002e1e:	f8c4 4a64 	str.w	r4, [r4, #2660]	; 0xa64
 8002e22:	f8c4 5a6c 	str.w	r5, [r4, #2668]	; 0xa6c
 8002e26:	f7ff fca9 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8002e2a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e2e:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 49, 278, 191);
 8002e30:	23bf      	movs	r3, #191	; 0xbf
 8002e32:	ee1e 0a90 	vmov	r0, s29
 8002e36:	9300      	str	r3, [sp, #0]
 8002e38:	2231      	movs	r2, #49	; 0x31
 8002e3a:	f44f 738b 	mov.w	r3, #278	; 0x116
 8002e3e:	4629      	mov	r1, r5
 8002e40:	f7ff fc9c 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e44:	4b26      	ldr	r3, [pc, #152]	; (8002ee0 <_ZN18FileScreenViewBaseC1Ev+0x284>)
 8002e46:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    scrollableContainer1.setPosition(0, 49, 278, 191);
 8002e4a:	23bf      	movs	r3, #191	; 0xbf
 8002e4c:	2231      	movs	r2, #49	; 0x31
 8002e4e:	9300      	str	r3, [sp, #0]
 8002e50:	4629      	mov	r1, r5
 8002e52:	f44f 738b 	mov.w	r3, #278	; 0x116
 8002e56:	4648      	mov	r0, r9
 8002e58:	f7ff fc90 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8002e5c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8002e60:	4648      	mov	r0, r9
 8002e62:	f00d fba0 	bl	80105a6 <_ZN8touchgfx19ScrollableContainer18setScrollbarsColorENS_9colortypeE>
    textArea1.setXY(9, 0);
 8002e66:	462a      	mov	r2, r5
 8002e68:	ee18 0a10 	vmov	r0, s16
 8002e6c:	2109      	movs	r1, #9
 8002e6e:	f7ff fe22 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8002e72:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e76:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
        boundingArea = calculateBoundingArea();
 8002e7a:	f8d4 3154 	ldr.w	r3, [r4, #340]	; 0x154
        linespace = space;
 8002e7e:	f8a4 5188 	strh.w	r5, [r4, #392]	; 0x188
        boundingArea = calculateBoundingArea();
 8002e82:	ae04      	add	r6, sp, #16
 8002e84:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002e88:	ee18 1a10 	vmov	r1, s16
 8002e8c:	4630      	mov	r0, r6
 8002e8e:	4798      	blx	r3
 8002e90:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8002e94:	f504 73c8 	add.w	r3, r4, #400	; 0x190
 8002e98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e9c:	4b11      	ldr	r3, [pc, #68]	; (8002ee4 <_ZN18FileScreenViewBaseC1Ev+0x288>)
 8002e9e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JJAJ).getText());
 8002ea0:	f504 6bec 	add.w	fp, r4, #1888	; 0x760
 8002ea4:	b92b      	cbnz	r3, 8002eb2 <_ZN18FileScreenViewBaseC1Ev+0x256>
 8002ea6:	4b10      	ldr	r3, [pc, #64]	; (8002ee8 <_ZN18FileScreenViewBaseC1Ev+0x28c>)
 8002ea8:	4a10      	ldr	r2, [pc, #64]	; (8002eec <_ZN18FileScreenViewBaseC1Ev+0x290>)
 8002eaa:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002eac:	4810      	ldr	r0, [pc, #64]	; (8002ef0 <_ZN18FileScreenViewBaseC1Ev+0x294>)
 8002eae:	f024 faff 	bl	80274b0 <__assert_func>
 8002eb2:	4b10      	ldr	r3, [pc, #64]	; (8002ef4 <_ZN18FileScreenViewBaseC1Ev+0x298>)
 8002eb4:	881b      	ldrh	r3, [r3, #0]
 8002eb6:	2b05      	cmp	r3, #5
 8002eb8:	d820      	bhi.n	8002efc <_ZN18FileScreenViewBaseC1Ev+0x2a0>
 8002eba:	4b0f      	ldr	r3, [pc, #60]	; (8002ef8 <_ZN18FileScreenViewBaseC1Ev+0x29c>)
 8002ebc:	4a0b      	ldr	r2, [pc, #44]	; (8002eec <_ZN18FileScreenViewBaseC1Ev+0x290>)
 8002ebe:	21af      	movs	r1, #175	; 0xaf
 8002ec0:	e7f4      	b.n	8002eac <_ZN18FileScreenViewBaseC1Ev+0x250>
 8002ec2:	bf00      	nop
 8002ec4:	080294f0 	.word	0x080294f0
 8002ec8:	0802939c 	.word	0x0802939c
 8002ecc:	0802c878 	.word	0x0802c878
 8002ed0:	0802943c 	.word	0x0802943c
 8002ed4:	080291e0 	.word	0x080291e0
 8002ed8:	080294d8 	.word	0x080294d8
 8002edc:	08002a8b 	.word	0x08002a8b
 8002ee0:	fff2c2c2 	.word	0xfff2c2c2
 8002ee4:	20014c7c 	.word	0x20014c7c
 8002ee8:	08029068 	.word	0x08029068
 8002eec:	080290aa 	.word	0x080290aa
 8002ef0:	080290d8 	.word	0x080290d8
 8002ef4:	20014c80 	.word	0x20014c80
 8002ef8:	0802911f 	.word	0x0802911f
        return texts->getText(typedTextId);
 8002efc:	4bee      	ldr	r3, [pc, #952]	; (80032b8 <_ZN18FileScreenViewBaseC1Ev+0x65c>)
 8002efe:	2105      	movs	r1, #5
 8002f00:	6818      	ldr	r0, [r3, #0]
 8002f02:	f003 ff57 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8002f06:	4aed      	ldr	r2, [pc, #948]	; (80032bc <_ZN18FileScreenViewBaseC1Ev+0x660>)
 8002f08:	4603      	mov	r3, r0
 8002f0a:	2119      	movs	r1, #25
 8002f0c:	4658      	mov	r0, fp
 8002f0e:	f016 fc94 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8002f12:	ee18 0a10 	vmov	r0, s16
        wc1 = value;
 8002f16:	f8c4 b19c 	str.w	fp, [r4, #412]	; 0x19c
 8002f1a:	f011 fbff 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002f1e:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 80032cc <_ZN18FileScreenViewBaseC1Ev+0x670>
 8002f22:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002f26:	230d      	movs	r3, #13
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_880H));
 8002f28:	ee18 0a10 	vmov	r0, s16
 8002f2c:	a90a      	add	r1, sp, #40	; 0x28
 8002f2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002f32:	f011 fc13 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1);
 8002f36:	ee18 1a10 	vmov	r1, s16
 8002f3a:	4648      	mov	r0, r9
 8002f3c:	f00c fd3d 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_1.setPosition(9, 28, 269, 31);
 8002f40:	231f      	movs	r3, #31
 8002f42:	ee1c 0a90 	vmov	r0, s25
 8002f46:	9300      	str	r3, [sp, #0]
 8002f48:	221c      	movs	r2, #28
 8002f4a:	f240 130d 	movw	r3, #269	; 0x10d
 8002f4e:	2109      	movs	r1, #9
 8002f50:	f7ff fc14 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f54:	f8d4 31a4 	ldr.w	r3, [r4, #420]	; 0x1a4
        linespace = space;
 8002f58:	f8a4 51d8 	strh.w	r5, [r4, #472]	; 0x1d8
        this->color = color;
 8002f5c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8002f60:	4630      	mov	r0, r6
 8002f62:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 8002f66:	f8c4 21d4 	str.w	r2, [r4, #468]	; 0x1d4
        boundingArea = calculateBoundingArea();
 8002f6a:	ee1c 1a90 	vmov	r1, s25
 8002f6e:	4798      	blx	r3
 8002f70:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8002f74:	f504 73f0 	add.w	r3, r4, #480	; 0x1e0
 8002f78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_1.setWildcard(textArea1_1Buffer);
 8002f7c:	f204 7392 	addw	r3, r4, #1938	; 0x792
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FCNU));
 8002f80:	ee1c 0a90 	vmov	r0, s25
 8002f84:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8002f88:	a90a      	add	r1, sp, #40	; 0x28
 8002f8a:	230c      	movs	r3, #12
    textArea1_1Buffer[0] = 0;
 8002f8c:	f8a4 5792 	strh.w	r5, [r4, #1938]	; 0x792
 8002f90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002f94:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FCNU));
 8002f98:	f011 fbe0 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_1);
 8002f9c:	ee1c 1a90 	vmov	r1, s25
 8002fa0:	4648      	mov	r0, r9
 8002fa2:	f00c fd0a 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_2.setXY(9, 59);
 8002fa6:	4640      	mov	r0, r8
 8002fa8:	223b      	movs	r2, #59	; 0x3b
 8002faa:	2109      	movs	r1, #9
 8002fac:	f7ff fd83 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8002fb0:	f8d4 31f4 	ldr.w	r3, [r4, #500]	; 0x1f4
        linespace = space;
 8002fb4:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        this->color = color;
 8002fb8:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8002fbc:	4641      	mov	r1, r8
 8002fbe:	4630      	mov	r0, r6
 8002fc0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 8002fc4:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8002fc8:	4798      	blx	r3
 8002fca:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8002fce:	f504 730c 	add.w	r3, r4, #560	; 0x230
 8002fd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_2.setWildcard(textArea1_2Buffer);
 8002fd6:	f204 73c6 	addw	r3, r4, #1990	; 0x7c6
    textArea1_2.resizeToCurrentText();
 8002fda:	4640      	mov	r0, r8
 8002fdc:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
    textArea1_2Buffer[0] = 0;
 8002fe0:	f8a4 57c6 	strh.w	r5, [r4, #1990]	; 0x7c6
    textArea1_2.resizeToCurrentText();
 8002fe4:	f011 fb9a 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8002fe8:	230b      	movs	r3, #11
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PYRQ));
 8002fea:	4640      	mov	r0, r8
 8002fec:	a90a      	add	r1, sp, #40	; 0x28
 8002fee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ff2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002ff6:	f011 fbb1 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_2);
 8002ffa:	4641      	mov	r1, r8
 8002ffc:	4648      	mov	r0, r9
 8002ffe:	f00c fcdc 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_3.setXY(9, 88);
 8003002:	4638      	mov	r0, r7
 8003004:	2258      	movs	r2, #88	; 0x58
 8003006:	2109      	movs	r1, #9
 8003008:	f7ff fd55 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800300c:	f8d4 3244 	ldr.w	r3, [r4, #580]	; 0x244
        linespace = space;
 8003010:	f8a4 5278 	strh.w	r5, [r4, #632]	; 0x278
        this->color = color;
 8003014:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8003018:	4639      	mov	r1, r7
 800301a:	4630      	mov	r0, r6
 800301c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 8003020:	f8c4 2274 	str.w	r2, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8003024:	4798      	blx	r3
 8003026:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800302a:	f504 7320 	add.w	r3, r4, #640	; 0x280
 800302e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_3.setWildcard(textArea1_3Buffer);
 8003032:	f204 73fa 	addw	r3, r4, #2042	; 0x7fa
    textArea1_3.resizeToCurrentText();
 8003036:	4638      	mov	r0, r7
 8003038:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
    textArea1_3Buffer[0] = 0;
 800303c:	f8a4 57fa 	strh.w	r5, [r4, #2042]	; 0x7fa
    textArea1_3.resizeToCurrentText();
 8003040:	f011 fb6c 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8003044:	230a      	movs	r3, #10
    textArea1_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X64H));
 8003046:	4638      	mov	r0, r7
 8003048:	a90a      	add	r1, sp, #40	; 0x28
 800304a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800304e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003052:	f011 fb83 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_3);
 8003056:	4639      	mov	r1, r7
 8003058:	4648      	mov	r0, r9
 800305a:	f00c fcae 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_4.setXY(9, 118);
 800305e:	ee18 0a90 	vmov	r0, s17
 8003062:	2276      	movs	r2, #118	; 0x76
 8003064:	2109      	movs	r1, #9
 8003066:	f7ff fd26 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800306a:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
        linespace = space;
 800306e:	f8a4 52c8 	strh.w	r5, [r4, #712]	; 0x2c8
        this->color = color;
 8003072:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8003076:	4630      	mov	r0, r6
 8003078:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 800307c:	f8c4 22c4 	str.w	r2, [r4, #708]	; 0x2c4
        boundingArea = calculateBoundingArea();
 8003080:	ee18 1a90 	vmov	r1, s17
 8003084:	4798      	blx	r3
 8003086:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800308a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800308e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_4.setWildcard(textArea1_4Buffer);
 8003092:	f604 032e 	addw	r3, r4, #2094	; 0x82e
 8003096:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
    textArea1_4.resizeToCurrentText();
 800309a:	ee18 0a90 	vmov	r0, s17
    textArea1_4Buffer[0] = 0;
 800309e:	f8a4 582e 	strh.w	r5, [r4, #2094]	; 0x82e
    textArea1_4.resizeToCurrentText();
 80030a2:	f011 fb3b 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80030a6:	2709      	movs	r7, #9
    textArea1_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M1EO));
 80030a8:	ee18 0a90 	vmov	r0, s17
 80030ac:	a90a      	add	r1, sp, #40	; 0x28
 80030ae:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030b2:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 80030b6:	f011 fb51 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_4);
 80030ba:	ee18 1a90 	vmov	r1, s17
 80030be:	4648      	mov	r0, r9
 80030c0:	f00c fc7b 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_5.setXY(9, 144);
 80030c4:	ee19 0a10 	vmov	r0, s18
 80030c8:	2290      	movs	r2, #144	; 0x90
 80030ca:	4639      	mov	r1, r7
 80030cc:	f7ff fcf3 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 80030d0:	f8d4 32e4 	ldr.w	r3, [r4, #740]	; 0x2e4
        linespace = space;
 80030d4:	f8a4 5318 	strh.w	r5, [r4, #792]	; 0x318
        this->color = color;
 80030d8:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80030dc:	4630      	mov	r0, r6
 80030de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 80030e2:	f8c4 2314 	str.w	r2, [r4, #788]	; 0x314
        boundingArea = calculateBoundingArea();
 80030e6:	ee19 1a10 	vmov	r1, s18
 80030ea:	4798      	blx	r3
 80030ec:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80030f0:	f504 7348 	add.w	r3, r4, #800	; 0x320
 80030f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_5.setWildcard(textArea1_5Buffer);
 80030f8:	f604 0362 	addw	r3, r4, #2146	; 0x862
    textArea1_5.resizeToCurrentText();
 80030fc:	ee19 0a10 	vmov	r0, s18
 8003100:	f8c4 332c 	str.w	r3, [r4, #812]	; 0x32c
    textArea1_5Buffer[0] = 0;
 8003104:	f8a4 5862 	strh.w	r5, [r4, #2146]	; 0x862
    textArea1_5.resizeToCurrentText();
 8003108:	f011 fb08 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800310c:	2308      	movs	r3, #8
    textArea1_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2H12));
 800310e:	ee19 0a10 	vmov	r0, s18
 8003112:	a90a      	add	r1, sp, #40	; 0x28
 8003114:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003118:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800311c:	f011 fb1e 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_5);
 8003120:	ee19 1a10 	vmov	r1, s18
 8003124:	4648      	mov	r0, r9
 8003126:	f00c fc48 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_6.setXY(9, 168);
 800312a:	ee19 0a90 	vmov	r0, s19
 800312e:	22a8      	movs	r2, #168	; 0xa8
 8003130:	4639      	mov	r1, r7
 8003132:	f7ff fcc0 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8003136:	f8d4 3334 	ldr.w	r3, [r4, #820]	; 0x334
        linespace = space;
 800313a:	f8a4 5368 	strh.w	r5, [r4, #872]	; 0x368
        this->color = color;
 800313e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8003142:	4630      	mov	r0, r6
 8003144:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 8003148:	f8c4 2364 	str.w	r2, [r4, #868]	; 0x364
        boundingArea = calculateBoundingArea();
 800314c:	ee19 1a90 	vmov	r1, s19
 8003150:	4798      	blx	r3
 8003152:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003156:	f504 735c 	add.w	r3, r4, #880	; 0x370
 800315a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_6.setWildcard(textArea1_6Buffer);
 800315e:	f604 0396 	addw	r3, r4, #2198	; 0x896
    textArea1_6.resizeToCurrentText();
 8003162:	ee19 0a90 	vmov	r0, s19
 8003166:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
    textArea1_6Buffer[0] = 0;
 800316a:	f8a4 5896 	strh.w	r5, [r4, #2198]	; 0x896
    textArea1_6.resizeToCurrentText();
 800316e:	f011 fad5 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8003172:	2307      	movs	r3, #7
    textArea1_6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OVVO));
 8003174:	ee19 0a90 	vmov	r0, s19
 8003178:	a90a      	add	r1, sp, #40	; 0x28
 800317a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800317e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003182:	f011 faeb 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_6);
 8003186:	ee19 1a90 	vmov	r1, s19
 800318a:	4648      	mov	r0, r9
 800318c:	f00c fc15 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    textArea1_7.setXY(9, 201);
 8003190:	ee1a 0a10 	vmov	r0, s20
 8003194:	22c9      	movs	r2, #201	; 0xc9
 8003196:	4639      	mov	r1, r7
 8003198:	f7ff fc8d 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800319c:	f8d4 3384 	ldr.w	r3, [r4, #900]	; 0x384
        linespace = space;
 80031a0:	f8a4 53b8 	strh.w	r5, [r4, #952]	; 0x3b8
        this->color = color;
 80031a4:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80031a8:	4630      	mov	r0, r6
 80031aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 80031ae:	f8c4 23b4 	str.w	r2, [r4, #948]	; 0x3b4
        boundingArea = calculateBoundingArea();
 80031b2:	ee1a 1a10 	vmov	r1, s20
 80031b6:	4798      	blx	r3
 80031b8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031bc:	f504 7370 	add.w	r3, r4, #960	; 0x3c0
 80031c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_7.setWildcard(textArea1_7Buffer);
 80031c4:	f604 03ca 	addw	r3, r4, #2250	; 0x8ca
 80031c8:	f8c4 33cc 	str.w	r3, [r4, #972]	; 0x3cc
    textArea1_7.resizeToCurrentText();
 80031cc:	ee1a 0a10 	vmov	r0, s20
    textArea1_7Buffer[0] = 0;
 80031d0:	f8a4 58ca 	strh.w	r5, [r4, #2250]	; 0x8ca
    textArea1_7.resizeToCurrentText();
 80031d4:	f011 faa2 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80031d8:	f04f 0206 	mov.w	r2, #6
    textArea1_7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ANPD));
 80031dc:	ee1a 0a10 	vmov	r0, s20
 80031e0:	a90a      	add	r1, sp, #40	; 0x28
 80031e2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80031e6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80031ea:	f011 fab7 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    scrollableContainer1.add(textArea1_7);
 80031ee:	ee1a 1a10 	vmov	r1, s20
 80031f2:	4648      	mov	r0, r9
 80031f4:	f00c fbe1 	bl	800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>
    box2.setPosition(0, 0, 320, 49);
 80031f8:	f04f 0831 	mov.w	r8, #49	; 0x31
    scrollableContainer1.setScrollbarsPermanentlyVisible();
 80031fc:	2101      	movs	r1, #1
 80031fe:	4648      	mov	r0, r9
 8003200:	f00d f9d6 	bl	80105b0 <_ZN8touchgfx19ScrollableContainer31setScrollbarsPermanentlyVisibleEb>
    box2.setPosition(0, 0, 320, 49);
 8003204:	ee1f 0a10 	vmov	r0, s30
 8003208:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800320c:	462a      	mov	r2, r5
 800320e:	4629      	mov	r1, r5
 8003210:	f8cd 8000 	str.w	r8, [sp]
 8003214:	f7ff fab2 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003218:	4b29      	ldr	r3, [pc, #164]	; (80032c0 <_ZN18FileScreenViewBaseC1Ev+0x664>)
 800321a:	f8c4 33fc 	str.w	r3, [r4, #1020]	; 0x3fc
    sdMsgText.setXY(0, 0);
 800321e:	ee1a 0a90 	vmov	r0, s21
 8003222:	462a      	mov	r2, r5
 8003224:	4629      	mov	r1, r5
 8003226:	f7ff fc46 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800322a:	f8d4 3400 	ldr.w	r3, [r4, #1024]	; 0x400
        linespace = space;
 800322e:	f8a4 5434 	strh.w	r5, [r4, #1076]	; 0x434
        this->color = color;
 8003232:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003236:	4630      	mov	r0, r6
 8003238:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        this->color = color;
 800323c:	f8c4 2430 	str.w	r2, [r4, #1072]	; 0x430
        boundingArea = calculateBoundingArea();
 8003240:	ee1a 1a90 	vmov	r1, s21
 8003244:	4798      	blx	r3
 8003246:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800324a:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800324e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003252:	4a1c      	ldr	r2, [pc, #112]	; (80032c4 <_ZN18FileScreenViewBaseC1Ev+0x668>)
 8003254:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(sdMsgTextBuffer, SDMSGTEXT_SIZE, "%s", touchgfx::TypedText(T_SDMSGTEXT).getText());
 8003256:	f604 06fe 	addw	r6, r4, #2302	; 0x8fe
 800325a:	2b00      	cmp	r3, #0
 800325c:	f43f ae23 	beq.w	8002ea6 <_ZN18FileScreenViewBaseC1Ev+0x24a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003260:	4a19      	ldr	r2, [pc, #100]	; (80032c8 <_ZN18FileScreenViewBaseC1Ev+0x66c>)
 8003262:	8813      	ldrh	r3, [r2, #0]
 8003264:	2b03      	cmp	r3, #3
 8003266:	f67f ae28 	bls.w	8002eba <_ZN18FileScreenViewBaseC1Ev+0x25e>
        return texts->getText(typedTextId);
 800326a:	4b13      	ldr	r3, [pc, #76]	; (80032b8 <_ZN18FileScreenViewBaseC1Ev+0x65c>)
 800326c:	2103      	movs	r1, #3
 800326e:	6818      	ldr	r0, [r3, #0]
 8003270:	f003 fda0 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8003274:	4a11      	ldr	r2, [pc, #68]	; (80032bc <_ZN18FileScreenViewBaseC1Ev+0x660>)
 8003276:	4603      	mov	r3, r0
 8003278:	2132      	movs	r1, #50	; 0x32
 800327a:	4630      	mov	r0, r6
 800327c:	f016 fadd 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    sdMsgText.resizeToCurrentText();
 8003280:	ee1a 0a90 	vmov	r0, s21
 8003284:	f8c4 6448 	str.w	r6, [r4, #1096]	; 0x448
 8003288:	f011 fa48 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    sdMsgText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C5BG));
 800328c:	ee1a 0a90 	vmov	r0, s21
        : typedTextId(id)
 8003290:	2304      	movs	r3, #4
 8003292:	a90a      	add	r1, sp, #40	; 0x28
 8003294:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003298:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800329c:	f011 fa5e 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    box3.setPosition(278, 49, 42, 191);
 80032a0:	23bf      	movs	r3, #191	; 0xbf
 80032a2:	ee1f 0a90 	vmov	r0, s31
 80032a6:	9300      	str	r3, [sp, #0]
 80032a8:	4642      	mov	r2, r8
 80032aa:	232a      	movs	r3, #42	; 0x2a
 80032ac:	f44f 718b 	mov.w	r1, #278	; 0x116
 80032b0:	f7ff fa64 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80032b4:	e00c      	b.n	80032d0 <_ZN18FileScreenViewBaseC1Ev+0x674>
 80032b6:	bf00      	nop
 80032b8:	20014c88 	.word	0x20014c88
 80032bc:	0802915d 	.word	0x0802915d
 80032c0:	ff3d517d 	.word	0xff3d517d
 80032c4:	20014c7c 	.word	0x20014c7c
 80032c8:	20014c80 	.word	0x20014c80
 80032cc:	080291d0 	.word	0x080291d0
        borderBox.setPosition(x, y, width, height);
 80032d0:	262a      	movs	r6, #42	; 0x2a
 80032d2:	4b97      	ldr	r3, [pc, #604]	; (8003530 <_ZN18FileScreenViewBaseC1Ev+0x8d4>)
 80032d4:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
 80032d8:	4629      	mov	r1, r5
 80032da:	9600      	str	r6, [sp, #0]
 80032dc:	4633      	mov	r3, r6
 80032de:	462a      	mov	r2, r5
 80032e0:	f504 6096 	add.w	r0, r4, #1200	; 0x4b0
 80032e4:	f7ff fa4a 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80032e8:	2305      	movs	r3, #5
 80032ea:	f8a4 34e0 	strh.w	r3, [r4, #1248]	; 0x4e0
        up = colorReleased;
 80032ee:	4b91      	ldr	r3, [pc, #580]	; (8003534 <_ZN18FileScreenViewBaseC1Ev+0x8d8>)
 80032f0:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
        down = colorPressed;
 80032f4:	4b90      	ldr	r3, [pc, #576]	; (8003538 <_ZN18FileScreenViewBaseC1Ev+0x8dc>)
 80032f6:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
        borderUp = borderColorReleased;
 80032fa:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        borderDown = borderColorPressed;
 80032fe:	4b8f      	ldr	r3, [pc, #572]	; (800353c <_ZN18FileScreenViewBaseC1Ev+0x8e0>)
 8003300:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
        handlePressedUpdated();
 8003304:	ee1b 0a10 	vmov	r0, s22
        borderUp = borderColorReleased;
 8003308:	f8c4 24ec 	str.w	r2, [r4, #1260]	; 0x4ec
        handlePressedUpdated();
 800330c:	f7ff fb2d 	bl	800296a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
 8003310:	2702      	movs	r7, #2
    backButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 8003312:	ee1b 0a10 	vmov	r0, s22
 8003316:	aa0a      	add	r2, sp, #40	; 0x28
 8003318:	a909      	add	r1, sp, #36	; 0x24
 800331a:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800331e:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8003322:	f7ff fbd5 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8003326:	4b86      	ldr	r3, [pc, #536]	; (8003540 <_ZN18FileScreenViewBaseC1Ev+0x8e4>)
 8003328:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    backButton1.setPosition(278, 49, 42, 42);
 800332c:	ee1b 0a10 	vmov	r0, s22
 8003330:	9600      	str	r6, [sp, #0]
 8003332:	4633      	mov	r3, r6
 8003334:	4642      	mov	r2, r8
 8003336:	f44f 718b 	mov.w	r1, #278	; 0x116
    backButton1.setAction(flexButtonCallback);
 800333a:	f504 6826 	add.w	r8, r4, #2656	; 0xa60
    backButton1.setPosition(278, 49, 42, 42);
 800333e:	f7ff fa1d 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    filePopUpWindow.setBackground(touchgfx::BitmapId(BITMAP_BG_ID), 60, 45);
 8003342:	232d      	movs	r3, #45	; 0x2d
 8003344:	223c      	movs	r2, #60	; 0x3c
 8003346:	a90a      	add	r1, sp, #40	; 0x28
 8003348:	4650      	mov	r0, sl
        action = &callback;
 800334a:	f8c4 84ac 	str.w	r8, [r4, #1196]	; 0x4ac
 800334e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003352:	f00b ff60 	bl	800f216 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    filePopUpWindow.setShadeColor(touchgfx::Color::getColorFromRGB(255, 161, 161));
 8003356:	4650      	mov	r0, sl
 8003358:	497a      	ldr	r1, [pc, #488]	; (8003544 <_ZN18FileScreenViewBaseC1Ev+0x8e8>)
 800335a:	f00b ff49 	bl	800f1f0 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    filePopUpWindow.setShadeAlpha(166);
 800335e:	21a6      	movs	r1, #166	; 0xa6
 8003360:	4650      	mov	r0, sl
 8003362:	f00b ff49 	bl	800f1f8 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
        borderBox.setPosition(x, y, width, height);
 8003366:	2619      	movs	r6, #25
    filePopUpWindow.hide();
 8003368:	4650      	mov	r0, sl
 800336a:	f00b ff34 	bl	800f1d6 <_ZN8touchgfx11ModalWindow4hideEv>
 800336e:	462a      	mov	r2, r5
 8003370:	4629      	mov	r1, r5
 8003372:	9600      	str	r6, [sp, #0]
 8003374:	f504 60c1 	add.w	r0, r4, #1544	; 0x608
 8003378:	234b      	movs	r3, #75	; 0x4b
 800337a:	f7ff f9ff 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800337e:	2303      	movs	r3, #3
 8003380:	f8a4 3638 	strh.w	r3, [r4, #1592]	; 0x638
        up = colorReleased;
 8003384:	4b70      	ldr	r3, [pc, #448]	; (8003548 <_ZN18FileScreenViewBaseC1Ev+0x8ec>)
 8003386:	f8c4 363c 	str.w	r3, [r4, #1596]	; 0x63c
        down = colorPressed;
 800338a:	4b70      	ldr	r3, [pc, #448]	; (800354c <_ZN18FileScreenViewBaseC1Ev+0x8f0>)
 800338c:	f8c4 3640 	str.w	r3, [r4, #1600]	; 0x640
        borderUp = borderColorReleased;
 8003390:	4b6f      	ldr	r3, [pc, #444]	; (8003550 <_ZN18FileScreenViewBaseC1Ev+0x8f4>)
 8003392:	f8c4 3644 	str.w	r3, [r4, #1604]	; 0x644
        borderDown = borderColorPressed;
 8003396:	4b6f      	ldr	r3, [pc, #444]	; (8003554 <_ZN18FileScreenViewBaseC1Ev+0x8f8>)
 8003398:	f8c4 3648 	str.w	r3, [r4, #1608]	; 0x648
        handlePressedUpdated();
 800339c:	ee1b 0a90 	vmov	r0, s23
 80033a0:	f7ff fa69 	bl	8002876 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        text.setTypedText(t);
 80033a4:	ee1d 0a10 	vmov	r0, s26
 80033a8:	a90a      	add	r1, sp, #40	; 0x28
 80033aa:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80033ae:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 80033b2:	f011 f9d3 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 80033b6:	f9b4 25de 	ldrsh.w	r2, [r4, #1502]	; 0x5de
 80033ba:	f9b4 15dc 	ldrsh.w	r1, [r4, #1500]	; 0x5dc
 80033be:	ee1d 0a10 	vmov	r0, s26
 80033c2:	f7ff fbb3 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
        text.setPosition(x, y, width, height);
 80033c6:	4629      	mov	r1, r5
 80033c8:	ee1d 0a10 	vmov	r0, s26
 80033cc:	9600      	str	r6, [sp, #0]
 80033ce:	234b      	movs	r3, #75	; 0x4b
 80033d0:	2206      	movs	r2, #6
 80033d2:	f7ff f9d3 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorPressed = newColorPressed;
 80033d6:	4b60      	ldr	r3, [pc, #384]	; (8003558 <_ZN18FileScreenViewBaseC1Ev+0x8fc>)
 80033d8:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
        colorReleased = newColorReleased;
 80033dc:	f04f 32ff 	mov.w	r2, #4294967295
        handlePressedUpdated();
 80033e0:	ee1b 0a90 	vmov	r0, s23
        colorReleased = newColorReleased;
 80033e4:	f8c4 2694 	str.w	r2, [r4, #1684]	; 0x694
        handlePressedUpdated();
 80033e8:	f7ff fa45 	bl	8002876 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    closePopUpButton.setPosition(63, 122, 75, 25);
 80033ec:	ee1b 0a90 	vmov	r0, s23
 80033f0:	9600      	str	r6, [sp, #0]
 80033f2:	234b      	movs	r3, #75	; 0x4b
 80033f4:	227a      	movs	r2, #122	; 0x7a
 80033f6:	213f      	movs	r1, #63	; 0x3f
 80033f8:	f7ff f9c0 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    filePopUpWindow.add(closePopUpButton);
 80033fc:	ee1b 1a90 	vmov	r1, s23
 8003400:	4650      	mov	r0, sl
 8003402:	f8c4 8604 	str.w	r8, [r4, #1540]	; 0x604
 8003406:	f00b fef0 	bl	800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    fileContentTextArea.setPosition(0, 16, 201, 105);
 800340a:	2369      	movs	r3, #105	; 0x69
 800340c:	ee1d 0a90 	vmov	r0, s27
 8003410:	9300      	str	r3, [sp, #0]
 8003412:	4629      	mov	r1, r5
 8003414:	23c9      	movs	r3, #201	; 0xc9
 8003416:	2210      	movs	r2, #16
 8003418:	f7ff f9b0 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800341c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003420:	f8c4 26cc 	str.w	r2, [r4, #1740]	; 0x6cc
    fileContentTextArea.setWildcard(fileContentTextAreaBuffer);
 8003424:	f604 1362 	addw	r3, r4, #2402	; 0x962
        boundingArea = calculateBoundingArea();
 8003428:	f04f 32ff 	mov.w	r2, #4294967295
 800342c:	f8c4 26dc 	str.w	r2, [r4, #1756]	; 0x6dc
    fileContentTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BJWW));
 8003430:	ee1d 0a90 	vmov	r0, s27
        linespace = space;
 8003434:	f8a4 56d0 	strh.w	r5, [r4, #1744]	; 0x6d0
        boundingArea = calculateBoundingArea();
 8003438:	f8c4 56d8 	str.w	r5, [r4, #1752]	; 0x6d8
 800343c:	f8c4 56e0 	str.w	r5, [r4, #1760]	; 0x6e0
    fileContentTextAreaBuffer[0] = 0;
 8003440:	f8a4 5962 	strh.w	r5, [r4, #2402]	; 0x962
 8003444:	f8c4 36e4 	str.w	r3, [r4, #1764]	; 0x6e4
    fileContentTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BJWW));
 8003448:	a90a      	add	r1, sp, #40	; 0x28
 800344a:	2301      	movs	r3, #1
 800344c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    box4.setPosition(0, -2, 202, 15);
 8003450:	260f      	movs	r6, #15
 8003452:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
    fileContentTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BJWW));
 8003456:	f011 f981 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    filePopUpWindow.add(fileContentTextArea);
 800345a:	ee1d 1a90 	vmov	r1, s27
 800345e:	4650      	mov	r0, sl
 8003460:	f00b fec3 	bl	800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    box4.setPosition(0, -2, 202, 15);
 8003464:	9803      	ldr	r0, [sp, #12]
 8003466:	9600      	str	r6, [sp, #0]
 8003468:	f06f 0201 	mvn.w	r2, #1
 800346c:	4629      	mov	r1, r5
 800346e:	23ca      	movs	r3, #202	; 0xca
 8003470:	f7ff f984 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003474:	4b39      	ldr	r3, [pc, #228]	; (800355c <_ZN18FileScreenViewBaseC1Ev+0x900>)
    filePopUpWindow.add(box4);
 8003476:	9903      	ldr	r1, [sp, #12]
 8003478:	f8c4 3710 	str.w	r3, [r4, #1808]	; 0x710
 800347c:	4650      	mov	r0, sl
 800347e:	f00b feb4 	bl	800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    fileNameTextArea.setPosition(0, -2, 199, 15);
 8003482:	f06f 0201 	mvn.w	r2, #1
 8003486:	ee1e 0a10 	vmov	r0, s28
 800348a:	4629      	mov	r1, r5
 800348c:	9600      	str	r6, [sp, #0]
 800348e:	23c7      	movs	r3, #199	; 0xc7
 8003490:	f7ff f974 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003494:	4b27      	ldr	r3, [pc, #156]	; (8003534 <_ZN18FileScreenViewBaseC1Ev+0x8d8>)
 8003496:	f8c4 3744 	str.w	r3, [r4, #1860]	; 0x744
        boundingArea = calculateBoundingArea();
 800349a:	f04f 33ff 	mov.w	r3, #4294967295
 800349e:	f8c4 3754 	str.w	r3, [r4, #1876]	; 0x754
    fileNameTextArea.setWildcard(fileNameTextAreaBuffer);
 80034a2:	f604 232a 	addw	r3, r4, #2602	; 0xa2a
 80034a6:	f8c4 375c 	str.w	r3, [r4, #1884]	; 0x75c
    fileNameTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LCQF));
 80034aa:	ee1e 0a10 	vmov	r0, s28
        linespace = space;
 80034ae:	f8a4 5748 	strh.w	r5, [r4, #1864]	; 0x748
        boundingArea = calculateBoundingArea();
 80034b2:	f8c4 5750 	str.w	r5, [r4, #1872]	; 0x750
 80034b6:	f8c4 5758 	str.w	r5, [r4, #1880]	; 0x758
    fileNameTextAreaBuffer[0] = 0;
 80034ba:	f8a4 5a2a 	strh.w	r5, [r4, #2602]	; 0xa2a
    fileNameTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LCQF));
 80034be:	a90a      	add	r1, sp, #40	; 0x28
 80034c0:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 80034c4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80034c8:	1d25      	adds	r5, r4, #4
 80034ca:	f011 f947 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    filePopUpWindow.add(fileNameTextArea);
 80034ce:	ee1e 1a10 	vmov	r1, s28
 80034d2:	4650      	mov	r0, sl
 80034d4:	f00b fe89 	bl	800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 80034d8:	ee1c 1a10 	vmov	r1, s24
 80034dc:	4628      	mov	r0, r5
 80034de:	f00b ffd5 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034e2:	ee1e 1a90 	vmov	r1, s29
 80034e6:	4628      	mov	r0, r5
 80034e8:	f00b ffd0 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ec:	4649      	mov	r1, r9
 80034ee:	4628      	mov	r0, r5
 80034f0:	f00b ffcc 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034f4:	ee1f 1a10 	vmov	r1, s30
 80034f8:	4628      	mov	r0, r5
 80034fa:	f00b ffc7 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034fe:	ee1a 1a90 	vmov	r1, s21
 8003502:	4628      	mov	r0, r5
 8003504:	f00b ffc2 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003508:	ee1f 1a90 	vmov	r1, s31
 800350c:	4628      	mov	r0, r5
 800350e:	f00b ffbd 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003512:	ee1b 1a10 	vmov	r1, s22
 8003516:	4628      	mov	r0, r5
 8003518:	f00b ffb8 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800351c:	4628      	mov	r0, r5
 800351e:	4651      	mov	r1, sl
 8003520:	f00b ffb4 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003524:	4620      	mov	r0, r4
 8003526:	b00d      	add	sp, #52	; 0x34
 8003528:	ecbd 8b10 	vpop	{d8-d15}
 800352c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003530:	ff9e9d9d 	.word	0xff9e9d9d
 8003534:	fffcfcfc 	.word	0xfffcfcfc
 8003538:	ffa4a9ab 	.word	0xffa4a9ab
 800353c:	ff424242 	.word	0xff424242
 8003540:	0006000a 	.word	0x0006000a
 8003544:	ffffa1a1 	.word	0xffffa1a1
 8003548:	ff005201 	.word	0xff005201
 800354c:	ffededed 	.word	0xffededed
 8003550:	ff51585e 	.word	0xff51585e
 8003554:	ff336699 	.word	0xff336699
 8003558:	ffc9c7c7 	.word	0xffc9c7c7
 800355c:	ff0f0f0f 	.word	0xff0f0f0f

08003560 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003560:	4770      	bx	lr

08003562 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8003562:	4770      	bx	lr

08003564 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003564:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8003568:	6808      	ldr	r0, [r1, #0]
 800356a:	6849      	ldr	r1, [r1, #4]
 800356c:	c303      	stmia	r3!, {r0, r1}
    }
 800356e:	4770      	bx	lr

08003570 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003570:	4770      	bx	lr

08003572 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003572:	4770      	bx	lr

08003574 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003574:	6041      	str	r1, [r0, #4]
    }
 8003576:	4770      	bx	lr

08003578 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003578:	4770      	bx	lr
	...

0800357c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800357c:	4b06      	ldr	r3, [pc, #24]	; (8003598 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800357e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8003582:	2300      	movs	r3, #0
 8003584:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003588:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800358c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8003590:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8003594:	4770      	bx	lr
 8003596:	bf00      	nop
 8003598:	08003c7d 	.word	0x08003c7d

0800359c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800359c:	2301      	movs	r3, #1
 800359e:	7203      	strb	r3, [r0, #8]
    }
 80035a0:	4770      	bx	lr

080035a2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80035a2:	4770      	bx	lr

080035a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80035a4:	4770      	bx	lr

080035a6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80035a6:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80035a8:	68c2      	ldr	r2, [r0, #12]
 80035aa:	6841      	ldr	r1, [r0, #4]
 80035ac:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80035ae:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80035b0:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80035b4:	07d2      	lsls	r2, r2, #31
 80035b6:	bf48      	it	mi
 80035b8:	590a      	ldrmi	r2, [r1, r4]
 80035ba:	689b      	ldr	r3, [r3, #8]
    }
 80035bc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80035c0:	bf48      	it	mi
 80035c2:	58d3      	ldrmi	r3, [r2, r3]
 80035c4:	4718      	bx	r3

080035c6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80035c6:	6843      	ldr	r3, [r0, #4]
 80035c8:	b12b      	cbz	r3, 80035d6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80035ca:	6883      	ldr	r3, [r0, #8]
 80035cc:	b92b      	cbnz	r3, 80035da <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80035ce:	68c0      	ldr	r0, [r0, #12]
 80035d0:	f000 0001 	and.w	r0, r0, #1
 80035d4:	4770      	bx	lr
 80035d6:	4618      	mov	r0, r3
 80035d8:	4770      	bx	lr
 80035da:	2001      	movs	r0, #1
    }
 80035dc:	4770      	bx	lr

080035de <_ZN8touchgfx12NoTransitionD0Ev>:
 80035de:	b510      	push	{r4, lr}
 80035e0:	210c      	movs	r1, #12
 80035e2:	4604      	mov	r4, r0
 80035e4:	f023 ff35 	bl	8027452 <_ZdlPvj>
 80035e8:	4620      	mov	r0, r4
 80035ea:	bd10      	pop	{r4, pc}

080035ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80035ec:	b510      	push	{r4, lr}
 80035ee:	2110      	movs	r1, #16
 80035f0:	4604      	mov	r4, r0
 80035f2:	f023 ff2e 	bl	8027452 <_ZdlPvj>
 80035f6:	4620      	mov	r0, r4
 80035f8:	bd10      	pop	{r4, pc}

080035fa <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80035fa:	b510      	push	{r4, lr}
 80035fc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003600:	4604      	mov	r4, r0
 8003602:	f023 ff26 	bl	8027452 <_ZdlPvj>
 8003606:	4620      	mov	r0, r4
 8003608:	bd10      	pop	{r4, pc}

0800360a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800360a:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 800360c:	f013 f86c 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003610:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8003614:	f013 bc78 	b.w	8016f08 <_ZN8touchgfx11Application10invalidateEv>

08003618 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003618:	b510      	push	{r4, lr}
 800361a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800361c:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003620:	b158      	cbz	r0, 800363a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003622:	6803      	ldr	r3, [r0, #0]
 8003624:	68db      	ldr	r3, [r3, #12]
 8003626:	4798      	blx	r3
 8003628:	b138      	cbz	r0, 800363a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800362a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800362e:	6803      	ldr	r3, [r0, #0]
 8003630:	689b      	ldr	r3, [r3, #8]
 8003632:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003634:	2300      	movs	r3, #0
 8003636:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800363a:	bd10      	pop	{r4, pc}

0800363c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800363c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	4617      	mov	r7, r2
 8003642:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003644:	f013 f8b8 	bl	80167b8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003648:	4b10      	ldr	r3, [pc, #64]	; (800368c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 800364a:	2500      	movs	r5, #0
      model(m)
 800364c:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8003650:	4e0f      	ldr	r6, [pc, #60]	; (8003690 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8003652:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8003654:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8003658:	4b0e      	ldr	r3, [pc, #56]	; (8003694 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 800365a:	6830      	ldr	r0, [r6, #0]
 800365c:	6023      	str	r3, [r4, #0]
 800365e:	4b0e      	ldr	r3, [pc, #56]	; (8003698 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003660:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8003664:	6803      	ldr	r3, [r0, #0]
 8003666:	4629      	mov	r1, r5
 8003668:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800366a:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 800366e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003670:	4628      	mov	r0, r5
 8003672:	f003 fb63 	bl	8006d3c <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003676:	6833      	ldr	r3, [r6, #0]
 8003678:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800367c:	b10a      	cbz	r2, 8003682 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 800367e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003680:	b900      	cbnz	r0, 8003684 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8003682:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003684:	f01b f991 	bl	801e9aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8003688:	4620      	mov	r0, r4
 800368a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800368c:	20014c78 	.word	0x20014c78
 8003690:	20014c0c 	.word	0x20014c0c
 8003694:	08029c94 	.word	0x08029c94
 8003698:	08029c7c 	.word	0x08029c7c

0800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800369c:	4b06      	ldr	r3, [pc, #24]	; (80036b8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800369e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80036a2:	2300      	movs	r3, #0
 80036a4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80036a8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80036ac:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80036b0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80036b4:	4770      	bx	lr
 80036b6:	bf00      	nop
 80036b8:	08003c7d 	.word	0x08003c7d

080036bc <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 80036bc:	4b06      	ldr	r3, [pc, #24]	; (80036d8 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 80036be:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80036c2:	2300      	movs	r3, #0
 80036c4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036c8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80036cc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80036d0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80036d4:	4770      	bx	lr
 80036d6:	bf00      	nop
 80036d8:	08003b2d 	.word	0x08003b2d

080036dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenScreenNoTransitionEv>:
 80036dc:	4b06      	ldr	r3, [pc, #24]	; (80036f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenScreenNoTransitionEv+0x1c>)
 80036de:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80036e2:	2300      	movs	r3, #0
 80036e4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// MeasurementScreen

void FrontendApplicationBase::gotoMeasurementScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMeasurementScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036e8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80036ec:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80036f0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80036f4:	4770      	bx	lr
 80036f6:	bf00      	nop
 80036f8:	080039e1 	.word	0x080039e1

080036fc <_ZN23FrontendApplicationBase35gotoSettingScreenScreenNoTransitionEv>:
 80036fc:	4b06      	ldr	r3, [pc, #24]	; (8003718 <_ZN23FrontendApplicationBase35gotoSettingScreenScreenNoTransitionEv+0x1c>)
 80036fe:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8003702:	2300      	movs	r3, #0
 8003704:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// SettingScreen

void FrontendApplicationBase::gotoSettingScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoSettingScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003708:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800370c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8003710:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8003714:	4770      	bx	lr
 8003716:	bf00      	nop
 8003718:	08003891 	.word	0x08003891

0800371c <_ZN23FrontendApplicationBase32gotoFileScreenScreenNoTransitionEv>:
 800371c:	4b06      	ldr	r3, [pc, #24]	; (8003738 <_ZN23FrontendApplicationBase32gotoFileScreenScreenNoTransitionEv+0x1c>)
 800371e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8003722:	2300      	movs	r3, #0
 8003724:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// FileScreen

void FrontendApplicationBase::gotoFileScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFileScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003728:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800372c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8003730:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8003734:	4770      	bx	lr
 8003736:	bf00      	nop
 8003738:	08003745 	.word	0x08003745

0800373c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800373c:	6803      	ldr	r3, [r0, #0]
 800373e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003740:	4718      	bx	r3
	...

08003744 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoFileScreenScreenNoTransitionImpl()
{
 8003744:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<FileScreenView, FileScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003748:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 800374c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800374e:	68a8      	ldr	r0, [r5, #8]
 8003750:	6803      	ldr	r3, [r0, #0]
 8003752:	6a1b      	ldr	r3, [r3, #32]
 8003754:	4798      	blx	r3
 8003756:	f5b0 6f5b 	cmp.w	r0, #3504	; 0xdb0
 800375a:	d205      	bcs.n	8003768 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x24>
 800375c:	4b44      	ldr	r3, [pc, #272]	; (8003870 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x12c>)
 800375e:	4a45      	ldr	r2, [pc, #276]	; (8003874 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x130>)
 8003760:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003762:	4845      	ldr	r0, [pc, #276]	; (8003878 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x134>)
 8003764:	f023 fea4 	bl	80274b0 <__assert_func>
 8003768:	6868      	ldr	r0, [r5, #4]
 800376a:	6803      	ldr	r3, [r0, #0]
 800376c:	6a1b      	ldr	r3, [r3, #32]
 800376e:	4798      	blx	r3
 8003770:	280f      	cmp	r0, #15
 8003772:	d803      	bhi.n	800377c <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x38>
 8003774:	4b41      	ldr	r3, [pc, #260]	; (800387c <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x138>)
 8003776:	4a3f      	ldr	r2, [pc, #252]	; (8003874 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x130>)
 8003778:	21a4      	movs	r1, #164	; 0xa4
 800377a:	e7f2      	b.n	8003762 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800377c:	68e8      	ldr	r0, [r5, #12]
 800377e:	6803      	ldr	r3, [r0, #0]
 8003780:	6a1b      	ldr	r3, [r3, #32]
 8003782:	4798      	blx	r3
 8003784:	280b      	cmp	r0, #11
 8003786:	d803      	bhi.n	8003790 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x4c>
 8003788:	4b3d      	ldr	r3, [pc, #244]	; (8003880 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x13c>)
 800378a:	4a3a      	ldr	r2, [pc, #232]	; (8003874 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x130>)
 800378c:	21a5      	movs	r1, #165	; 0xa5
 800378e:	e7e8      	b.n	8003762 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8003790:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8003888 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8003794:	f012 ffa8 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8003798:	f012 fff4 	bl	8016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800379c:	f8d9 0000 	ldr.w	r0, [r9]
 80037a0:	b110      	cbz	r0, 80037a8 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80037a2:	6803      	ldr	r3, [r0, #0]
 80037a4:	68db      	ldr	r3, [r3, #12]
 80037a6:	4798      	blx	r3
    if (*currentTrans)
 80037a8:	f8d9 0000 	ldr.w	r0, [r9]
 80037ac:	b110      	cbz	r0, 80037b4 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80037ae:	6803      	ldr	r3, [r0, #0]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	4798      	blx	r3
    if (*currentScreen)
 80037b4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800388c <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x148>
 80037b8:	f8d8 0000 	ldr.w	r0, [r8]
 80037bc:	b110      	cbz	r0, 80037c4 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80037be:	6803      	ldr	r3, [r0, #0]
 80037c0:	695b      	ldr	r3, [r3, #20]
 80037c2:	4798      	blx	r3
    if (*currentPresenter)
 80037c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80037c8:	b110      	cbz	r0, 80037d0 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80037ca:	6803      	ldr	r3, [r0, #0]
 80037cc:	685b      	ldr	r3, [r3, #4]
 80037ce:	4798      	blx	r3
    if (*currentScreen)
 80037d0:	f8d8 0000 	ldr.w	r0, [r8]
 80037d4:	b110      	cbz	r0, 80037dc <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80037d6:	6803      	ldr	r3, [r0, #0]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	4798      	blx	r3
    if (*currentPresenter)
 80037dc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80037e0:	b110      	cbz	r0, 80037e8 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80037e2:	6803      	ldr	r3, [r0, #0]
 80037e4:	689b      	ldr	r3, [r3, #8]
 80037e6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80037e8:	68e8      	ldr	r0, [r5, #12]
 80037ea:	2100      	movs	r1, #0
 80037ec:	f7ff ffa6 	bl	800373c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 80037f0:	f04f 0b00 	mov.w	fp, #0
 80037f4:	4b23      	ldr	r3, [pc, #140]	; (8003884 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x140>)
 80037f6:	6003      	str	r3, [r0, #0]
 80037f8:	4604      	mov	r4, r0
 80037fa:	f8c0 b004 	str.w	fp, [r0, #4]
 80037fe:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003802:	68a8      	ldr	r0, [r5, #8]
 8003804:	6803      	ldr	r3, [r0, #0]
 8003806:	4659      	mov	r1, fp
 8003808:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800380a:	4798      	blx	r3
 800380c:	4606      	mov	r6, r0
 800380e:	f003 fc87 	bl	8007120 <_ZN14FileScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003812:	6868      	ldr	r0, [r5, #4]
 8003814:	6803      	ldr	r3, [r0, #0]
 8003816:	4659      	mov	r1, fp
 8003818:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800381a:	4798      	blx	r3
 800381c:	4631      	mov	r1, r6
 800381e:	4605      	mov	r5, r0
 8003820:	f003 fb0e 	bl	8006e40 <_ZN19FileScreenPresenterC1ER14FileScreenView>
    *currentTrans = newTransition;
 8003824:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003828:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800382c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003830:	b1e5      	cbz	r5, 800386c <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0x128>
 8003832:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003834:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003838:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800383a:	f8c5 a008 	str.w	sl, [r5, #8]
 800383e:	4630      	mov	r0, r6
 8003840:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8003842:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003844:	4798      	blx	r3
    newPresenter->activate();
 8003846:	682b      	ldr	r3, [r5, #0]
 8003848:	4628      	mov	r0, r5
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800384e:	4621      	mov	r1, r4
 8003850:	4630      	mov	r0, r6
 8003852:	f014 fc4b 	bl	80180ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003856:	6823      	ldr	r3, [r4, #0]
 8003858:	4620      	mov	r0, r4
 800385a:	691b      	ldr	r3, [r3, #16]
 800385c:	4798      	blx	r3
    newTransition->invalidate();
 800385e:	6823      	ldr	r3, [r4, #0]
 8003860:	695b      	ldr	r3, [r3, #20]
 8003862:	4620      	mov	r0, r4
}
 8003864:	b001      	add	sp, #4
 8003866:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800386a:	4718      	bx	r3
    model->bind(newPresenter);
 800386c:	462b      	mov	r3, r5
 800386e:	e7e1      	b.n	8003834 <_ZN23FrontendApplicationBase36gotoFileScreenScreenNoTransitionImplEv+0xf0>
 8003870:	0802951c 	.word	0x0802951c
 8003874:	080295aa 	.word	0x080295aa
 8003878:	080296b4 	.word	0x080296b4
 800387c:	080296fb 	.word	0x080296fb
 8003880:	0802979e 	.word	0x0802979e
 8003884:	08029ce0 	.word	0x08029ce0
 8003888:	20014c6c 	.word	0x20014c6c
 800388c:	20014c68 	.word	0x20014c68

08003890 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv>:
{
 8003890:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SettingScreenView, SettingScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003894:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8003898:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800389a:	68a8      	ldr	r0, [r5, #8]
 800389c:	6803      	ldr	r3, [r0, #0]
 800389e:	6a1b      	ldr	r3, [r3, #32]
 80038a0:	4798      	blx	r3
 80038a2:	f640 3363 	movw	r3, #2915	; 0xb63
 80038a6:	4298      	cmp	r0, r3
 80038a8:	d805      	bhi.n	80038b6 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x26>
 80038aa:	4b45      	ldr	r3, [pc, #276]	; (80039c0 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x130>)
 80038ac:	4a45      	ldr	r2, [pc, #276]	; (80039c4 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x134>)
 80038ae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038b0:	4845      	ldr	r0, [pc, #276]	; (80039c8 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x138>)
 80038b2:	f023 fdfd 	bl	80274b0 <__assert_func>
 80038b6:	6868      	ldr	r0, [r5, #4]
 80038b8:	6803      	ldr	r3, [r0, #0]
 80038ba:	6a1b      	ldr	r3, [r3, #32]
 80038bc:	4798      	blx	r3
 80038be:	280f      	cmp	r0, #15
 80038c0:	d803      	bhi.n	80038ca <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x3a>
 80038c2:	4b42      	ldr	r3, [pc, #264]	; (80039cc <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x13c>)
 80038c4:	4a3f      	ldr	r2, [pc, #252]	; (80039c4 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x134>)
 80038c6:	21a4      	movs	r1, #164	; 0xa4
 80038c8:	e7f2      	b.n	80038b0 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038ca:	68e8      	ldr	r0, [r5, #12]
 80038cc:	6803      	ldr	r3, [r0, #0]
 80038ce:	6a1b      	ldr	r3, [r3, #32]
 80038d0:	4798      	blx	r3
 80038d2:	280b      	cmp	r0, #11
 80038d4:	d803      	bhi.n	80038de <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x4e>
 80038d6:	4b3e      	ldr	r3, [pc, #248]	; (80039d0 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x140>)
 80038d8:	4a3a      	ldr	r2, [pc, #232]	; (80039c4 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x134>)
 80038da:	21a5      	movs	r1, #165	; 0xa5
 80038dc:	e7e8      	b.n	80038b0 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 80038de:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80039d8 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80038e2:	f012 ff01 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 80038e6:	f012 ff4d 	bl	8016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80038ea:	f8d9 0000 	ldr.w	r0, [r9]
 80038ee:	b110      	cbz	r0, 80038f6 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80038f0:	6803      	ldr	r3, [r0, #0]
 80038f2:	68db      	ldr	r3, [r3, #12]
 80038f4:	4798      	blx	r3
    if (*currentTrans)
 80038f6:	f8d9 0000 	ldr.w	r0, [r9]
 80038fa:	b110      	cbz	r0, 8003902 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80038fc:	6803      	ldr	r3, [r0, #0]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	4798      	blx	r3
    if (*currentScreen)
 8003902:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80039dc <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x14c>
 8003906:	f8d8 0000 	ldr.w	r0, [r8]
 800390a:	b110      	cbz	r0, 8003912 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800390c:	6803      	ldr	r3, [r0, #0]
 800390e:	695b      	ldr	r3, [r3, #20]
 8003910:	4798      	blx	r3
    if (*currentPresenter)
 8003912:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003916:	b110      	cbz	r0, 800391e <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003918:	6803      	ldr	r3, [r0, #0]
 800391a:	685b      	ldr	r3, [r3, #4]
 800391c:	4798      	blx	r3
    if (*currentScreen)
 800391e:	f8d8 0000 	ldr.w	r0, [r8]
 8003922:	b110      	cbz	r0, 800392a <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003924:	6803      	ldr	r3, [r0, #0]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	4798      	blx	r3
    if (*currentPresenter)
 800392a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800392e:	b110      	cbz	r0, 8003936 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003930:	6803      	ldr	r3, [r0, #0]
 8003932:	689b      	ldr	r3, [r3, #8]
 8003934:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003936:	68e8      	ldr	r0, [r5, #12]
 8003938:	2100      	movs	r1, #0
 800393a:	f7ff feff 	bl	800373c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800393e:	f04f 0b00 	mov.w	fp, #0
 8003942:	4b24      	ldr	r3, [pc, #144]	; (80039d4 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x144>)
 8003944:	6003      	str	r3, [r0, #0]
 8003946:	4604      	mov	r4, r0
 8003948:	f8c0 b004 	str.w	fp, [r0, #4]
 800394c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003950:	68a8      	ldr	r0, [r5, #8]
 8003952:	6803      	ldr	r3, [r0, #0]
 8003954:	4659      	mov	r1, fp
 8003956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003958:	4798      	blx	r3
 800395a:	4606      	mov	r6, r0
 800395c:	f003 ff66 	bl	800782c <_ZN17SettingScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003960:	6868      	ldr	r0, [r5, #4]
 8003962:	6803      	ldr	r3, [r0, #0]
 8003964:	4659      	mov	r1, fp
 8003966:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003968:	4798      	blx	r3
 800396a:	4631      	mov	r1, r6
 800396c:	4605      	mov	r5, r0
 800396e:	f003 fe73 	bl	8007658 <_ZN22SettingScreenPresenterC1ER17SettingScreenView>
    *currentTrans = newTransition;
 8003972:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003976:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800397a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800397e:	b1e5      	cbz	r5, 80039ba <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0x12a>
 8003980:	1d2b      	adds	r3, r5, #4
 8003982:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003986:	6833      	ldr	r3, [r6, #0]
 8003988:	f8c5 a008 	str.w	sl, [r5, #8]
 800398c:	4630      	mov	r0, r6
 800398e:	68db      	ldr	r3, [r3, #12]
 8003990:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003992:	4798      	blx	r3
    newPresenter->activate();
 8003994:	682b      	ldr	r3, [r5, #0]
 8003996:	4628      	mov	r0, r5
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800399c:	4621      	mov	r1, r4
 800399e:	4630      	mov	r0, r6
 80039a0:	f014 fba4 	bl	80180ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039a4:	6823      	ldr	r3, [r4, #0]
 80039a6:	4620      	mov	r0, r4
 80039a8:	691b      	ldr	r3, [r3, #16]
 80039aa:	4798      	blx	r3
    newTransition->invalidate();
 80039ac:	6823      	ldr	r3, [r4, #0]
 80039ae:	695b      	ldr	r3, [r3, #20]
 80039b0:	4620      	mov	r0, r4
}
 80039b2:	b001      	add	sp, #4
 80039b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039b8:	4718      	bx	r3
    model->bind(newPresenter);
 80039ba:	462b      	mov	r3, r5
 80039bc:	e7e1      	b.n	8003982 <_ZN23FrontendApplicationBase39gotoSettingScreenScreenNoTransitionImplEv+0xf2>
 80039be:	bf00      	nop
 80039c0:	0802951c 	.word	0x0802951c
 80039c4:	08029841 	.word	0x08029841
 80039c8:	080296b4 	.word	0x080296b4
 80039cc:	080296fb 	.word	0x080296fb
 80039d0:	0802979e 	.word	0x0802979e
 80039d4:	08029ce0 	.word	0x08029ce0
 80039d8:	20014c6c 	.word	0x20014c6c
 80039dc:	20014c68 	.word	0x20014c68

080039e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv>:
{
 80039e0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MeasurementScreenView, MeasurementScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039e4:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80039e8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039ea:	68a8      	ldr	r0, [r5, #8]
 80039ec:	6803      	ldr	r3, [r0, #0]
 80039ee:	6a1b      	ldr	r3, [r3, #32]
 80039f0:	4798      	blx	r3
 80039f2:	f5b0 5ff3 	cmp.w	r0, #7776	; 0x1e60
 80039f6:	d205      	bcs.n	8003a04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x24>
 80039f8:	4b44      	ldr	r3, [pc, #272]	; (8003b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x12c>)
 80039fa:	4a45      	ldr	r2, [pc, #276]	; (8003b10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x130>)
 80039fc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80039fe:	4845      	ldr	r0, [pc, #276]	; (8003b14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x134>)
 8003a00:	f023 fd56 	bl	80274b0 <__assert_func>
 8003a04:	6868      	ldr	r0, [r5, #4]
 8003a06:	6803      	ldr	r3, [r0, #0]
 8003a08:	6a1b      	ldr	r3, [r3, #32]
 8003a0a:	4798      	blx	r3
 8003a0c:	280f      	cmp	r0, #15
 8003a0e:	d803      	bhi.n	8003a18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x38>
 8003a10:	4b41      	ldr	r3, [pc, #260]	; (8003b18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x138>)
 8003a12:	4a3f      	ldr	r2, [pc, #252]	; (8003b10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x130>)
 8003a14:	21a4      	movs	r1, #164	; 0xa4
 8003a16:	e7f2      	b.n	80039fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a18:	68e8      	ldr	r0, [r5, #12]
 8003a1a:	6803      	ldr	r3, [r0, #0]
 8003a1c:	6a1b      	ldr	r3, [r3, #32]
 8003a1e:	4798      	blx	r3
 8003a20:	280b      	cmp	r0, #11
 8003a22:	d803      	bhi.n	8003a2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x4c>
 8003a24:	4b3d      	ldr	r3, [pc, #244]	; (8003b1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x13c>)
 8003a26:	4a3a      	ldr	r2, [pc, #232]	; (8003b10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x130>)
 8003a28:	21a5      	movs	r1, #165	; 0xa5
 8003a2a:	e7e8      	b.n	80039fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8003a2c:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8003b24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8003a30:	f012 fe5a 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8003a34:	f012 fea6 	bl	8016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003a38:	f8d9 0000 	ldr.w	r0, [r9]
 8003a3c:	b110      	cbz	r0, 8003a44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003a3e:	6803      	ldr	r3, [r0, #0]
 8003a40:	68db      	ldr	r3, [r3, #12]
 8003a42:	4798      	blx	r3
    if (*currentTrans)
 8003a44:	f8d9 0000 	ldr.w	r0, [r9]
 8003a48:	b110      	cbz	r0, 8003a50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003a4a:	6803      	ldr	r3, [r0, #0]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	4798      	blx	r3
    if (*currentScreen)
 8003a50:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8003b28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x148>
 8003a54:	f8d8 0000 	ldr.w	r0, [r8]
 8003a58:	b110      	cbz	r0, 8003a60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003a5a:	6803      	ldr	r3, [r0, #0]
 8003a5c:	695b      	ldr	r3, [r3, #20]
 8003a5e:	4798      	blx	r3
    if (*currentPresenter)
 8003a60:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003a64:	b110      	cbz	r0, 8003a6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003a66:	6803      	ldr	r3, [r0, #0]
 8003a68:	685b      	ldr	r3, [r3, #4]
 8003a6a:	4798      	blx	r3
    if (*currentScreen)
 8003a6c:	f8d8 0000 	ldr.w	r0, [r8]
 8003a70:	b110      	cbz	r0, 8003a78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003a72:	6803      	ldr	r3, [r0, #0]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	4798      	blx	r3
    if (*currentPresenter)
 8003a78:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003a7c:	b110      	cbz	r0, 8003a84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003a7e:	6803      	ldr	r3, [r0, #0]
 8003a80:	689b      	ldr	r3, [r3, #8]
 8003a82:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a84:	68e8      	ldr	r0, [r5, #12]
 8003a86:	2100      	movs	r1, #0
 8003a88:	f7ff fe58 	bl	800373c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003a8c:	f04f 0b00 	mov.w	fp, #0
 8003a90:	4b23      	ldr	r3, [pc, #140]	; (8003b20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x140>)
 8003a92:	6003      	str	r3, [r0, #0]
 8003a94:	4604      	mov	r4, r0
 8003a96:	f8c0 b004 	str.w	fp, [r0, #4]
 8003a9a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a9e:	68a8      	ldr	r0, [r5, #8]
 8003aa0:	6803      	ldr	r3, [r0, #0]
 8003aa2:	4659      	mov	r1, fp
 8003aa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aa6:	4798      	blx	r3
 8003aa8:	4606      	mov	r6, r0
 8003aaa:	f003 fc8f 	bl	80073cc <_ZN21MeasurementScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003aae:	6868      	ldr	r0, [r5, #4]
 8003ab0:	6803      	ldr	r3, [r0, #0]
 8003ab2:	4659      	mov	r1, fp
 8003ab4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ab6:	4798      	blx	r3
 8003ab8:	4631      	mov	r1, r6
 8003aba:	4605      	mov	r5, r0
 8003abc:	f003 fc5a 	bl	8007374 <_ZN26MeasurementScreenPresenterC1ER21MeasurementScreenView>
    *currentTrans = newTransition;
 8003ac0:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003ac4:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8003ac8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003acc:	b1e5      	cbz	r5, 8003b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0x128>
 8003ace:	1d2b      	adds	r3, r5, #4
 8003ad0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ad4:	6833      	ldr	r3, [r6, #0]
 8003ad6:	f8c5 a008 	str.w	sl, [r5, #8]
 8003ada:	4630      	mov	r0, r6
 8003adc:	68db      	ldr	r3, [r3, #12]
 8003ade:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003ae0:	4798      	blx	r3
    newPresenter->activate();
 8003ae2:	682b      	ldr	r3, [r5, #0]
 8003ae4:	4628      	mov	r0, r5
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003aea:	4621      	mov	r1, r4
 8003aec:	4630      	mov	r0, r6
 8003aee:	f014 fafd 	bl	80180ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003af2:	6823      	ldr	r3, [r4, #0]
 8003af4:	4620      	mov	r0, r4
 8003af6:	691b      	ldr	r3, [r3, #16]
 8003af8:	4798      	blx	r3
    newTransition->invalidate();
 8003afa:	6823      	ldr	r3, [r4, #0]
 8003afc:	695b      	ldr	r3, [r3, #20]
 8003afe:	4620      	mov	r0, r4
}
 8003b00:	b001      	add	sp, #4
 8003b02:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b06:	4718      	bx	r3
    model->bind(newPresenter);
 8003b08:	462b      	mov	r3, r5
 8003b0a:	e7e1      	b.n	8003ad0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenScreenNoTransitionImplEv+0xf0>
 8003b0c:	0802951c 	.word	0x0802951c
 8003b10:	08029951 	.word	0x08029951
 8003b14:	080296b4 	.word	0x080296b4
 8003b18:	080296fb 	.word	0x080296fb
 8003b1c:	0802979e 	.word	0x0802979e
 8003b20:	08029ce0 	.word	0x08029ce0
 8003b24:	20014c6c 	.word	0x20014c6c
 8003b28:	20014c68 	.word	0x20014c68

08003b2c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
{
 8003b2c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b30:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8003b34:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b36:	68a8      	ldr	r0, [r5, #8]
 8003b38:	6803      	ldr	r3, [r0, #0]
 8003b3a:	6a1b      	ldr	r3, [r3, #32]
 8003b3c:	4798      	blx	r3
 8003b3e:	f641 030f 	movw	r3, #6159	; 0x180f
 8003b42:	4298      	cmp	r0, r3
 8003b44:	d805      	bhi.n	8003b52 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x26>
 8003b46:	4b45      	ldr	r3, [pc, #276]	; (8003c5c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x130>)
 8003b48:	4a45      	ldr	r2, [pc, #276]	; (8003c60 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x134>)
 8003b4a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b4c:	4845      	ldr	r0, [pc, #276]	; (8003c64 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x138>)
 8003b4e:	f023 fcaf 	bl	80274b0 <__assert_func>
 8003b52:	6868      	ldr	r0, [r5, #4]
 8003b54:	6803      	ldr	r3, [r0, #0]
 8003b56:	6a1b      	ldr	r3, [r3, #32]
 8003b58:	4798      	blx	r3
 8003b5a:	280f      	cmp	r0, #15
 8003b5c:	d803      	bhi.n	8003b66 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x3a>
 8003b5e:	4b42      	ldr	r3, [pc, #264]	; (8003c68 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x13c>)
 8003b60:	4a3f      	ldr	r2, [pc, #252]	; (8003c60 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x134>)
 8003b62:	21a4      	movs	r1, #164	; 0xa4
 8003b64:	e7f2      	b.n	8003b4c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b66:	68e8      	ldr	r0, [r5, #12]
 8003b68:	6803      	ldr	r3, [r0, #0]
 8003b6a:	6a1b      	ldr	r3, [r3, #32]
 8003b6c:	4798      	blx	r3
 8003b6e:	280b      	cmp	r0, #11
 8003b70:	d803      	bhi.n	8003b7a <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x4e>
 8003b72:	4b3e      	ldr	r3, [pc, #248]	; (8003c6c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x140>)
 8003b74:	4a3a      	ldr	r2, [pc, #232]	; (8003c60 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x134>)
 8003b76:	21a5      	movs	r1, #165	; 0xa5
 8003b78:	e7e8      	b.n	8003b4c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8003b7a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003c74 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8003b7e:	f012 fdb3 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8003b82:	f012 fdff 	bl	8016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003b86:	f8d9 0000 	ldr.w	r0, [r9]
 8003b8a:	b110      	cbz	r0, 8003b92 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8003b8c:	6803      	ldr	r3, [r0, #0]
 8003b8e:	68db      	ldr	r3, [r3, #12]
 8003b90:	4798      	blx	r3
    if (*currentTrans)
 8003b92:	f8d9 0000 	ldr.w	r0, [r9]
 8003b96:	b110      	cbz	r0, 8003b9e <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003b98:	6803      	ldr	r3, [r0, #0]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	4798      	blx	r3
    if (*currentScreen)
 8003b9e:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003c78 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x14c>
 8003ba2:	f8d8 0000 	ldr.w	r0, [r8]
 8003ba6:	b110      	cbz	r0, 8003bae <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003ba8:	6803      	ldr	r3, [r0, #0]
 8003baa:	695b      	ldr	r3, [r3, #20]
 8003bac:	4798      	blx	r3
    if (*currentPresenter)
 8003bae:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003bb2:	b110      	cbz	r0, 8003bba <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003bb4:	6803      	ldr	r3, [r0, #0]
 8003bb6:	685b      	ldr	r3, [r3, #4]
 8003bb8:	4798      	blx	r3
    if (*currentScreen)
 8003bba:	f8d8 0000 	ldr.w	r0, [r8]
 8003bbe:	b110      	cbz	r0, 8003bc6 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003bc0:	6803      	ldr	r3, [r0, #0]
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	4798      	blx	r3
    if (*currentPresenter)
 8003bc6:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003bca:	b110      	cbz	r0, 8003bd2 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003bcc:	6803      	ldr	r3, [r0, #0]
 8003bce:	689b      	ldr	r3, [r3, #8]
 8003bd0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003bd2:	68e8      	ldr	r0, [r5, #12]
 8003bd4:	2100      	movs	r1, #0
 8003bd6:	f7ff fdb1 	bl	800373c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003bda:	f04f 0b00 	mov.w	fp, #0
 8003bde:	4b24      	ldr	r3, [pc, #144]	; (8003c70 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x144>)
 8003be0:	6003      	str	r3, [r0, #0]
 8003be2:	4604      	mov	r4, r0
 8003be4:	f8c0 b004 	str.w	fp, [r0, #4]
 8003be8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003bec:	68a8      	ldr	r0, [r5, #8]
 8003bee:	6803      	ldr	r3, [r0, #0]
 8003bf0:	4659      	mov	r1, fp
 8003bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bf4:	4798      	blx	r3
 8003bf6:	4606      	mov	r6, r0
 8003bf8:	f003 fd16 	bl	8007628 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003bfc:	6868      	ldr	r0, [r5, #4]
 8003bfe:	6803      	ldr	r3, [r0, #0]
 8003c00:	4659      	mov	r1, fp
 8003c02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c04:	4798      	blx	r3
 8003c06:	4631      	mov	r1, r6
 8003c08:	4605      	mov	r5, r0
 8003c0a:	f003 fcf3 	bl	80075f4 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8003c0e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003c12:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8003c16:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003c1a:	b1e5      	cbz	r5, 8003c56 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x12a>
 8003c1c:	1d2b      	adds	r3, r5, #4
 8003c1e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c22:	6833      	ldr	r3, [r6, #0]
 8003c24:	f8c5 a008 	str.w	sl, [r5, #8]
 8003c28:	4630      	mov	r0, r6
 8003c2a:	68db      	ldr	r3, [r3, #12]
 8003c2c:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003c2e:	4798      	blx	r3
    newPresenter->activate();
 8003c30:	682b      	ldr	r3, [r5, #0]
 8003c32:	4628      	mov	r0, r5
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c38:	4621      	mov	r1, r4
 8003c3a:	4630      	mov	r0, r6
 8003c3c:	f014 fa56 	bl	80180ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c40:	6823      	ldr	r3, [r4, #0]
 8003c42:	4620      	mov	r0, r4
 8003c44:	691b      	ldr	r3, [r3, #16]
 8003c46:	4798      	blx	r3
    newTransition->invalidate();
 8003c48:	6823      	ldr	r3, [r4, #0]
 8003c4a:	695b      	ldr	r3, [r3, #20]
 8003c4c:	4620      	mov	r0, r4
}
 8003c4e:	b001      	add	sp, #4
 8003c50:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c54:	4718      	bx	r3
    model->bind(newPresenter);
 8003c56:	462b      	mov	r3, r5
 8003c58:	e7e1      	b.n	8003c1e <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0xf2>
 8003c5a:	bf00      	nop
 8003c5c:	0802951c 	.word	0x0802951c
 8003c60:	08029a69 	.word	0x08029a69
 8003c64:	080296b4 	.word	0x080296b4
 8003c68:	080296fb 	.word	0x080296fb
 8003c6c:	0802979e 	.word	0x0802979e
 8003c70:	08029ce0 	.word	0x08029ce0
 8003c74:	20014c6c 	.word	0x20014c6c
 8003c78:	20014c68 	.word	0x20014c68

08003c7c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8003c7c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c80:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8003c84:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c86:	68a8      	ldr	r0, [r5, #8]
 8003c88:	6803      	ldr	r3, [r0, #0]
 8003c8a:	6a1b      	ldr	r3, [r3, #32]
 8003c8c:	4798      	blx	r3
 8003c8e:	f240 4373 	movw	r3, #1139	; 0x473
 8003c92:	4298      	cmp	r0, r3
 8003c94:	d805      	bhi.n	8003ca2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 8003c96:	4b45      	ldr	r3, [pc, #276]	; (8003dac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8003c98:	4a45      	ldr	r2, [pc, #276]	; (8003db0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8003c9a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c9c:	4845      	ldr	r0, [pc, #276]	; (8003db4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8003c9e:	f023 fc07 	bl	80274b0 <__assert_func>
 8003ca2:	6868      	ldr	r0, [r5, #4]
 8003ca4:	6803      	ldr	r3, [r0, #0]
 8003ca6:	6a1b      	ldr	r3, [r3, #32]
 8003ca8:	4798      	blx	r3
 8003caa:	280f      	cmp	r0, #15
 8003cac:	d803      	bhi.n	8003cb6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 8003cae:	4b42      	ldr	r3, [pc, #264]	; (8003db8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8003cb0:	4a3f      	ldr	r2, [pc, #252]	; (8003db0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8003cb2:	21a4      	movs	r1, #164	; 0xa4
 8003cb4:	e7f2      	b.n	8003c9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003cb6:	68e8      	ldr	r0, [r5, #12]
 8003cb8:	6803      	ldr	r3, [r0, #0]
 8003cba:	6a1b      	ldr	r3, [r3, #32]
 8003cbc:	4798      	blx	r3
 8003cbe:	280b      	cmp	r0, #11
 8003cc0:	d803      	bhi.n	8003cca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 8003cc2:	4b3e      	ldr	r3, [pc, #248]	; (8003dbc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8003cc4:	4a3a      	ldr	r2, [pc, #232]	; (8003db0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8003cc6:	21a5      	movs	r1, #165	; 0xa5
 8003cc8:	e7e8      	b.n	8003c9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8003cca:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003dc4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8003cce:	f012 fd0b 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8003cd2:	f012 fd57 	bl	8016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003cd6:	f8d9 0000 	ldr.w	r0, [r9]
 8003cda:	b110      	cbz	r0, 8003ce2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8003cdc:	6803      	ldr	r3, [r0, #0]
 8003cde:	68db      	ldr	r3, [r3, #12]
 8003ce0:	4798      	blx	r3
    if (*currentTrans)
 8003ce2:	f8d9 0000 	ldr.w	r0, [r9]
 8003ce6:	b110      	cbz	r0, 8003cee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003ce8:	6803      	ldr	r3, [r0, #0]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	4798      	blx	r3
    if (*currentScreen)
 8003cee:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003dc8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8003cf2:	f8d8 0000 	ldr.w	r0, [r8]
 8003cf6:	b110      	cbz	r0, 8003cfe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003cf8:	6803      	ldr	r3, [r0, #0]
 8003cfa:	695b      	ldr	r3, [r3, #20]
 8003cfc:	4798      	blx	r3
    if (*currentPresenter)
 8003cfe:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003d02:	b110      	cbz	r0, 8003d0a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003d04:	6803      	ldr	r3, [r0, #0]
 8003d06:	685b      	ldr	r3, [r3, #4]
 8003d08:	4798      	blx	r3
    if (*currentScreen)
 8003d0a:	f8d8 0000 	ldr.w	r0, [r8]
 8003d0e:	b110      	cbz	r0, 8003d16 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003d10:	6803      	ldr	r3, [r0, #0]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	4798      	blx	r3
    if (*currentPresenter)
 8003d16:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003d1a:	b110      	cbz	r0, 8003d22 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003d1c:	6803      	ldr	r3, [r0, #0]
 8003d1e:	689b      	ldr	r3, [r3, #8]
 8003d20:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d22:	68e8      	ldr	r0, [r5, #12]
 8003d24:	2100      	movs	r1, #0
 8003d26:	f7ff fd09 	bl	800373c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003d2a:	f04f 0b00 	mov.w	fp, #0
 8003d2e:	4b24      	ldr	r3, [pc, #144]	; (8003dc0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8003d30:	6003      	str	r3, [r0, #0]
 8003d32:	4604      	mov	r4, r0
 8003d34:	f8c0 b004 	str.w	fp, [r0, #4]
 8003d38:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d3c:	68a8      	ldr	r0, [r5, #8]
 8003d3e:	6803      	ldr	r3, [r0, #0]
 8003d40:	4659      	mov	r1, fp
 8003d42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d44:	4798      	blx	r3
 8003d46:	4606      	mov	r6, r0
 8003d48:	f003 fc3c 	bl	80075c4 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d4c:	6868      	ldr	r0, [r5, #4]
 8003d4e:	6803      	ldr	r3, [r0, #0]
 8003d50:	4659      	mov	r1, fp
 8003d52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d54:	4798      	blx	r3
 8003d56:	4631      	mov	r1, r6
 8003d58:	4605      	mov	r5, r0
 8003d5a:	f003 fbd7 	bl	800750c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8003d5e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003d62:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8003d66:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d6a:	b1e5      	cbz	r5, 8003da6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8003d6c:	1d2b      	adds	r3, r5, #4
 8003d6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d72:	6833      	ldr	r3, [r6, #0]
 8003d74:	f8c5 a008 	str.w	sl, [r5, #8]
 8003d78:	4630      	mov	r0, r6
 8003d7a:	68db      	ldr	r3, [r3, #12]
 8003d7c:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003d7e:	4798      	blx	r3
    newPresenter->activate();
 8003d80:	682b      	ldr	r3, [r5, #0]
 8003d82:	4628      	mov	r0, r5
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d88:	4621      	mov	r1, r4
 8003d8a:	4630      	mov	r0, r6
 8003d8c:	f014 f9ae 	bl	80180ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d90:	6823      	ldr	r3, [r4, #0]
 8003d92:	4620      	mov	r0, r4
 8003d94:	691b      	ldr	r3, [r3, #16]
 8003d96:	4798      	blx	r3
    newTransition->invalidate();
 8003d98:	6823      	ldr	r3, [r4, #0]
 8003d9a:	695b      	ldr	r3, [r3, #20]
 8003d9c:	4620      	mov	r0, r4
}
 8003d9e:	b001      	add	sp, #4
 8003da0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003da4:	4718      	bx	r3
    model->bind(newPresenter);
 8003da6:	462b      	mov	r3, r5
 8003da8:	e7e1      	b.n	8003d6e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8003daa:	bf00      	nop
 8003dac:	0802951c 	.word	0x0802951c
 8003db0:	08029b6d 	.word	0x08029b6d
 8003db4:	080296b4 	.word	0x080296b4
 8003db8:	080296fb 	.word	0x080296fb
 8003dbc:	0802979e 	.word	0x0802979e
 8003dc0:	08029ce0 	.word	0x08029ce0
 8003dc4:	20014c6c 	.word	0x20014c6c
 8003dc8:	20014c68 	.word	0x20014c68

08003dcc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003dcc:	6a00      	ldr	r0, [r0, #32]
 8003dce:	4770      	bx	lr

08003dd0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003dd0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003dd2:	4770      	bx	lr

08003dd4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003dd4:	4770      	bx	lr

08003dd6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003dd6:	888b      	ldrh	r3, [r1, #4]
 8003dd8:	6980      	ldr	r0, [r0, #24]
 8003dda:	680a      	ldr	r2, [r1, #0]
 8003ddc:	0adb      	lsrs	r3, r3, #11
 8003dde:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003de2:	4410      	add	r0, r2
 8003de4:	4770      	bx	lr

08003de6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003de6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8003de8:	b1c2      	cbz	r2, 8003e1c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003dea:	7b13      	ldrb	r3, [r2, #12]
 8003dec:	b1b3      	cbz	r3, 8003e1c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003dee:	7b54      	ldrb	r4, [r2, #13]
 8003df0:	7ad2      	ldrb	r2, [r2, #11]
 8003df2:	0224      	lsls	r4, r4, #8
 8003df4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003df8:	4314      	orrs	r4, r2
 8003dfa:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003dfc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003dfe:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003e02:	8813      	ldrh	r3, [r2, #0]
 8003e04:	428b      	cmp	r3, r1
 8003e06:	d102      	bne.n	8003e0e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003e08:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003e0c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003e0e:	d805      	bhi.n	8003e1c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003e10:	3801      	subs	r0, #1
 8003e12:	b280      	uxth	r0, r0
 8003e14:	3204      	adds	r2, #4
 8003e16:	2800      	cmp	r0, #0
 8003e18:	d1f3      	bne.n	8003e02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003e1a:	e7f7      	b.n	8003e0c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003e1c:	2000      	movs	r0, #0
 8003e1e:	e7f5      	b.n	8003e0c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003e20 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003e20:	b510      	push	{r4, lr}
 8003e22:	2128      	movs	r1, #40	; 0x28
 8003e24:	4604      	mov	r4, r0
 8003e26:	f023 fb14 	bl	8027452 <_ZdlPvj>
 8003e2a:	4620      	mov	r0, r4
 8003e2c:	bd10      	pop	{r4, pc}
	...

08003e30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003e30:	b530      	push	{r4, r5, lr}
 8003e32:	b089      	sub	sp, #36	; 0x24
 8003e34:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003e36:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8003e3a:	9506      	str	r5, [sp, #24]
 8003e3c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8003e40:	9505      	str	r5, [sp, #20]
 8003e42:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8003e46:	9504      	str	r5, [sp, #16]
 8003e48:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8003e4c:	9503      	str	r5, [sp, #12]
 8003e4e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8003e52:	9502      	str	r5, [sp, #8]
 8003e54:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8003e58:	9501      	str	r5, [sp, #4]
 8003e5a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8003e5e:	9500      	str	r5, [sp, #0]
 8003e60:	f013 fcc4 	bl	80177ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8003e64:	4b06      	ldr	r3, [pc, #24]	; (8003e80 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8003e66:	6023      	str	r3, [r4, #0]
 8003e68:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003e6a:	61a3      	str	r3, [r4, #24]
 8003e6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003e6e:	61e3      	str	r3, [r4, #28]
 8003e70:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003e72:	6223      	str	r3, [r4, #32]
 8003e74:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003e76:	6263      	str	r3, [r4, #36]	; 0x24
}
 8003e78:	4620      	mov	r0, r4
 8003e7a:	b009      	add	sp, #36	; 0x24
 8003e7c:	bd30      	pop	{r4, r5, pc}
 8003e7e:	bf00      	nop
 8003e80:	08029d04 	.word	0x08029d04

08003e84 <_ZN25MeasurementScreenViewBaseD1Ev>:

class MeasurementScreenViewBase : public touchgfx::View<MeasurementScreenPresenter>
{
public:
    MeasurementScreenViewBase();
    virtual ~MeasurementScreenViewBase() {}
 8003e84:	4770      	bx	lr

08003e86 <_ZN25MeasurementScreenViewBase11setupScreenEv>:
}

void MeasurementScreenViewBase::setupScreen()
{

}
 8003e86:	4770      	bx	lr

08003e88 <_ZN8touchgfx8CallbackI25MeasurementScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e88:	4770      	bx	lr

08003e8a <_ZN8touchgfx8CallbackI25MeasurementScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e8a:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003e8c:	68c2      	ldr	r2, [r0, #12]
 8003e8e:	6844      	ldr	r4, [r0, #4]
 8003e90:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e92:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003e94:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e98:	07d2      	lsls	r2, r2, #31
 8003e9a:	bf48      	it	mi
 8003e9c:	5962      	ldrmi	r2, [r4, r5]
 8003e9e:	689b      	ldr	r3, [r3, #8]
    }
 8003ea0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ea2:	bf48      	it	mi
 8003ea4:	58d3      	ldrmi	r3, [r2, r3]
 8003ea6:	4718      	bx	r3

08003ea8 <_ZNK8touchgfx8CallbackI25MeasurementScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003ea8:	6843      	ldr	r3, [r0, #4]
 8003eaa:	b12b      	cbz	r3, 8003eb8 <_ZNK8touchgfx8CallbackI25MeasurementScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003eac:	6883      	ldr	r3, [r0, #8]
 8003eae:	b92b      	cbnz	r3, 8003ebc <_ZNK8touchgfx8CallbackI25MeasurementScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003eb0:	68c0      	ldr	r0, [r0, #12]
 8003eb2:	f000 0001 	and.w	r0, r0, #1
 8003eb6:	4770      	bx	lr
 8003eb8:	4618      	mov	r0, r3
 8003eba:	4770      	bx	lr
 8003ebc:	2001      	movs	r0, #1
    }
 8003ebe:	4770      	bx	lr

08003ec0 <_ZN8touchgfx8CallbackI25MeasurementScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ec0:	b510      	push	{r4, lr}
 8003ec2:	2110      	movs	r1, #16
 8003ec4:	4604      	mov	r4, r0
 8003ec6:	f023 fac4 	bl	8027452 <_ZdlPvj>
 8003eca:	4620      	mov	r0, r4
 8003ecc:	bd10      	pop	{r4, pc}

08003ece <_ZN25MeasurementScreenViewBaseD0Ev>:
 8003ece:	b510      	push	{r4, lr}
 8003ed0:	f44f 51f3 	mov.w	r1, #7776	; 0x1e60
 8003ed4:	4604      	mov	r4, r0
 8003ed6:	f023 fabc 	bl	8027452 <_ZdlPvj>
 8003eda:	4620      	mov	r0, r4
 8003edc:	bd10      	pop	{r4, pc}

08003ede <_ZN25MeasurementScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MeasurementScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &backButton1)
 8003ede:	f500 602a 	add.w	r0, r0, #2720	; 0xaa0
 8003ee2:	4288      	cmp	r0, r1
{
 8003ee4:	b508      	push	{r3, lr}
    if (&src == &backButton1)
 8003ee6:	d105      	bne.n	8003ef4 <_ZN25MeasurementScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003ee8:	f012 fbfe 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When backButton1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
 8003eec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8003ef0:	f7ff bbd4 	b.w	800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8003ef4:	bd08      	pop	{r3, pc}
	...

08003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003ef8:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003efa:	4e15      	ldr	r6, [pc, #84]	; (8003f50 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255)
 8003efc:	2300      	movs	r3, #0
 8003efe:	22ff      	movs	r2, #255	; 0xff
        : AbstractPainter(), currentX(0), currentY(0)
 8003f00:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003f04:	6043      	str	r3, [r0, #4]
 8003f06:	6833      	ldr	r3, [r6, #0]
 8003f08:	7202      	strb	r2, [r0, #8]
 8003f0a:	4a12      	ldr	r2, [pc, #72]	; (8003f54 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003f0c:	6002      	str	r2, [r0, #0]
 8003f0e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003f12:	4604      	mov	r4, r0
 8003f14:	b10a      	cbz	r2, 8003f1a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x22>
 8003f16:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003f18:	b900      	cbnz	r0, 8003f1c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x24>
        return instance->lcdRef;
 8003f1a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003f1c:	6803      	ldr	r3, [r0, #0]
 8003f1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f20:	4798      	blx	r3
        return auxiliaryLCD;
 8003f22:	6833      	ldr	r3, [r6, #0]
 8003f24:	fab0 f580 	clz	r5, r0
 8003f28:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003f2a:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003f2c:	b130      	cbz	r0, 8003f3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x44>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003f2e:	6803      	ldr	r3, [r0, #0]
 8003f30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f32:	4798      	blx	r3
 8003f34:	2800      	cmp	r0, #0
 8003f36:	bf08      	it	eq
 8003f38:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003f3c:	b92d      	cbnz	r5, 8003f4a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x52>
 8003f3e:	4b06      	ldr	r3, [pc, #24]	; (8003f58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003f40:	4a06      	ldr	r2, [pc, #24]	; (8003f5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x64>)
 8003f42:	4807      	ldr	r0, [pc, #28]	; (8003f60 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x68>)
 8003f44:	212c      	movs	r1, #44	; 0x2c
 8003f46:	f023 fab3 	bl	80274b0 <__assert_func>
    }
 8003f4a:	4620      	mov	r0, r4
 8003f4c:	bd70      	pop	{r4, r5, r6, pc}
 8003f4e:	bf00      	nop
 8003f50:	20014c0c 	.word	0x20014c0c
 8003f54:	0802bbd4 	.word	0x0802bbd4
 8003f58:	08029d54 	.word	0x08029d54
 8003f5c:	08029db2 	.word	0x08029db2
 8003f60:	08029deb 	.word	0x08029deb

08003f64 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003f64:	b510      	push	{r4, lr}
 8003f66:	4604      	mov	r4, r0
        : TextArea()
 8003f68:	f7fe fe14 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003f6c:	4b02      	ldr	r3, [pc, #8]	; (8003f78 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003f6e:	6023      	str	r3, [r4, #0]
 8003f70:	2300      	movs	r3, #0
 8003f72:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003f74:	4620      	mov	r0, r4
 8003f76:	bd10      	pop	{r4, pc}
 8003f78:	080291e0 	.word	0x080291e0

08003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8003f7c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8003f80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        : T(), up(), down()
 8003f82:	4606      	mov	r6, r0
 8003f84:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8003f86:	f240 1301 	movw	r3, #257	; 0x101
 8003f8a:	2500      	movs	r5, #0
 8003f8c:	8483      	strh	r3, [r0, #36]	; 0x24
 8003f8e:	4b24      	ldr	r3, [pc, #144]	; (8004020 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa4>)
 8003f90:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8003f92:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003f96:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8003f9a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8003f9e:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8003fa2:	6305      	str	r5, [r0, #48]	; 0x30
 8003fa4:	f846 3b34 	str.w	r3, [r6], #52
 8003fa8:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8003faa:	4630      	mov	r0, r6
 8003fac:	f7fe fdde 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8003fb0:	4b1c      	ldr	r3, [pc, #112]	; (8004024 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa8>)
 8003fb2:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8003fb4:	462a      	mov	r2, r5
 8003fb6:	4629      	mov	r1, r5
 8003fb8:	4630      	mov	r0, r6
        : color(0)
 8003fba:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8003fbe:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8003fc2:	6625      	str	r5, [r4, #96]	; 0x60
 8003fc4:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8003fc8:	f7fe fd75 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003fcc:	4631      	mov	r1, r6
 8003fce:	4620      	mov	r0, r4
        : T()
 8003fd0:	4626      	mov	r6, r4
 8003fd2:	f00b fa5b 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fd6:	4b14      	ldr	r3, [pc, #80]	; (8004028 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xac>)
 8003fd8:	f846 3b7c 	str.w	r3, [r6], #124
 8003fdc:	f04f 33ff 	mov.w	r3, #4294967295
        : Widget(), bitmap(bmp), alpha(255)
 8003fe0:	2226      	movs	r2, #38	; 0x26
 8003fe2:	67a3      	str	r3, [r4, #120]	; 0x78
 8003fe4:	4629      	mov	r1, r5
 8003fe6:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8003fea:	4630      	mov	r0, r6
 8003fec:	f8ad 7004 	strh.w	r7, [sp, #4]
 8003ff0:	f023 fbe4 	bl	80277bc <memset>
 8003ff4:	4630      	mov	r0, r6
 8003ff6:	f7fe fda7 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8003ffa:	4b0c      	ldr	r3, [pc, #48]	; (800402c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb0>)
 8003ffc:	67e3      	str	r3, [r4, #124]	; 0x7c
 8003ffe:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8004002:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
        Image::setBitmap(bmp);
 8004006:	a901      	add	r1, sp, #4
 8004008:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 800400a:	f884 70a4 	strb.w	r7, [r4, #164]	; 0xa4
        Image::setBitmap(bmp);
 800400e:	f010 fd97 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
 8004012:	4620      	mov	r0, r4
 8004014:	4631      	mov	r1, r6
 8004016:	f00b fa39 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800401a:	4620      	mov	r0, r4
 800401c:	b003      	add	sp, #12
 800401e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004020:	08029300 	.word	0x08029300
 8004024:	0802c810 	.word	0x0802c810
 8004028:	0802939c 	.word	0x0802939c
 800402c:	0802c878 	.word	0x0802c878

08004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004030:	0152      	lsls	r2, r2, #5
 8004032:	0149      	lsls	r1, r1, #5
 8004034:	f00e b818 	b.w	8012068 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004038:	0152      	lsls	r2, r2, #5
 800403a:	0149      	lsls	r1, r1, #5
 800403c:	f00e b81f 	b.w	801207e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8004040:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidth == widthQ5)
 8004042:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004044:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5(int(value * Rasterizer::POLY_BASE_SIZE));
 8004048:	ea4f 1241 	mov.w	r2, r1, lsl #5
 800404c:	d004      	beq.n	8004058 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 800404e:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidth = widthQ5;
 8004052:	6402      	str	r2, [r0, #64]	; 0x40

        updateCachedShape();
 8004054:	f00d bf02 	b.w	8011e5c <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8004058:	f85d 4b04 	ldr.w	r4, [sp], #4
 800405c:	4770      	bx	lr
	...

08004060 <_ZN25MeasurementScreenViewBaseC1Ev>:
MeasurementScreenViewBase::MeasurementScreenViewBase() :
 8004060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004064:	ed2d 8b10 	vpush	{d8-d15}
 8004068:	4604      	mov	r4, r0
 800406a:	b09f      	sub	sp, #124	; 0x7c
        : presenter(0)
 800406c:	f013 fe92 	bl	8017d94 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &MeasurementScreenViewBase::flexButtonCallbackHandler)
 8004070:	4622      	mov	r2, r4
 8004072:	2500      	movs	r5, #0
 8004074:	4beb      	ldr	r3, [pc, #940]	; (8004424 <_ZN25MeasurementScreenViewBaseC1Ev+0x3c4>)
 8004076:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004078:	f842 3b40 	str.w	r3, [r2], #64
 800407c:	4610      	mov	r0, r2
 800407e:	ee0b 2a90 	vmov	s23, r2
 8004082:	f7fe fd73 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8004086:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800408a:	4618      	mov	r0, r3
 800408c:	930c      	str	r3, [sp, #48]	; 0x30
 800408e:	f7fe fd6d 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8004092:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8004096:	4618      	mov	r0, r3
 8004098:	ee0c 3a10 	vmov	s24, r3
 800409c:	f7fe fd7a 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 80040a0:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80040a4:	4618      	mov	r0, r3
 80040a6:	ee08 3a10 	vmov	s16, r3
 80040aa:	f00d feb7 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), painterColor(0)
 80040ae:	f504 73aa 	add.w	r3, r4, #340	; 0x154
 80040b2:	4618      	mov	r0, r3
 80040b4:	4edc      	ldr	r6, [pc, #880]	; (8004428 <_ZN25MeasurementScreenViewBaseC1Ev+0x3c8>)
 80040b6:	9315      	str	r3, [sp, #84]	; 0x54
 80040b8:	f7ff ff1e 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80040bc:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 80040c0:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 80040c4:	4618      	mov	r0, r3
     *
     * @param  color The color.
     */
    void setColor(colortype color)
    {
        painterColor = color;
 80040c6:	f8c4 5168 	str.w	r5, [r4, #360]	; 0x168
 80040ca:	ee08 3a90 	vmov	s17, r3
 80040ce:	f00d fea5 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 80040d2:	f504 73f0 	add.w	r3, r4, #480	; 0x1e0
 80040d6:	4618      	mov	r0, r3
 80040d8:	9314      	str	r3, [sp, #80]	; 0x50
 80040da:	f7ff ff0d 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80040de:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80040e2:	f8c4 61e0 	str.w	r6, [r4, #480]	; 0x1e0
 80040e6:	4618      	mov	r0, r3
        painterColor = color;
 80040e8:	f8c4 51f4 	str.w	r5, [r4, #500]	; 0x1f4
 80040ec:	ee09 3a10 	vmov	s18, r3
 80040f0:	f00d fe94 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 80040f4:	f504 731b 	add.w	r3, r4, #620	; 0x26c
 80040f8:	4618      	mov	r0, r3
 80040fa:	9313      	str	r3, [sp, #76]	; 0x4c
 80040fc:	f7ff fefc 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004100:	f504 7321 	add.w	r3, r4, #644	; 0x284
 8004104:	4618      	mov	r0, r3
 8004106:	f504 773e 	add.w	r7, r4, #760	; 0x2f8
 800410a:	f8c4 626c 	str.w	r6, [r4, #620]	; 0x26c
        painterColor = color;
 800410e:	f8c4 5280 	str.w	r5, [r4, #640]	; 0x280
 8004112:	ee09 3a90 	vmov	s19, r3
 8004116:	f00d fe81 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 800411a:	4638      	mov	r0, r7
 800411c:	f7ff feec 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004120:	f504 7344 	add.w	r3, r4, #784	; 0x310
 8004124:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8004128:	4618      	mov	r0, r3
        painterColor = color;
 800412a:	f8c4 530c 	str.w	r5, [r4, #780]	; 0x30c
 800412e:	ee0a 3a10 	vmov	s20, r3
 8004132:	f00d fe73 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8004136:	f504 7361 	add.w	r3, r4, #900	; 0x384
 800413a:	4618      	mov	r0, r3
 800413c:	9312      	str	r3, [sp, #72]	; 0x48
 800413e:	f7ff fedb 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004142:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 8004146:	f8c4 6384 	str.w	r6, [r4, #900]	; 0x384
 800414a:	4618      	mov	r0, r3
        painterColor = color;
 800414c:	f8c4 5398 	str.w	r5, [r4, #920]	; 0x398
 8004150:	ee0a 3a90 	vmov	s21, r3
 8004154:	f00d fe62 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8004158:	f504 6382 	add.w	r3, r4, #1040	; 0x410
 800415c:	4618      	mov	r0, r3
 800415e:	9311      	str	r3, [sp, #68]	; 0x44
 8004160:	f7ff feca 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004164:	f504 6385 	add.w	r3, r4, #1064	; 0x428
 8004168:	f8c4 6410 	str.w	r6, [r4, #1040]	; 0x410
 800416c:	4618      	mov	r0, r3
        painterColor = color;
 800416e:	f8c4 5424 	str.w	r5, [r4, #1060]	; 0x424
 8004172:	ee0b 3a10 	vmov	s22, r3
 8004176:	f00d fe51 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 800417a:	f204 439c 	addw	r3, r4, #1180	; 0x49c
 800417e:	f204 4bb4 	addw	fp, r4, #1204	; 0x4b4
 8004182:	4618      	mov	r0, r3
 8004184:	9310      	str	r3, [sp, #64]	; 0x40
 8004186:	f7ff feb7 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800418a:	f8c4 649c 	str.w	r6, [r4, #1180]	; 0x49c
        painterColor = color;
 800418e:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
 8004192:	4658      	mov	r0, fp
 8004194:	f00d fe42 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8004198:	f504 63a5 	add.w	r3, r4, #1320	; 0x528
 800419c:	4618      	mov	r0, r3
 800419e:	930f      	str	r3, [sp, #60]	; 0x3c
 80041a0:	f7ff feaa 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80041a4:	f504 63a8 	add.w	r3, r4, #1344	; 0x540
 80041a8:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
 80041ac:	4618      	mov	r0, r3
        painterColor = color;
 80041ae:	f8c4 553c 	str.w	r5, [r4, #1340]	; 0x53c
 80041b2:	ee0c 3a90 	vmov	s25, r3
 80041b6:	f7fe fced 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 80041ba:	f504 63b1 	add.w	r3, r4, #1416	; 0x588
 80041be:	4618      	mov	r0, r3
 80041c0:	ee0d 3a10 	vmov	s26, r3
 80041c4:	f7fe fce6 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 80041c8:	f504 63ba 	add.w	r3, r4, #1488	; 0x5d0
 80041cc:	f504 69c3 	add.w	r9, r4, #1560	; 0x618
 80041d0:	4618      	mov	r0, r3
 80041d2:	ee0d 3a90 	vmov	s27, r3
 80041d6:	f7fe fcdd 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 80041da:	4648      	mov	r0, r9
 80041dc:	f00d fe1e 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 80041e0:	f204 638c 	addw	r3, r4, #1676	; 0x68c
 80041e4:	f204 6aa4 	addw	sl, r4, #1700	; 0x6a4
 80041e8:	4618      	mov	r0, r3
 80041ea:	930e      	str	r3, [sp, #56]	; 0x38
 80041ec:	f7ff fe84 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80041f0:	f8c4 668c 	str.w	r6, [r4, #1676]	; 0x68c
        painterColor = color;
 80041f4:	f8c4 56a0 	str.w	r5, [r4, #1696]	; 0x6a0
 80041f8:	4650      	mov	r0, sl
 80041fa:	f00d fe0f 	bl	8011e1c <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 80041fe:	f504 63e3 	add.w	r3, r4, #1816	; 0x718
 8004202:	4618      	mov	r0, r3
 8004204:	930d      	str	r3, [sp, #52]	; 0x34
 8004206:	f7ff fe77 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800420a:	f504 63e6 	add.w	r3, r4, #1840	; 0x730
 800420e:	f8c4 6718 	str.w	r6, [r4, #1816]	; 0x718
 8004212:	4618      	mov	r0, r3
        painterColor = color;
 8004214:	f8c4 572c 	str.w	r5, [r4, #1836]	; 0x72c
 8004218:	ee0e 3a10 	vmov	s28, r3
 800421c:	f7fe fcba 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8004220:	f504 63ef 	add.w	r3, r4, #1912	; 0x778
 8004224:	4618      	mov	r0, r3
 8004226:	ee0e 3a90 	vmov	s29, r3
 800422a:	f7fe fcb3 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 800422e:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
 8004232:	4618      	mov	r0, r3
 8004234:	ee0f 3a10 	vmov	s30, r3
 8004238:	f7fe fcac 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 800423c:	f604 0308 	addw	r3, r4, #2056	; 0x808
 8004240:	4618      	mov	r0, r3
 8004242:	ee0f 3a90 	vmov	s31, r3
 8004246:	f7fe fca5 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 800424a:	f504 6305 	add.w	r3, r4, #2128	; 0x850
 800424e:	4618      	mov	r0, r3
 8004250:	9303      	str	r3, [sp, #12]
 8004252:	f7fe fc9f 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8004256:	f604 0398 	addw	r3, r4, #2200	; 0x898
 800425a:	4618      	mov	r0, r3
 800425c:	9304      	str	r3, [sp, #16]
 800425e:	f7fe fc99 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8004262:	f504 630e 	add.w	r3, r4, #2272	; 0x8e0
 8004266:	4618      	mov	r0, r3
 8004268:	9305      	str	r3, [sp, #20]
 800426a:	f7fe fc93 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 800426e:	f604 1328 	addw	r3, r4, #2344	; 0x928
 8004272:	4618      	mov	r0, r3
 8004274:	9306      	str	r3, [sp, #24]
 8004276:	f7fe fc8d 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 800427a:	f504 6317 	add.w	r3, r4, #2416	; 0x970
 800427e:	4618      	mov	r0, r3
 8004280:	9307      	str	r3, [sp, #28]
 8004282:	f7ff fe6f 	bl	8003f64 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004286:	f604 13bc 	addw	r3, r4, #2492	; 0x9bc
 800428a:	4618      	mov	r0, r3
 800428c:	930a      	str	r3, [sp, #40]	; 0x28
 800428e:	f7ff fe69 	bl	8003f64 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004292:	f604 2308 	addw	r3, r4, #2568	; 0xa08
 8004296:	4618      	mov	r0, r3
 8004298:	9308      	str	r3, [sp, #32]
 800429a:	f7ff fe63 	bl	8003f64 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800429e:	f604 2354 	addw	r3, r4, #2644	; 0xa54
 80042a2:	4618      	mov	r0, r3
 80042a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80042a6:	f7ff fe5d 	bl	8003f64 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042aa:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 80042ae:	4618      	mov	r0, r3
 80042b0:	9309      	str	r3, [sp, #36]	; 0x24
 80042b2:	f7ff fe63 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80042b6:	4b5d      	ldr	r3, [pc, #372]	; (800442c <_ZN25MeasurementScreenViewBaseC1Ev+0x3cc>)
 80042b8:	f8c4 3b90 	str.w	r3, [r4, #2960]	; 0xb90
 80042bc:	4b5c      	ldr	r3, [pc, #368]	; (8004430 <_ZN25MeasurementScreenViewBaseC1Ev+0x3d0>)
 80042be:	f8c4 3b98 	str.w	r3, [r4, #2968]	; 0xb98
    __background.setPosition(0, 0, 320, 240);
 80042c2:	26f0      	movs	r6, #240	; 0xf0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80042c4:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 80042c8:	f504 603a 	add.w	r0, r4, #2976	; 0xba0
 80042cc:	f8c4 4b94 	str.w	r4, [r4, #2964]	; 0xb94
 80042d0:	f8c4 5b9c 	str.w	r5, [r4, #2972]	; 0xb9c
 80042d4:	f010 fca8 	bl	8014c28 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80042d8:	ee1b 0a90 	vmov	r0, s23
 80042dc:	9600      	str	r6, [sp, #0]
 80042de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80042e2:	462a      	mov	r2, r5
 80042e4:	4629      	mov	r1, r5
 80042e6:	f7fe fa49 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80042ea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 320, 240);
 80042ee:	980c      	ldr	r0, [sp, #48]	; 0x30
 80042f0:	66a3      	str	r3, [r4, #104]	; 0x68
 80042f2:	9600      	str	r6, [sp, #0]
 80042f4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80042f8:	462a      	mov	r2, r5
 80042fa:	4629      	mov	r1, r5
 80042fc:	f7fe fa3e 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004300:	4b4c      	ldr	r3, [pc, #304]	; (8004434 <_ZN25MeasurementScreenViewBaseC1Ev+0x3d4>)
 8004302:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    textArea1.setXY(87, 13);
 8004306:	220d      	movs	r2, #13
 8004308:	ee1c 0a10 	vmov	r0, s24
 800430c:	2157      	movs	r1, #87	; 0x57
 800430e:	f10d 0858 	add.w	r8, sp, #88	; 0x58
 8004312:	f7fe fbd0 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004316:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 800431a:	4640      	mov	r0, r8
 800431c:	ee1c 1a10 	vmov	r1, s24
        this->color = color;
 8004320:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        linespace = space;
 8004324:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8004328:	f00f fed2 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800432c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004330:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8004334:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004338:	4b3f      	ldr	r3, [pc, #252]	; (8004438 <_ZN25MeasurementScreenViewBaseC1Ev+0x3d8>)
 800433a:	931c      	str	r3, [sp, #112]	; 0x70
    line1.setPosition(0, 50, 327, 15);
 800433c:	260f      	movs	r6, #15
 800433e:	2331      	movs	r3, #49	; 0x31
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TTJ4));
 8004340:	ee1c 0a10 	vmov	r0, s24
 8004344:	a91c      	add	r1, sp, #112	; 0x70
 8004346:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 800434a:	f010 fa07 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    line1.setPosition(0, 50, 327, 15);
 800434e:	f240 1347 	movw	r3, #327	; 0x147
 8004352:	ee18 0a10 	vmov	r0, s16
 8004356:	9600      	str	r6, [sp, #0]
 8004358:	2232      	movs	r2, #50	; 0x32
 800435a:	4629      	mov	r1, r5
 800435c:	f7fe fa0e 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004360:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line1.setPainter(line1Painter);
 8004364:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004366:	f8c4 2168 	str.w	r2, [r4, #360]	; 0x168
 800436a:	ee18 0a10 	vmov	r0, s16
 800436e:	f00d fa65 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1.setStart(0, 0);
 8004372:	ee18 0a10 	vmov	r0, s16
 8004376:	462a      	mov	r2, r5
 8004378:	4629      	mov	r1, r5
 800437a:	f7ff fe59 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(319, 0);
 800437e:	462a      	mov	r2, r5
 8004380:	ee18 0a10 	vmov	r0, s16
 8004384:	f240 113f 	movw	r1, #319	; 0x13f
 8004388:	f7ff fe56 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(5);
 800438c:	ee18 0a10 	vmov	r0, s16
 8004390:	2105      	movs	r1, #5
 8004392:	f7ff fe55 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004396:	ee18 0a10 	vmov	r0, s16
 800439a:	2101      	movs	r1, #1
 800439c:	f00d fe7a 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_1.setPosition(-3, 80, 323, 15);
 80043a0:	f240 1343 	movw	r3, #323	; 0x143
 80043a4:	ee18 0a90 	vmov	r0, s17
 80043a8:	9600      	str	r6, [sp, #0]
 80043aa:	2250      	movs	r2, #80	; 0x50
 80043ac:	f06f 0102 	mvn.w	r1, #2
 80043b0:	f7fe f9e4 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80043b4:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line1_1.setPainter(line1_1Painter);
 80043b8:	9914      	ldr	r1, [sp, #80]	; 0x50
 80043ba:	f8c4 21f4 	str.w	r2, [r4, #500]	; 0x1f4
 80043be:	ee18 0a90 	vmov	r0, s17
 80043c2:	f00d fa3b 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1.setStart(0, 0);
 80043c6:	ee18 0a90 	vmov	r0, s17
 80043ca:	462a      	mov	r2, r5
 80043cc:	4629      	mov	r1, r5
 80043ce:	f7ff fe2f 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(319, 0);
 80043d2:	462a      	mov	r2, r5
 80043d4:	ee18 0a90 	vmov	r0, s17
 80043d8:	f240 113f 	movw	r1, #319	; 0x13f
 80043dc:	f7ff fe2c 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(5);
 80043e0:	ee18 0a90 	vmov	r0, s17
 80043e4:	2105      	movs	r1, #5
 80043e6:	f7ff fe2b 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80043ea:	ee18 0a90 	vmov	r0, s17
 80043ee:	2101      	movs	r1, #1
 80043f0:	f00d fe50 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_1_1.setPosition(0, 110, 327, 15);
 80043f4:	f240 1347 	movw	r3, #327	; 0x147
 80043f8:	ee19 0a10 	vmov	r0, s18
 80043fc:	9600      	str	r6, [sp, #0]
 80043fe:	226e      	movs	r2, #110	; 0x6e
 8004400:	4629      	mov	r1, r5
 8004402:	f7fe f9bb 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004406:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line1_1_1.setPainter(line1_1_1Painter);
 800440a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800440c:	f8c4 2280 	str.w	r2, [r4, #640]	; 0x280
 8004410:	ee19 0a10 	vmov	r0, s18
 8004414:	f00d fa12 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1_1.setStart(0, 0);
 8004418:	ee19 0a10 	vmov	r0, s18
 800441c:	462a      	mov	r2, r5
 800441e:	4629      	mov	r1, r5
 8004420:	e00c      	b.n	800443c <_ZN25MeasurementScreenViewBaseC1Ev+0x3dc>
 8004422:	bf00      	nop
 8004424:	08029e70 	.word	0x08029e70
 8004428:	0802bbb4 	.word	0x0802bbb4
 800442c:	08029e58 	.word	0x08029e58
 8004430:	08003edf 	.word	0x08003edf
 8004434:	ffdedede 	.word	0xffdedede
 8004438:	080291d0 	.word	0x080291d0
 800443c:	f7ff fdf8 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_1.setEnd(319, 0);
 8004440:	462a      	mov	r2, r5
 8004442:	ee19 0a10 	vmov	r0, s18
 8004446:	f240 113f 	movw	r1, #319	; 0x13f
 800444a:	f7ff fdf5 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_1.setLineWidth(5);
 800444e:	ee19 0a10 	vmov	r0, s18
 8004452:	2105      	movs	r1, #5
 8004454:	f7ff fdf4 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004458:	ee19 0a10 	vmov	r0, s18
 800445c:	2101      	movs	r1, #1
 800445e:	f00d fe19 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_2.setPosition(0, 140, 320, 15);
 8004462:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004466:	ee19 0a90 	vmov	r0, s19
 800446a:	9600      	str	r6, [sp, #0]
 800446c:	228c      	movs	r2, #140	; 0x8c
 800446e:	4629      	mov	r1, r5
 8004470:	f7fe f984 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004474:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line1_2.setPainter(line1_2Painter);
 8004478:	4639      	mov	r1, r7
 800447a:	ee19 0a90 	vmov	r0, s19
 800447e:	f8c4 230c 	str.w	r2, [r4, #780]	; 0x30c
 8004482:	f00d f9db 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_2.setStart(0, 0);
 8004486:	ee19 0a90 	vmov	r0, s19
 800448a:	462a      	mov	r2, r5
 800448c:	4629      	mov	r1, r5
 800448e:	f7ff fdcf 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2.setEnd(319, 0);
 8004492:	462a      	mov	r2, r5
 8004494:	ee19 0a90 	vmov	r0, s19
 8004498:	f240 113f 	movw	r1, #319	; 0x13f
 800449c:	f7ff fdcc 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2.setLineWidth(5);
 80044a0:	ee19 0a90 	vmov	r0, s19
 80044a4:	2105      	movs	r1, #5
 80044a6:	f7ff fdcb 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80044aa:	ee19 0a90 	vmov	r0, s19
 80044ae:	2101      	movs	r1, #1
 80044b0:	f00d fdf0 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_1_2.setPosition(0, 170, 320, 15);
 80044b4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044b8:	ee1a 0a10 	vmov	r0, s20
 80044bc:	9600      	str	r6, [sp, #0]
 80044be:	22aa      	movs	r2, #170	; 0xaa
 80044c0:	4629      	mov	r1, r5
 80044c2:	f7fe f95b 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80044c6:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line1_1_2.setPainter(line1_1_2Painter);
 80044ca:	9912      	ldr	r1, [sp, #72]	; 0x48
 80044cc:	f8c4 2398 	str.w	r2, [r4, #920]	; 0x398
 80044d0:	ee1a 0a10 	vmov	r0, s20
 80044d4:	f00d f9b2 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1_2.setStart(0, 0);
 80044d8:	ee1a 0a10 	vmov	r0, s20
 80044dc:	462a      	mov	r2, r5
 80044de:	4629      	mov	r1, r5
 80044e0:	f7ff fda6 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2.setEnd(319, 0);
 80044e4:	462a      	mov	r2, r5
 80044e6:	ee1a 0a10 	vmov	r0, s20
 80044ea:	f240 113f 	movw	r1, #319	; 0x13f
 80044ee:	f7ff fda3 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2.setLineWidth(5);
 80044f2:	ee1a 0a10 	vmov	r0, s20
 80044f6:	2105      	movs	r1, #5
 80044f8:	f7ff fda2 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80044fc:	ee1a 0a10 	vmov	r0, s20
 8004500:	2101      	movs	r1, #1
 8004502:	f00d fdc7 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_1_1_1.setPosition(0, 200, 320, 15);
 8004506:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800450a:	ee1a 0a90 	vmov	r0, s21
 800450e:	9600      	str	r6, [sp, #0]
 8004510:	22c8      	movs	r2, #200	; 0xc8
 8004512:	4629      	mov	r1, r5
 8004514:	f7fe f932 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004518:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line1_1_1_1.setPainter(line1_1_1_1Painter);
 800451c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800451e:	f8c4 2424 	str.w	r2, [r4, #1060]	; 0x424
 8004522:	ee1a 0a90 	vmov	r0, s21
 8004526:	f00d f989 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1_1_1.setStart(0, 0);
 800452a:	ee1a 0a90 	vmov	r0, s21
 800452e:	462a      	mov	r2, r5
 8004530:	4629      	mov	r1, r5
 8004532:	f7ff fd7d 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_1_1.setEnd(319, 0);
 8004536:	462a      	mov	r2, r5
 8004538:	ee1a 0a90 	vmov	r0, s21
 800453c:	f240 113f 	movw	r1, #319	; 0x13f
 8004540:	f7ff fd7a 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_1_1.setLineWidth(5);
 8004544:	ee1a 0a90 	vmov	r0, s21
 8004548:	2105      	movs	r1, #5
 800454a:	f7ff fd79 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2.setPosition(0, 50, 15, 150);
 800454e:	2796      	movs	r7, #150	; 0x96
    line1_1_1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004550:	ee1a 0a90 	vmov	r0, s21
 8004554:	2101      	movs	r1, #1
 8004556:	f00d fd9d 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line2.setPosition(0, 50, 15, 150);
 800455a:	4633      	mov	r3, r6
 800455c:	ee1b 0a10 	vmov	r0, s22
 8004560:	9700      	str	r7, [sp, #0]
 8004562:	2232      	movs	r2, #50	; 0x32
 8004564:	4629      	mov	r1, r5
 8004566:	f7fe f909 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800456a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line2.setPainter(line2Painter);
 800456e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004570:	f8c4 24b0 	str.w	r2, [r4, #1200]	; 0x4b0
 8004574:	ee1b 0a10 	vmov	r0, s22
 8004578:	f00d f960 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2.setStart(0, 0);
 800457c:	ee1b 0a10 	vmov	r0, s22
 8004580:	462a      	mov	r2, r5
 8004582:	4629      	mov	r1, r5
 8004584:	f7ff fd54 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2.setEnd(0, 180);
 8004588:	22b4      	movs	r2, #180	; 0xb4
 800458a:	ee1b 0a10 	vmov	r0, s22
 800458e:	4629      	mov	r1, r5
 8004590:	f7ff fd52 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2.setLineWidth(5);
 8004594:	ee1b 0a10 	vmov	r0, s22
 8004598:	2105      	movs	r1, #5
 800459a:	f7ff fd51 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800459e:	ee1b 0a10 	vmov	r0, s22
 80045a2:	2101      	movs	r1, #1
 80045a4:	f00d fd76 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line2_1.setPosition(318, 50, 15, 150);
 80045a8:	4633      	mov	r3, r6
 80045aa:	9700      	str	r7, [sp, #0]
 80045ac:	2232      	movs	r2, #50	; 0x32
 80045ae:	f44f 719f 	mov.w	r1, #318	; 0x13e
 80045b2:	4658      	mov	r0, fp
 80045b4:	f7fe f8e2 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80045b8:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line2_1.setPainter(line2_1Painter);
 80045bc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80045be:	f8c4 253c 	str.w	r2, [r4, #1340]	; 0x53c
 80045c2:	4658      	mov	r0, fp
 80045c4:	f00d f93a 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_1.setStart(0, 0);
 80045c8:	462a      	mov	r2, r5
 80045ca:	4629      	mov	r1, r5
 80045cc:	4658      	mov	r0, fp
 80045ce:	f7ff fd2f 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_1.setEnd(0, 180);
 80045d2:	22b4      	movs	r2, #180	; 0xb4
 80045d4:	4629      	mov	r1, r5
 80045d6:	4658      	mov	r0, fp
 80045d8:	f7ff fd2e 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_1.setLineWidth(5);
 80045dc:	2105      	movs	r1, #5
 80045de:	4658      	mov	r0, fp
 80045e0:	f7ff fd2e 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80045e4:	2101      	movs	r1, #1
 80045e6:	4658      	mov	r0, fp
 80045e8:	f00d fd54 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    textArea2.setXY(7, 53);
 80045ec:	ee1c 0a90 	vmov	r0, s25
 80045f0:	2235      	movs	r2, #53	; 0x35
 80045f2:	2107      	movs	r1, #7
 80045f4:	f7fe fa5f 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80045f8:	4ad8      	ldr	r2, [pc, #864]	; (800495c <_ZN25MeasurementScreenViewBaseC1Ev+0x8fc>)
 80045fa:	f8c4 2570 	str.w	r2, [r4, #1392]	; 0x570
        boundingArea = calculateBoundingArea();
 80045fe:	4640      	mov	r0, r8
 8004600:	ee1c 1a90 	vmov	r1, s25
        linespace = space;
 8004604:	f8a4 5574 	strh.w	r5, [r4, #1396]	; 0x574
        boundingArea = calculateBoundingArea();
 8004608:	f00f fd62 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800460c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004610:	f204 537c 	addw	r3, r4, #1404	; 0x57c
 8004614:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004618:	4bd1      	ldr	r3, [pc, #836]	; (8004960 <_ZN25MeasurementScreenViewBaseC1Ev+0x900>)
 800461a:	931c      	str	r3, [sp, #112]	; 0x70
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D5SU));
 800461c:	ee1c 0a90 	vmov	r0, s25
 8004620:	2330      	movs	r3, #48	; 0x30
 8004622:	a91c      	add	r1, sp, #112	; 0x70
 8004624:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004628:	f010 f898 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_1.setXY(150, 53);
 800462c:	4639      	mov	r1, r7
 800462e:	ee1d 0a10 	vmov	r0, s26
 8004632:	2235      	movs	r2, #53	; 0x35
 8004634:	f7fe fa3f 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004638:	4ac8      	ldr	r2, [pc, #800]	; (800495c <_ZN25MeasurementScreenViewBaseC1Ev+0x8fc>)
 800463a:	f8c4 25b8 	str.w	r2, [r4, #1464]	; 0x5b8
        boundingArea = calculateBoundingArea();
 800463e:	4640      	mov	r0, r8
 8004640:	ee1d 1a10 	vmov	r1, s26
        linespace = space;
 8004644:	f8a4 55bc 	strh.w	r5, [r4, #1468]	; 0x5bc
        boundingArea = calculateBoundingArea();
 8004648:	f00f fd42 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800464c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004650:	f204 53c4 	addw	r3, r4, #1476	; 0x5c4
 8004654:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004658:	4bc1      	ldr	r3, [pc, #772]	; (8004960 <_ZN25MeasurementScreenViewBaseC1Ev+0x900>)
 800465a:	931c      	str	r3, [sp, #112]	; 0x70
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZUQN));
 800465c:	ee1d 0a10 	vmov	r0, s26
 8004660:	232f      	movs	r3, #47	; 0x2f
 8004662:	a91c      	add	r1, sp, #112	; 0x70
 8004664:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004668:	f010 f878 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_1_1.setXY(265, 53);
 800466c:	ee1d 0a90 	vmov	r0, s27
 8004670:	2235      	movs	r2, #53	; 0x35
 8004672:	f240 1109 	movw	r1, #265	; 0x109
 8004676:	f7fe fa1e 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800467a:	4ab8      	ldr	r2, [pc, #736]	; (800495c <_ZN25MeasurementScreenViewBaseC1Ev+0x8fc>)
 800467c:	f8c4 2600 	str.w	r2, [r4, #1536]	; 0x600
        boundingArea = calculateBoundingArea();
 8004680:	4640      	mov	r0, r8
 8004682:	ee1d 1a90 	vmov	r1, s27
        linespace = space;
 8004686:	f8a4 5604 	strh.w	r5, [r4, #1540]	; 0x604
        boundingArea = calculateBoundingArea();
 800468a:	f00f fd21 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800468e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004692:	f204 630c 	addw	r3, r4, #1548	; 0x60c
 8004696:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800469a:	4bb1      	ldr	r3, [pc, #708]	; (8004960 <_ZN25MeasurementScreenViewBaseC1Ev+0x900>)
 800469c:	931c      	str	r3, [sp, #112]	; 0x70
    textArea2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U38N));
 800469e:	ee1d 0a90 	vmov	r0, s27
 80046a2:	232e      	movs	r3, #46	; 0x2e
 80046a4:	a91c      	add	r1, sp, #112	; 0x70
 80046a6:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 80046aa:	f010 f857 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    line2_2.setPosition(125, 50, 15, 150);
 80046ae:	4633      	mov	r3, r6
 80046b0:	9700      	str	r7, [sp, #0]
 80046b2:	2232      	movs	r2, #50	; 0x32
 80046b4:	217d      	movs	r1, #125	; 0x7d
 80046b6:	4648      	mov	r0, r9
 80046b8:	f7fe f860 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80046bc:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line2_2.setPainter(line2_2Painter);
 80046c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80046c2:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 80046c6:	4648      	mov	r0, r9
 80046c8:	f00d f8b8 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_2.setStart(0, 0);
 80046cc:	462a      	mov	r2, r5
 80046ce:	4629      	mov	r1, r5
 80046d0:	4648      	mov	r0, r9
 80046d2:	f7ff fcad 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_2.setEnd(0, 180);
 80046d6:	22b4      	movs	r2, #180	; 0xb4
 80046d8:	4629      	mov	r1, r5
 80046da:	4648      	mov	r0, r9
 80046dc:	f7ff fcac 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_2.setLineWidth(5);
 80046e0:	2105      	movs	r1, #5
 80046e2:	4648      	mov	r0, r9
 80046e4:	f7ff fcac 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80046e8:	2101      	movs	r1, #1
 80046ea:	4648      	mov	r0, r9
 80046ec:	f00d fcd2 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line2_2_1.setPosition(250, 50, 15, 150);
 80046f0:	4633      	mov	r3, r6
 80046f2:	9700      	str	r7, [sp, #0]
 80046f4:	2232      	movs	r2, #50	; 0x32
 80046f6:	21fa      	movs	r1, #250	; 0xfa
 80046f8:	4650      	mov	r0, sl
 80046fa:	f7fe f83f 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80046fe:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    line2_2_1.setPainter(line2_2_1Painter);
 8004702:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004704:	f8c4 272c 	str.w	r2, [r4, #1836]	; 0x72c
 8004708:	4650      	mov	r0, sl
 800470a:	f00d f897 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_2_1.setStart(0, 0);
 800470e:	462a      	mov	r2, r5
 8004710:	4629      	mov	r1, r5
 8004712:	4650      	mov	r0, sl
 8004714:	f7ff fc8c 	bl	8004030 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_2_1.setEnd(0, 180);
 8004718:	22b4      	movs	r2, #180	; 0xb4
 800471a:	4629      	mov	r1, r5
 800471c:	4650      	mov	r0, sl
 800471e:	f7ff fc8b 	bl	8004038 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_2_1.setLineWidth(5);
 8004722:	2105      	movs	r1, #5
 8004724:	4650      	mov	r0, sl
 8004726:	f7ff fc8b 	bl	8004040 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800472a:	2101      	movs	r1, #1
 800472c:	4650      	mov	r0, sl
        this->color = color;
 800472e:	4e8d      	ldr	r6, [pc, #564]	; (8004964 <_ZN25MeasurementScreenViewBaseC1Ev+0x904>)
 8004730:	4f8b      	ldr	r7, [pc, #556]	; (8004960 <_ZN25MeasurementScreenViewBaseC1Ev+0x900>)
 8004732:	f00d fcaf 	bl	8012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    textArea2_2.setXY(7, 83);
 8004736:	2253      	movs	r2, #83	; 0x53
 8004738:	ee1e 0a10 	vmov	r0, s28
 800473c:	2107      	movs	r1, #7
 800473e:	f7fe f9ba 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004742:	4640      	mov	r0, r8
 8004744:	ee1e 1a10 	vmov	r1, s28
        this->color = color;
 8004748:	f8c4 6760 	str.w	r6, [r4, #1888]	; 0x760
        linespace = space;
 800474c:	f8a4 5764 	strh.w	r5, [r4, #1892]	; 0x764
        boundingArea = calculateBoundingArea();
 8004750:	f00f fcbe 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004754:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004758:	f204 736c 	addw	r3, r4, #1900	; 0x76c
 800475c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004760:	232d      	movs	r3, #45	; 0x2d
    textArea2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SLY4));
 8004762:	ee1e 0a10 	vmov	r0, s28
 8004766:	a91c      	add	r1, sp, #112	; 0x70
 8004768:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 800476c:	971c      	str	r7, [sp, #112]	; 0x70
 800476e:	f00f fff5 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_1.setXY(7, 173);
 8004772:	22ad      	movs	r2, #173	; 0xad
 8004774:	ee1e 0a90 	vmov	r0, s29
 8004778:	2107      	movs	r1, #7
 800477a:	f7fe f99c 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800477e:	4640      	mov	r0, r8
 8004780:	ee1e 1a90 	vmov	r1, s29
        this->color = color;
 8004784:	f8c4 67a8 	str.w	r6, [r4, #1960]	; 0x7a8
        linespace = space;
 8004788:	f8a4 57ac 	strh.w	r5, [r4, #1964]	; 0x7ac
        boundingArea = calculateBoundingArea();
 800478c:	f00f fca0 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004790:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004794:	f204 73b4 	addw	r3, r4, #1972	; 0x7b4
 8004798:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800479c:	f04f 032c 	mov.w	r3, #44	; 0x2c
    textArea2_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MOWA));
 80047a0:	ee1e 0a90 	vmov	r0, s29
 80047a4:	a91c      	add	r1, sp, #112	; 0x70
 80047a6:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 80047aa:	971c      	str	r7, [sp, #112]	; 0x70
 80047ac:	f00f ffd6 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_1_1.setXY(278, 83);
 80047b0:	2253      	movs	r2, #83	; 0x53
 80047b2:	ee1f 0a10 	vmov	r0, s30
 80047b6:	f44f 718b 	mov.w	r1, #278	; 0x116
 80047ba:	f7fe f97c 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 80047be:	4640      	mov	r0, r8
 80047c0:	ee1f 1a10 	vmov	r1, s30
        this->color = color;
 80047c4:	f8c4 67f0 	str.w	r6, [r4, #2032]	; 0x7f0
        linespace = space;
 80047c8:	f8a4 57f4 	strh.w	r5, [r4, #2036]	; 0x7f4
        boundingArea = calculateBoundingArea();
 80047cc:	f00f fc80 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047d0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80047d4:	f204 73fc 	addw	r3, r4, #2044	; 0x7fc
 80047d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80047dc:	232b      	movs	r3, #43	; 0x2b
    textArea2_2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D1ZO));
 80047de:	ee1f 0a10 	vmov	r0, s30
 80047e2:	a91c      	add	r1, sp, #112	; 0x70
 80047e4:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 80047e8:	971c      	str	r7, [sp, #112]	; 0x70
 80047ea:	f00f ffb7 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_1_1_1.setXY(273, 173);
 80047ee:	22ad      	movs	r2, #173	; 0xad
 80047f0:	ee1f 0a90 	vmov	r0, s31
 80047f4:	f240 1111 	movw	r1, #273	; 0x111
 80047f8:	f7fe f95d 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 80047fc:	4640      	mov	r0, r8
 80047fe:	ee1f 1a90 	vmov	r1, s31
        this->color = color;
 8004802:	f8c4 6838 	str.w	r6, [r4, #2104]	; 0x838
        linespace = space;
 8004806:	f8a4 583c 	strh.w	r5, [r4, #2108]	; 0x83c
        boundingArea = calculateBoundingArea();
 800480a:	f00f fc61 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800480e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004812:	f604 0344 	addw	r3, r4, #2116	; 0x844
 8004816:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800481a:	232a      	movs	r3, #42	; 0x2a
    textArea2_2_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RZQN));
 800481c:	ee1f 0a90 	vmov	r0, s31
 8004820:	a91c      	add	r1, sp, #112	; 0x70
 8004822:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004826:	971c      	str	r7, [sp, #112]	; 0x70
 8004828:	f00f ff98 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_2.setXY(7, 113);
 800482c:	2271      	movs	r2, #113	; 0x71
 800482e:	9803      	ldr	r0, [sp, #12]
 8004830:	2107      	movs	r1, #7
 8004832:	f7fe f940 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8004836:	4640      	mov	r0, r8
 8004838:	9903      	ldr	r1, [sp, #12]
        this->color = color;
 800483a:	f8c4 6880 	str.w	r6, [r4, #2176]	; 0x880
        linespace = space;
 800483e:	f8a4 5884 	strh.w	r5, [r4, #2180]	; 0x884
        boundingArea = calculateBoundingArea();
 8004842:	f00f fc45 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004846:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800484a:	f604 038c 	addw	r3, r4, #2188	; 0x88c
 800484e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004852:	2329      	movs	r3, #41	; 0x29
    textArea2_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6NVK));
 8004854:	9803      	ldr	r0, [sp, #12]
 8004856:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 800485a:	a91c      	add	r1, sp, #112	; 0x70
 800485c:	971c      	str	r7, [sp, #112]	; 0x70
 800485e:	f00f ff7d 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_2_1.setXY(7, 143);
 8004862:	228f      	movs	r2, #143	; 0x8f
 8004864:	9804      	ldr	r0, [sp, #16]
 8004866:	2107      	movs	r1, #7
 8004868:	f7fe f925 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800486c:	4640      	mov	r0, r8
 800486e:	9904      	ldr	r1, [sp, #16]
        this->color = color;
 8004870:	f8c4 68c8 	str.w	r6, [r4, #2248]	; 0x8c8
        linespace = space;
 8004874:	f8a4 58cc 	strh.w	r5, [r4, #2252]	; 0x8cc
        boundingArea = calculateBoundingArea();
 8004878:	f00f fc2a 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800487c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004880:	f604 03d4 	addw	r3, r4, #2260	; 0x8d4
 8004884:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004888:	971c      	str	r7, [sp, #112]	; 0x70
    textArea2_2_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6ZTR));
 800488a:	9804      	ldr	r0, [sp, #16]
 800488c:	a91c      	add	r1, sp, #112	; 0x70
 800488e:	2728      	movs	r7, #40	; 0x28
 8004890:	f8ad 7074 	strh.w	r7, [sp, #116]	; 0x74
 8004894:	f00f ff62 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_1_1_2.setXY(278, 113);
 8004898:	2271      	movs	r2, #113	; 0x71
 800489a:	9805      	ldr	r0, [sp, #20]
 800489c:	f44f 718b 	mov.w	r1, #278	; 0x116
 80048a0:	f7fe f909 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 80048a4:	4640      	mov	r0, r8
 80048a6:	9905      	ldr	r1, [sp, #20]
        this->color = color;
 80048a8:	f8c4 6910 	str.w	r6, [r4, #2320]	; 0x910
        linespace = space;
 80048ac:	f8a4 5914 	strh.w	r5, [r4, #2324]	; 0x914
        boundingArea = calculateBoundingArea();
 80048b0:	f00f fc0e 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048b4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80048b8:	f604 131c 	addw	r3, r4, #2332	; 0x91c
 80048bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048c0:	4b27      	ldr	r3, [pc, #156]	; (8004960 <_ZN25MeasurementScreenViewBaseC1Ev+0x900>)
    textArea2_2_1_1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A5K7));
 80048c2:	9805      	ldr	r0, [sp, #20]
 80048c4:	931c      	str	r3, [sp, #112]	; 0x70
 80048c6:	a91c      	add	r1, sp, #112	; 0x70
 80048c8:	2327      	movs	r3, #39	; 0x27
 80048ca:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 80048ce:	f00f ff45 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_2_1_1_2_1.setXY(278, 143);
 80048d2:	228f      	movs	r2, #143	; 0x8f
 80048d4:	9806      	ldr	r0, [sp, #24]
 80048d6:	f44f 718b 	mov.w	r1, #278	; 0x116
 80048da:	f7fe f8ec 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 80048de:	4640      	mov	r0, r8
 80048e0:	9906      	ldr	r1, [sp, #24]
        this->color = color;
 80048e2:	f8c4 6958 	str.w	r6, [r4, #2392]	; 0x958
        linespace = space;
 80048e6:	f8a4 595c 	strh.w	r5, [r4, #2396]	; 0x95c
        boundingArea = calculateBoundingArea();
 80048ea:	f00f fbf1 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048ee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80048f2:	f604 1364 	addw	r3, r4, #2404	; 0x964
 80048f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048fa:	4b19      	ldr	r3, [pc, #100]	; (8004960 <_ZN25MeasurementScreenViewBaseC1Ev+0x900>)
    textArea2_2_1_1_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QSMJ));
 80048fc:	9806      	ldr	r0, [sp, #24]
 80048fe:	931c      	str	r3, [sp, #112]	; 0x70
 8004900:	a91c      	add	r1, sp, #112	; 0x70
 8004902:	2326      	movs	r3, #38	; 0x26
 8004904:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004908:	f00f ff28 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaCurrent2.setXY(183, 113);
 800490c:	9807      	ldr	r0, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800490e:	f8df 806c 	ldr.w	r8, [pc, #108]	; 800497c <_ZN25MeasurementScreenViewBaseC1Ev+0x91c>
 8004912:	2271      	movs	r2, #113	; 0x71
 8004914:	21b7      	movs	r1, #183	; 0xb7
 8004916:	f7fe f8ce 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800491a:	f04f 33ff 	mov.w	r3, #4294967295
 800491e:	f8c4 39b0 	str.w	r3, [r4, #2480]	; 0x9b0
    Unicode::snprintf(textAreaCurrent2Buffer, TEXTAREACURRENT2_SIZE, "%s", touchgfx::TypedText(T_TEXTWILDCARD2).getText());
 8004922:	f604 3348 	addw	r3, r4, #2888	; 0xb48
 8004926:	930d      	str	r3, [sp, #52]	; 0x34
 8004928:	f8d8 3000 	ldr.w	r3, [r8]
        this->color = color;
 800492c:	f8c4 69a0 	str.w	r6, [r4, #2464]	; 0x9a0
        linespace = space;
 8004930:	f8a4 59a4 	strh.w	r5, [r4, #2468]	; 0x9a4
        boundingArea = calculateBoundingArea();
 8004934:	f8c4 59ac 	str.w	r5, [r4, #2476]	; 0x9ac
 8004938:	f8c4 59b4 	str.w	r5, [r4, #2484]	; 0x9b4
 800493c:	b92b      	cbnz	r3, 800494a <_ZN25MeasurementScreenViewBaseC1Ev+0x8ea>
 800493e:	4b0a      	ldr	r3, [pc, #40]	; (8004968 <_ZN25MeasurementScreenViewBaseC1Ev+0x908>)
 8004940:	4a0a      	ldr	r2, [pc, #40]	; (800496c <_ZN25MeasurementScreenViewBaseC1Ev+0x90c>)
 8004942:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004944:	480a      	ldr	r0, [pc, #40]	; (8004970 <_ZN25MeasurementScreenViewBaseC1Ev+0x910>)
 8004946:	f022 fdb3 	bl	80274b0 <__assert_func>
 800494a:	4b0a      	ldr	r3, [pc, #40]	; (8004974 <_ZN25MeasurementScreenViewBaseC1Ev+0x914>)
 800494c:	881b      	ldrh	r3, [r3, #0]
 800494e:	2b21      	cmp	r3, #33	; 0x21
 8004950:	d816      	bhi.n	8004980 <_ZN25MeasurementScreenViewBaseC1Ev+0x920>
 8004952:	4b09      	ldr	r3, [pc, #36]	; (8004978 <_ZN25MeasurementScreenViewBaseC1Ev+0x918>)
 8004954:	4a05      	ldr	r2, [pc, #20]	; (800496c <_ZN25MeasurementScreenViewBaseC1Ev+0x90c>)
 8004956:	21af      	movs	r1, #175	; 0xaf
 8004958:	e7f4      	b.n	8004944 <_ZN25MeasurementScreenViewBaseC1Ev+0x8e4>
 800495a:	bf00      	nop
 800495c:	ff007864 	.word	0xff007864
 8004960:	080291d0 	.word	0x080291d0
 8004964:	ff1051c9 	.word	0xff1051c9
 8004968:	08029068 	.word	0x08029068
 800496c:	080290aa 	.word	0x080290aa
 8004970:	080290d8 	.word	0x080290d8
 8004974:	20014c80 	.word	0x20014c80
 8004978:	0802911f 	.word	0x0802911f
 800497c:	20014c7c 	.word	0x20014c7c
        return texts->getText(typedTextId);
 8004980:	4bb1      	ldr	r3, [pc, #708]	; (8004c48 <_ZN25MeasurementScreenViewBaseC1Ev+0xbe8>)
 8004982:	2121      	movs	r1, #33	; 0x21
 8004984:	6818      	ldr	r0, [r3, #0]
 8004986:	f002 fa15 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 800498a:	4ab0      	ldr	r2, [pc, #704]	; (8004c4c <_ZN25MeasurementScreenViewBaseC1Ev+0xbec>)
 800498c:	4603      	mov	r3, r0
 800498e:	210a      	movs	r1, #10
 8004990:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004992:	f014 ff52 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004996:	990d      	ldr	r1, [sp, #52]	; 0x34
    textAreaCurrent2.resizeToCurrentText();
 8004998:	9807      	ldr	r0, [sp, #28]
 800499a:	f8c4 19b8 	str.w	r1, [r4, #2488]	; 0x9b8
 800499e:	f00f febd 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80049a2:	4bab      	ldr	r3, [pc, #684]	; (8004c50 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf0>)
    textAreaCurrent2.setTypedText(touchgfx::TypedText(T_TEXTCURRENT2));
 80049a4:	9807      	ldr	r0, [sp, #28]
 80049a6:	931c      	str	r3, [sp, #112]	; 0x70
 80049a8:	a91c      	add	r1, sp, #112	; 0x70
 80049aa:	2325      	movs	r3, #37	; 0x25
 80049ac:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 80049b0:	f00f fed4 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaCurrent1.setPosition(132, 84, 118, 23);
 80049b4:	2317      	movs	r3, #23
 80049b6:	9300      	str	r3, [sp, #0]
 80049b8:	2184      	movs	r1, #132	; 0x84
 80049ba:	2376      	movs	r3, #118	; 0x76
 80049bc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80049be:	2254      	movs	r2, #84	; 0x54
 80049c0:	f7fd fedc 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80049c4:	f04f 31ff 	mov.w	r1, #4294967295
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049c8:	f8d8 3000 	ldr.w	r3, [r8]
 80049cc:	f8c4 19fc 	str.w	r1, [r4, #2556]	; 0x9fc
    Unicode::snprintf(textAreaCurrent1Buffer, TEXTAREACURRENT1_SIZE, "%s", touchgfx::TypedText(T_TEXTWILDCARD1).getText());
 80049d0:	f604 315c 	addw	r1, r4, #2908	; 0xb5c
        this->color = color;
 80049d4:	f8c4 69ec 	str.w	r6, [r4, #2540]	; 0x9ec
        linespace = space;
 80049d8:	f8a4 59f0 	strh.w	r5, [r4, #2544]	; 0x9f0
        boundingArea = calculateBoundingArea();
 80049dc:	f8c4 59f8 	str.w	r5, [r4, #2552]	; 0x9f8
 80049e0:	f8c4 5a00 	str.w	r5, [r4, #2560]	; 0xa00
 80049e4:	910d      	str	r1, [sp, #52]	; 0x34
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d0a9      	beq.n	800493e <_ZN25MeasurementScreenViewBaseC1Ev+0x8de>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049ea:	499a      	ldr	r1, [pc, #616]	; (8004c54 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf4>)
 80049ec:	880b      	ldrh	r3, [r1, #0]
 80049ee:	2b1f      	cmp	r3, #31
 80049f0:	d9af      	bls.n	8004952 <_ZN25MeasurementScreenViewBaseC1Ev+0x8f2>
        return texts->getText(typedTextId);
 80049f2:	4a95      	ldr	r2, [pc, #596]	; (8004c48 <_ZN25MeasurementScreenViewBaseC1Ev+0xbe8>)
 80049f4:	211f      	movs	r1, #31
 80049f6:	6810      	ldr	r0, [r2, #0]
 80049f8:	f002 f9dc 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80049fc:	4a93      	ldr	r2, [pc, #588]	; (8004c4c <_ZN25MeasurementScreenViewBaseC1Ev+0xbec>)
 80049fe:	4603      	mov	r3, r0
 8004a00:	2110      	movs	r1, #16
 8004a02:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004a04:	f014 ff19 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004a08:	980d      	ldr	r0, [sp, #52]	; 0x34
        : typedTextId(id)
 8004a0a:	4b91      	ldr	r3, [pc, #580]	; (8004c50 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf0>)
 8004a0c:	f8c4 0a04 	str.w	r0, [r4, #2564]	; 0xa04
    textAreaCurrent1.setTypedText(touchgfx::TypedText(T_TEXTCURRENT1));
 8004a10:	a81c      	add	r0, sp, #112	; 0x70
 8004a12:	4601      	mov	r1, r0
 8004a14:	931c      	str	r3, [sp, #112]	; 0x70
 8004a16:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004a18:	2324      	movs	r3, #36	; 0x24
 8004a1a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004a1e:	f00f fe9d 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaCurrent3.setXY(183, 143);
 8004a22:	9808      	ldr	r0, [sp, #32]
 8004a24:	228f      	movs	r2, #143	; 0x8f
 8004a26:	21b7      	movs	r1, #183	; 0xb7
 8004a28:	f7fe f845 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8004a2c:	f04f 30ff 	mov.w	r0, #4294967295
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a30:	f8d8 3000 	ldr.w	r3, [r8]
 8004a34:	f8c4 0a48 	str.w	r0, [r4, #2632]	; 0xa48
    Unicode::snprintf(textAreaCurrent3Buffer, TEXTAREACURRENT3_SIZE, "%s", touchgfx::TypedText(T_TEXTWILDCARD3).getText());
 8004a38:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
        this->color = color;
 8004a3c:	f8c4 6a38 	str.w	r6, [r4, #2616]	; 0xa38
        linespace = space;
 8004a40:	f8a4 5a3c 	strh.w	r5, [r4, #2620]	; 0xa3c
        boundingArea = calculateBoundingArea();
 8004a44:	f8c4 5a44 	str.w	r5, [r4, #2628]	; 0xa44
 8004a48:	f8c4 5a4c 	str.w	r5, [r4, #2636]	; 0xa4c
 8004a4c:	900d      	str	r0, [sp, #52]	; 0x34
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	f43f af75 	beq.w	800493e <_ZN25MeasurementScreenViewBaseC1Ev+0x8de>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a54:	497f      	ldr	r1, [pc, #508]	; (8004c54 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf4>)
 8004a56:	880b      	ldrh	r3, [r1, #0]
 8004a58:	2b20      	cmp	r3, #32
 8004a5a:	f67f af7a 	bls.w	8004952 <_ZN25MeasurementScreenViewBaseC1Ev+0x8f2>
        return texts->getText(typedTextId);
 8004a5e:	4a7a      	ldr	r2, [pc, #488]	; (8004c48 <_ZN25MeasurementScreenViewBaseC1Ev+0xbe8>)
 8004a60:	2120      	movs	r1, #32
 8004a62:	6810      	ldr	r0, [r2, #0]
 8004a64:	f002 f9a6 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8004a68:	210a      	movs	r1, #10
 8004a6a:	4603      	mov	r3, r0
 8004a6c:	4a77      	ldr	r2, [pc, #476]	; (8004c4c <_ZN25MeasurementScreenViewBaseC1Ev+0xbec>)
 8004a6e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004a70:	f014 fee3 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004a74:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004a76:	f8c4 2a50 	str.w	r2, [r4, #2640]	; 0xa50
    textAreaCurrent3.resizeToCurrentText();
 8004a7a:	9808      	ldr	r0, [sp, #32]
 8004a7c:	f00f fe4e 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a80:	4b73      	ldr	r3, [pc, #460]	; (8004c50 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf0>)
    textAreaCurrent3.setTypedText(touchgfx::TypedText(T_TEXTCURRENT3));
 8004a82:	9808      	ldr	r0, [sp, #32]
 8004a84:	931c      	str	r3, [sp, #112]	; 0x70
 8004a86:	a91c      	add	r1, sp, #112	; 0x70
 8004a88:	2323      	movs	r3, #35	; 0x23
 8004a8a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004a8e:	f00f fe65 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaTemp.setXY(190, 173);
 8004a92:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004a94:	22ad      	movs	r2, #173	; 0xad
 8004a96:	21be      	movs	r1, #190	; 0xbe
 8004a98:	f7fe f80d 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8004a9c:	f04f 32ff 	mov.w	r2, #4294967295
 8004aa0:	4b6b      	ldr	r3, [pc, #428]	; (8004c50 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf0>)
    textAreaTemp.setTypedText(touchgfx::TypedText(T_TEXTTEMP));
 8004aa2:	980b      	ldr	r0, [sp, #44]	; 0x2c
        linespace = space;
 8004aa4:	f8a4 5a88 	strh.w	r5, [r4, #2696]	; 0xa88
        boundingArea = calculateBoundingArea();
 8004aa8:	f8c4 5a90 	str.w	r5, [r4, #2704]	; 0xa90
 8004aac:	f8c4 2a94 	str.w	r2, [r4, #2708]	; 0xa94
 8004ab0:	f8c4 5a98 	str.w	r5, [r4, #2712]	; 0xa98
 8004ab4:	931c      	str	r3, [sp, #112]	; 0x70
 8004ab6:	a91c      	add	r1, sp, #112	; 0x70
 8004ab8:	2322      	movs	r3, #34	; 0x22
        this->color = color;
 8004aba:	f8c4 6a84 	str.w	r6, [r4, #2692]	; 0xa84
 8004abe:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004ac2:	f00f fe4b 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        borderBox.setPosition(x, y, width, height);
 8004ac6:	232c      	movs	r3, #44	; 0x2c
 8004ac8:	462a      	mov	r2, r5
 8004aca:	4629      	mov	r1, r5
 8004acc:	9300      	str	r3, [sp, #0]
 8004ace:	f604 20d4 	addw	r0, r4, #2772	; 0xad4
 8004ad2:	463b      	mov	r3, r7
 8004ad4:	f7fd fe52 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8004ad8:	2305      	movs	r3, #5
 8004ada:	f8a4 3b04 	strh.w	r3, [r4, #2820]	; 0xb04
        up = colorReleased;
 8004ade:	4b5e      	ldr	r3, [pc, #376]	; (8004c58 <_ZN25MeasurementScreenViewBaseC1Ev+0xbf8>)
 8004ae0:	f8c4 3b08 	str.w	r3, [r4, #2824]	; 0xb08
        down = colorPressed;
 8004ae4:	4b5d      	ldr	r3, [pc, #372]	; (8004c5c <_ZN25MeasurementScreenViewBaseC1Ev+0xbfc>)
 8004ae6:	f8c4 3b0c 	str.w	r3, [r4, #2828]	; 0xb0c
        borderUp = borderColorReleased;
 8004aea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004aee:	f8c4 3b10 	str.w	r3, [r4, #2832]	; 0xb10
        borderDown = borderColorPressed;
 8004af2:	4b5b      	ldr	r3, [pc, #364]	; (8004c60 <_ZN25MeasurementScreenViewBaseC1Ev+0xc00>)
        handlePressedUpdated();
 8004af4:	9809      	ldr	r0, [sp, #36]	; 0x24
        borderDown = borderColorPressed;
 8004af6:	f8c4 3b14 	str.w	r3, [r4, #2836]	; 0xb14
        handlePressedUpdated();
 8004afa:	f7fd ff36 	bl	800296a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
 8004afe:	2302      	movs	r3, #2
    backButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 8004b00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b02:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 8004b06:	aa1c      	add	r2, sp, #112	; 0x70
 8004b08:	a91b      	add	r1, sp, #108	; 0x6c
 8004b0a:	f8ad 3070 	strh.w	r3, [sp, #112]	; 0x70
 8004b0e:	f7fd ffdf 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8004b12:	4b54      	ldr	r3, [pc, #336]	; (8004c64 <_ZN25MeasurementScreenViewBaseC1Ev+0xc04>)
 8004b14:	f8c4 3b20 	str.w	r3, [r4, #2848]	; 0xb20
    backButton1.setPosition(278, 0, 40, 44);
 8004b18:	232c      	movs	r3, #44	; 0x2c
 8004b1a:	462a      	mov	r2, r5
 8004b1c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b1e:	9300      	str	r3, [sp, #0]
 8004b20:	f44f 718b 	mov.w	r1, #278	; 0x116
 8004b24:	463b      	mov	r3, r7
 8004b26:	f7fd fe29 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004b2a:	1d25      	adds	r5, r4, #4
    backButton1.setAction(flexButtonCallback);
 8004b2c:	f504 6339 	add.w	r3, r4, #2960	; 0xb90
        action = &callback;
 8004b30:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
 8004b34:	ee1b 1a90 	vmov	r1, s23
 8004b38:	4628      	mov	r0, r5
 8004b3a:	f00a fca7 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004b40:	4628      	mov	r0, r5
 8004b42:	f00a fca3 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b46:	ee1c 1a10 	vmov	r1, s24
 8004b4a:	4628      	mov	r0, r5
 8004b4c:	f00a fc9e 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b50:	ee18 1a10 	vmov	r1, s16
 8004b54:	4628      	mov	r0, r5
 8004b56:	f00a fc99 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b5a:	ee18 1a90 	vmov	r1, s17
 8004b5e:	4628      	mov	r0, r5
 8004b60:	f00a fc94 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b64:	ee19 1a10 	vmov	r1, s18
 8004b68:	4628      	mov	r0, r5
 8004b6a:	f00a fc8f 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b6e:	ee19 1a90 	vmov	r1, s19
 8004b72:	4628      	mov	r0, r5
 8004b74:	f00a fc8a 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b78:	ee1a 1a10 	vmov	r1, s20
 8004b7c:	4628      	mov	r0, r5
 8004b7e:	f00a fc85 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b82:	ee1a 1a90 	vmov	r1, s21
 8004b86:	4628      	mov	r0, r5
 8004b88:	f00a fc80 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b8c:	ee1b 1a10 	vmov	r1, s22
 8004b90:	4628      	mov	r0, r5
 8004b92:	f00a fc7b 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b96:	4659      	mov	r1, fp
 8004b98:	4628      	mov	r0, r5
 8004b9a:	f00a fc77 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b9e:	ee1c 1a90 	vmov	r1, s25
 8004ba2:	4628      	mov	r0, r5
 8004ba4:	f00a fc72 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ba8:	ee1d 1a10 	vmov	r1, s26
 8004bac:	4628      	mov	r0, r5
 8004bae:	f00a fc6d 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bb2:	ee1d 1a90 	vmov	r1, s27
 8004bb6:	4628      	mov	r0, r5
 8004bb8:	f00a fc68 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bbc:	4649      	mov	r1, r9
 8004bbe:	4628      	mov	r0, r5
 8004bc0:	f00a fc64 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bc4:	4651      	mov	r1, sl
 8004bc6:	4628      	mov	r0, r5
 8004bc8:	f00a fc60 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bcc:	ee1e 1a10 	vmov	r1, s28
 8004bd0:	4628      	mov	r0, r5
 8004bd2:	f00a fc5b 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bd6:	ee1e 1a90 	vmov	r1, s29
 8004bda:	4628      	mov	r0, r5
 8004bdc:	f00a fc56 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004be0:	ee1f 1a10 	vmov	r1, s30
 8004be4:	4628      	mov	r0, r5
 8004be6:	f00a fc51 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bea:	ee1f 1a90 	vmov	r1, s31
 8004bee:	4628      	mov	r0, r5
 8004bf0:	f00a fc4c 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bf4:	9903      	ldr	r1, [sp, #12]
 8004bf6:	4628      	mov	r0, r5
 8004bf8:	f00a fc48 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bfc:	9904      	ldr	r1, [sp, #16]
 8004bfe:	4628      	mov	r0, r5
 8004c00:	f00a fc44 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c04:	9905      	ldr	r1, [sp, #20]
 8004c06:	4628      	mov	r0, r5
 8004c08:	f00a fc40 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c0c:	9906      	ldr	r1, [sp, #24]
 8004c0e:	4628      	mov	r0, r5
 8004c10:	f00a fc3c 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c14:	9907      	ldr	r1, [sp, #28]
 8004c16:	4628      	mov	r0, r5
 8004c18:	f00a fc38 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c1c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004c1e:	4628      	mov	r0, r5
 8004c20:	f00a fc34 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c24:	9908      	ldr	r1, [sp, #32]
 8004c26:	4628      	mov	r0, r5
 8004c28:	f00a fc30 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004c2e:	4628      	mov	r0, r5
 8004c30:	f00a fc2c 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004c34:	4628      	mov	r0, r5
 8004c36:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c38:	f00a fc28 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004c3c:	4620      	mov	r0, r4
 8004c3e:	b01f      	add	sp, #124	; 0x7c
 8004c40:	ecbd 8b10 	vpop	{d8-d15}
 8004c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004c48:	20014c88 	.word	0x20014c88
 8004c4c:	0802915d 	.word	0x0802915d
 8004c50:	080291d0 	.word	0x080291d0
 8004c54:	20014c80 	.word	0x20014c80
 8004c58:	fffcfcfc 	.word	0xfffcfcfc
 8004c5c:	ffa4a9ab 	.word	0xffa4a9ab
 8004c60:	ff424242 	.word	0xff424242
 8004c64:	0006000a 	.word	0x0006000a

08004c68 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8004c68:	4770      	bx	lr

08004c6a <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8004c6a:	4770      	bx	lr

08004c6c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004c6c:	4770      	bx	lr

08004c6e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004c6e:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004c70:	68c2      	ldr	r2, [r0, #12]
 8004c72:	6844      	ldr	r4, [r0, #4]
 8004c74:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004c76:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8004c78:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004c7c:	07d2      	lsls	r2, r2, #31
 8004c7e:	bf48      	it	mi
 8004c80:	5962      	ldrmi	r2, [r4, r5]
 8004c82:	689b      	ldr	r3, [r3, #8]
    }
 8004c84:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004c86:	bf48      	it	mi
 8004c88:	58d3      	ldrmi	r3, [r2, r3]
 8004c8a:	4718      	bx	r3

08004c8c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8004c8c:	6843      	ldr	r3, [r0, #4]
 8004c8e:	b12b      	cbz	r3, 8004c9c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8004c90:	6883      	ldr	r3, [r0, #8]
 8004c92:	b92b      	cbnz	r3, 8004ca0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8004c94:	68c0      	ldr	r0, [r0, #12]
 8004c96:	f000 0001 	and.w	r0, r0, #1
 8004c9a:	4770      	bx	lr
 8004c9c:	4618      	mov	r0, r3
 8004c9e:	4770      	bx	lr
 8004ca0:	2001      	movs	r0, #1
    }
 8004ca2:	4770      	bx	lr

08004ca4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004ca4:	b510      	push	{r4, lr}
 8004ca6:	2110      	movs	r1, #16
 8004ca8:	4604      	mov	r4, r0
 8004caa:	f022 fbd2 	bl	8027452 <_ZdlPvj>
 8004cae:	4620      	mov	r0, r4
 8004cb0:	bd10      	pop	{r4, pc}

08004cb2 <_ZN15Screen1ViewBaseD0Ev>:
 8004cb2:	b510      	push	{r4, lr}
 8004cb4:	f240 4174 	movw	r1, #1140	; 0x474
 8004cb8:	4604      	mov	r4, r0
 8004cba:	f022 fbca 	bl	8027452 <_ZdlPvj>
 8004cbe:	4620      	mov	r0, r4
 8004cc0:	bd10      	pop	{r4, pc}

08004cc2 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8004cc2:	b508      	push	{r3, lr}
    if (&src == &GraphButton1)
 8004cc4:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8004cc8:	4299      	cmp	r1, r3
 8004cca:	d105      	bne.n	8004cd8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004ccc:	f011 fd0c 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction4
        //When FileButton1 clicked change screen to FileScreen
        //Go to FileScreen with no screen transition
        application().gotoFileScreenScreenNoTransition();
    }
}
 8004cd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 8004cd4:	f7fe bcf2 	b.w	80036bc <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    else if (&src == &SettingsButton1)
 8004cd8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004cdc:	4299      	cmp	r1, r3
 8004cde:	d105      	bne.n	8004cec <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
 8004ce0:	f011 fd02 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
}
 8004ce4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSettingScreenScreenNoTransition();
 8004ce8:	f7fe bd08 	b.w	80036fc <_ZN23FrontendApplicationBase35gotoSettingScreenScreenNoTransitionEv>
    else if (&src == &MenuButton1)
 8004cec:	f500 73f4 	add.w	r3, r0, #488	; 0x1e8
 8004cf0:	4299      	cmp	r1, r3
 8004cf2:	d105      	bne.n	8004d00 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
 8004cf4:	f011 fcf8 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
}
 8004cf8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurementScreenScreenNoTransition();
 8004cfc:	f7fe bcee 	b.w	80036dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenScreenNoTransitionEv>
    else if (&src == &FileButton1)
 8004d00:	f500 7024 	add.w	r0, r0, #656	; 0x290
 8004d04:	4281      	cmp	r1, r0
 8004d06:	d105      	bne.n	8004d14 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x52>
 8004d08:	f011 fcee 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
}
 8004d0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoFileScreenScreenNoTransition();
 8004d10:	f7fe bd04 	b.w	800371c <_ZN23FrontendApplicationBase32gotoFileScreenScreenNoTransitionEv>
}
 8004d14:	bd08      	pop	{r3, pc}
	...

08004d18 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8004d18:	4a07      	ldr	r2, [pc, #28]	; (8004d38 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8004d1a:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8004d1c:	2200      	movs	r2, #0
 8004d1e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004d22:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8004d26:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004d2a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004d2e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004d32:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8004d34:	4770      	bx	lr
 8004d36:	bf00      	nop
 8004d38:	0802cd24 	.word	0x0802cd24

08004d3c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8004d3c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8004d3e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8004d40:	4604      	mov	r4, r0
 8004d42:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8004d44:	2100      	movs	r1, #0
 8004d46:	f022 fd39 	bl	80277bc <memset>
 8004d4a:	4620      	mov	r0, r4
 8004d4c:	f7ff ffe4 	bl	8004d18 <_ZN8touchgfx8DrawableC1Ev>
 8004d50:	4b06      	ldr	r3, [pc, #24]	; (8004d6c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8004d52:	6023      	str	r3, [r4, #0]
 8004d54:	882b      	ldrh	r3, [r5, #0]
 8004d56:	84e3      	strh	r3, [r4, #38]	; 0x26
 8004d58:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8004d5a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8004d5c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8004d60:	4629      	mov	r1, r5
 8004d62:	f00f feed 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8004d66:	4620      	mov	r0, r4
 8004d68:	bd38      	pop	{r3, r4, r5, pc}
 8004d6a:	bf00      	nop
 8004d6c:	0802c878 	.word	0x0802c878

08004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8004d70:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8004d72:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8004d74:	9b01      	ldr	r3, [sp, #4]
 8004d76:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8004d78:	6803      	ldr	r3, [r0, #0]
    }
 8004d7a:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8004d7e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8004d82:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8004d86:	4718      	bx	r3

08004d88 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8004d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d8c:	ed2d 8b06 	vpush	{d8-d10}
 8004d90:	4604      	mov	r4, r0
 8004d92:	b089      	sub	sp, #36	; 0x24
 8004d94:	f012 fffe 	bl	8017d94 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8004d98:	4622      	mov	r2, r4
 8004d9a:	2500      	movs	r5, #0
 8004d9c:	4bdd      	ldr	r3, [pc, #884]	; (8005114 <_ZN15Screen1ViewBaseC1Ev+0x38c>)
 8004d9e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004da0:	f842 3b40 	str.w	r3, [r2], #64
 8004da4:	4610      	mov	r0, r2
 8004da6:	ee08 2a10 	vmov	s16, r2
 8004daa:	f7fd fedf 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8004dae:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8004db2:	4618      	mov	r0, r3
 8004db4:	ee0a 3a10 	vmov	s20, r3
 8004db8:	f7fd fed8 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8004dbc:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8004dc0:	4618      	mov	r0, r3
 8004dc2:	ee08 3a90 	vmov	s17, r3
 8004dc6:	f7ff f8d9 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8004dca:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004dce:	4618      	mov	r0, r3
 8004dd0:	ee09 3a10 	vmov	s18, r3
 8004dd4:	f7ff f8d2 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8004dd8:	f504 73f4 	add.w	r3, r4, #488	; 0x1e8
 8004ddc:	f504 7924 	add.w	r9, r4, #656	; 0x290
 8004de0:	4618      	mov	r0, r3
 8004de2:	ee09 3a90 	vmov	s19, r3
 8004de6:	f504 7a4e 	add.w	sl, r4, #824	; 0x338
 8004dea:	f7ff f8c7 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8004dee:	4648      	mov	r0, r9
 8004df0:	f7ff f8c4 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8004df4:	a906      	add	r1, sp, #24
 8004df6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004dfa:	4650      	mov	r0, sl
 8004dfc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8004e00:	f7ff ff9c 	bl	8004d3c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004e04:	4bc4      	ldr	r3, [pc, #784]	; (8005118 <_ZN15Screen1ViewBaseC1Ev+0x390>)
 8004e06:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
 8004e0a:	f04f 32ff 	mov.w	r2, #4294967295
 8004e0e:	2301      	movs	r3, #1
 8004e10:	e9c4 23da 	strd	r2, r3, [r4, #872]	; 0x368
 8004e14:	f504 735d 	add.w	r3, r4, #884	; 0x374
 8004e18:	f504 7b68 	add.w	fp, r4, #928	; 0x3a0
 8004e1c:	f8c4 5364 	str.w	r5, [r4, #868]	; 0x364
 8004e20:	f884 5370 	strb.w	r5, [r4, #880]	; 0x370
 8004e24:	4618      	mov	r0, r3
 8004e26:	f504 7873 	add.w	r8, r4, #972	; 0x3cc
 8004e2a:	ee0a 3a90 	vmov	s21, r3
 8004e2e:	f7fd fe9d 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8004e32:	f04f 33ff 	mov.w	r3, #4294967295
 8004e36:	a906      	add	r1, sp, #24
 8004e38:	4658      	mov	r0, fp
 8004e3a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8004e3e:	f00e fe89 	bl	8013b54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004e42:	4640      	mov	r0, r8
 8004e44:	f00a f8fe 	bl	800f044 <_ZN8touchgfx12DigitalClockC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8004e48:	4bb4      	ldr	r3, [pc, #720]	; (800511c <_ZN15Screen1ViewBaseC1Ev+0x394>)
 8004e4a:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
    __background.setPosition(0, 0, 320, 240);
 8004e4e:	26f0      	movs	r6, #240	; 0xf0
 8004e50:	4bb3      	ldr	r3, [pc, #716]	; (8005120 <_ZN15Screen1ViewBaseC1Ev+0x398>)
 8004e52:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 8004e56:	ee18 0a10 	vmov	r0, s16
 8004e5a:	f8c4 5470 	str.w	r5, [r4, #1136]	; 0x470
 8004e5e:	9600      	str	r6, [sp, #0]
 8004e60:	462a      	mov	r2, r5
 8004e62:	4629      	mov	r1, r5
 8004e64:	f8c4 4468 	str.w	r4, [r4, #1128]	; 0x468
 8004e68:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004e6c:	f7fd fc86 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e70:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 320, 240);
 8004e74:	ee1a 0a10 	vmov	r0, s20
 8004e78:	66a3      	str	r3, [r4, #104]	; 0x68
 8004e7a:	9600      	str	r6, [sp, #0]
 8004e7c:	462a      	mov	r2, r5
 8004e7e:	4629      	mov	r1, r5
 8004e80:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004e84:	f7fd fc7a 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8004e88:	2642      	movs	r6, #66	; 0x42
 8004e8a:	4ba6      	ldr	r3, [pc, #664]	; (8005124 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
 8004e8c:	4fa6      	ldr	r7, [pc, #664]	; (8005128 <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 8004e8e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8004e92:	9600      	str	r6, [sp, #0]
 8004e94:	462a      	mov	r2, r5
 8004e96:	4629      	mov	r1, r5
 8004e98:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8004e9c:	2349      	movs	r3, #73	; 0x49
 8004e9e:	f7fd fc6d 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ea2:	f04f 0303 	mov.w	r3, #3
    GraphButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(250, 250, 252), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(32, 61, 30), touchgfx::Color::getColorFromRGB(32, 61, 30));
 8004ea6:	ee18 0a90 	vmov	r0, s17
 8004eaa:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8004eae:	9700      	str	r7, [sp, #0]
 8004eb0:	463b      	mov	r3, r7
 8004eb2:	499e      	ldr	r1, [pc, #632]	; (800512c <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8004eb4:	f04f 32ff 	mov.w	r2, #4294967295
 8004eb8:	f7ff ff5a 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8004ebc:	2309      	movs	r3, #9
    GraphButton1.setIconBitmaps(Bitmap(BITMAP_ICONS8_COMBO_CHART_60_ID), Bitmap(BITMAP_ICONS8_COMBO_CHART_60_ID));
 8004ebe:	ee18 0a90 	vmov	r0, s17
 8004ec2:	aa06      	add	r2, sp, #24
 8004ec4:	a905      	add	r1, sp, #20
 8004ec6:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004eca:	f8ad 3018 	strh.w	r3, [sp, #24]
 8004ece:	f7fd fdff 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8004ed2:	4b97      	ldr	r3, [pc, #604]	; (8005130 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8004ed4:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    GraphButton1.setPosition(143, 36, 73, 66);
 8004ed8:	ee18 0a90 	vmov	r0, s17
 8004edc:	9600      	str	r6, [sp, #0]
 8004ede:	2349      	movs	r3, #73	; 0x49
 8004ee0:	2224      	movs	r2, #36	; 0x24
 8004ee2:	218f      	movs	r1, #143	; 0x8f
 8004ee4:	f7fd fc4a 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    GraphButton1.setAction(flexButtonCallback);
 8004ee8:	f204 4264 	addw	r2, r4, #1124	; 0x464
 8004eec:	9203      	str	r2, [sp, #12]
 8004eee:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 8004ef2:	9600      	str	r6, [sp, #0]
 8004ef4:	462a      	mov	r2, r5
 8004ef6:	4629      	mov	r1, r5
 8004ef8:	f504 70ba 	add.w	r0, r4, #372	; 0x174
 8004efc:	2349      	movs	r3, #73	; 0x49
 8004efe:	f7fd fc3d 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f02:	f04f 0303 	mov.w	r3, #3
    SettingsButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(250, 250, 252), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(32, 61, 30), touchgfx::Color::getColorFromRGB(32, 61, 30));
 8004f06:	ee19 0a10 	vmov	r0, s18
 8004f0a:	f8a4 31a4 	strh.w	r3, [r4, #420]	; 0x1a4
 8004f0e:	9700      	str	r7, [sp, #0]
 8004f10:	463b      	mov	r3, r7
 8004f12:	4986      	ldr	r1, [pc, #536]	; (800512c <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8004f14:	f04f 32ff 	mov.w	r2, #4294967295
 8004f18:	f7ff ff2a 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8004f1c:	230b      	movs	r3, #11
    SettingsButton1.setIconBitmaps(Bitmap(BITMAP_ICONS8_GEAR_64_ID), Bitmap(BITMAP_ICONS8_GEAR_64_ID));
 8004f1e:	ee19 0a10 	vmov	r0, s18
 8004f22:	aa06      	add	r2, sp, #24
 8004f24:	a905      	add	r1, sp, #20
 8004f26:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004f2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8004f2e:	f7fd fdcf 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8004f32:	4b80      	ldr	r3, [pc, #512]	; (8005134 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8004f34:	f8c4 31c0 	str.w	r3, [r4, #448]	; 0x1c0
    SettingsButton1.setPosition(143, 120, 73, 66);
 8004f38:	ee19 0a10 	vmov	r0, s18
 8004f3c:	9600      	str	r6, [sp, #0]
 8004f3e:	2349      	movs	r3, #73	; 0x49
 8004f40:	2278      	movs	r2, #120	; 0x78
 8004f42:	218f      	movs	r1, #143	; 0x8f
 8004f44:	f7fd fc1a 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f48:	9a03      	ldr	r2, [sp, #12]
 8004f4a:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
 8004f4e:	9600      	str	r6, [sp, #0]
 8004f50:	462a      	mov	r2, r5
 8004f52:	4629      	mov	r1, r5
 8004f54:	f504 7007 	add.w	r0, r4, #540	; 0x21c
 8004f58:	2349      	movs	r3, #73	; 0x49
 8004f5a:	f7fd fc0f 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f5e:	f04f 0203 	mov.w	r2, #3
    MenuButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(250, 250, 252), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(32, 61, 30), touchgfx::Color::getColorFromRGB(32, 61, 30));
 8004f62:	ee19 0a90 	vmov	r0, s19
 8004f66:	f8a4 224c 	strh.w	r2, [r4, #588]	; 0x24c
 8004f6a:	9700      	str	r7, [sp, #0]
 8004f6c:	463b      	mov	r3, r7
 8004f6e:	496f      	ldr	r1, [pc, #444]	; (800512c <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8004f70:	f04f 32ff 	mov.w	r2, #4294967295
 8004f74:	f7ff fefc 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    MenuButton1.setIconBitmaps(Bitmap(BITMAP_ICONS8_ADJUSTMENT_64_ID), Bitmap(BITMAP_ICONS8_ADJUSTMENT_64_ID));
 8004f78:	a906      	add	r1, sp, #24
 8004f7a:	2307      	movs	r3, #7
 8004f7c:	ee19 0a90 	vmov	r0, s19
 8004f80:	460a      	mov	r2, r1
 8004f82:	a905      	add	r1, sp, #20
 8004f84:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004f88:	f8ad 3018 	strh.w	r3, [sp, #24]
 8004f8c:	f7fd fda0 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8004f90:	4b68      	ldr	r3, [pc, #416]	; (8005134 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8004f92:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
    MenuButton1.setPosition(49, 36, 73, 66);
 8004f96:	ee19 0a90 	vmov	r0, s19
 8004f9a:	9600      	str	r6, [sp, #0]
 8004f9c:	2349      	movs	r3, #73	; 0x49
 8004f9e:	2224      	movs	r2, #36	; 0x24
 8004fa0:	2131      	movs	r1, #49	; 0x31
 8004fa2:	f7fd fbeb 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004fa6:	9b03      	ldr	r3, [sp, #12]
 8004fa8:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
 8004fac:	9600      	str	r6, [sp, #0]
 8004fae:	462a      	mov	r2, r5
 8004fb0:	4629      	mov	r1, r5
 8004fb2:	f504 7031 	add.w	r0, r4, #708	; 0x2c4
 8004fb6:	2349      	movs	r3, #73	; 0x49
 8004fb8:	f7fd fbe0 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004fbc:	f04f 0203 	mov.w	r2, #3
    FileButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(250, 250, 252), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(32, 61, 30), touchgfx::Color::getColorFromRGB(32, 61, 30));
 8004fc0:	463b      	mov	r3, r7
 8004fc2:	f8a4 22f4 	strh.w	r2, [r4, #756]	; 0x2f4
 8004fc6:	9700      	str	r7, [sp, #0]
 8004fc8:	4648      	mov	r0, r9
 8004fca:	4958      	ldr	r1, [pc, #352]	; (800512c <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8004fcc:	f04f 32ff 	mov.w	r2, #4294967295
 8004fd0:	f7ff fece 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8004fd4:	270a      	movs	r7, #10
    FileButton1.setIconBitmaps(Bitmap(BITMAP_ICONS8_FOLDER_64_ID), Bitmap(BITMAP_ICONS8_FOLDER_64_ID));
 8004fd6:	aa06      	add	r2, sp, #24
 8004fd8:	a905      	add	r1, sp, #20
 8004fda:	4648      	mov	r0, r9
 8004fdc:	f8ad 7014 	strh.w	r7, [sp, #20]
 8004fe0:	f8ad 7018 	strh.w	r7, [sp, #24]
 8004fe4:	f7fd fd74 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8004fe8:	4b53      	ldr	r3, [pc, #332]	; (8005138 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 8004fea:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
    FileButton1.setPosition(49, 120, 73, 66);
 8004fee:	9600      	str	r6, [sp, #0]
 8004ff0:	4648      	mov	r0, r9
 8004ff2:	2349      	movs	r3, #73	; 0x49
 8004ff4:	2278      	movs	r2, #120	; 0x78
 8004ff6:	2131      	movs	r1, #49	; 0x31
 8004ff8:	f7fd fbc0 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ffc:	9b03      	ldr	r3, [sp, #12]
 8004ffe:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
    animatedImage1.setXY(272, 192);
 8005002:	4650      	mov	r0, sl
 8005004:	22c0      	movs	r2, #192	; 0xc0
 8005006:	f44f 7188 	mov.w	r1, #272	; 0x110
 800500a:	f7fd fd54 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
    animatedImage1.setBitmaps(BITMAP_SD_DETECTED_ID, BITMAP_SD_NOT_DETECTED_ID);
 800500e:	220f      	movs	r2, #15
 8005010:	4650      	mov	r0, sl
 8005012:	210e      	movs	r1, #14
 8005014:	f00e fd4c 	bl	8013ab0 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    box2.setPosition(0, 0, 320, 19);
 8005018:	2613      	movs	r6, #19
    animatedImage1.setUpdateTicksInterval(30);
 800501a:	4650      	mov	r0, sl
 800501c:	211e      	movs	r1, #30
 800501e:	f00e fd5a 	bl	8013ad6 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    box2.setPosition(0, 0, 320, 19);
 8005022:	462a      	mov	r2, r5
 8005024:	ee1a 0a90 	vmov	r0, s21
 8005028:	4629      	mov	r1, r5
 800502a:	9600      	str	r6, [sp, #0]
 800502c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005030:	f7fd fba4 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005034:	4b41      	ldr	r3, [pc, #260]	; (800513c <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8005036:	f8c4 339c 	str.w	r3, [r4, #924]	; 0x39c
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SD_NOT_DETECTED_ID));
 800503a:	a906      	add	r1, sp, #24
 800503c:	230f      	movs	r3, #15
 800503e:	4658      	mov	r0, fp
 8005040:	f8ad 3018 	strh.w	r3, [sp, #24]
 8005044:	f00f fd7c 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 0, 18, 19);
 8005048:	462a      	mov	r2, r5
 800504a:	2312      	movs	r3, #18
 800504c:	4629      	mov	r1, r5
 800504e:	4658      	mov	r0, fp
 8005050:	9600      	str	r6, [sp, #0]
 8005052:	f7fd fb93 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005056:	4629      	mov	r1, r5
 8005058:	4658      	mov	r0, fp
 800505a:	f00e fd42 	bl	8013ae2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    digitalClock1.setPosition(256, 2, 58, 17);
 800505e:	2311      	movs	r3, #17
 8005060:	2202      	movs	r2, #2
 8005062:	9300      	str	r3, [sp, #0]
 8005064:	4640      	mov	r0, r8
 8005066:	233a      	movs	r3, #58	; 0x3a
 8005068:	f44f 7180 	mov.w	r1, #256	; 0x100
 800506c:	f7fd fb86 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8005070:	4640      	mov	r0, r8
 8005072:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8005076:	f009 fee2 	bl	800ee3e <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
 800507a:	4b31      	ldr	r3, [pc, #196]	; (8005140 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 800507c:	9306      	str	r3, [sp, #24]
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_511O));
 800507e:	a906      	add	r1, sp, #24
 8005080:	2333      	movs	r3, #51	; 0x33
 8005082:	4640      	mov	r0, r8
 8005084:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005088:	f009 fee7 	bl	800ee5a <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
    digitalClock1.displayLeadingZeroForHourIndicator(true);
 800508c:	4640      	mov	r0, r8
 800508e:	2101      	movs	r1, #1
 8005090:	f00a f826 	bl	800f0e0 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
    {
        displayMode = dm;
 8005094:	f04f 0303 	mov.w	r3, #3
    digitalClock1.setTime24Hour(10, 10, 0);
 8005098:	463a      	mov	r2, r7
 800509a:	f884 33fb 	strb.w	r3, [r4, #1019]	; 0x3fb
 800509e:	4639      	mov	r1, r7
 80050a0:	462b      	mov	r3, r5
 80050a2:	4640      	mov	r0, r8
 80050a4:	1d25      	adds	r5, r4, #4
 80050a6:	f00a f81e 	bl	800f0e6 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
 80050aa:	ee18 1a10 	vmov	r1, s16
 80050ae:	4628      	mov	r0, r5
 80050b0:	f00a f9ec 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050b4:	ee1a 1a10 	vmov	r1, s20
 80050b8:	4628      	mov	r0, r5
 80050ba:	f00a f9e7 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050be:	ee18 1a90 	vmov	r1, s17
 80050c2:	4628      	mov	r0, r5
 80050c4:	f00a f9e2 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050c8:	ee19 1a10 	vmov	r1, s18
 80050cc:	4628      	mov	r0, r5
 80050ce:	f00a f9dd 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050d2:	ee19 1a90 	vmov	r1, s19
 80050d6:	4628      	mov	r0, r5
 80050d8:	f00a f9d8 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050dc:	4649      	mov	r1, r9
 80050de:	4628      	mov	r0, r5
 80050e0:	f00a f9d4 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050e4:	4651      	mov	r1, sl
 80050e6:	4628      	mov	r0, r5
 80050e8:	f00a f9d0 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050ec:	ee1a 1a90 	vmov	r1, s21
 80050f0:	4628      	mov	r0, r5
 80050f2:	f00a f9cb 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050f6:	4659      	mov	r1, fp
 80050f8:	4628      	mov	r0, r5
 80050fa:	f00a f9c7 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80050fe:	4628      	mov	r0, r5
 8005100:	4641      	mov	r1, r8
 8005102:	f00a f9c3 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005106:	4620      	mov	r0, r4
 8005108:	b009      	add	sp, #36	; 0x24
 800510a:	ecbd 8b06 	vpop	{d8-d10}
 800510e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005112:	bf00      	nop
 8005114:	08029ebc 	.word	0x08029ebc
 8005118:	0802c594 	.word	0x0802c594
 800511c:	08029ea4 	.word	0x08029ea4
 8005120:	08004cc3 	.word	0x08004cc3
 8005124:	ff05ffea 	.word	0xff05ffea
 8005128:	ff203d1e 	.word	0xff203d1e
 800512c:	fffafafc 	.word	0xfffafafc
 8005130:	00070008 	.word	0x00070008
 8005134:	00030007 	.word	0x00030007
 8005138:	00020005 	.word	0x00020005
 800513c:	ffa3c7c2 	.word	0xffa3c7c2
 8005140:	080291d0 	.word	0x080291d0

08005144 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8005144:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8005148:	4770      	bx	lr

0800514a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 800514a:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800514c:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 800514e:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8005150:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005154:	4362      	muls	r2, r4
 8005156:	4361      	muls	r1, r4
    }
 8005158:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800515c:	4718      	bx	r3

0800515e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * scale;
 800515e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8005162:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8005164:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8005168:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * scale;
 800516c:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005170:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8005174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005178:	db17      	blt.n	80051aa <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return int(fs + 0.5f);
 800517a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800517e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8005182:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8005186:	ee17 1a10 	vmov	r1, s14
        const float fs = f * scale;
 800518a:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 800518e:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8005192:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005196:	db1c      	blt.n	80051d2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return int(fs + 0.5f);
 8005198:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800519c:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80051a0:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80051a4:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80051a8:	4718      	bx	r3
        }
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 80051aa:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80051ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80051b2:	ee17 2a10 	vmov	r2, s14
 80051b6:	ee30 0a66 	vsub.f32	s0, s0, s13
 80051ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80051be:	ee30 0a26 	vadd.f32	s0, s0, s13
 80051c2:	1e51      	subs	r1, r2, #1
 80051c4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80051c8:	ee10 2a10 	vmov	r2, s0
 80051cc:	440a      	add	r2, r1
 80051ce:	4611      	mov	r1, r2
 80051d0:	e7db      	b.n	800518a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 80051d2:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80051d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80051da:	ee17 2a90 	vmov	r2, s15
 80051de:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80051e2:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80051e6:	ee70 0a87 	vadd.f32	s1, s1, s14
 80051ea:	3a01      	subs	r2, #1
 80051ec:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 80051f0:	ee10 ca90 	vmov	ip, s1
 80051f4:	4494      	add	ip, r2
 80051f6:	4662      	mov	r2, ip
 80051f8:	e7d6      	b.n	80051a8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

080051fa <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 80051fa:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 80051fc:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 80051fe:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8005200:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8005204:	4362      	muls	r2, r4
    }
 8005206:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800520a:	4718      	bx	r3

0800520c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * scale;
 800520c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8005210:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8005212:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8005216:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * scale;
 800521a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800521e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8005222:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005226:	db08      	blt.n	800523a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return int(fs + 0.5f);
 8005228:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800522c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8005230:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005234:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8005238:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800523a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800523e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005242:	ee17 2a90 	vmov	r2, s15
 8005246:	ee30 0a47 	vsub.f32	s0, s0, s14
 800524a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800524e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8005252:	3a01      	subs	r2, #1
 8005254:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8005258:	ee10 ca10 	vmov	ip, s0
 800525c:	4494      	add	ip, r2
 800525e:	4662      	mov	r2, ip
 8005260:	e7ea      	b.n	8005238 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08005262 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8005262:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8005264:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8005266:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8005268:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800526c:	4362      	muls	r2, r4
 800526e:	4361      	muls	r1, r4
    }
 8005270:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8005274:	4718      	bx	r3

08005276 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * scale;
 8005276:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800527a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 800527c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8005280:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * scale;
 8005284:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8005288:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800528c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005290:	db17      	blt.n	80052c2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return int(fs + 0.5f);
 8005292:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005296:	ee30 0a07 	vadd.f32	s0, s0, s14
 800529a:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800529e:	ee17 1a10 	vmov	r1, s14
        const float fs = f * scale;
 80052a2:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80052a6:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80052aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052ae:	db1c      	blt.n	80052ea <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return int(fs + 0.5f);
 80052b0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80052b4:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80052b8:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80052bc:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80052c0:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 80052c2:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80052c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80052ca:	ee17 2a10 	vmov	r2, s14
 80052ce:	ee30 0a66 	vsub.f32	s0, s0, s13
 80052d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80052d6:	ee30 0a26 	vadd.f32	s0, s0, s13
 80052da:	1e51      	subs	r1, r2, #1
 80052dc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80052e0:	ee10 2a10 	vmov	r2, s0
 80052e4:	440a      	add	r2, r1
 80052e6:	4611      	mov	r1, r2
 80052e8:	e7db      	b.n	80052a2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 80052ea:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80052ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80052f2:	ee17 2a90 	vmov	r2, s15
 80052f6:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80052fa:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80052fe:	ee70 0a87 	vadd.f32	s1, s1, s14
 8005302:	3a01      	subs	r2, #1
 8005304:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8005308:	ee10 ca90 	vmov	ip, s1
 800530c:	4494      	add	ip, r2
 800530e:	4662      	mov	r2, ip
 8005310:	e7d6      	b.n	80052c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08005312 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8005312:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8005314:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8005316:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8005318:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800531c:	4362      	muls	r2, r4
    }
 800531e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8005322:	4718      	bx	r3

08005324 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * scale;
 8005324:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8005328:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 800532a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800532e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * scale;
 8005332:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8005336:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800533a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800533e:	db08      	blt.n	8005352 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return int(fs + 0.5f);
 8005340:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005344:	ee30 0a27 	vadd.f32	s0, s0, s15
 8005348:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800534c:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8005350:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8005352:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005356:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800535a:	ee17 2a90 	vmov	r2, s15
 800535e:	ee30 0a47 	vsub.f32	s0, s0, s14
 8005362:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8005366:	ee30 0a07 	vadd.f32	s0, s0, s14
 800536a:	3a01      	subs	r2, #1
 800536c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8005370:	ee10 ca10 	vmov	ip, s0
 8005374:	4494      	add	ip, r2
 8005376:	4662      	mov	r2, ip
 8005378:	e7ea      	b.n	8005350 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

0800537a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 800537a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 800537e:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8005380:	2b00      	cmp	r3, #0
 8005382:	db07      	blt.n	8005394 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8005384:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8005388:	fb93 f0f2 	sdiv	r0, r3, r2
 800538c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8005390:	1040      	asrs	r0, r0, #1
 8005392:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8005394:	f06f 0001 	mvn.w	r0, #1
 8005398:	fb00 2003 	mla	r0, r0, r3, r2
 800539c:	3801      	subs	r0, #1
 800539e:	fb90 f0f2 	sdiv	r0, r0, r2
 80053a2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80053a6:	1040      	asrs	r0, r0, #1
 80053a8:	4240      	negs	r0, r0
    }
 80053aa:	4770      	bx	lr

080053ac <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80053ac:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80053b0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80053b4:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80053b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80053bc:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80053c0:	4770      	bx	lr

080053c2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80053c2:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80053c6:	4770      	bx	lr

080053c8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80053c8:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80053cc:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	db07      	blt.n	80053e2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80053d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80053d6:	fb93 f0f2 	sdiv	r0, r3, r2
 80053da:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80053de:	1040      	asrs	r0, r0, #1
 80053e0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80053e2:	f06f 0001 	mvn.w	r0, #1
 80053e6:	fb00 2003 	mla	r0, r0, r3, r2
 80053ea:	3801      	subs	r0, #1
 80053ec:	fb90 f0f2 	sdiv	r0, r0, r2
 80053f0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80053f4:	1040      	asrs	r0, r0, #1
 80053f6:	4240      	negs	r0, r0
    }
 80053f8:	4770      	bx	lr

080053fa <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 80053fa:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 80053fe:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8005402:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8005406:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800540a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800540e:	4770      	bx	lr

08005410 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8005410:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8005414:	4770      	bx	lr

08005416 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8005416:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 800541a:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800541c:	2b00      	cmp	r3, #0
 800541e:	db07      	blt.n	8005430 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8005420:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8005424:	fb93 f0f2 	sdiv	r0, r3, r2
 8005428:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800542c:	1040      	asrs	r0, r0, #1
 800542e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8005430:	f06f 0001 	mvn.w	r0, #1
 8005434:	fb00 2003 	mla	r0, r0, r3, r2
 8005438:	3801      	subs	r0, #1
 800543a:	fb90 f0f2 	sdiv	r0, r0, r2
 800543e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8005442:	1040      	asrs	r0, r0, #1
 8005444:	4240      	negs	r0, r0
    }
 8005446:	4770      	bx	lr

08005448 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8005448:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 800544c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8005450:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8005454:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8005458:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800545c:	4770      	bx	lr

0800545e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 800545e:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8005462:	4770      	bx	lr

08005464 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8005464:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 8005468:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800546a:	2b00      	cmp	r3, #0
 800546c:	db07      	blt.n	800547e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800546e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8005472:	fb93 f0f2 	sdiv	r0, r3, r2
 8005476:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800547a:	1040      	asrs	r0, r0, #1
 800547c:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800547e:	f06f 0001 	mvn.w	r0, #1
 8005482:	fb00 2003 	mla	r0, r0, r3, r2
 8005486:	3801      	subs	r0, #1
 8005488:	fb90 f0f2 	sdiv	r0, r0, r2
 800548c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8005490:	1040      	asrs	r0, r0, #1
 8005492:	4240      	negs	r0, r0
    }
 8005494:	4770      	bx	lr

08005496 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8005496:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 800549a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800549e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80054a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80054a6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80054aa:	4770      	bx	lr

080054ac <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80054ac:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80054b0:	4770      	bx	lr

080054b2 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80054b2:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80054b4:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80054b6:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80054b8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80054bc:	460d      	mov	r5, r1
 80054be:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80054c0:	4798      	blx	r3
        setScaleY(scale, updateData);
 80054c2:	6823      	ldr	r3, [r4, #0]
 80054c4:	4632      	mov	r2, r6
 80054c6:	4629      	mov	r1, r5
 80054c8:	4620      	mov	r0, r4
 80054ca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80054ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80054d2:	4718      	bx	r3

080054d4 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80054d4:	6803      	ldr	r3, [r0, #0]
 80054d6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80054da:	4718      	bx	r3

080054dc <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 80054dc:	6803      	ldr	r3, [r0, #0]
 80054de:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80054e2:	4718      	bx	r3

080054e4 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 80054e4:	6803      	ldr	r3, [r0, #0]
 80054e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80054ea:	4718      	bx	r3

080054ec <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 80054ec:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 80054ee:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 80054f0:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 80054f2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 80054f6:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 80054f8:	db0e      	blt.n	8005518 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 80054fa:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80054fe:	fb92 f1f4 	sdiv	r1, r2, r4
 8005502:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005506:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8005508:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 800550c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8005510:	3a01      	subs	r2, #1
 8005512:	440a      	add	r2, r1
 8005514:	4249      	negs	r1, r1
 8005516:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8005518:	f06f 0101 	mvn.w	r1, #1
 800551c:	fb01 4102 	mla	r1, r1, r2, r4
 8005520:	3901      	subs	r1, #1
 8005522:	fb91 f1f4 	sdiv	r1, r1, r4
 8005526:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800552a:	1049      	asrs	r1, r1, #1
 800552c:	4249      	negs	r1, r1
 800552e:	e7eb      	b.n	8005508 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08005530 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8005530:	6803      	ldr	r3, [r0, #0]
 8005532:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8005536:	4718      	bx	r3

08005538 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8005538:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 800553a:	6803      	ldr	r3, [r0, #0]
 800553c:	4351      	muls	r1, r2
 800553e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8005542:	4718      	bx	r3

08005544 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8005544:	6803      	ldr	r3, [r0, #0]
 8005546:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 800554a:	4718      	bx	r3

0800554c <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * scale;
 800554c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8005550:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8005552:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8005556:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * scale;
 800555a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800555e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8005562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005566:	db08      	blt.n	800557a <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return int(fs + 0.5f);
 8005568:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800556c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8005570:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005574:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8005578:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800557a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800557e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005582:	ee17 2a90 	vmov	r2, s15
 8005586:	ee30 0a47 	vsub.f32	s0, s0, s14
 800558a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800558e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8005592:	1e51      	subs	r1, r2, #1
 8005594:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8005598:	ee10 2a10 	vmov	r2, s0
 800559c:	440a      	add	r2, r1
 800559e:	4611      	mov	r1, r2
 80055a0:	e7ea      	b.n	8005578 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080055a2 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80055a2:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80055a6:	4770      	bx	lr

080055a8 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80055a8:	6803      	ldr	r3, [r0, #0]
 80055aa:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80055ae:	4718      	bx	r3

080055b0 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80055b0:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80055b2:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80055b4:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 80055b8:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 80055ba:	4798      	blx	r3
        if (i >= 0)
 80055bc:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80055be:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80055c0:	db07      	blt.n	80055d2 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80055c2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80055c6:	fb90 f0f3 	sdiv	r0, r0, r3
 80055ca:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80055ce:	1040      	asrs	r0, r0, #1
    }
 80055d0:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80055d2:	f06f 0201 	mvn.w	r2, #1
 80055d6:	fb02 3000 	mla	r0, r2, r0, r3
 80055da:	3801      	subs	r0, #1
 80055dc:	fb90 f0f3 	sdiv	r0, r0, r3
 80055e0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80055e4:	1040      	asrs	r0, r0, #1
 80055e6:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 80055e8:	e7f2      	b.n	80055d0 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

080055ea <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 80055ea:	6803      	ldr	r3, [r0, #0]
 80055ec:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 80055f0:	4718      	bx	r3

080055f2 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 80055f2:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 80055f4:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 80055f6:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 80055fa:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 80055fc:	4798      	blx	r3
        return (float)i / (float)scale;
 80055fe:	ee07 0a90 	vmov	s15, r0
 8005602:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8005606:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 800560a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800560e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8005612:	bd10      	pop	{r4, pc}

08005614 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8005614:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8005618:	4770      	bx	lr

0800561a <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 800561a:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	4351      	muls	r1, r2
 8005620:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8005624:	4718      	bx	r3

08005626 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * scale;
 8005626:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 800562a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 800562c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8005630:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * scale;
 8005634:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8005638:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800563c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005640:	db08      	blt.n	8005654 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return int(fs + 0.5f);
 8005642:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005646:	ee30 0a27 	vadd.f32	s0, s0, s15
 800564a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800564e:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8005652:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8005654:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8005658:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800565c:	ee17 2a90 	vmov	r2, s15
 8005660:	ee30 0a47 	vsub.f32	s0, s0, s14
 8005664:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8005668:	ee30 0a07 	vadd.f32	s0, s0, s14
 800566c:	1e51      	subs	r1, r2, #1
 800566e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8005672:	ee10 2a10 	vmov	r2, s0
 8005676:	440a      	add	r2, r1
 8005678:	4611      	mov	r1, r2
 800567a:	e7ea      	b.n	8005652 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

0800567c <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 800567c:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8005680:	4770      	bx	lr

08005682 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8005682:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8005684:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8005686:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 800568a:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 800568c:	4798      	blx	r3
        if (i >= 0)
 800568e:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8005690:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8005692:	db07      	blt.n	80056a4 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8005694:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8005698:	fb90 f0f3 	sdiv	r0, r0, r3
 800569c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80056a0:	1040      	asrs	r0, r0, #1
    }
 80056a2:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80056a4:	f06f 0201 	mvn.w	r2, #1
 80056a8:	fb02 3000 	mla	r0, r2, r0, r3
 80056ac:	3801      	subs	r0, #1
 80056ae:	fb90 f0f3 	sdiv	r0, r0, r3
 80056b2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80056b6:	1040      	asrs	r0, r0, #1
 80056b8:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 80056ba:	e7f2      	b.n	80056a2 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

080056bc <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 80056bc:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 80056be:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 80056c0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 80056c4:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 80056c6:	4798      	blx	r3
        return (float)i / (float)scale;
 80056c8:	ee07 0a90 	vmov	s15, r0
 80056cc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80056d0:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 80056d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80056d8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80056dc:	bd10      	pop	{r4, pc}

080056de <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 80056de:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80056e2:	4770      	bx	lr

080056e4 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 80056e4:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 80056e6:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 80056e8:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 80056ec:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 80056ee:	b510      	push	{r4, lr}
 80056f0:	4604      	mov	r4, r0
        if (i >= 0)
 80056f2:	db0e      	blt.n	8005712 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 80056f4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80056f8:	fb91 f1f2 	sdiv	r1, r1, r2
 80056fc:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005700:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8005702:	b209      	sxth	r1, r1
 8005704:	4620      	mov	r0, r4
 8005706:	4798      	blx	r3
 8005708:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 800570c:	fb02 3000 	mla	r0, r2, r0, r3
 8005710:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8005712:	f06f 0001 	mvn.w	r0, #1
 8005716:	fb00 2101 	mla	r1, r0, r1, r2
 800571a:	3901      	subs	r1, #1
 800571c:	fb91 f1f2 	sdiv	r1, r1, r2
 8005720:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8005724:	1049      	asrs	r1, r1, #1
 8005726:	4249      	negs	r1, r1
 8005728:	e7eb      	b.n	8005702 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

0800572a <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 800572a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800572c:	4770      	bx	lr

0800572e <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 800572e:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8005730:	4770      	bx	lr

08005732 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8005732:	6803      	ldr	r3, [r0, #0]
 8005734:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8005738:	4718      	bx	r3

0800573a <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 800573a:	6803      	ldr	r3, [r0, #0]
 800573c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8005740:	4718      	bx	r3

08005742 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8005742:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8005744:	6803      	ldr	r3, [r0, #0]
 8005746:	4351      	muls	r1, r2
 8005748:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800574c:	4718      	bx	r3

0800574e <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800574e:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8005750:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8005752:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8005756:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800575a:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 800575e:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8005760:	4798      	blx	r3
 8005762:	462b      	mov	r3, r5
 8005764:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8005768:	4620      	mov	r0, r4
    }
 800576a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800576e:	4718      	bx	r3

08005770 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8005770:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8005774:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8005778:	4293      	cmp	r3, r2
 800577a:	db07      	blt.n	800578c <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 800577c:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8005780:	4419      	add	r1, r3
 8005782:	fb91 f0f2 	sdiv	r0, r1, r2
 8005786:	fb02 1110 	mls	r1, r2, r0, r1
 800578a:	b209      	sxth	r1, r1
    }
 800578c:	4608      	mov	r0, r1
 800578e:	4770      	bx	lr

08005790 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8005790:	0148      	lsls	r0, r1, #5
 8005792:	4770      	bx	lr

08005794 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    virtual AbstractPainter& getPainter() const;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8005794:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8005798:	4770      	bx	lr

0800579a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800579a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800579e:	4770      	bx	lr

080057a0 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80057a0:	6301      	str	r1, [r0, #48]	; 0x30
    }
 80057a2:	4770      	bx	lr

080057a4 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80057a4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80057a6:	4770      	bx	lr

080057a8 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80057a8:	2001      	movs	r0, #1
 80057aa:	4770      	bx	lr

080057ac <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    /**
     * Protected function to prevent users from setting a painter.
     *
     * @param [in] painter The painter.
     */
    virtual void setPainter(AbstractPainter& painter){};
 80057ac:	4770      	bx	lr

080057ae <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80057ae:	4770      	bx	lr

080057b0 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80057b0:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80057b2:	b118      	cbz	r0, 80057bc <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80057b4:	6803      	ldr	r3, [r0, #0]
 80057b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80057ba:	4718      	bx	r3
    }
 80057bc:	4770      	bx	lr

080057be <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80057be:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80057c0:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 80057c4:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 80057c8:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80057cc:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(x), y(y), width(width), height(height)
 80057d0:	8044      	strh	r4, [r0, #2]
 80057d2:	4421      	add	r1, r4
 80057d4:	1a52      	subs	r2, r2, r1
 80057d6:	2100      	movs	r1, #0
 80057d8:	8001      	strh	r1, [r0, #0]
 80057da:	8085      	strh	r5, [r0, #4]
 80057dc:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 80057de:	bd30      	pop	{r4, r5, pc}

080057e0 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 80057e0:	b510      	push	{r4, lr}
 80057e2:	8042      	strh	r2, [r0, #2]
 80057e4:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 80057e8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80057ec:	8004      	strh	r4, [r0, #0]
 80057ee:	8082      	strh	r2, [r0, #4]
 80057f0:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 80057f2:	bd10      	pop	{r4, pc}

080057f4 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 80057f4:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80057f6:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 80057f8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80057fc:	4718      	bx	r3

080057fe <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 80057fe:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8005800:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8005802:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005806:	4718      	bx	r3

08005808 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8005808:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 800580c:	4770      	bx	lr

0800580e <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 800580e:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8005812:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8005816:	4403      	add	r3, r0
 8005818:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 800581c:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 800581e:	b200      	sxth	r0, r0
 8005820:	4770      	bx	lr

08005822 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8005822:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8005826:	4770      	bx	lr

08005828 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8005828:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 800582c:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8005830:	4403      	add	r3, r0
 8005832:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8005836:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8005838:	b200      	sxth	r0, r0
 800583a:	4770      	bx	lr

0800583c <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 800583c:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 800583e:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8005840:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8005844:	4611      	mov	r1, r2
 8005846:	4718      	bx	r3

08005848 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8005848:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 800584c:	b530      	push	{r4, r5, lr}
        return leftPadding;
 800584e:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8005852:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8005854:	186c      	adds	r4, r5, r1
 8005856:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 800585a:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 800585e:	80c2      	strh	r2, [r0, #6]
 8005860:	1b09      	subs	r1, r1, r4
 8005862:	2400      	movs	r4, #0
 8005864:	8044      	strh	r4, [r0, #2]
 8005866:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8005868:	bd30      	pop	{r4, r5, pc}

0800586a <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 800586a:	8002      	strh	r2, [r0, #0]
 800586c:	8083      	strh	r3, [r0, #4]
 800586e:	f9bd 2000 	ldrsh.w	r2, [sp]
 8005872:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8005876:	8042      	strh	r2, [r0, #2]
 8005878:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 800587a:	4770      	bx	lr

0800587c <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 800587c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 800587e:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8005880:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8005884:	4718      	bx	r3

08005886 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8005886:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8005888:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 800588a:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800588e:	4718      	bx	r3

08005890 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8005890:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8005894:	4770      	bx	lr

08005896 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8005896:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 800589a:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 800589e:	4403      	add	r3, r0
 80058a0:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80058a4:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80058a6:	b200      	sxth	r0, r0
 80058a8:	4770      	bx	lr

080058aa <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80058aa:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80058ae:	4770      	bx	lr

080058b0 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80058b0:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80058b4:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80058b8:	4403      	add	r3, r0
 80058ba:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80058be:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80058c0:	b200      	sxth	r0, r0
 80058c2:	4770      	bx	lr

080058c4 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 80058c4:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80058c6:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 80058c8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80058cc:	4611      	mov	r1, r2
 80058ce:	4718      	bx	r3

080058d0 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 80058d0:	4770      	bx	lr

080058d2 <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
 80058d2:	4770      	bx	lr

080058d4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80058d4:	4770      	bx	lr

080058d6 <_ZN8touchgfx11GraphScrollILs100EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 80058d6:	4770      	bx	lr

080058d8 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 80058d8:	4770      	bx	lr

080058da <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 80058da:	4770      	bx	lr

080058dc <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80058dc:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80058de:	68c2      	ldr	r2, [r0, #12]
 80058e0:	6844      	ldr	r4, [r0, #4]
 80058e2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80058e4:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80058e6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80058ea:	07d2      	lsls	r2, r2, #31
 80058ec:	bf48      	it	mi
 80058ee:	5962      	ldrmi	r2, [r4, r5]
 80058f0:	689b      	ldr	r3, [r3, #8]
    }
 80058f2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80058f4:	bf48      	it	mi
 80058f6:	58d3      	ldrmi	r3, [r2, r3]
 80058f8:	4718      	bx	r3

080058fa <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80058fa:	6843      	ldr	r3, [r0, #4]
 80058fc:	b12b      	cbz	r3, 800590a <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80058fe:	6883      	ldr	r3, [r0, #8]
 8005900:	b92b      	cbnz	r3, 800590e <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8005902:	68c0      	ldr	r0, [r0, #12]
 8005904:	f000 0001 	and.w	r0, r0, #1
 8005908:	4770      	bx	lr
 800590a:	4618      	mov	r0, r3
 800590c:	4770      	bx	lr
 800590e:	2001      	movs	r0, #1
    }
 8005910:	4770      	bx	lr

08005912 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8005912:	b510      	push	{r4, lr}
 8005914:	2144      	movs	r1, #68	; 0x44
 8005916:	4604      	mov	r4, r0
 8005918:	f021 fd9b 	bl	8027452 <_ZdlPvj>
 800591c:	4620      	mov	r0, r4
 800591e:	bd10      	pop	{r4, pc}

08005920 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8005920:	b510      	push	{r4, lr}
 8005922:	2144      	movs	r1, #68	; 0x44
 8005924:	4604      	mov	r4, r0
 8005926:	f021 fd94 	bl	8027452 <_ZdlPvj>
 800592a:	4620      	mov	r0, r4
 800592c:	bd10      	pop	{r4, pc}

0800592e <_ZN8touchgfx11GraphScrollILs100EED0Ev>:
 800592e:	b510      	push	{r4, lr}
 8005930:	f44f 7138 	mov.w	r1, #736	; 0x2e0
 8005934:	4604      	mov	r4, r0
 8005936:	f021 fd8c 	bl	8027452 <_ZdlPvj>
 800593a:	4620      	mov	r0, r4
 800593c:	bd10      	pop	{r4, pc}

0800593e <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800593e:	b510      	push	{r4, lr}
 8005940:	2110      	movs	r1, #16
 8005942:	4604      	mov	r4, r0
 8005944:	f021 fd85 	bl	8027452 <_ZdlPvj>
 8005948:	4620      	mov	r0, r4
 800594a:	bd10      	pop	{r4, pc}

0800594c <_ZN15Screen2ViewBaseD0Ev>:
 800594c:	b510      	push	{r4, lr}
 800594e:	f641 0110 	movw	r1, #6160	; 0x1810
 8005952:	4604      	mov	r4, r0
 8005954:	f021 fd7d 	bl	8027452 <_ZdlPvj>
 8005958:	4620      	mov	r0, r4
 800595a:	bd10      	pop	{r4, pc}

0800595c <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 800595c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8005960:	b10b      	cbz	r3, 8005966 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8005962:	f009 bd4f 	b.w	800f404 <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8005966:	4770      	bx	lr

08005968 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8005968:	b513      	push	{r0, r1, r4, lr}
 800596a:	4603      	mov	r3, r0
 800596c:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 800596e:	e9d3 140d 	ldrd	r1, r4, [r3, #52]	; 0x34
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8005972:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8005974:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8005976:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800597a:	4798      	blx	r3
 800597c:	9901      	ldr	r1, [sp, #4]
 800597e:	4602      	mov	r2, r0
 8005980:	4620      	mov	r0, r4
    }
 8005982:	b002      	add	sp, #8
 8005984:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8005988:	f00d b84c 	b.w	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800598c <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 800598c:	b513      	push	{r0, r1, r4, lr}
 800598e:	4603      	mov	r3, r0
 8005990:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8005992:	e9d3 140d 	ldrd	r1, r4, [r3, #52]	; 0x34
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8005996:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8005998:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 800599a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800599e:	4798      	blx	r3
 80059a0:	9901      	ldr	r1, [sp, #4]
 80059a2:	4602      	mov	r2, r0
 80059a4:	4620      	mov	r0, r4
    }
 80059a6:	b002      	add	sp, #8
 80059a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80059ac:	f00d b83a 	b.w	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

080059b0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 80059b0:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 80059b2:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 80059b4:	db03      	blt.n	80059be <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 80059b6:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 80059ba:	4294      	cmp	r4, r2
 80059bc:	dc06      	bgt.n	80059cc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 80059be:	4b08      	ldr	r3, [pc, #32]	; (80059e0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 80059c0:	4a08      	ldr	r2, [pc, #32]	; (80059e4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 80059c2:	4809      	ldr	r0, [pc, #36]	; (80059e8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 80059c4:	f240 6131 	movw	r1, #1585	; 0x631
 80059c8:	f021 fd72 	bl	80274b0 <__assert_func>
        return yValues[dataIndex(index)];
 80059cc:	6803      	ldr	r3, [r0, #0]
 80059ce:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 80059d2:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80059d6:	4798      	blx	r3
    }
 80059d8:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 80059dc:	bd10      	pop	{r4, pc}
 80059de:	bf00      	nop
 80059e0:	08029ee8 	.word	0x08029ee8
 80059e4:	08029f0b 	.word	0x08029f0b
 80059e8:	08029f5a 	.word	0x08029f5a

080059ec <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 80059ec:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 80059ee:	b510      	push	{r4, lr}
 80059f0:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 80059f2:	db03      	blt.n	80059fc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 80059f4:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 80059f8:	429a      	cmp	r2, r3
 80059fa:	dc06      	bgt.n	8005a0a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 80059fc:	4b07      	ldr	r3, [pc, #28]	; (8005a1c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 80059fe:	4a08      	ldr	r2, [pc, #32]	; (8005a20 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8005a00:	4808      	ldr	r0, [pc, #32]	; (8005a24 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8005a02:	f240 612b 	movw	r1, #1579	; 0x62b
 8005a06:	f021 fd53 	bl	80274b0 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8005a0a:	6803      	ldr	r3, [r0, #0]
 8005a0c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8005a10:	4798      	blx	r3
 8005a12:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8005a16:	fb02 3000 	mla	r0, r2, r0, r3
 8005a1a:	bd10      	pop	{r4, pc}
 8005a1c:	08029ee8 	.word	0x08029ee8
 8005a20:	08029fb7 	.word	0x08029fb7
 8005a24:	08029f5a 	.word	0x08029f5a

08005a28 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &HomeButton2)
 8005a28:	f500 6093 	add.w	r0, r0, #1176	; 0x498
 8005a2c:	4288      	cmp	r0, r1
{
 8005a2e:	b508      	push	{r3, lr}
    if (&src == &HomeButton2)
 8005a30:	d105      	bne.n	8005a3e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005a32:	f010 fe59 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When HomeButton2 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
 8005a36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8005a3a:	f7fd be2f 	b.w	800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8005a3e:	bd08      	pop	{r3, pc}

08005a40 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8005a40:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8005a42:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8005a44:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8005a46:	f011 ffef 	bl	8017a28 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8005a4a:	2800      	cmp	r0, #0
 8005a4c:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 8005a50:	9901      	ldr	r1, [sp, #4]
 8005a52:	462a      	mov	r2, r5
 8005a54:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8005a58:	db04      	blt.n	8005a64 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 8005a5a:	f012 f804 	bl	8017a66 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8005a5e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8005a60:	b003      	add	sp, #12
 8005a62:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 8005a64:	f011 ffff 	bl	8017a66 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8005a68:	1a20      	subs	r0, r4, r0
 8005a6a:	e7f9      	b.n	8005a60 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08005a6c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8005a6c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8005a6e:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8005a72:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8005a76:	1963      	adds	r3, r4, r5
 8005a78:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8005a7c:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8005a7e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8005a82:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8005a84:	b22d      	sxth	r5, r5
 8005a86:	1ad2      	subs	r2, r2, r3
 8005a88:	1e69      	subs	r1, r5, #1
 8005a8a:	1af0      	subs	r0, r6, r3
 8005a8c:	f7ff ffd8 	bl	8005a40 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8005a90:	442c      	add	r4, r5
 8005a92:	3c01      	subs	r4, #1
    }
 8005a94:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8005a98:	bd70      	pop	{r4, r5, r6, pc}

08005a9a <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8005a9a:	b538      	push	{r3, r4, r5, lr}
 8005a9c:	4604      	mov	r4, r0
 8005a9e:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8005aa0:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8005aa4:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8005aa8:	440b      	add	r3, r1
 8005aaa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8005aae:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8005ab2:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8005ab4:	b209      	sxth	r1, r1
 8005ab6:	1b52      	subs	r2, r2, r5
 8005ab8:	3901      	subs	r1, #1
 8005aba:	1b40      	subs	r0, r0, r5
 8005abc:	f7ff ffc0 	bl	8005a40 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8005ac0:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8005ac4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005ac8:	bd38      	pop	{r3, r4, r5, pc}
	...

08005acc <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 8005acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ad0:	ed2d 8b04 	vpush	{d8-d9}
 8005ad4:	4604      	mov	r4, r0
 8005ad6:	b087      	sub	sp, #28
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
 8005ad8:	46a1      	mov	r9, r4
 8005ada:	2500      	movs	r5, #0
 8005adc:	f012 f95a 	bl	8017d94 <_ZN8touchgfx6ScreenC1Ev>
 8005ae0:	4bb9      	ldr	r3, [pc, #740]	; (8005dc8 <_ZN15Screen2ViewBaseC1Ev+0x2fc>)
 8005ae2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005ae4:	f849 3b40 	str.w	r3, [r9], #64
 8005ae8:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8005aec:	4648      	mov	r0, r9
 8005aee:	f104 0798 	add.w	r7, r4, #152	; 0x98
 8005af2:	f7fd f83b 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8005af6:	4658      	mov	r0, fp
 8005af8:	f7fd f838 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8005afc:	2164      	movs	r1, #100	; 0x64
 8005afe:	4638      	mov	r0, r7
 8005b00:	f00c ff1e 	bl	8012940 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8005b04:	4bb1      	ldr	r3, [pc, #708]	; (8005dcc <_ZN15Screen2ViewBaseC1Ev+0x300>)
 8005b06:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005b0a:	2601      	movs	r6, #1
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, yValues)
 8005b0c:	f504 73f4 	add.w	r3, r4, #488	; 0x1e8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8005b10:	2263      	movs	r2, #99	; 0x63
 8005b12:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8005b14:	e9c4 6575 	strd	r6, r5, [r4, #468]	; 0x1d4
 8005b18:	e9c4 3577 	strd	r3, r5, [r4, #476]	; 0x1dc
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8005b1c:	4638      	mov	r0, r7
 8005b1e:	f7ff fb14 	bl	800514a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8005b22:	f504 7a5e 	add.w	sl, r4, #888	; 0x378
 8005b26:	4baa      	ldr	r3, [pc, #680]	; (8005dd0 <_ZN15Screen2ViewBaseC1Ev+0x304>)
        : DynamicDataGraph(capacity, values), current(0)
 8005b28:	f8a4 51e4 	strh.w	r5, [r4, #484]	; 0x1e4
        : GraphScrollData(CAPACITY, yValues)
 8005b2c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : CanvasWidget()
 8005b30:	4650      	mov	r0, sl
 8005b32:	f00b ff87 	bl	8011a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8005b36:	4ba7      	ldr	r3, [pc, #668]	; (8005dd4 <_ZN15Screen2ViewBaseC1Ev+0x308>)
 8005b38:	f8c4 3378 	str.w	r3, [r4, #888]	; 0x378
 8005b3c:	f04f 0302 	mov.w	r3, #2
 8005b40:	f884 33a6 	strb.w	r3, [r4, #934]	; 0x3a6
        : AbstractPainterRGB565(), painterColor(0)
 8005b44:	f504 736a 	add.w	r3, r4, #936	; 0x3a8
 8005b48:	4618      	mov	r0, r3
 8005b4a:	ee09 3a90 	vmov	s19, r3
 8005b4e:	f7fe f9d3 	bl	8003ef8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005b52:	4ba1      	ldr	r3, [pc, #644]	; (8005dd8 <_ZN15Screen2ViewBaseC1Ev+0x30c>)
 8005b54:	f8c4 33a8 	str.w	r3, [r4, #936]	; 0x3a8
 8005b58:	f504 7370 	add.w	r3, r4, #960	; 0x3c0
        painterColor = color;
 8005b5c:	f8c4 53bc 	str.w	r5, [r4, #956]	; 0x3bc
        : CanvasWidget()
 8005b60:	4618      	mov	r0, r3
 8005b62:	ee08 3a10 	vmov	s16, r3
 8005b66:	f00b ff6d 	bl	8011a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8005b6a:	230a      	movs	r3, #10
 8005b6c:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
class GraphElementGridX : public GraphElementGridBase
 8005b70:	4b9a      	ldr	r3, [pc, #616]	; (8005ddc <_ZN15Screen2ViewBaseC1Ev+0x310>)
 8005b72:	f8c4 33c0 	str.w	r3, [r4, #960]	; 0x3c0
 8005b76:	f204 4304 	addw	r3, r4, #1028	; 0x404
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8005b7a:	e9c4 56fc 	strd	r5, r6, [r4, #1008]	; 0x3f0
 8005b7e:	f884 63fc 	strb.w	r6, [r4, #1020]	; 0x3fc
 8005b82:	f8c4 5400 	str.w	r5, [r4, #1024]	; 0x400
        : CanvasWidget()
 8005b86:	4618      	mov	r0, r3
 8005b88:	ee08 3a90 	vmov	s17, r3
 8005b8c:	f00b ff5a 	bl	8011a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8005b90:	230a      	movs	r3, #10
 8005b92:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
class GraphElementGridY : public GraphElementGridBase
 8005b96:	4b92      	ldr	r3, [pc, #584]	; (8005de0 <_ZN15Screen2ViewBaseC1Ev+0x314>)
 8005b98:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
 8005b9c:	f504 6389 	add.w	r3, r4, #1096	; 0x448
        : color(col)
 8005ba0:	f8c4 5434 	str.w	r5, [r4, #1076]	; 0x434
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8005ba4:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
 8005ba8:	f884 6440 	strb.w	r6, [r4, #1088]	; 0x440
 8005bac:	f8c4 5444 	str.w	r5, [r4, #1092]	; 0x444
        : CanvasWidget()
 8005bb0:	4618      	mov	r0, r3
 8005bb2:	ee09 3a10 	vmov	s18, r3
 8005bb6:	f00b ff45 	bl	8011a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8005bba:	4b8a      	ldr	r3, [pc, #552]	; (8005de4 <_ZN15Screen2ViewBaseC1Ev+0x318>)
 8005bbc:	f8c4 3484 	str.w	r3, [r4, #1156]	; 0x484
 8005bc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005bc4:	f8a4 3488 	strh.w	r3, [r4, #1160]	; 0x488
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TypedText(TYPED_TEXT_INVALID)), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8005bc8:	232e      	movs	r3, #46	; 0x2e
 8005bca:	f504 6893 	add.w	r8, r4, #1176	; 0x498
 8005bce:	f8a4 3490 	strh.w	r3, [r4, #1168]	; 0x490

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8005bd2:	4b85      	ldr	r3, [pc, #532]	; (8005de8 <_ZN15Screen2ViewBaseC1Ev+0x31c>)
 8005bd4:	f8c4 5478 	str.w	r5, [r4, #1144]	; 0x478
          dataScale(1), labelInterval(0), labelTypedText(TypedText(TYPED_TEXT_INVALID)), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8005bd8:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
 8005bdc:	f8c4 5480 	str.w	r5, [r4, #1152]	; 0x480
 8005be0:	f884 548c 	strb.w	r5, [r4, #1164]	; 0x48c
 8005be4:	f8a4 548e 	strh.w	r5, [r4, #1166]	; 0x48e
 8005be8:	f8c4 5494 	str.w	r5, [r4, #1172]	; 0x494
class GraphLabelsY : public GraphLabelsBase
 8005bec:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
 8005bf0:	4640      	mov	r0, r8
 8005bf2:	f7fe f9c3 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8005bf6:	4b7d      	ldr	r3, [pc, #500]	; (8005dec <_ZN15Screen2ViewBaseC1Ev+0x320>)
 8005bf8:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
 8005bfc:	4b7c      	ldr	r3, [pc, #496]	; (8005df0 <_ZN15Screen2ViewBaseC1Ev+0x324>)
 8005bfe:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
 8005c02:	f8c4 554c 	str.w	r5, [r4, #1356]	; 0x54c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c06:	f504 60aa 	add.w	r0, r4, #1360	; 0x550
 8005c0a:	f8c4 4544 	str.w	r4, [r4, #1348]	; 0x544
 8005c0e:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8005c12:	f00f f809 	bl	8014c28 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005c16:	23f0      	movs	r3, #240	; 0xf0
 8005c18:	9300      	str	r3, [sp, #0]
 8005c1a:	462a      	mov	r2, r5
 8005c1c:	4629      	mov	r1, r5
 8005c1e:	4648      	mov	r0, r9
 8005c20:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c24:	f7fc fdaa 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c28:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c2c:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 320, 240);
 8005c2e:	23f0      	movs	r3, #240	; 0xf0
 8005c30:	9300      	str	r3, [sp, #0]
 8005c32:	462a      	mov	r2, r5
 8005c34:	4629      	mov	r1, r5
 8005c36:	4658      	mov	r0, fp
 8005c38:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c3c:	f7fc fd9e 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c40:	4b6c      	ldr	r3, [pc, #432]	; (8005df4 <_ZN15Screen2ViewBaseC1Ev+0x328>)
 8005c42:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    dynamicGraph1.setScale(1);
 8005c46:	462a      	mov	r2, r5
 8005c48:	4631      	mov	r1, r6
 8005c4a:	4638      	mov	r0, r7
 8005c4c:	f7ff fc31 	bl	80054b2 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 189);
 8005c50:	23bd      	movs	r3, #189	; 0xbd
 8005c52:	9300      	str	r3, [sp, #0]
 8005c54:	462a      	mov	r2, r5
 8005c56:	4629      	mov	r1, r5
 8005c58:	4638      	mov	r0, r7
 8005c5a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c5e:	f7fc fd8d 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(7, 19, 2, 6);
 8005c62:	2306      	movs	r3, #6
 8005c64:	9300      	str	r3, [sp, #0]
 8005c66:	4638      	mov	r0, r7
 8005c68:	2302      	movs	r3, #2
 8005c6a:	2213      	movs	r2, #19
 8005c6c:	2107      	movs	r1, #7
 8005c6e:	f00c fe19 	bl	80128a4 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8005c72:	462b      	mov	r3, r5
 8005c74:	9500      	str	r5, [sp, #0]
 8005c76:	462a      	mov	r2, r5
 8005c78:	4629      	mov	r1, r5
 8005c7a:	4638      	mov	r0, r7
 8005c7c:	f00c fd27 	bl	80126ce <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(0, 100);
 8005c80:	4629      	mov	r1, r5
 8005c82:	4638      	mov	r0, r7
 8005c84:	2264      	movs	r2, #100	; 0x64
 8005c86:	f7ff faec 	bl	8005262 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8005c8a:	4632      	mov	r2, r6
 8005c8c:	e9d4 10fd 	ldrd	r1, r0, [r4, #1012]	; 0x3f4
 8005c90:	f00c fec8 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8005c94:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c98:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        gridInterval = abs(interval);
 8005c9c:	230a      	movs	r3, #10
 8005c9e:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8005ca2:	ee18 1a10 	vmov	r1, s16
        dataScale = scale;
 8005ca6:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
        lineWidth = width;
 8005caa:	f884 63fc 	strb.w	r6, [r4, #1020]	; 0x3fc
 8005cae:	4638      	mov	r0, r7
 8005cb0:	f00c fd18 	bl	80126e4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8005cb4:	4632      	mov	r2, r6
 8005cb6:	f8d4 1438 	ldr.w	r1, [r4, #1080]	; 0x438
 8005cba:	f8d4 043c 	ldr.w	r0, [r4, #1084]	; 0x43c
 8005cbe:	f00c feb1 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8005cc2:	4b4d      	ldr	r3, [pc, #308]	; (8005df8 <_ZN15Screen2ViewBaseC1Ev+0x32c>)
 8005cc4:	f8c4 3434 	str.w	r3, [r4, #1076]	; 0x434
        gridInterval = abs(interval);
 8005cc8:	230a      	movs	r3, #10
 8005cca:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8005cce:	ee18 1a90 	vmov	r1, s17
        dataScale = scale;
 8005cd2:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
        lineWidth = width;
 8005cd6:	f884 6440 	strb.w	r6, [r4, #1088]	; 0x440
 8005cda:	4638      	mov	r0, r7
 8005cdc:	f00c fd02 	bl	80126e4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8005ce0:	4632      	mov	r2, r6
 8005ce2:	f8d4 147c 	ldr.w	r1, [r4, #1148]	; 0x47c
 8005ce6:	f8d4 0480 	ldr.w	r0, [r4, #1152]	; 0x480
 8005cea:	f00c fe9b 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8005cee:	230a      	movs	r3, #10
 8005cf0:	f8c4 3480 	str.w	r3, [r4, #1152]	; 0x480
class TypedText
 8005cf4:	2332      	movs	r3, #50	; 0x32
 8005cf6:	f8a4 3488 	strh.w	r3, [r4, #1160]	; 0x488
        color = newColor;
 8005cfa:	4b40      	ldr	r3, [pc, #256]	; (8005dfc <_ZN15Screen2ViewBaseC1Ev+0x330>)
        dataScale = scale;
 8005cfc:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8005d00:	ee19 1a10 	vmov	r1, s18
 8005d04:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
 8005d08:	4638      	mov	r0, r7
 8005d0a:	f00c fcfd 	bl	8012708 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8005d0e:	4b3c      	ldr	r3, [pc, #240]	; (8005e00 <_ZN15Screen2ViewBaseC1Ev+0x334>)
 8005d10:	f8c4 33bc 	str.w	r3, [r4, #956]	; 0x3bc
    dynamicGraph1Line1.setPainter(dynamicGraph1Line1Painter);
 8005d14:	ee19 1a90 	vmov	r1, s19
 8005d18:	4650      	mov	r0, sl
 8005d1a:	f00b fd8f 	bl	801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8005d1e:	f884 63a6 	strb.w	r6, [r4, #934]	; 0x3a6
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8005d22:	4651      	mov	r1, sl
 8005d24:	4638      	mov	r0, r7
 8005d26:	2633      	movs	r6, #51	; 0x33
 8005d28:	f00c fcdc 	bl	80126e4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8005d2c:	462a      	mov	r2, r5
 8005d2e:	4629      	mov	r1, r5
 8005d30:	f204 40cc 	addw	r0, r4, #1228	; 0x4cc
 8005d34:	9600      	str	r6, [sp, #0]
 8005d36:	2339      	movs	r3, #57	; 0x39
 8005d38:	f7fc fd20 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        up = colorReleased;
 8005d3c:	f04f 33ff 	mov.w	r3, #4294967295
 8005d40:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
        down = colorPressed;
 8005d44:	4b2f      	ldr	r3, [pc, #188]	; (8005e04 <_ZN15Screen2ViewBaseC1Ev+0x338>)
 8005d46:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        borderUp = borderColorReleased;
 8005d4a:	4b2f      	ldr	r3, [pc, #188]	; (8005e08 <_ZN15Screen2ViewBaseC1Ev+0x33c>)
 8005d4c:	f8c4 3508 	str.w	r3, [r4, #1288]	; 0x508
        borderDown = borderColorPressed;
 8005d50:	4b2e      	ldr	r3, [pc, #184]	; (8005e0c <_ZN15Screen2ViewBaseC1Ev+0x340>)
 8005d52:	f8c4 350c 	str.w	r3, [r4, #1292]	; 0x50c
        handlePressedUpdated();
 8005d56:	f8d4 3498 	ldr.w	r3, [r4, #1176]	; 0x498
 8005d5a:	2505      	movs	r5, #5
 8005d5c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005d60:	f8a4 54fc 	strh.w	r5, [r4, #1276]	; 0x4fc
 8005d64:	4640      	mov	r0, r8
 8005d66:	4798      	blx	r3
    HomeButton2.setIconBitmaps(Bitmap(BITMAP_HOME_ID), Bitmap(BITMAP_HOME_ID));
 8005d68:	aa05      	add	r2, sp, #20
 8005d6a:	a904      	add	r1, sp, #16
 8005d6c:	4640      	mov	r0, r8
 8005d6e:	f8ad 5010 	strh.w	r5, [sp, #16]
 8005d72:	f8ad 5014 	strh.w	r5, [sp, #20]
 8005d76:	f7fc feab 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8005d7a:	4b25      	ldr	r3, [pc, #148]	; (8005e10 <_ZN15Screen2ViewBaseC1Ev+0x344>)
 8005d7c:	f8c4 3518 	str.w	r3, [r4, #1304]	; 0x518
    HomeButton2.setPosition(263, 189, 57, 51);
 8005d80:	22bd      	movs	r2, #189	; 0xbd
 8005d82:	4640      	mov	r0, r8
 8005d84:	9600      	str	r6, [sp, #0]
 8005d86:	2339      	movs	r3, #57	; 0x39
 8005d88:	f240 1107 	movw	r1, #263	; 0x107
 8005d8c:	f7fc fcf6 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    HomeButton2.setAction(flexButtonCallback);
 8005d90:	f504 63a8 	add.w	r3, r4, #1344	; 0x540
 8005d94:	f8c4 34c8 	str.w	r3, [r4, #1224]	; 0x4c8
 8005d98:	1d20      	adds	r0, r4, #4
 8005d9a:	4649      	mov	r1, r9
 8005d9c:	9003      	str	r0, [sp, #12]
 8005d9e:	f009 fb75 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005da2:	9803      	ldr	r0, [sp, #12]
 8005da4:	4659      	mov	r1, fp
 8005da6:	f009 fb71 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005daa:	9803      	ldr	r0, [sp, #12]
 8005dac:	4639      	mov	r1, r7
 8005dae:	f009 fb6d 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005db2:	9803      	ldr	r0, [sp, #12]
 8005db4:	4641      	mov	r1, r8
 8005db6:	f009 fb69 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005dba:	4620      	mov	r0, r4
 8005dbc:	b007      	add	sp, #28
 8005dbe:	ecbd 8b04 	vpop	{d8-d9}
 8005dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dc6:	bf00      	nop
 8005dc8:	0802a33c 	.word	0x0802a33c
 8005dcc:	0802bfcc 	.word	0x0802bfcc
 8005dd0:	0802a188 	.word	0x0802a188
 8005dd4:	0802c3dc 	.word	0x0802c3dc
 8005dd8:	0802bbb4 	.word	0x0802bbb4
 8005ddc:	0802a010 	.word	0x0802a010
 8005de0:	0802a0cc 	.word	0x0802a0cc
 8005de4:	080291d0 	.word	0x080291d0
 8005de8:	0802c460 	.word	0x0802c460
 8005dec:	0802a324 	.word	0x0802a324
 8005df0:	08005a29 	.word	0x08005a29
 8005df4:	fff7e9e9 	.word	0xfff7e9e9
 8005df8:	ff080808 	.word	0xff080808
 8005dfc:	ffff0019 	.word	0xffff0019
 8005e00:	ffc41616 	.word	0xffc41616
 8005e04:	ffc5c6c7 	.word	0xffc5c6c7
 8005e08:	fffc0505 	.word	0xfffc0505
 8005e0c:	ffcf0a63 	.word	0xffcf0a63
 8005e10:	00030005 	.word	0x00030005

08005e14 <_ZN21SettingScreenViewBaseD1Ev>:

class SettingScreenViewBase : public touchgfx::View<SettingScreenPresenter>
{
public:
    SettingScreenViewBase();
    virtual ~SettingScreenViewBase() {}
 8005e14:	4770      	bx	lr

08005e16 <_ZN21SettingScreenViewBase17nextArrowCallbackEv>:
     * Virtual Action Handlers
     */
    virtual void nextArrowCallback()
    {
        // Override and implement this function in SettingScreen
    }
 8005e16:	4770      	bx	lr

08005e18 <_ZN21SettingScreenViewBase17backArrowCallbackEv>:

    virtual void backArrowCallback()
    {
        // Override and implement this function in SettingScreen
    }
 8005e18:	4770      	bx	lr

08005e1a <_ZN21SettingScreenViewBase18minutePlusFunctionEv>:

    virtual void minutePlusFunction()
    {
        // Override and implement this function in SettingScreen
    }
 8005e1a:	4770      	bx	lr

08005e1c <_ZN21SettingScreenViewBase15setTimeFunctionEv>:

    virtual void setTimeFunction()
    {
        // Override and implement this function in SettingScreen
    }
 8005e1c:	4770      	bx	lr

08005e1e <_ZN21SettingScreenViewBase19minuteMinusFunctionEv>:

    virtual void minuteMinusFunction()
    {
        // Override and implement this function in SettingScreen
    }
 8005e1e:	4770      	bx	lr

08005e20 <_ZN21SettingScreenViewBase18secondPlusFunctionEv>:

    virtual void secondPlusFunction()
    {
        // Override and implement this function in SettingScreen
    }
 8005e20:	4770      	bx	lr

08005e22 <_ZN21SettingScreenViewBase19secondMinusFunctionEv>:

    virtual void secondMinusFunction()
    {
        // Override and implement this function in SettingScreen
    }
 8005e22:	4770      	bx	lr

08005e24 <_ZN21SettingScreenViewBase11setupScreenEv>:
}

void SettingScreenViewBase::setupScreen()
{

}
 8005e24:	4770      	bx	lr

08005e26 <_ZN8touchgfx8CallbackI21SettingScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e26:	4770      	bx	lr

08005e28 <_ZN8touchgfx8CallbackI21SettingScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005e28:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005e2a:	68c2      	ldr	r2, [r0, #12]
 8005e2c:	6844      	ldr	r4, [r0, #4]
 8005e2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005e30:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8005e32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005e36:	07d2      	lsls	r2, r2, #31
 8005e38:	bf48      	it	mi
 8005e3a:	5962      	ldrmi	r2, [r4, r5]
 8005e3c:	689b      	ldr	r3, [r3, #8]
    }
 8005e3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005e40:	bf48      	it	mi
 8005e42:	58d3      	ldrmi	r3, [r2, r3]
 8005e44:	4718      	bx	r3

08005e46 <_ZNK8touchgfx8CallbackI21SettingScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8005e46:	6843      	ldr	r3, [r0, #4]
 8005e48:	b12b      	cbz	r3, 8005e56 <_ZNK8touchgfx8CallbackI21SettingScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8005e4a:	6883      	ldr	r3, [r0, #8]
 8005e4c:	b92b      	cbnz	r3, 8005e5a <_ZNK8touchgfx8CallbackI21SettingScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8005e4e:	68c0      	ldr	r0, [r0, #12]
 8005e50:	f000 0001 	and.w	r0, r0, #1
 8005e54:	4770      	bx	lr
 8005e56:	4618      	mov	r0, r3
 8005e58:	4770      	bx	lr
 8005e5a:	2001      	movs	r0, #1
    }
 8005e5c:	4770      	bx	lr

08005e5e <_ZN8touchgfx8CallbackI21SettingScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e5e:	b510      	push	{r4, lr}
 8005e60:	2110      	movs	r1, #16
 8005e62:	4604      	mov	r4, r0
 8005e64:	f021 faf5 	bl	8027452 <_ZdlPvj>
 8005e68:	4620      	mov	r0, r4
 8005e6a:	bd10      	pop	{r4, pc}

08005e6c <_ZN21SettingScreenViewBaseD0Ev>:
    virtual ~SettingScreenViewBase() {}
 8005e6c:	b510      	push	{r4, lr}
 8005e6e:	f640 315c 	movw	r1, #2908	; 0xb5c
 8005e72:	4604      	mov	r4, r0
 8005e74:	f021 faed 	bl	8027452 <_ZdlPvj>
 8005e78:	4620      	mov	r0, r4
 8005e7a:	bd10      	pop	{r4, pc}

08005e7c <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SettingScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &backButton1)
 8005e7c:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8005e80:	4291      	cmp	r1, r2
{
 8005e82:	b510      	push	{r4, lr}
    if (&src == &backButton1)
 8005e84:	d105      	bne.n	8005e92 <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005e86:	f010 fc2f 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
        //When closePopUpButton clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8005e8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenNoTransition();
 8005e8e:	f7fd bc05 	b.w	800369c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    else if (&src == &flexButton1)
 8005e92:	f500 72a0 	add.w	r2, r0, #320	; 0x140
 8005e96:	4291      	cmp	r1, r2
 8005e98:	d104      	bne.n	8005ea4 <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28>
        setTimeFunction();
 8005e9a:	6803      	ldr	r3, [r0, #0]
 8005e9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
}
 8005e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        nextArrowCallback();
 8005ea2:	4718      	bx	r3
    else if (&src == &nextArrowButton)
 8005ea4:	f500 726f 	add.w	r2, r0, #956	; 0x3bc
 8005ea8:	4291      	cmp	r1, r2
 8005eaa:	d102      	bne.n	8005eb2 <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        nextArrowCallback();
 8005eac:	6803      	ldr	r3, [r0, #0]
 8005eae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005eb0:	e7f5      	b.n	8005e9e <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    else if (&src == &backArrowButton)
 8005eb2:	f200 4264 	addw	r2, r0, #1124	; 0x464
 8005eb6:	4291      	cmp	r1, r2
 8005eb8:	d102      	bne.n	8005ec0 <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x44>
        backArrowCallback();
 8005eba:	6803      	ldr	r3, [r0, #0]
 8005ebc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ebe:	e7ee      	b.n	8005e9e <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    else if (&src == &minutePlusButton)
 8005ec0:	f500 62b6 	add.w	r2, r0, #1456	; 0x5b0
 8005ec4:	4291      	cmp	r1, r2
 8005ec6:	d102      	bne.n	8005ece <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x52>
        minutePlusFunction();
 8005ec8:	6803      	ldr	r3, [r0, #0]
 8005eca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ecc:	e7e7      	b.n	8005e9e <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    else if (&src == &minuteMinusButton)
 8005ece:	f500 62cb 	add.w	r2, r0, #1624	; 0x658
 8005ed2:	4291      	cmp	r1, r2
 8005ed4:	d102      	bne.n	8005edc <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x60>
        minuteMinusFunction();
 8005ed6:	6803      	ldr	r3, [r0, #0]
 8005ed8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005eda:	e7e0      	b.n	8005e9e <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    else if (&src == &secondPlusButton)
 8005edc:	f200 72a4 	addw	r2, r0, #1956	; 0x7a4
 8005ee0:	4291      	cmp	r1, r2
 8005ee2:	d102      	bne.n	8005eea <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6e>
        secondPlusFunction();
 8005ee4:	6803      	ldr	r3, [r0, #0]
 8005ee6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ee8:	e7d9      	b.n	8005e9e <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    else if (&src == &secondMinusButton)
 8005eea:	f600 024c 	addw	r2, r0, #2124	; 0x84c
 8005eee:	4291      	cmp	r1, r2
 8005ef0:	d102      	bne.n	8005ef8 <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7c>
        secondMinusFunction();
 8005ef2:	6803      	ldr	r3, [r0, #0]
 8005ef4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ef6:	e7d2      	b.n	8005e9e <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    else if (&src == &closePopUpButton)
 8005ef8:	f600 221c 	addw	r2, r0, #2588	; 0xa1c
 8005efc:	4291      	cmp	r1, r2
 8005efe:	d108      	bne.n	8005f12 <_ZN21SettingScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x96>
        visible = vis;
 8005f00:	2200      	movs	r2, #0
 8005f02:	f880 2991 	strb.w	r2, [r0, #2449]	; 0x991
}
 8005f06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8005f0a:	f600 106c 	addw	r0, r0, #2412	; 0x96c
 8005f0e:	f011 bbc0 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005f12:	bd10      	pop	{r4, pc}

08005f14 <_ZN8touchgfx9ContainerC1Ev>:
          visible(true)
 8005f14:	f44f 7180 	mov.w	r1, #256	; 0x100
        : x(0), y(0), width(0), height(0)
 8005f18:	2200      	movs	r2, #0
 8005f1a:	8481      	strh	r1, [r0, #36]	; 0x24
 8005f1c:	4905      	ldr	r1, [pc, #20]	; (8005f34 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8005f1e:	6001      	str	r1, [r0, #0]
 8005f20:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8005f24:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8005f28:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005f2c:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005f30:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8005f32:	4770      	bx	lr
 8005f34:	0802b270 	.word	0x0802b270

08005f38 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>:
    void setText(TypedText t)
 8005f38:	b513      	push	{r0, r1, r4, lr}
 8005f3a:	4604      	mov	r4, r0
        text.setTypedText(t);
 8005f3c:	3078      	adds	r0, #120	; 0x78
 8005f3e:	9001      	str	r0, [sp, #4]
 8005f40:	f00e fc0c 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8005f44:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8005f48:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8005f4c:	9801      	ldr	r0, [sp, #4]
 8005f4e:	f7fc fded 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8005f52:	b002      	add	sp, #8
 8005f54:	bd10      	pop	{r4, pc}
	...

08005f58 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 8005f58:	b538      	push	{r3, r4, r5, lr}
 8005f5a:	4604      	mov	r4, r0
        : T()
 8005f5c:	4625      	mov	r5, r4
 8005f5e:	f7fc fe4b 	bl	8002bf8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8005f62:	4b07      	ldr	r3, [pc, #28]	; (8005f80 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x28>)
 8005f64:	f845 3b78 	str.w	r3, [r5], #120
 8005f68:	4628      	mov	r0, r5
 8005f6a:	f7fc fe13 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
        : color(0)
 8005f6e:	2300      	movs	r3, #0
        T::add(text);
 8005f70:	4620      	mov	r0, r4
 8005f72:	e9c4 3330 	strd	r3, r3, [r4, #192]	; 0xc0
 8005f76:	4629      	mov	r1, r5
 8005f78:	f009 fa88 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8005f7c:	4620      	mov	r0, r4
 8005f7e:	bd38      	pop	{r3, r4, r5, pc}
 8005f80:	0802943c 	.word	0x0802943c

08005f84 <_ZN21SettingScreenViewBaseC1Ev>:
SettingScreenViewBase::SettingScreenViewBase() :
 8005f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f88:	ed2d 8b10 	vpush	{d8-d15}
 8005f8c:	4604      	mov	r4, r0
 8005f8e:	b095      	sub	sp, #84	; 0x54
 8005f90:	f011 ff00 	bl	8017d94 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &SettingScreenViewBase::flexButtonCallbackHandler)
 8005f94:	4622      	mov	r2, r4
 8005f96:	2500      	movs	r5, #0
 8005f98:	4be1      	ldr	r3, [pc, #900]	; (8006320 <_ZN21SettingScreenViewBaseC1Ev+0x39c>)
 8005f9a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005f9c:	f842 3b40 	str.w	r3, [r2], #64
 8005fa0:	4610      	mov	r0, r2
 8005fa2:	ee0a 2a90 	vmov	s21, r2
 8005fa6:	f7fc fde1 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8005faa:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8005fae:	4618      	mov	r0, r3
 8005fb0:	9305      	str	r3, [sp, #20]
 8005fb2:	f7fc fddb 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8005fb6:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005fba:	4618      	mov	r0, r3
 8005fbc:	ee0b 3a10 	vmov	s22, r3
 8005fc0:	f7fd ffdc 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8005fc4:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005fc8:	f504 7802 	add.w	r8, r4, #520	; 0x208
 8005fcc:	4618      	mov	r0, r3
 8005fce:	ee09 3a90 	vmov	s19, r3
 8005fd2:	f7ff ffc1 	bl	8005f58 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8005fd6:	4640      	mov	r0, r8
 8005fd8:	f7ff ff9c 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 8005fdc:	f504 730d 	add.w	r3, r4, #564	; 0x234
 8005fe0:	f504 7918 	add.w	r9, r4, #608	; 0x260
 8005fe4:	4618      	mov	r0, r3
 8005fe6:	9306      	str	r3, [sp, #24]
 8005fe8:	f7fc fdc0 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8005fec:	4648      	mov	r0, r9
 8005fee:	f7fc fdd1 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8005ff2:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
 8005ff6:	4618      	mov	r0, r3
 8005ff8:	9307      	str	r3, [sp, #28]
 8005ffa:	f7fc fdb7 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8005ffe:	f504 7335 	add.w	r3, r4, #724	; 0x2d4
 8006002:	4618      	mov	r0, r3
 8006004:	ee0b 3a90 	vmov	s23, r3
 8006008:	f7fc fdc4 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 800600c:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8006010:	f504 7752 	add.w	r7, r4, #840	; 0x348
 8006014:	4618      	mov	r0, r3
 8006016:	9308      	str	r3, [sp, #32]
 8006018:	f7fc fda8 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 800601c:	4638      	mov	r0, r7
 800601e:	f7fc fdb9 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8006022:	f504 7364 	add.w	r3, r4, #912	; 0x390
 8006026:	f504 7a6f 	add.w	sl, r4, #956	; 0x3bc
 800602a:	4618      	mov	r0, r3
 800602c:	ee08 3a10 	vmov	s16, r3
 8006030:	f7ff ff70 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 8006034:	4650      	mov	r0, sl
 8006036:	f7fd ffa1 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800603a:	f204 4364 	addw	r3, r4, #1124	; 0x464
 800603e:	4618      	mov	r0, r3
 8006040:	ee0c 3a10 	vmov	s24, r3
 8006044:	f7fd ff9a 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006048:	f204 530c 	addw	r3, r4, #1292	; 0x50c
 800604c:	4618      	mov	r0, r3
 800604e:	9309      	str	r3, [sp, #36]	; 0x24
 8006050:	f7fc fd8c 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 8006054:	f504 63a7 	add.w	r3, r4, #1336	; 0x538
        : TextArea()
 8006058:	4618      	mov	r0, r3
 800605a:	ee0c 3a90 	vmov	s25, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800605e:	4eb1      	ldr	r6, [pc, #708]	; (8006324 <_ZN21SettingScreenViewBaseC1Ev+0x3a0>)
        : TextArea()
 8006060:	f7fc fd98 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 8006064:	f204 5384 	addw	r3, r4, #1412	; 0x584
        : TextAreaWithWildcardBase(), wc1(0)
 8006068:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
 800606c:	4618      	mov	r0, r3
 800606e:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
 8006072:	ee08 3a90 	vmov	s17, r3
 8006076:	f7ff ff4d 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 800607a:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 800607e:	4618      	mov	r0, r3
 8006080:	ee0d 3a10 	vmov	s26, r3
 8006084:	f7fd ff7a 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006088:	f504 63cb 	add.w	r3, r4, #1624	; 0x658
 800608c:	4618      	mov	r0, r3
 800608e:	ee0d 3a90 	vmov	s27, r3
 8006092:	f7fd ff73 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006096:	f504 63e0 	add.w	r3, r4, #1792	; 0x700
 800609a:	4618      	mov	r0, r3
 800609c:	930a      	str	r3, [sp, #40]	; 0x28
 800609e:	f7fc fd65 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 80060a2:	f204 732c 	addw	r3, r4, #1836	; 0x72c
        : TextArea()
 80060a6:	4618      	mov	r0, r3
 80060a8:	ee0f 3a90 	vmov	s31, r3
 80060ac:	f7fc fd72 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
 80060b0:	f504 63ef 	add.w	r3, r4, #1912	; 0x778
        : TextAreaWithWildcardBase(), wc1(0)
 80060b4:	f8c4 672c 	str.w	r6, [r4, #1836]	; 0x72c
 80060b8:	4618      	mov	r0, r3
 80060ba:	f8c4 5774 	str.w	r5, [r4, #1908]	; 0x774
 80060be:	ee09 3a10 	vmov	s18, r3
 80060c2:	f7ff ff27 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 80060c6:	f204 73a4 	addw	r3, r4, #1956	; 0x7a4
 80060ca:	4618      	mov	r0, r3
 80060cc:	ee0e 3a10 	vmov	s28, r3
 80060d0:	f7fd ff54 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060d4:	f604 034c 	addw	r3, r4, #2124	; 0x84c
 80060d8:	4618      	mov	r0, r3
 80060da:	ee0e 3a90 	vmov	s29, r3
 80060de:	f7fd ff4d 	bl	8003f7c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060e2:	f604 03f4 	addw	r3, r4, #2292	; 0x8f4
 80060e6:	4618      	mov	r0, r3
 80060e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80060ea:	f7fc fd3f 	bl	8002b6c <_ZN8touchgfx3BoxC1Ev>
 80060ee:	f504 6312 	add.w	r3, r4, #2336	; 0x920
        : TextArea()
 80060f2:	4618      	mov	r0, r3
 80060f4:	f604 1b6c 	addw	fp, r4, #2412	; 0x96c
 80060f8:	9304      	str	r3, [sp, #16]
 80060fa:	f7fc fd4b 	bl	8002b94 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80060fe:	f8c4 6920 	str.w	r6, [r4, #2336]	; 0x920
 8006102:	f8c4 5968 	str.w	r5, [r4, #2408]	; 0x968
 8006106:	4658      	mov	r0, fp
 8006108:	f009 f8c6 	bl	800f298 <_ZN8touchgfx11ModalWindowC1Ev>
 800610c:	f604 231c 	addw	r3, r4, #2588	; 0xa1c
 8006110:	4618      	mov	r0, r3
 8006112:	ee0a 3a10 	vmov	s20, r3
 8006116:	f7ff ff1f 	bl	8005f58 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800611a:	f604 23e4 	addw	r3, r4, #2788	; 0xae4
 800611e:	ee0f 3a10 	vmov	s30, r3
 8006122:	a912      	add	r1, sp, #72	; 0x48
 8006124:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006128:	ee1f 0a10 	vmov	r0, s30
 800612c:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8006130:	f00d fd10 	bl	8013b54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8006134:	4b7c      	ldr	r3, [pc, #496]	; (8006328 <_ZN21SettingScreenViewBaseC1Ev+0x3a4>)
 8006136:	f8c4 3b4c 	str.w	r3, [r4, #2892]	; 0xb4c
    __background.setPosition(0, 0, 320, 240);
 800613a:	26f0      	movs	r6, #240	; 0xf0
 800613c:	4b7b      	ldr	r3, [pc, #492]	; (800632c <_ZN21SettingScreenViewBaseC1Ev+0x3a8>)
 800613e:	f8c4 3b54 	str.w	r3, [r4, #2900]	; 0xb54
 8006142:	ee1a 0a90 	vmov	r0, s21
 8006146:	9600      	str	r6, [sp, #0]
 8006148:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800614c:	462a      	mov	r2, r5
 800614e:	4629      	mov	r1, r5
 8006150:	f8c4 4b50 	str.w	r4, [r4, #2896]	; 0xb50
 8006154:	f8c4 5b58 	str.w	r5, [r4, #2904]	; 0xb58
 8006158:	f7fc fb10 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800615c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 320, 240);
 8006160:	9805      	ldr	r0, [sp, #20]
 8006162:	66a3      	str	r3, [r4, #104]	; 0x68
 8006164:	9600      	str	r6, [sp, #0]
 8006166:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800616a:	462a      	mov	r2, r5
 800616c:	4629      	mov	r1, r5
 800616e:	f7fc fb05 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 8006172:	262c      	movs	r6, #44	; 0x2c
 8006174:	4b6e      	ldr	r3, [pc, #440]	; (8006330 <_ZN21SettingScreenViewBaseC1Ev+0x3ac>)
 8006176:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800617a:	9600      	str	r6, [sp, #0]
 800617c:	2328      	movs	r3, #40	; 0x28
 800617e:	462a      	mov	r2, r5
 8006180:	4629      	mov	r1, r5
 8006182:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8006186:	f7fc faf9 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800618a:	f04f 0305 	mov.w	r3, #5
 800618e:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
    colortype(uint32_t col)
 8006192:	4b68      	ldr	r3, [pc, #416]	; (8006334 <_ZN21SettingScreenViewBaseC1Ev+0x3b0>)
    backButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(252, 252, 252), touchgfx::Color::getColorFromRGB(164, 169, 171), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(66, 66, 66));
 8006194:	4a68      	ldr	r2, [pc, #416]	; (8006338 <_ZN21SettingScreenViewBaseC1Ev+0x3b4>)
 8006196:	4969      	ldr	r1, [pc, #420]	; (800633c <_ZN21SettingScreenViewBaseC1Ev+0x3b8>)
 8006198:	9300      	str	r3, [sp, #0]
 800619a:	ee1b 0a10 	vmov	r0, s22
 800619e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80061a2:	f7fe fde5 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80061a6:	2302      	movs	r3, #2
    backButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 80061a8:	ee1b 0a10 	vmov	r0, s22
 80061ac:	aa12      	add	r2, sp, #72	; 0x48
 80061ae:	a911      	add	r1, sp, #68	; 0x44
 80061b0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80061b4:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 80061b8:	f7fc fc8a 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 80061bc:	4b60      	ldr	r3, [pc, #384]	; (8006340 <_ZN21SettingScreenViewBaseC1Ev+0x3bc>)
 80061be:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    backButton1.setPosition(280, 196, 40, 44);
 80061c2:	ee1b 0a10 	vmov	r0, s22
 80061c6:	9600      	str	r6, [sp, #0]
 80061c8:	2328      	movs	r3, #40	; 0x28
 80061ca:	22c4      	movs	r2, #196	; 0xc4
 80061cc:	f44f 718c 	mov.w	r1, #280	; 0x118
 80061d0:	f7fc fad4 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    backButton1.setAction(flexButtonCallback);
 80061d4:	f604 324c 	addw	r2, r4, #2892	; 0xb4c
 80061d8:	9203      	str	r2, [sp, #12]
 80061da:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 80061de:	2225      	movs	r2, #37	; 0x25
 80061e0:	9200      	str	r2, [sp, #0]
 80061e2:	2393      	movs	r3, #147	; 0x93
 80061e4:	462a      	mov	r2, r5
 80061e6:	4629      	mov	r1, r5
 80061e8:	f504 70ba 	add.w	r0, r4, #372	; 0x174
 80061ec:	f7fc fac6 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80061f0:	f04f 0305 	mov.w	r3, #5
 80061f4:	f8a4 31a4 	strh.w	r3, [r4, #420]	; 0x1a4
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(70, 240, 89), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80061f8:	4b52      	ldr	r3, [pc, #328]	; (8006344 <_ZN21SettingScreenViewBaseC1Ev+0x3c0>)
 80061fa:	9300      	str	r3, [sp, #0]
 80061fc:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006200:	4a51      	ldr	r2, [pc, #324]	; (8006348 <_ZN21SettingScreenViewBaseC1Ev+0x3c4>)
 8006202:	4952      	ldr	r1, [pc, #328]	; (800634c <_ZN21SettingScreenViewBaseC1Ev+0x3c8>)
 8006204:	ee19 0a90 	vmov	r0, s19
 8006208:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800620c:	f7fe fdb0 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006210:	261a      	movs	r6, #26
 8006212:	4b4f      	ldr	r3, [pc, #316]	; (8006350 <_ZN21SettingScreenViewBaseC1Ev+0x3cc>)
 8006214:	9312      	str	r3, [sp, #72]	; 0x48
    flexButton1.setText(TypedText(T___SINGLEUSE_RURG));
 8006216:	ee19 0a90 	vmov	r0, s19
 800621a:	a912      	add	r1, sp, #72	; 0x48
 800621c:	f8ad 604c 	strh.w	r6, [sp, #76]	; 0x4c
 8006220:	f7ff fe8a 	bl	8005f38 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006224:	2225      	movs	r2, #37	; 0x25
 8006226:	2393      	movs	r3, #147	; 0x93
 8006228:	2101      	movs	r1, #1
 800622a:	9200      	str	r2, [sp, #0]
 800622c:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 8006230:	2205      	movs	r2, #5
 8006232:	f7fc faa3 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006236:	f04f 32ff 	mov.w	r2, #4294967295
        colorPressed = newColorPressed;
 800623a:	e9c4 2280 	strd	r2, r2, [r4, #512]	; 0x200
        handlePressedUpdated();
 800623e:	ee19 0a90 	vmov	r0, s19
 8006242:	f7fc fb18 	bl	8002876 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton1.setPosition(37, 145, 147, 37);
 8006246:	2225      	movs	r2, #37	; 0x25
 8006248:	ee19 0a90 	vmov	r0, s19
 800624c:	9200      	str	r2, [sp, #0]
 800624e:	2393      	movs	r3, #147	; 0x93
 8006250:	2291      	movs	r2, #145	; 0x91
 8006252:	2125      	movs	r1, #37	; 0x25
 8006254:	f7fc fa92 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006258:	9a03      	ldr	r2, [sp, #12]
 800625a:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
    timeSetcontainer.setPosition(0, 0, 218, 138);
 800625e:	238a      	movs	r3, #138	; 0x8a
 8006260:	9300      	str	r3, [sp, #0]
 8006262:	462a      	mov	r2, r5
 8006264:	23da      	movs	r3, #218	; 0xda
 8006266:	4629      	mov	r1, r5
 8006268:	4640      	mov	r0, r8
 800626a:	f7fc fa87 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    box3.setPosition(6, 7, 99, 37);
 800626e:	2225      	movs	r2, #37	; 0x25
 8006270:	2363      	movs	r3, #99	; 0x63
 8006272:	9806      	ldr	r0, [sp, #24]
 8006274:	9200      	str	r2, [sp, #0]
 8006276:	2106      	movs	r1, #6
 8006278:	2207      	movs	r2, #7
 800627a:	f7fc fa7f 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800627e:	4a35      	ldr	r2, [pc, #212]	; (8006354 <_ZN21SettingScreenViewBaseC1Ev+0x3d0>)
    timeSetcontainer.add(box3);
 8006280:	9906      	ldr	r1, [sp, #24]
 8006282:	f8c4 225c 	str.w	r2, [r4, #604]	; 0x25c
 8006286:	4640      	mov	r0, r8
 8006288:	f009 f900 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(26, 13);
 800628c:	220d      	movs	r2, #13
 800628e:	4631      	mov	r1, r6
 8006290:	4648      	mov	r0, r9
        boundingArea = calculateBoundingArea();
 8006292:	ae0c      	add	r6, sp, #48	; 0x30
 8006294:	f7fc fc0f 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006298:	492f      	ldr	r1, [pc, #188]	; (8006358 <_ZN21SettingScreenViewBaseC1Ev+0x3d4>)
 800629a:	f8c4 1290 	str.w	r1, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 800629e:	4630      	mov	r0, r6
 80062a0:	4649      	mov	r1, r9
        linespace = space;
 80062a2:	f8a4 5294 	strh.w	r5, [r4, #660]	; 0x294
        boundingArea = calculateBoundingArea();
 80062a6:	f00d ff13 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062aa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80062ae:	f504 7327 	add.w	r3, r4, #668	; 0x29c
 80062b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062b6:	f04f 0011 	mov.w	r0, #17
 80062ba:	f8ad 004c 	strh.w	r0, [sp, #76]	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2EV5));
 80062be:	a812      	add	r0, sp, #72	; 0x48
 80062c0:	4b23      	ldr	r3, [pc, #140]	; (8006350 <_ZN21SettingScreenViewBaseC1Ev+0x3cc>)
 80062c2:	9312      	str	r3, [sp, #72]	; 0x48
 80062c4:	4601      	mov	r1, r0
 80062c6:	4648      	mov	r0, r9
 80062c8:	f00e fa48 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    timeSetcontainer.add(textArea1);
 80062cc:	4649      	mov	r1, r9
 80062ce:	4640      	mov	r0, r8
 80062d0:	f009 f8dc 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3_1.setPosition(6, 54, 99, 37);
 80062d4:	2025      	movs	r0, #37	; 0x25
 80062d6:	2363      	movs	r3, #99	; 0x63
 80062d8:	9000      	str	r0, [sp, #0]
 80062da:	2236      	movs	r2, #54	; 0x36
 80062dc:	9807      	ldr	r0, [sp, #28]
 80062de:	2106      	movs	r1, #6
 80062e0:	f7fc fa4c 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80062e4:	4a1b      	ldr	r2, [pc, #108]	; (8006354 <_ZN21SettingScreenViewBaseC1Ev+0x3d0>)
    timeSetcontainer.add(box3_1);
 80062e6:	9907      	ldr	r1, [sp, #28]
 80062e8:	f8c4 22d0 	str.w	r2, [r4, #720]	; 0x2d0
 80062ec:	4640      	mov	r0, r8
 80062ee:	f009 f8cd 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(17, 58);
 80062f2:	223a      	movs	r2, #58	; 0x3a
 80062f4:	ee1b 0a90 	vmov	r0, s23
 80062f8:	2111      	movs	r1, #17
 80062fa:	f7fc fbdc 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80062fe:	4916      	ldr	r1, [pc, #88]	; (8006358 <_ZN21SettingScreenViewBaseC1Ev+0x3d4>)
 8006300:	f8c4 1304 	str.w	r1, [r4, #772]	; 0x304
        boundingArea = calculateBoundingArea();
 8006304:	4630      	mov	r0, r6
 8006306:	ee1b 1a90 	vmov	r1, s23
        linespace = space;
 800630a:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
        boundingArea = calculateBoundingArea();
 800630e:	f00d fedf 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006312:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006316:	f504 7344 	add.w	r3, r4, #784	; 0x310
 800631a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800631e:	e01d      	b.n	800635c <_ZN21SettingScreenViewBaseC1Ev+0x3d8>
 8006320:	0802a388 	.word	0x0802a388
 8006324:	080291e0 	.word	0x080291e0
 8006328:	0802a370 	.word	0x0802a370
 800632c:	08005e7d 	.word	0x08005e7d
 8006330:	ffb0cdff 	.word	0xffb0cdff
 8006334:	ff424242 	.word	0xff424242
 8006338:	ffa4a9ab 	.word	0xffa4a9ab
 800633c:	fffcfcfc 	.word	0xfffcfcfc
 8006340:	0006000a 	.word	0x0006000a
 8006344:	ff336699 	.word	0xff336699
 8006348:	ff46f059 	.word	0xff46f059
 800634c:	ff006699 	.word	0xff006699
 8006350:	080291d0 	.word	0x080291d0
 8006354:	ff4085ad 	.word	0xff4085ad
 8006358:	ff030303 	.word	0xff030303
 800635c:	4b7c      	ldr	r3, [pc, #496]	; (8006550 <_ZN21SettingScreenViewBaseC1Ev+0x5cc>)
 800635e:	9312      	str	r3, [sp, #72]	; 0x48
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J3IJ));
 8006360:	a812      	add	r0, sp, #72	; 0x48
 8006362:	2310      	movs	r3, #16
 8006364:	4601      	mov	r1, r0
 8006366:	ee1b 0a90 	vmov	r0, s23
 800636a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800636e:	f00e f9f5 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    timeSetcontainer.add(textArea1_1);
 8006372:	ee1b 1a90 	vmov	r1, s23
 8006376:	4640      	mov	r0, r8
 8006378:	f009 f888 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3_1_1.setPosition(6, 98, 99, 37);
 800637c:	2025      	movs	r0, #37	; 0x25
 800637e:	2363      	movs	r3, #99	; 0x63
 8006380:	9000      	str	r0, [sp, #0]
 8006382:	2262      	movs	r2, #98	; 0x62
 8006384:	9808      	ldr	r0, [sp, #32]
 8006386:	2106      	movs	r1, #6
 8006388:	f7fc f9f8 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800638c:	4a71      	ldr	r2, [pc, #452]	; (8006554 <_ZN21SettingScreenViewBaseC1Ev+0x5d0>)
    timeSetcontainer.add(box3_1_1);
 800638e:	9908      	ldr	r1, [sp, #32]
 8006390:	f8c4 2344 	str.w	r2, [r4, #836]	; 0x344
 8006394:	4640      	mov	r0, r8
 8006396:	f009 f879 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1_1.setXY(14, 104);
 800639a:	2268      	movs	r2, #104	; 0x68
 800639c:	4638      	mov	r0, r7
 800639e:	210e      	movs	r1, #14
 80063a0:	f7fc fb89 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80063a4:	496c      	ldr	r1, [pc, #432]	; (8006558 <_ZN21SettingScreenViewBaseC1Ev+0x5d4>)
 80063a6:	f8c4 1378 	str.w	r1, [r4, #888]	; 0x378
        boundingArea = calculateBoundingArea();
 80063aa:	4630      	mov	r0, r6
 80063ac:	4639      	mov	r1, r7
        linespace = space;
 80063ae:	f8a4 537c 	strh.w	r5, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 80063b2:	f00d fe8d 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063b6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80063ba:	f504 7361 	add.w	r3, r4, #900	; 0x384
 80063be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063c2:	f04f 010f 	mov.w	r1, #15
 80063c6:	4b62      	ldr	r3, [pc, #392]	; (8006550 <_ZN21SettingScreenViewBaseC1Ev+0x5cc>)
 80063c8:	f8ad 104c 	strh.w	r1, [sp, #76]	; 0x4c
    textArea1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QPO6));
 80063cc:	4638      	mov	r0, r7
 80063ce:	a912      	add	r1, sp, #72	; 0x48
 80063d0:	9312      	str	r3, [sp, #72]	; 0x48
 80063d2:	f00e f9c3 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    timeSetcontainer.add(textArea1_1_1);
 80063d6:	4639      	mov	r1, r7
 80063d8:	4640      	mov	r0, r8
 80063da:	f009 f857 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    hourContainer1.setPosition(108, 0, 110, 46);
 80063de:	222e      	movs	r2, #46	; 0x2e
 80063e0:	2728      	movs	r7, #40	; 0x28
 80063e2:	ee18 0a10 	vmov	r0, s16
 80063e6:	9200      	str	r2, [sp, #0]
 80063e8:	236e      	movs	r3, #110	; 0x6e
 80063ea:	462a      	mov	r2, r5
 80063ec:	216c      	movs	r1, #108	; 0x6c
 80063ee:	f7fc f9c5 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80063f2:	2322      	movs	r3, #34	; 0x22
 80063f4:	462a      	mov	r2, r5
 80063f6:	4629      	mov	r1, r5
 80063f8:	f504 707c 	add.w	r0, r4, #1008	; 0x3f0
 80063fc:	9700      	str	r7, [sp, #0]
 80063fe:	f7fc f9bd 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    nextArrowButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006402:	4b56      	ldr	r3, [pc, #344]	; (800655c <_ZN21SettingScreenViewBaseC1Ev+0x5d8>)
 8006404:	9300      	str	r3, [sp, #0]
 8006406:	f04f 0205 	mov.w	r2, #5
 800640a:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800640e:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8006412:	4650      	mov	r0, sl
 8006414:	4952      	ldr	r1, [pc, #328]	; (8006560 <_ZN21SettingScreenViewBaseC1Ev+0x5dc>)
 8006416:	f8a4 2420 	strh.w	r2, [r4, #1056]	; 0x420
 800641a:	4a52      	ldr	r2, [pc, #328]	; (8006564 <_ZN21SettingScreenViewBaseC1Ev+0x5e0>)
 800641c:	f7fe fca8 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    nextArrowButton.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID));
 8006420:	a912      	add	r1, sp, #72	; 0x48
 8006422:	460a      	mov	r2, r1
 8006424:	4650      	mov	r0, sl
 8006426:	f04f 0904 	mov.w	r9, #4
 800642a:	a911      	add	r1, sp, #68	; 0x44
 800642c:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
 8006430:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
 8006434:	f7fc fb4c 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8006438:	4a4b      	ldr	r2, [pc, #300]	; (8006568 <_ZN21SettingScreenViewBaseC1Ev+0x5e4>)
 800643a:	f8c4 243c 	str.w	r2, [r4, #1084]	; 0x43c
    nextArrowButton.setPosition(76, 6, 34, 40);
 800643e:	2322      	movs	r3, #34	; 0x22
 8006440:	4650      	mov	r0, sl
 8006442:	2206      	movs	r2, #6
 8006444:	214c      	movs	r1, #76	; 0x4c
 8006446:	9700      	str	r7, [sp, #0]
 8006448:	f7fc f998 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800644c:	9a03      	ldr	r2, [sp, #12]
 800644e:	f8c4 23ec 	str.w	r2, [r4, #1004]	; 0x3ec
    hourContainer1.add(nextArrowButton);
 8006452:	4651      	mov	r1, sl
 8006454:	ee18 0a10 	vmov	r0, s16
 8006458:	f009 f818 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800645c:	2322      	movs	r3, #34	; 0x22
 800645e:	462a      	mov	r2, r5
 8006460:	4629      	mov	r1, r5
 8006462:	f504 6093 	add.w	r0, r4, #1176	; 0x498
 8006466:	9700      	str	r7, [sp, #0]
 8006468:	f7fc f988 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    backArrowButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800646c:	4b3b      	ldr	r3, [pc, #236]	; (800655c <_ZN21SettingScreenViewBaseC1Ev+0x5d8>)
 800646e:	9300      	str	r3, [sp, #0]
 8006470:	f04f 0205 	mov.w	r2, #5
 8006474:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006478:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800647c:	4938      	ldr	r1, [pc, #224]	; (8006560 <_ZN21SettingScreenViewBaseC1Ev+0x5dc>)
 800647e:	f8a4 24c8 	strh.w	r2, [r4, #1224]	; 0x4c8
 8006482:	ee1c 0a10 	vmov	r0, s24
 8006486:	4a37      	ldr	r2, [pc, #220]	; (8006564 <_ZN21SettingScreenViewBaseC1Ev+0x5e0>)
 8006488:	f7fe fc72 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 800648c:	f04f 0a03 	mov.w	sl, #3
    backArrowButton.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
 8006490:	ee1c 0a10 	vmov	r0, s24
 8006494:	aa12      	add	r2, sp, #72	; 0x48
 8006496:	a911      	add	r1, sp, #68	; 0x44
 8006498:	f8ad a044 	strh.w	sl, [sp, #68]	; 0x44
 800649c:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
 80064a0:	f7fc fb16 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80064a4:	4b31      	ldr	r3, [pc, #196]	; (800656c <_ZN21SettingScreenViewBaseC1Ev+0x5e8>)
 80064a6:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
    backArrowButton.setPosition(0, 6, 34, 40);
 80064aa:	2206      	movs	r2, #6
 80064ac:	ee1c 0a10 	vmov	r0, s24
 80064b0:	2322      	movs	r3, #34	; 0x22
 80064b2:	4629      	mov	r1, r5
 80064b4:	9700      	str	r7, [sp, #0]
 80064b6:	f7fc f961 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80064ba:	9b03      	ldr	r3, [sp, #12]
 80064bc:	f8c4 3494 	str.w	r3, [r4, #1172]	; 0x494
    hourContainer1.add(backArrowButton);
 80064c0:	ee1c 1a10 	vmov	r1, s24
 80064c4:	ee18 0a10 	vmov	r0, s16
 80064c8:	f008 ffe0 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(34, 10, 42, 32);
 80064cc:	2320      	movs	r3, #32
 80064ce:	220a      	movs	r2, #10
 80064d0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80064d2:	9300      	str	r3, [sp, #0]
 80064d4:	2122      	movs	r1, #34	; 0x22
 80064d6:	232a      	movs	r3, #42	; 0x2a
 80064d8:	f7fc f950 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80064dc:	f04f 33ff 	mov.w	r3, #4294967295
    hourContainer1.add(box2);
 80064e0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80064e2:	f8c4 3534 	str.w	r3, [r4, #1332]	; 0x534
 80064e6:	ee18 0a10 	vmov	r0, s16
 80064ea:	f008 ffcf 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    digitHourArea1.setPosition(34, 12, 42, 30);
 80064ee:	231e      	movs	r3, #30
 80064f0:	220c      	movs	r2, #12
 80064f2:	ee1c 0a90 	vmov	r0, s25
 80064f6:	9300      	str	r3, [sp, #0]
 80064f8:	2122      	movs	r1, #34	; 0x22
 80064fa:	232a      	movs	r3, #42	; 0x2a
 80064fc:	f7fc f93e 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8006500:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006504:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
        boundingArea = calculateBoundingArea();
 8006508:	f8d4 3538 	ldr.w	r3, [r4, #1336]	; 0x538
        linespace = space;
 800650c:	f8a4 556c 	strh.w	r5, [r4, #1388]	; 0x56c
        boundingArea = calculateBoundingArea();
 8006510:	4630      	mov	r0, r6
 8006512:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006516:	ee1c 1a90 	vmov	r1, s25
 800651a:	4798      	blx	r3
 800651c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006520:	f204 5374 	addw	r3, r4, #1396	; 0x574
 8006524:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006528:	4b11      	ldr	r3, [pc, #68]	; (8006570 <_ZN21SettingScreenViewBaseC1Ev+0x5ec>)
 800652a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(digitHourArea1Buffer, DIGITHOURAREA1_SIZE, "%s", touchgfx::TypedText(T_HOUR_WILDCARD1).getText());
 800652c:	f504 6631 	add.w	r6, r4, #2832	; 0xb10
 8006530:	b92b      	cbnz	r3, 800653e <_ZN21SettingScreenViewBaseC1Ev+0x5ba>
 8006532:	4b10      	ldr	r3, [pc, #64]	; (8006574 <_ZN21SettingScreenViewBaseC1Ev+0x5f0>)
 8006534:	4a10      	ldr	r2, [pc, #64]	; (8006578 <_ZN21SettingScreenViewBaseC1Ev+0x5f4>)
 8006536:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006538:	4810      	ldr	r0, [pc, #64]	; (800657c <_ZN21SettingScreenViewBaseC1Ev+0x5f8>)
 800653a:	f020 ffb9 	bl	80274b0 <__assert_func>
 800653e:	4b10      	ldr	r3, [pc, #64]	; (8006580 <_ZN21SettingScreenViewBaseC1Ev+0x5fc>)
 8006540:	881b      	ldrh	r3, [r3, #0]
 8006542:	2b14      	cmp	r3, #20
 8006544:	d820      	bhi.n	8006588 <_ZN21SettingScreenViewBaseC1Ev+0x604>
 8006546:	4b0f      	ldr	r3, [pc, #60]	; (8006584 <_ZN21SettingScreenViewBaseC1Ev+0x600>)
 8006548:	4a0b      	ldr	r2, [pc, #44]	; (8006578 <_ZN21SettingScreenViewBaseC1Ev+0x5f4>)
 800654a:	21af      	movs	r1, #175	; 0xaf
 800654c:	e7f4      	b.n	8006538 <_ZN21SettingScreenViewBaseC1Ev+0x5b4>
 800654e:	bf00      	nop
 8006550:	080291d0 	.word	0x080291d0
 8006554:	ff4085ad 	.word	0xff4085ad
 8006558:	ff030303 	.word	0xff030303
 800655c:	ff336699 	.word	0xff336699
 8006560:	ff006699 	.word	0xff006699
 8006564:	ff0099cc 	.word	0xff0099cc
 8006568:	00050007 	.word	0x00050007
 800656c:	00050006 	.word	0x00050006
 8006570:	20014c7c 	.word	0x20014c7c
 8006574:	08029068 	.word	0x08029068
 8006578:	080290aa 	.word	0x080290aa
 800657c:	080290d8 	.word	0x080290d8
 8006580:	20014c80 	.word	0x20014c80
 8006584:	0802911f 	.word	0x0802911f
        return texts->getText(typedTextId);
 8006588:	4bd9      	ldr	r3, [pc, #868]	; (80068f0 <_ZN21SettingScreenViewBaseC1Ev+0x96c>)
 800658a:	2114      	movs	r1, #20
 800658c:	6818      	ldr	r0, [r3, #0]
 800658e:	f000 fc11 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8006592:	4ad8      	ldr	r2, [pc, #864]	; (80068f4 <_ZN21SettingScreenViewBaseC1Ev+0x970>)
 8006594:	4603      	mov	r3, r0
 8006596:	210a      	movs	r1, #10
 8006598:	4630      	mov	r0, r6
 800659a:	f013 f94e 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800659e:	f04f 011e 	mov.w	r1, #30
 80065a2:	4bd5      	ldr	r3, [pc, #852]	; (80068f8 <_ZN21SettingScreenViewBaseC1Ev+0x974>)
        wc1 = value;
 80065a4:	f8c4 6580 	str.w	r6, [r4, #1408]	; 0x580
    digitHourArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XO20));
 80065a8:	ee1c 0a90 	vmov	r0, s25
 80065ac:	f8ad 104c 	strh.w	r1, [sp, #76]	; 0x4c
 80065b0:	a912      	add	r1, sp, #72	; 0x48
 80065b2:	9312      	str	r3, [sp, #72]	; 0x48
 80065b4:	f00e f8d2 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    hourContainer1.add(digitHourArea1);
 80065b8:	ee1c 1a90 	vmov	r1, s25
 80065bc:	ee18 0a10 	vmov	r0, s16
 80065c0:	f008 ff64 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minuteContainer.setPosition(108, 46, 110, 42);
 80065c4:	262a      	movs	r6, #42	; 0x2a
    timeSetcontainer.add(hourContainer1);
 80065c6:	ee18 1a10 	vmov	r1, s16
 80065ca:	4640      	mov	r0, r8
 80065cc:	f008 ff5e 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    minuteContainer.setPosition(108, 46, 110, 42);
 80065d0:	ee18 0a90 	vmov	r0, s17
 80065d4:	236e      	movs	r3, #110	; 0x6e
 80065d6:	222e      	movs	r2, #46	; 0x2e
 80065d8:	216c      	movs	r1, #108	; 0x6c
 80065da:	9600      	str	r6, [sp, #0]
 80065dc:	f7fc f8ce 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80065e0:	2322      	movs	r3, #34	; 0x22
 80065e2:	462a      	mov	r2, r5
 80065e4:	4629      	mov	r1, r5
 80065e6:	f204 50e4 	addw	r0, r4, #1508	; 0x5e4
 80065ea:	9700      	str	r7, [sp, #0]
 80065ec:	f7fc f8c6 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    minutePlusButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80065f0:	4bc2      	ldr	r3, [pc, #776]	; (80068fc <_ZN21SettingScreenViewBaseC1Ev+0x978>)
 80065f2:	9300      	str	r3, [sp, #0]
 80065f4:	f04f 0105 	mov.w	r1, #5
 80065f8:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80065fc:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8006600:	4abf      	ldr	r2, [pc, #764]	; (8006900 <_ZN21SettingScreenViewBaseC1Ev+0x97c>)
 8006602:	f8a4 1614 	strh.w	r1, [r4, #1556]	; 0x614
 8006606:	ee1d 0a10 	vmov	r0, s26
 800660a:	49be      	ldr	r1, [pc, #760]	; (8006904 <_ZN21SettingScreenViewBaseC1Ev+0x980>)
 800660c:	f7fe fbb0 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    minutePlusButton.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID));
 8006610:	ee1d 0a10 	vmov	r0, s26
 8006614:	aa12      	add	r2, sp, #72	; 0x48
 8006616:	a911      	add	r1, sp, #68	; 0x44
 8006618:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
 800661c:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
 8006620:	f7fc fa56 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8006624:	49b8      	ldr	r1, [pc, #736]	; (8006908 <_ZN21SettingScreenViewBaseC1Ev+0x984>)
 8006626:	f8c4 1630 	str.w	r1, [r4, #1584]	; 0x630
    minutePlusButton.setPosition(76, 6, 34, 40);
 800662a:	2322      	movs	r3, #34	; 0x22
 800662c:	ee1d 0a10 	vmov	r0, s26
 8006630:	2206      	movs	r2, #6
 8006632:	214c      	movs	r1, #76	; 0x4c
 8006634:	9700      	str	r7, [sp, #0]
 8006636:	f7fc f8a1 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800663a:	9a03      	ldr	r2, [sp, #12]
 800663c:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
    minuteContainer.add(minutePlusButton);
 8006640:	ee1d 1a10 	vmov	r1, s26
 8006644:	ee18 0a90 	vmov	r0, s17
 8006648:	f008 ff20 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800664c:	2322      	movs	r3, #34	; 0x22
 800664e:	462a      	mov	r2, r5
 8006650:	4629      	mov	r1, r5
 8006652:	f204 608c 	addw	r0, r4, #1676	; 0x68c
 8006656:	9700      	str	r7, [sp, #0]
 8006658:	f7fc f890 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    minuteMinusButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800665c:	4ba7      	ldr	r3, [pc, #668]	; (80068fc <_ZN21SettingScreenViewBaseC1Ev+0x978>)
 800665e:	9300      	str	r3, [sp, #0]
 8006660:	f04f 0c05 	mov.w	ip, #5
 8006664:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006668:	f8a4 c6bc 	strh.w	ip, [r4, #1724]	; 0x6bc
 800666c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8006670:	4aa3      	ldr	r2, [pc, #652]	; (8006900 <_ZN21SettingScreenViewBaseC1Ev+0x97c>)
 8006672:	49a4      	ldr	r1, [pc, #656]	; (8006904 <_ZN21SettingScreenViewBaseC1Ev+0x980>)
 8006674:	ee1d 0a90 	vmov	r0, s27
 8006678:	f7fe fb7a 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    minuteMinusButton.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
 800667c:	f10d 0e44 	add.w	lr, sp, #68	; 0x44
 8006680:	4671      	mov	r1, lr
 8006682:	ee1d 0a90 	vmov	r0, s27
 8006686:	aa12      	add	r2, sp, #72	; 0x48
 8006688:	f8ad a044 	strh.w	sl, [sp, #68]	; 0x44
 800668c:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
 8006690:	f7fc fa1e 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8006694:	4a9d      	ldr	r2, [pc, #628]	; (800690c <_ZN21SettingScreenViewBaseC1Ev+0x988>)
 8006696:	f8c4 26d8 	str.w	r2, [r4, #1752]	; 0x6d8
    minuteMinusButton.setPosition(0, 6, 34, 40);
 800669a:	2322      	movs	r3, #34	; 0x22
 800669c:	2206      	movs	r2, #6
 800669e:	ee1d 0a90 	vmov	r0, s27
 80066a2:	4629      	mov	r1, r5
 80066a4:	9700      	str	r7, [sp, #0]
 80066a6:	f7fc f869 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80066aa:	9803      	ldr	r0, [sp, #12]
 80066ac:	f8c4 0688 	str.w	r0, [r4, #1672]	; 0x688
    minuteContainer.add(minuteMinusButton);
 80066b0:	ee1d 1a90 	vmov	r1, s27
 80066b4:	ee18 0a90 	vmov	r0, s17
 80066b8:	f008 fee8 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2_1.setPosition(34, 10, 42, 32);
 80066bc:	2020      	movs	r0, #32
 80066be:	4633      	mov	r3, r6
 80066c0:	220a      	movs	r2, #10
 80066c2:	9000      	str	r0, [sp, #0]
 80066c4:	2122      	movs	r1, #34	; 0x22
 80066c6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80066c8:	f7fc f858 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80066cc:	f04f 30ff 	mov.w	r0, #4294967295
    minuteContainer.add(box2_1);
 80066d0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80066d2:	f8c4 0728 	str.w	r0, [r4, #1832]	; 0x728
 80066d6:	ee18 0a90 	vmov	r0, s17
 80066da:	f008 fed7 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    digitMinuteArea1.setPosition(34, 12, 42, 30);
 80066de:	201e      	movs	r0, #30
 80066e0:	9000      	str	r0, [sp, #0]
 80066e2:	4633      	mov	r3, r6
 80066e4:	ee1f 0a90 	vmov	r0, s31
 80066e8:	220c      	movs	r2, #12
 80066ea:	2122      	movs	r1, #34	; 0x22
 80066ec:	f7fc f846 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80066f0:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80066f4:	f8c4 075c 	str.w	r0, [r4, #1884]	; 0x75c
        boundingArea = calculateBoundingArea();
 80066f8:	f04f 30ff 	mov.w	r0, #4294967295
 80066fc:	f8c4 076c 	str.w	r0, [r4, #1900]	; 0x76c
    Unicode::snprintf(digitMinuteArea1Buffer, DIGITMINUTEAREA1_SIZE, "%s", touchgfx::TypedText(T_MINUTE_WILDCARD1).getText());
 8006700:	f604 3024 	addw	r0, r4, #2852	; 0xb24
 8006704:	9006      	str	r0, [sp, #24]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006706:	4882      	ldr	r0, [pc, #520]	; (8006910 <_ZN21SettingScreenViewBaseC1Ev+0x98c>)
        linespace = space;
 8006708:	f8a4 5760 	strh.w	r5, [r4, #1888]	; 0x760
 800670c:	6803      	ldr	r3, [r0, #0]
        boundingArea = calculateBoundingArea();
 800670e:	f8c4 5768 	str.w	r5, [r4, #1896]	; 0x768
 8006712:	f8c4 5770 	str.w	r5, [r4, #1904]	; 0x770
 8006716:	2b00      	cmp	r3, #0
 8006718:	f43f af0b 	beq.w	8006532 <_ZN21SettingScreenViewBaseC1Ev+0x5ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800671c:	4a7d      	ldr	r2, [pc, #500]	; (8006914 <_ZN21SettingScreenViewBaseC1Ev+0x990>)
 800671e:	8813      	ldrh	r3, [r2, #0]
 8006720:	2b18      	cmp	r3, #24
 8006722:	f67f af10 	bls.w	8006546 <_ZN21SettingScreenViewBaseC1Ev+0x5c2>
        return texts->getText(typedTextId);
 8006726:	4872      	ldr	r0, [pc, #456]	; (80068f0 <_ZN21SettingScreenViewBaseC1Ev+0x96c>)
 8006728:	2118      	movs	r1, #24
 800672a:	6800      	ldr	r0, [r0, #0]
 800672c:	f000 fb42 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8006730:	4a70      	ldr	r2, [pc, #448]	; (80068f4 <_ZN21SettingScreenViewBaseC1Ev+0x970>)
 8006732:	4603      	mov	r3, r0
 8006734:	210a      	movs	r1, #10
 8006736:	9806      	ldr	r0, [sp, #24]
 8006738:	f013 f87f 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    digitMinuteArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJ3C));
 800673c:	f10d 0e48 	add.w	lr, sp, #72	; 0x48
 8006740:	9a06      	ldr	r2, [sp, #24]
 8006742:	f8c4 2774 	str.w	r2, [r4, #1908]	; 0x774
        : typedTextId(id)
 8006746:	2317      	movs	r3, #23
 8006748:	4a6b      	ldr	r2, [pc, #428]	; (80068f8 <_ZN21SettingScreenViewBaseC1Ev+0x974>)
 800674a:	9212      	str	r2, [sp, #72]	; 0x48
 800674c:	4671      	mov	r1, lr
 800674e:	ee1f 0a90 	vmov	r0, s31
 8006752:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8006756:	f00e f801 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    minuteContainer.add(digitMinuteArea1);
 800675a:	ee1f 1a90 	vmov	r1, s31
 800675e:	ee18 0a90 	vmov	r0, s17
 8006762:	f008 fe93 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    timeSetcontainer.add(minuteContainer);
 8006766:	ee18 1a90 	vmov	r1, s17
 800676a:	4640      	mov	r0, r8
 800676c:	f008 fe8e 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    secondContainer.setPosition(108, 92, 110, 46);
 8006770:	f04f 0e2e 	mov.w	lr, #46	; 0x2e
 8006774:	f8cd e000 	str.w	lr, [sp]
 8006778:	ee19 0a10 	vmov	r0, s18
 800677c:	236e      	movs	r3, #110	; 0x6e
 800677e:	225c      	movs	r2, #92	; 0x5c
 8006780:	216c      	movs	r1, #108	; 0x6c
 8006782:	f7fb fffb 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006786:	9700      	str	r7, [sp, #0]
 8006788:	2322      	movs	r3, #34	; 0x22
 800678a:	462a      	mov	r2, r5
 800678c:	4629      	mov	r1, r5
 800678e:	f504 60fb 	add.w	r0, r4, #2008	; 0x7d8
 8006792:	f7fb fff3 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    secondPlusButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006796:	4b59      	ldr	r3, [pc, #356]	; (80068fc <_ZN21SettingScreenViewBaseC1Ev+0x978>)
 8006798:	9300      	str	r3, [sp, #0]
 800679a:	f04f 0c05 	mov.w	ip, #5
 800679e:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80067a2:	f8a4 c808 	strh.w	ip, [r4, #2056]	; 0x808
 80067a6:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80067aa:	4a55      	ldr	r2, [pc, #340]	; (8006900 <_ZN21SettingScreenViewBaseC1Ev+0x97c>)
 80067ac:	4955      	ldr	r1, [pc, #340]	; (8006904 <_ZN21SettingScreenViewBaseC1Ev+0x980>)
 80067ae:	ee1e 0a10 	vmov	r0, s28
 80067b2:	f7fe fadd 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    secondPlusButton.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_NEXT_ARROW_32_ID));
 80067b6:	f10d 0e48 	add.w	lr, sp, #72	; 0x48
 80067ba:	4672      	mov	r2, lr
 80067bc:	f10d 0e44 	add.w	lr, sp, #68	; 0x44
 80067c0:	4671      	mov	r1, lr
 80067c2:	ee1e 0a10 	vmov	r0, s28
 80067c6:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
 80067ca:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
 80067ce:	f7fc f97f 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80067d2:	494d      	ldr	r1, [pc, #308]	; (8006908 <_ZN21SettingScreenViewBaseC1Ev+0x984>)
 80067d4:	f8c4 1824 	str.w	r1, [r4, #2084]	; 0x824
    secondPlusButton.setPosition(76, 6, 34, 40);
 80067d8:	2206      	movs	r2, #6
 80067da:	ee1e 0a10 	vmov	r0, s28
 80067de:	9700      	str	r7, [sp, #0]
 80067e0:	2322      	movs	r3, #34	; 0x22
 80067e2:	214c      	movs	r1, #76	; 0x4c
 80067e4:	f7fb ffca 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80067e8:	9b03      	ldr	r3, [sp, #12]
 80067ea:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
    secondContainer.add(secondPlusButton);
 80067ee:	ee1e 1a10 	vmov	r1, s28
 80067f2:	ee19 0a10 	vmov	r0, s18
 80067f6:	f008 fe49 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80067fa:	9700      	str	r7, [sp, #0]
 80067fc:	2322      	movs	r3, #34	; 0x22
 80067fe:	462a      	mov	r2, r5
 8006800:	4629      	mov	r1, r5
 8006802:	f504 6008 	add.w	r0, r4, #2176	; 0x880
 8006806:	f7fb ffb9 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    secondMinusButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800680a:	4b3c      	ldr	r3, [pc, #240]	; (80068fc <_ZN21SettingScreenViewBaseC1Ev+0x978>)
 800680c:	9300      	str	r3, [sp, #0]
 800680e:	f04f 0c05 	mov.w	ip, #5
 8006812:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006816:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800681a:	4a39      	ldr	r2, [pc, #228]	; (8006900 <_ZN21SettingScreenViewBaseC1Ev+0x97c>)
 800681c:	4939      	ldr	r1, [pc, #228]	; (8006904 <_ZN21SettingScreenViewBaseC1Ev+0x980>)
 800681e:	f8a4 c8b0 	strh.w	ip, [r4, #2224]	; 0x8b0
 8006822:	ee1e 0a90 	vmov	r0, s29
 8006826:	f7fe faa3 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    secondMinusButton.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
 800682a:	f10d 0c48 	add.w	ip, sp, #72	; 0x48
 800682e:	4662      	mov	r2, ip
 8006830:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8006834:	4661      	mov	r1, ip
 8006836:	ee1e 0a90 	vmov	r0, s29
 800683a:	f8ad a044 	strh.w	sl, [sp, #68]	; 0x44
 800683e:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
 8006842:	f7fc f945 	bl	8002ad0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8006846:	4931      	ldr	r1, [pc, #196]	; (800690c <_ZN21SettingScreenViewBaseC1Ev+0x988>)
 8006848:	f8c4 18cc 	str.w	r1, [r4, #2252]	; 0x8cc
    secondMinusButton.setPosition(0, 6, 34, 40);
 800684c:	2322      	movs	r3, #34	; 0x22
 800684e:	2206      	movs	r2, #6
 8006850:	ee1e 0a90 	vmov	r0, s29
 8006854:	9700      	str	r7, [sp, #0]
 8006856:	4629      	mov	r1, r5
 8006858:	f7fb ff90 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 800685c:	9f03      	ldr	r7, [sp, #12]
 800685e:	f8c4 787c 	str.w	r7, [r4, #2172]	; 0x87c
    secondContainer.add(secondMinusButton);
 8006862:	ee1e 1a90 	vmov	r1, s29
 8006866:	ee19 0a10 	vmov	r0, s18
 800686a:	f008 fe0f 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2_1_1.setPosition(34, 10, 42, 32);
 800686e:	f04f 0c20 	mov.w	ip, #32
 8006872:	4633      	mov	r3, r6
 8006874:	220a      	movs	r2, #10
 8006876:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006878:	f8cd c000 	str.w	ip, [sp]
 800687c:	2122      	movs	r1, #34	; 0x22
 800687e:	f7fb ff7d 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006882:	f04f 3cff 	mov.w	ip, #4294967295
    secondContainer.add(box2_1_1);
 8006886:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006888:	f8c4 c91c 	str.w	ip, [r4, #2332]	; 0x91c
 800688c:	ee19 0a10 	vmov	r0, s18
 8006890:	f008 fdfc 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    digitSecondArea1.setPosition(34, 12, 42, 30);
 8006894:	f04f 0c1e 	mov.w	ip, #30
 8006898:	4633      	mov	r3, r6
 800689a:	2122      	movs	r1, #34	; 0x22
 800689c:	9804      	ldr	r0, [sp, #16]
 800689e:	f8cd c000 	str.w	ip, [sp]
 80068a2:	220c      	movs	r2, #12
 80068a4:	f7fb ff6a 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068a8:	4919      	ldr	r1, [pc, #100]	; (8006910 <_ZN21SettingScreenViewBaseC1Ev+0x98c>)
        linespace = space;
 80068aa:	f8a4 5954 	strh.w	r5, [r4, #2388]	; 0x954
        this->color = color;
 80068ae:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
 80068b2:	680b      	ldr	r3, [r1, #0]
 80068b4:	f8c4 6950 	str.w	r6, [r4, #2384]	; 0x950
        boundingArea = calculateBoundingArea();
 80068b8:	f04f 36ff 	mov.w	r6, #4294967295
 80068bc:	f8c4 6960 	str.w	r6, [r4, #2400]	; 0x960
 80068c0:	f8c4 595c 	str.w	r5, [r4, #2396]	; 0x95c
 80068c4:	f8c4 5964 	str.w	r5, [r4, #2404]	; 0x964
    Unicode::snprintf(digitSecondArea1Buffer, DIGITSECONDAREA1_SIZE, "%s", touchgfx::TypedText(T_SECOND_WILDCARD1).getText());
 80068c8:	f604 3638 	addw	r6, r4, #2872	; 0xb38
 80068cc:	2b00      	cmp	r3, #0
 80068ce:	f43f ae30 	beq.w	8006532 <_ZN21SettingScreenViewBaseC1Ev+0x5ae>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068d2:	4910      	ldr	r1, [pc, #64]	; (8006914 <_ZN21SettingScreenViewBaseC1Ev+0x990>)
 80068d4:	880b      	ldrh	r3, [r1, #0]
 80068d6:	2b15      	cmp	r3, #21
 80068d8:	f67f ae35 	bls.w	8006546 <_ZN21SettingScreenViewBaseC1Ev+0x5c2>
        return texts->getText(typedTextId);
 80068dc:	4804      	ldr	r0, [pc, #16]	; (80068f0 <_ZN21SettingScreenViewBaseC1Ev+0x96c>)
        : typedTextId(id)
 80068de:	4f06      	ldr	r7, [pc, #24]	; (80068f8 <_ZN21SettingScreenViewBaseC1Ev+0x974>)
        return texts->getText(typedTextId);
 80068e0:	6800      	ldr	r0, [r0, #0]
 80068e2:	2115      	movs	r1, #21
 80068e4:	f000 fa66 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80068e8:	4a02      	ldr	r2, [pc, #8]	; (80068f4 <_ZN21SettingScreenViewBaseC1Ev+0x970>)
 80068ea:	4603      	mov	r3, r0
 80068ec:	210a      	movs	r1, #10
 80068ee:	e013      	b.n	8006918 <_ZN21SettingScreenViewBaseC1Ev+0x994>
 80068f0:	20014c88 	.word	0x20014c88
 80068f4:	0802915d 	.word	0x0802915d
 80068f8:	080291d0 	.word	0x080291d0
 80068fc:	ff336699 	.word	0xff336699
 8006900:	ff0099cc 	.word	0xff0099cc
 8006904:	ff006699 	.word	0xff006699
 8006908:	00050007 	.word	0x00050007
 800690c:	00050006 	.word	0x00050006
 8006910:	20014c7c 	.word	0x20014c7c
 8006914:	20014c80 	.word	0x20014c80
 8006918:	4630      	mov	r0, r6
 800691a:	f012 ff8e 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800691e:	2316      	movs	r3, #22
    digitSecondArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Z01));
 8006920:	9804      	ldr	r0, [sp, #16]
 8006922:	f8c4 6968 	str.w	r6, [r4, #2408]	; 0x968
 8006926:	a912      	add	r1, sp, #72	; 0x48
 8006928:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800692c:	9712      	str	r7, [sp, #72]	; 0x48
 800692e:	f00d ff15 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    secondContainer.add(digitSecondArea1);
 8006932:	9904      	ldr	r1, [sp, #16]
 8006934:	ee19 0a10 	vmov	r0, s18
 8006938:	f008 fda8 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    timeSetcontainer.add(secondContainer);
 800693c:	ee19 1a10 	vmov	r1, s18
 8006940:	4640      	mov	r0, r8
 8006942:	f008 fda3 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_BG_ID), 110, 83);
 8006946:	2353      	movs	r3, #83	; 0x53
 8006948:	226e      	movs	r2, #110	; 0x6e
 800694a:	a912      	add	r1, sp, #72	; 0x48
 800694c:	4658      	mov	r0, fp
 800694e:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
 8006952:	f008 fc60 	bl	800f216 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(255, 161, 161));
 8006956:	4658      	mov	r0, fp
 8006958:	4942      	ldr	r1, [pc, #264]	; (8006a64 <_ZN21SettingScreenViewBaseC1Ev+0xae0>)
 800695a:	f008 fc49 	bl	800f1f0 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(166);
 800695e:	21a6      	movs	r1, #166	; 0xa6
 8006960:	4658      	mov	r0, fp
 8006962:	f008 fc49 	bl	800f1f8 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
 8006966:	2619      	movs	r6, #25
    modalWindow1.hide();
 8006968:	4658      	mov	r0, fp
 800696a:	f008 fc34 	bl	800f1d6 <_ZN8touchgfx11ModalWindow4hideEv>
 800696e:	462a      	mov	r2, r5
 8006970:	4629      	mov	r1, r5
 8006972:	f504 6025 	add.w	r0, r4, #2640	; 0xa50
 8006976:	9600      	str	r6, [sp, #0]
 8006978:	234b      	movs	r3, #75	; 0x4b
 800697a:	f7fb feff 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    closePopUpButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 82, 1), touchgfx::Color::getColorFromRGB(237, 237, 237), touchgfx::Color::getColorFromRGB(81, 88, 94), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800697e:	4b3a      	ldr	r3, [pc, #232]	; (8006a68 <_ZN21SettingScreenViewBaseC1Ev+0xae4>)
 8006980:	4a3a      	ldr	r2, [pc, #232]	; (8006a6c <_ZN21SettingScreenViewBaseC1Ev+0xae8>)
 8006982:	9300      	str	r3, [sp, #0]
 8006984:	ee1a 0a10 	vmov	r0, s20
 8006988:	4b39      	ldr	r3, [pc, #228]	; (8006a70 <_ZN21SettingScreenViewBaseC1Ev+0xaec>)
 800698a:	493a      	ldr	r1, [pc, #232]	; (8006a74 <_ZN21SettingScreenViewBaseC1Ev+0xaf0>)
 800698c:	f8a4 aa80 	strh.w	sl, [r4, #2688]	; 0xa80
 8006990:	f7fe f9ee 	bl	8004d70 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    closePopUpButton.setText(TypedText(T___SINGLEUSE_J42C));
 8006994:	ee1a 0a10 	vmov	r0, s20
 8006998:	230e      	movs	r3, #14
 800699a:	a912      	add	r1, sp, #72	; 0x48
 800699c:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80069a0:	9712      	str	r7, [sp, #72]	; 0x48
 80069a2:	f7ff fac9 	bl	8005f38 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80069a6:	4629      	mov	r1, r5
 80069a8:	2205      	movs	r2, #5
 80069aa:	f604 2094 	addw	r0, r4, #2708	; 0xa94
 80069ae:	9600      	str	r6, [sp, #0]
 80069b0:	234b      	movs	r3, #75	; 0x4b
 80069b2:	f7fb fee3 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80069b6:	f04f 33ff 	mov.w	r3, #4294967295
 80069ba:	f8c4 3adc 	str.w	r3, [r4, #2780]	; 0xadc
        colorPressed = newColorPressed;
 80069be:	4b2e      	ldr	r3, [pc, #184]	; (8006a78 <_ZN21SettingScreenViewBaseC1Ev+0xaf4>)
 80069c0:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
        handlePressedUpdated();
 80069c4:	ee1a 0a10 	vmov	r0, s20
 80069c8:	f7fb ff55 	bl	8002876 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    closePopUpButton.setPosition(15, 48, 75, 25);
 80069cc:	2230      	movs	r2, #48	; 0x30
 80069ce:	ee1a 0a10 	vmov	r0, s20
 80069d2:	9600      	str	r6, [sp, #0]
 80069d4:	234b      	movs	r3, #75	; 0x4b
 80069d6:	210f      	movs	r1, #15
 80069d8:	f7fb fed0 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80069dc:	9b03      	ldr	r3, [sp, #12]
 80069de:	f8c4 3a4c 	str.w	r3, [r4, #2636]	; 0xa4c
    modalWindow1.add(closePopUpButton);
 80069e2:	ee1a 1a10 	vmov	r1, s20
 80069e6:	4658      	mov	r0, fp
 80069e8:	f008 fbff 	bl	800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ICONS_OK_32_ID));
 80069ec:	ee1f 0a10 	vmov	r0, s30
 80069f0:	230c      	movs	r3, #12
 80069f2:	a912      	add	r1, sp, #72	; 0x48
 80069f4:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 80069f8:	f00e f8a2 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(36, 5, 32, 32);
 80069fc:	2320      	movs	r3, #32
 80069fe:	9300      	str	r3, [sp, #0]
 8006a00:	2205      	movs	r2, #5
 8006a02:	ee1f 0a10 	vmov	r0, s30
 8006a06:	2124      	movs	r1, #36	; 0x24
 8006a08:	f7fb feb8 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006a0c:	ee1f 0a10 	vmov	r0, s30
 8006a10:	4629      	mov	r1, r5
 8006a12:	f00d f866 	bl	8013ae2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    modalWindow1.add(scalableImage1);
 8006a16:	ee1f 1a10 	vmov	r1, s30
 8006a1a:	4658      	mov	r0, fp
 8006a1c:	f008 fbe5 	bl	800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8006a20:	1d20      	adds	r0, r4, #4
 8006a22:	ee1a 1a90 	vmov	r1, s21
 8006a26:	9003      	str	r0, [sp, #12]
 8006a28:	f008 fd30 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a2c:	9905      	ldr	r1, [sp, #20]
 8006a2e:	9803      	ldr	r0, [sp, #12]
 8006a30:	f008 fd2c 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a34:	ee1b 1a10 	vmov	r1, s22
 8006a38:	9803      	ldr	r0, [sp, #12]
 8006a3a:	f008 fd27 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a3e:	ee19 1a90 	vmov	r1, s19
 8006a42:	9803      	ldr	r0, [sp, #12]
 8006a44:	f008 fd22 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a48:	9803      	ldr	r0, [sp, #12]
 8006a4a:	4641      	mov	r1, r8
 8006a4c:	f008 fd1e 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a50:	9803      	ldr	r0, [sp, #12]
 8006a52:	4659      	mov	r1, fp
 8006a54:	f008 fd1a 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a58:	4620      	mov	r0, r4
 8006a5a:	b015      	add	sp, #84	; 0x54
 8006a5c:	ecbd 8b10 	vpop	{d8-d15}
 8006a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a64:	ffffa1a1 	.word	0xffffa1a1
 8006a68:	ff336699 	.word	0xff336699
 8006a6c:	ffededed 	.word	0xffededed
 8006a70:	ff51585e 	.word	0xff51585e
 8006a74:	ff005201 	.word	0xff005201
 8006a78:	ffc9c7c7 	.word	0xffc9c7c7

08006a7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006a7c:	4770      	bx	lr
	...

08006a80 <_Z23getFont_verdana_10_4bppv>:
{
 8006a80:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006a82:	4d16      	ldr	r5, [pc, #88]	; (8006adc <_Z23getFont_verdana_10_4bppv+0x5c>)
 8006a84:	782c      	ldrb	r4, [r5, #0]
 8006a86:	f3bf 8f5b 	dmb	ish
 8006a8a:	f014 0401 	ands.w	r4, r4, #1
{
 8006a8e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006a90:	d120      	bne.n	8006ad4 <_Z23getFont_verdana_10_4bppv+0x54>
 8006a92:	4628      	mov	r0, r5
 8006a94:	f020 fcdf 	bl	8027456 <__cxa_guard_acquire>
 8006a98:	b1e0      	cbz	r0, 8006ad4 <_Z23getFont_verdana_10_4bppv+0x54>
 8006a9a:	233f      	movs	r3, #63	; 0x3f
 8006a9c:	9307      	str	r3, [sp, #28]
 8006a9e:	4b10      	ldr	r3, [pc, #64]	; (8006ae0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8006aa0:	9306      	str	r3, [sp, #24]
 8006aa2:	4b10      	ldr	r3, [pc, #64]	; (8006ae4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8006aa4:	9305      	str	r3, [sp, #20]
 8006aa6:	2301      	movs	r3, #1
 8006aa8:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006aac:	9302      	str	r3, [sp, #8]
 8006aae:	2204      	movs	r2, #4
 8006ab0:	2302      	movs	r3, #2
 8006ab2:	e9cd 3200 	strd	r3, r2, [sp]
 8006ab6:	490c      	ldr	r1, [pc, #48]	; (8006ae8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006ab8:	480c      	ldr	r0, [pc, #48]	; (8006aec <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006aba:	9408      	str	r4, [sp, #32]
 8006abc:	230a      	movs	r3, #10
 8006abe:	225f      	movs	r2, #95	; 0x5f
 8006ac0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006ac4:	f7fd f9b4 	bl	8003e30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006ac8:	4809      	ldr	r0, [pc, #36]	; (8006af0 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006aca:	f020 fd0f 	bl	80274ec <atexit>
 8006ace:	4628      	mov	r0, r5
 8006ad0:	f020 fccd 	bl	802746e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8006ad4:	4805      	ldr	r0, [pc, #20]	; (8006aec <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006ad6:	b00d      	add	sp, #52	; 0x34
 8006ad8:	bd30      	pop	{r4, r5, pc}
 8006ada:	bf00      	nop
 8006adc:	20003ce0 	.word	0x20003ce0
 8006ae0:	080315d4 	.word	0x080315d4
 8006ae4:	080317b4 	.word	0x080317b4
 8006ae8:	08030a70 	.word	0x08030a70
 8006aec:	20003ce4 	.word	0x20003ce4
 8006af0:	08006a7d 	.word	0x08006a7d

08006af4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 16, 12, 0, 4, 1, 0, 0, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006af4:	4770      	bx	lr
	...

08006af8 <_Z23getFont_verdana_12_4bppv>:
{
 8006af8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 16, 12, 0, 4, 1, 0, 0, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006afa:	4d15      	ldr	r5, [pc, #84]	; (8006b50 <_Z23getFont_verdana_12_4bppv+0x58>)
 8006afc:	782c      	ldrb	r4, [r5, #0]
 8006afe:	f3bf 8f5b 	dmb	ish
 8006b02:	f014 0401 	ands.w	r4, r4, #1
{
 8006b06:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 16, 12, 0, 4, 1, 0, 0, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006b08:	d11f      	bne.n	8006b4a <_Z23getFont_verdana_12_4bppv+0x52>
 8006b0a:	4628      	mov	r0, r5
 8006b0c:	f020 fca3 	bl	8027456 <__cxa_guard_acquire>
 8006b10:	b1d8      	cbz	r0, 8006b4a <_Z23getFont_verdana_12_4bppv+0x52>
 8006b12:	233f      	movs	r3, #63	; 0x3f
 8006b14:	9307      	str	r3, [sp, #28]
 8006b16:	4b0f      	ldr	r3, [pc, #60]	; (8006b54 <_Z23getFont_verdana_12_4bppv+0x5c>)
 8006b18:	9306      	str	r3, [sp, #24]
 8006b1a:	4b0f      	ldr	r3, [pc, #60]	; (8006b58 <_Z23getFont_verdana_12_4bppv+0x60>)
 8006b1c:	490f      	ldr	r1, [pc, #60]	; (8006b5c <_Z23getFont_verdana_12_4bppv+0x64>)
 8006b1e:	4810      	ldr	r0, [pc, #64]	; (8006b60 <_Z23getFont_verdana_12_4bppv+0x68>)
 8006b20:	9408      	str	r4, [sp, #32]
 8006b22:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8006b26:	2201      	movs	r2, #1
 8006b28:	2304      	movs	r3, #4
 8006b2a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8006b2e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006b32:	230c      	movs	r3, #12
 8006b34:	2210      	movs	r2, #16
 8006b36:	9403      	str	r4, [sp, #12]
 8006b38:	9400      	str	r4, [sp, #0]
 8006b3a:	f7fd f979 	bl	8003e30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006b3e:	4809      	ldr	r0, [pc, #36]	; (8006b64 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8006b40:	f020 fcd4 	bl	80274ec <atexit>
 8006b44:	4628      	mov	r0, r5
 8006b46:	f020 fc92 	bl	802746e <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8006b4a:	4805      	ldr	r0, [pc, #20]	; (8006b60 <_Z23getFont_verdana_12_4bppv+0x68>)
 8006b4c:	b00d      	add	sp, #52	; 0x34
 8006b4e:	bd30      	pop	{r4, r5, pc}
 8006b50:	20003d0c 	.word	0x20003d0c
 8006b54:	08031608 	.word	0x08031608
 8006b58:	080317b8 	.word	0x080317b8
 8006b5c:	08030fa4 	.word	0x08030fa4
 8006b60:	20003d10 	.word	0x20003d10
 8006b64:	08006af5 	.word	0x08006af5

08006b68 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 96, 20, 4, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8006b68:	4770      	bx	lr
	...

08006b6c <_Z23getFont_verdana_20_4bppv>:
{
 8006b6c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 96, 20, 4, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8006b6e:	4d15      	ldr	r5, [pc, #84]	; (8006bc4 <_Z23getFont_verdana_20_4bppv+0x58>)
 8006b70:	782c      	ldrb	r4, [r5, #0]
 8006b72:	f3bf 8f5b 	dmb	ish
 8006b76:	f014 0401 	ands.w	r4, r4, #1
{
 8006b7a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 96, 20, 4, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8006b7c:	d11f      	bne.n	8006bbe <_Z23getFont_verdana_20_4bppv+0x52>
 8006b7e:	4628      	mov	r0, r5
 8006b80:	f020 fc69 	bl	8027456 <__cxa_guard_acquire>
 8006b84:	b1d8      	cbz	r0, 8006bbe <_Z23getFont_verdana_20_4bppv+0x52>
 8006b86:	233f      	movs	r3, #63	; 0x3f
 8006b88:	9307      	str	r3, [sp, #28]
 8006b8a:	4b0f      	ldr	r3, [pc, #60]	; (8006bc8 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8006b8c:	9306      	str	r3, [sp, #24]
 8006b8e:	4b0f      	ldr	r3, [pc, #60]	; (8006bcc <_Z23getFont_verdana_20_4bppv+0x60>)
 8006b90:	9305      	str	r3, [sp, #20]
 8006b92:	2301      	movs	r3, #1
 8006b94:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006b98:	9302      	str	r3, [sp, #8]
 8006b9a:	2304      	movs	r3, #4
 8006b9c:	e9cd 3300 	strd	r3, r3, [sp]
 8006ba0:	490b      	ldr	r1, [pc, #44]	; (8006bd0 <_Z23getFont_verdana_20_4bppv+0x64>)
 8006ba2:	480c      	ldr	r0, [pc, #48]	; (8006bd4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8006ba4:	9408      	str	r4, [sp, #32]
 8006ba6:	2314      	movs	r3, #20
 8006ba8:	2260      	movs	r2, #96	; 0x60
 8006baa:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006bae:	f7fd f93f 	bl	8003e30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006bb2:	4809      	ldr	r0, [pc, #36]	; (8006bd8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8006bb4:	f020 fc9a 	bl	80274ec <atexit>
 8006bb8:	4628      	mov	r0, r5
 8006bba:	f020 fc58 	bl	802746e <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8006bbe:	4805      	ldr	r0, [pc, #20]	; (8006bd4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8006bc0:	b00d      	add	sp, #52	; 0x34
 8006bc2:	bd30      	pop	{r4, r5, pc}
 8006bc4:	20003d38 	.word	0x20003d38
 8006bc8:	0803160c 	.word	0x0803160c
 8006bcc:	080317bc 	.word	0x080317bc
 8006bd0:	08031084 	.word	0x08031084
 8006bd4:	20003d3c 	.word	0x20003d3c
 8006bd8:	08006b69 	.word	0x08006b69

08006bdc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006bdc:	4770      	bx	lr
	...

08006be0 <_Z23getFont_verdana_40_4bppv>:
{
 8006be0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006be2:	4d15      	ldr	r5, [pc, #84]	; (8006c38 <_Z23getFont_verdana_40_4bppv+0x58>)
 8006be4:	782c      	ldrb	r4, [r5, #0]
 8006be6:	f3bf 8f5b 	dmb	ish
 8006bea:	f014 0401 	ands.w	r4, r4, #1
{
 8006bee:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006bf0:	d11e      	bne.n	8006c30 <_Z23getFont_verdana_40_4bppv+0x50>
 8006bf2:	4628      	mov	r0, r5
 8006bf4:	f020 fc2f 	bl	8027456 <__cxa_guard_acquire>
 8006bf8:	b1d0      	cbz	r0, 8006c30 <_Z23getFont_verdana_40_4bppv+0x50>
 8006bfa:	233f      	movs	r3, #63	; 0x3f
 8006bfc:	9307      	str	r3, [sp, #28]
 8006bfe:	4b0f      	ldr	r3, [pc, #60]	; (8006c3c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006c00:	9306      	str	r3, [sp, #24]
 8006c02:	4b0f      	ldr	r3, [pc, #60]	; (8006c40 <_Z23getFont_verdana_40_4bppv+0x60>)
 8006c04:	490f      	ldr	r1, [pc, #60]	; (8006c44 <_Z23getFont_verdana_40_4bppv+0x64>)
 8006c06:	4810      	ldr	r0, [pc, #64]	; (8006c48 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006c08:	9408      	str	r4, [sp, #32]
 8006c0a:	2201      	movs	r2, #1
 8006c0c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8006c10:	2304      	movs	r3, #4
 8006c12:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8006c16:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006c1a:	2328      	movs	r3, #40	; 0x28
 8006c1c:	9403      	str	r4, [sp, #12]
 8006c1e:	9400      	str	r4, [sp, #0]
 8006c20:	f7fd f906 	bl	8003e30 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006c24:	4809      	ldr	r0, [pc, #36]	; (8006c4c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006c26:	f020 fc61 	bl	80274ec <atexit>
 8006c2a:	4628      	mov	r0, r5
 8006c2c:	f020 fc1f 	bl	802746e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8006c30:	4805      	ldr	r0, [pc, #20]	; (8006c48 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006c32:	b00d      	add	sp, #52	; 0x34
 8006c34:	bd30      	pop	{r4, r5, pc}
 8006c36:	bf00      	nop
 8006c38:	20003d64 	.word	0x20003d64
 8006c3c:	080317b0 	.word	0x080317b0
 8006c40:	080317c0 	.word	0x080317c0
 8006c44:	080315c4 	.word	0x080315c4
 8006c48:	20003d68 	.word	0x20003d68
 8006c4c:	08006bdd 	.word	0x08006bdd

08006c50 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006c50:	2000      	movs	r0, #0
 8006c52:	4770      	bx	lr

08006c54 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006c54:	2000      	movs	r0, #0
 8006c56:	4770      	bx	lr

08006c58 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006c58:	b40e      	push	{r1, r2, r3}
 8006c5a:	b503      	push	{r0, r1, lr}
 8006c5c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006c5e:	2100      	movs	r1, #0
{
 8006c60:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006c64:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006c66:	f010 fbf3 	bl	8017450 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006c6a:	b002      	add	sp, #8
 8006c6c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006c70:	b003      	add	sp, #12
 8006c72:	4770      	bx	lr

08006c74 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006c74:	b40c      	push	{r2, r3}
 8006c76:	b507      	push	{r0, r1, r2, lr}
 8006c78:	ab04      	add	r3, sp, #16
 8006c7a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006c7e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8006c80:	f010 fbe6 	bl	8017450 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006c84:	b003      	add	sp, #12
 8006c86:	f85d eb04 	ldr.w	lr, [sp], #4
 8006c8a:	b002      	add	sp, #8
 8006c8c:	4770      	bx	lr
	...

08006c90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8006c90:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8006c92:	b510      	push	{r4, lr}
 8006c94:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8006c96:	b373      	cbz	r3, 8006cf6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8006c98:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8006c9a:	b92b      	cbnz	r3, 8006ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8006c9c:	4b18      	ldr	r3, [pc, #96]	; (8006d00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8006c9e:	4a19      	ldr	r2, [pc, #100]	; (8006d04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8006ca0:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8006ca2:	4819      	ldr	r0, [pc, #100]	; (8006d08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006ca4:	f020 fc04 	bl	80274b0 <__assert_func>
            return buffer[pos];
 8006ca8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8006caa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006cae:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8006cb0:	b30b      	cbz	r3, 8006cf6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006cb2:	f011 ffe5 	bl	8018c80 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8006cb6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006cb8:	2b01      	cmp	r3, #1
 8006cba:	d803      	bhi.n	8006cc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006cbc:	4b13      	ldr	r3, [pc, #76]	; (8006d0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006cbe:	4a14      	ldr	r2, [pc, #80]	; (8006d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006cc0:	21c5      	movs	r1, #197	; 0xc5
 8006cc2:	e7ee      	b.n	8006ca2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006cc4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006cc6:	1c53      	adds	r3, r2, #1
 8006cc8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006cca:	2b09      	cmp	r3, #9
 8006ccc:	4619      	mov	r1, r3
 8006cce:	bf88      	it	hi
 8006cd0:	f1a3 010a 	subhi.w	r1, r3, #10
 8006cd4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8006cd8:	f640 103f 	movw	r0, #2367	; 0x93f
 8006cdc:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006cde:	4281      	cmp	r1, r0
 8006ce0:	d109      	bne.n	8006cf6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006ce2:	2b0a      	cmp	r3, #10
 8006ce4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8006ce8:	bf28      	it	cs
 8006cea:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006cec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006cf0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006cf2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006cf4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006cf6:	4620      	mov	r0, r4
}
 8006cf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006cfc:	f011 bea4 	b.w	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006d00:	0802a3d0 	.word	0x0802a3d0
 8006d04:	0802a3d9 	.word	0x0802a3d9
 8006d08:	0802a484 	.word	0x0802a484
 8006d0c:	0802a4ce 	.word	0x0802a4ce
 8006d10:	0802a4dc 	.word	0x0802a4dc

08006d14 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006d14:	f011 be50 	b.w	80189b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08006d18 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8006d18:	b510      	push	{r4, lr}
 8006d1a:	b086      	sub	sp, #24
 8006d1c:	ac02      	add	r4, sp, #8
 8006d1e:	e884 0006 	stmia.w	r4, {r1, r2}
 8006d22:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006d24:	ab0a      	add	r3, sp, #40	; 0x28
 8006d26:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006d28:	9301      	str	r3, [sp, #4]
 8006d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006d2c:	9300      	str	r3, [sp, #0]
 8006d2e:	4621      	mov	r1, r4
 8006d30:	9b08      	ldr	r3, [sp, #32]
 8006d32:	f00f f847 	bl	8015dc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006d36:	b006      	add	sp, #24
 8006d38:	bd10      	pop	{r4, pc}
	...

08006d3c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006d3c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006d3e:	bb18      	cbnz	r0, 8006d88 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006d40:	4b12      	ldr	r3, [pc, #72]	; (8006d8c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006d42:	4813      	ldr	r0, [pc, #76]	; (8006d90 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	4913      	ldr	r1, [pc, #76]	; (8006d94 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8006d48:	b1b3      	cbz	r3, 8006d78 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006d4a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006d4c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006d4e:	441a      	add	r2, r3
 8006d50:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006d52:	685a      	ldr	r2, [r3, #4]
 8006d54:	441a      	add	r2, r3
 8006d56:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006d58:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8006d5a:	4b0f      	ldr	r3, [pc, #60]	; (8006d98 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8006d5c:	2200      	movs	r2, #0
 8006d5e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006d60:	f000 f838 	bl	8006dd4 <_ZN17TypedTextDatabase8getFontsEv>
 8006d64:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006d66:	f000 f833 	bl	8006dd0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8006d6a:	4b0c      	ldr	r3, [pc, #48]	; (8006d9c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8006d6c:	601c      	str	r4, [r3, #0]
        fonts = f;
 8006d6e:	4b0c      	ldr	r3, [pc, #48]	; (8006da0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8006d70:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8006d72:	4b0c      	ldr	r3, [pc, #48]	; (8006da4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8006d74:	8018      	strh	r0, [r3, #0]
    }
}
 8006d76:	e007      	b.n	8006d88 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8006d78:	4b0b      	ldr	r3, [pc, #44]	; (8006da8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8006d7a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006d7c:	4b0b      	ldr	r3, [pc, #44]	; (8006dac <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8006d7e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006d80:	4b0b      	ldr	r3, [pc, #44]	; (8006db0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006d82:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006d84:	2c00      	cmp	r4, #0
 8006d86:	d1e8      	bne.n	8006d5a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006d88:	bd38      	pop	{r3, r4, r5, pc}
 8006d8a:	bf00      	nop
 8006d8c:	20003d90 	.word	0x20003d90
 8006d90:	20003d94 	.word	0x20003d94
 8006d94:	20003d98 	.word	0x20003d98
 8006d98:	20003d9c 	.word	0x20003d9c
 8006d9c:	20014c7c 	.word	0x20014c7c
 8006da0:	20014c84 	.word	0x20014c84
 8006da4:	20014c80 	.word	0x20014c80
 8006da8:	08031894 	.word	0x08031894
 8006dac:	080317c4 	.word	0x080317c4
 8006db0:	08031ad8 	.word	0x08031ad8

08006db4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006db4:	4b04      	ldr	r3, [pc, #16]	; (8006dc8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006dbc:	4b03      	ldr	r3, [pc, #12]	; (8006dcc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006dbe:	681b      	ldr	r3, [r3, #0]
}
 8006dc0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006dc4:	4770      	bx	lr
 8006dc6:	bf00      	nop
 8006dc8:	20003d98 	.word	0x20003d98
 8006dcc:	20003d94 	.word	0x20003d94

08006dd0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006dd0:	2034      	movs	r0, #52	; 0x34
 8006dd2:	4770      	bx	lr

08006dd4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006dd4:	4800      	ldr	r0, [pc, #0]	; (8006dd8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006dd6:	4770      	bx	lr
 8006dd8:	20003da0 	.word	0x20003da0

08006ddc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006ddc:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8006dde:	f7ff fec5 	bl	8006b6c <_Z23getFont_verdana_20_4bppv>
};
 8006de2:	4c06      	ldr	r4, [pc, #24]	; (8006dfc <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8006de4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006de6:	f7ff fefb 	bl	8006be0 <_Z23getFont_verdana_40_4bppv>
};
 8006dea:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8006dec:	f7ff fe48 	bl	8006a80 <_Z23getFont_verdana_10_4bppv>
};
 8006df0:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8006df2:	f7ff fe81 	bl	8006af8 <_Z23getFont_verdana_12_4bppv>
};
 8006df6:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8006df8:	bd10      	pop	{r4, pc}
 8006dfa:	bf00      	nop
 8006dfc:	20003da0 	.word	0x20003da0

08006e00 <_ZN13ModelListener11clockUpdateEhhh>:
    }

    virtual void clockUpdate(uint8_t hour, uint8_t minute, uint8_t second) {}
 8006e00:	4770      	bx	lr

08006e02 <_ZN13ModelListener14updateCurrent1Et>:
    virtual void updateCurrent1(uint16_t adcCurrent1) {}
 8006e02:	4770      	bx	lr

08006e04 <_ZN13ModelListener14sdStatusUpdateEb>:
    virtual void sdStatusUpdate(bool sdStatus) {}
 8006e04:	4770      	bx	lr

08006e06 <_ZN19FileScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~FileScreenPresenter() {};
 8006e06:	4770      	bx	lr

08006e08 <_ZThn4_N19FileScreenPresenterD1Ev>:
 8006e08:	3804      	subs	r0, #4
 8006e0a:	4770      	bx	lr

08006e0c <_ZN19FileScreenPresenter10deactivateEv>:
}

void FileScreenPresenter::activate()
{

}
 8006e0c:	4770      	bx	lr

08006e0e <_ZN19FileScreenPresenterD0Ev>:
 8006e0e:	b510      	push	{r4, lr}
 8006e10:	2110      	movs	r1, #16
 8006e12:	4604      	mov	r4, r0
 8006e14:	f020 fb1d 	bl	8027452 <_ZdlPvj>
 8006e18:	4620      	mov	r0, r4
 8006e1a:	bd10      	pop	{r4, pc}

08006e1c <_ZThn4_N19FileScreenPresenterD0Ev>:
 8006e1c:	f1a0 0004 	sub.w	r0, r0, #4
 8006e20:	e7f5      	b.n	8006e0e <_ZN19FileScreenPresenterD0Ev>

08006e22 <_ZN19FileScreenPresenter14sdMsgTxtUpdateEPc>:

}

void FileScreenPresenter::sdMsgTxtUpdate(char msg[])
{
	view.sdMsgTxtUpdate(msg);
 8006e22:	68c0      	ldr	r0, [r0, #12]
 8006e24:	f000 b9ce 	b.w	80071c4 <_ZN14FileScreenView14sdMsgTxtUpdateEPc>

08006e28 <_ZThn4_N19FileScreenPresenter14sdMsgTxtUpdateEPc>:
    void sdMsgTxtUpdate(char msg[]);
 8006e28:	f1a0 0004 	sub.w	r0, r0, #4
 8006e2c:	f7ff bff9 	b.w	8006e22 <_ZN19FileScreenPresenter14sdMsgTxtUpdateEPc>

08006e30 <_ZN19FileScreenPresenter14fileListUpdateEPci>:
}

void FileScreenPresenter::fileListUpdate(char file[25], int noOfFile)
{
	view.fileListUpdate(file, noOfFile);
 8006e30:	68c0      	ldr	r0, [r0, #12]
 8006e32:	f000 b9f9 	b.w	8007228 <_ZN14FileScreenView14fileListUpdateEPci>

08006e36 <_ZThn4_N19FileScreenPresenter14fileListUpdateEPci>:
    void fileListUpdate(char file[25], int noOfFile);
 8006e36:	f1a0 0004 	sub.w	r0, r0, #4
 8006e3a:	f7ff bff9 	b.w	8006e30 <_ZN19FileScreenPresenter14fileListUpdateEPci>
	...

08006e40 <_ZN19FileScreenPresenterC1ER14FileScreenView>:
FileScreenPresenter::FileScreenPresenter(FileScreenView& v)
 8006e40:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8006e42:	2200      	movs	r2, #0
 8006e44:	6082      	str	r2, [r0, #8]
    : view(v)
 8006e46:	4a04      	ldr	r2, [pc, #16]	; (8006e58 <_ZN19FileScreenPresenterC1ER14FileScreenView+0x18>)
 8006e48:	60c1      	str	r1, [r0, #12]
 8006e4a:	f102 0408 	add.w	r4, r2, #8
 8006e4e:	3228      	adds	r2, #40	; 0x28
 8006e50:	6004      	str	r4, [r0, #0]
 8006e52:	6042      	str	r2, [r0, #4]
}
 8006e54:	bd10      	pop	{r4, pc}
 8006e56:	bf00      	nop
 8006e58:	0802a5b0 	.word	0x0802a5b0

08006e5c <_ZN14FileScreenViewD1Ev>:

class FileScreenView : public FileScreenViewBase
{
public:
    FileScreenView();
    virtual ~FileScreenView() {}
 8006e5c:	4b08      	ldr	r3, [pc, #32]	; (8006e80 <_ZN14FileScreenViewD1Ev+0x24>)
 8006e5e:	b570      	push	{r4, r5, r6, lr}
 8006e60:	4604      	mov	r4, r0
 8006e62:	6003      	str	r3, [r0, #0]
 8006e64:	f640 551c 	movw	r5, #3356	; 0xd1c
 8006e68:	f640 2624 	movw	r6, #2596	; 0xa24
 8006e6c:	5963      	ldr	r3, [r4, r5]
 8006e6e:	1960      	adds	r0, r4, r5
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	3d4c      	subs	r5, #76	; 0x4c
 8006e74:	4798      	blx	r3
 8006e76:	42b5      	cmp	r5, r6
 8006e78:	d1f8      	bne.n	8006e6c <_ZN14FileScreenViewD1Ev+0x10>
 8006e7a:	4620      	mov	r0, r4
 8006e7c:	bd70      	pop	{r4, r5, r6, pc}
 8006e7e:	bf00      	nop
 8006e80:	0802a620 	.word	0x0802a620

08006e84 <_ZN14FileScreenView14tearDownScreenEv>:
}

void FileScreenView::tearDownScreen()
{
    FileScreenViewBase::tearDownScreen();
}
 8006e84:	4770      	bx	lr

08006e86 <_ZN8touchgfx8CallbackI14FileScreenViewRKNS_23TextAreaWithOneWildcardERKNS_10ClickEventEvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8006e86:	4770      	bx	lr

08006e88 <_ZN8touchgfx8CallbackI14FileScreenViewRKNS_23TextAreaWithOneWildcardERKNS_10ClickEventEvE7executeES4_S7_>:
    virtual void execute(T1 t1, T2 t2)
 8006e88:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8006e8a:	68c4      	ldr	r4, [r0, #12]
 8006e8c:	6845      	ldr	r5, [r0, #4]
 8006e8e:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8006e90:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8006e92:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8006e96:	07e4      	lsls	r4, r4, #31
 8006e98:	bf48      	it	mi
 8006e9a:	59ac      	ldrmi	r4, [r5, r6]
 8006e9c:	689b      	ldr	r3, [r3, #8]
 8006e9e:	bf48      	it	mi
 8006ea0:	58e3      	ldrmi	r3, [r4, r3]
    }
 8006ea2:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8006ea4:	4718      	bx	r3

08006ea6 <_ZNK8touchgfx8CallbackI14FileScreenViewRKNS_23TextAreaWithOneWildcardERKNS_10ClickEventEvE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8006ea6:	6843      	ldr	r3, [r0, #4]
 8006ea8:	b12b      	cbz	r3, 8006eb6 <_ZNK8touchgfx8CallbackI14FileScreenViewRKNS_23TextAreaWithOneWildcardERKNS_10ClickEventEvE7isValidEv+0x10>
 8006eaa:	6883      	ldr	r3, [r0, #8]
 8006eac:	b92b      	cbnz	r3, 8006eba <_ZNK8touchgfx8CallbackI14FileScreenViewRKNS_23TextAreaWithOneWildcardERKNS_10ClickEventEvE7isValidEv+0x14>
 8006eae:	68c0      	ldr	r0, [r0, #12]
 8006eb0:	f000 0001 	and.w	r0, r0, #1
 8006eb4:	4770      	bx	lr
 8006eb6:	4618      	mov	r0, r3
 8006eb8:	4770      	bx	lr
 8006eba:	2001      	movs	r0, #1
    }
 8006ebc:	4770      	bx	lr

08006ebe <_ZN8touchgfx8CallbackI14FileScreenViewRKNS_23TextAreaWithOneWildcardERKNS_10ClickEventEvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8006ebe:	b510      	push	{r4, lr}
 8006ec0:	2110      	movs	r1, #16
 8006ec2:	4604      	mov	r4, r0
 8006ec4:	f020 fac5 	bl	8027452 <_ZdlPvj>
 8006ec8:	4620      	mov	r0, r4
 8006eca:	bd10      	pop	{r4, pc}

08006ecc <_ZN14FileScreenViewD0Ev>:
 8006ecc:	b510      	push	{r4, lr}
 8006ece:	4604      	mov	r4, r0
 8006ed0:	f7ff ffc4 	bl	8006e5c <_ZN14FileScreenViewD1Ev>
 8006ed4:	4620      	mov	r0, r4
 8006ed6:	f44f 615b 	mov.w	r1, #3504	; 0xdb0
 8006eda:	f020 faba 	bl	8027452 <_ZdlPvj>
 8006ede:	4620      	mov	r0, r4
 8006ee0:	bd10      	pop	{r4, pc}
	...

08006ee4 <_ZN14FileScreenView11setupScreenEv>:
{
 8006ee4:	b510      	push	{r4, lr}
 8006ee6:	4604      	mov	r4, r0
	FileScreenViewBase::setupScreen();
 8006ee8:	f7fb fcaf 	bl	800284a <_ZN18FileScreenViewBase11setupScreenEv>
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "ON");
 8006eec:	4a0f      	ldr	r2, [pc, #60]	; (8006f2c <_ZN14FileScreenView11setupScreenEv+0x48>)
 8006eee:	2119      	movs	r1, #25
 8006ef0:	f504 60ec 	add.w	r0, r4, #1888	; 0x760
 8006ef4:	f012 fca1 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8006ef8:	f504 70aa 	add.w	r0, r4, #340	; 0x154
 8006efc:	f010 fbc9 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
	sdMsgText.setClickAction(textClickedCallback);
 8006f00:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
     * @param  callback The callback to be executed. The callback will be given a reference
     *                  to T.
     */
    void setClickAction(GenericCallback<const T&, const ClickEvent&>& callback)
    {
        clickAction = &callback;
 8006f04:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
 8006f08:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006f0c:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8006f10:	f8c4 3240 	str.w	r3, [r4, #576]	; 0x240
 8006f14:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
 8006f18:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
 8006f1c:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
 8006f20:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
 8006f24:	f8c4 33d0 	str.w	r3, [r4, #976]	; 0x3d0
}
 8006f28:	bd10      	pop	{r4, pc}
 8006f2a:	bf00      	nop
 8006f2c:	0802a5f4 	.word	0x0802a5f4

08006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>:
     *
     * @return The wildcard used in the text.
     */
    const Unicode::UnicodeChar* getWildcard() const
    {
        return getWildcard1();
 8006f30:	6803      	ldr	r3, [r0, #0]
 8006f32:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006f34:	4718      	bx	r3
	...

08006f38 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE>:
	sdMsgText.invalidate();
}

void FileScreenView:: textClickHandler(const TextAreaWithOneWildcard& t, const ClickEvent& e)
{
	if (&t == &sdMsgText)
 8006f38:	f500 6380 	add.w	r3, r0, #1024	; 0x400
 8006f3c:	4299      	cmp	r1, r3
{
 8006f3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f40:	4604      	mov	r4, r0
 8006f42:	460d      	mov	r5, r1
 8006f44:	f500 76aa 	add.w	r6, r0, #340	; 0x154
	if (&t == &sdMsgText)
 8006f48:	d11c      	bne.n	8006f84 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x4c>
 8006f4a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f4e:	f8c0 33fc 	str.w	r3, [r0, #1020]	; 0x3fc
	{
		//Implement what should happen when 'box' is touched/clicked here.
		box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		box2.invalidate();
 8006f52:	f500 7075 	add.w	r0, r0, #980	; 0x3d4
 8006f56:	f010 fb9c 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		for (int var = 0; var < TEXTAREA1_SIZE; ++var) {
			textArea1Buffer[var] = 0;
 8006f5a:	f504 63ec 	add.w	r3, r4, #1888	; 0x760
 8006f5e:	4618      	mov	r0, r3
 8006f60:	2232      	movs	r2, #50	; 0x32
 8006f62:	2100      	movs	r1, #0
 8006f64:	f020 fc2a 	bl	80277bc <memset>
		}
		Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "Clicked");
 8006f68:	4a6c      	ldr	r2, [pc, #432]	; (800711c <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x1e4>)
 8006f6a:	2119      	movs	r1, #25
 8006f6c:	f012 fc65 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		textArea1.resizeToCurrentText();
 8006f70:	4630      	mov	r0, r6
 8006f72:	f00d fbd3 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		textArea1.invalidate();
 8006f76:	4630      	mov	r0, r6
 8006f78:	f010 fb8b 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 8006f7c:	f204 5024 	addw	r0, r4, #1316	; 0x524
 8006f80:	f008 f923 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}

	if (&t == &textArea1)
 8006f84:	42ae      	cmp	r6, r5
 8006f86:	d114      	bne.n	8006fb2 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x7a>
		{
			Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1.getWildcard());
 8006f88:	4628      	mov	r0, r5
 8006f8a:	f7ff ffd1 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 8006f8e:	211a      	movs	r1, #26
 8006f90:	4602      	mov	r2, r0
 8006f92:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 8006f96:	f012 fc3a 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
			fileNameTextArea.resizeToCurrentText();
 8006f9a:	f204 7014 	addw	r0, r4, #1812	; 0x714
 8006f9e:	9001      	str	r0, [sp, #4]
 8006fa0:	f00d fbbc 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
			fileNameTextArea.invalidate();
 8006fa4:	9801      	ldr	r0, [sp, #4]
 8006fa6:	f010 fb74 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
			filePopUpWindow.show();
 8006faa:	f204 5024 	addw	r0, r4, #1316	; 0x524
 8006fae:	f008 f90c 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
		}
	if (&t == &textArea1_1)
 8006fb2:	f504 73d2 	add.w	r3, r4, #420	; 0x1a4
 8006fb6:	42ab      	cmp	r3, r5
 8006fb8:	d114      	bne.n	8006fe4 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0xac>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_1.getWildcard());
 8006fba:	4628      	mov	r0, r5
 8006fbc:	f7ff ffb8 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 8006fc0:	211a      	movs	r1, #26
 8006fc2:	4602      	mov	r2, r0
 8006fc4:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 8006fc8:	f012 fc21 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 8006fcc:	f204 7014 	addw	r0, r4, #1812	; 0x714
 8006fd0:	9001      	str	r0, [sp, #4]
 8006fd2:	f00d fba3 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 8006fd6:	9801      	ldr	r0, [sp, #4]
 8006fd8:	f010 fb5b 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 8006fdc:	f204 5024 	addw	r0, r4, #1316	; 0x524
 8006fe0:	f008 f8f3 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}
	if (&t == &textArea1_2)
 8006fe4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006fe8:	42ab      	cmp	r3, r5
 8006fea:	d114      	bne.n	8007016 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0xde>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_2.getWildcard());
 8006fec:	4628      	mov	r0, r5
 8006fee:	f7ff ff9f 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 8006ff2:	211a      	movs	r1, #26
 8006ff4:	4602      	mov	r2, r0
 8006ff6:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 8006ffa:	f012 fc08 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 8006ffe:	f204 7014 	addw	r0, r4, #1812	; 0x714
 8007002:	9001      	str	r0, [sp, #4]
 8007004:	f00d fb8a 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 8007008:	9801      	ldr	r0, [sp, #4]
 800700a:	f010 fb42 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 800700e:	f204 5024 	addw	r0, r4, #1316	; 0x524
 8007012:	f008 f8da 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}
	if (&t == &textArea1_3)
 8007016:	f504 7311 	add.w	r3, r4, #580	; 0x244
 800701a:	42ab      	cmp	r3, r5
 800701c:	d114      	bne.n	8007048 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x110>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_3.getWildcard());
 800701e:	4628      	mov	r0, r5
 8007020:	f7ff ff86 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 8007024:	211a      	movs	r1, #26
 8007026:	4602      	mov	r2, r0
 8007028:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 800702c:	f012 fbef 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 8007030:	f204 7014 	addw	r0, r4, #1812	; 0x714
 8007034:	9001      	str	r0, [sp, #4]
 8007036:	f00d fb71 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 800703a:	9801      	ldr	r0, [sp, #4]
 800703c:	f010 fb29 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 8007040:	f204 5024 	addw	r0, r4, #1316	; 0x524
 8007044:	f008 f8c1 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}
	if (&t == &textArea1_4)
 8007048:	f504 7325 	add.w	r3, r4, #660	; 0x294
 800704c:	42ab      	cmp	r3, r5
 800704e:	d114      	bne.n	800707a <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x142>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_4.getWildcard());
 8007050:	4628      	mov	r0, r5
 8007052:	f7ff ff6d 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 8007056:	211a      	movs	r1, #26
 8007058:	4602      	mov	r2, r0
 800705a:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 800705e:	f012 fbd6 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 8007062:	f204 7014 	addw	r0, r4, #1812	; 0x714
 8007066:	9001      	str	r0, [sp, #4]
 8007068:	f00d fb58 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 800706c:	9801      	ldr	r0, [sp, #4]
 800706e:	f010 fb10 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 8007072:	f204 5024 	addw	r0, r4, #1316	; 0x524
 8007076:	f008 f8a8 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}
	if (&t == &textArea1_5)
 800707a:	f504 7339 	add.w	r3, r4, #740	; 0x2e4
 800707e:	42ab      	cmp	r3, r5
 8007080:	d114      	bne.n	80070ac <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x174>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_5.getWildcard());
 8007082:	4628      	mov	r0, r5
 8007084:	f7ff ff54 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 8007088:	211a      	movs	r1, #26
 800708a:	4602      	mov	r2, r0
 800708c:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 8007090:	f012 fbbd 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 8007094:	f204 7014 	addw	r0, r4, #1812	; 0x714
 8007098:	9001      	str	r0, [sp, #4]
 800709a:	f00d fb3f 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 800709e:	9801      	ldr	r0, [sp, #4]
 80070a0:	f010 faf7 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 80070a4:	f204 5024 	addw	r0, r4, #1316	; 0x524
 80070a8:	f008 f88f 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}
	if (&t == &textArea1_6)
 80070ac:	f504 734d 	add.w	r3, r4, #820	; 0x334
 80070b0:	42ab      	cmp	r3, r5
 80070b2:	d114      	bne.n	80070de <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x1a6>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_6.getWildcard());
 80070b4:	4628      	mov	r0, r5
 80070b6:	f7ff ff3b 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 80070ba:	211a      	movs	r1, #26
 80070bc:	4602      	mov	r2, r0
 80070be:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 80070c2:	f012 fba4 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 80070c6:	f204 7014 	addw	r0, r4, #1812	; 0x714
 80070ca:	9001      	str	r0, [sp, #4]
 80070cc:	f00d fb26 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 80070d0:	9801      	ldr	r0, [sp, #4]
 80070d2:	f010 fade 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 80070d6:	f204 5024 	addw	r0, r4, #1316	; 0x524
 80070da:	f008 f876 	bl	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
	}
	if (&t == &textArea1_7)
 80070de:	f504 7361 	add.w	r3, r4, #900	; 0x384
 80070e2:	42ab      	cmp	r3, r5
 80070e4:	d117      	bne.n	8007116 <_ZN14FileScreenView16textClickHandlerERKN8touchgfx23TextAreaWithOneWildcardERKNS0_10ClickEventE+0x1de>
	{
		Unicode::snprintf(fileNameTextAreaBuffer, FILENAMETEXTAREA_SIZE, textArea1_7.getWildcard());
 80070e6:	4628      	mov	r0, r5
 80070e8:	f7ff ff22 	bl	8006f30 <_ZNK8touchgfx23TextAreaWithOneWildcard11getWildcardEv>
 80070ec:	211a      	movs	r1, #26
 80070ee:	4602      	mov	r2, r0
 80070f0:	f604 202a 	addw	r0, r4, #2602	; 0xa2a
 80070f4:	f012 fb8b 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		fileNameTextArea.resizeToCurrentText();
 80070f8:	f204 7014 	addw	r0, r4, #1812	; 0x714
 80070fc:	9001      	str	r0, [sp, #4]
 80070fe:	f00d fb0d 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		fileNameTextArea.invalidate();
 8007102:	9801      	ldr	r0, [sp, #4]
 8007104:	f010 fac5 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
		filePopUpWindow.show();
 8007108:	f204 5024 	addw	r0, r4, #1316	; 0x524
	}

}
 800710c:	b002      	add	sp, #8
 800710e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		filePopUpWindow.show();
 8007112:	f008 b85a 	b.w	800f1ca <_ZN8touchgfx11ModalWindow4showEv>
}
 8007116:	b002      	add	sp, #8
 8007118:	bd70      	pop	{r4, r5, r6, pc}
 800711a:	bf00      	nop
 800711c:	0802a5f7 	.word	0x0802a5f7

08007120 <_ZN14FileScreenViewC1Ev>:
FileScreenView::FileScreenView():textClickedCallback(this, &FileScreenView::textClickHandler)
 8007120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007122:	4604      	mov	r4, r0
        : typedTextId(id)
 8007124:	4e22      	ldr	r6, [pc, #136]	; (80071b0 <_ZN14FileScreenViewC1Ev+0x90>)
        : TextAreaWithWildcardBase(), wc1(0)
 8007126:	4d23      	ldr	r5, [pc, #140]	; (80071b4 <_ZN14FileScreenViewC1Ev+0x94>)
 8007128:	f7fb fd98 	bl	8002c5c <_ZN18FileScreenViewBaseC1Ev>
 800712c:	4b22      	ldr	r3, [pc, #136]	; (80071b8 <_ZN14FileScreenViewC1Ev+0x98>)
 800712e:	6023      	str	r3, [r4, #0]
 8007130:	f604 5068 	addw	r0, r4, #3432	; 0xd68
 8007134:	f504 6327 	add.w	r3, r4, #2672	; 0xa70
        : x(0), y(0), width(0), height(0)
 8007138:	2200      	movs	r2, #0
          visible(true)
 800713a:	2701      	movs	r7, #1
 800713c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007140:	809a      	strh	r2, [r3, #4]
 8007142:	80da      	strh	r2, [r3, #6]
 8007144:	811a      	strh	r2, [r3, #8]
 8007146:	815a      	strh	r2, [r3, #10]
 8007148:	819a      	strh	r2, [r3, #12]
 800714a:	81da      	strh	r2, [r3, #14]
 800714c:	821a      	strh	r2, [r3, #16]
 800714e:	825a      	strh	r2, [r3, #18]
 8007150:	61da      	str	r2, [r3, #28]
 8007152:	841a      	strh	r2, [r3, #32]
 8007154:	845a      	strh	r2, [r3, #34]	; 0x22
 8007156:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800715a:	f883 7025 	strb.w	r7, [r3, #37]	; 0x25
 800715e:	629e      	str	r6, [r3, #40]	; 0x28
 8007160:	8599      	strh	r1, [r3, #44]	; 0x2c
        : color(col)
 8007162:	631a      	str	r2, [r3, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007164:	869a      	strh	r2, [r3, #52]	; 0x34
 8007166:	f883 1036 	strb.w	r1, [r3, #54]	; 0x36
 800716a:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800716e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007172:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        : x(x), y(y), width(width), height(height)
 8007176:	879a      	strh	r2, [r3, #60]	; 0x3c
 8007178:	87da      	strh	r2, [r3, #62]	; 0x3e
 800717a:	f8a3 1040 	strh.w	r1, [r3, #64]	; 0x40
 800717e:	f8a3 1042 	strh.w	r1, [r3, #66]	; 0x42
              text(0)
 8007182:	645a      	str	r2, [r3, #68]	; 0x44
 8007184:	601d      	str	r5, [r3, #0]
 8007186:	649a      	str	r2, [r3, #72]	; 0x48
 8007188:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800718c:	334c      	adds	r3, #76	; 0x4c
 800718e:	4283      	cmp	r3, r0
 8007190:	d1d6      	bne.n	8007140 <_ZN14FileScreenViewC1Ev+0x20>
        : pobject(pobject), pmemfun_2(pmemfun_2)
 8007192:	4b0a      	ldr	r3, [pc, #40]	; (80071bc <_ZN14FileScreenViewC1Ev+0x9c>)
 8007194:	f8c4 3da0 	str.w	r3, [r4, #3488]	; 0xda0
 8007198:	4b09      	ldr	r3, [pc, #36]	; (80071c0 <_ZN14FileScreenViewC1Ev+0xa0>)
 800719a:	f8c4 2d9c 	str.w	r2, [r4, #3484]	; 0xd9c
 800719e:	f8c4 4da4 	str.w	r4, [r4, #3492]	; 0xda4
 80071a2:	f8c4 3da8 	str.w	r3, [r4, #3496]	; 0xda8
 80071a6:	f8c4 2dac 	str.w	r2, [r4, #3500]	; 0xdac
}
 80071aa:	4620      	mov	r0, r4
 80071ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80071ae:	bf00      	nop
 80071b0:	080291d0 	.word	0x080291d0
 80071b4:	080291e0 	.word	0x080291e0
 80071b8:	0802a620 	.word	0x0802a620
 80071bc:	0802a608 	.word	0x0802a608
 80071c0:	08006f39 	.word	0x08006f39

080071c4 <_ZN14FileScreenView14sdMsgTxtUpdateEPc>:
{
 80071c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80071c6:	b083      	sub	sp, #12
 80071c8:	4604      	mov	r4, r0
 80071ca:	af00      	add	r7, sp, #0
	Unicode::UnicodeChar buffer[(strlen(msg)+1)];
 80071cc:	4608      	mov	r0, r1
{
 80071ce:	460d      	mov	r5, r1
	Unicode::UnicodeChar buffer[(strlen(msg)+1)];
 80071d0:	f7f9 f80e 	bl	80001f0 <strlen>
 80071d4:	0043      	lsls	r3, r0, #1
 80071d6:	3309      	adds	r3, #9
 80071d8:	f023 0307 	bic.w	r3, r3, #7
 80071dc:	ebad 0d03 	sub.w	sp, sp, r3
	Unicode::strncpy(buffer, msg, (strlen(msg)+1));
 80071e0:	4628      	mov	r0, r5
 80071e2:	f7f9 f805 	bl	80001f0 <strlen>
	Unicode::UnicodeChar buffer[(strlen(msg)+1)];
 80071e6:	466e      	mov	r6, sp
	Unicode::strncpy(buffer, msg, (strlen(msg)+1));
 80071e8:	3001      	adds	r0, #1
 80071ea:	b282      	uxth	r2, r0
 80071ec:	4629      	mov	r1, r5
 80071ee:	4630      	mov	r0, r6
		sdMsgTextBuffer[var] = 0;
 80071f0:	f604 05fe 	addw	r5, r4, #2302	; 0x8fe
	Unicode::strncpy(buffer, msg, (strlen(msg)+1));
 80071f4:	f011 ffa5 	bl	8019142 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
		sdMsgTextBuffer[var] = 0;
 80071f8:	2264      	movs	r2, #100	; 0x64
 80071fa:	2100      	movs	r1, #0
 80071fc:	4628      	mov	r0, r5
 80071fe:	f020 fadd 	bl	80277bc <memset>
	Unicode::snprintf(sdMsgTextBuffer, SDMSGTEXT_SIZE, "%s", buffer);
 8007202:	4a08      	ldr	r2, [pc, #32]	; (8007224 <_ZN14FileScreenView14sdMsgTxtUpdateEPc+0x60>)
 8007204:	4633      	mov	r3, r6
 8007206:	2132      	movs	r1, #50	; 0x32
 8007208:	4628      	mov	r0, r5
 800720a:	f012 fb16 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sdMsgText.resizeToCurrentText();
 800720e:	f504 6080 	add.w	r0, r4, #1024	; 0x400
 8007212:	6078      	str	r0, [r7, #4]
 8007214:	f00d fa82 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
	sdMsgText.invalidate();
 8007218:	6878      	ldr	r0, [r7, #4]
 800721a:	f010 fa3a 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800721e:	370c      	adds	r7, #12
 8007220:	46bd      	mov	sp, r7
 8007222:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007224:	0802915d 	.word	0x0802915d

08007228 <_ZN14FileScreenView14fileListUpdateEPci>:

void FileScreenView::fileListUpdate(char file[25], int noOfFile)
{
 8007228:	b530      	push	{r4, r5, lr}
 800722a:	f04f 33ff 	mov.w	r3, #4294967295
 800722e:	b091      	sub	sp, #68	; 0x44
 8007230:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
 8007234:	4604      	mov	r4, r0
	box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	box1.invalidate();
 8007236:	306c      	adds	r0, #108	; 0x6c
{
 8007238:	4615      	mov	r5, r2
 800723a:	9101      	str	r1, [sp, #4]
	box1.invalidate();
 800723c:	f010 fa29 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>

	Unicode::UnicodeChar buffer[26];
	Unicode::strncpy(buffer, file, 25);
 8007240:	9901      	ldr	r1, [sp, #4]
 8007242:	2219      	movs	r2, #25
 8007244:	a803      	add	r0, sp, #12
 8007246:	f011 ff7c 	bl	8019142 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	if(noOfFile == 0)
 800724a:	b975      	cbnz	r5, 800726a <_ZN14FileScreenView14fileListUpdateEPci+0x42>
	{
		Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, buffer);
 800724c:	aa03      	add	r2, sp, #12
 800724e:	2119      	movs	r1, #25
 8007250:	f504 60ec 	add.w	r0, r4, #1888	; 0x760
 8007254:	f012 fadb 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1.resizeToCurrentText();
 8007258:	f504 70aa 	add.w	r0, r4, #340	; 0x154
		textArea1_6.invalidate();
	}
	if(noOfFile == 7)
	{
		Unicode::snprintf(textArea1_7Buffer, TEXTAREA1_7_SIZE, buffer);
		textArea1_7.resizeToCurrentText();
 800725c:	9001      	str	r0, [sp, #4]
 800725e:	f00d fa5d 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
		textArea1_7.invalidate();
 8007262:	9801      	ldr	r0, [sp, #4]
 8007264:	f010 fa15 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
//		listElement[noOfFile].setWidth(300);
//		listElement[noOfFile].resizeHeightToCurrentText();
//		listElement[noOfFile].resizeToCurrentText();
//		listElement[noOfFile].invalidate();

}
 8007268:	e01f      	b.n	80072aa <_ZN14FileScreenView14fileListUpdateEPci+0x82>
	if(noOfFile == 1)
 800726a:	2d01      	cmp	r5, #1
 800726c:	d00a      	beq.n	8007284 <_ZN14FileScreenView14fileListUpdateEPci+0x5c>
	if(noOfFile == 2)
 800726e:	2d02      	cmp	r5, #2
 8007270:	d111      	bne.n	8007296 <_ZN14FileScreenView14fileListUpdateEPci+0x6e>
		Unicode::snprintf(textArea1_2Buffer, TEXTAREA1_2_SIZE, buffer);
 8007272:	aa03      	add	r2, sp, #12
 8007274:	211a      	movs	r1, #26
 8007276:	f204 70c6 	addw	r0, r4, #1990	; 0x7c6
 800727a:	f012 fac8 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_2.resizeToCurrentText();
 800727e:	f504 70fa 	add.w	r0, r4, #500	; 0x1f4
 8007282:	e7eb      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>
		Unicode::snprintf(textArea1_1Buffer, TEXTAREA1_1_SIZE, buffer);
 8007284:	aa03      	add	r2, sp, #12
 8007286:	211a      	movs	r1, #26
 8007288:	f204 7092 	addw	r0, r4, #1938	; 0x792
 800728c:	f012 fabf 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_1.resizeToCurrentText();
 8007290:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
 8007294:	e7e2      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>
	if(noOfFile == 3)
 8007296:	2d03      	cmp	r5, #3
 8007298:	d009      	beq.n	80072ae <_ZN14FileScreenView14fileListUpdateEPci+0x86>
	if(noOfFile == 4)
 800729a:	2d04      	cmp	r5, #4
 800729c:	d010      	beq.n	80072c0 <_ZN14FileScreenView14fileListUpdateEPci+0x98>
	if(noOfFile == 5)
 800729e:	2d05      	cmp	r5, #5
 80072a0:	d017      	beq.n	80072d2 <_ZN14FileScreenView14fileListUpdateEPci+0xaa>
	if(noOfFile == 6)
 80072a2:	2d06      	cmp	r5, #6
 80072a4:	d01e      	beq.n	80072e4 <_ZN14FileScreenView14fileListUpdateEPci+0xbc>
	if(noOfFile == 7)
 80072a6:	2d07      	cmp	r5, #7
 80072a8:	d025      	beq.n	80072f6 <_ZN14FileScreenView14fileListUpdateEPci+0xce>
}
 80072aa:	b011      	add	sp, #68	; 0x44
 80072ac:	bd30      	pop	{r4, r5, pc}
		Unicode::snprintf(textArea1_3Buffer, TEXTAREA1_3_SIZE, buffer);
 80072ae:	aa03      	add	r2, sp, #12
 80072b0:	211a      	movs	r1, #26
 80072b2:	f204 70fa 	addw	r0, r4, #2042	; 0x7fa
 80072b6:	f012 faaa 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_3.resizeToCurrentText();
 80072ba:	f504 7011 	add.w	r0, r4, #580	; 0x244
 80072be:	e7cd      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>
		Unicode::snprintf(textArea1_4Buffer, TEXTAREA1_4_SIZE, buffer);
 80072c0:	aa03      	add	r2, sp, #12
 80072c2:	211a      	movs	r1, #26
 80072c4:	f604 002e 	addw	r0, r4, #2094	; 0x82e
 80072c8:	f012 faa1 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_4.resizeToCurrentText();
 80072cc:	f504 7025 	add.w	r0, r4, #660	; 0x294
 80072d0:	e7c4      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>
		Unicode::snprintf(textArea1_5Buffer, TEXTAREA1_5_SIZE, buffer);
 80072d2:	aa03      	add	r2, sp, #12
 80072d4:	211a      	movs	r1, #26
 80072d6:	f604 0062 	addw	r0, r4, #2146	; 0x862
 80072da:	f012 fa98 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_5.resizeToCurrentText();
 80072de:	f504 7039 	add.w	r0, r4, #740	; 0x2e4
 80072e2:	e7bb      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>
		Unicode::snprintf(textArea1_6Buffer, TEXTAREA1_6_SIZE, buffer);
 80072e4:	aa03      	add	r2, sp, #12
 80072e6:	211a      	movs	r1, #26
 80072e8:	f604 0096 	addw	r0, r4, #2198	; 0x896
 80072ec:	f012 fa8f 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_6.resizeToCurrentText();
 80072f0:	f504 704d 	add.w	r0, r4, #820	; 0x334
 80072f4:	e7b2      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>
		Unicode::snprintf(textArea1_7Buffer, TEXTAREA1_7_SIZE, buffer);
 80072f6:	aa03      	add	r2, sp, #12
 80072f8:	211a      	movs	r1, #26
 80072fa:	f604 00ca 	addw	r0, r4, #2250	; 0x8ca
 80072fe:	f012 fa86 	bl	801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
		textArea1_7.resizeToCurrentText();
 8007302:	f504 7061 	add.w	r0, r4, #900	; 0x384
 8007306:	e7a9      	b.n	800725c <_ZN14FileScreenView14fileListUpdateEPci+0x34>

08007308 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8007308:	4770      	bx	lr

0800730a <_ZN19FrontendApplicationD0Ev>:
 800730a:	b510      	push	{r4, lr}
 800730c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8007310:	4604      	mov	r4, r0
 8007312:	f020 f89e 	bl	8027452 <_ZdlPvj>
 8007316:	4620      	mov	r0, r4
 8007318:	bd10      	pop	{r4, pc}

0800731a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800731a:	b510      	push	{r4, lr}
 800731c:	4604      	mov	r4, r0
    {
        model.tick();
 800731e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8007322:	f000 f863 	bl	80073ec <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8007326:	4620      	mov	r0, r4
    }
 8007328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800732c:	f00f b8c4 	b.w	80164b8 <_ZN8touchgfx11Application15handleTickEventEv>

08007330 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007330:	b510      	push	{r4, lr}
 8007332:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8007334:	f7fc f982 	bl	800363c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007338:	4b01      	ldr	r3, [pc, #4]	; (8007340 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800733a:	6023      	str	r3, [r4, #0]
{

}
 800733c:	4620      	mov	r0, r4
 800733e:	bd10      	pop	{r4, pc}
 8007340:	0802a654 	.word	0x0802a654

08007344 <_ZN13ModelListener14sdMsgTxtUpdateEPc>:
    virtual void sdMsgTxtUpdate(char msg[]) {}
 8007344:	4770      	bx	lr

08007346 <_ZN13ModelListener14fileListUpdateEPci>:
    virtual void fileListUpdate(char file[25], int noOfFile)  {}
 8007346:	4770      	bx	lr

08007348 <_ZN26MeasurementScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementScreenPresenter() {};
 8007348:	4770      	bx	lr

0800734a <_ZThn4_N26MeasurementScreenPresenterD1Ev>:
 800734a:	3804      	subs	r0, #4
 800734c:	4770      	bx	lr

0800734e <_ZN26MeasurementScreenPresenter10deactivateEv>:
}

void MeasurementScreenPresenter::activate()
{

}
 800734e:	4770      	bx	lr

08007350 <_ZN26MeasurementScreenPresenter14updateCurrent1Et>:

}

void MeasurementScreenPresenter::updateCurrent1(uint16_t adcCurrent1)
{
	view.updateCurrent1(adcCurrent1);
 8007350:	68c0      	ldr	r0, [r0, #12]
 8007352:	6803      	ldr	r3, [r0, #0]
 8007354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007356:	4718      	bx	r3

08007358 <_ZThn4_N26MeasurementScreenPresenter14updateCurrent1Et>:
    virtual void updateCurrent1(uint16_t adcCurrent1);
 8007358:	f1a0 0004 	sub.w	r0, r0, #4
 800735c:	f7ff bff8 	b.w	8007350 <_ZN26MeasurementScreenPresenter14updateCurrent1Et>

08007360 <_ZN26MeasurementScreenPresenterD0Ev>:
    virtual ~MeasurementScreenPresenter() {};
 8007360:	b510      	push	{r4, lr}
 8007362:	2110      	movs	r1, #16
 8007364:	4604      	mov	r4, r0
 8007366:	f020 f874 	bl	8027452 <_ZdlPvj>
 800736a:	4620      	mov	r0, r4
 800736c:	bd10      	pop	{r4, pc}

0800736e <_ZThn4_N26MeasurementScreenPresenterD0Ev>:
 800736e:	f1a0 0004 	sub.w	r0, r0, #4
 8007372:	e7f5      	b.n	8007360 <_ZN26MeasurementScreenPresenterD0Ev>

08007374 <_ZN26MeasurementScreenPresenterC1ER21MeasurementScreenView>:
MeasurementScreenPresenter::MeasurementScreenPresenter(MeasurementScreenView& v)
 8007374:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007376:	2200      	movs	r2, #0
 8007378:	6082      	str	r2, [r0, #8]
    : view(v)
 800737a:	4a04      	ldr	r2, [pc, #16]	; (800738c <_ZN26MeasurementScreenPresenterC1ER21MeasurementScreenView+0x18>)
 800737c:	60c1      	str	r1, [r0, #12]
 800737e:	f102 0408 	add.w	r4, r2, #8
 8007382:	3224      	adds	r2, #36	; 0x24
 8007384:	6004      	str	r4, [r0, #0]
 8007386:	6042      	str	r2, [r0, #4]
}
 8007388:	bd10      	pop	{r4, pc}
 800738a:	bf00      	nop
 800738c:	0802a698 	.word	0x0802a698

08007390 <_ZN21MeasurementScreenViewD1Ev>:

class MeasurementScreenView : public MeasurementScreenViewBase
{
public:
    MeasurementScreenView();
    virtual ~MeasurementScreenView() {}
 8007390:	4770      	bx	lr

08007392 <_ZN21MeasurementScreenView14tearDownScreenEv>:
}

void MeasurementScreenView::tearDownScreen()
{
    MeasurementScreenViewBase::tearDownScreen();
}
 8007392:	4770      	bx	lr

08007394 <_ZN21MeasurementScreenView11setupScreenEv>:
    MeasurementScreenViewBase::setupScreen();
 8007394:	f7fc bd77 	b.w	8003e86 <_ZN25MeasurementScreenViewBase11setupScreenEv>

08007398 <_ZN21MeasurementScreenView14updateCurrent1Et>:

void MeasurementScreenView::updateCurrent1(uint16_t adcCurrent1)
{
 8007398:	b510      	push	{r4, lr}
 800739a:	460b      	mov	r3, r1
 800739c:	4604      	mov	r4, r0
	Unicode::snprintf(textAreaCurrent1Buffer, TEXTAREACURRENT1_SIZE, "%d", adcCurrent1);
 800739e:	4a06      	ldr	r2, [pc, #24]	; (80073b8 <_ZN21MeasurementScreenView14updateCurrent1Et+0x20>)
 80073a0:	2110      	movs	r1, #16
 80073a2:	f600 305c 	addw	r0, r0, #2908	; 0xb5c
 80073a6:	f012 fa48 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textAreaCurrent1.invalidate();
 80073aa:	f604 10bc 	addw	r0, r4, #2492	; 0x9bc
}
 80073ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textAreaCurrent1.invalidate();
 80073b2:	f010 b96e 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80073b6:	bf00      	nop
 80073b8:	0802a6d8 	.word	0x0802a6d8

080073bc <_ZN21MeasurementScreenViewD0Ev>:
 80073bc:	b510      	push	{r4, lr}
 80073be:	f44f 51f3 	mov.w	r1, #7776	; 0x1e60
 80073c2:	4604      	mov	r4, r0
 80073c4:	f020 f845 	bl	8027452 <_ZdlPvj>
 80073c8:	4620      	mov	r0, r4
 80073ca:	bd10      	pop	{r4, pc}

080073cc <_ZN21MeasurementScreenViewC1Ev>:
MeasurementScreenView::MeasurementScreenView()
 80073cc:	b510      	push	{r4, lr}
 80073ce:	4604      	mov	r4, r0
 80073d0:	f7fc fe46 	bl	8004060 <_ZN25MeasurementScreenViewBaseC1Ev>
 80073d4:	4b01      	ldr	r3, [pc, #4]	; (80073dc <_ZN21MeasurementScreenViewC1Ev+0x10>)
 80073d6:	6023      	str	r3, [r4, #0]
}
 80073d8:	4620      	mov	r0, r4
 80073da:	bd10      	pop	{r4, pc}
 80073dc:	0802a6e4 	.word	0x0802a6e4

080073e0 <_ZN5ModelC1Ev>:
uint8_t SDStatus, previous_SdStste;
uint8_t count = 0;
char message[15];


Model::Model() : modelListener(0)
 80073e0:	2200      	movs	r2, #0
 80073e2:	6002      	str	r2, [r0, #0]
 80073e4:	8082      	strh	r2, [r0, #4]
 80073e6:	7182      	strb	r2, [r0, #6]
{

}
 80073e8:	4770      	bx	lr
	...

080073ec <_ZN5Model4tickEv>:

void Model::tick()
{
 80073ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80073ee:	4604      	mov	r4, r0
//	HAL_RTC_GetTime(&hrtc, &RTC_Time, RTC_FORMAT_BIN);
//	modelListener->clockUpdate(RTC_Time.Hours, RTC_Time.Minutes, RTC_Time.Seconds, am);

	if(osMessageQueueGet(getTimeQueueHandle, &GetTime, 0, 0) == osOK)
 80073f0:	1d01      	adds	r1, r0, #4
 80073f2:	482d      	ldr	r0, [pc, #180]	; (80074a8 <_ZN5Model4tickEv+0xbc>)
 80073f4:	2300      	movs	r3, #0
 80073f6:	6800      	ldr	r0, [r0, #0]
 80073f8:	461a      	mov	r2, r3
 80073fa:	f005 fcdc 	bl	800cdb6 <osMessageQueueGet>
 80073fe:	b930      	cbnz	r0, 800740e <_ZN5Model4tickEv+0x22>
	{
		modelListener->clockUpdate(GetTime.hour, GetTime.minute, GetTime.second);
 8007400:	6820      	ldr	r0, [r4, #0]
 8007402:	7962      	ldrb	r2, [r4, #5]
 8007404:	6803      	ldr	r3, [r0, #0]
 8007406:	7921      	ldrb	r1, [r4, #4]
 8007408:	689d      	ldr	r5, [r3, #8]
 800740a:	79a3      	ldrb	r3, [r4, #6]
 800740c:	47a8      	blx	r5
	}
	modelListener->updateCurrent1(adcCurrent1);
 800740e:	6820      	ldr	r0, [r4, #0]
 8007410:	4a26      	ldr	r2, [pc, #152]	; (80074ac <_ZN5Model4tickEv+0xc0>)
 8007412:	6803      	ldr	r3, [r0, #0]

	if(previous_SdStste != sdStatus)
 8007414:	4e26      	ldr	r6, [pc, #152]	; (80074b0 <_ZN5Model4tickEv+0xc4>)
 8007416:	4d27      	ldr	r5, [pc, #156]	; (80074b4 <_ZN5Model4tickEv+0xc8>)
	modelListener->updateCurrent1(adcCurrent1);
 8007418:	68db      	ldr	r3, [r3, #12]
 800741a:	8811      	ldrh	r1, [r2, #0]
 800741c:	4798      	blx	r3
	if(previous_SdStste != sdStatus)
 800741e:	7831      	ldrb	r1, [r6, #0]
 8007420:	782b      	ldrb	r3, [r5, #0]
 8007422:	428b      	cmp	r3, r1
 8007424:	d008      	beq.n	8007438 <_ZN5Model4tickEv+0x4c>
	{
		modelListener->sdStatusUpdate(sdStatus);
 8007426:	6820      	ldr	r0, [r4, #0]
 8007428:	6803      	ldr	r3, [r0, #0]
 800742a:	3900      	subs	r1, #0
 800742c:	691b      	ldr	r3, [r3, #16]
 800742e:	bf18      	it	ne
 8007430:	2101      	movne	r1, #1
 8007432:	4798      	blx	r3
		previous_SdStste = sdStatus;
 8007434:	7833      	ldrb	r3, [r6, #0]
 8007436:	702b      	strb	r3, [r5, #0]
	}
//	char msg[] = "Correct";
//	modelListener->sdMsgTxtUpdate(msg);
	if(osMessageQueueGet(sdMsgQueueHandle, &sdMSG, 0, 0) == osOK)
 8007438:	481f      	ldr	r0, [pc, #124]	; (80074b8 <_ZN5Model4tickEv+0xcc>)
 800743a:	2300      	movs	r3, #0
 800743c:	1de1      	adds	r1, r4, #7
 800743e:	6800      	ldr	r0, [r0, #0]
 8007440:	9101      	str	r1, [sp, #4]
 8007442:	461a      	mov	r2, r3
 8007444:	f005 fcb7 	bl	800cdb6 <osMessageQueueGet>
 8007448:	b920      	cbnz	r0, 8007454 <_ZN5Model4tickEv+0x68>
		{
			modelListener->sdMsgTxtUpdate(sdMSG.sdMsg);
 800744a:	6820      	ldr	r0, [r4, #0]
 800744c:	9901      	ldr	r1, [sp, #4]
 800744e:	6803      	ldr	r3, [r0, #0]
 8007450:	695b      	ldr	r3, [r3, #20]
 8007452:	4798      	blx	r3
		}
	if(osMessageQueueGet(sdFileQueueHandle, &listOfFile, 0, 0) == osOK)
 8007454:	4819      	ldr	r0, [pc, #100]	; (80074bc <_ZN5Model4tickEv+0xd0>)
 8007456:	2300      	movs	r3, #0
 8007458:	f104 0626 	add.w	r6, r4, #38	; 0x26
 800745c:	6800      	ldr	r0, [r0, #0]
 800745e:	461a      	mov	r2, r3
 8007460:	4631      	mov	r1, r6
 8007462:	f005 fca8 	bl	800cdb6 <osMessageQueueGet>
 8007466:	4605      	mov	r5, r0
 8007468:	b960      	cbnz	r0, 8007484 <_ZN5Model4tickEv+0x98>
	{
		for (int var = 0; var < listOfFile.NoOfFile; ++var) {
 800746a:	f894 319d 	ldrb.w	r3, [r4, #413]	; 0x19d
 800746e:	42ab      	cmp	r3, r5
 8007470:	dd08      	ble.n	8007484 <_ZN5Model4tickEv+0x98>
			modelListener->fileListUpdate(listOfFile.file[var], var);
 8007472:	6820      	ldr	r0, [r4, #0]
 8007474:	6803      	ldr	r3, [r0, #0]
 8007476:	462a      	mov	r2, r5
 8007478:	4631      	mov	r1, r6
 800747a:	699b      	ldr	r3, [r3, #24]
 800747c:	4798      	blx	r3
		for (int var = 0; var < listOfFile.NoOfFile; ++var) {
 800747e:	3501      	adds	r5, #1
 8007480:	3619      	adds	r6, #25
 8007482:	e7f2      	b.n	800746a <_ZN5Model4tickEv+0x7e>
		}

	}
	if(osSemaphoreAcquire(myBinarySem01Handle, 0) == osOK)
 8007484:	4b0e      	ldr	r3, [pc, #56]	; (80074c0 <_ZN5Model4tickEv+0xd4>)
 8007486:	2100      	movs	r1, #0
 8007488:	6818      	ldr	r0, [r3, #0]
 800748a:	f005 fbc3 	bl	800cc14 <osSemaphoreAcquire>
 800748e:	b940      	cbnz	r0, 80074a2 <_ZN5Model4tickEv+0xb6>
	{
		modelListener->fileListUpdate("Oh thats it", 5);
 8007490:	6820      	ldr	r0, [r4, #0]
 8007492:	490c      	ldr	r1, [pc, #48]	; (80074c4 <_ZN5Model4tickEv+0xd8>)
 8007494:	6803      	ldr	r3, [r0, #0]
 8007496:	699b      	ldr	r3, [r3, #24]
 8007498:	2205      	movs	r2, #5
	}
}
 800749a:	b002      	add	sp, #8
 800749c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		modelListener->fileListUpdate("Oh thats it", 5);
 80074a0:	4718      	bx	r3
}
 80074a2:	b002      	add	sp, #8
 80074a4:	bd70      	pop	{r4, r5, r6, pc}
 80074a6:	bf00      	nop
 80074a8:	200006ac 	.word	0x200006ac
 80074ac:	200001d8 	.word	0x200001d8
 80074b0:	20000c10 	.word	0x20000c10
 80074b4:	20003db0 	.word	0x20003db0
 80074b8:	20000c0c 	.word	0x20000c0c
 80074bc:	20000b98 	.word	0x20000b98
 80074c0:	200009cc 	.word	0x200009cc
 80074c4:	0802a714 	.word	0x0802a714

080074c8 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 80074c8:	4770      	bx	lr

080074ca <_ZThn4_N16Screen1PresenterD1Ev>:
 80074ca:	3804      	subs	r0, #4
 80074cc:	4770      	bx	lr

080074ce <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80074ce:	4770      	bx	lr

080074d0 <_ZN16Screen1Presenter11clockUpdateEhhh>:

}

void Screen1Presenter::clockUpdate(uint8_t hour, uint8_t minute, uint8_t second)
{
	view.clockUpdate(hour, minute, second);
 80074d0:	68c0      	ldr	r0, [r0, #12]
{
 80074d2:	b410      	push	{r4}
	view.clockUpdate(hour, minute, second);
 80074d4:	6804      	ldr	r4, [r0, #0]
 80074d6:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
 80074d8:	46a4      	mov	ip, r4
}
 80074da:	f85d 4b04 	ldr.w	r4, [sp], #4
	view.clockUpdate(hour, minute, second);
 80074de:	4760      	bx	ip

080074e0 <_ZThn4_N16Screen1Presenter11clockUpdateEhhh>:

    void clockUpdate(uint8_t hour, uint8_t minute, uint8_t second);
 80074e0:	f1a0 0004 	sub.w	r0, r0, #4
 80074e4:	f7ff bff4 	b.w	80074d0 <_ZN16Screen1Presenter11clockUpdateEhhh>

080074e8 <_ZN16Screen1Presenter14sdStatusUpdateEb>:
void Screen1Presenter::sdStatusUpdate(bool sdStatus)
{
	view.sdStatusUpdate(sdStatus);
 80074e8:	68c0      	ldr	r0, [r0, #12]
 80074ea:	6803      	ldr	r3, [r0, #0]
 80074ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80074ee:	4718      	bx	r3

080074f0 <_ZThn4_N16Screen1Presenter14sdStatusUpdateEb>:

    void sdStatusUpdate(bool sdStatus);
 80074f0:	f1a0 0004 	sub.w	r0, r0, #4
 80074f4:	f7ff bff8 	b.w	80074e8 <_ZN16Screen1Presenter14sdStatusUpdateEb>

080074f8 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 80074f8:	b510      	push	{r4, lr}
 80074fa:	2110      	movs	r1, #16
 80074fc:	4604      	mov	r4, r0
 80074fe:	f01f ffa8 	bl	8027452 <_ZdlPvj>
 8007502:	4620      	mov	r0, r4
 8007504:	bd10      	pop	{r4, pc}

08007506 <_ZThn4_N16Screen1PresenterD0Ev>:
 8007506:	f1a0 0004 	sub.w	r0, r0, #4
 800750a:	e7f5      	b.n	80074f8 <_ZN16Screen1PresenterD0Ev>

0800750c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 800750c:	b510      	push	{r4, lr}
 800750e:	2200      	movs	r2, #0
 8007510:	6082      	str	r2, [r0, #8]
    : view(v)
 8007512:	4a04      	ldr	r2, [pc, #16]	; (8007524 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8007514:	60c1      	str	r1, [r0, #12]
 8007516:	f102 0408 	add.w	r4, r2, #8
 800751a:	3228      	adds	r2, #40	; 0x28
 800751c:	6004      	str	r4, [r0, #0]
 800751e:	6042      	str	r2, [r0, #4]
}
 8007520:	bd10      	pop	{r4, pc}
 8007522:	bf00      	nop
 8007524:	0802a720 	.word	0x0802a720

08007528 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8007528:	4770      	bx	lr

0800752a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800752a:	4770      	bx	lr

0800752c <_ZN11Screen1View11setupScreenEv>:
{
 800752c:	b510      	push	{r4, lr}
 800752e:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 8007530:	f7fd fb9b 	bl	8004c6a <_ZN15Screen1ViewBase11setupScreenEv>
    sdStatusUpdate(sdStatus);
 8007534:	4b05      	ldr	r3, [pc, #20]	; (800754c <_ZN11Screen1View11setupScreenEv+0x20>)
 8007536:	7819      	ldrb	r1, [r3, #0]
 8007538:	6823      	ldr	r3, [r4, #0]
 800753a:	3900      	subs	r1, #0
 800753c:	4620      	mov	r0, r4
 800753e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
 8007540:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    sdStatusUpdate(sdStatus);
 8007544:	bf18      	it	ne
 8007546:	2101      	movne	r1, #1
 8007548:	4718      	bx	r3
 800754a:	bf00      	nop
 800754c:	20000c10 	.word	0x20000c10

08007550 <_ZN11Screen1View11clockUpdateEhhh>:

void Screen1View::clockUpdate(uint8_t hour1, uint8_t minute1, uint8_t second1)
{
	digitalClock1.setTime24Hour(hour1, minute1, second1);
 8007550:	f500 7073 	add.w	r0, r0, #972	; 0x3cc
 8007554:	f007 bdc7 	b.w	800f0e6 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>

08007558 <_ZN11Screen1ViewD0Ev>:
 8007558:	b510      	push	{r4, lr}
 800755a:	f240 4174 	movw	r1, #1140	; 0x474
 800755e:	4604      	mov	r4, r0
 8007560:	f01f ff77 	bl	8027452 <_ZdlPvj>
 8007564:	4620      	mov	r0, r4
 8007566:	bd10      	pop	{r4, pc}

08007568 <_ZN11Screen1View14sdStatusUpdateEb>:
}

void Screen1View::sdStatusUpdate(bool SDStatus)
{
 8007568:	b530      	push	{r4, r5, lr}
	animatedImage1.startAnimation(false, true, SDStatus);
 800756a:	460b      	mov	r3, r1
{
 800756c:	4604      	mov	r4, r0
 800756e:	b085      	sub	sp, #20
	animatedImage1.startAnimation(false, true, SDStatus);
 8007570:	f500 704e 	add.w	r0, r0, #824	; 0x338
{
 8007574:	460d      	mov	r5, r1
	animatedImage1.startAnimation(false, true, SDStatus);
 8007576:	2201      	movs	r2, #1
 8007578:	2100      	movs	r1, #0
 800757a:	f00c f9c7 	bl	801390c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
	if(SDStatus == true)
		scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SD_DETECTED_ID));
 800757e:	f504 7068 	add.w	r0, r4, #928	; 0x3a0
	if(SDStatus == true)
 8007582:	b1e5      	cbz	r5, 80075be <_ZN11Screen1View14sdStatusUpdateEb+0x56>
 8007584:	230e      	movs	r3, #14
	else
		scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SD_NOT_DETECTED_ID));
 8007586:	a903      	add	r1, sp, #12
 8007588:	f8ad 300c 	strh.w	r3, [sp, #12]
 800758c:	9001      	str	r0, [sp, #4]
 800758e:	f00d fad7 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setX(x);
 8007592:	f8d4 33a0 	ldr.w	r3, [r4, #928]	; 0x3a0
 8007596:	9801      	ldr	r0, [sp, #4]
        setWidth(width);
 8007598:	9001      	str	r0, [sp, #4]
        rect.x = x;
 800759a:	2200      	movs	r2, #0
 800759c:	f8c4 23a4 	str.w	r2, [r4, #932]	; 0x3a4
        setWidth(width);
 80075a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80075a2:	2112      	movs	r1, #18
 80075a4:	4798      	blx	r3
        setHeight(height);
 80075a6:	f8d4 33a0 	ldr.w	r3, [r4, #928]	; 0x3a0
 80075aa:	9801      	ldr	r0, [sp, #4]
 80075ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80075ae:	2113      	movs	r1, #19
 80075b0:	4798      	blx	r3
	scalableImage1.setPosition(0, 0, 18, 19);
	scalableImage1.invalidate();
 80075b2:	9801      	ldr	r0, [sp, #4]
}
 80075b4:	b005      	add	sp, #20
 80075b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	scalableImage1.invalidate();
 80075ba:	f010 b86a 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80075be:	230f      	movs	r3, #15
 80075c0:	e7e1      	b.n	8007586 <_ZN11Screen1View14sdStatusUpdateEb+0x1e>
	...

080075c4 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80075c4:	b510      	push	{r4, lr}
 80075c6:	4604      	mov	r4, r0
 80075c8:	f7fd fbde 	bl	8004d88 <_ZN15Screen1ViewBaseC1Ev>
 80075cc:	4b01      	ldr	r3, [pc, #4]	; (80075d4 <_ZN11Screen1ViewC1Ev+0x10>)
 80075ce:	6023      	str	r3, [r4, #0]
}
 80075d0:	4620      	mov	r0, r4
 80075d2:	bd10      	pop	{r4, pc}
 80075d4:	0802a76c 	.word	0x0802a76c

080075d8 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80075d8:	4770      	bx	lr

080075da <_ZThn4_N16Screen2PresenterD1Ev>:
 80075da:	3804      	subs	r0, #4
 80075dc:	4770      	bx	lr

080075de <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80075de:	4770      	bx	lr

080075e0 <_ZN16Screen2PresenterD0Ev>:
 80075e0:	b510      	push	{r4, lr}
 80075e2:	2110      	movs	r1, #16
 80075e4:	4604      	mov	r4, r0
 80075e6:	f01f ff34 	bl	8027452 <_ZdlPvj>
 80075ea:	4620      	mov	r0, r4
 80075ec:	bd10      	pop	{r4, pc}

080075ee <_ZThn4_N16Screen2PresenterD0Ev>:
 80075ee:	f1a0 0004 	sub.w	r0, r0, #4
 80075f2:	e7f5      	b.n	80075e0 <_ZN16Screen2PresenterD0Ev>

080075f4 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 80075f4:	b510      	push	{r4, lr}
 80075f6:	2200      	movs	r2, #0
 80075f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80075fa:	4a04      	ldr	r2, [pc, #16]	; (800760c <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 80075fc:	60c1      	str	r1, [r0, #12]
 80075fe:	f102 0408 	add.w	r4, r2, #8
 8007602:	3220      	adds	r2, #32
 8007604:	6004      	str	r4, [r0, #0]
 8007606:	6042      	str	r2, [r0, #4]
}
 8007608:	bd10      	pop	{r4, pc}
 800760a:	bf00      	nop
 800760c:	0802a7a0 	.word	0x0802a7a0

08007610 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8007610:	4770      	bx	lr

08007612 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8007612:	4770      	bx	lr

08007614 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8007614:	f7fe b95d 	b.w	80058d2 <_ZN15Screen2ViewBase11setupScreenEv>

08007618 <_ZN11Screen2ViewD0Ev>:
 8007618:	b510      	push	{r4, lr}
 800761a:	f641 0110 	movw	r1, #6160	; 0x1810
 800761e:	4604      	mov	r4, r0
 8007620:	f01f ff17 	bl	8027452 <_ZdlPvj>
 8007624:	4620      	mov	r0, r4
 8007626:	bd10      	pop	{r4, pc}

08007628 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8007628:	b510      	push	{r4, lr}
 800762a:	4604      	mov	r4, r0
 800762c:	f7fe fa4e 	bl	8005acc <_ZN15Screen2ViewBaseC1Ev>
 8007630:	4b01      	ldr	r3, [pc, #4]	; (8007638 <_ZN11Screen2ViewC1Ev+0x10>)
 8007632:	6023      	str	r3, [r4, #0]
}
 8007634:	4620      	mov	r0, r4
 8007636:	bd10      	pop	{r4, pc}
 8007638:	0802a7e4 	.word	0x0802a7e4

0800763c <_ZN22SettingScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SettingScreenPresenter() {};
 800763c:	4770      	bx	lr

0800763e <_ZThn4_N22SettingScreenPresenterD1Ev>:
 800763e:	3804      	subs	r0, #4
 8007640:	4770      	bx	lr

08007642 <_ZN22SettingScreenPresenter10deactivateEv>:
}

void SettingScreenPresenter::activate()
{

}
 8007642:	4770      	bx	lr

08007644 <_ZN22SettingScreenPresenterD0Ev>:
 8007644:	b510      	push	{r4, lr}
 8007646:	2110      	movs	r1, #16
 8007648:	4604      	mov	r4, r0
 800764a:	f01f ff02 	bl	8027452 <_ZdlPvj>
 800764e:	4620      	mov	r0, r4
 8007650:	bd10      	pop	{r4, pc}

08007652 <_ZThn4_N22SettingScreenPresenterD0Ev>:
 8007652:	f1a0 0004 	sub.w	r0, r0, #4
 8007656:	e7f5      	b.n	8007644 <_ZN22SettingScreenPresenterD0Ev>

08007658 <_ZN22SettingScreenPresenterC1ER17SettingScreenView>:
SettingScreenPresenter::SettingScreenPresenter(SettingScreenView& v)
 8007658:	b510      	push	{r4, lr}
 800765a:	2200      	movs	r2, #0
 800765c:	6082      	str	r2, [r0, #8]
    : view(v)
 800765e:	4a04      	ldr	r2, [pc, #16]	; (8007670 <_ZN22SettingScreenPresenterC1ER17SettingScreenView+0x18>)
 8007660:	60c1      	str	r1, [r0, #12]
 8007662:	f102 0408 	add.w	r4, r2, #8
 8007666:	3220      	adds	r2, #32
 8007668:	6004      	str	r4, [r0, #0]
 800766a:	6042      	str	r2, [r0, #4]
}
 800766c:	bd10      	pop	{r4, pc}
 800766e:	bf00      	nop
 8007670:	0802a810 	.word	0x0802a810

08007674 <_ZN17SettingScreenViewD1Ev>:

class SettingScreenView : public SettingScreenViewBase
{
public:
    SettingScreenView();
    virtual ~SettingScreenView() {}
 8007674:	4770      	bx	lr

08007676 <_ZN17SettingScreenView14tearDownScreenEv>:
}

void SettingScreenView::tearDownScreen()
{
    SettingScreenViewBase::tearDownScreen();
}
 8007676:	4770      	bx	lr

08007678 <_ZN17SettingScreenView11setupScreenEv>:
    SettingScreenViewBase::setupScreen();
 8007678:	f7fe bbd4 	b.w	8005e24 <_ZN21SettingScreenViewBase11setupScreenEv>

0800767c <_ZN17SettingScreenView17nextArrowCallbackEv>:
void SettingScreenView::nextArrowCallback()
{
 800767c:	b538      	push	{r3, r4, r5, lr}
	setTime.hour++;
 800767e:	f890 3b5f 	ldrb.w	r3, [r0, #2911]	; 0xb5f
	if((setTime.hour < 0) || (setTime.hour > 24))
		setTime.hour = 24;
	Unicode::snprintf(digitHourArea1Buffer, DIGITHOURAREA1_SIZE, "%d", setTime.hour);
 8007682:	4a0c      	ldr	r2, [pc, #48]	; (80076b4 <_ZN17SettingScreenView17nextArrowCallbackEv+0x38>)
	setTime.hour++;
 8007684:	3301      	adds	r3, #1
 8007686:	b2db      	uxtb	r3, r3
	if((setTime.hour < 0) || (setTime.hour > 24))
 8007688:	2b18      	cmp	r3, #24
		setTime.hour = 24;
 800768a:	bf88      	it	hi
 800768c:	2318      	movhi	r3, #24
{
 800768e:	4604      	mov	r4, r0
		setTime.hour = 24;
 8007690:	f880 3b5f 	strb.w	r3, [r0, #2911]	; 0xb5f
	Unicode::snprintf(digitHourArea1Buffer, DIGITHOURAREA1_SIZE, "%d", setTime.hour);
 8007694:	f500 6531 	add.w	r5, r0, #2832	; 0xb10
 8007698:	f890 3b5f 	ldrb.w	r3, [r0, #2911]	; 0xb5f
 800769c:	210a      	movs	r1, #10
 800769e:	4628      	mov	r0, r5
 80076a0:	f012 f8cb 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80076a4:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
	digitHourArea1.setWildcard(digitHourArea1Buffer);
	digitHourArea1.invalidate();
 80076a8:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
}
 80076ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	digitHourArea1.invalidate();
 80076b0:	f00f bfef 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80076b4:	0802a6d8 	.word	0x0802a6d8

080076b8 <_ZN17SettingScreenView17backArrowCallbackEv>:

void SettingScreenView::backArrowCallback()
{
 80076b8:	b538      	push	{r3, r4, r5, lr}
	setTime.hour--;
 80076ba:	f890 3b5f 	ldrb.w	r3, [r0, #2911]	; 0xb5f
	if((setTime.hour < 0) || (setTime.hour > 24))
			setTime.hour = 24;
	Unicode::snprintf(digitHourArea1Buffer, DIGITHOURAREA1_SIZE, "%d", setTime.hour);
 80076be:	4a0c      	ldr	r2, [pc, #48]	; (80076f0 <_ZN17SettingScreenView17backArrowCallbackEv+0x38>)
	setTime.hour--;
 80076c0:	3b01      	subs	r3, #1
 80076c2:	b2db      	uxtb	r3, r3
	if((setTime.hour < 0) || (setTime.hour > 24))
 80076c4:	2b18      	cmp	r3, #24
			setTime.hour = 24;
 80076c6:	bf88      	it	hi
 80076c8:	2318      	movhi	r3, #24
{
 80076ca:	4604      	mov	r4, r0
			setTime.hour = 24;
 80076cc:	f880 3b5f 	strb.w	r3, [r0, #2911]	; 0xb5f
	Unicode::snprintf(digitHourArea1Buffer, DIGITHOURAREA1_SIZE, "%d", setTime.hour);
 80076d0:	f500 6531 	add.w	r5, r0, #2832	; 0xb10
 80076d4:	f890 3b5f 	ldrb.w	r3, [r0, #2911]	; 0xb5f
 80076d8:	210a      	movs	r1, #10
 80076da:	4628      	mov	r0, r5
 80076dc:	f012 f8ad 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80076e0:	f8c4 5580 	str.w	r5, [r4, #1408]	; 0x580
	digitHourArea1.setWildcard(digitHourArea1Buffer);
	digitHourArea1.invalidate();
 80076e4:	f504 60a7 	add.w	r0, r4, #1336	; 0x538
}
 80076e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	digitHourArea1.invalidate();
 80076ec:	f00f bfd1 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80076f0:	0802a6d8 	.word	0x0802a6d8

080076f4 <_ZN17SettingScreenView18minutePlusFunctionEv>:

void SettingScreenView::minutePlusFunction()
{
 80076f4:	b538      	push	{r3, r4, r5, lr}
	setTime.minute++;
 80076f6:	f890 3b60 	ldrb.w	r3, [r0, #2912]	; 0xb60
	if((setTime.minute < 0) || (setTime.minute > 60))
		setTime.minute = 60;
	Unicode::snprintf(digitMinuteArea1Buffer, DIGITMINUTEAREA1_SIZE, "%d", setTime.minute);
 80076fa:	4a0c      	ldr	r2, [pc, #48]	; (800772c <_ZN17SettingScreenView18minutePlusFunctionEv+0x38>)
	setTime.minute++;
 80076fc:	3301      	adds	r3, #1
 80076fe:	b2db      	uxtb	r3, r3
	if((setTime.minute < 0) || (setTime.minute > 60))
 8007700:	2b3c      	cmp	r3, #60	; 0x3c
		setTime.minute = 60;
 8007702:	bf88      	it	hi
 8007704:	233c      	movhi	r3, #60	; 0x3c
{
 8007706:	4604      	mov	r4, r0
		setTime.minute = 60;
 8007708:	f880 3b60 	strb.w	r3, [r0, #2912]	; 0xb60
	Unicode::snprintf(digitMinuteArea1Buffer, DIGITMINUTEAREA1_SIZE, "%d", setTime.minute);
 800770c:	f600 3524 	addw	r5, r0, #2852	; 0xb24
 8007710:	f890 3b60 	ldrb.w	r3, [r0, #2912]	; 0xb60
 8007714:	210a      	movs	r1, #10
 8007716:	4628      	mov	r0, r5
 8007718:	f012 f88f 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800771c:	f8c4 5774 	str.w	r5, [r4, #1908]	; 0x774
	digitMinuteArea1.setWildcard(digitMinuteArea1Buffer);
	digitMinuteArea1.invalidate();
 8007720:	f204 702c 	addw	r0, r4, #1836	; 0x72c
}
 8007724:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	digitMinuteArea1.invalidate();
 8007728:	f00f bfb3 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 800772c:	0802a6d8 	.word	0x0802a6d8

08007730 <_ZN17SettingScreenView19minuteMinusFunctionEv>:
void SettingScreenView::minuteMinusFunction()
{
 8007730:	b538      	push	{r3, r4, r5, lr}
	setTime.minute--;
 8007732:	f890 3b60 	ldrb.w	r3, [r0, #2912]	; 0xb60
	if((setTime.minute < 0) || (setTime.minute > 60))
		setTime.minute = 60;
	Unicode::snprintf(digitMinuteArea1Buffer, DIGITMINUTEAREA1_SIZE, "%d", setTime.minute);
 8007736:	4a0c      	ldr	r2, [pc, #48]	; (8007768 <_ZN17SettingScreenView19minuteMinusFunctionEv+0x38>)
	setTime.minute--;
 8007738:	3b01      	subs	r3, #1
 800773a:	b2db      	uxtb	r3, r3
	if((setTime.minute < 0) || (setTime.minute > 60))
 800773c:	2b3c      	cmp	r3, #60	; 0x3c
		setTime.minute = 60;
 800773e:	bf88      	it	hi
 8007740:	233c      	movhi	r3, #60	; 0x3c
{
 8007742:	4604      	mov	r4, r0
		setTime.minute = 60;
 8007744:	f880 3b60 	strb.w	r3, [r0, #2912]	; 0xb60
	Unicode::snprintf(digitMinuteArea1Buffer, DIGITMINUTEAREA1_SIZE, "%d", setTime.minute);
 8007748:	f600 3524 	addw	r5, r0, #2852	; 0xb24
 800774c:	f890 3b60 	ldrb.w	r3, [r0, #2912]	; 0xb60
 8007750:	210a      	movs	r1, #10
 8007752:	4628      	mov	r0, r5
 8007754:	f012 f871 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8007758:	f8c4 5774 	str.w	r5, [r4, #1908]	; 0x774
	digitMinuteArea1.setWildcard(digitMinuteArea1Buffer);
	digitMinuteArea1.invalidate();
 800775c:	f204 702c 	addw	r0, r4, #1836	; 0x72c
}
 8007760:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	digitMinuteArea1.invalidate();
 8007764:	f00f bf95 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007768:	0802a6d8 	.word	0x0802a6d8

0800776c <_ZN17SettingScreenView18secondPlusFunctionEv>:
void SettingScreenView::secondPlusFunction()
{
 800776c:	b538      	push	{r3, r4, r5, lr}
	setTime.second++;
 800776e:	f890 3b61 	ldrb.w	r3, [r0, #2913]	; 0xb61
	if((setTime.second < 0) && (setTime.second > 60))
		setTime.second = 60;
	Unicode::snprintf(digitSecondArea1Buffer, DIGITSECONDAREA1_SIZE, "%d", setTime.second);
 8007772:	4a0a      	ldr	r2, [pc, #40]	; (800779c <_ZN17SettingScreenView18secondPlusFunctionEv+0x30>)
	setTime.second++;
 8007774:	3301      	adds	r3, #1
{
 8007776:	4604      	mov	r4, r0
	setTime.second++;
 8007778:	b2db      	uxtb	r3, r3
	Unicode::snprintf(digitSecondArea1Buffer, DIGITSECONDAREA1_SIZE, "%d", setTime.second);
 800777a:	f600 3538 	addw	r5, r0, #2872	; 0xb38
	setTime.second++;
 800777e:	f880 3b61 	strb.w	r3, [r0, #2913]	; 0xb61
	Unicode::snprintf(digitSecondArea1Buffer, DIGITSECONDAREA1_SIZE, "%d", setTime.second);
 8007782:	210a      	movs	r1, #10
 8007784:	4628      	mov	r0, r5
 8007786:	f012 f858 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800778a:	f8c4 5968 	str.w	r5, [r4, #2408]	; 0x968
	digitSecondArea1.setWildcard(digitSecondArea1Buffer);
	digitSecondArea1.invalidate();
 800778e:	f504 6012 	add.w	r0, r4, #2336	; 0x920
}
 8007792:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	digitSecondArea1.invalidate();
 8007796:	f00f bf7c 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 800779a:	bf00      	nop
 800779c:	0802a6d8 	.word	0x0802a6d8

080077a0 <_ZN17SettingScreenView19secondMinusFunctionEv>:
void SettingScreenView::secondMinusFunction()
{
 80077a0:	b510      	push	{r4, lr}
	setTime.second--;
 80077a2:	f890 3b61 	ldrb.w	r3, [r0, #2913]	; 0xb61
	if((setTime.second < 0) && (setTime.second > 60))
		setTime.second = 60;
	Unicode::snprintf(digitSecondArea1Buffer, DIGITSECONDAREA1_SIZE, "%d", setTime.second);
 80077a6:	4a0a      	ldr	r2, [pc, #40]	; (80077d0 <_ZN17SettingScreenView19secondMinusFunctionEv+0x30>)
	setTime.second--;
 80077a8:	3b01      	subs	r3, #1
 80077aa:	b2db      	uxtb	r3, r3
{
 80077ac:	4604      	mov	r4, r0
	setTime.second--;
 80077ae:	f880 3b61 	strb.w	r3, [r0, #2913]	; 0xb61
	Unicode::snprintf(digitSecondArea1Buffer, DIGITSECONDAREA1_SIZE, "%d", setTime.second);
 80077b2:	210a      	movs	r1, #10
 80077b4:	f600 3038 	addw	r0, r0, #2872	; 0xb38
 80077b8:	f012 f83f 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	digitSecondArea1.setWildcard(digitMinuteArea1Buffer);
 80077bc:	f604 3324 	addw	r3, r4, #2852	; 0xb24
 80077c0:	f8c4 3968 	str.w	r3, [r4, #2408]	; 0x968
	digitSecondArea1.invalidate();
 80077c4:	f504 6012 	add.w	r0, r4, #2336	; 0x920
}
 80077c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	digitSecondArea1.invalidate();
 80077cc:	f00f bf61 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80077d0:	0802a6d8 	.word	0x0802a6d8

080077d4 <_ZN17SettingScreenViewD0Ev>:
 80077d4:	b510      	push	{r4, lr}
 80077d6:	f640 3164 	movw	r1, #2916	; 0xb64
 80077da:	4604      	mov	r4, r0
 80077dc:	f01f fe39 	bl	8027452 <_ZdlPvj>
 80077e0:	4620      	mov	r0, r4
 80077e2:	bd10      	pop	{r4, pc}

080077e4 <_ZN17SettingScreenView15setTimeFunctionEv>:

void SettingScreenView::setTimeFunction()
{
 80077e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80077e6:	4604      	mov	r4, r0
	if(osMessageQueuePut(setTimeQueueHandle, &setTime, 0, 0) == osOK)
 80077e8:	f600 315f 	addw	r1, r0, #2911	; 0xb5f
 80077ec:	480e      	ldr	r0, [pc, #56]	; (8007828 <_ZN17SettingScreenView15setTimeFunctionEv+0x44>)
 80077ee:	2300      	movs	r3, #0
 80077f0:	461a      	mov	r2, r3
 80077f2:	6800      	ldr	r0, [r0, #0]
 80077f4:	f005 faaf 	bl	800cd56 <osMessageQueuePut>
 80077f8:	4603      	mov	r3, r0
	{
		scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ICONS_OK_32_ID));
		modalWindow1.setVisible(true);
		modalWindow1.invalidate();
 80077fa:	f604 156c 	addw	r5, r4, #2412	; 0x96c
		scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ICONS_OK_32_ID));
 80077fe:	f604 20e4 	addw	r0, r4, #2788	; 0xae4
	if(osMessageQueuePut(setTimeQueueHandle, &setTime, 0, 0) == osOK)
 8007802:	b973      	cbnz	r3, 8007822 <_ZN17SettingScreenView15setTimeFunctionEv+0x3e>
 8007804:	230c      	movs	r3, #12
	}
	else
	{
		scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_ERROR_32_ID));
 8007806:	a901      	add	r1, sp, #4
 8007808:	f8ad 3004 	strh.w	r3, [sp, #4]
 800780c:	f00d f998 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        visible = vis;
 8007810:	2301      	movs	r3, #1
		modalWindow1.setVisible(true);
		modalWindow1.invalidate();
 8007812:	4628      	mov	r0, r5
 8007814:	f884 3991 	strb.w	r3, [r4, #2449]	; 0x991
	}

}
 8007818:	b003      	add	sp, #12
 800781a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		modalWindow1.invalidate();
 800781e:	f00f bf38 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007822:	2306      	movs	r3, #6
 8007824:	e7ef      	b.n	8007806 <_ZN17SettingScreenView15setTimeFunctionEv+0x22>
 8007826:	bf00      	nop
 8007828:	20000c1c 	.word	0x20000c1c

0800782c <_ZN17SettingScreenViewC1Ev>:
SettingScreenView::SettingScreenView()
 800782c:	b510      	push	{r4, lr}
 800782e:	4604      	mov	r4, r0
 8007830:	f7fe fba8 	bl	8005f84 <_ZN21SettingScreenViewBaseC1Ev>
 8007834:	4b04      	ldr	r3, [pc, #16]	; (8007848 <_ZN17SettingScreenViewC1Ev+0x1c>)
 8007836:	6023      	str	r3, [r4, #0]
 8007838:	2300      	movs	r3, #0
 800783a:	f8c4 3b5c 	str.w	r3, [r4, #2908]	; 0xb5c
 800783e:	f8a4 3b60 	strh.w	r3, [r4, #2912]	; 0xb60
}
 8007842:	4620      	mov	r0, r4
 8007844:	bd10      	pop	{r4, pc}
 8007846:	bf00      	nop
 8007848:	0802a854 	.word	0x0802a854

0800784c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800784c:	20f0      	movs	r0, #240	; 0xf0
 800784e:	4770      	bx	lr

08007850 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8007850:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8007854:	4770      	bx	lr

08007856 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8007856:	2029      	movs	r0, #41	; 0x29
 8007858:	f7f9 bcd8 	b.w	800120c <LCD_IO_WriteReg>

0800785c <ili9341_DisplayOff>:
 800785c:	2028      	movs	r0, #40	; 0x28
 800785e:	f7f9 bcd5 	b.w	800120c <LCD_IO_WriteReg>

08007862 <ili9341_Init>:
{
 8007862:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8007864:	f7f9 fca6 	bl	80011b4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8007868:	20ca      	movs	r0, #202	; 0xca
 800786a:	f7f9 fccf 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800786e:	20c3      	movs	r0, #195	; 0xc3
 8007870:	f7f9 fcb0 	bl	80011d4 <LCD_IO_WriteData>
 8007874:	2008      	movs	r0, #8
 8007876:	f7f9 fcad 	bl	80011d4 <LCD_IO_WriteData>
 800787a:	2050      	movs	r0, #80	; 0x50
 800787c:	f7f9 fcaa 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007880:	20cf      	movs	r0, #207	; 0xcf
 8007882:	f7f9 fcc3 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007886:	2000      	movs	r0, #0
 8007888:	f7f9 fca4 	bl	80011d4 <LCD_IO_WriteData>
 800788c:	20c1      	movs	r0, #193	; 0xc1
 800788e:	f7f9 fca1 	bl	80011d4 <LCD_IO_WriteData>
 8007892:	2030      	movs	r0, #48	; 0x30
 8007894:	f7f9 fc9e 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007898:	20ed      	movs	r0, #237	; 0xed
 800789a:	f7f9 fcb7 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800789e:	2064      	movs	r0, #100	; 0x64
 80078a0:	f7f9 fc98 	bl	80011d4 <LCD_IO_WriteData>
 80078a4:	2003      	movs	r0, #3
 80078a6:	f7f9 fc95 	bl	80011d4 <LCD_IO_WriteData>
 80078aa:	2012      	movs	r0, #18
 80078ac:	f7f9 fc92 	bl	80011d4 <LCD_IO_WriteData>
 80078b0:	2081      	movs	r0, #129	; 0x81
 80078b2:	f7f9 fc8f 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078b6:	20e8      	movs	r0, #232	; 0xe8
 80078b8:	f7f9 fca8 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078bc:	2085      	movs	r0, #133	; 0x85
 80078be:	f7f9 fc89 	bl	80011d4 <LCD_IO_WriteData>
 80078c2:	2000      	movs	r0, #0
 80078c4:	f7f9 fc86 	bl	80011d4 <LCD_IO_WriteData>
 80078c8:	2078      	movs	r0, #120	; 0x78
 80078ca:	f7f9 fc83 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078ce:	20cb      	movs	r0, #203	; 0xcb
 80078d0:	f7f9 fc9c 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078d4:	2039      	movs	r0, #57	; 0x39
 80078d6:	f7f9 fc7d 	bl	80011d4 <LCD_IO_WriteData>
 80078da:	202c      	movs	r0, #44	; 0x2c
 80078dc:	f7f9 fc7a 	bl	80011d4 <LCD_IO_WriteData>
 80078e0:	2000      	movs	r0, #0
 80078e2:	f7f9 fc77 	bl	80011d4 <LCD_IO_WriteData>
 80078e6:	2034      	movs	r0, #52	; 0x34
 80078e8:	f7f9 fc74 	bl	80011d4 <LCD_IO_WriteData>
 80078ec:	2002      	movs	r0, #2
 80078ee:	f7f9 fc71 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078f2:	20f7      	movs	r0, #247	; 0xf7
 80078f4:	f7f9 fc8a 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80078f8:	2020      	movs	r0, #32
 80078fa:	f7f9 fc6b 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80078fe:	20ea      	movs	r0, #234	; 0xea
 8007900:	f7f9 fc84 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007904:	2000      	movs	r0, #0
 8007906:	f7f9 fc65 	bl	80011d4 <LCD_IO_WriteData>
 800790a:	2000      	movs	r0, #0
 800790c:	f7f9 fc62 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007910:	20b1      	movs	r0, #177	; 0xb1
 8007912:	f7f9 fc7b 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007916:	2000      	movs	r0, #0
 8007918:	f7f9 fc5c 	bl	80011d4 <LCD_IO_WriteData>
 800791c:	201b      	movs	r0, #27
 800791e:	f7f9 fc59 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007922:	20b6      	movs	r0, #182	; 0xb6
 8007924:	f7f9 fc72 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007928:	200a      	movs	r0, #10
 800792a:	f7f9 fc53 	bl	80011d4 <LCD_IO_WriteData>
 800792e:	20a2      	movs	r0, #162	; 0xa2
 8007930:	f7f9 fc50 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007934:	20c0      	movs	r0, #192	; 0xc0
 8007936:	f7f9 fc69 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800793a:	2010      	movs	r0, #16
 800793c:	f7f9 fc4a 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007940:	20c1      	movs	r0, #193	; 0xc1
 8007942:	f7f9 fc63 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007946:	2010      	movs	r0, #16
 8007948:	f7f9 fc44 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800794c:	20c5      	movs	r0, #197	; 0xc5
 800794e:	f7f9 fc5d 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007952:	2045      	movs	r0, #69	; 0x45
 8007954:	f7f9 fc3e 	bl	80011d4 <LCD_IO_WriteData>
 8007958:	2015      	movs	r0, #21
 800795a:	f7f9 fc3b 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800795e:	20c7      	movs	r0, #199	; 0xc7
 8007960:	f7f9 fc54 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007964:	2090      	movs	r0, #144	; 0x90
 8007966:	f7f9 fc35 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800796a:	2036      	movs	r0, #54	; 0x36
 800796c:	f7f9 fc4e 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007970:	20c8      	movs	r0, #200	; 0xc8
 8007972:	f7f9 fc2f 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007976:	20f2      	movs	r0, #242	; 0xf2
 8007978:	f7f9 fc48 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800797c:	2000      	movs	r0, #0
 800797e:	f7f9 fc29 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007982:	20b0      	movs	r0, #176	; 0xb0
 8007984:	f7f9 fc42 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007988:	20c2      	movs	r0, #194	; 0xc2
 800798a:	f7f9 fc23 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800798e:	20b6      	movs	r0, #182	; 0xb6
 8007990:	f7f9 fc3c 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007994:	200a      	movs	r0, #10
 8007996:	f7f9 fc1d 	bl	80011d4 <LCD_IO_WriteData>
 800799a:	20a7      	movs	r0, #167	; 0xa7
 800799c:	f7f9 fc1a 	bl	80011d4 <LCD_IO_WriteData>
 80079a0:	2027      	movs	r0, #39	; 0x27
 80079a2:	f7f9 fc17 	bl	80011d4 <LCD_IO_WriteData>
 80079a6:	2004      	movs	r0, #4
 80079a8:	f7f9 fc14 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80079ac:	202a      	movs	r0, #42	; 0x2a
 80079ae:	f7f9 fc2d 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80079b2:	2000      	movs	r0, #0
 80079b4:	f7f9 fc0e 	bl	80011d4 <LCD_IO_WriteData>
 80079b8:	2000      	movs	r0, #0
 80079ba:	f7f9 fc0b 	bl	80011d4 <LCD_IO_WriteData>
 80079be:	2000      	movs	r0, #0
 80079c0:	f7f9 fc08 	bl	80011d4 <LCD_IO_WriteData>
 80079c4:	20ef      	movs	r0, #239	; 0xef
 80079c6:	f7f9 fc05 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80079ca:	202b      	movs	r0, #43	; 0x2b
 80079cc:	f7f9 fc1e 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80079d0:	2000      	movs	r0, #0
 80079d2:	f7f9 fbff 	bl	80011d4 <LCD_IO_WriteData>
 80079d6:	2000      	movs	r0, #0
 80079d8:	f7f9 fbfc 	bl	80011d4 <LCD_IO_WriteData>
 80079dc:	2001      	movs	r0, #1
 80079de:	f7f9 fbf9 	bl	80011d4 <LCD_IO_WriteData>
 80079e2:	203f      	movs	r0, #63	; 0x3f
 80079e4:	f7f9 fbf6 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80079e8:	20f6      	movs	r0, #246	; 0xf6
 80079ea:	f7f9 fc0f 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80079ee:	2001      	movs	r0, #1
 80079f0:	f7f9 fbf0 	bl	80011d4 <LCD_IO_WriteData>
 80079f4:	2000      	movs	r0, #0
 80079f6:	f7f9 fbed 	bl	80011d4 <LCD_IO_WriteData>
 80079fa:	2006      	movs	r0, #6
 80079fc:	f7f9 fbea 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007a00:	202c      	movs	r0, #44	; 0x2c
 8007a02:	f7f9 fc03 	bl	800120c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007a06:	20c8      	movs	r0, #200	; 0xc8
 8007a08:	f7f9 fc4e 	bl	80012a8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007a0c:	2026      	movs	r0, #38	; 0x26
 8007a0e:	f7f9 fbfd 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007a12:	2001      	movs	r0, #1
 8007a14:	f7f9 fbde 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007a18:	20e0      	movs	r0, #224	; 0xe0
 8007a1a:	f7f9 fbf7 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007a1e:	200f      	movs	r0, #15
 8007a20:	f7f9 fbd8 	bl	80011d4 <LCD_IO_WriteData>
 8007a24:	2029      	movs	r0, #41	; 0x29
 8007a26:	f7f9 fbd5 	bl	80011d4 <LCD_IO_WriteData>
 8007a2a:	2024      	movs	r0, #36	; 0x24
 8007a2c:	f7f9 fbd2 	bl	80011d4 <LCD_IO_WriteData>
 8007a30:	200c      	movs	r0, #12
 8007a32:	f7f9 fbcf 	bl	80011d4 <LCD_IO_WriteData>
 8007a36:	200e      	movs	r0, #14
 8007a38:	f7f9 fbcc 	bl	80011d4 <LCD_IO_WriteData>
 8007a3c:	2009      	movs	r0, #9
 8007a3e:	f7f9 fbc9 	bl	80011d4 <LCD_IO_WriteData>
 8007a42:	204e      	movs	r0, #78	; 0x4e
 8007a44:	f7f9 fbc6 	bl	80011d4 <LCD_IO_WriteData>
 8007a48:	2078      	movs	r0, #120	; 0x78
 8007a4a:	f7f9 fbc3 	bl	80011d4 <LCD_IO_WriteData>
 8007a4e:	203c      	movs	r0, #60	; 0x3c
 8007a50:	f7f9 fbc0 	bl	80011d4 <LCD_IO_WriteData>
 8007a54:	2009      	movs	r0, #9
 8007a56:	f7f9 fbbd 	bl	80011d4 <LCD_IO_WriteData>
 8007a5a:	2013      	movs	r0, #19
 8007a5c:	f7f9 fbba 	bl	80011d4 <LCD_IO_WriteData>
 8007a60:	2005      	movs	r0, #5
 8007a62:	f7f9 fbb7 	bl	80011d4 <LCD_IO_WriteData>
 8007a66:	2017      	movs	r0, #23
 8007a68:	f7f9 fbb4 	bl	80011d4 <LCD_IO_WriteData>
 8007a6c:	2011      	movs	r0, #17
 8007a6e:	f7f9 fbb1 	bl	80011d4 <LCD_IO_WriteData>
 8007a72:	2000      	movs	r0, #0
 8007a74:	f7f9 fbae 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007a78:	20e1      	movs	r0, #225	; 0xe1
 8007a7a:	f7f9 fbc7 	bl	800120c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007a7e:	2000      	movs	r0, #0
 8007a80:	f7f9 fba8 	bl	80011d4 <LCD_IO_WriteData>
 8007a84:	2016      	movs	r0, #22
 8007a86:	f7f9 fba5 	bl	80011d4 <LCD_IO_WriteData>
 8007a8a:	201b      	movs	r0, #27
 8007a8c:	f7f9 fba2 	bl	80011d4 <LCD_IO_WriteData>
 8007a90:	2004      	movs	r0, #4
 8007a92:	f7f9 fb9f 	bl	80011d4 <LCD_IO_WriteData>
 8007a96:	2011      	movs	r0, #17
 8007a98:	f7f9 fb9c 	bl	80011d4 <LCD_IO_WriteData>
 8007a9c:	2007      	movs	r0, #7
 8007a9e:	f7f9 fb99 	bl	80011d4 <LCD_IO_WriteData>
 8007aa2:	2031      	movs	r0, #49	; 0x31
 8007aa4:	f7f9 fb96 	bl	80011d4 <LCD_IO_WriteData>
 8007aa8:	2033      	movs	r0, #51	; 0x33
 8007aaa:	f7f9 fb93 	bl	80011d4 <LCD_IO_WriteData>
 8007aae:	2042      	movs	r0, #66	; 0x42
 8007ab0:	f7f9 fb90 	bl	80011d4 <LCD_IO_WriteData>
 8007ab4:	2005      	movs	r0, #5
 8007ab6:	f7f9 fb8d 	bl	80011d4 <LCD_IO_WriteData>
 8007aba:	200c      	movs	r0, #12
 8007abc:	f7f9 fb8a 	bl	80011d4 <LCD_IO_WriteData>
 8007ac0:	200a      	movs	r0, #10
 8007ac2:	f7f9 fb87 	bl	80011d4 <LCD_IO_WriteData>
 8007ac6:	2028      	movs	r0, #40	; 0x28
 8007ac8:	f7f9 fb84 	bl	80011d4 <LCD_IO_WriteData>
 8007acc:	202f      	movs	r0, #47	; 0x2f
 8007ace:	f7f9 fb81 	bl	80011d4 <LCD_IO_WriteData>
 8007ad2:	200f      	movs	r0, #15
 8007ad4:	f7f9 fb7e 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007ad8:	2011      	movs	r0, #17
 8007ada:	f7f9 fb97 	bl	800120c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007ade:	20c8      	movs	r0, #200	; 0xc8
 8007ae0:	f7f9 fbe2 	bl	80012a8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007ae4:	2029      	movs	r0, #41	; 0x29
 8007ae6:	f7f9 fb91 	bl	800120c <LCD_IO_WriteReg>
}
 8007aea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8007aee:	202c      	movs	r0, #44	; 0x2c
 8007af0:	f7f9 bb8c 	b.w	800120c <LCD_IO_WriteReg>

08007af4 <ili9341_ReadID>:
{
 8007af4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8007af6:	f7f9 fb5d 	bl	80011b4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8007afa:	2103      	movs	r1, #3
 8007afc:	20d3      	movs	r0, #211	; 0xd3
 8007afe:	f7f9 fba1 	bl	8001244 <LCD_IO_ReadData>
}
 8007b02:	b280      	uxth	r0, r0
 8007b04:	bd08      	pop	{r3, pc}

08007b06 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8007b06:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8007b08:	b2c4      	uxtb	r4, r0
 8007b0a:	2202      	movs	r2, #2
 8007b0c:	2103      	movs	r1, #3
 8007b0e:	4620      	mov	r0, r4
 8007b10:	f7f9 fb06 	bl	8001120 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8007b14:	200a      	movs	r0, #10
 8007b16:	f7f9 fb4b 	bl	80011b0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007b1a:	4620      	mov	r0, r4
 8007b1c:	2200      	movs	r2, #0
 8007b1e:	2103      	movs	r1, #3
 8007b20:	f7f9 fafe 	bl	8001120 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8007b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007b28:	2002      	movs	r0, #2
 8007b2a:	f7f9 bb41 	b.w	80011b0 <IOE_Delay>

08007b2e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8007b2e:	b538      	push	{r3, r4, r5, lr}
 8007b30:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007b32:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8007b34:	f7f9 faf2 	bl	800111c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007b38:	2100      	movs	r1, #0
 8007b3a:	4620      	mov	r0, r4
 8007b3c:	f7f9 fb08 	bl	8001150 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007b40:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007b42:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007b44:	4620      	mov	r0, r4
 8007b46:	f7f9 fb03 	bl	8001150 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007b4a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8007b4e:	b280      	uxth	r0, r0
 8007b50:	bd38      	pop	{r3, r4, r5, pc}

08007b52 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8007b52:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8007b54:	b2c4      	uxtb	r4, r0
 8007b56:	2140      	movs	r1, #64	; 0x40
 8007b58:	4620      	mov	r0, r4
 8007b5a:	f7f9 faf9 	bl	8001150 <IOE_Read>
  
  if(state > 0)
 8007b5e:	0603      	lsls	r3, r0, #24
 8007b60:	d507      	bpl.n	8007b72 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8007b62:	214c      	movs	r1, #76	; 0x4c
 8007b64:	4620      	mov	r0, r4
 8007b66:	f7f9 faf3 	bl	8001150 <IOE_Read>
    {
      ret = 1;
 8007b6a:	3800      	subs	r0, #0
 8007b6c:	bf18      	it	ne
 8007b6e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8007b70:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007b72:	2201      	movs	r2, #1
 8007b74:	214b      	movs	r1, #75	; 0x4b
 8007b76:	4620      	mov	r0, r4
 8007b78:	f7f9 fad2 	bl	8001120 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007b7c:	4620      	mov	r0, r4
 8007b7e:	2200      	movs	r2, #0
 8007b80:	214b      	movs	r1, #75	; 0x4b
 8007b82:	f7f9 facd 	bl	8001120 <IOE_Write>
  uint8_t ret = 0;
 8007b86:	2000      	movs	r0, #0
 8007b88:	e7f2      	b.n	8007b70 <stmpe811_TS_DetectTouch+0x1e>

08007b8a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8007b8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007b8c:	2304      	movs	r3, #4
 8007b8e:	b2c4      	uxtb	r4, r0
{
 8007b90:	460e      	mov	r6, r1
 8007b92:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007b94:	21d7      	movs	r1, #215	; 0xd7
 8007b96:	eb0d 0203 	add.w	r2, sp, r3
 8007b9a:	4620      	mov	r0, r4
 8007b9c:	f7f9 faf2 	bl	8001184 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8007ba0:	9b01      	ldr	r3, [sp, #4]
 8007ba2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007ba4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007ba6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007baa:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007bac:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007bae:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007bb0:	2201      	movs	r2, #1
 8007bb2:	214b      	movs	r1, #75	; 0x4b
 8007bb4:	f7f9 fab4 	bl	8001120 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007bb8:	2200      	movs	r2, #0
 8007bba:	214b      	movs	r1, #75	; 0x4b
 8007bbc:	4620      	mov	r0, r4
 8007bbe:	f7f9 faaf 	bl	8001120 <IOE_Write>
}
 8007bc2:	b002      	add	sp, #8
 8007bc4:	bd70      	pop	{r4, r5, r6, pc}
	...

08007bc8 <stmpe811_Init>:
{
 8007bc8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8007bca:	4b0a      	ldr	r3, [pc, #40]	; (8007bf4 <stmpe811_Init+0x2c>)
 8007bcc:	781a      	ldrb	r2, [r3, #0]
 8007bce:	4290      	cmp	r0, r2
{
 8007bd0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8007bd2:	d00d      	beq.n	8007bf0 <stmpe811_Init+0x28>
 8007bd4:	7859      	ldrb	r1, [r3, #1]
 8007bd6:	4288      	cmp	r0, r1
 8007bd8:	d00a      	beq.n	8007bf0 <stmpe811_Init+0x28>
 8007bda:	b10a      	cbz	r2, 8007be0 <stmpe811_Init+0x18>
 8007bdc:	b941      	cbnz	r1, 8007bf0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8007bde:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8007be0:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8007be2:	f7f9 fa9b 	bl	800111c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8007be6:	4620      	mov	r0, r4
}
 8007be8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8007bec:	f7ff bf8b 	b.w	8007b06 <stmpe811_Reset>
}
 8007bf0:	bd10      	pop	{r4, pc}
 8007bf2:	bf00      	nop
 8007bf4:	20003db1 	.word	0x20003db1

08007bf8 <stmpe811_EnableGlobalIT>:
{
 8007bf8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007bfa:	b2c4      	uxtb	r4, r0
 8007bfc:	2109      	movs	r1, #9
 8007bfe:	4620      	mov	r0, r4
 8007c00:	f7f9 faa6 	bl	8001150 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007c04:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007c08:	b2c2      	uxtb	r2, r0
 8007c0a:	2109      	movs	r1, #9
 8007c0c:	4620      	mov	r0, r4
}
 8007c0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007c12:	f7f9 ba85 	b.w	8001120 <IOE_Write>

08007c16 <stmpe811_DisableGlobalIT>:
{
 8007c16:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007c18:	b2c4      	uxtb	r4, r0
 8007c1a:	2109      	movs	r1, #9
 8007c1c:	4620      	mov	r0, r4
 8007c1e:	f7f9 fa97 	bl	8001150 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8007c22:	2109      	movs	r1, #9
 8007c24:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8007c28:	4620      	mov	r0, r4
}
 8007c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8007c2e:	f7f9 ba77 	b.w	8001120 <IOE_Write>

08007c32 <stmpe811_EnableITSource>:
{
 8007c32:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c34:	b2c4      	uxtb	r4, r0
{
 8007c36:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c38:	4620      	mov	r0, r4
 8007c3a:	210a      	movs	r1, #10
 8007c3c:	f7f9 fa88 	bl	8001150 <IOE_Read>
  tmp |= Source; 
 8007c40:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c42:	b2c2      	uxtb	r2, r0
 8007c44:	210a      	movs	r1, #10
 8007c46:	4620      	mov	r0, r4
}
 8007c48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c4c:	f7f9 ba68 	b.w	8001120 <IOE_Write>

08007c50 <stmpe811_TS_EnableIT>:
{
 8007c50:	b507      	push	{r0, r1, r2, lr}
 8007c52:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8007c54:	f7f9 fa63 	bl	800111e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007c58:	9801      	ldr	r0, [sp, #4]
 8007c5a:	211f      	movs	r1, #31
 8007c5c:	f7ff ffe9 	bl	8007c32 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8007c60:	9801      	ldr	r0, [sp, #4]
}
 8007c62:	b003      	add	sp, #12
 8007c64:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8007c68:	f7ff bfc6 	b.w	8007bf8 <stmpe811_EnableGlobalIT>

08007c6c <stmpe811_DisableITSource>:
{
 8007c6c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c6e:	b2c4      	uxtb	r4, r0
{
 8007c70:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007c72:	4620      	mov	r0, r4
 8007c74:	210a      	movs	r1, #10
 8007c76:	f7f9 fa6b 	bl	8001150 <IOE_Read>
  tmp &= ~Source; 
 8007c7a:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c7e:	b2c2      	uxtb	r2, r0
 8007c80:	210a      	movs	r1, #10
 8007c82:	4620      	mov	r0, r4
}
 8007c84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007c88:	f7f9 ba4a 	b.w	8001120 <IOE_Write>

08007c8c <stmpe811_TS_DisableIT>:
{
 8007c8c:	b510      	push	{r4, lr}
 8007c8e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8007c90:	f7ff ffc1 	bl	8007c16 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007c94:	4620      	mov	r0, r4
 8007c96:	211f      	movs	r1, #31
}
 8007c98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007c9c:	f7ff bfe6 	b.w	8007c6c <stmpe811_DisableITSource>

08007ca0 <stmpe811_ReadGITStatus>:
{
 8007ca0:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007ca2:	b2c0      	uxtb	r0, r0
{
 8007ca4:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007ca6:	210b      	movs	r1, #11
 8007ca8:	f7f9 fa52 	bl	8001150 <IOE_Read>
}
 8007cac:	4020      	ands	r0, r4
 8007cae:	bd10      	pop	{r4, pc}

08007cb0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8007cb0:	211f      	movs	r1, #31
 8007cb2:	f7ff bff5 	b.w	8007ca0 <stmpe811_ReadGITStatus>

08007cb6 <stmpe811_ClearGlobalIT>:
{
 8007cb6:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8007cb8:	b2c0      	uxtb	r0, r0
 8007cba:	210b      	movs	r1, #11
 8007cbc:	f7f9 ba30 	b.w	8001120 <IOE_Write>

08007cc0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8007cc0:	211f      	movs	r1, #31
 8007cc2:	f7ff bff8 	b.w	8007cb6 <stmpe811_ClearGlobalIT>

08007cc6 <stmpe811_IO_EnableAF>:
{
 8007cc6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007cc8:	b2c4      	uxtb	r4, r0
{
 8007cca:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007ccc:	4620      	mov	r0, r4
 8007cce:	2117      	movs	r1, #23
 8007cd0:	f7f9 fa3e 	bl	8001150 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8007cd4:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007cd8:	b2c2      	uxtb	r2, r0
 8007cda:	2117      	movs	r1, #23
 8007cdc:	4620      	mov	r0, r4
}
 8007cde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007ce2:	f7f9 ba1d 	b.w	8001120 <IOE_Write>

08007ce6 <stmpe811_TS_Start>:
{
 8007ce6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007ce8:	b2c4      	uxtb	r4, r0
{
 8007cea:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007cec:	2104      	movs	r1, #4
 8007cee:	4620      	mov	r0, r4
 8007cf0:	f7f9 fa2e 	bl	8001150 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007cf4:	2104      	movs	r1, #4
 8007cf6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007cfa:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007cfc:	4620      	mov	r0, r4
 8007cfe:	f7f9 fa0f 	bl	8001120 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8007d02:	4630      	mov	r0, r6
 8007d04:	21f0      	movs	r1, #240	; 0xf0
 8007d06:	f7ff ffde 	bl	8007cc6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007d0a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8007d0e:	4620      	mov	r0, r4
 8007d10:	2104      	movs	r1, #4
 8007d12:	f7f9 fa05 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8007d16:	2249      	movs	r2, #73	; 0x49
 8007d18:	2120      	movs	r1, #32
 8007d1a:	4620      	mov	r0, r4
 8007d1c:	f7f9 fa00 	bl	8001120 <IOE_Write>
  IOE_Delay(2); 
 8007d20:	2002      	movs	r0, #2
 8007d22:	f7f9 fa45 	bl	80011b0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8007d26:	4620      	mov	r0, r4
 8007d28:	2201      	movs	r2, #1
 8007d2a:	2121      	movs	r1, #33	; 0x21
 8007d2c:	f7f9 f9f8 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8007d30:	4620      	mov	r0, r4
 8007d32:	229a      	movs	r2, #154	; 0x9a
 8007d34:	2141      	movs	r1, #65	; 0x41
 8007d36:	f7f9 f9f3 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8007d3a:	4620      	mov	r0, r4
 8007d3c:	2201      	movs	r2, #1
 8007d3e:	214a      	movs	r1, #74	; 0x4a
 8007d40:	f7f9 f9ee 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007d44:	4620      	mov	r0, r4
 8007d46:	2201      	movs	r2, #1
 8007d48:	214b      	movs	r1, #75	; 0x4b
 8007d4a:	f7f9 f9e9 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007d4e:	4620      	mov	r0, r4
 8007d50:	2200      	movs	r2, #0
 8007d52:	214b      	movs	r1, #75	; 0x4b
 8007d54:	f7f9 f9e4 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8007d58:	4620      	mov	r0, r4
 8007d5a:	2201      	movs	r2, #1
 8007d5c:	2156      	movs	r1, #86	; 0x56
 8007d5e:	f7f9 f9df 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8007d62:	4620      	mov	r0, r4
 8007d64:	2201      	movs	r2, #1
 8007d66:	2158      	movs	r1, #88	; 0x58
 8007d68:	f7f9 f9da 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8007d6c:	4620      	mov	r0, r4
 8007d6e:	2201      	movs	r2, #1
 8007d70:	2140      	movs	r1, #64	; 0x40
 8007d72:	f7f9 f9d5 	bl	8001120 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8007d76:	4620      	mov	r0, r4
 8007d78:	22ff      	movs	r2, #255	; 0xff
 8007d7a:	210b      	movs	r1, #11
 8007d7c:	f7f9 f9d0 	bl	8001120 <IOE_Write>
}
 8007d80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8007d84:	2002      	movs	r0, #2
 8007d86:	f7f9 ba13 	b.w	80011b0 <IOE_Delay>
	...

08007d8c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007d8c:	4b05      	ldr	r3, [pc, #20]	; (8007da4 <SystemInit+0x18>)
 8007d8e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8007d92:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007d96:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007d9a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007d9e:	609a      	str	r2, [r3, #8]
#endif
}
 8007da0:	4770      	bx	lr
 8007da2:	bf00      	nop
 8007da4:	e000ed00 	.word	0xe000ed00

08007da8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8007da8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8007daa:	4b0b      	ldr	r3, [pc, #44]	; (8007dd8 <HAL_Init+0x30>)
 8007dac:	681a      	ldr	r2, [r3, #0]
 8007dae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007db2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007db4:	681a      	ldr	r2, [r3, #0]
 8007db6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007dba:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8007dbc:	681a      	ldr	r2, [r3, #0]
 8007dbe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007dc2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007dc4:	2003      	movs	r0, #3
 8007dc6:	f000 f82f 	bl	8007e28 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8007dca:	2005      	movs	r0, #5
 8007dcc:	f7f9 fd90 	bl	80018f0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007dd0:	f7f9 fa7e 	bl	80012d0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007dd4:	2000      	movs	r0, #0
 8007dd6:	bd08      	pop	{r3, pc}
 8007dd8:	40023c00 	.word	0x40023c00

08007ddc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007ddc:	4a03      	ldr	r2, [pc, #12]	; (8007dec <HAL_IncTick+0x10>)
 8007dde:	4b04      	ldr	r3, [pc, #16]	; (8007df0 <HAL_IncTick+0x14>)
 8007de0:	6811      	ldr	r1, [r2, #0]
 8007de2:	781b      	ldrb	r3, [r3, #0]
 8007de4:	440b      	add	r3, r1
 8007de6:	6013      	str	r3, [r2, #0]
}
 8007de8:	4770      	bx	lr
 8007dea:	bf00      	nop
 8007dec:	20003db4 	.word	0x20003db4
 8007df0:	2000009c 	.word	0x2000009c

08007df4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007df4:	4b01      	ldr	r3, [pc, #4]	; (8007dfc <HAL_GetTick+0x8>)
 8007df6:	6818      	ldr	r0, [r3, #0]
}
 8007df8:	4770      	bx	lr
 8007dfa:	bf00      	nop
 8007dfc:	20003db4 	.word	0x20003db4

08007e00 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007e00:	b538      	push	{r3, r4, r5, lr}
 8007e02:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007e04:	f7ff fff6 	bl	8007df4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8007e08:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8007e0a:	bf1c      	itt	ne
 8007e0c:	4b05      	ldrne	r3, [pc, #20]	; (8007e24 <HAL_Delay+0x24>)
 8007e0e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8007e10:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8007e12:	bf18      	it	ne
 8007e14:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8007e16:	f7ff ffed 	bl	8007df4 <HAL_GetTick>
 8007e1a:	1b43      	subs	r3, r0, r5
 8007e1c:	42a3      	cmp	r3, r4
 8007e1e:	d3fa      	bcc.n	8007e16 <HAL_Delay+0x16>
  {
  }
}
 8007e20:	bd38      	pop	{r3, r4, r5, pc}
 8007e22:	bf00      	nop
 8007e24:	2000009c 	.word	0x2000009c

08007e28 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007e28:	4907      	ldr	r1, [pc, #28]	; (8007e48 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8007e2a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007e2c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007e30:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007e32:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007e34:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007e38:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007e3a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8007e3c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007e40:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8007e44:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8007e46:	4770      	bx	lr
 8007e48:	e000ed00 	.word	0xe000ed00

08007e4c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8007e4c:	4b16      	ldr	r3, [pc, #88]	; (8007ea8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007e4e:	b530      	push	{r4, r5, lr}
 8007e50:	68dc      	ldr	r4, [r3, #12]
 8007e52:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007e56:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007e5a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007e5c:	2d04      	cmp	r5, #4
 8007e5e:	bf28      	it	cs
 8007e60:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007e62:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007e64:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007e68:	bf8c      	ite	hi
 8007e6a:	3c03      	subhi	r4, #3
 8007e6c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007e6e:	fa03 f505 	lsl.w	r5, r3, r5
 8007e72:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007e76:	40a3      	lsls	r3, r4
 8007e78:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007e7c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8007e7e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007e80:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007e84:	bfac      	ite	ge
 8007e86:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007e8a:	4a08      	ldrlt	r2, [pc, #32]	; (8007eac <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007e8c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007e90:	bfb8      	it	lt
 8007e92:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007e96:	b2db      	uxtb	r3, r3
 8007e98:	bfaa      	itet	ge
 8007e9a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007e9e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007ea0:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007ea4:	bd30      	pop	{r4, r5, pc}
 8007ea6:	bf00      	nop
 8007ea8:	e000ed00 	.word	0xe000ed00
 8007eac:	e000ed14 	.word	0xe000ed14

08007eb0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007eb0:	2800      	cmp	r0, #0
 8007eb2:	db08      	blt.n	8007ec6 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007eb4:	0942      	lsrs	r2, r0, #5
 8007eb6:	2301      	movs	r3, #1
 8007eb8:	f000 001f 	and.w	r0, r0, #31
 8007ebc:	fa03 f000 	lsl.w	r0, r3, r0
 8007ec0:	4b01      	ldr	r3, [pc, #4]	; (8007ec8 <HAL_NVIC_EnableIRQ+0x18>)
 8007ec2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8007ec6:	4770      	bx	lr
 8007ec8:	e000e100 	.word	0xe000e100

08007ecc <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8007ecc:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007ece:	4604      	mov	r4, r0
 8007ed0:	b150      	cbz	r0, 8007ee8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007ed2:	7943      	ldrb	r3, [r0, #5]
 8007ed4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007ed8:	b913      	cbnz	r3, 8007ee0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8007eda:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8007edc:	f7f9 fa18 	bl	8001310 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007ee0:	2301      	movs	r3, #1
 8007ee2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007ee4:	2000      	movs	r0, #0
}
 8007ee6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007ee8:	2001      	movs	r0, #1
 8007eea:	e7fc      	b.n	8007ee6 <HAL_CRC_Init+0x1a>

08007eec <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8007eec:	6803      	ldr	r3, [r0, #0]
{
 8007eee:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8007ef0:	4c08      	ldr	r4, [pc, #32]	; (8007f14 <DMA_CalcBaseAndBitshift+0x28>)
{
 8007ef2:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8007ef4:	b2d9      	uxtb	r1, r3
 8007ef6:	3910      	subs	r1, #16
 8007ef8:	2018      	movs	r0, #24
 8007efa:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8007efe:	5c20      	ldrb	r0, [r4, r0]
 8007f00:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8007f02:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8007f06:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8007f0a:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8007f0c:	bf88      	it	hi
 8007f0e:	3004      	addhi	r0, #4
 8007f10:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8007f12:	bd10      	pop	{r4, pc}
 8007f14:	0802a8b4 	.word	0x0802a8b4

08007f18 <HAL_DMA_Init>:
{
 8007f18:	b570      	push	{r4, r5, r6, lr}
 8007f1a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007f1c:	f7ff ff6a 	bl	8007df4 <HAL_GetTick>
 8007f20:	4605      	mov	r5, r0
  if(hdma == NULL)
 8007f22:	2c00      	cmp	r4, #0
 8007f24:	d073      	beq.n	800800e <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8007f26:	2302      	movs	r3, #2
 8007f28:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8007f2c:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8007f2e:	2300      	movs	r3, #0
 8007f30:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8007f34:	6813      	ldr	r3, [r2, #0]
 8007f36:	f023 0301 	bic.w	r3, r3, #1
 8007f3a:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8007f3c:	6821      	ldr	r1, [r4, #0]
 8007f3e:	680b      	ldr	r3, [r1, #0]
 8007f40:	07d8      	lsls	r0, r3, #31
 8007f42:	d42f      	bmi.n	8007fa4 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8007f44:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8007f46:	4d33      	ldr	r5, [pc, #204]	; (8008014 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8007f48:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8007f4a:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8007f4c:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8007f50:	4313      	orrs	r3, r2
 8007f52:	68e2      	ldr	r2, [r4, #12]
 8007f54:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8007f56:	6922      	ldr	r2, [r4, #16]
 8007f58:	4313      	orrs	r3, r2
 8007f5a:	6962      	ldr	r2, [r4, #20]
 8007f5c:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8007f5e:	69e2      	ldr	r2, [r4, #28]
 8007f60:	4303      	orrs	r3, r0
 8007f62:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8007f64:	6a22      	ldr	r2, [r4, #32]
 8007f66:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8007f68:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007f6a:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8007f6c:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8007f70:	bf02      	ittt	eq
 8007f72:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8007f76:	4335      	orreq	r5, r6
 8007f78:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8007f7a:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8007f7c:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8007f7e:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8007f80:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8007f84:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8007f88:	d133      	bne.n	8007ff2 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8007f8a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8007f8c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8007f8e:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8007f90:	b37d      	cbz	r5, 8007ff2 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8007f92:	b990      	cbnz	r0, 8007fba <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8007f94:	2a01      	cmp	r2, #1
 8007f96:	d021      	beq.n	8007fdc <HAL_DMA_Init+0xc4>
 8007f98:	f032 0202 	bics.w	r2, r2, #2
 8007f9c:	d129      	bne.n	8007ff2 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8007f9e:	01ea      	lsls	r2, r5, #7
 8007fa0:	d527      	bpl.n	8007ff2 <HAL_DMA_Init+0xda>
 8007fa2:	e01e      	b.n	8007fe2 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8007fa4:	f7ff ff26 	bl	8007df4 <HAL_GetTick>
 8007fa8:	1b40      	subs	r0, r0, r5
 8007faa:	2805      	cmp	r0, #5
 8007fac:	d9c6      	bls.n	8007f3c <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8007fae:	2320      	movs	r3, #32
 8007fb0:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8007fb2:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8007fb4:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8007fb8:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8007fba:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8007fbe:	d114      	bne.n	8007fea <HAL_DMA_Init+0xd2>
    switch (tmp)
 8007fc0:	2a03      	cmp	r2, #3
 8007fc2:	d816      	bhi.n	8007ff2 <HAL_DMA_Init+0xda>
 8007fc4:	a001      	add	r0, pc, #4	; (adr r0, 8007fcc <HAL_DMA_Init+0xb4>)
 8007fc6:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8007fca:	bf00      	nop
 8007fcc:	08007fe3 	.word	0x08007fe3
 8007fd0:	08007f9f 	.word	0x08007f9f
 8007fd4:	08007fe3 	.word	0x08007fe3
 8007fd8:	08007fdd 	.word	0x08007fdd
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8007fdc:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8007fe0:	d107      	bne.n	8007ff2 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8007fe2:	2340      	movs	r3, #64	; 0x40
 8007fe4:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8007fe6:	2001      	movs	r0, #1
 8007fe8:	e7e4      	b.n	8007fb4 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8007fea:	2a02      	cmp	r2, #2
 8007fec:	d9f9      	bls.n	8007fe2 <HAL_DMA_Init+0xca>
 8007fee:	2a03      	cmp	r2, #3
 8007ff0:	d0d5      	beq.n	8007f9e <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8007ff2:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8007ff4:	4620      	mov	r0, r4
 8007ff6:	f7ff ff79 	bl	8007eec <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8007ffa:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8007ffc:	233f      	movs	r3, #63	; 0x3f
 8007ffe:	4093      	lsls	r3, r2
 8008000:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8008002:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8008004:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8008006:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8008008:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800800c:	e7d4      	b.n	8007fb8 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800800e:	2001      	movs	r0, #1
 8008010:	e7d2      	b.n	8007fb8 <HAL_DMA_Init+0xa0>
 8008012:	bf00      	nop
 8008014:	f010803f 	.word	0xf010803f

08008018 <HAL_DMA_Start_IT>:
{
 8008018:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 800801a:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800801e:	6d86      	ldr	r6, [r0, #88]	; 0x58
  __HAL_LOCK(hdma);
 8008020:	2c01      	cmp	r4, #1
 8008022:	d031      	beq.n	8008088 <HAL_DMA_Start_IT+0x70>
 8008024:	2401      	movs	r4, #1
 8008026:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 800802a:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 800802e:	2c01      	cmp	r4, #1
 8008030:	f04f 0500 	mov.w	r5, #0
 8008034:	f04f 0402 	mov.w	r4, #2
 8008038:	d124      	bne.n	8008084 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 800803a:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800803e:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8008040:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8008042:	6825      	ldr	r5, [r4, #0]
 8008044:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 8008048:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 800804a:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800804c:	6883      	ldr	r3, [r0, #8]
 800804e:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 8008050:	bf0e      	itee	eq
 8008052:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 8008054:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 8008056:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8008058:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 800805a:	bf08      	it	eq
 800805c:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800805e:	233f      	movs	r3, #63	; 0x3f
 8008060:	4093      	lsls	r3, r2
 8008062:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8008064:	6823      	ldr	r3, [r4, #0]
 8008066:	f043 0316 	orr.w	r3, r3, #22
 800806a:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 800806c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800806e:	b11b      	cbz	r3, 8008078 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 8008070:	6823      	ldr	r3, [r4, #0]
 8008072:	f043 0308 	orr.w	r3, r3, #8
 8008076:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8008078:	6823      	ldr	r3, [r4, #0]
 800807a:	f043 0301 	orr.w	r3, r3, #1
 800807e:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008080:	2000      	movs	r0, #0
}
 8008082:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 8008084:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 8008088:	2002      	movs	r0, #2
 800808a:	e7fa      	b.n	8008082 <HAL_DMA_Start_IT+0x6a>

0800808c <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800808c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008090:	2b02      	cmp	r3, #2
 8008092:	d003      	beq.n	800809c <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008094:	2380      	movs	r3, #128	; 0x80
 8008096:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008098:	2001      	movs	r0, #1
 800809a:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800809c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800809e:	2305      	movs	r3, #5
 80080a0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80080a4:	6813      	ldr	r3, [r2, #0]
 80080a6:	f023 0301 	bic.w	r3, r3, #1
 80080aa:	6013      	str	r3, [r2, #0]
  return HAL_OK;
 80080ac:	2000      	movs	r0, #0
}
 80080ae:	4770      	bx	lr

080080b0 <HAL_DMA_IRQHandler>:
{
 80080b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t count = 0U;
 80080b2:	2300      	movs	r3, #0
 80080b4:	9301      	str	r3, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600U;
 80080b6:	4b5c      	ldr	r3, [pc, #368]	; (8008228 <HAL_DMA_IRQHandler+0x178>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80080b8:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 80080ba:	681f      	ldr	r7, [r3, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80080bc:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 80080be:	682e      	ldr	r6, [r5, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80080c0:	2208      	movs	r2, #8
 80080c2:	409a      	lsls	r2, r3
 80080c4:	4232      	tst	r2, r6
{
 80080c6:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 80080c8:	d00c      	beq.n	80080e4 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 80080ca:	6801      	ldr	r1, [r0, #0]
 80080cc:	6808      	ldr	r0, [r1, #0]
 80080ce:	0740      	lsls	r0, r0, #29
 80080d0:	d508      	bpl.n	80080e4 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 80080d2:	6808      	ldr	r0, [r1, #0]
 80080d4:	f020 0004 	bic.w	r0, r0, #4
 80080d8:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 80080da:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80080dc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80080de:	f042 0201 	orr.w	r2, r2, #1
 80080e2:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80080e4:	2201      	movs	r2, #1
 80080e6:	409a      	lsls	r2, r3
 80080e8:	4232      	tst	r2, r6
 80080ea:	d008      	beq.n	80080fe <HAL_DMA_IRQHandler+0x4e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80080ec:	6821      	ldr	r1, [r4, #0]
 80080ee:	6949      	ldr	r1, [r1, #20]
 80080f0:	0609      	lsls	r1, r1, #24
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 80080f2:	bf41      	itttt	mi
 80080f4:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 80080f6:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 80080f8:	f042 0202 	orrmi.w	r2, r2, #2
 80080fc:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 80080fe:	2204      	movs	r2, #4
 8008100:	409a      	lsls	r2, r3
 8008102:	4232      	tst	r2, r6
 8008104:	d008      	beq.n	8008118 <HAL_DMA_IRQHandler+0x68>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8008106:	6821      	ldr	r1, [r4, #0]
 8008108:	6809      	ldr	r1, [r1, #0]
 800810a:	0788      	lsls	r0, r1, #30
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800810c:	bf41      	itttt	mi
 800810e:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8008110:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 8008112:	f042 0204 	orrmi.w	r2, r2, #4
 8008116:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8008118:	2210      	movs	r2, #16
 800811a:	409a      	lsls	r2, r3
 800811c:	4232      	tst	r2, r6
 800811e:	d010      	beq.n	8008142 <HAL_DMA_IRQHandler+0x92>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8008120:	6823      	ldr	r3, [r4, #0]
 8008122:	6819      	ldr	r1, [r3, #0]
 8008124:	0709      	lsls	r1, r1, #28
 8008126:	d50c      	bpl.n	8008142 <HAL_DMA_IRQHandler+0x92>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8008128:	60aa      	str	r2, [r5, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800812a:	681a      	ldr	r2, [r3, #0]
 800812c:	0350      	lsls	r0, r2, #13
 800812e:	d537      	bpl.n	80081a0 <HAL_DMA_IRQHandler+0xf0>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	0319      	lsls	r1, r3, #12
 8008134:	d401      	bmi.n	800813a <HAL_DMA_IRQHandler+0x8a>
        if(hdma->XferHalfCpltCallback != NULL)
 8008136:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008138:	e000      	b.n	800813c <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800813a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
        if(hdma->XferHalfCpltCallback != NULL)
 800813c:	b10b      	cbz	r3, 8008142 <HAL_DMA_IRQHandler+0x92>
          hdma->XferHalfCpltCallback(hdma);
 800813e:	4620      	mov	r0, r4
 8008140:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8008142:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8008144:	2220      	movs	r2, #32
 8008146:	408a      	lsls	r2, r1
 8008148:	4232      	tst	r2, r6
 800814a:	d03a      	beq.n	80081c2 <HAL_DMA_IRQHandler+0x112>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800814c:	6823      	ldr	r3, [r4, #0]
 800814e:	6818      	ldr	r0, [r3, #0]
 8008150:	06c6      	lsls	r6, r0, #27
 8008152:	d536      	bpl.n	80081c2 <HAL_DMA_IRQHandler+0x112>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8008154:	60aa      	str	r2, [r5, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8008156:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 800815a:	2a05      	cmp	r2, #5
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800815c:	681a      	ldr	r2, [r3, #0]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800815e:	d127      	bne.n	80081b0 <HAL_DMA_IRQHandler+0x100>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8008160:	f022 0216 	bic.w	r2, r2, #22
 8008164:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8008166:	695a      	ldr	r2, [r3, #20]
 8008168:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800816c:	615a      	str	r2, [r3, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800816e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008170:	b90a      	cbnz	r2, 8008176 <HAL_DMA_IRQHandler+0xc6>
 8008172:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008174:	b11a      	cbz	r2, 800817e <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8008176:	681a      	ldr	r2, [r3, #0]
 8008178:	f022 0208 	bic.w	r2, r2, #8
 800817c:	601a      	str	r2, [r3, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800817e:	233f      	movs	r3, #63	; 0x3f
 8008180:	408b      	lsls	r3, r1
 8008182:	60ab      	str	r3, [r5, #8]
        hdma->State = HAL_DMA_STATE_READY;
 8008184:	2301      	movs	r3, #1
 8008186:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800818a:	2300      	movs	r3, #0
 800818c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 8008190:	6d23      	ldr	r3, [r4, #80]	; 0x50
    if(hdma->XferErrorCallback != NULL)
 8008192:	2b00      	cmp	r3, #0
 8008194:	d045      	beq.n	8008222 <HAL_DMA_IRQHandler+0x172>
      hdma->XferErrorCallback(hdma);
 8008196:	4620      	mov	r0, r4
}
 8008198:	b003      	add	sp, #12
 800819a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800819e:	4718      	bx	r3
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80081a0:	681a      	ldr	r2, [r3, #0]
 80081a2:	05d2      	lsls	r2, r2, #23
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80081a4:	bf5e      	ittt	pl
 80081a6:	681a      	ldrpl	r2, [r3, #0]
 80081a8:	f022 0208 	bicpl.w	r2, r2, #8
 80081ac:	601a      	strpl	r2, [r3, #0]
 80081ae:	e7c2      	b.n	8008136 <HAL_DMA_IRQHandler+0x86>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80081b0:	0350      	lsls	r0, r2, #13
 80081b2:	d527      	bpl.n	8008204 <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80081b4:	681b      	ldr	r3, [r3, #0]
 80081b6:	0319      	lsls	r1, r3, #12
 80081b8:	d431      	bmi.n	800821e <HAL_DMA_IRQHandler+0x16e>
          if(hdma->XferM1CpltCallback != NULL)
 80081ba:	6c63      	ldr	r3, [r4, #68]	; 0x44
        if(hdma->XferCpltCallback != NULL)
 80081bc:	b10b      	cbz	r3, 80081c2 <HAL_DMA_IRQHandler+0x112>
          hdma->XferCpltCallback(hdma);
 80081be:	4620      	mov	r0, r4
 80081c0:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80081c2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80081c4:	b36b      	cbz	r3, 8008222 <HAL_DMA_IRQHandler+0x172>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80081c6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80081c8:	07da      	lsls	r2, r3, #31
 80081ca:	d519      	bpl.n	8008200 <HAL_DMA_IRQHandler+0x150>
      __HAL_DMA_DISABLE(hdma);
 80081cc:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 80081ce:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80081d2:	fbb7 f7f3 	udiv	r7, r7, r3
      hdma->State = HAL_DMA_STATE_ABORT;
 80081d6:	2305      	movs	r3, #5
 80081d8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 80081dc:	6813      	ldr	r3, [r2, #0]
 80081de:	f023 0301 	bic.w	r3, r3, #1
 80081e2:	6013      	str	r3, [r2, #0]
        if (++count > timeout)
 80081e4:	9b01      	ldr	r3, [sp, #4]
 80081e6:	3301      	adds	r3, #1
 80081e8:	42bb      	cmp	r3, r7
 80081ea:	9301      	str	r3, [sp, #4]
 80081ec:	d802      	bhi.n	80081f4 <HAL_DMA_IRQHandler+0x144>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80081ee:	6813      	ldr	r3, [r2, #0]
 80081f0:	07db      	lsls	r3, r3, #31
 80081f2:	d4f7      	bmi.n	80081e4 <HAL_DMA_IRQHandler+0x134>
      hdma->State = HAL_DMA_STATE_READY;
 80081f4:	2301      	movs	r3, #1
 80081f6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 80081fa:	2300      	movs	r3, #0
 80081fc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 8008200:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8008202:	e7c6      	b.n	8008192 <HAL_DMA_IRQHandler+0xe2>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8008204:	681a      	ldr	r2, [r3, #0]
 8008206:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 800820a:	d108      	bne.n	800821e <HAL_DMA_IRQHandler+0x16e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 800820c:	6819      	ldr	r1, [r3, #0]
 800820e:	f021 0110 	bic.w	r1, r1, #16
 8008212:	6019      	str	r1, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8008214:	2301      	movs	r3, #1
 8008216:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 800821a:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
        if(hdma->XferCpltCallback != NULL)
 800821e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008220:	e7cc      	b.n	80081bc <HAL_DMA_IRQHandler+0x10c>
}
 8008222:	b003      	add	sp, #12
 8008224:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008226:	bf00      	nop
 8008228:	20000098 	.word	0x20000098

0800822c <HAL_DMA_GetError>:
  return hdma->ErrorCode;
 800822c:	6d40      	ldr	r0, [r0, #84]	; 0x54
}
 800822e:	4770      	bx	lr

08008230 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8008230:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8008232:	4604      	mov	r4, r0
 8008234:	b330      	cbz	r0, 8008284 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8008236:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800823a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800823e:	b91b      	cbnz	r3, 8008248 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8008240:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8008244:	f7f9 f87c 	bl	8001340 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008248:	6822      	ldr	r2, [r4, #0]
 800824a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800824c:	2302      	movs	r3, #2
 800824e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008252:	6813      	ldr	r3, [r2, #0]
 8008254:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008258:	430b      	orrs	r3, r1
 800825a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800825c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800825e:	68a1      	ldr	r1, [r4, #8]
 8008260:	f023 0307 	bic.w	r3, r3, #7
 8008264:	430b      	orrs	r3, r1
 8008266:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8008268:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800826a:	68e1      	ldr	r1, [r4, #12]
 800826c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008270:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008274:	430b      	orrs	r3, r1
 8008276:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008278:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800827a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800827c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800827e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8008282:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008284:	2001      	movs	r0, #1
 8008286:	e7fc      	b.n	8008282 <HAL_DMA2D_Init+0x52>

08008288 <HAL_DMA2D_LineEventCallback>:
 8008288:	4770      	bx	lr

0800828a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800828a:	4770      	bx	lr

0800828c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800828c:	6803      	ldr	r3, [r0, #0]
{
 800828e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008290:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8008292:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008294:	07f2      	lsls	r2, r6, #31
{
 8008296:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008298:	d514      	bpl.n	80082c4 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800829a:	05e9      	lsls	r1, r5, #23
 800829c:	d512      	bpl.n	80082c4 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800829e:	681a      	ldr	r2, [r3, #0]
 80082a0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80082a4:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80082a6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80082a8:	f042 0201 	orr.w	r2, r2, #1
 80082ac:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80082ae:	2201      	movs	r2, #1
 80082b0:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80082b2:	2304      	movs	r3, #4
 80082b4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80082b8:	2300      	movs	r3, #0
 80082ba:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80082be:	6943      	ldr	r3, [r0, #20]
 80082c0:	b103      	cbz	r3, 80082c4 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80082c2:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80082c4:	06b2      	lsls	r2, r6, #26
 80082c6:	d516      	bpl.n	80082f6 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80082c8:	04ab      	lsls	r3, r5, #18
 80082ca:	d514      	bpl.n	80082f6 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80082cc:	6823      	ldr	r3, [r4, #0]
 80082ce:	681a      	ldr	r2, [r3, #0]
 80082d0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80082d4:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80082d6:	2220      	movs	r2, #32
 80082d8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80082da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80082dc:	f043 0302 	orr.w	r3, r3, #2
 80082e0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80082e2:	2304      	movs	r3, #4
 80082e4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80082e8:	2300      	movs	r3, #0
 80082ea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80082ee:	6963      	ldr	r3, [r4, #20]
 80082f0:	b10b      	cbz	r3, 80082f6 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80082f2:	4620      	mov	r0, r4
 80082f4:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80082f6:	0730      	lsls	r0, r6, #28
 80082f8:	d516      	bpl.n	8008328 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80082fa:	0529      	lsls	r1, r5, #20
 80082fc:	d514      	bpl.n	8008328 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80082fe:	6823      	ldr	r3, [r4, #0]
 8008300:	681a      	ldr	r2, [r3, #0]
 8008302:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008306:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8008308:	2208      	movs	r2, #8
 800830a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800830c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800830e:	f043 0304 	orr.w	r3, r3, #4
 8008312:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008314:	2304      	movs	r3, #4
 8008316:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800831a:	2300      	movs	r3, #0
 800831c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8008320:	6963      	ldr	r3, [r4, #20]
 8008322:	b10b      	cbz	r3, 8008328 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8008324:	4620      	mov	r0, r4
 8008326:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8008328:	0772      	lsls	r2, r6, #29
 800832a:	d50b      	bpl.n	8008344 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800832c:	056b      	lsls	r3, r5, #21
 800832e:	d509      	bpl.n	8008344 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8008330:	6823      	ldr	r3, [r4, #0]
 8008332:	681a      	ldr	r2, [r3, #0]
 8008334:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008338:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800833a:	2204      	movs	r2, #4
 800833c:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800833e:	4620      	mov	r0, r4
 8008340:	f7ff ffa2 	bl	8008288 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8008344:	07b0      	lsls	r0, r6, #30
 8008346:	d514      	bpl.n	8008372 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8008348:	05a9      	lsls	r1, r5, #22
 800834a:	d512      	bpl.n	8008372 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800834c:	6823      	ldr	r3, [r4, #0]
 800834e:	681a      	ldr	r2, [r3, #0]
 8008350:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8008354:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8008356:	2202      	movs	r2, #2
 8008358:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800835a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800835c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800835e:	2301      	movs	r3, #1
 8008360:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8008364:	2300      	movs	r3, #0
 8008366:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800836a:	6923      	ldr	r3, [r4, #16]
 800836c:	b10b      	cbz	r3, 8008372 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800836e:	4620      	mov	r0, r4
 8008370:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8008372:	06f2      	lsls	r2, r6, #27
 8008374:	d513      	bpl.n	800839e <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8008376:	04eb      	lsls	r3, r5, #19
 8008378:	d511      	bpl.n	800839e <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800837a:	6823      	ldr	r3, [r4, #0]
 800837c:	681a      	ldr	r2, [r3, #0]
 800837e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8008382:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8008384:	2210      	movs	r2, #16
 8008386:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008388:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800838a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800838c:	2301      	movs	r3, #1
 800838e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8008392:	2300      	movs	r3, #0
 8008394:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8008398:	4620      	mov	r0, r4
 800839a:	f7ff ff76 	bl	800828a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800839e:	bd70      	pop	{r4, r5, r6, pc}

080083a0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80083a0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80083a2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80083a6:	2b01      	cmp	r3, #1
 80083a8:	f04f 0302 	mov.w	r3, #2
 80083ac:	d02b      	beq.n	8008406 <HAL_DMA2D_ConfigLayer+0x66>
 80083ae:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80083b0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80083b4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80083b8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80083bc:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80083c0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80083c2:	4f18      	ldr	r7, [pc, #96]	; (8008424 <HAL_DMA2D_ConfigLayer+0x84>)
 80083c4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80083c8:	3c09      	subs	r4, #9
 80083ca:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80083cc:	bf9c      	itt	ls
 80083ce:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80083d2:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80083d4:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80083d8:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80083da:	bf88      	it	hi
 80083dc:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80083e0:	b999      	cbnz	r1, 800840a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80083e2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80083e4:	4039      	ands	r1, r7
 80083e6:	430a      	orrs	r2, r1
 80083e8:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80083ea:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80083ec:	6982      	ldr	r2, [r0, #24]
 80083ee:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80083f0:	d803      	bhi.n	80083fa <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80083f2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80083f4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80083f8:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80083fa:	2301      	movs	r3, #1
 80083fc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8008400:	2300      	movs	r3, #0
 8008402:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8008406:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008408:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800840a:	69d9      	ldr	r1, [r3, #28]
 800840c:	4039      	ands	r1, r7
 800840e:	430a      	orrs	r2, r1
 8008410:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008412:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008414:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008416:	6992      	ldr	r2, [r2, #24]
 8008418:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800841a:	bf9c      	itt	ls
 800841c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8008420:	621d      	strls	r5, [r3, #32]
 8008422:	e7ea      	b.n	80083fa <HAL_DMA2D_ConfigLayer+0x5a>
 8008424:	00fcfff0 	.word	0x00fcfff0

08008428 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8008428:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800842c:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80085f0 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008430:	4a6d      	ldr	r2, [pc, #436]	; (80085e8 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008432:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008434:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8008436:	2401      	movs	r4, #1
 8008438:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800843a:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800843e:	43ac      	bics	r4, r5
 8008440:	f040 80b9 	bne.w	80085b6 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008444:	684d      	ldr	r5, [r1, #4]
 8008446:	f005 0403 	and.w	r4, r5, #3
 800844a:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800844e:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008450:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008452:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008456:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008458:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800845c:	d834      	bhi.n	80084c8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800845e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008460:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008464:	68cf      	ldr	r7, [r1, #12]
 8008466:	fa07 f708 	lsl.w	r7, r7, r8
 800846a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800846e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8008470:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8008472:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008476:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800847a:	409f      	lsls	r7, r3
 800847c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8008480:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8008482:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8008484:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8008488:	688f      	ldr	r7, [r1, #8]
 800848a:	fa07 f708 	lsl.w	r7, r7, r8
 800848e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008492:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8008494:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008496:	d119      	bne.n	80084cc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8008498:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800849c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80084a0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80084a4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80084a8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80084ac:	f04f 0e0f 	mov.w	lr, #15
 80084b0:	fa0e fe0b 	lsl.w	lr, lr, fp
 80084b4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80084b8:	690f      	ldr	r7, [r1, #16]
 80084ba:	fa07 f70b 	lsl.w	r7, r7, fp
 80084be:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80084c2:	f8ca 7020 	str.w	r7, [sl, #32]
 80084c6:	e001      	b.n	80084cc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80084c8:	2c03      	cmp	r4, #3
 80084ca:	d1da      	bne.n	8008482 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80084cc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80084ce:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80084d2:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80084d4:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80084d6:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 80084da:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80084dc:	d06b      	beq.n	80085b6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80084de:	f04f 0a00 	mov.w	sl, #0
 80084e2:	f8cd a004 	str.w	sl, [sp, #4]
 80084e6:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80084ea:	4c40      	ldr	r4, [pc, #256]	; (80085ec <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80084ec:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 80084f0:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 80084f4:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 80084f8:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 80084fc:	9601      	str	r6, [sp, #4]
 80084fe:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8008500:	f023 0603 	bic.w	r6, r3, #3
 8008504:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8008508:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800850c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8008510:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008514:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8008518:	270f      	movs	r7, #15
 800851a:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800851e:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008520:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008524:	d04e      	beq.n	80085c4 <HAL_GPIO_Init+0x19c>
 8008526:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800852a:	42a0      	cmp	r0, r4
 800852c:	d04c      	beq.n	80085c8 <HAL_GPIO_Init+0x1a0>
 800852e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008532:	42a0      	cmp	r0, r4
 8008534:	d04a      	beq.n	80085cc <HAL_GPIO_Init+0x1a4>
 8008536:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800853a:	42a0      	cmp	r0, r4
 800853c:	d048      	beq.n	80085d0 <HAL_GPIO_Init+0x1a8>
 800853e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008542:	42a0      	cmp	r0, r4
 8008544:	d046      	beq.n	80085d4 <HAL_GPIO_Init+0x1ac>
 8008546:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800854a:	42a0      	cmp	r0, r4
 800854c:	d044      	beq.n	80085d8 <HAL_GPIO_Init+0x1b0>
 800854e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008552:	42a0      	cmp	r0, r4
 8008554:	d042      	beq.n	80085dc <HAL_GPIO_Init+0x1b4>
 8008556:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800855a:	42a0      	cmp	r0, r4
 800855c:	d040      	beq.n	80085e0 <HAL_GPIO_Init+0x1b8>
 800855e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008562:	42a0      	cmp	r0, r4
 8008564:	d03e      	beq.n	80085e4 <HAL_GPIO_Init+0x1bc>
 8008566:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800856a:	42a0      	cmp	r0, r4
 800856c:	bf0c      	ite	eq
 800856e:	2409      	moveq	r4, #9
 8008570:	240a      	movne	r4, #10
 8008572:	fa04 f40e 	lsl.w	r4, r4, lr
 8008576:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8008578:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800857a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800857c:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8008580:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8008582:	bf54      	ite	pl
 8008584:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8008586:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800858a:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800858c:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800858e:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8008590:	bf54      	ite	pl
 8008592:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8008594:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8008598:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800859a:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800859c:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800859e:	bf54      	ite	pl
 80085a0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80085a2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80085a6:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80085a8:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80085aa:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80085ac:	bf54      	ite	pl
 80085ae:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80085b0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80085b4:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80085b6:	3301      	adds	r3, #1
 80085b8:	2b10      	cmp	r3, #16
 80085ba:	f47f af3b 	bne.w	8008434 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80085be:	b003      	add	sp, #12
 80085c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80085c4:	4654      	mov	r4, sl
 80085c6:	e7d4      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085c8:	2401      	movs	r4, #1
 80085ca:	e7d2      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085cc:	2402      	movs	r4, #2
 80085ce:	e7d0      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085d0:	2403      	movs	r4, #3
 80085d2:	e7ce      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085d4:	2404      	movs	r4, #4
 80085d6:	e7cc      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085d8:	2405      	movs	r4, #5
 80085da:	e7ca      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085dc:	2406      	movs	r4, #6
 80085de:	e7c8      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085e0:	2407      	movs	r4, #7
 80085e2:	e7c6      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085e4:	2408      	movs	r4, #8
 80085e6:	e7c4      	b.n	8008572 <HAL_GPIO_Init+0x14a>
 80085e8:	40013c00 	.word	0x40013c00
 80085ec:	40020000 	.word	0x40020000
 80085f0:	40023800 	.word	0x40023800

080085f4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80085f4:	6903      	ldr	r3, [r0, #16]
 80085f6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80085f8:	bf14      	ite	ne
 80085fa:	2001      	movne	r0, #1
 80085fc:	2000      	moveq	r0, #0
 80085fe:	4770      	bx	lr

08008600 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8008600:	b10a      	cbz	r2, 8008606 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008602:	6181      	str	r1, [r0, #24]
  }
}
 8008604:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008606:	0409      	lsls	r1, r1, #16
 8008608:	e7fb      	b.n	8008602 <HAL_GPIO_WritePin+0x2>

0800860a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800860a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800860c:	ea01 0203 	and.w	r2, r1, r3
 8008610:	ea21 0103 	bic.w	r1, r1, r3
 8008614:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008618:	6181      	str	r1, [r0, #24]
}
 800861a:	4770      	bx	lr

0800861c <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800861c:	4a04      	ldr	r2, [pc, #16]	; (8008630 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800861e:	6951      	ldr	r1, [r2, #20]
 8008620:	4201      	tst	r1, r0
{
 8008622:	b508      	push	{r3, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8008624:	d002      	beq.n	800862c <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8008626:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8008628:	f7f8 fe40 	bl	80012ac <HAL_GPIO_EXTI_Callback>
  }
}
 800862c:	bd08      	pop	{r3, pc}
 800862e:	bf00      	nop
 8008630:	40013c00 	.word	0x40013c00

08008634 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008634:	6801      	ldr	r1, [r0, #0]
 8008636:	694b      	ldr	r3, [r1, #20]
 8008638:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800863c:	f04f 0200 	mov.w	r2, #0
 8008640:	d010      	beq.n	8008664 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008642:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8008646:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8008648:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800864a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800864c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008650:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008654:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8008656:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800865a:	f043 0304 	orr.w	r3, r3, #4
 800865e:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8008660:	2001      	movs	r0, #1
 8008662:	4770      	bx	lr
  }
  return HAL_OK;
 8008664:	4618      	mov	r0, r3
}
 8008666:	4770      	bx	lr

08008668 <I2C_WaitOnFlagUntilTimeout>:
{
 8008668:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800866c:	4606      	mov	r6, r0
 800866e:	460f      	mov	r7, r1
 8008670:	4691      	mov	r9, r2
 8008672:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008674:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8008678:	6833      	ldr	r3, [r6, #0]
 800867a:	f1ba 0f01 	cmp.w	sl, #1
 800867e:	bf0c      	ite	eq
 8008680:	695c      	ldreq	r4, [r3, #20]
 8008682:	699c      	ldrne	r4, [r3, #24]
 8008684:	ea27 0404 	bic.w	r4, r7, r4
 8008688:	b2a4      	uxth	r4, r4
 800868a:	fab4 f484 	clz	r4, r4
 800868e:	0964      	lsrs	r4, r4, #5
 8008690:	45a1      	cmp	r9, r4
 8008692:	d001      	beq.n	8008698 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8008694:	2000      	movs	r0, #0
 8008696:	e017      	b.n	80086c8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8008698:	1c6a      	adds	r2, r5, #1
 800869a:	d0ee      	beq.n	800867a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800869c:	f7ff fbaa 	bl	8007df4 <HAL_GetTick>
 80086a0:	9b08      	ldr	r3, [sp, #32]
 80086a2:	1ac0      	subs	r0, r0, r3
 80086a4:	42a8      	cmp	r0, r5
 80086a6:	d801      	bhi.n	80086ac <I2C_WaitOnFlagUntilTimeout+0x44>
 80086a8:	2d00      	cmp	r5, #0
 80086aa:	d1e5      	bne.n	8008678 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80086ac:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80086ae:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80086b0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80086b2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80086b6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80086ba:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80086bc:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80086c0:	f042 0220 	orr.w	r2, r2, #32
 80086c4:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80086c6:	2001      	movs	r0, #1
}
 80086c8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080086cc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80086cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80086d0:	4604      	mov	r4, r0
 80086d2:	460f      	mov	r7, r1
 80086d4:	4616      	mov	r6, r2
 80086d6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80086d8:	6825      	ldr	r5, [r4, #0]
 80086da:	6968      	ldr	r0, [r5, #20]
 80086dc:	ea27 0000 	bic.w	r0, r7, r0
 80086e0:	b280      	uxth	r0, r0
 80086e2:	b1b8      	cbz	r0, 8008714 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80086e4:	696b      	ldr	r3, [r5, #20]
 80086e6:	055a      	lsls	r2, r3, #21
 80086e8:	d516      	bpl.n	8008718 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80086ea:	682b      	ldr	r3, [r5, #0]
 80086ec:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80086f0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80086f2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80086f6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80086f8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80086fa:	2300      	movs	r3, #0
 80086fc:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80086fe:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008702:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008706:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008708:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800870c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800870e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8008712:	2001      	movs	r0, #1
}
 8008714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8008718:	1c73      	adds	r3, r6, #1
 800871a:	d0de      	beq.n	80086da <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800871c:	f7ff fb6a 	bl	8007df4 <HAL_GetTick>
 8008720:	eba0 0008 	sub.w	r0, r0, r8
 8008724:	42b0      	cmp	r0, r6
 8008726:	d801      	bhi.n	800872c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8008728:	2e00      	cmp	r6, #0
 800872a:	d1d5      	bne.n	80086d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800872c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800872e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008730:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008732:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008736:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800873a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800873c:	f042 0220 	orr.w	r2, r2, #32
 8008740:	e7e4      	b.n	800870c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08008742 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8008742:	b570      	push	{r4, r5, r6, lr}
 8008744:	4604      	mov	r4, r0
 8008746:	460d      	mov	r5, r1
 8008748:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800874a:	6821      	ldr	r1, [r4, #0]
 800874c:	694b      	ldr	r3, [r1, #20]
 800874e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8008752:	d001      	beq.n	8008758 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8008754:	2000      	movs	r0, #0
 8008756:	e010      	b.n	800877a <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008758:	694a      	ldr	r2, [r1, #20]
 800875a:	06d2      	lsls	r2, r2, #27
 800875c:	d50e      	bpl.n	800877c <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800875e:	f06f 0210 	mvn.w	r2, #16
 8008762:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8008764:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008766:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008768:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800876c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8008770:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008772:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008774:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8008778:	2001      	movs	r0, #1
}
 800877a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800877c:	f7ff fb3a 	bl	8007df4 <HAL_GetTick>
 8008780:	1b80      	subs	r0, r0, r6
 8008782:	42a8      	cmp	r0, r5
 8008784:	d801      	bhi.n	800878a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8008786:	2d00      	cmp	r5, #0
 8008788:	d1df      	bne.n	800874a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800878a:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800878c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800878e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008790:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008794:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008798:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800879a:	f042 0220 	orr.w	r2, r2, #32
 800879e:	e7e8      	b.n	8008772 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080087a0 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80087a0:	b570      	push	{r4, r5, r6, lr}
 80087a2:	4604      	mov	r4, r0
 80087a4:	460d      	mov	r5, r1
 80087a6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80087a8:	6823      	ldr	r3, [r4, #0]
 80087aa:	695b      	ldr	r3, [r3, #20]
 80087ac:	075b      	lsls	r3, r3, #29
 80087ae:	d501      	bpl.n	80087b4 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80087b0:	2000      	movs	r0, #0
}
 80087b2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80087b4:	4620      	mov	r0, r4
 80087b6:	f7ff ff3d 	bl	8008634 <I2C_IsAcknowledgeFailed>
 80087ba:	b9a8      	cbnz	r0, 80087e8 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80087bc:	1c6a      	adds	r2, r5, #1
 80087be:	d0f3      	beq.n	80087a8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80087c0:	f7ff fb18 	bl	8007df4 <HAL_GetTick>
 80087c4:	1b80      	subs	r0, r0, r6
 80087c6:	42a8      	cmp	r0, r5
 80087c8:	d801      	bhi.n	80087ce <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80087ca:	2d00      	cmp	r5, #0
 80087cc:	d1ec      	bne.n	80087a8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80087ce:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80087d0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80087d2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80087d4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80087d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80087dc:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80087de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80087e2:	f042 0220 	orr.w	r2, r2, #32
 80087e6:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80087e8:	2001      	movs	r0, #1
 80087ea:	e7e2      	b.n	80087b2 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080087ec <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80087ec:	b570      	push	{r4, r5, r6, lr}
 80087ee:	4604      	mov	r4, r0
 80087f0:	460d      	mov	r5, r1
 80087f2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80087f4:	6823      	ldr	r3, [r4, #0]
 80087f6:	695b      	ldr	r3, [r3, #20]
 80087f8:	061b      	lsls	r3, r3, #24
 80087fa:	d501      	bpl.n	8008800 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80087fc:	2000      	movs	r0, #0
}
 80087fe:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8008800:	4620      	mov	r0, r4
 8008802:	f7ff ff17 	bl	8008634 <I2C_IsAcknowledgeFailed>
 8008806:	b9a8      	cbnz	r0, 8008834 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8008808:	1c6a      	adds	r2, r5, #1
 800880a:	d0f3      	beq.n	80087f4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800880c:	f7ff faf2 	bl	8007df4 <HAL_GetTick>
 8008810:	1b80      	subs	r0, r0, r6
 8008812:	42a8      	cmp	r0, r5
 8008814:	d801      	bhi.n	800881a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8008816:	2d00      	cmp	r5, #0
 8008818:	d1ec      	bne.n	80087f4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800881a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800881c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800881e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008820:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008824:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008828:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800882a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800882e:	f042 0220 	orr.w	r2, r2, #32
 8008832:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8008834:	2001      	movs	r0, #1
 8008836:	e7e2      	b.n	80087fe <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08008838 <I2C_RequestMemoryWrite>:
{
 8008838:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800883c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800883e:	6802      	ldr	r2, [r0, #0]
{
 8008840:	b085      	sub	sp, #20
 8008842:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8008846:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008848:	6813      	ldr	r3, [r2, #0]
 800884a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800884e:	6013      	str	r3, [r2, #0]
{
 8008850:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008852:	463b      	mov	r3, r7
 8008854:	f8cd 8000 	str.w	r8, [sp]
 8008858:	2200      	movs	r2, #0
 800885a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800885e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008860:	f7ff ff02 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 8008864:	6823      	ldr	r3, [r4, #0]
 8008866:	b138      	cbz	r0, 8008878 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008868:	681b      	ldr	r3, [r3, #0]
 800886a:	05db      	lsls	r3, r3, #23
 800886c:	d502      	bpl.n	8008874 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800886e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008872:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8008874:	2003      	movs	r0, #3
 8008876:	e00a      	b.n	800888e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008878:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800887c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800887e:	4919      	ldr	r1, [pc, #100]	; (80088e4 <I2C_RequestMemoryWrite+0xac>)
 8008880:	4643      	mov	r3, r8
 8008882:	463a      	mov	r2, r7
 8008884:	4620      	mov	r0, r4
 8008886:	f7ff ff21 	bl	80086cc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800888a:	b118      	cbz	r0, 8008894 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800888c:	2001      	movs	r0, #1
}
 800888e:	b005      	add	sp, #20
 8008890:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008894:	6823      	ldr	r3, [r4, #0]
 8008896:	9003      	str	r0, [sp, #12]
 8008898:	695a      	ldr	r2, [r3, #20]
 800889a:	9203      	str	r2, [sp, #12]
 800889c:	699b      	ldr	r3, [r3, #24]
 800889e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80088a0:	4642      	mov	r2, r8
 80088a2:	4639      	mov	r1, r7
 80088a4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80088a6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80088a8:	f7ff ffa0 	bl	80087ec <I2C_WaitOnTXEFlagUntilTimeout>
 80088ac:	b140      	cbz	r0, 80088c0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80088ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80088b0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80088b2:	bf01      	itttt	eq
 80088b4:	6822      	ldreq	r2, [r4, #0]
 80088b6:	6813      	ldreq	r3, [r2, #0]
 80088b8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80088bc:	6013      	streq	r3, [r2, #0]
 80088be:	e7e5      	b.n	800888c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80088c0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80088c4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80088c6:	d102      	bne.n	80088ce <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80088c8:	b2ed      	uxtb	r5, r5
 80088ca:	611d      	str	r5, [r3, #16]
 80088cc:	e7df      	b.n	800888e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80088ce:	0a2a      	lsrs	r2, r5, #8
 80088d0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80088d2:	4639      	mov	r1, r7
 80088d4:	4642      	mov	r2, r8
 80088d6:	4620      	mov	r0, r4
 80088d8:	f7ff ff88 	bl	80087ec <I2C_WaitOnTXEFlagUntilTimeout>
 80088dc:	2800      	cmp	r0, #0
 80088de:	d1e6      	bne.n	80088ae <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80088e0:	6823      	ldr	r3, [r4, #0]
 80088e2:	e7f1      	b.n	80088c8 <I2C_RequestMemoryWrite+0x90>
 80088e4:	00010002 	.word	0x00010002

080088e8 <I2C_RequestMemoryRead>:
{
 80088e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80088ec:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80088ee:	6803      	ldr	r3, [r0, #0]
{
 80088f0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80088f2:	681a      	ldr	r2, [r3, #0]
 80088f4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80088f8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80088fa:	681a      	ldr	r2, [r3, #0]
{
 80088fc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008900:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008904:	601a      	str	r2, [r3, #0]
{
 8008906:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008908:	463b      	mov	r3, r7
 800890a:	f8cd 8000 	str.w	r8, [sp]
 800890e:	2200      	movs	r2, #0
 8008910:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8008914:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008916:	f7ff fea7 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 800891a:	6823      	ldr	r3, [r4, #0]
 800891c:	b148      	cbz	r0, 8008932 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800891e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008920:	05db      	lsls	r3, r3, #23
 8008922:	d502      	bpl.n	800892a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008924:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008928:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800892a:	2003      	movs	r0, #3
}
 800892c:	b004      	add	sp, #16
 800892e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008932:	fa5f f986 	uxtb.w	r9, r6
 8008936:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800893a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800893c:	492a      	ldr	r1, [pc, #168]	; (80089e8 <I2C_RequestMemoryRead+0x100>)
 800893e:	4643      	mov	r3, r8
 8008940:	463a      	mov	r2, r7
 8008942:	4620      	mov	r0, r4
 8008944:	f7ff fec2 	bl	80086cc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8008948:	b108      	cbz	r0, 800894e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800894a:	2001      	movs	r0, #1
 800894c:	e7ee      	b.n	800892c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800894e:	6823      	ldr	r3, [r4, #0]
 8008950:	9003      	str	r0, [sp, #12]
 8008952:	695a      	ldr	r2, [r3, #20]
 8008954:	9203      	str	r2, [sp, #12]
 8008956:	699b      	ldr	r3, [r3, #24]
 8008958:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800895a:	4642      	mov	r2, r8
 800895c:	4639      	mov	r1, r7
 800895e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008960:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008962:	f7ff ff43 	bl	80087ec <I2C_WaitOnTXEFlagUntilTimeout>
 8008966:	b140      	cbz	r0, 800897a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008968:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800896a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800896c:	bf01      	itttt	eq
 800896e:	6822      	ldreq	r2, [r4, #0]
 8008970:	6813      	ldreq	r3, [r2, #0]
 8008972:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8008976:	6013      	streq	r3, [r2, #0]
 8008978:	e7e7      	b.n	800894a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800897a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800897e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008980:	d11a      	bne.n	80089b8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008982:	b2ed      	uxtb	r5, r5
 8008984:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008986:	4642      	mov	r2, r8
 8008988:	4639      	mov	r1, r7
 800898a:	4620      	mov	r0, r4
 800898c:	f7ff ff2e 	bl	80087ec <I2C_WaitOnTXEFlagUntilTimeout>
 8008990:	2800      	cmp	r0, #0
 8008992:	d1e9      	bne.n	8008968 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008994:	6822      	ldr	r2, [r4, #0]
 8008996:	6813      	ldr	r3, [r2, #0]
 8008998:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800899c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800899e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80089a2:	4602      	mov	r2, r0
 80089a4:	f8cd 8000 	str.w	r8, [sp]
 80089a8:	463b      	mov	r3, r7
 80089aa:	4620      	mov	r0, r4
 80089ac:	f7ff fe5c 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 80089b0:	6822      	ldr	r2, [r4, #0]
 80089b2:	b160      	cbz	r0, 80089ce <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80089b4:	6813      	ldr	r3, [r2, #0]
 80089b6:	e7b3      	b.n	8008920 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80089b8:	0a2a      	lsrs	r2, r5, #8
 80089ba:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80089bc:	4639      	mov	r1, r7
 80089be:	4642      	mov	r2, r8
 80089c0:	4620      	mov	r0, r4
 80089c2:	f7ff ff13 	bl	80087ec <I2C_WaitOnTXEFlagUntilTimeout>
 80089c6:	2800      	cmp	r0, #0
 80089c8:	d1ce      	bne.n	8008968 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80089ca:	6823      	ldr	r3, [r4, #0]
 80089cc:	e7d9      	b.n	8008982 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80089ce:	f049 0301 	orr.w	r3, r9, #1
 80089d2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80089d4:	4904      	ldr	r1, [pc, #16]	; (80089e8 <I2C_RequestMemoryRead+0x100>)
 80089d6:	4643      	mov	r3, r8
 80089d8:	463a      	mov	r2, r7
 80089da:	4620      	mov	r0, r4
 80089dc:	f7ff fe76 	bl	80086cc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80089e0:	3800      	subs	r0, #0
 80089e2:	bf18      	it	ne
 80089e4:	2001      	movne	r0, #1
 80089e6:	e7a1      	b.n	800892c <I2C_RequestMemoryRead+0x44>
 80089e8:	00010002 	.word	0x00010002

080089ec <HAL_I2C_Init>:
{
 80089ec:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80089ee:	4604      	mov	r4, r0
 80089f0:	b908      	cbnz	r0, 80089f6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80089f2:	2001      	movs	r0, #1
}
 80089f4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80089f6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80089fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80089fe:	b91b      	cbnz	r3, 8008a08 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8008a00:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8008a04:	f7f8 fcbe 	bl	8001384 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8008a08:	2324      	movs	r3, #36	; 0x24
 8008a0a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8008a0e:	6823      	ldr	r3, [r4, #0]
 8008a10:	681a      	ldr	r2, [r3, #0]
 8008a12:	f022 0201 	bic.w	r2, r2, #1
 8008a16:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8008a18:	681a      	ldr	r2, [r3, #0]
 8008a1a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008a1e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8008a20:	681a      	ldr	r2, [r3, #0]
 8008a22:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008a26:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8008a28:	f000 fe74 	bl	8009714 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8008a2c:	4b3f      	ldr	r3, [pc, #252]	; (8008b2c <HAL_I2C_Init+0x140>)
 8008a2e:	6865      	ldr	r5, [r4, #4]
 8008a30:	429d      	cmp	r5, r3
 8008a32:	bf94      	ite	ls
 8008a34:	4b3e      	ldrls	r3, [pc, #248]	; (8008b30 <HAL_I2C_Init+0x144>)
 8008a36:	4b3f      	ldrhi	r3, [pc, #252]	; (8008b34 <HAL_I2C_Init+0x148>)
 8008a38:	4298      	cmp	r0, r3
 8008a3a:	bf8c      	ite	hi
 8008a3c:	2300      	movhi	r3, #0
 8008a3e:	2301      	movls	r3, #1
 8008a40:	2b00      	cmp	r3, #0
 8008a42:	d1d6      	bne.n	80089f2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008a44:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008a46:	4e39      	ldr	r6, [pc, #228]	; (8008b2c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008a48:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8008a4a:	493b      	ldr	r1, [pc, #236]	; (8008b38 <HAL_I2C_Init+0x14c>)
 8008a4c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008a50:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008a54:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008a56:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008a58:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008a5a:	bf88      	it	hi
 8008a5c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8008a60:	6a13      	ldr	r3, [r2, #32]
 8008a62:	bf88      	it	hi
 8008a64:	4371      	mulhi	r1, r6
 8008a66:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008a6a:	bf84      	itt	hi
 8008a6c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8008a70:	fbb1 f1f6 	udivhi	r1, r1, r6
 8008a74:	3101      	adds	r1, #1
 8008a76:	4319      	orrs	r1, r3
 8008a78:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008a7a:	69d1      	ldr	r1, [r2, #28]
 8008a7c:	1e43      	subs	r3, r0, #1
 8008a7e:	482b      	ldr	r0, [pc, #172]	; (8008b2c <HAL_I2C_Init+0x140>)
 8008a80:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8008a84:	4285      	cmp	r5, r0
 8008a86:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008a8a:	d832      	bhi.n	8008af2 <HAL_I2C_Init+0x106>
 8008a8c:	006d      	lsls	r5, r5, #1
 8008a8e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8008a92:	fbb3 f3f5 	udiv	r3, r3, r5
 8008a96:	3301      	adds	r3, #1
 8008a98:	4203      	tst	r3, r0
 8008a9a:	d042      	beq.n	8008b22 <HAL_I2C_Init+0x136>
 8008a9c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008aa0:	430b      	orrs	r3, r1
 8008aa2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008aa4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8008aa8:	6811      	ldr	r1, [r2, #0]
 8008aaa:	4303      	orrs	r3, r0
 8008aac:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8008ab0:	430b      	orrs	r3, r1
 8008ab2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008ab4:	6891      	ldr	r1, [r2, #8]
 8008ab6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8008aba:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8008abe:	4303      	orrs	r3, r0
 8008ac0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008ac4:	430b      	orrs	r3, r1
 8008ac6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8008ac8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008acc:	68d1      	ldr	r1, [r2, #12]
 8008ace:	4303      	orrs	r3, r0
 8008ad0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008ad4:	430b      	orrs	r3, r1
 8008ad6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8008ad8:	6813      	ldr	r3, [r2, #0]
 8008ada:	f043 0301 	orr.w	r3, r3, #1
 8008ade:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008ae0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8008ae2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008ae4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8008ae6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8008aea:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8008aec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8008af0:	e780      	b.n	80089f4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008af2:	68a0      	ldr	r0, [r4, #8]
 8008af4:	b950      	cbnz	r0, 8008b0c <HAL_I2C_Init+0x120>
 8008af6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008afa:	fbb3 f3f5 	udiv	r3, r3, r5
 8008afe:	3301      	adds	r3, #1
 8008b00:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008b04:	b17b      	cbz	r3, 8008b26 <HAL_I2C_Init+0x13a>
 8008b06:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008b0a:	e7c9      	b.n	8008aa0 <HAL_I2C_Init+0xb4>
 8008b0c:	2019      	movs	r0, #25
 8008b0e:	4345      	muls	r5, r0
 8008b10:	fbb3 f3f5 	udiv	r3, r3, r5
 8008b14:	3301      	adds	r3, #1
 8008b16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008b1a:	b123      	cbz	r3, 8008b26 <HAL_I2C_Init+0x13a>
 8008b1c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008b20:	e7be      	b.n	8008aa0 <HAL_I2C_Init+0xb4>
 8008b22:	2304      	movs	r3, #4
 8008b24:	e7bc      	b.n	8008aa0 <HAL_I2C_Init+0xb4>
 8008b26:	2301      	movs	r3, #1
 8008b28:	e7ba      	b.n	8008aa0 <HAL_I2C_Init+0xb4>
 8008b2a:	bf00      	nop
 8008b2c:	000186a0 	.word	0x000186a0
 8008b30:	001e847f 	.word	0x001e847f
 8008b34:	003d08ff 	.word	0x003d08ff
 8008b38:	000f4240 	.word	0x000f4240

08008b3c <HAL_I2C_Mem_Write>:
{
 8008b3c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008b40:	4604      	mov	r4, r0
 8008b42:	4699      	mov	r9, r3
 8008b44:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8008b46:	460f      	mov	r7, r1
 8008b48:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008b4a:	f7ff f953 	bl	8007df4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008b4e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008b52:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8008b54:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008b56:	d003      	beq.n	8008b60 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8008b58:	2002      	movs	r0, #2
}
 8008b5a:	b003      	add	sp, #12
 8008b5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008b60:	9000      	str	r0, [sp, #0]
 8008b62:	493c      	ldr	r1, [pc, #240]	; (8008c54 <HAL_I2C_Mem_Write+0x118>)
 8008b64:	2319      	movs	r3, #25
 8008b66:	2201      	movs	r2, #1
 8008b68:	4620      	mov	r0, r4
 8008b6a:	f7ff fd7d 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 8008b6e:	2800      	cmp	r0, #0
 8008b70:	d1f2      	bne.n	8008b58 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8008b72:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008b76:	2b01      	cmp	r3, #1
 8008b78:	d0ee      	beq.n	8008b58 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008b7a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008b7c:	2301      	movs	r3, #1
 8008b7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008b82:	6803      	ldr	r3, [r0, #0]
 8008b84:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8008b86:	bf5e      	ittt	pl
 8008b88:	6803      	ldrpl	r3, [r0, #0]
 8008b8a:	f043 0301 	orrpl.w	r3, r3, #1
 8008b8e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008b90:	6803      	ldr	r3, [r0, #0]
 8008b92:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008b96:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8008b98:	2321      	movs	r3, #33	; 0x21
 8008b9a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008b9e:	2340      	movs	r3, #64	; 0x40
 8008ba0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008ba4:	2300      	movs	r3, #0
 8008ba6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8008ba8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008baa:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008bac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8008bb0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8008bb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008bb4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8008bb6:	4b28      	ldr	r3, [pc, #160]	; (8008c58 <HAL_I2C_Mem_Write+0x11c>)
 8008bb8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008bba:	e9cd 6500 	strd	r6, r5, [sp]
 8008bbe:	464b      	mov	r3, r9
 8008bc0:	4642      	mov	r2, r8
 8008bc2:	4639      	mov	r1, r7
 8008bc4:	4620      	mov	r0, r4
 8008bc6:	f7ff fe37 	bl	8008838 <I2C_RequestMemoryWrite>
 8008bca:	2800      	cmp	r0, #0
 8008bcc:	d02a      	beq.n	8008c24 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8008bce:	2001      	movs	r0, #1
 8008bd0:	e7c3      	b.n	8008b5a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008bd2:	f7ff fe0b 	bl	80087ec <I2C_WaitOnTXEFlagUntilTimeout>
 8008bd6:	b140      	cbz	r0, 8008bea <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008bd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008bda:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008bdc:	bf01      	itttt	eq
 8008bde:	6822      	ldreq	r2, [r4, #0]
 8008be0:	6813      	ldreq	r3, [r2, #0]
 8008be2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8008be6:	6013      	streq	r3, [r2, #0]
 8008be8:	e7f1      	b.n	8008bce <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008bea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008bec:	6827      	ldr	r7, [r4, #0]
 8008bee:	461a      	mov	r2, r3
 8008bf0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008bf4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8008bf6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8008bf8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8008bfa:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8008bfc:	3a01      	subs	r2, #1
 8008bfe:	b292      	uxth	r2, r2
 8008c00:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008c02:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8008c04:	1e48      	subs	r0, r1, #1
 8008c06:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008c08:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8008c0a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008c0c:	d50a      	bpl.n	8008c24 <HAL_I2C_Mem_Write+0xe8>
 8008c0e:	b148      	cbz	r0, 8008c24 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008c10:	785a      	ldrb	r2, [r3, #1]
 8008c12:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8008c14:	3302      	adds	r3, #2
 8008c16:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8008c18:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008c1a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8008c1c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8008c1e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8008c20:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008c22:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008c24:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008c26:	462a      	mov	r2, r5
 8008c28:	4631      	mov	r1, r6
 8008c2a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8008c2c:	2b00      	cmp	r3, #0
 8008c2e:	d1d0      	bne.n	8008bd2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008c30:	f7ff fdb6 	bl	80087a0 <I2C_WaitOnBTFFlagUntilTimeout>
 8008c34:	2800      	cmp	r0, #0
 8008c36:	d1cf      	bne.n	8008bd8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008c38:	6822      	ldr	r2, [r4, #0]
 8008c3a:	6813      	ldr	r3, [r2, #0]
 8008c3c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008c40:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8008c42:	2320      	movs	r3, #32
 8008c44:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008c48:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008c4c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8008c50:	e783      	b.n	8008b5a <HAL_I2C_Mem_Write+0x1e>
 8008c52:	bf00      	nop
 8008c54:	00100002 	.word	0x00100002
 8008c58:	ffff0000 	.word	0xffff0000

08008c5c <HAL_I2C_Mem_Read>:
{
 8008c5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008c60:	4604      	mov	r4, r0
 8008c62:	b087      	sub	sp, #28
 8008c64:	4699      	mov	r9, r3
 8008c66:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8008c68:	460d      	mov	r5, r1
 8008c6a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008c6c:	f7ff f8c2 	bl	8007df4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008c70:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008c74:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8008c76:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008c78:	d004      	beq.n	8008c84 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8008c7a:	2502      	movs	r5, #2
}
 8008c7c:	4628      	mov	r0, r5
 8008c7e:	b007      	add	sp, #28
 8008c80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008c84:	9000      	str	r0, [sp, #0]
 8008c86:	4976      	ldr	r1, [pc, #472]	; (8008e60 <HAL_I2C_Mem_Read+0x204>)
 8008c88:	2319      	movs	r3, #25
 8008c8a:	2201      	movs	r2, #1
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	f7ff fceb 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 8008c92:	2800      	cmp	r0, #0
 8008c94:	d1f1      	bne.n	8008c7a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8008c96:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008c9a:	2b01      	cmp	r3, #1
 8008c9c:	d0ed      	beq.n	8008c7a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008c9e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008ca0:	2301      	movs	r3, #1
 8008ca2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008ca6:	6803      	ldr	r3, [r0, #0]
 8008ca8:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8008caa:	bf5e      	ittt	pl
 8008cac:	6803      	ldrpl	r3, [r0, #0]
 8008cae:	f043 0301 	orrpl.w	r3, r3, #1
 8008cb2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008cb4:	6803      	ldr	r3, [r0, #0]
 8008cb6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008cba:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008cbc:	2322      	movs	r3, #34	; 0x22
 8008cbe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008cc2:	2340      	movs	r3, #64	; 0x40
 8008cc4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008cc8:	2300      	movs	r3, #0
 8008cca:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8008ccc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008cce:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008cd0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8008cd4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8008cd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008cd8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8008cda:	4b62      	ldr	r3, [pc, #392]	; (8008e64 <HAL_I2C_Mem_Read+0x208>)
 8008cdc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008cde:	4629      	mov	r1, r5
 8008ce0:	e9cd 7600 	strd	r7, r6, [sp]
 8008ce4:	464b      	mov	r3, r9
 8008ce6:	4642      	mov	r2, r8
 8008ce8:	4620      	mov	r0, r4
 8008cea:	f7ff fdfd 	bl	80088e8 <I2C_RequestMemoryRead>
 8008cee:	4605      	mov	r5, r0
 8008cf0:	b108      	cbz	r0, 8008cf6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8008cf2:	2501      	movs	r5, #1
 8008cf4:	e7c2      	b.n	8008c7c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8008cf6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008cf8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8008cfa:	b9b2      	cbnz	r2, 8008d2a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008cfc:	9002      	str	r0, [sp, #8]
 8008cfe:	695a      	ldr	r2, [r3, #20]
 8008d00:	9202      	str	r2, [sp, #8]
 8008d02:	699a      	ldr	r2, [r3, #24]
 8008d04:	9202      	str	r2, [sp, #8]
 8008d06:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008d08:	681a      	ldr	r2, [r3, #0]
 8008d0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008d0e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008d10:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8008e68 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8008d14:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008d16:	2b00      	cmp	r3, #0
 8008d18:	d12c      	bne.n	8008d74 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8008d1a:	2220      	movs	r2, #32
 8008d1c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008d20:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008d24:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8008d28:	e7a8      	b.n	8008c7c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8008d2a:	2a01      	cmp	r2, #1
 8008d2c:	d10a      	bne.n	8008d44 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008d2e:	681a      	ldr	r2, [r3, #0]
 8008d30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008d34:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008d36:	9003      	str	r0, [sp, #12]
 8008d38:	695a      	ldr	r2, [r3, #20]
 8008d3a:	9203      	str	r2, [sp, #12]
 8008d3c:	699a      	ldr	r2, [r3, #24]
 8008d3e:	9203      	str	r2, [sp, #12]
 8008d40:	9a03      	ldr	r2, [sp, #12]
 8008d42:	e7e1      	b.n	8008d08 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8008d44:	2a02      	cmp	r2, #2
 8008d46:	d10e      	bne.n	8008d66 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008d48:	681a      	ldr	r2, [r3, #0]
 8008d4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008d4e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008d50:	681a      	ldr	r2, [r3, #0]
 8008d52:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008d56:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008d58:	9004      	str	r0, [sp, #16]
 8008d5a:	695a      	ldr	r2, [r3, #20]
 8008d5c:	9204      	str	r2, [sp, #16]
 8008d5e:	699b      	ldr	r3, [r3, #24]
 8008d60:	9304      	str	r3, [sp, #16]
 8008d62:	9b04      	ldr	r3, [sp, #16]
 8008d64:	e7d4      	b.n	8008d10 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008d66:	9005      	str	r0, [sp, #20]
 8008d68:	695a      	ldr	r2, [r3, #20]
 8008d6a:	9205      	str	r2, [sp, #20]
 8008d6c:	699b      	ldr	r3, [r3, #24]
 8008d6e:	9305      	str	r3, [sp, #20]
 8008d70:	9b05      	ldr	r3, [sp, #20]
 8008d72:	e7cd      	b.n	8008d10 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8008d74:	2b03      	cmp	r3, #3
 8008d76:	d856      	bhi.n	8008e26 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8008d78:	2b01      	cmp	r3, #1
 8008d7a:	d115      	bne.n	8008da8 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008d7c:	4632      	mov	r2, r6
 8008d7e:	4639      	mov	r1, r7
 8008d80:	4620      	mov	r0, r4
 8008d82:	f7ff fcde 	bl	8008742 <I2C_WaitOnRXNEFlagUntilTimeout>
 8008d86:	2800      	cmp	r0, #0
 8008d88:	d1b3      	bne.n	8008cf2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d8a:	6823      	ldr	r3, [r4, #0]
 8008d8c:	691a      	ldr	r2, [r3, #16]
 8008d8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008d90:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008d92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008d94:	3301      	adds	r3, #1
 8008d96:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008d98:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008d9a:	3b01      	subs	r3, #1
 8008d9c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008d9e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008da0:	3b01      	subs	r3, #1
 8008da2:	b29b      	uxth	r3, r3
 8008da4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8008da6:	e7b5      	b.n	8008d14 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8008da8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008daa:	9600      	str	r6, [sp, #0]
 8008dac:	463b      	mov	r3, r7
 8008dae:	f04f 0200 	mov.w	r2, #0
 8008db2:	4641      	mov	r1, r8
 8008db4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8008db6:	d119      	bne.n	8008dec <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008db8:	f7ff fc56 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 8008dbc:	2800      	cmp	r0, #0
 8008dbe:	d198      	bne.n	8008cf2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008dc0:	6823      	ldr	r3, [r4, #0]
 8008dc2:	681a      	ldr	r2, [r3, #0]
 8008dc4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008dc8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008dca:	691a      	ldr	r2, [r3, #16]
 8008dcc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008dce:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008dd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008dd2:	1c53      	adds	r3, r2, #1
 8008dd4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008dd6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008dd8:	3b01      	subs	r3, #1
 8008dda:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008ddc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008dde:	3b01      	subs	r3, #1
 8008de0:	b29b      	uxth	r3, r3
 8008de2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008de4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008de6:	691b      	ldr	r3, [r3, #16]
 8008de8:	7053      	strb	r3, [r2, #1]
 8008dea:	e7d2      	b.n	8008d92 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008dec:	f7ff fc3c 	bl	8008668 <I2C_WaitOnFlagUntilTimeout>
 8008df0:	2800      	cmp	r0, #0
 8008df2:	f47f af7e 	bne.w	8008cf2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008df6:	6823      	ldr	r3, [r4, #0]
 8008df8:	681a      	ldr	r2, [r3, #0]
 8008dfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008dfe:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008e00:	691a      	ldr	r2, [r3, #16]
 8008e02:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008e04:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008e06:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008e08:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8008e0a:	3301      	adds	r3, #1
 8008e0c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008e0e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008e10:	3b01      	subs	r3, #1
 8008e12:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008e14:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008e16:	3b01      	subs	r3, #1
 8008e18:	b29b      	uxth	r3, r3
 8008e1a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008e1c:	4602      	mov	r2, r0
 8008e1e:	463b      	mov	r3, r7
 8008e20:	4641      	mov	r1, r8
 8008e22:	4620      	mov	r0, r4
 8008e24:	e7c8      	b.n	8008db8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008e26:	4632      	mov	r2, r6
 8008e28:	4639      	mov	r1, r7
 8008e2a:	4620      	mov	r0, r4
 8008e2c:	f7ff fc89 	bl	8008742 <I2C_WaitOnRXNEFlagUntilTimeout>
 8008e30:	2800      	cmp	r0, #0
 8008e32:	f47f af5e 	bne.w	8008cf2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008e36:	6823      	ldr	r3, [r4, #0]
 8008e38:	691a      	ldr	r2, [r3, #16]
 8008e3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008e3c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8008e3e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008e40:	1c53      	adds	r3, r2, #1
 8008e42:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8008e44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008e46:	3b01      	subs	r3, #1
 8008e48:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008e4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008e4c:	3b01      	subs	r3, #1
 8008e4e:	b29b      	uxth	r3, r3
 8008e50:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008e52:	6823      	ldr	r3, [r4, #0]
 8008e54:	6959      	ldr	r1, [r3, #20]
 8008e56:	0749      	lsls	r1, r1, #29
 8008e58:	f57f af5c 	bpl.w	8008d14 <HAL_I2C_Mem_Read+0xb8>
 8008e5c:	e7c3      	b.n	8008de6 <HAL_I2C_Mem_Read+0x18a>
 8008e5e:	bf00      	nop
 8008e60:	00100002 	.word	0x00100002
 8008e64:	ffff0000 	.word	0xffff0000
 8008e68:	00010004 	.word	0x00010004

08008e6c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8008e6c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008e6e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008e72:	2b20      	cmp	r3, #32
 8008e74:	b2dc      	uxtb	r4, r3
 8008e76:	d116      	bne.n	8008ea6 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008e78:	2324      	movs	r3, #36	; 0x24
 8008e7a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8008e7e:	6803      	ldr	r3, [r0, #0]
 8008e80:	681a      	ldr	r2, [r3, #0]
 8008e82:	f022 0201 	bic.w	r2, r2, #1
 8008e86:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8008e88:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008e8a:	f022 0210 	bic.w	r2, r2, #16
 8008e8e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8008e90:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008e92:	4311      	orrs	r1, r2
 8008e94:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8008e96:	681a      	ldr	r2, [r3, #0]
 8008e98:	f042 0201 	orr.w	r2, r2, #1
 8008e9c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008e9e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8008ea2:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8008ea4:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8008ea6:	2002      	movs	r0, #2
 8008ea8:	e7fc      	b.n	8008ea4 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08008eaa <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8008eaa:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008eac:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008eb0:	2b20      	cmp	r3, #32
 8008eb2:	b2dc      	uxtb	r4, r3
 8008eb4:	d116      	bne.n	8008ee4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8008eb6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008eb8:	2324      	movs	r3, #36	; 0x24
 8008eba:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8008ebe:	6813      	ldr	r3, [r2, #0]
 8008ec0:	f023 0301 	bic.w	r3, r3, #1
 8008ec4:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8008ec6:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8008ec8:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8008ecc:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8008ece:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8008ed0:	b29b      	uxth	r3, r3
 8008ed2:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8008ed4:	6813      	ldr	r3, [r2, #0]
 8008ed6:	f043 0301 	orr.w	r3, r3, #1
 8008eda:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008edc:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8008ee0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8008ee2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8008ee4:	2002      	movs	r0, #2
 8008ee6:	e7fc      	b.n	8008ee2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08008ee8 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008ee8:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008eea:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008eee:	01d2      	lsls	r2, r2, #7
 8008ef0:	3284      	adds	r2, #132	; 0x84
 8008ef2:	1883      	adds	r3, r0, r2
{
 8008ef4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008ef8:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008efa:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008efc:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8008efe:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008f02:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8008f06:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008f08:	68c5      	ldr	r5, [r0, #12]
 8008f0a:	f10c 0701 	add.w	r7, ip, #1
 8008f0e:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008f12:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008f16:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008f18:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008f1a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008f1e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8008f20:	68c5      	ldr	r5, [r0, #12]
 8008f22:	68ce      	ldr	r6, [r1, #12]
 8008f24:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8008f28:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8008f2a:	689d      	ldr	r5, [r3, #8]
 8008f2c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8008f30:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8008f32:	68c7      	ldr	r7, [r0, #12]
 8008f34:	688d      	ldr	r5, [r1, #8]
 8008f36:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8008f3a:	3501      	adds	r5, #1
 8008f3c:	443d      	add	r5, r7
 8008f3e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8008f42:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8008f44:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8008f46:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8008f48:	f025 0507 	bic.w	r5, r5, #7
 8008f4c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8008f4e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8008f52:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8008f54:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8008f56:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8008f5a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8008f5e:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8008f62:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8008f66:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8008f6a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8008f6e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8008f72:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8008f74:	695d      	ldr	r5, [r3, #20]
 8008f76:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8008f7a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8008f7c:	694d      	ldr	r5, [r1, #20]
 8008f7e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8008f80:	69dd      	ldr	r5, [r3, #28]
 8008f82:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8008f86:	f025 0507 	bic.w	r5, r5, #7
 8008f8a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8008f8c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8008f90:	433d      	orrs	r5, r7
 8008f92:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008f94:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008f96:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008f98:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008f9c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8008f9e:	b31e      	cbz	r6, 8008fe8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8008fa0:	2e01      	cmp	r6, #1
 8008fa2:	d023      	beq.n	8008fec <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8008fa4:	1eb5      	subs	r5, r6, #2
 8008fa6:	2d02      	cmp	r5, #2
 8008fa8:	d922      	bls.n	8008ff0 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8008faa:	2e07      	cmp	r6, #7
 8008fac:	bf0c      	ite	eq
 8008fae:	2502      	moveq	r5, #2
 8008fb0:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8008fb2:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8008fb4:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8008fb8:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008fba:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008fbe:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8008fc0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008fc2:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008fc4:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008fc6:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8008fc8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8008fcc:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8008fce:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8008fd0:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8008fd4:	f024 0407 	bic.w	r4, r4, #7
 8008fd8:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8008fda:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8008fdc:	5883      	ldr	r3, [r0, r2]
 8008fde:	f043 0301 	orr.w	r3, r3, #1
 8008fe2:	5083      	str	r3, [r0, r2]
}
 8008fe4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8008fe8:	2504      	movs	r5, #4
 8008fea:	e7e2      	b.n	8008fb2 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8008fec:	2503      	movs	r5, #3
 8008fee:	e7e0      	b.n	8008fb2 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8008ff0:	2502      	movs	r5, #2
 8008ff2:	e7de      	b.n	8008fb2 <LTDC_SetConfig+0xca>

08008ff4 <HAL_LTDC_Init>:
{
 8008ff4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8008ff6:	4604      	mov	r4, r0
 8008ff8:	2800      	cmp	r0, #0
 8008ffa:	d063      	beq.n	80090c4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8008ffc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8009000:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009004:	b91b      	cbnz	r3, 800900e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8009006:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800900a:	f7f8 fa17 	bl	800143c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800900e:	2302      	movs	r3, #2
 8009010:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009014:	6823      	ldr	r3, [r4, #0]
 8009016:	699a      	ldr	r2, [r3, #24]
 8009018:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800901c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800901e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8009022:	4302      	orrs	r2, r0
 8009024:	68e0      	ldr	r0, [r4, #12]
 8009026:	6999      	ldr	r1, [r3, #24]
 8009028:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800902a:	6920      	ldr	r0, [r4, #16]
 800902c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800902e:	430a      	orrs	r2, r1
 8009030:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009032:	689a      	ldr	r2, [r3, #8]
 8009034:	4924      	ldr	r1, [pc, #144]	; (80090c8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8009036:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009038:	400a      	ands	r2, r1
 800903a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800903c:	689a      	ldr	r2, [r3, #8]
 800903e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009042:	69a0      	ldr	r0, [r4, #24]
 8009044:	4302      	orrs	r2, r0
 8009046:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009048:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800904a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800904c:	400a      	ands	r2, r1
 800904e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009050:	68da      	ldr	r2, [r3, #12]
 8009052:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009056:	6a20      	ldr	r0, [r4, #32]
 8009058:	4302      	orrs	r2, r0
 800905a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800905c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800905e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009060:	400a      	ands	r2, r1
 8009062:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009064:	691a      	ldr	r2, [r3, #16]
 8009066:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800906a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800906c:	4302      	orrs	r2, r0
 800906e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009070:	695a      	ldr	r2, [r3, #20]
 8009072:	4011      	ands	r1, r2
 8009074:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009076:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8009078:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800907a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800907e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009080:	430a      	orrs	r2, r1
 8009082:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009084:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8009086:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800908a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800908e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8009092:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8009094:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8009096:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800909a:	430a      	orrs	r2, r1
 800909c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80090a0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80090a4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80090a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80090a8:	f042 0206 	orr.w	r2, r2, #6
 80090ac:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80090ae:	699a      	ldr	r2, [r3, #24]
 80090b0:	f042 0201 	orr.w	r2, r2, #1
 80090b4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80090b6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80090b8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80090ba:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80090be:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80090c2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80090c4:	2001      	movs	r0, #1
 80090c6:	e7fc      	b.n	80090c2 <HAL_LTDC_Init+0xce>
 80090c8:	f000f800 	.word	0xf000f800

080090cc <HAL_LTDC_ErrorCallback>:
 80090cc:	4770      	bx	lr

080090ce <HAL_LTDC_ReloadEventCallback>:
 80090ce:	4770      	bx	lr

080090d0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80090d0:	6803      	ldr	r3, [r0, #0]
{
 80090d2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80090d4:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80090d6:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80090d8:	0772      	lsls	r2, r6, #29
{
 80090da:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80090dc:	d514      	bpl.n	8009108 <HAL_LTDC_IRQHandler+0x38>
 80090de:	0769      	lsls	r1, r5, #29
 80090e0:	d512      	bpl.n	8009108 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80090e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80090e4:	f022 0204 	bic.w	r2, r2, #4
 80090e8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80090ea:	2204      	movs	r2, #4
 80090ec:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80090ee:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80090f2:	f043 0301 	orr.w	r3, r3, #1
 80090f6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80090fa:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80090fc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009100:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009104:	f7ff ffe2 	bl	80090cc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8009108:	07b2      	lsls	r2, r6, #30
 800910a:	d516      	bpl.n	800913a <HAL_LTDC_IRQHandler+0x6a>
 800910c:	07ab      	lsls	r3, r5, #30
 800910e:	d514      	bpl.n	800913a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8009110:	6823      	ldr	r3, [r4, #0]
 8009112:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009114:	f022 0202 	bic.w	r2, r2, #2
 8009118:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800911a:	2202      	movs	r2, #2
 800911c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800911e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8009122:	4313      	orrs	r3, r2
 8009124:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009128:	2304      	movs	r3, #4
 800912a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800912e:	2300      	movs	r3, #0
 8009130:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009134:	4620      	mov	r0, r4
 8009136:	f7ff ffc9 	bl	80090cc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800913a:	07f0      	lsls	r0, r6, #31
 800913c:	d510      	bpl.n	8009160 <HAL_LTDC_IRQHandler+0x90>
 800913e:	07e9      	lsls	r1, r5, #31
 8009140:	d50e      	bpl.n	8009160 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009142:	6823      	ldr	r3, [r4, #0]
 8009144:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009146:	f022 0201 	bic.w	r2, r2, #1
 800914a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800914c:	2201      	movs	r2, #1
 800914e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8009150:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8009152:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009156:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800915a:	4620      	mov	r0, r4
 800915c:	f7f9 fa5c 	bl	8002618 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8009160:	0732      	lsls	r2, r6, #28
 8009162:	d511      	bpl.n	8009188 <HAL_LTDC_IRQHandler+0xb8>
 8009164:	072b      	lsls	r3, r5, #28
 8009166:	d50f      	bpl.n	8009188 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8009168:	6823      	ldr	r3, [r4, #0]
 800916a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800916c:	f022 0208 	bic.w	r2, r2, #8
 8009170:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8009172:	2208      	movs	r2, #8
 8009174:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8009176:	2301      	movs	r3, #1
 8009178:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800917c:	2300      	movs	r3, #0
 800917e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8009182:	4620      	mov	r0, r4
 8009184:	f7ff ffa3 	bl	80090ce <HAL_LTDC_ReloadEventCallback>
}
 8009188:	bd70      	pop	{r4, r5, r6, pc}

0800918a <HAL_LTDC_ConfigLayer>:
{
 800918a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800918e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009192:	2b01      	cmp	r3, #1
{
 8009194:	4606      	mov	r6, r0
 8009196:	460f      	mov	r7, r1
 8009198:	4694      	mov	ip, r2
 800919a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800919e:	d01f      	beq.n	80091e0 <HAL_LTDC_ConfigLayer+0x56>
 80091a0:	f04f 0801 	mov.w	r8, #1
 80091a4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80091a8:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80091ac:	2434      	movs	r4, #52	; 0x34
 80091ae:	460d      	mov	r5, r1
 80091b0:	fb04 6402 	mla	r4, r4, r2, r6
 80091b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80091b6:	3438      	adds	r4, #56	; 0x38
 80091b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80091ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80091bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80091be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80091c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80091c2:	682b      	ldr	r3, [r5, #0]
 80091c4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80091c6:	4630      	mov	r0, r6
 80091c8:	4662      	mov	r2, ip
 80091ca:	4639      	mov	r1, r7
 80091cc:	f7ff fe8c 	bl	8008ee8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80091d0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80091d2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80091d4:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80091d8:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80091dc:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80091e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080091e4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80091e4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80091e8:	2b01      	cmp	r3, #1
 80091ea:	f04f 0302 	mov.w	r3, #2
 80091ee:	d012      	beq.n	8009216 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80091f0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80091f4:	6803      	ldr	r3, [r0, #0]
 80091f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80091f8:	f022 0201 	bic.w	r2, r2, #1
 80091fc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80091fe:	4a07      	ldr	r2, [pc, #28]	; (800921c <HAL_LTDC_ProgramLineEvent+0x38>)
 8009200:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009202:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009204:	f042 0201 	orr.w	r2, r2, #1
 8009208:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800920a:	2301      	movs	r3, #1
 800920c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009210:	2300      	movs	r3, #0
 8009212:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8009216:	4618      	mov	r0, r3
}
 8009218:	4770      	bx	lr
 800921a:	bf00      	nop
 800921c:	40016800 	.word	0x40016800

08009220 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8009220:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009224:	4604      	mov	r4, r0
 8009226:	b340      	cbz	r0, 800927a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009228:	6803      	ldr	r3, [r0, #0]
 800922a:	07dd      	lsls	r5, r3, #31
 800922c:	d410      	bmi.n	8009250 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800922e:	6823      	ldr	r3, [r4, #0]
 8009230:	0798      	lsls	r0, r3, #30
 8009232:	d45e      	bmi.n	80092f2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009234:	6823      	ldr	r3, [r4, #0]
 8009236:	071a      	lsls	r2, r3, #28
 8009238:	f100 80a0 	bmi.w	800937c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800923c:	6823      	ldr	r3, [r4, #0]
 800923e:	075b      	lsls	r3, r3, #29
 8009240:	f100 80c0 	bmi.w	80093c4 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8009244:	69a0      	ldr	r0, [r4, #24]
 8009246:	2800      	cmp	r0, #0
 8009248:	f040 8128 	bne.w	800949c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800924c:	2000      	movs	r0, #0
 800924e:	e02b      	b.n	80092a8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009250:	4b8f      	ldr	r3, [pc, #572]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 8009252:	689a      	ldr	r2, [r3, #8]
 8009254:	f002 020c 	and.w	r2, r2, #12
 8009258:	2a04      	cmp	r2, #4
 800925a:	d007      	beq.n	800926c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800925c:	689a      	ldr	r2, [r3, #8]
 800925e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009262:	2a08      	cmp	r2, #8
 8009264:	d10b      	bne.n	800927e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009266:	685a      	ldr	r2, [r3, #4]
 8009268:	0251      	lsls	r1, r2, #9
 800926a:	d508      	bpl.n	800927e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800926c:	4b88      	ldr	r3, [pc, #544]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	039a      	lsls	r2, r3, #14
 8009272:	d5dc      	bpl.n	800922e <HAL_RCC_OscConfig+0xe>
 8009274:	6863      	ldr	r3, [r4, #4]
 8009276:	2b00      	cmp	r3, #0
 8009278:	d1d9      	bne.n	800922e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800927a:	2001      	movs	r0, #1
 800927c:	e014      	b.n	80092a8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800927e:	6862      	ldr	r2, [r4, #4]
 8009280:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8009284:	d113      	bne.n	80092ae <HAL_RCC_OscConfig+0x8e>
 8009286:	681a      	ldr	r2, [r3, #0]
 8009288:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800928c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800928e:	f7fe fdb1 	bl	8007df4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009292:	4e7f      	ldr	r6, [pc, #508]	; (8009490 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8009294:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009296:	6833      	ldr	r3, [r6, #0]
 8009298:	039b      	lsls	r3, r3, #14
 800929a:	d4c8      	bmi.n	800922e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800929c:	f7fe fdaa 	bl	8007df4 <HAL_GetTick>
 80092a0:	1b40      	subs	r0, r0, r5
 80092a2:	2864      	cmp	r0, #100	; 0x64
 80092a4:	d9f7      	bls.n	8009296 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80092a6:	2003      	movs	r0, #3
}
 80092a8:	b002      	add	sp, #8
 80092aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80092ae:	4d78      	ldr	r5, [pc, #480]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 80092b0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80092b4:	682b      	ldr	r3, [r5, #0]
 80092b6:	d107      	bne.n	80092c8 <HAL_RCC_OscConfig+0xa8>
 80092b8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80092bc:	602b      	str	r3, [r5, #0]
 80092be:	682b      	ldr	r3, [r5, #0]
 80092c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80092c4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80092c6:	e7e2      	b.n	800928e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80092c8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80092cc:	602b      	str	r3, [r5, #0]
 80092ce:	682b      	ldr	r3, [r5, #0]
 80092d0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80092d4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80092d6:	2a00      	cmp	r2, #0
 80092d8:	d1d9      	bne.n	800928e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80092da:	f7fe fd8b 	bl	8007df4 <HAL_GetTick>
 80092de:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80092e0:	682b      	ldr	r3, [r5, #0]
 80092e2:	039f      	lsls	r7, r3, #14
 80092e4:	d5a3      	bpl.n	800922e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80092e6:	f7fe fd85 	bl	8007df4 <HAL_GetTick>
 80092ea:	1b80      	subs	r0, r0, r6
 80092ec:	2864      	cmp	r0, #100	; 0x64
 80092ee:	d9f7      	bls.n	80092e0 <HAL_RCC_OscConfig+0xc0>
 80092f0:	e7d9      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80092f2:	4b67      	ldr	r3, [pc, #412]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 80092f4:	689a      	ldr	r2, [r3, #8]
 80092f6:	f012 0f0c 	tst.w	r2, #12
 80092fa:	d007      	beq.n	800930c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80092fc:	689a      	ldr	r2, [r3, #8]
 80092fe:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009302:	2a08      	cmp	r2, #8
 8009304:	d111      	bne.n	800932a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8009306:	685b      	ldr	r3, [r3, #4]
 8009308:	025e      	lsls	r6, r3, #9
 800930a:	d40e      	bmi.n	800932a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800930c:	4a60      	ldr	r2, [pc, #384]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 800930e:	6813      	ldr	r3, [r2, #0]
 8009310:	079d      	lsls	r5, r3, #30
 8009312:	d502      	bpl.n	800931a <HAL_RCC_OscConfig+0xfa>
 8009314:	68e3      	ldr	r3, [r4, #12]
 8009316:	2b01      	cmp	r3, #1
 8009318:	d1af      	bne.n	800927a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800931a:	6813      	ldr	r3, [r2, #0]
 800931c:	6921      	ldr	r1, [r4, #16]
 800931e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009322:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8009326:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8009328:	e784      	b.n	8009234 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800932a:	68e2      	ldr	r2, [r4, #12]
 800932c:	4b59      	ldr	r3, [pc, #356]	; (8009494 <HAL_RCC_OscConfig+0x274>)
 800932e:	b1b2      	cbz	r2, 800935e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8009330:	2201      	movs	r2, #1
 8009332:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009334:	f7fe fd5e 	bl	8007df4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009338:	4d55      	ldr	r5, [pc, #340]	; (8009490 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800933a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800933c:	682b      	ldr	r3, [r5, #0]
 800933e:	0798      	lsls	r0, r3, #30
 8009340:	d507      	bpl.n	8009352 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009342:	682b      	ldr	r3, [r5, #0]
 8009344:	6922      	ldr	r2, [r4, #16]
 8009346:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800934a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800934e:	602b      	str	r3, [r5, #0]
 8009350:	e770      	b.n	8009234 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009352:	f7fe fd4f 	bl	8007df4 <HAL_GetTick>
 8009356:	1b80      	subs	r0, r0, r6
 8009358:	2802      	cmp	r0, #2
 800935a:	d9ef      	bls.n	800933c <HAL_RCC_OscConfig+0x11c>
 800935c:	e7a3      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800935e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009360:	f7fe fd48 	bl	8007df4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009364:	4e4a      	ldr	r6, [pc, #296]	; (8009490 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8009366:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009368:	6833      	ldr	r3, [r6, #0]
 800936a:	0799      	lsls	r1, r3, #30
 800936c:	f57f af62 	bpl.w	8009234 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009370:	f7fe fd40 	bl	8007df4 <HAL_GetTick>
 8009374:	1b40      	subs	r0, r0, r5
 8009376:	2802      	cmp	r0, #2
 8009378:	d9f6      	bls.n	8009368 <HAL_RCC_OscConfig+0x148>
 800937a:	e794      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800937c:	6962      	ldr	r2, [r4, #20]
 800937e:	4b45      	ldr	r3, [pc, #276]	; (8009494 <HAL_RCC_OscConfig+0x274>)
 8009380:	b182      	cbz	r2, 80093a4 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8009382:	2201      	movs	r2, #1
 8009384:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8009388:	f7fe fd34 	bl	8007df4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800938c:	4e40      	ldr	r6, [pc, #256]	; (8009490 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800938e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009390:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8009392:	079f      	lsls	r7, r3, #30
 8009394:	f53f af52 	bmi.w	800923c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8009398:	f7fe fd2c 	bl	8007df4 <HAL_GetTick>
 800939c:	1b40      	subs	r0, r0, r5
 800939e:	2802      	cmp	r0, #2
 80093a0:	d9f6      	bls.n	8009390 <HAL_RCC_OscConfig+0x170>
 80093a2:	e780      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80093a4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80093a8:	f7fe fd24 	bl	8007df4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80093ac:	4e38      	ldr	r6, [pc, #224]	; (8009490 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80093ae:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80093b0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80093b2:	0798      	lsls	r0, r3, #30
 80093b4:	f57f af42 	bpl.w	800923c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80093b8:	f7fe fd1c 	bl	8007df4 <HAL_GetTick>
 80093bc:	1b40      	subs	r0, r0, r5
 80093be:	2802      	cmp	r0, #2
 80093c0:	d9f6      	bls.n	80093b0 <HAL_RCC_OscConfig+0x190>
 80093c2:	e770      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80093c4:	4b32      	ldr	r3, [pc, #200]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 80093c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80093c8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80093cc:	d128      	bne.n	8009420 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80093ce:	9201      	str	r2, [sp, #4]
 80093d0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80093d2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80093d6:	641a      	str	r2, [r3, #64]	; 0x40
 80093d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80093da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80093de:	9301      	str	r3, [sp, #4]
 80093e0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80093e2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80093e4:	4d2c      	ldr	r5, [pc, #176]	; (8009498 <HAL_RCC_OscConfig+0x278>)
 80093e6:	682b      	ldr	r3, [r5, #0]
 80093e8:	05d9      	lsls	r1, r3, #23
 80093ea:	d51b      	bpl.n	8009424 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80093ec:	68a3      	ldr	r3, [r4, #8]
 80093ee:	4d28      	ldr	r5, [pc, #160]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 80093f0:	2b01      	cmp	r3, #1
 80093f2:	d127      	bne.n	8009444 <HAL_RCC_OscConfig+0x224>
 80093f4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80093f6:	f043 0301 	orr.w	r3, r3, #1
 80093fa:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80093fc:	f7fe fcfa 	bl	8007df4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009400:	4e23      	ldr	r6, [pc, #140]	; (8009490 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8009402:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009404:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009408:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800940a:	079b      	lsls	r3, r3, #30
 800940c:	d539      	bpl.n	8009482 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800940e:	2f00      	cmp	r7, #0
 8009410:	f43f af18 	beq.w	8009244 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8009414:	4a1e      	ldr	r2, [pc, #120]	; (8009490 <HAL_RCC_OscConfig+0x270>)
 8009416:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009418:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800941c:	6413      	str	r3, [r2, #64]	; 0x40
 800941e:	e711      	b.n	8009244 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8009420:	2700      	movs	r7, #0
 8009422:	e7df      	b.n	80093e4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8009424:	682b      	ldr	r3, [r5, #0]
 8009426:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800942a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800942c:	f7fe fce2 	bl	8007df4 <HAL_GetTick>
 8009430:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009432:	682b      	ldr	r3, [r5, #0]
 8009434:	05da      	lsls	r2, r3, #23
 8009436:	d4d9      	bmi.n	80093ec <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8009438:	f7fe fcdc 	bl	8007df4 <HAL_GetTick>
 800943c:	1b80      	subs	r0, r0, r6
 800943e:	2802      	cmp	r0, #2
 8009440:	d9f7      	bls.n	8009432 <HAL_RCC_OscConfig+0x212>
 8009442:	e730      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009444:	2b05      	cmp	r3, #5
 8009446:	d104      	bne.n	8009452 <HAL_RCC_OscConfig+0x232>
 8009448:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800944a:	f043 0304 	orr.w	r3, r3, #4
 800944e:	672b      	str	r3, [r5, #112]	; 0x70
 8009450:	e7d0      	b.n	80093f4 <HAL_RCC_OscConfig+0x1d4>
 8009452:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8009454:	f022 0201 	bic.w	r2, r2, #1
 8009458:	672a      	str	r2, [r5, #112]	; 0x70
 800945a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800945c:	f022 0204 	bic.w	r2, r2, #4
 8009460:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8009462:	2b00      	cmp	r3, #0
 8009464:	d1ca      	bne.n	80093fc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8009466:	f7fe fcc5 	bl	8007df4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800946a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800946e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8009470:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8009472:	0798      	lsls	r0, r3, #30
 8009474:	d5cb      	bpl.n	800940e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009476:	f7fe fcbd 	bl	8007df4 <HAL_GetTick>
 800947a:	1b80      	subs	r0, r0, r6
 800947c:	4540      	cmp	r0, r8
 800947e:	d9f7      	bls.n	8009470 <HAL_RCC_OscConfig+0x250>
 8009480:	e711      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009482:	f7fe fcb7 	bl	8007df4 <HAL_GetTick>
 8009486:	1b40      	subs	r0, r0, r5
 8009488:	4540      	cmp	r0, r8
 800948a:	d9bd      	bls.n	8009408 <HAL_RCC_OscConfig+0x1e8>
 800948c:	e70b      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
 800948e:	bf00      	nop
 8009490:	40023800 	.word	0x40023800
 8009494:	42470000 	.word	0x42470000
 8009498:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800949c:	4d36      	ldr	r5, [pc, #216]	; (8009578 <HAL_RCC_OscConfig+0x358>)
 800949e:	68ab      	ldr	r3, [r5, #8]
 80094a0:	f003 030c 	and.w	r3, r3, #12
 80094a4:	2b08      	cmp	r3, #8
 80094a6:	d03d      	beq.n	8009524 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80094a8:	4b34      	ldr	r3, [pc, #208]	; (800957c <HAL_RCC_OscConfig+0x35c>)
 80094aa:	2200      	movs	r2, #0
 80094ac:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80094ae:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80094b0:	d12b      	bne.n	800950a <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80094b2:	f7fe fc9f 	bl	8007df4 <HAL_GetTick>
 80094b6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80094b8:	682b      	ldr	r3, [r5, #0]
 80094ba:	0199      	lsls	r1, r3, #6
 80094bc:	d41f      	bmi.n	80094fe <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80094be:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80094c2:	4313      	orrs	r3, r2
 80094c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80094c6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80094ca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80094cc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80094d0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80094d2:	0852      	lsrs	r2, r2, #1
 80094d4:	3a01      	subs	r2, #1
 80094d6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80094da:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80094dc:	4b27      	ldr	r3, [pc, #156]	; (800957c <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80094de:	4d26      	ldr	r5, [pc, #152]	; (8009578 <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 80094e0:	2201      	movs	r2, #1
 80094e2:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80094e4:	f7fe fc86 	bl	8007df4 <HAL_GetTick>
 80094e8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80094ea:	682b      	ldr	r3, [r5, #0]
 80094ec:	019a      	lsls	r2, r3, #6
 80094ee:	f53f aead 	bmi.w	800924c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80094f2:	f7fe fc7f 	bl	8007df4 <HAL_GetTick>
 80094f6:	1b00      	subs	r0, r0, r4
 80094f8:	2802      	cmp	r0, #2
 80094fa:	d9f6      	bls.n	80094ea <HAL_RCC_OscConfig+0x2ca>
 80094fc:	e6d3      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80094fe:	f7fe fc79 	bl	8007df4 <HAL_GetTick>
 8009502:	1b80      	subs	r0, r0, r6
 8009504:	2802      	cmp	r0, #2
 8009506:	d9d7      	bls.n	80094b8 <HAL_RCC_OscConfig+0x298>
 8009508:	e6cd      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800950a:	f7fe fc73 	bl	8007df4 <HAL_GetTick>
 800950e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009510:	682b      	ldr	r3, [r5, #0]
 8009512:	019b      	lsls	r3, r3, #6
 8009514:	f57f ae9a 	bpl.w	800924c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009518:	f7fe fc6c 	bl	8007df4 <HAL_GetTick>
 800951c:	1b00      	subs	r0, r0, r4
 800951e:	2802      	cmp	r0, #2
 8009520:	d9f6      	bls.n	8009510 <HAL_RCC_OscConfig+0x2f0>
 8009522:	e6c0      	b.n	80092a6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8009524:	2801      	cmp	r0, #1
 8009526:	f43f aebf 	beq.w	80092a8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800952a:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800952c:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800952e:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009532:	4291      	cmp	r1, r2
 8009534:	f47f aea1 	bne.w	800927a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009538:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800953a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800953e:	428a      	cmp	r2, r1
 8009540:	f47f ae9b 	bne.w	800927a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8009544:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8009546:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800954a:	401a      	ands	r2, r3
 800954c:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8009550:	f47f ae93 	bne.w	800927a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8009554:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009556:	0852      	lsrs	r2, r2, #1
 8009558:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800955c:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800955e:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8009562:	f47f ae8a 	bne.w	800927a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8009566:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009568:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800956c:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8009570:	f43f ae6c 	beq.w	800924c <HAL_RCC_OscConfig+0x2c>
 8009574:	e681      	b.n	800927a <HAL_RCC_OscConfig+0x5a>
 8009576:	bf00      	nop
 8009578:	40023800 	.word	0x40023800
 800957c:	42470000 	.word	0x42470000

08009580 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009580:	4913      	ldr	r1, [pc, #76]	; (80095d0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8009582:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009584:	688b      	ldr	r3, [r1, #8]
 8009586:	f003 030c 	and.w	r3, r3, #12
 800958a:	2b04      	cmp	r3, #4
 800958c:	d01c      	beq.n	80095c8 <HAL_RCC_GetSysClockFreq+0x48>
 800958e:	2b08      	cmp	r3, #8
 8009590:	d11c      	bne.n	80095cc <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8009592:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009594:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009596:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009598:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800959c:	bf14      	ite	ne
 800959e:	480d      	ldrne	r0, [pc, #52]	; (80095d4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80095a0:	480d      	ldreq	r0, [pc, #52]	; (80095d8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80095a2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80095a6:	bf18      	it	ne
 80095a8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80095aa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80095ae:	fba1 0100 	umull	r0, r1, r1, r0
 80095b2:	f7f6 fe75 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80095b6:	4b06      	ldr	r3, [pc, #24]	; (80095d0 <HAL_RCC_GetSysClockFreq+0x50>)
 80095b8:	685b      	ldr	r3, [r3, #4]
 80095ba:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80095be:	3301      	adds	r3, #1
 80095c0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80095c2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80095c6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80095c8:	4802      	ldr	r0, [pc, #8]	; (80095d4 <HAL_RCC_GetSysClockFreq+0x54>)
 80095ca:	e7fc      	b.n	80095c6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80095cc:	4802      	ldr	r0, [pc, #8]	; (80095d8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80095ce:	e7fa      	b.n	80095c6 <HAL_RCC_GetSysClockFreq+0x46>
 80095d0:	40023800 	.word	0x40023800
 80095d4:	007a1200 	.word	0x007a1200
 80095d8:	00f42400 	.word	0x00f42400

080095dc <HAL_RCC_ClockConfig>:
{
 80095dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095e0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80095e2:	4604      	mov	r4, r0
 80095e4:	b910      	cbnz	r0, 80095ec <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80095e6:	2001      	movs	r0, #1
}
 80095e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80095ec:	4b44      	ldr	r3, [pc, #272]	; (8009700 <HAL_RCC_ClockConfig+0x124>)
 80095ee:	681a      	ldr	r2, [r3, #0]
 80095f0:	f002 020f 	and.w	r2, r2, #15
 80095f4:	428a      	cmp	r2, r1
 80095f6:	d328      	bcc.n	800964a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80095f8:	6822      	ldr	r2, [r4, #0]
 80095fa:	0797      	lsls	r7, r2, #30
 80095fc:	d42d      	bmi.n	800965a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80095fe:	07d0      	lsls	r0, r2, #31
 8009600:	d441      	bmi.n	8009686 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8009602:	4b3f      	ldr	r3, [pc, #252]	; (8009700 <HAL_RCC_ClockConfig+0x124>)
 8009604:	681a      	ldr	r2, [r3, #0]
 8009606:	f002 020f 	and.w	r2, r2, #15
 800960a:	42aa      	cmp	r2, r5
 800960c:	d866      	bhi.n	80096dc <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800960e:	6822      	ldr	r2, [r4, #0]
 8009610:	0751      	lsls	r1, r2, #29
 8009612:	d46c      	bmi.n	80096ee <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8009614:	0713      	lsls	r3, r2, #28
 8009616:	d507      	bpl.n	8009628 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8009618:	4a3a      	ldr	r2, [pc, #232]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 800961a:	6921      	ldr	r1, [r4, #16]
 800961c:	6893      	ldr	r3, [r2, #8]
 800961e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8009622:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8009626:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8009628:	f7ff ffaa 	bl	8009580 <HAL_RCC_GetSysClockFreq>
 800962c:	4b35      	ldr	r3, [pc, #212]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 800962e:	4a36      	ldr	r2, [pc, #216]	; (8009708 <HAL_RCC_ClockConfig+0x12c>)
 8009630:	689b      	ldr	r3, [r3, #8]
 8009632:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8009636:	5cd3      	ldrb	r3, [r2, r3]
 8009638:	40d8      	lsrs	r0, r3
 800963a:	4b34      	ldr	r3, [pc, #208]	; (800970c <HAL_RCC_ClockConfig+0x130>)
 800963c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800963e:	4b34      	ldr	r3, [pc, #208]	; (8009710 <HAL_RCC_ClockConfig+0x134>)
 8009640:	6818      	ldr	r0, [r3, #0]
 8009642:	f7f8 f955 	bl	80018f0 <HAL_InitTick>
  return HAL_OK;
 8009646:	2000      	movs	r0, #0
 8009648:	e7ce      	b.n	80095e8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800964a:	b2ca      	uxtb	r2, r1
 800964c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800964e:	681b      	ldr	r3, [r3, #0]
 8009650:	f003 030f 	and.w	r3, r3, #15
 8009654:	428b      	cmp	r3, r1
 8009656:	d1c6      	bne.n	80095e6 <HAL_RCC_ClockConfig+0xa>
 8009658:	e7ce      	b.n	80095f8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800965a:	4b2a      	ldr	r3, [pc, #168]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 800965c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8009660:	bf1e      	ittt	ne
 8009662:	6899      	ldrne	r1, [r3, #8]
 8009664:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8009668:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800966a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800966c:	bf42      	ittt	mi
 800966e:	6899      	ldrmi	r1, [r3, #8]
 8009670:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8009674:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8009676:	4923      	ldr	r1, [pc, #140]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 8009678:	68a0      	ldr	r0, [r4, #8]
 800967a:	688b      	ldr	r3, [r1, #8]
 800967c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009680:	4303      	orrs	r3, r0
 8009682:	608b      	str	r3, [r1, #8]
 8009684:	e7bb      	b.n	80095fe <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8009686:	6862      	ldr	r2, [r4, #4]
 8009688:	4b1e      	ldr	r3, [pc, #120]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 800968a:	2a01      	cmp	r2, #1
 800968c:	d11c      	bne.n	80096c8 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800968e:	681b      	ldr	r3, [r3, #0]
 8009690:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009694:	d0a7      	beq.n	80095e6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8009696:	4e1b      	ldr	r6, [pc, #108]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 8009698:	68b3      	ldr	r3, [r6, #8]
 800969a:	f023 0303 	bic.w	r3, r3, #3
 800969e:	4313      	orrs	r3, r2
 80096a0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80096a2:	f7fe fba7 	bl	8007df4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80096a6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80096aa:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80096ac:	68b3      	ldr	r3, [r6, #8]
 80096ae:	6862      	ldr	r2, [r4, #4]
 80096b0:	f003 030c 	and.w	r3, r3, #12
 80096b4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80096b8:	d0a3      	beq.n	8009602 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80096ba:	f7fe fb9b 	bl	8007df4 <HAL_GetTick>
 80096be:	1bc0      	subs	r0, r0, r7
 80096c0:	4540      	cmp	r0, r8
 80096c2:	d9f3      	bls.n	80096ac <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80096c4:	2003      	movs	r0, #3
 80096c6:	e78f      	b.n	80095e8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80096c8:	1e91      	subs	r1, r2, #2
 80096ca:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80096cc:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80096ce:	d802      	bhi.n	80096d6 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80096d0:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80096d4:	e7de      	b.n	8009694 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80096d6:	f013 0f02 	tst.w	r3, #2
 80096da:	e7db      	b.n	8009694 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80096dc:	b2ea      	uxtb	r2, r5
 80096de:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	f003 030f 	and.w	r3, r3, #15
 80096e6:	42ab      	cmp	r3, r5
 80096e8:	f47f af7d 	bne.w	80095e6 <HAL_RCC_ClockConfig+0xa>
 80096ec:	e78f      	b.n	800960e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80096ee:	4905      	ldr	r1, [pc, #20]	; (8009704 <HAL_RCC_ClockConfig+0x128>)
 80096f0:	68e0      	ldr	r0, [r4, #12]
 80096f2:	688b      	ldr	r3, [r1, #8]
 80096f4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80096f8:	4303      	orrs	r3, r0
 80096fa:	608b      	str	r3, [r1, #8]
 80096fc:	e78a      	b.n	8009614 <HAL_RCC_ClockConfig+0x38>
 80096fe:	bf00      	nop
 8009700:	40023c00 	.word	0x40023c00
 8009704:	40023800 	.word	0x40023800
 8009708:	0802a89c 	.word	0x0802a89c
 800970c:	20000098 	.word	0x20000098
 8009710:	200000a0 	.word	0x200000a0

08009714 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8009714:	4b04      	ldr	r3, [pc, #16]	; (8009728 <HAL_RCC_GetPCLK1Freq+0x14>)
 8009716:	4a05      	ldr	r2, [pc, #20]	; (800972c <HAL_RCC_GetPCLK1Freq+0x18>)
 8009718:	689b      	ldr	r3, [r3, #8]
 800971a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800971e:	5cd3      	ldrb	r3, [r2, r3]
 8009720:	4a03      	ldr	r2, [pc, #12]	; (8009730 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8009722:	6810      	ldr	r0, [r2, #0]
}
 8009724:	40d8      	lsrs	r0, r3
 8009726:	4770      	bx	lr
 8009728:	40023800 	.word	0x40023800
 800972c:	0802a8ac 	.word	0x0802a8ac
 8009730:	20000098 	.word	0x20000098

08009734 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8009734:	4b04      	ldr	r3, [pc, #16]	; (8009748 <HAL_RCC_GetPCLK2Freq+0x14>)
 8009736:	4a05      	ldr	r2, [pc, #20]	; (800974c <HAL_RCC_GetPCLK2Freq+0x18>)
 8009738:	689b      	ldr	r3, [r3, #8]
 800973a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800973e:	5cd3      	ldrb	r3, [r2, r3]
 8009740:	4a03      	ldr	r2, [pc, #12]	; (8009750 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8009742:	6810      	ldr	r0, [r2, #0]
}
 8009744:	40d8      	lsrs	r0, r3
 8009746:	4770      	bx	lr
 8009748:	40023800 	.word	0x40023800
 800974c:	0802a8ac 	.word	0x0802a8ac
 8009750:	20000098 	.word	0x20000098

08009754 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8009754:	230f      	movs	r3, #15
 8009756:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8009758:	4b0b      	ldr	r3, [pc, #44]	; (8009788 <HAL_RCC_GetClockConfig+0x34>)
 800975a:	689a      	ldr	r2, [r3, #8]
 800975c:	f002 0203 	and.w	r2, r2, #3
 8009760:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8009762:	689a      	ldr	r2, [r3, #8]
 8009764:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8009768:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800976a:	689a      	ldr	r2, [r3, #8]
 800976c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8009770:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8009772:	689b      	ldr	r3, [r3, #8]
 8009774:	08db      	lsrs	r3, r3, #3
 8009776:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800977a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800977c:	4b03      	ldr	r3, [pc, #12]	; (800978c <HAL_RCC_GetClockConfig+0x38>)
 800977e:	681b      	ldr	r3, [r3, #0]
 8009780:	f003 030f 	and.w	r3, r3, #15
 8009784:	600b      	str	r3, [r1, #0]
}
 8009786:	4770      	bx	lr
 8009788:	40023800 	.word	0x40023800
 800978c:	40023c00 	.word	0x40023c00

08009790 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8009790:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8009792:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8009796:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009798:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800979a:	f040 808c 	bne.w	80098b6 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800979e:	6823      	ldr	r3, [r4, #0]
 80097a0:	f013 0f0c 	tst.w	r3, #12
 80097a4:	d045      	beq.n	8009832 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80097a6:	4b8b      	ldr	r3, [pc, #556]	; (80099d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80097a8:	4d8b      	ldr	r5, [pc, #556]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 80097aa:	2200      	movs	r2, #0
 80097ac:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80097ae:	f7fe fb21 	bl	8007df4 <HAL_GetTick>
 80097b2:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80097b4:	682b      	ldr	r3, [r5, #0]
 80097b6:	009f      	lsls	r7, r3, #2
 80097b8:	f100 80cf 	bmi.w	800995a <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80097bc:	6821      	ldr	r1, [r4, #0]
 80097be:	074e      	lsls	r6, r1, #29
 80097c0:	d515      	bpl.n	80097ee <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80097c2:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80097c6:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80097ca:	061b      	lsls	r3, r3, #24
 80097cc:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80097d0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80097d4:	4313      	orrs	r3, r2
 80097d6:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80097da:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80097de:	6a22      	ldr	r2, [r4, #32]
 80097e0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80097e4:	3a01      	subs	r2, #1
 80097e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80097ea:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80097ee:	070d      	lsls	r5, r1, #28
 80097f0:	d514      	bpl.n	800981c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80097f2:	4a79      	ldr	r2, [pc, #484]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80097f4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80097f6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80097fa:	6920      	ldr	r0, [r4, #16]
 80097fc:	071b      	lsls	r3, r3, #28
 80097fe:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8009802:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8009806:	430b      	orrs	r3, r1
 8009808:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800980c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8009810:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009812:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8009816:	430b      	orrs	r3, r1
 8009818:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800981c:	4b6d      	ldr	r3, [pc, #436]	; (80099d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800981e:	4e6e      	ldr	r6, [pc, #440]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8009820:	2201      	movs	r2, #1
 8009822:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8009824:	f7fe fae6 	bl	8007df4 <HAL_GetTick>
 8009828:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800982a:	6833      	ldr	r3, [r6, #0]
 800982c:	0098      	lsls	r0, r3, #2
 800982e:	f140 809b 	bpl.w	8009968 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8009832:	6823      	ldr	r3, [r4, #0]
 8009834:	069b      	lsls	r3, r3, #26
 8009836:	d533      	bpl.n	80098a0 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8009838:	2300      	movs	r3, #0
 800983a:	9301      	str	r3, [sp, #4]
 800983c:	4b66      	ldr	r3, [pc, #408]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800983e:	4d67      	ldr	r5, [pc, #412]	; (80099dc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8009840:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009842:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8009846:	641a      	str	r2, [r3, #64]	; 0x40
 8009848:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800984a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800984e:	9301      	str	r3, [sp, #4]
 8009850:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8009852:	682b      	ldr	r3, [r5, #0]
 8009854:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009858:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800985a:	f7fe facb 	bl	8007df4 <HAL_GetTick>
 800985e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8009860:	682b      	ldr	r3, [r5, #0]
 8009862:	05d9      	lsls	r1, r3, #23
 8009864:	f140 8087 	bpl.w	8009976 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8009868:	4d5b      	ldr	r5, [pc, #364]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800986a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800986c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8009870:	f040 8088 	bne.w	8009984 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8009874:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8009876:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800987a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800987e:	4a56      	ldr	r2, [pc, #344]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8009880:	f040 80a4 	bne.w	80099cc <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8009884:	6891      	ldr	r1, [r2, #8]
 8009886:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800988a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800988e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8009892:	4301      	orrs	r1, r0
 8009894:	6091      	str	r1, [r2, #8]
 8009896:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8009898:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800989c:	430b      	orrs	r3, r1
 800989e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80098a0:	6820      	ldr	r0, [r4, #0]
 80098a2:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80098a6:	bf1f      	itttt	ne
 80098a8:	4b4d      	ldrne	r3, [pc, #308]	; (80099e0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80098aa:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80098ae:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80098b2:	2000      	movne	r0, #0
 80098b4:	e04f      	b.n	8009956 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80098b6:	4b47      	ldr	r3, [pc, #284]	; (80099d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80098b8:	4e47      	ldr	r6, [pc, #284]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80098ba:	2200      	movs	r2, #0
 80098bc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80098be:	f7fe fa99 	bl	8007df4 <HAL_GetTick>
 80098c2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80098c4:	6833      	ldr	r3, [r6, #0]
 80098c6:	011f      	lsls	r7, r3, #4
 80098c8:	d43f      	bmi.n	800994a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80098ca:	6821      	ldr	r1, [r4, #0]
 80098cc:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80098ce:	bf41      	itttt	mi
 80098d0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80098d4:	071b      	lslmi	r3, r3, #28
 80098d6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80098da:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80098de:	0788      	lsls	r0, r1, #30
 80098e0:	d515      	bpl.n	800990e <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80098e2:	4a3d      	ldr	r2, [pc, #244]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80098e4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80098e6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80098ea:	6865      	ldr	r5, [r4, #4]
 80098ec:	061b      	lsls	r3, r3, #24
 80098ee:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80098f2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80098f6:	4303      	orrs	r3, r0
 80098f8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80098fc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8009900:	69e3      	ldr	r3, [r4, #28]
 8009902:	f020 001f 	bic.w	r0, r0, #31
 8009906:	3b01      	subs	r3, #1
 8009908:	4303      	orrs	r3, r0
 800990a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800990e:	0649      	lsls	r1, r1, #25
 8009910:	d50a      	bpl.n	8009928 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8009912:	68e3      	ldr	r3, [r4, #12]
 8009914:	6862      	ldr	r2, [r4, #4]
 8009916:	061b      	lsls	r3, r3, #24
 8009918:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800991c:	68a2      	ldr	r2, [r4, #8]
 800991e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8009922:	4a2d      	ldr	r2, [pc, #180]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8009924:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8009928:	4b2a      	ldr	r3, [pc, #168]	; (80099d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800992a:	4e2b      	ldr	r6, [pc, #172]	; (80099d8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 800992c:	2201      	movs	r2, #1
 800992e:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8009930:	f7fe fa60 	bl	8007df4 <HAL_GetTick>
 8009934:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8009936:	6833      	ldr	r3, [r6, #0]
 8009938:	011a      	lsls	r2, r3, #4
 800993a:	f53f af30 	bmi.w	800979e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800993e:	f7fe fa59 	bl	8007df4 <HAL_GetTick>
 8009942:	1b40      	subs	r0, r0, r5
 8009944:	2802      	cmp	r0, #2
 8009946:	d9f6      	bls.n	8009936 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8009948:	e004      	b.n	8009954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800994a:	f7fe fa53 	bl	8007df4 <HAL_GetTick>
 800994e:	1b40      	subs	r0, r0, r5
 8009950:	2802      	cmp	r0, #2
 8009952:	d9b7      	bls.n	80098c4 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8009954:	2003      	movs	r0, #3
}
 8009956:	b003      	add	sp, #12
 8009958:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800995a:	f7fe fa4b 	bl	8007df4 <HAL_GetTick>
 800995e:	1b80      	subs	r0, r0, r6
 8009960:	2802      	cmp	r0, #2
 8009962:	f67f af27 	bls.w	80097b4 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8009966:	e7f5      	b.n	8009954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8009968:	f7fe fa44 	bl	8007df4 <HAL_GetTick>
 800996c:	1b40      	subs	r0, r0, r5
 800996e:	2802      	cmp	r0, #2
 8009970:	f67f af5b 	bls.w	800982a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8009974:	e7ee      	b.n	8009954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8009976:	f7fe fa3d 	bl	8007df4 <HAL_GetTick>
 800997a:	1b80      	subs	r0, r0, r6
 800997c:	2802      	cmp	r0, #2
 800997e:	f67f af6f 	bls.w	8009860 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8009982:	e7e7      	b.n	8009954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8009984:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009986:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800998a:	4293      	cmp	r3, r2
 800998c:	f43f af72 	beq.w	8009874 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009990:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8009992:	4a10      	ldr	r2, [pc, #64]	; (80099d4 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8009994:	2101      	movs	r1, #1
 8009996:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800999a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800999e:	2100      	movs	r1, #0
 80099a0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80099a4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80099a6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80099a8:	07da      	lsls	r2, r3, #31
 80099aa:	f57f af63 	bpl.w	8009874 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 80099ae:	f7fe fa21 	bl	8007df4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80099b2:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80099b6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80099b8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80099ba:	079b      	lsls	r3, r3, #30
 80099bc:	f53f af5a 	bmi.w	8009874 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80099c0:	f7fe fa18 	bl	8007df4 <HAL_GetTick>
 80099c4:	1b80      	subs	r0, r0, r6
 80099c6:	42b8      	cmp	r0, r7
 80099c8:	d9f6      	bls.n	80099b8 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80099ca:	e7c3      	b.n	8009954 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80099cc:	6891      	ldr	r1, [r2, #8]
 80099ce:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80099d2:	e75f      	b.n	8009894 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80099d4:	42470000 	.word	0x42470000
 80099d8:	40023800 	.word	0x40023800
 80099dc:	40007000 	.word	0x40007000
 80099e0:	42471000 	.word	0x42471000

080099e4 <HAL_RTC_WaitForSynchro>:
HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
{
  uint32_t tickstart = 0U;

  /* Clear RSF flag */
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 80099e4:	6802      	ldr	r2, [r0, #0]
{
 80099e6:	b538      	push	{r3, r4, r5, lr}
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 80099e8:	68d3      	ldr	r3, [r2, #12]
 80099ea:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80099ee:	60d3      	str	r3, [r2, #12]
{
 80099f0:	4604      	mov	r4, r0

  /* Get tick */
  tickstart = HAL_GetTick();
 80099f2:	f7fe f9ff 	bl	8007df4 <HAL_GetTick>
 80099f6:	4605      	mov	r5, r0

  /* Wait the registers to be synchronised */
  while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 80099f8:	6823      	ldr	r3, [r4, #0]
 80099fa:	68db      	ldr	r3, [r3, #12]
 80099fc:	069b      	lsls	r3, r3, #26
 80099fe:	d501      	bpl.n	8009a04 <HAL_RTC_WaitForSynchro+0x20>
    {
      return HAL_TIMEOUT;
    }
  }

  return HAL_OK;
 8009a00:	2000      	movs	r0, #0
}
 8009a02:	bd38      	pop	{r3, r4, r5, pc}
    if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 8009a04:	f7fe f9f6 	bl	8007df4 <HAL_GetTick>
 8009a08:	1b40      	subs	r0, r0, r5
 8009a0a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8009a0e:	d9f3      	bls.n	80099f8 <HAL_RTC_WaitForSynchro+0x14>
      return HAL_TIMEOUT;
 8009a10:	2003      	movs	r0, #3
 8009a12:	e7f6      	b.n	8009a02 <HAL_RTC_WaitForSynchro+0x1e>

08009a14 <RTC_EnterInitMode>:
  * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
  *                the configuration information for RTC.
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
{
 8009a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart = 0U;
  HAL_StatusTypeDef status = HAL_OK;

  /* Check that Initialization mode is not already set */
  if (READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U)
 8009a16:	6803      	ldr	r3, [r0, #0]
 8009a18:	68dc      	ldr	r4, [r3, #12]
 8009a1a:	f014 0440 	ands.w	r4, r4, #64	; 0x40
{
 8009a1e:	4605      	mov	r5, r0
  if (READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U)
 8009a20:	d117      	bne.n	8009a52 <RTC_EnterInitMode+0x3e>
  {
    /* Set INIT bit to enter Initialization mode */
    SET_BIT(hrtc->Instance->ISR, RTC_ISR_INIT);
 8009a22:	68da      	ldr	r2, [r3, #12]
 8009a24:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8009a28:	60da      	str	r2, [r3, #12]

    /* Get tick */
    tickstart = HAL_GetTick();
 8009a2a:	f7fe f9e3 	bl	8007df4 <HAL_GetTick>
    while ((READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U) && (status != HAL_ERROR))
    {
      if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
      {
        /* Set RTC state */
        hrtc->State = HAL_RTC_STATE_ERROR;
 8009a2e:	2704      	movs	r7, #4
    tickstart = HAL_GetTick();
 8009a30:	4606      	mov	r6, r0
    while ((READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U) && (status != HAL_ERROR))
 8009a32:	682b      	ldr	r3, [r5, #0]
 8009a34:	68db      	ldr	r3, [r3, #12]
 8009a36:	065b      	lsls	r3, r3, #25
 8009a38:	d400      	bmi.n	8009a3c <RTC_EnterInitMode+0x28>
 8009a3a:	b10c      	cbz	r4, 8009a40 <RTC_EnterInitMode+0x2c>
      }
    }
  }

  return status;
}
 8009a3c:	4620      	mov	r0, r4
 8009a3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 8009a40:	f7fe f9d8 	bl	8007df4 <HAL_GetTick>
 8009a44:	1b80      	subs	r0, r0, r6
 8009a46:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
        hrtc->State = HAL_RTC_STATE_ERROR;
 8009a4a:	bf84      	itt	hi
 8009a4c:	776f      	strbhi	r7, [r5, #29]
        status = HAL_ERROR;
 8009a4e:	2401      	movhi	r4, #1
 8009a50:	e7ef      	b.n	8009a32 <RTC_EnterInitMode+0x1e>
  HAL_StatusTypeDef status = HAL_OK;
 8009a52:	2400      	movs	r4, #0
 8009a54:	e7f2      	b.n	8009a3c <RTC_EnterInitMode+0x28>

08009a56 <RTC_ExitInitMode>:
HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
{
  HAL_StatusTypeDef status = HAL_OK;

  /* Clear INIT bit to exit Initialization mode */
  CLEAR_BIT(hrtc->Instance->ISR, RTC_ISR_INIT);
 8009a56:	6803      	ldr	r3, [r0, #0]
 8009a58:	68da      	ldr	r2, [r3, #12]
 8009a5a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
{
 8009a5e:	b510      	push	{r4, lr}
  CLEAR_BIT(hrtc->Instance->ISR, RTC_ISR_INIT);
 8009a60:	60da      	str	r2, [r3, #12]

  /* If CR_BYPSHAD bit = 0, wait for synchro */
  if (READ_BIT(hrtc->Instance->CR, RTC_CR_BYPSHAD) == 0U)
 8009a62:	689b      	ldr	r3, [r3, #8]
 8009a64:	069b      	lsls	r3, r3, #26
{
 8009a66:	4604      	mov	r4, r0
  if (READ_BIT(hrtc->Instance->CR, RTC_CR_BYPSHAD) == 0U)
 8009a68:	d501      	bpl.n	8009a6e <RTC_ExitInitMode+0x18>
  HAL_StatusTypeDef status = HAL_OK;
 8009a6a:	2000      	movs	r0, #0
      status = HAL_ERROR;
    }
  }

  return status;
}
 8009a6c:	bd10      	pop	{r4, pc}
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 8009a6e:	f7ff ffb9 	bl	80099e4 <HAL_RTC_WaitForSynchro>
 8009a72:	2800      	cmp	r0, #0
 8009a74:	d0f9      	beq.n	8009a6a <RTC_ExitInitMode+0x14>
      hrtc->State = HAL_RTC_STATE_ERROR;
 8009a76:	2304      	movs	r3, #4
 8009a78:	7763      	strb	r3, [r4, #29]
      status = HAL_ERROR;
 8009a7a:	2001      	movs	r0, #1
 8009a7c:	e7f6      	b.n	8009a6c <RTC_ExitInitMode+0x16>

08009a7e <HAL_RTC_Init>:
{
 8009a7e:	b510      	push	{r4, lr}
  if (hrtc == NULL)
 8009a80:	4604      	mov	r4, r0
 8009a82:	2800      	cmp	r0, #0
 8009a84:	d03a      	beq.n	8009afc <HAL_RTC_Init+0x7e>
  if (hrtc->State == HAL_RTC_STATE_RESET)
 8009a86:	7f43      	ldrb	r3, [r0, #29]
 8009a88:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a8c:	b913      	cbnz	r3, 8009a94 <HAL_RTC_Init+0x16>
    hrtc->Lock = HAL_UNLOCKED;
 8009a8e:	7702      	strb	r2, [r0, #28]
    HAL_RTC_MspInit(hrtc);
 8009a90:	f7f7 fdb0 	bl	80015f4 <HAL_RTC_MspInit>
  hrtc->State = HAL_RTC_STATE_BUSY;
 8009a94:	2302      	movs	r3, #2
 8009a96:	7763      	strb	r3, [r4, #29]
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8009a98:	6823      	ldr	r3, [r4, #0]
 8009a9a:	22ca      	movs	r2, #202	; 0xca
 8009a9c:	625a      	str	r2, [r3, #36]	; 0x24
 8009a9e:	2253      	movs	r2, #83	; 0x53
 8009aa0:	625a      	str	r2, [r3, #36]	; 0x24
  status = RTC_EnterInitMode(hrtc);
 8009aa2:	4620      	mov	r0, r4
 8009aa4:	f7ff ffb6 	bl	8009a14 <RTC_EnterInitMode>
  if (status == HAL_OK)
 8009aa8:	bb20      	cbnz	r0, 8009af4 <HAL_RTC_Init+0x76>
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8009aaa:	6823      	ldr	r3, [r4, #0]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8009aac:	6920      	ldr	r0, [r4, #16]
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 8009aae:	689a      	ldr	r2, [r3, #8]
 8009ab0:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 8009ab4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009ab8:	609a      	str	r2, [r3, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 8009aba:	6862      	ldr	r2, [r4, #4]
 8009abc:	6899      	ldr	r1, [r3, #8]
 8009abe:	4302      	orrs	r2, r0
 8009ac0:	6960      	ldr	r0, [r4, #20]
 8009ac2:	4302      	orrs	r2, r0
 8009ac4:	430a      	orrs	r2, r1
 8009ac6:	609a      	str	r2, [r3, #8]
    hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 8009ac8:	68e2      	ldr	r2, [r4, #12]
 8009aca:	611a      	str	r2, [r3, #16]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 8009acc:	691a      	ldr	r2, [r3, #16]
 8009ace:	68a1      	ldr	r1, [r4, #8]
 8009ad0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009ad4:	611a      	str	r2, [r3, #16]
    status = RTC_ExitInitMode(hrtc);
 8009ad6:	4620      	mov	r0, r4
 8009ad8:	f7ff ffbd 	bl	8009a56 <RTC_ExitInitMode>
  if (status == HAL_OK)
 8009adc:	b950      	cbnz	r0, 8009af4 <HAL_RTC_Init+0x76>
    hrtc->Instance->TAFCR &= (uint32_t)~RTC_OUTPUT_TYPE_PUSHPULL;
 8009ade:	6823      	ldr	r3, [r4, #0]
    hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType);
 8009ae0:	69a1      	ldr	r1, [r4, #24]
    hrtc->Instance->TAFCR &= (uint32_t)~RTC_OUTPUT_TYPE_PUSHPULL;
 8009ae2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009ae4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8009ae8:	641a      	str	r2, [r3, #64]	; 0x40
    hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType);
 8009aea:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009aec:	430a      	orrs	r2, r1
 8009aee:	641a      	str	r2, [r3, #64]	; 0x40
    hrtc->State = HAL_RTC_STATE_READY;
 8009af0:	2301      	movs	r3, #1
 8009af2:	7763      	strb	r3, [r4, #29]
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8009af4:	6823      	ldr	r3, [r4, #0]
 8009af6:	22ff      	movs	r2, #255	; 0xff
 8009af8:	625a      	str	r2, [r3, #36]	; 0x24
}
 8009afa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009afc:	2001      	movs	r0, #1
 8009afe:	e7fc      	b.n	8009afa <HAL_RTC_Init+0x7c>

08009b00 <RTC_ByteToBcd2>:
  */
uint8_t RTC_ByteToBcd2(uint8_t number)
{
  uint8_t bcdhigh = 0U;

  while (number >= 10U)
 8009b00:	2300      	movs	r3, #0
 8009b02:	2809      	cmp	r0, #9
 8009b04:	b2da      	uxtb	r2, r3
 8009b06:	f103 0301 	add.w	r3, r3, #1
 8009b0a:	d803      	bhi.n	8009b14 <RTC_ByteToBcd2+0x14>
  {
    bcdhigh++;
    number -= 10U;
  }

  return ((uint8_t)(bcdhigh << 4U) | number);
 8009b0c:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
}
 8009b10:	b2c0      	uxtb	r0, r0
 8009b12:	4770      	bx	lr
    number -= 10U;
 8009b14:	380a      	subs	r0, #10
 8009b16:	b2c0      	uxtb	r0, r0
 8009b18:	e7f3      	b.n	8009b02 <RTC_ByteToBcd2+0x2>

08009b1a <HAL_RTC_SetTime>:
{
 8009b1a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(hrtc);
 8009b1e:	7f03      	ldrb	r3, [r0, #28]
 8009b20:	2b01      	cmp	r3, #1
{
 8009b22:	4606      	mov	r6, r0
 8009b24:	460f      	mov	r7, r1
 8009b26:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hrtc);
 8009b2a:	d042      	beq.n	8009bb2 <HAL_RTC_SetTime+0x98>
 8009b2c:	2301      	movs	r3, #1
 8009b2e:	7733      	strb	r3, [r6, #28]
  hrtc->State = HAL_RTC_STATE_BUSY;
 8009b30:	7770      	strb	r0, [r6, #29]
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 8009b32:	6831      	ldr	r1, [r6, #0]
 8009b34:	7838      	ldrb	r0, [r7, #0]
 8009b36:	787d      	ldrb	r5, [r7, #1]
 8009b38:	f897 8002 	ldrb.w	r8, [r7, #2]
  if (Format == RTC_FORMAT_BIN)
 8009b3c:	2a00      	cmp	r2, #0
 8009b3e:	d13a      	bne.n	8009bb6 <HAL_RTC_SetTime+0x9c>
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 8009b40:	688a      	ldr	r2, [r1, #8]
 8009b42:	f012 0240 	ands.w	r2, r2, #64	; 0x40
      sTime->TimeFormat = 0x00U;
 8009b46:	bf08      	it	eq
 8009b48:	70fa      	strbeq	r2, [r7, #3]
    tmpreg = (uint32_t)(( (uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 8009b4a:	f7ff ffd9 	bl	8009b00 <RTC_ByteToBcd2>
 8009b4e:	4681      	mov	r9, r0
                        ( (uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 8009b50:	4628      	mov	r0, r5
 8009b52:	f7ff ffd5 	bl	8009b00 <RTC_ByteToBcd2>
 8009b56:	4604      	mov	r4, r0
                        ( (uint32_t)RTC_ByteToBcd2(sTime->Seconds))                   | \
 8009b58:	4640      	mov	r0, r8
 8009b5a:	f7ff ffd1 	bl	8009b00 <RTC_ByteToBcd2>
                        (((uint32_t)sTime->TimeFormat)             << RTC_TR_PM_Pos));
 8009b5e:	78fa      	ldrb	r2, [r7, #3]
    tmpreg = (uint32_t)(( (uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 8009b60:	ea40 5582 	orr.w	r5, r0, r2, lsl #22
 8009b64:	ea45 4209 	orr.w	r2, r5, r9, lsl #16
 8009b68:	ea42 2404 	orr.w	r4, r2, r4, lsl #8
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8009b6c:	23ca      	movs	r3, #202	; 0xca
 8009b6e:	624b      	str	r3, [r1, #36]	; 0x24
 8009b70:	2353      	movs	r3, #83	; 0x53
 8009b72:	624b      	str	r3, [r1, #36]	; 0x24
  status = RTC_EnterInitMode(hrtc);
 8009b74:	4630      	mov	r0, r6
 8009b76:	f7ff ff4d 	bl	8009a14 <RTC_EnterInitMode>
  if (status == HAL_OK)
 8009b7a:	b9a8      	cbnz	r0, 8009ba8 <HAL_RTC_SetTime+0x8e>
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8009b7c:	6832      	ldr	r2, [r6, #0]
 8009b7e:	f004 347f 	and.w	r4, r4, #2139062143	; 0x7f7f7f7f
 8009b82:	f024 44fe 	bic.w	r4, r4, #2130706432	; 0x7f000000
 8009b86:	6014      	str	r4, [r2, #0]
    hrtc->Instance->CR &= (uint32_t)~RTC_CR_BKP;
 8009b88:	6893      	ldr	r3, [r2, #8]
 8009b8a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009b8e:	6093      	str	r3, [r2, #8]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8009b90:	e9d7 3003 	ldrd	r3, r0, [r7, #12]
 8009b94:	6891      	ldr	r1, [r2, #8]
 8009b96:	4303      	orrs	r3, r0
 8009b98:	430b      	orrs	r3, r1
 8009b9a:	6093      	str	r3, [r2, #8]
    status = RTC_ExitInitMode(hrtc);
 8009b9c:	4630      	mov	r0, r6
 8009b9e:	f7ff ff5a 	bl	8009a56 <RTC_ExitInitMode>
  if (status == HAL_OK)
 8009ba2:	b908      	cbnz	r0, 8009ba8 <HAL_RTC_SetTime+0x8e>
    hrtc->State = HAL_RTC_STATE_READY;
 8009ba4:	2301      	movs	r3, #1
 8009ba6:	7773      	strb	r3, [r6, #29]
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8009ba8:	6833      	ldr	r3, [r6, #0]
 8009baa:	22ff      	movs	r2, #255	; 0xff
 8009bac:	625a      	str	r2, [r3, #36]	; 0x24
  __HAL_UNLOCK(hrtc);
 8009bae:	2300      	movs	r3, #0
 8009bb0:	7733      	strb	r3, [r6, #28]
}
 8009bb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 8009bb6:	688a      	ldr	r2, [r1, #8]
 8009bb8:	f012 0240 	ands.w	r2, r2, #64	; 0x40
      sTime->TimeFormat = 0x00U;
 8009bbc:	bf08      	it	eq
 8009bbe:	70fa      	strbeq	r2, [r7, #3]
              ((uint32_t)(sTime->Minutes)    << RTC_TR_MNU_Pos) | \
 8009bc0:	022d      	lsls	r5, r5, #8
              ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 8009bc2:	78fc      	ldrb	r4, [r7, #3]
    tmpreg = (((uint32_t)(sTime->Hours)      << RTC_TR_HU_Pos)  | \
 8009bc4:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
              ((uint32_t)(sTime->Minutes)    << RTC_TR_MNU_Pos) | \
 8009bc8:	ea45 0308 	orr.w	r3, r5, r8
    tmpreg = (((uint32_t)(sTime->Hours)      << RTC_TR_HU_Pos)  | \
 8009bcc:	ea43 5484 	orr.w	r4, r3, r4, lsl #22
 8009bd0:	e7cc      	b.n	8009b6c <HAL_RTC_SetTime+0x52>

08009bd2 <RTC_Bcd2ToByte>:
  * @retval Converted word
  */
uint8_t RTC_Bcd2ToByte(uint8_t number)
{
  uint8_t tmp = 0U;
  tmp = ((uint8_t)(number & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 8009bd2:	0903      	lsrs	r3, r0, #4
 8009bd4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  return (tmp + (number & (uint8_t)0x0F));
 8009bd8:	f000 000f 	and.w	r0, r0, #15
 8009bdc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
}
 8009be0:	b2c0      	uxtb	r0, r0
 8009be2:	4770      	bx	lr

08009be4 <HAL_RTC_GetTime>:
{
 8009be4:	b538      	push	{r3, r4, r5, lr}
  sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 8009be6:	6803      	ldr	r3, [r0, #0]
 8009be8:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8009bea:	6048      	str	r0, [r1, #4]
  sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 8009bec:	6918      	ldr	r0, [r3, #16]
  tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
 8009bee:	681b      	ldr	r3, [r3, #0]
  sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 8009bf0:	f3c0 000e 	ubfx	r0, r0, #0, #15
  sTime->Minutes    = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 8009bf4:	f3c3 2506 	ubfx	r5, r3, #8, #7
  sTime->Seconds    = (uint8_t)( tmpreg & (RTC_TR_ST  | RTC_TR_SU));
 8009bf8:	f003 047f 	and.w	r4, r3, #127	; 0x7f
  sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 8009bfc:	6088      	str	r0, [r1, #8]
  sTime->Hours      = (uint8_t)((tmpreg & (RTC_TR_HT  | RTC_TR_HU))  >> RTC_TR_HU_Pos);
 8009bfe:	f3c3 4005 	ubfx	r0, r3, #16, #6
  sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM))               >> RTC_TR_PM_Pos);
 8009c02:	f3c3 5380 	ubfx	r3, r3, #22, #1
  sTime->Hours      = (uint8_t)((tmpreg & (RTC_TR_HT  | RTC_TR_HU))  >> RTC_TR_HU_Pos);
 8009c06:	7008      	strb	r0, [r1, #0]
  sTime->Minutes    = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 8009c08:	704d      	strb	r5, [r1, #1]
  sTime->Seconds    = (uint8_t)( tmpreg & (RTC_TR_ST  | RTC_TR_SU));
 8009c0a:	708c      	strb	r4, [r1, #2]
  sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM))               >> RTC_TR_PM_Pos);
 8009c0c:	70cb      	strb	r3, [r1, #3]
  if (Format == RTC_FORMAT_BIN)
 8009c0e:	b952      	cbnz	r2, 8009c26 <HAL_RTC_GetTime+0x42>
    sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 8009c10:	f7ff ffdf 	bl	8009bd2 <RTC_Bcd2ToByte>
 8009c14:	7008      	strb	r0, [r1, #0]
    sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 8009c16:	4628      	mov	r0, r5
 8009c18:	f7ff ffdb 	bl	8009bd2 <RTC_Bcd2ToByte>
 8009c1c:	7048      	strb	r0, [r1, #1]
    sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 8009c1e:	4620      	mov	r0, r4
 8009c20:	f7ff ffd7 	bl	8009bd2 <RTC_Bcd2ToByte>
 8009c24:	7088      	strb	r0, [r1, #2]
}
 8009c26:	2000      	movs	r0, #0
 8009c28:	bd38      	pop	{r3, r4, r5, pc}

08009c2a <HAL_RTCEx_EnableBypassShadow>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef *hrtc)
{
  /* Process Locked */
  __HAL_LOCK(hrtc);
 8009c2a:	7f03      	ldrb	r3, [r0, #28]
 8009c2c:	2b01      	cmp	r3, #1
 8009c2e:	f04f 0302 	mov.w	r3, #2
 8009c32:	d00f      	beq.n	8009c54 <HAL_RTCEx_EnableBypassShadow+0x2a>

  hrtc->State = HAL_RTC_STATE_BUSY;
 8009c34:	7743      	strb	r3, [r0, #29]

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 8009c36:	6803      	ldr	r3, [r0, #0]
 8009c38:	22ca      	movs	r2, #202	; 0xca
 8009c3a:	625a      	str	r2, [r3, #36]	; 0x24
 8009c3c:	2253      	movs	r2, #83	; 0x53
 8009c3e:	625a      	str	r2, [r3, #36]	; 0x24

  /* Set the BYPSHAD bit */
  hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 8009c40:	689a      	ldr	r2, [r3, #8]
 8009c42:	f042 0220 	orr.w	r2, r2, #32
 8009c46:	609a      	str	r2, [r3, #8]

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8009c48:	22ff      	movs	r2, #255	; 0xff
 8009c4a:	625a      	str	r2, [r3, #36]	; 0x24

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_READY;
 8009c4c:	2301      	movs	r3, #1
 8009c4e:	7743      	strb	r3, [r0, #29]

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 8009c50:	2300      	movs	r3, #0
 8009c52:	7703      	strb	r3, [r0, #28]
  __HAL_LOCK(hrtc);
 8009c54:	4618      	mov	r0, r3

  return HAL_OK;
}
 8009c56:	4770      	bx	lr

08009c58 <SD_DMATransmitCplt>:
static void SD_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
  SD_HandleTypeDef* hsd = (SD_HandleTypeDef* )(hdma->Parent);

  /* Enable DATAEND Interrupt */
  __HAL_SD_ENABLE_IT(hsd, (SDIO_IT_DATAEND));
 8009c58:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009c5a:	681a      	ldr	r2, [r3, #0]
 8009c5c:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8009c5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009c62:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 8009c64:	4770      	bx	lr
	...

08009c68 <HAL_SD_ReadBlocks_DMA>:
{
 8009c68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c6c:	4604      	mov	r4, r0
 8009c6e:	b086      	sub	sp, #24
 8009c70:	4615      	mov	r5, r2
 8009c72:	461f      	mov	r7, r3
  if(NULL == pData)
 8009c74:	b941      	cbnz	r1, 8009c88 <HAL_SD_ReadBlocks_DMA+0x20>
    hsd->ErrorCode |= HAL_SD_ERROR_PARAM;
 8009c76:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009c78:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8009c7c:	6383      	str	r3, [r0, #56]	; 0x38
    return HAL_ERROR;
 8009c7e:	2601      	movs	r6, #1
}
 8009c80:	4630      	mov	r0, r6
 8009c82:	b006      	add	sp, #24
 8009c84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(hsd->State == HAL_SD_STATE_READY)
 8009c88:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8009c8c:	2b01      	cmp	r3, #1
 8009c8e:	b2de      	uxtb	r6, r3
 8009c90:	d174      	bne.n	8009d7c <HAL_SD_ReadBlocks_DMA+0x114>
    hsd->ErrorCode = HAL_SD_ERROR_NONE;
 8009c92:	2200      	movs	r2, #0
 8009c94:	6382      	str	r2, [r0, #56]	; 0x38
    if((add + NumberOfBlocks) > (hsd->SdCard.LogBlockNbr))
 8009c96:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8009c98:	19eb      	adds	r3, r5, r7
 8009c9a:	4283      	cmp	r3, r0
 8009c9c:	d904      	bls.n	8009ca8 <HAL_SD_ReadBlocks_DMA+0x40>
      hsd->ErrorCode |= HAL_SD_ERROR_ADDR_OUT_OF_RANGE;
 8009c9e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009ca0:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8009ca4:	63a3      	str	r3, [r4, #56]	; 0x38
      return HAL_ERROR;
 8009ca6:	e7eb      	b.n	8009c80 <HAL_SD_ReadBlocks_DMA+0x18>
    hsd->Instance->DCTRL = 0U;
 8009ca8:	f8d4 c000 	ldr.w	ip, [r4]
    hsd->hdmarx->XferCpltCallback = SD_DMAReceiveCplt;
 8009cac:	6c20      	ldr	r0, [r4, #64]	; 0x40
    hsd->State = HAL_SD_STATE_BUSY;
 8009cae:	2303      	movs	r3, #3
 8009cb0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hsd->Instance->DCTRL = 0U;
 8009cb4:	f8cc 202c 	str.w	r2, [ip, #44]	; 0x2c
    __HAL_SD_ENABLE_IT(hsd, (SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_RXOVERR | SDIO_IT_DATAEND | SDIO_IT_STBITERR));
 8009cb8:	f8dc 303c 	ldr.w	r3, [ip, #60]	; 0x3c
 8009cbc:	f443 734a 	orr.w	r3, r3, #808	; 0x328
 8009cc0:	f043 0302 	orr.w	r3, r3, #2
 8009cc4:	f8cc 303c 	str.w	r3, [ip, #60]	; 0x3c
    hsd->hdmarx->XferCpltCallback = SD_DMAReceiveCplt;
 8009cc8:	4b2e      	ldr	r3, [pc, #184]	; (8009d84 <HAL_SD_ReadBlocks_DMA+0x11c>)
 8009cca:	63c3      	str	r3, [r0, #60]	; 0x3c
    hsd->hdmarx->XferErrorCallback = SD_DMAError;
 8009ccc:	4b2e      	ldr	r3, [pc, #184]	; (8009d88 <HAL_SD_ReadBlocks_DMA+0x120>)
    hsd->hdmarx->Init.Direction = DMA_PERIPH_TO_MEMORY;
 8009cce:	6082      	str	r2, [r0, #8]
    hsd->hdmarx->XferAbortCallback = NULL;
 8009cd0:	e9c0 3213 	strd	r3, r2, [r0, #76]	; 0x4c
    MODIFY_REG(hsd->hdmarx->Instance->CR, DMA_SxCR_DIR, hsd->hdmarx->Init.Direction);
 8009cd4:	6802      	ldr	r2, [r0, #0]
 8009cd6:	6813      	ldr	r3, [r2, #0]
    if(HAL_DMA_Start_IT(hsd->hdmarx, (uint32_t)&hsd->Instance->FIFO, (uint32_t)pData, (uint32_t)(BLOCKSIZE * NumberOfBlocks)/4U) != HAL_OK)
 8009cd8:	ea4f 2847 	mov.w	r8, r7, lsl #9
    MODIFY_REG(hsd->hdmarx->Instance->CR, DMA_SxCR_DIR, hsd->hdmarx->Init.Direction);
 8009cdc:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8009ce0:	6013      	str	r3, [r2, #0]
    if(HAL_DMA_Start_IT(hsd->hdmarx, (uint32_t)&hsd->Instance->FIFO, (uint32_t)pData, (uint32_t)(BLOCKSIZE * NumberOfBlocks)/4U) != HAL_OK)
 8009ce2:	460a      	mov	r2, r1
 8009ce4:	ea4f 0398 	mov.w	r3, r8, lsr #2
 8009ce8:	f10c 0180 	add.w	r1, ip, #128	; 0x80
 8009cec:	f7fe f994 	bl	8008018 <HAL_DMA_Start_IT>
 8009cf0:	b168      	cbz	r0, 8009d0e <HAL_SD_ReadBlocks_DMA+0xa6>
      __HAL_SD_DISABLE_IT(hsd, (SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_RXOVERR | SDIO_IT_DATAEND));
 8009cf2:	6823      	ldr	r3, [r4, #0]
 8009cf4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009cf6:	f422 7295 	bic.w	r2, r2, #298	; 0x12a
 8009cfa:	63da      	str	r2, [r3, #60]	; 0x3c
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8009cfc:	4a23      	ldr	r2, [pc, #140]	; (8009d8c <HAL_SD_ReadBlocks_DMA+0x124>)
 8009cfe:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_DMA;
 8009d00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009d02:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8009d06:	63a3      	str	r3, [r4, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8009d08:	f884 6034 	strb.w	r6, [r4, #52]	; 0x34
      return HAL_ERROR;
 8009d0c:	e7b8      	b.n	8009c80 <HAL_SD_ReadBlocks_DMA+0x18>
      __HAL_SD_DMA_ENABLE(hsd);
 8009d0e:	4b20      	ldr	r3, [pc, #128]	; (8009d90 <HAL_SD_ReadBlocks_DMA+0x128>)
      (void)SDIO_ConfigData(hsd->Instance, &config);
 8009d10:	6820      	ldr	r0, [r4, #0]
      __HAL_SD_DMA_ENABLE(hsd);
 8009d12:	f8c3 658c 	str.w	r6, [r3, #1420]	; 0x58c
      if(hsd->SdCard.CardType != CARD_SDHC_SDXC)
 8009d16:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009d18:	2b01      	cmp	r3, #1
      config.DataTimeOut   = SDMMC_DATATIMEOUT;
 8009d1a:	f04f 33ff 	mov.w	r3, #4294967295
      config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 8009d1e:	e9cd 3800 	strd	r3, r8, [sp]
      config.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 8009d22:	f04f 0290 	mov.w	r2, #144	; 0x90
 8009d26:	f04f 0302 	mov.w	r3, #2
 8009d2a:	e9cd 2302 	strd	r2, r3, [sp, #8]
      config.DPSM          = SDIO_DPSM_ENABLE;
 8009d2e:	f04f 0100 	mov.w	r1, #0
 8009d32:	f04f 0301 	mov.w	r3, #1
 8009d36:	e9cd 1304 	strd	r1, r3, [sp, #16]
      (void)SDIO_ConfigData(hsd->Instance, &config);
 8009d3a:	4669      	mov	r1, sp
        add *= 512U;
 8009d3c:	bf18      	it	ne
 8009d3e:	026d      	lslne	r5, r5, #9
      (void)SDIO_ConfigData(hsd->Instance, &config);
 8009d40:	f001 fabb 	bl	800b2ba <SDIO_ConfigData>
      if(NumberOfBlocks > 1U)
 8009d44:	2f01      	cmp	r7, #1
 8009d46:	d912      	bls.n	8009d6e <HAL_SD_ReadBlocks_DMA+0x106>
        hsd->Context = (SD_CONTEXT_READ_MULTIPLE_BLOCK | SD_CONTEXT_DMA);
 8009d48:	2382      	movs	r3, #130	; 0x82
        errorstate = SDMMC_CmdReadMultiBlock(hsd->Instance, add);
 8009d4a:	6820      	ldr	r0, [r4, #0]
        hsd->Context = (SD_CONTEXT_READ_MULTIPLE_BLOCK | SD_CONTEXT_DMA);
 8009d4c:	6323      	str	r3, [r4, #48]	; 0x30
        errorstate = SDMMC_CmdReadMultiBlock(hsd->Instance, add);
 8009d4e:	4629      	mov	r1, r5
 8009d50:	f001 fbac 	bl	800b4ac <SDMMC_CmdReadMultiBlock>
      if(errorstate != HAL_SD_ERROR_NONE)
 8009d54:	b1a0      	cbz	r0, 8009d80 <HAL_SD_ReadBlocks_DMA+0x118>
        __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8009d56:	6823      	ldr	r3, [r4, #0]
 8009d58:	4a0c      	ldr	r2, [pc, #48]	; (8009d8c <HAL_SD_ReadBlocks_DMA+0x124>)
 8009d5a:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->ErrorCode |= errorstate;
 8009d5c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009d5e:	4318      	orrs	r0, r3
        hsd->State = HAL_SD_STATE_READY;
 8009d60:	2301      	movs	r3, #1
        hsd->ErrorCode |= errorstate;
 8009d62:	63a0      	str	r0, [r4, #56]	; 0x38
        hsd->State = HAL_SD_STATE_READY;
 8009d64:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hsd->Context = SD_CONTEXT_NONE;
 8009d68:	2300      	movs	r3, #0
 8009d6a:	6323      	str	r3, [r4, #48]	; 0x30
        return HAL_ERROR;
 8009d6c:	e788      	b.n	8009c80 <HAL_SD_ReadBlocks_DMA+0x18>
        hsd->Context = (SD_CONTEXT_READ_SINGLE_BLOCK | SD_CONTEXT_DMA);
 8009d6e:	2381      	movs	r3, #129	; 0x81
        errorstate = SDMMC_CmdReadSingleBlock(hsd->Instance, add);
 8009d70:	6820      	ldr	r0, [r4, #0]
        hsd->Context = (SD_CONTEXT_READ_SINGLE_BLOCK | SD_CONTEXT_DMA);
 8009d72:	6323      	str	r3, [r4, #48]	; 0x30
        errorstate = SDMMC_CmdReadSingleBlock(hsd->Instance, add);
 8009d74:	4629      	mov	r1, r5
 8009d76:	f001 fb81 	bl	800b47c <SDMMC_CmdReadSingleBlock>
 8009d7a:	e7eb      	b.n	8009d54 <HAL_SD_ReadBlocks_DMA+0xec>
    return HAL_BUSY;
 8009d7c:	2602      	movs	r6, #2
 8009d7e:	e77f      	b.n	8009c80 <HAL_SD_ReadBlocks_DMA+0x18>
      return HAL_OK;
 8009d80:	4606      	mov	r6, r0
 8009d82:	e77d      	b.n	8009c80 <HAL_SD_ReadBlocks_DMA+0x18>
 8009d84:	08009eb7 	.word	0x08009eb7
 8009d88:	0800a2ed 	.word	0x0800a2ed
 8009d8c:	004005ff 	.word	0x004005ff
 8009d90:	42258000 	.word	0x42258000

08009d94 <HAL_SD_WriteBlocks_DMA>:
{
 8009d94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d98:	4604      	mov	r4, r0
 8009d9a:	b087      	sub	sp, #28
 8009d9c:	461e      	mov	r6, r3
  if(NULL == pData)
 8009d9e:	4689      	mov	r9, r1
 8009da0:	b941      	cbnz	r1, 8009db4 <HAL_SD_WriteBlocks_DMA+0x20>
    hsd->ErrorCode |= HAL_SD_ERROR_PARAM;
 8009da2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009da4:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8009da8:	6383      	str	r3, [r0, #56]	; 0x38
    return HAL_ERROR;
 8009daa:	2701      	movs	r7, #1
}
 8009dac:	4638      	mov	r0, r7
 8009dae:	b007      	add	sp, #28
 8009db0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if(hsd->State == HAL_SD_STATE_READY)
 8009db4:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8009db8:	2b01      	cmp	r3, #1
 8009dba:	b2df      	uxtb	r7, r3
 8009dbc:	d170      	bne.n	8009ea0 <HAL_SD_WriteBlocks_DMA+0x10c>
    hsd->ErrorCode = HAL_SD_ERROR_NONE;
 8009dbe:	2100      	movs	r1, #0
 8009dc0:	6381      	str	r1, [r0, #56]	; 0x38
    if((add + NumberOfBlocks) > (hsd->SdCard.LogBlockNbr))
 8009dc2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8009dc4:	1993      	adds	r3, r2, r6
 8009dc6:	4283      	cmp	r3, r0
 8009dc8:	d904      	bls.n	8009dd4 <HAL_SD_WriteBlocks_DMA+0x40>
      hsd->ErrorCode |= HAL_SD_ERROR_ADDR_OUT_OF_RANGE;
 8009dca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009dcc:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8009dd0:	63a3      	str	r3, [r4, #56]	; 0x38
      return HAL_ERROR;
 8009dd2:	e7eb      	b.n	8009dac <HAL_SD_WriteBlocks_DMA+0x18>
    hsd->Instance->DCTRL = 0U;
 8009dd4:	6820      	ldr	r0, [r4, #0]
    hsd->hdmatx->XferCpltCallback = SD_DMATransmitCplt;
 8009dd6:	4d33      	ldr	r5, [pc, #204]	; (8009ea4 <HAL_SD_WriteBlocks_DMA+0x110>)
    hsd->State = HAL_SD_STATE_BUSY;
 8009dd8:	2303      	movs	r3, #3
 8009dda:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hsd->Instance->DCTRL = 0U;
 8009dde:	62c1      	str	r1, [r0, #44]	; 0x2c
    __HAL_SD_ENABLE_IT(hsd, (SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_TXUNDERR | SDIO_IT_STBITERR));
 8009de0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8009de2:	f443 7306 	orr.w	r3, r3, #536	; 0x218
 8009de6:	f043 0302 	orr.w	r3, r3, #2
 8009dea:	63c3      	str	r3, [r0, #60]	; 0x3c
    hsd->hdmatx->XferCpltCallback = SD_DMATransmitCplt;
 8009dec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009dee:	63dd      	str	r5, [r3, #60]	; 0x3c
    hsd->hdmatx->XferErrorCallback = SD_DMAError;
 8009df0:	4d2d      	ldr	r5, [pc, #180]	; (8009ea8 <HAL_SD_WriteBlocks_DMA+0x114>)
    hsd->hdmatx->XferAbortCallback = NULL;
 8009df2:	e9c3 5113 	strd	r5, r1, [r3, #76]	; 0x4c
    if(hsd->SdCard.CardType != CARD_SDHC_SDXC)
 8009df6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009df8:	2b01      	cmp	r3, #1
      add *= 512U;
 8009dfa:	bf18      	it	ne
 8009dfc:	0252      	lslne	r2, r2, #9
    if(NumberOfBlocks > 1U)
 8009dfe:	2e01      	cmp	r6, #1
 8009e00:	d912      	bls.n	8009e28 <HAL_SD_WriteBlocks_DMA+0x94>
      hsd->Context = (SD_CONTEXT_WRITE_MULTIPLE_BLOCK | SD_CONTEXT_DMA);
 8009e02:	23a0      	movs	r3, #160	; 0xa0
 8009e04:	6323      	str	r3, [r4, #48]	; 0x30
      errorstate = SDMMC_CmdWriteMultiBlock(hsd->Instance, add);
 8009e06:	4611      	mov	r1, r2
 8009e08:	f001 fb80 	bl	800b50c <SDMMC_CmdWriteMultiBlock>
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8009e0c:	6822      	ldr	r2, [r4, #0]
      errorstate = SDMMC_CmdWriteSingleBlock(hsd->Instance, add);
 8009e0e:	4605      	mov	r5, r0
    if(errorstate != HAL_SD_ERROR_NONE)
 8009e10:	b180      	cbz	r0, 8009e34 <HAL_SD_WriteBlocks_DMA+0xa0>
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8009e12:	4b26      	ldr	r3, [pc, #152]	; (8009eac <HAL_SD_WriteBlocks_DMA+0x118>)
 8009e14:	6393      	str	r3, [r2, #56]	; 0x38
      hsd->ErrorCode |= errorstate;
 8009e16:	6ba0      	ldr	r0, [r4, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8009e18:	2301      	movs	r3, #1
      hsd->ErrorCode |= errorstate;
 8009e1a:	4305      	orrs	r5, r0
 8009e1c:	63a5      	str	r5, [r4, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8009e1e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8009e22:	2300      	movs	r3, #0
 8009e24:	6323      	str	r3, [r4, #48]	; 0x30
      return HAL_ERROR;
 8009e26:	e7c1      	b.n	8009dac <HAL_SD_WriteBlocks_DMA+0x18>
      hsd->Context = (SD_CONTEXT_WRITE_SINGLE_BLOCK | SD_CONTEXT_DMA);
 8009e28:	2390      	movs	r3, #144	; 0x90
 8009e2a:	6323      	str	r3, [r4, #48]	; 0x30
      errorstate = SDMMC_CmdWriteSingleBlock(hsd->Instance, add);
 8009e2c:	4611      	mov	r1, r2
 8009e2e:	f001 fb55 	bl	800b4dc <SDMMC_CmdWriteSingleBlock>
 8009e32:	e7eb      	b.n	8009e0c <HAL_SD_WriteBlocks_DMA+0x78>
    hsd->hdmatx->Init.Direction = DMA_MEMORY_TO_PERIPH;
 8009e34:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    __HAL_SD_DMA_ENABLE(hsd);
 8009e36:	4b1e      	ldr	r3, [pc, #120]	; (8009eb0 <HAL_SD_WriteBlocks_DMA+0x11c>)
    MODIFY_REG(hsd->hdmatx->Instance->CR, DMA_SxCR_DIR, hsd->hdmatx->Init.Direction);
 8009e38:	6801      	ldr	r1, [r0, #0]
    __HAL_SD_DMA_ENABLE(hsd);
 8009e3a:	f04f 0801 	mov.w	r8, #1
 8009e3e:	f8c3 858c 	str.w	r8, [r3, #1420]	; 0x58c
    hsd->hdmatx->Init.Direction = DMA_MEMORY_TO_PERIPH;
 8009e42:	2340      	movs	r3, #64	; 0x40
 8009e44:	6083      	str	r3, [r0, #8]
    MODIFY_REG(hsd->hdmatx->Instance->CR, DMA_SxCR_DIR, hsd->hdmatx->Init.Direction);
 8009e46:	680b      	ldr	r3, [r1, #0]
 8009e48:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8009e4c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    if(HAL_DMA_Start_IT(hsd->hdmatx, (uint32_t)pData, (uint32_t)&hsd->Instance->FIFO, (uint32_t)(BLOCKSIZE * NumberOfBlocks)/4U) != HAL_OK)
 8009e50:	0276      	lsls	r6, r6, #9
    MODIFY_REG(hsd->hdmatx->Instance->CR, DMA_SxCR_DIR, hsd->hdmatx->Init.Direction);
 8009e52:	600b      	str	r3, [r1, #0]
    if(HAL_DMA_Start_IT(hsd->hdmatx, (uint32_t)pData, (uint32_t)&hsd->Instance->FIFO, (uint32_t)(BLOCKSIZE * NumberOfBlocks)/4U) != HAL_OK)
 8009e54:	3280      	adds	r2, #128	; 0x80
 8009e56:	08b3      	lsrs	r3, r6, #2
 8009e58:	4649      	mov	r1, r9
 8009e5a:	f7fe f8dd 	bl	8008018 <HAL_DMA_Start_IT>
 8009e5e:	b180      	cbz	r0, 8009e82 <HAL_SD_WriteBlocks_DMA+0xee>
      __HAL_SD_DISABLE_IT(hsd, (SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT | SDIO_IT_TXUNDERR | SDIO_IT_STBITERR));
 8009e60:	6822      	ldr	r2, [r4, #0]
 8009e62:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8009e64:	f423 7306 	bic.w	r3, r3, #536	; 0x218
 8009e68:	f023 0302 	bic.w	r3, r3, #2
 8009e6c:	63d3      	str	r3, [r2, #60]	; 0x3c
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8009e6e:	4b0f      	ldr	r3, [pc, #60]	; (8009eac <HAL_SD_WriteBlocks_DMA+0x118>)
 8009e70:	6393      	str	r3, [r2, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_DMA;
 8009e72:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009e74:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8009e78:	63a3      	str	r3, [r4, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8009e7a:	f884 8034 	strb.w	r8, [r4, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8009e7e:	6325      	str	r5, [r4, #48]	; 0x30
      return HAL_ERROR;
 8009e80:	e794      	b.n	8009dac <HAL_SD_WriteBlocks_DMA+0x18>
      config.DataTimeOut   = SDMMC_DATATIMEOUT;
 8009e82:	f04f 33ff 	mov.w	r3, #4294967295
      config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 8009e86:	e9cd 3600 	strd	r3, r6, [sp]
      (void)SDIO_ConfigData(hsd->Instance, &config);
 8009e8a:	6820      	ldr	r0, [r4, #0]
      config.DataBlockSize = SDIO_DATABLOCK_SIZE_512B;
 8009e8c:	2390      	movs	r3, #144	; 0x90
      (void)SDIO_ConfigData(hsd->Instance, &config);
 8009e8e:	4669      	mov	r1, sp
      config.TransferDir   = SDIO_TRANSFER_DIR_TO_CARD;
 8009e90:	e9cd 3502 	strd	r3, r5, [sp, #8]
      config.DPSM          = SDIO_DPSM_ENABLE;
 8009e94:	e9cd 5804 	strd	r5, r8, [sp, #16]
      return HAL_OK;
 8009e98:	462f      	mov	r7, r5
      (void)SDIO_ConfigData(hsd->Instance, &config);
 8009e9a:	f001 fa0e 	bl	800b2ba <SDIO_ConfigData>
      return HAL_OK;
 8009e9e:	e785      	b.n	8009dac <HAL_SD_WriteBlocks_DMA+0x18>
    return HAL_BUSY;
 8009ea0:	2702      	movs	r7, #2
 8009ea2:	e783      	b.n	8009dac <HAL_SD_WriteBlocks_DMA+0x18>
 8009ea4:	08009c59 	.word	0x08009c59
 8009ea8:	0800a2ed 	.word	0x0800a2ed
 8009eac:	004005ff 	.word	0x004005ff
 8009eb0:	42258000 	.word	0x42258000

08009eb4 <HAL_SD_ErrorCallback>:
 8009eb4:	4770      	bx	lr

08009eb6 <SD_DMAReceiveCplt>:
  * @brief  DMA SD receive process complete callback
  * @param  hdma: DMA handle
  * @retval None
  */
static void SD_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
{
 8009eb6:	b510      	push	{r4, lr}
  SD_HandleTypeDef* hsd = (SD_HandleTypeDef* )(hdma->Parent);
 8009eb8:	6b84      	ldr	r4, [r0, #56]	; 0x38
  uint32_t errorstate;

  /* Send stop command in multiblock write */
  if(hsd->Context == (SD_CONTEXT_READ_MULTIPLE_BLOCK | SD_CONTEXT_DMA))
 8009eba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009ebc:	2b82      	cmp	r3, #130	; 0x82
 8009ebe:	d109      	bne.n	8009ed4 <SD_DMAReceiveCplt+0x1e>
  {
    errorstate = SDMMC_CmdStopTransfer(hsd->Instance);
 8009ec0:	6820      	ldr	r0, [r4, #0]
 8009ec2:	f001 fb3b 	bl	800b53c <SDMMC_CmdStopTransfer>
    if(errorstate != HAL_SD_ERROR_NONE)
 8009ec6:	b128      	cbz	r0, 8009ed4 <SD_DMAReceiveCplt+0x1e>
    {
      hsd->ErrorCode |= errorstate;
 8009ec8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009eca:	4318      	orrs	r0, r3
 8009ecc:	63a0      	str	r0, [r4, #56]	; 0x38
#if (USE_HAL_SD_REGISTER_CALLBACKS == 1)
      hsd->ErrorCallback(hsd);
#else
      HAL_SD_ErrorCallback(hsd);
 8009ece:	4620      	mov	r0, r4
 8009ed0:	f7ff fff0 	bl	8009eb4 <HAL_SD_ErrorCallback>
    }
  }

  /* Disable the DMA transfer for transmit request by setting the DMAEN bit
  in the SD DCTRL register */
  hsd->Instance->DCTRL &= (uint32_t)~((uint32_t)SDIO_DCTRL_DMAEN);
 8009ed4:	6823      	ldr	r3, [r4, #0]
 8009ed6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009ed8:	f022 0208 	bic.w	r2, r2, #8
 8009edc:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Clear all the static flags */
  __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_DATA_FLAGS);
 8009ede:	f240 523a 	movw	r2, #1338	; 0x53a
 8009ee2:	639a      	str	r2, [r3, #56]	; 0x38

  hsd->State = HAL_SD_STATE_READY;
 8009ee4:	2301      	movs	r3, #1
 8009ee6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  hsd->Context = SD_CONTEXT_NONE;
 8009eea:	2300      	movs	r3, #0
 8009eec:	6323      	str	r3, [r4, #48]	; 0x30

#if (USE_HAL_SD_REGISTER_CALLBACKS == 1)
  hsd->RxCpltCallback(hsd);
#else
  HAL_SD_RxCpltCallback(hsd);
 8009eee:	4620      	mov	r0, r4
 8009ef0:	f7f6 fbc5 	bl	800067e <HAL_SD_RxCpltCallback>
#endif
}
 8009ef4:	bd10      	pop	{r4, pc}
	...

08009ef8 <HAL_SD_GetCardCSD>:
  pCSD->CSDStruct = (uint8_t)((hsd->CSD[0] & 0xC0000000U) >> 30U);
 8009ef8:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8009efa:	0f9a      	lsrs	r2, r3, #30
 8009efc:	700a      	strb	r2, [r1, #0]
  pCSD->SysSpecVersion = (uint8_t)((hsd->CSD[0] & 0x3C000000U) >> 26U);
 8009efe:	f3c3 6283 	ubfx	r2, r3, #26, #4
 8009f02:	704a      	strb	r2, [r1, #1]
  pCSD->Reserved1 = (uint8_t)((hsd->CSD[0] & 0x03000000U) >> 24U);
 8009f04:	f3c3 6201 	ubfx	r2, r3, #24, #2
 8009f08:	708a      	strb	r2, [r1, #2]
  pCSD->TAAC = (uint8_t)((hsd->CSD[0] & 0x00FF0000U) >> 16U);
 8009f0a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8009f0e:	70ca      	strb	r2, [r1, #3]
  pCSD->NSAC = (uint8_t)((hsd->CSD[0] & 0x0000FF00U) >> 8U);
 8009f10:	f3c3 2207 	ubfx	r2, r3, #8, #8
  pCSD->MaxBusClkFrec = (uint8_t)(hsd->CSD[0] & 0x000000FFU);
 8009f14:	b2db      	uxtb	r3, r3
  pCSD->NSAC = (uint8_t)((hsd->CSD[0] & 0x0000FF00U) >> 8U);
 8009f16:	710a      	strb	r2, [r1, #4]
  pCSD->MaxBusClkFrec = (uint8_t)(hsd->CSD[0] & 0x000000FFU);
 8009f18:	714b      	strb	r3, [r1, #5]
  pCSD->CardComdClasses = (uint16_t)((hsd->CSD[1] & 0xFFF00000U) >> 20U);
 8009f1a:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8009f1c:	0d1a      	lsrs	r2, r3, #20
 8009f1e:	80ca      	strh	r2, [r1, #6]
  pCSD->RdBlockLen = (uint8_t)((hsd->CSD[1] & 0x000F0000U) >> 16U);
 8009f20:	f3c3 4203 	ubfx	r2, r3, #16, #4
 8009f24:	720a      	strb	r2, [r1, #8]
  pCSD->PartBlockRead   = (uint8_t)((hsd->CSD[1] & 0x00008000U) >> 15U);
 8009f26:	f3c3 32c0 	ubfx	r2, r3, #15, #1
 8009f2a:	724a      	strb	r2, [r1, #9]
  pCSD->WrBlockMisalign = (uint8_t)((hsd->CSD[1] & 0x00004000U) >> 14U);
 8009f2c:	f3c3 3280 	ubfx	r2, r3, #14, #1
 8009f30:	728a      	strb	r2, [r1, #10]
  pCSD->RdBlockMisalign = (uint8_t)((hsd->CSD[1] & 0x00002000U) >> 13U);
 8009f32:	f3c3 3240 	ubfx	r2, r3, #13, #1
 8009f36:	72ca      	strb	r2, [r1, #11]
  pCSD->DSRImpl = (uint8_t)((hsd->CSD[1] & 0x00001000U) >> 12U);
 8009f38:	f3c3 3200 	ubfx	r2, r3, #12, #1
 8009f3c:	730a      	strb	r2, [r1, #12]
  pCSD->Reserved2 = 0U; /*!< Reserved */
 8009f3e:	2200      	movs	r2, #0
 8009f40:	734a      	strb	r2, [r1, #13]
  if(hsd->SdCard.CardType == CARD_SDSC)
 8009f42:	6c42      	ldr	r2, [r0, #68]	; 0x44
{
 8009f44:	b510      	push	{r4, lr}
  if(hsd->SdCard.CardType == CARD_SDSC)
 8009f46:	2a00      	cmp	r2, #0
 8009f48:	d16c      	bne.n	800a024 <HAL_SD_GetCardCSD+0x12c>
    pCSD->DeviceSize = (((hsd->CSD[1] & 0x000003FFU) << 2U) | ((hsd->CSD[2] & 0xC0000000U) >> 30U));
 8009f4a:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 8009f4c:	f640 74fc 	movw	r4, #4092	; 0xffc
 8009f50:	ea04 0383 	and.w	r3, r4, r3, lsl #2
 8009f54:	ea43 7392 	orr.w	r3, r3, r2, lsr #30
 8009f58:	610b      	str	r3, [r1, #16]
    pCSD->MaxRdCurrentVDDMin = (uint8_t)((hsd->CSD[2] & 0x38000000U) >> 27U);
 8009f5a:	f3c2 63c2 	ubfx	r3, r2, #27, #3
 8009f5e:	750b      	strb	r3, [r1, #20]
    pCSD->MaxRdCurrentVDDMax = (uint8_t)((hsd->CSD[2] & 0x07000000U) >> 24U);
 8009f60:	f3c2 6302 	ubfx	r3, r2, #24, #3
 8009f64:	754b      	strb	r3, [r1, #21]
    pCSD->MaxWrCurrentVDDMin = (uint8_t)((hsd->CSD[2] & 0x00E00000U) >> 21U);
 8009f66:	f3c2 5342 	ubfx	r3, r2, #21, #3
 8009f6a:	758b      	strb	r3, [r1, #22]
    pCSD->MaxWrCurrentVDDMax = (uint8_t)((hsd->CSD[2] & 0x001C0000U) >> 18U);
 8009f6c:	f3c2 4382 	ubfx	r3, r2, #18, #3
    pCSD->DeviceSizeMul = (uint8_t)((hsd->CSD[2] & 0x00038000U) >> 15U);
 8009f70:	f3c2 32c2 	ubfx	r2, r2, #15, #3
    pCSD->MaxWrCurrentVDDMax = (uint8_t)((hsd->CSD[2] & 0x001C0000U) >> 18U);
 8009f74:	75cb      	strb	r3, [r1, #23]
    pCSD->DeviceSizeMul = (uint8_t)((hsd->CSD[2] & 0x00038000U) >> 15U);
 8009f76:	760a      	strb	r2, [r1, #24]
    hsd->SdCard.BlockNbr  = (pCSD->DeviceSize + 1U) ;
 8009f78:	690b      	ldr	r3, [r1, #16]
    hsd->SdCard.BlockNbr *= (1UL << ((pCSD->DeviceSizeMul & 0x07U) + 2U));
 8009f7a:	7e0a      	ldrb	r2, [r1, #24]
 8009f7c:	f002 0207 	and.w	r2, r2, #7
    hsd->SdCard.BlockNbr  = (pCSD->DeviceSize + 1U) ;
 8009f80:	3301      	adds	r3, #1
    hsd->SdCard.BlockNbr *= (1UL << ((pCSD->DeviceSizeMul & 0x07U) + 2U));
 8009f82:	3202      	adds	r2, #2
 8009f84:	fa03 f202 	lsl.w	r2, r3, r2
 8009f88:	6542      	str	r2, [r0, #84]	; 0x54
    hsd->SdCard.BlockSize = (1UL << (pCSD->RdBlockLen & 0x0FU));
 8009f8a:	7a0b      	ldrb	r3, [r1, #8]
 8009f8c:	f003 040f 	and.w	r4, r3, #15
 8009f90:	2301      	movs	r3, #1
 8009f92:	40a3      	lsls	r3, r4
 8009f94:	6583      	str	r3, [r0, #88]	; 0x58
    hsd->SdCard.LogBlockNbr =  (hsd->SdCard.BlockNbr) * ((hsd->SdCard.BlockSize) / 512U);
 8009f96:	0a5b      	lsrs	r3, r3, #9
 8009f98:	4353      	muls	r3, r2
 8009f9a:	65c3      	str	r3, [r0, #92]	; 0x5c
    hsd->SdCard.LogBlockSize = 512U;
 8009f9c:	f44f 7300 	mov.w	r3, #512	; 0x200
    hsd->SdCard.LogBlockSize = hsd->SdCard.BlockSize;
 8009fa0:	6603      	str	r3, [r0, #96]	; 0x60
  pCSD->EraseGrSize = (uint8_t)((hsd->CSD[2] & 0x00004000U) >> 14U);
 8009fa2:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8009fa4:	f3c3 3280 	ubfx	r2, r3, #14, #1
 8009fa8:	764a      	strb	r2, [r1, #25]
  pCSD->EraseGrMul = (uint8_t)((hsd->CSD[2] & 0x00003F80U) >> 7U);
 8009faa:	f3c3 12c6 	ubfx	r2, r3, #7, #7
  pCSD->WrProtectGrSize = (uint8_t)(hsd->CSD[2] & 0x0000007FU);
 8009fae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  pCSD->EraseGrMul = (uint8_t)((hsd->CSD[2] & 0x00003F80U) >> 7U);
 8009fb2:	768a      	strb	r2, [r1, #26]
  pCSD->WrProtectGrSize = (uint8_t)(hsd->CSD[2] & 0x0000007FU);
 8009fb4:	76cb      	strb	r3, [r1, #27]
  pCSD->WrProtectGrEnable = (uint8_t)((hsd->CSD[3] & 0x80000000U) >> 31U);
 8009fb6:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8009fb8:	0fda      	lsrs	r2, r3, #31
 8009fba:	770a      	strb	r2, [r1, #28]
  pCSD->ManDeflECC = (uint8_t)((hsd->CSD[3] & 0x60000000U) >> 29U);
 8009fbc:	f3c3 7241 	ubfx	r2, r3, #29, #2
 8009fc0:	774a      	strb	r2, [r1, #29]
  pCSD->WrSpeedFact = (uint8_t)((hsd->CSD[3] & 0x1C000000U) >> 26U);
 8009fc2:	f3c3 6282 	ubfx	r2, r3, #26, #3
 8009fc6:	778a      	strb	r2, [r1, #30]
  pCSD->MaxWrBlockLen= (uint8_t)((hsd->CSD[3] & 0x03C00000U) >> 22U);
 8009fc8:	f3c3 5283 	ubfx	r2, r3, #22, #4
 8009fcc:	77ca      	strb	r2, [r1, #31]
  pCSD->WriteBlockPaPartial = (uint8_t)((hsd->CSD[3] & 0x00200000U) >> 21U);
 8009fce:	f3c3 5240 	ubfx	r2, r3, #21, #1
 8009fd2:	f881 2020 	strb.w	r2, [r1, #32]
  pCSD->Reserved3 = 0;
 8009fd6:	2000      	movs	r0, #0
  pCSD->ContentProtectAppli = (uint8_t)((hsd->CSD[3] & 0x00010000U) >> 16U);
 8009fd8:	f3c3 4200 	ubfx	r2, r3, #16, #1
  pCSD->Reserved3 = 0;
 8009fdc:	f881 0021 	strb.w	r0, [r1, #33]	; 0x21
  pCSD->ContentProtectAppli = (uint8_t)((hsd->CSD[3] & 0x00010000U) >> 16U);
 8009fe0:	f881 2022 	strb.w	r2, [r1, #34]	; 0x22
  pCSD->FileFormatGroup = (uint8_t)((hsd->CSD[3] & 0x00008000U) >> 15U);
 8009fe4:	f3c3 32c0 	ubfx	r2, r3, #15, #1
 8009fe8:	f881 2023 	strb.w	r2, [r1, #35]	; 0x23
  pCSD->CopyFlag = (uint8_t)((hsd->CSD[3] & 0x00004000U) >> 14U);
 8009fec:	f3c3 3280 	ubfx	r2, r3, #14, #1
 8009ff0:	f881 2024 	strb.w	r2, [r1, #36]	; 0x24
  pCSD->PermWrProtect = (uint8_t)((hsd->CSD[3] & 0x00002000U) >> 13U);
 8009ff4:	f3c3 3240 	ubfx	r2, r3, #13, #1
 8009ff8:	f881 2025 	strb.w	r2, [r1, #37]	; 0x25
  pCSD->TempWrProtect = (uint8_t)((hsd->CSD[3] & 0x00001000U) >> 12U);
 8009ffc:	f3c3 3200 	ubfx	r2, r3, #12, #1
 800a000:	f881 2026 	strb.w	r2, [r1, #38]	; 0x26
  pCSD->FileFormat = (uint8_t)((hsd->CSD[3] & 0x00000C00U) >> 10U);
 800a004:	f3c3 2281 	ubfx	r2, r3, #10, #2
 800a008:	f881 2027 	strb.w	r2, [r1, #39]	; 0x27
  pCSD->ECC= (uint8_t)((hsd->CSD[3] & 0x00000300U) >> 8U);
 800a00c:	f3c3 2201 	ubfx	r2, r3, #8, #2
  pCSD->CSD_CRC = (uint8_t)((hsd->CSD[3] & 0x000000FEU) >> 1U);
 800a010:	f3c3 0346 	ubfx	r3, r3, #1, #7
  pCSD->ECC= (uint8_t)((hsd->CSD[3] & 0x00000300U) >> 8U);
 800a014:	f881 2028 	strb.w	r2, [r1, #40]	; 0x28
  pCSD->CSD_CRC = (uint8_t)((hsd->CSD[3] & 0x000000FEU) >> 1U);
 800a018:	f881 3029 	strb.w	r3, [r1, #41]	; 0x29
  pCSD->Reserved4 = 1;
 800a01c:	2301      	movs	r3, #1
 800a01e:	f881 302a 	strb.w	r3, [r1, #42]	; 0x2a
}
 800a022:	bd10      	pop	{r4, pc}
  else if(hsd->SdCard.CardType == CARD_SDHC_SDXC)
 800a024:	2a01      	cmp	r2, #1
 800a026:	d10f      	bne.n	800a048 <HAL_SD_GetCardCSD+0x150>
    pCSD->DeviceSize = (((hsd->CSD[1] & 0x0000003FU) << 16U) | ((hsd->CSD[2] & 0xFFFF0000U) >> 16U));
 800a028:	f8b0 206e 	ldrh.w	r2, [r0, #110]	; 0x6e
 800a02c:	041b      	lsls	r3, r3, #16
 800a02e:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
 800a032:	4313      	orrs	r3, r2
 800a034:	610b      	str	r3, [r1, #16]
    hsd->SdCard.BlockNbr = ((pCSD->DeviceSize + 1U) * 1024U);
 800a036:	690b      	ldr	r3, [r1, #16]
 800a038:	3301      	adds	r3, #1
 800a03a:	029b      	lsls	r3, r3, #10
 800a03c:	6543      	str	r3, [r0, #84]	; 0x54
    hsd->SdCard.LogBlockNbr = hsd->SdCard.BlockNbr;
 800a03e:	65c3      	str	r3, [r0, #92]	; 0x5c
    hsd->SdCard.BlockSize = 512U;
 800a040:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a044:	6583      	str	r3, [r0, #88]	; 0x58
 800a046:	e7ab      	b.n	8009fa0 <HAL_SD_GetCardCSD+0xa8>
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 800a048:	6803      	ldr	r3, [r0, #0]
 800a04a:	4a05      	ldr	r2, [pc, #20]	; (800a060 <HAL_SD_GetCardCSD+0x168>)
 800a04c:	639a      	str	r2, [r3, #56]	; 0x38
    hsd->ErrorCode |= HAL_SD_ERROR_UNSUPPORTED_FEATURE;
 800a04e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a050:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a054:	6383      	str	r3, [r0, #56]	; 0x38
    hsd->State = HAL_SD_STATE_READY;
 800a056:	2301      	movs	r3, #1
 800a058:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
    return HAL_ERROR;
 800a05c:	4618      	mov	r0, r3
 800a05e:	e7e0      	b.n	800a022 <HAL_SD_GetCardCSD+0x12a>
 800a060:	004005ff 	.word	0x004005ff

0800a064 <HAL_SD_InitCard>:
{
 800a064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  Init.ClockEdge           = SDIO_CLOCK_EDGE_RISING;
 800a068:	2300      	movs	r3, #0
{
 800a06a:	b098      	sub	sp, #96	; 0x60
  Init.BusWide             = SDIO_BUS_WIDE_1B;
 800a06c:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
  Init.ClockBypass         = SDIO_CLOCK_BYPASS_DISABLE;
 800a070:	e9cd 3307 	strd	r3, r3, [sp, #28]
  Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 800a074:	930b      	str	r3, [sp, #44]	; 0x2c
  Init.ClockDiv            = SDIO_INIT_CLK_DIV;
 800a076:	2376      	movs	r3, #118	; 0x76
 800a078:	930c      	str	r3, [sp, #48]	; 0x30
  status = SDIO_Init(hsd->Instance, Init);
 800a07a:	ab0a      	add	r3, sp, #40	; 0x28
{
 800a07c:	4604      	mov	r4, r0
  status = SDIO_Init(hsd->Instance, Init);
 800a07e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800a082:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
 800a086:	ab07      	add	r3, sp, #28
 800a088:	cb0e      	ldmia	r3, {r1, r2, r3}
 800a08a:	6820      	ldr	r0, [r4, #0]
 800a08c:	f001 f8d3 	bl	800b236 <SDIO_Init>
  if(status != HAL_OK)
 800a090:	4605      	mov	r5, r0
 800a092:	2800      	cmp	r0, #0
 800a094:	f040 80df 	bne.w	800a256 <HAL_SD_InitCard+0x1f2>
  __HAL_SD_DISABLE(hsd);
 800a098:	4f70      	ldr	r7, [pc, #448]	; (800a25c <HAL_SD_InitCard+0x1f8>)
  __HAL_SD_ENABLE(hsd);
 800a09a:	2601      	movs	r6, #1
  __HAL_SD_DISABLE(hsd);
 800a09c:	f8c7 00a0 	str.w	r0, [r7, #160]	; 0xa0
  (void)SDIO_PowerState_ON(hsd->Instance);
 800a0a0:	6820      	ldr	r0, [r4, #0]
 800a0a2:	f001 f8ec 	bl	800b27e <SDIO_PowerState_ON>
  HAL_Delay(2);
 800a0a6:	2002      	movs	r0, #2
  __HAL_SD_ENABLE(hsd);
 800a0a8:	f8c7 60a0 	str.w	r6, [r7, #160]	; 0xa0
  HAL_Delay(2);
 800a0ac:	f7fd fea8 	bl	8007e00 <HAL_Delay>
  __IO uint32_t count = 0U;
  uint32_t response = 0U, validvoltage = 0U;
  uint32_t errorstate;

  /* CMD0: GO_IDLE_STATE */
  errorstate = SDMMC_CmdGoIdleState(hsd->Instance);
 800a0b0:	6820      	ldr	r0, [r4, #0]
  __IO uint32_t count = 0U;
 800a0b2:	9506      	str	r5, [sp, #24]
  errorstate = SDMMC_CmdGoIdleState(hsd->Instance);
 800a0b4:	f001 f914 	bl	800b2e0 <SDMMC_CmdGoIdleState>
  if(errorstate != HAL_SD_ERROR_NONE)
 800a0b8:	4605      	mov	r5, r0
 800a0ba:	b940      	cbnz	r0, 800a0ce <HAL_SD_InitCard+0x6a>
  {
    return errorstate;
  }

  /* CMD8: SEND_IF_COND: Command available only on V2.0 cards */
  errorstate = SDMMC_CmdOperCond(hsd->Instance);
 800a0bc:	6820      	ldr	r0, [r4, #0]
 800a0be:	f001 fbad 	bl	800b81c <SDMMC_CmdOperCond>
  if(errorstate != HAL_SD_ERROR_NONE)
 800a0c2:	b170      	cbz	r0, 800a0e2 <HAL_SD_InitCard+0x7e>
  {
    hsd->SdCard.CardVersion = CARD_V1_X;
    /* CMD0: GO_IDLE_STATE */
    errorstate = SDMMC_CmdGoIdleState(hsd->Instance);
 800a0c4:	6820      	ldr	r0, [r4, #0]
    hsd->SdCard.CardVersion = CARD_V1_X;
 800a0c6:	64a5      	str	r5, [r4, #72]	; 0x48
    errorstate = SDMMC_CmdGoIdleState(hsd->Instance);
 800a0c8:	f001 f90a 	bl	800b2e0 <SDMMC_CmdGoIdleState>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a0cc:	b190      	cbz	r0, 800a0f4 <HAL_SD_InitCard+0x90>
    hsd->State = HAL_SD_STATE_READY;
 800a0ce:	2501      	movs	r5, #1
 800a0d0:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    hsd->ErrorCode |= errorstate;
 800a0d4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a0d6:	4303      	orrs	r3, r0
 800a0d8:	63a3      	str	r3, [r4, #56]	; 0x38
}
 800a0da:	4628      	mov	r0, r5
 800a0dc:	b018      	add	sp, #96	; 0x60
 800a0de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    }

  }
  else
  {
    hsd->SdCard.CardVersion = CARD_V2_X;
 800a0e2:	64a6      	str	r6, [r4, #72]	; 0x48
  }

  if( hsd->SdCard.CardVersion == CARD_V2_X)
  {
    /* SEND CMD55 APP_CMD with RCA as 0 */
    errorstate = SDMMC_CmdAppCommand(hsd->Instance, 0);
 800a0e4:	6820      	ldr	r0, [r4, #0]
 800a0e6:	2100      	movs	r1, #0
 800a0e8:	f001 fa5a 	bl	800b5a0 <SDMMC_CmdAppCommand>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a0ec:	b128      	cbz	r0, 800a0fa <HAL_SD_InitCard+0x96>
    return HAL_SD_ERROR_UNSUPPORTED_FEATURE;
 800a0ee:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 800a0f2:	e7ec      	b.n	800a0ce <HAL_SD_InitCard+0x6a>
  if( hsd->SdCard.CardVersion == CARD_V2_X)
 800a0f4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800a0f6:	2b01      	cmp	r3, #1
 800a0f8:	d0f4      	beq.n	800a0e4 <HAL_SD_InitCard+0x80>
    {
      return errorstate;
    }

    /* Send CMD41 */
    errorstate = SDMMC_CmdAppOperCommand(hsd->Instance, SDMMC_VOLTAGE_WINDOW_SD | SDMMC_HIGH_CAPACITY | SD_SWITCH_1_8V_CAPACITY);
 800a0fa:	f8df 8168 	ldr.w	r8, [pc, #360]	; 800a264 <HAL_SD_InitCard+0x200>
{
 800a0fe:	2600      	movs	r6, #0
  while((count < SDMMC_MAX_VOLT_TRIAL) && (validvoltage == 0U))
 800a100:	f64f 77fe 	movw	r7, #65534	; 0xfffe
 800a104:	e014      	b.n	800a130 <HAL_SD_InitCard+0xcc>
    errorstate = SDMMC_CmdAppCommand(hsd->Instance, 0);
 800a106:	6820      	ldr	r0, [r4, #0]
 800a108:	4631      	mov	r1, r6
 800a10a:	f001 fa49 	bl	800b5a0 <SDMMC_CmdAppCommand>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a10e:	2800      	cmp	r0, #0
 800a110:	d1dd      	bne.n	800a0ce <HAL_SD_InitCard+0x6a>
    errorstate = SDMMC_CmdAppOperCommand(hsd->Instance, SDMMC_VOLTAGE_WINDOW_SD | SDMMC_HIGH_CAPACITY | SD_SWITCH_1_8V_CAPACITY);
 800a112:	6820      	ldr	r0, [r4, #0]
 800a114:	4641      	mov	r1, r8
 800a116:	f001 fae3 	bl	800b6e0 <SDMMC_CmdAppOperCommand>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a11a:	2800      	cmp	r0, #0
 800a11c:	d1e7      	bne.n	800a0ee <HAL_SD_InitCard+0x8a>
    {
      return HAL_SD_ERROR_UNSUPPORTED_FEATURE;
    }

    /* Get command response */
    response = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a11e:	4631      	mov	r1, r6
 800a120:	6820      	ldr	r0, [r4, #0]
 800a122:	f001 f8c7 	bl	800b2b4 <SDIO_GetResponse>

    /* Get operating voltage*/
    validvoltage = (((response >> 31U) == 1U) ? 1U : 0U);

    count++;
 800a126:	9b06      	ldr	r3, [sp, #24]
 800a128:	3301      	adds	r3, #1
    response = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a12a:	4605      	mov	r5, r0
    validvoltage = (((response >> 31U) == 1U) ? 1U : 0U);
 800a12c:	0fc6      	lsrs	r6, r0, #31
    count++;
 800a12e:	9306      	str	r3, [sp, #24]
  while((count < SDMMC_MAX_VOLT_TRIAL) && (validvoltage == 0U))
 800a130:	9b06      	ldr	r3, [sp, #24]
 800a132:	42bb      	cmp	r3, r7
 800a134:	d801      	bhi.n	800a13a <HAL_SD_InitCard+0xd6>
 800a136:	2e00      	cmp	r6, #0
 800a138:	d0e5      	beq.n	800a106 <HAL_SD_InitCard+0xa2>
  }

  if(count >= SDMMC_MAX_VOLT_TRIAL)
 800a13a:	9b06      	ldr	r3, [sp, #24]
 800a13c:	42bb      	cmp	r3, r7
 800a13e:	d80c      	bhi.n	800a15a <HAL_SD_InitCard+0xf6>
  {
    return HAL_SD_ERROR_INVALID_VOLTRANGE;
  }

  if((response & SDMMC_HIGH_CAPACITY) == SDMMC_HIGH_CAPACITY) /* (response &= SD_HIGH_CAPACITY) */
 800a140:	f3c5 7580 	ubfx	r5, r5, #30, #1
  uint16_t sd_rca = 1U;
 800a144:	2301      	movs	r3, #1
  if(SDIO_GetPowerState(hsd->Instance) == 0U)
 800a146:	6820      	ldr	r0, [r4, #0]
 800a148:	6465      	str	r5, [r4, #68]	; 0x44
  uint16_t sd_rca = 1U;
 800a14a:	f8ad 3016 	strh.w	r3, [sp, #22]
  if(SDIO_GetPowerState(hsd->Instance) == 0U)
 800a14e:	f001 f89a 	bl	800b286 <SDIO_GetPowerState>
 800a152:	b928      	cbnz	r0, 800a160 <HAL_SD_InitCard+0xfc>
    return HAL_SD_ERROR_REQUEST_NOT_APPLICABLE;
 800a154:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 800a158:	e7b9      	b.n	800a0ce <HAL_SD_InitCard+0x6a>
    return HAL_SD_ERROR_INVALID_VOLTRANGE;
 800a15a:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
    hsd->State = HAL_SD_STATE_READY;
 800a15e:	e7b6      	b.n	800a0ce <HAL_SD_InitCard+0x6a>
  if(hsd->SdCard.CardType != CARD_SECURED)
 800a160:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a162:	2b03      	cmp	r3, #3
 800a164:	d043      	beq.n	800a1ee <HAL_SD_InitCard+0x18a>
    errorstate = SDMMC_CmdSendCID(hsd->Instance);
 800a166:	6820      	ldr	r0, [r4, #0]
 800a168:	f001 fa70 	bl	800b64c <SDMMC_CmdSendCID>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a16c:	2800      	cmp	r0, #0
 800a16e:	d1ae      	bne.n	800a0ce <HAL_SD_InitCard+0x6a>
      hsd->CID[0U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a170:	4601      	mov	r1, r0
 800a172:	6820      	ldr	r0, [r4, #0]
 800a174:	f001 f89e 	bl	800b2b4 <SDIO_GetResponse>
      hsd->CID[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 800a178:	2104      	movs	r1, #4
      hsd->CID[0U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a17a:	6760      	str	r0, [r4, #116]	; 0x74
      hsd->CID[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 800a17c:	6820      	ldr	r0, [r4, #0]
 800a17e:	f001 f899 	bl	800b2b4 <SDIO_GetResponse>
      hsd->CID[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 800a182:	2108      	movs	r1, #8
      hsd->CID[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 800a184:	67a0      	str	r0, [r4, #120]	; 0x78
      hsd->CID[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 800a186:	6820      	ldr	r0, [r4, #0]
 800a188:	f001 f894 	bl	800b2b4 <SDIO_GetResponse>
      hsd->CID[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 800a18c:	210c      	movs	r1, #12
      hsd->CID[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 800a18e:	67e0      	str	r0, [r4, #124]	; 0x7c
      hsd->CID[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 800a190:	6820      	ldr	r0, [r4, #0]
 800a192:	f001 f88f 	bl	800b2b4 <SDIO_GetResponse>
  if(hsd->SdCard.CardType != CARD_SECURED)
 800a196:	6c63      	ldr	r3, [r4, #68]	; 0x44
      hsd->CID[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 800a198:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
  if(hsd->SdCard.CardType != CARD_SECURED)
 800a19c:	2b03      	cmp	r3, #3
 800a19e:	d026      	beq.n	800a1ee <HAL_SD_InitCard+0x18a>
    errorstate = SDMMC_CmdSetRelAdd(hsd->Instance, &sd_rca);
 800a1a0:	6820      	ldr	r0, [r4, #0]
 800a1a2:	f10d 0116 	add.w	r1, sp, #22
 800a1a6:	f001 faf7 	bl	800b798 <SDMMC_CmdSetRelAdd>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a1aa:	2800      	cmp	r0, #0
 800a1ac:	d18f      	bne.n	800a0ce <HAL_SD_InitCard+0x6a>
  if(hsd->SdCard.CardType != CARD_SECURED)
 800a1ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
    errorstate = SDMMC_CmdSendCSD(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 800a1b0:	6820      	ldr	r0, [r4, #0]
  if(hsd->SdCard.CardType != CARD_SECURED)
 800a1b2:	2b03      	cmp	r3, #3
 800a1b4:	d01b      	beq.n	800a1ee <HAL_SD_InitCard+0x18a>
    hsd->SdCard.RelCardAdd = sd_rca;
 800a1b6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 800a1ba:	6521      	str	r1, [r4, #80]	; 0x50
    errorstate = SDMMC_CmdSendCSD(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 800a1bc:	0409      	lsls	r1, r1, #16
 800a1be:	f001 fa5a 	bl	800b676 <SDMMC_CmdSendCSD>
    if(errorstate != HAL_SD_ERROR_NONE)
 800a1c2:	2800      	cmp	r0, #0
 800a1c4:	d183      	bne.n	800a0ce <HAL_SD_InitCard+0x6a>
      hsd->CSD[0U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a1c6:	4601      	mov	r1, r0
 800a1c8:	6820      	ldr	r0, [r4, #0]
 800a1ca:	f001 f873 	bl	800b2b4 <SDIO_GetResponse>
      hsd->CSD[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 800a1ce:	2104      	movs	r1, #4
      hsd->CSD[0U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a1d0:	6660      	str	r0, [r4, #100]	; 0x64
      hsd->CSD[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 800a1d2:	6820      	ldr	r0, [r4, #0]
 800a1d4:	f001 f86e 	bl	800b2b4 <SDIO_GetResponse>
      hsd->CSD[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 800a1d8:	2108      	movs	r1, #8
      hsd->CSD[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 800a1da:	66a0      	str	r0, [r4, #104]	; 0x68
      hsd->CSD[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 800a1dc:	6820      	ldr	r0, [r4, #0]
 800a1de:	f001 f869 	bl	800b2b4 <SDIO_GetResponse>
      hsd->CSD[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 800a1e2:	210c      	movs	r1, #12
      hsd->CSD[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 800a1e4:	66e0      	str	r0, [r4, #108]	; 0x6c
      hsd->CSD[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 800a1e6:	6820      	ldr	r0, [r4, #0]
 800a1e8:	f001 f864 	bl	800b2b4 <SDIO_GetResponse>
 800a1ec:	6720      	str	r0, [r4, #112]	; 0x70
  hsd->SdCard.Class = (SDIO_GetResponse(hsd->Instance, SDIO_RESP2) >> 20U);
 800a1ee:	2104      	movs	r1, #4
 800a1f0:	6820      	ldr	r0, [r4, #0]
 800a1f2:	f001 f85f 	bl	800b2b4 <SDIO_GetResponse>
 800a1f6:	0d00      	lsrs	r0, r0, #20
 800a1f8:	64e0      	str	r0, [r4, #76]	; 0x4c
  if (HAL_SD_GetCardCSD(hsd, &CSD) != HAL_OK)
 800a1fa:	a90d      	add	r1, sp, #52	; 0x34
 800a1fc:	4620      	mov	r0, r4
 800a1fe:	f7ff fe7b 	bl	8009ef8 <HAL_SD_GetCardCSD>
 800a202:	4605      	mov	r5, r0
 800a204:	2800      	cmp	r0, #0
 800a206:	f47f af72 	bne.w	800a0ee <HAL_SD_InitCard+0x8a>
  errorstate = SDMMC_CmdSelDesel(hsd->Instance, (uint32_t)(((uint32_t)hsd->SdCard.RelCardAdd) << 16U));
 800a20a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a20c:	4603      	mov	r3, r0
 800a20e:	0412      	lsls	r2, r2, #16
 800a210:	6820      	ldr	r0, [r4, #0]
 800a212:	f001 f9ad 	bl	800b570 <SDMMC_CmdSelDesel>
  if(errorstate != HAL_SD_ERROR_NONE)
 800a216:	2800      	cmp	r0, #0
 800a218:	f47f af59 	bne.w	800a0ce <HAL_SD_InitCard+0x6a>
  (void)SDIO_Init(hsd->Instance, hsd->Init);
 800a21c:	f104 0310 	add.w	r3, r4, #16
 800a220:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800a224:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
 800a228:	1d23      	adds	r3, r4, #4
 800a22a:	cb0e      	ldmia	r3, {r1, r2, r3}
 800a22c:	6820      	ldr	r0, [r4, #0]
 800a22e:	f001 f802 	bl	800b236 <SDIO_Init>
  errorstate = SDMMC_CmdBlockLength(hsd->Instance, BLOCKSIZE);
 800a232:	6820      	ldr	r0, [r4, #0]
 800a234:	f44f 7100 	mov.w	r1, #512	; 0x200
 800a238:	f001 f908 	bl	800b44c <SDMMC_CmdBlockLength>
  if(errorstate != HAL_SD_ERROR_NONE)
 800a23c:	2800      	cmp	r0, #0
 800a23e:	f43f af4c 	beq.w	800a0da <HAL_SD_InitCard+0x76>
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 800a242:	6823      	ldr	r3, [r4, #0]
 800a244:	4a06      	ldr	r2, [pc, #24]	; (800a260 <HAL_SD_InitCard+0x1fc>)
 800a246:	639a      	str	r2, [r3, #56]	; 0x38
    hsd->ErrorCode |= errorstate;
 800a248:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    hsd->State = HAL_SD_STATE_READY;
 800a24a:	2501      	movs	r5, #1
    hsd->ErrorCode |= errorstate;
 800a24c:	4318      	orrs	r0, r3
 800a24e:	63a0      	str	r0, [r4, #56]	; 0x38
    hsd->State = HAL_SD_STATE_READY;
 800a250:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    return HAL_ERROR;
 800a254:	e741      	b.n	800a0da <HAL_SD_InitCard+0x76>
    return HAL_ERROR;
 800a256:	2501      	movs	r5, #1
 800a258:	e73f      	b.n	800a0da <HAL_SD_InitCard+0x76>
 800a25a:	bf00      	nop
 800a25c:	42258000 	.word	0x42258000
 800a260:	004005ff 	.word	0x004005ff
 800a264:	c1100000 	.word	0xc1100000

0800a268 <HAL_SD_Init>:
{
 800a268:	b510      	push	{r4, lr}
  if(hsd == NULL)
 800a26a:	4604      	mov	r4, r0
 800a26c:	b908      	cbnz	r0, 800a272 <HAL_SD_Init+0xa>
    return HAL_ERROR;
 800a26e:	2001      	movs	r0, #1
}
 800a270:	bd10      	pop	{r4, pc}
  if(hsd->State == HAL_SD_STATE_RESET)
 800a272:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 800a276:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a27a:	b913      	cbnz	r3, 800a282 <HAL_SD_Init+0x1a>
    hsd->Lock = HAL_UNLOCKED;
 800a27c:	7702      	strb	r2, [r0, #28]
    HAL_SD_MspInit(hsd);
 800a27e:	f7f7 f9db 	bl	8001638 <HAL_SD_MspInit>
  hsd->State = HAL_SD_STATE_BUSY;
 800a282:	2303      	movs	r3, #3
 800a284:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  if (HAL_SD_InitCard(hsd) != HAL_OK)
 800a288:	4620      	mov	r0, r4
 800a28a:	f7ff feeb 	bl	800a064 <HAL_SD_InitCard>
 800a28e:	2800      	cmp	r0, #0
 800a290:	d1ed      	bne.n	800a26e <HAL_SD_Init+0x6>
  hsd->State = HAL_SD_STATE_READY;
 800a292:	2301      	movs	r3, #1
  hsd->ErrorCode = HAL_SD_ERROR_NONE;
 800a294:	63a0      	str	r0, [r4, #56]	; 0x38
  hsd->Context = SD_CONTEXT_NONE;
 800a296:	6320      	str	r0, [r4, #48]	; 0x30
  hsd->State = HAL_SD_STATE_READY;
 800a298:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800a29c:	e7e8      	b.n	800a270 <HAL_SD_Init+0x8>

0800a29e <HAL_SD_GetCardInfo>:
  pCardInfo->CardType     = (uint32_t)(hsd->SdCard.CardType);
 800a29e:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800a2a0:	600b      	str	r3, [r1, #0]
  pCardInfo->CardVersion  = (uint32_t)(hsd->SdCard.CardVersion);
 800a2a2:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800a2a4:	604b      	str	r3, [r1, #4]
  pCardInfo->Class        = (uint32_t)(hsd->SdCard.Class);
 800a2a6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a2a8:	608b      	str	r3, [r1, #8]
  pCardInfo->RelCardAdd   = (uint32_t)(hsd->SdCard.RelCardAdd);
 800a2aa:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a2ac:	60cb      	str	r3, [r1, #12]
  pCardInfo->BlockNbr     = (uint32_t)(hsd->SdCard.BlockNbr);
 800a2ae:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800a2b0:	610b      	str	r3, [r1, #16]
  pCardInfo->BlockSize    = (uint32_t)(hsd->SdCard.BlockSize);
 800a2b2:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800a2b4:	614b      	str	r3, [r1, #20]
  pCardInfo->LogBlockNbr  = (uint32_t)(hsd->SdCard.LogBlockNbr);
 800a2b6:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800a2b8:	618b      	str	r3, [r1, #24]
  pCardInfo->LogBlockSize = (uint32_t)(hsd->SdCard.LogBlockSize);
 800a2ba:	6e03      	ldr	r3, [r0, #96]	; 0x60
 800a2bc:	61cb      	str	r3, [r1, #28]
}
 800a2be:	2000      	movs	r0, #0
 800a2c0:	4770      	bx	lr

0800a2c2 <HAL_SD_GetCardState>:
  {
    return HAL_SD_ERROR_PARAM;
  }

  /* Send Status command */
  errorstate = SDMMC_CmdSendStatus(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 800a2c2:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a2c4:	b510      	push	{r4, lr}
  errorstate = SDMMC_CmdSendStatus(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 800a2c6:	0409      	lsls	r1, r1, #16
{
 800a2c8:	4604      	mov	r4, r0
  errorstate = SDMMC_CmdSendStatus(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 800a2ca:	6800      	ldr	r0, [r0, #0]
 800a2cc:	f001 f980 	bl	800b5d0 <SDMMC_CmdSendStatus>
  if(errorstate != HAL_SD_ERROR_NONE)
 800a2d0:	4601      	mov	r1, r0
 800a2d2:	b928      	cbnz	r0, 800a2e0 <HAL_SD_GetCardState+0x1e>
  {
    return errorstate;
  }

  /* Get SD card status */
  *pCardStatus = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 800a2d4:	6820      	ldr	r0, [r4, #0]
 800a2d6:	f000 ffed 	bl	800b2b4 <SDIO_GetResponse>
}
 800a2da:	f3c0 2043 	ubfx	r0, r0, #9, #4
 800a2de:	bd10      	pop	{r4, pc}
    hsd->ErrorCode |= errorstate;
 800a2e0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a2e2:	4308      	orrs	r0, r1
 800a2e4:	63a0      	str	r0, [r4, #56]	; 0x38
  uint32_t resp1 = 0;
 800a2e6:	2000      	movs	r0, #0
 800a2e8:	e7f7      	b.n	800a2da <HAL_SD_GetCardState+0x18>
	...

0800a2ec <SD_DMAError>:
{
 800a2ec:	b510      	push	{r4, lr}
  SD_HandleTypeDef* hsd = (SD_HandleTypeDef* )(hdma->Parent);
 800a2ee:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if(HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 800a2f0:	f7fd ff9c 	bl	800822c <HAL_DMA_GetError>
 800a2f4:	2802      	cmp	r0, #2
 800a2f6:	d026      	beq.n	800a346 <SD_DMAError+0x5a>
    RxErrorCode = hsd->hdmarx->ErrorCode;
 800a2f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a2fa:	6d5a      	ldr	r2, [r3, #84]	; 0x54
    TxErrorCode = hsd->hdmatx->ErrorCode;  
 800a2fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    if((RxErrorCode == HAL_DMA_ERROR_TE) || (TxErrorCode == HAL_DMA_ERROR_TE))
 800a2fe:	2a01      	cmp	r2, #1
    TxErrorCode = hsd->hdmatx->ErrorCode;  
 800a300:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    if((RxErrorCode == HAL_DMA_ERROR_TE) || (TxErrorCode == HAL_DMA_ERROR_TE))
 800a302:	d001      	beq.n	800a308 <SD_DMAError+0x1c>
 800a304:	2b01      	cmp	r3, #1
 800a306:	d11b      	bne.n	800a340 <SD_DMAError+0x54>
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 800a308:	6823      	ldr	r3, [r4, #0]
 800a30a:	4a0f      	ldr	r2, [pc, #60]	; (800a348 <SD_DMAError+0x5c>)
 800a30c:	639a      	str	r2, [r3, #56]	; 0x38
      __HAL_SD_DISABLE_IT(hsd, SDIO_IT_DATAEND | SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT|\
 800a30e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a310:	f422 729d 	bic.w	r2, r2, #314	; 0x13a
 800a314:	63da      	str	r2, [r3, #60]	; 0x3c
      hsd->ErrorCode |= HAL_SD_ERROR_DMA;
 800a316:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a318:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800a31c:	63a3      	str	r3, [r4, #56]	; 0x38
      CardState = HAL_SD_GetCardState(hsd);
 800a31e:	4620      	mov	r0, r4
 800a320:	f7ff ffcf 	bl	800a2c2 <HAL_SD_GetCardState>
      if((CardState == HAL_SD_CARD_RECEIVING) || (CardState == HAL_SD_CARD_SENDING))
 800a324:	3805      	subs	r0, #5
 800a326:	2801      	cmp	r0, #1
 800a328:	d805      	bhi.n	800a336 <SD_DMAError+0x4a>
        hsd->ErrorCode |= SDMMC_CmdStopTransfer(hsd->Instance);
 800a32a:	6820      	ldr	r0, [r4, #0]
 800a32c:	f001 f906 	bl	800b53c <SDMMC_CmdStopTransfer>
 800a330:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a332:	4318      	orrs	r0, r3
 800a334:	63a0      	str	r0, [r4, #56]	; 0x38
      hsd->State= HAL_SD_STATE_READY;
 800a336:	2301      	movs	r3, #1
 800a338:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 800a33c:	2300      	movs	r3, #0
 800a33e:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_SD_ErrorCallback(hsd);
 800a340:	4620      	mov	r0, r4
 800a342:	f7ff fdb7 	bl	8009eb4 <HAL_SD_ErrorCallback>
}
 800a346:	bd10      	pop	{r4, pc}
 800a348:	004005ff 	.word	0x004005ff

0800a34c <SD_DMATxAbort>:
{
 800a34c:	b510      	push	{r4, lr}
  SD_HandleTypeDef* hsd = (SD_HandleTypeDef* )(hdma->Parent);
 800a34e:	6b84      	ldr	r4, [r0, #56]	; 0x38
  __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_DATA_FLAGS);
 800a350:	6823      	ldr	r3, [r4, #0]
 800a352:	f240 523a 	movw	r2, #1338	; 0x53a
 800a356:	639a      	str	r2, [r3, #56]	; 0x38
  CardState = HAL_SD_GetCardState(hsd);
 800a358:	4620      	mov	r0, r4
 800a35a:	f7ff ffb2 	bl	800a2c2 <HAL_SD_GetCardState>
  hsd->State = HAL_SD_STATE_READY;
 800a35e:	2301      	movs	r3, #1
  if((CardState == HAL_SD_CARD_RECEIVING) || (CardState == HAL_SD_CARD_SENDING))
 800a360:	3805      	subs	r0, #5
  hsd->State = HAL_SD_STATE_READY;
 800a362:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  if((CardState == HAL_SD_CARD_RECEIVING) || (CardState == HAL_SD_CARD_SENDING))
 800a366:	2801      	cmp	r0, #1
  hsd->Context = SD_CONTEXT_NONE;
 800a368:	f04f 0300 	mov.w	r3, #0
 800a36c:	6323      	str	r3, [r4, #48]	; 0x30
  if((CardState == HAL_SD_CARD_RECEIVING) || (CardState == HAL_SD_CARD_SENDING))
 800a36e:	d805      	bhi.n	800a37c <SD_DMATxAbort+0x30>
    hsd->ErrorCode |= SDMMC_CmdStopTransfer(hsd->Instance);
 800a370:	6820      	ldr	r0, [r4, #0]
 800a372:	f001 f8e3 	bl	800b53c <SDMMC_CmdStopTransfer>
 800a376:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a378:	4318      	orrs	r0, r3
 800a37a:	63a0      	str	r0, [r4, #56]	; 0x38
  if(hsd->ErrorCode == HAL_SD_ERROR_NONE)
 800a37c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    HAL_SD_AbortCallback(hsd);
 800a37e:	4620      	mov	r0, r4
  if(hsd->ErrorCode == HAL_SD_ERROR_NONE)
 800a380:	b913      	cbnz	r3, 800a388 <SD_DMATxAbort+0x3c>
    HAL_SD_AbortCallback(hsd);
 800a382:	f7f6 f974 	bl	800066e <HAL_SD_AbortCallback>
}
 800a386:	bd10      	pop	{r4, pc}
    HAL_SD_ErrorCallback(hsd);
 800a388:	f7ff fd94 	bl	8009eb4 <HAL_SD_ErrorCallback>
}
 800a38c:	e7fb      	b.n	800a386 <SD_DMATxAbort+0x3a>
	...

0800a390 <HAL_SD_IRQHandler>:
{
 800a390:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t context = hsd->Context;
 800a394:	6b05      	ldr	r5, [r0, #48]	; 0x30
{
 800a396:	4604      	mov	r4, r0
  if((__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXFIFOHF) != RESET) && ((context & SD_CONTEXT_IT) != 0U))
 800a398:	6800      	ldr	r0, [r0, #0]
 800a39a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a39c:	041a      	lsls	r2, r3, #16
 800a39e:	d51f      	bpl.n	800a3e0 <HAL_SD_IRQHandler+0x50>
 800a3a0:	072b      	lsls	r3, r5, #28
 800a3a2:	d51d      	bpl.n	800a3e0 <HAL_SD_IRQHandler+0x50>
{
  uint32_t count, data, dataremaining;
  uint8_t* tmp;

  tmp = hsd->pRxBuffPtr;
  dataremaining = hsd->RxXferSize;
 800a3a4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c

  if (dataremaining > 0U)
 800a3a6:	b1c7      	cbz	r7, 800a3da <HAL_SD_IRQHandler+0x4a>
  tmp = hsd->pRxBuffPtr;
 800a3a8:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800a3aa:	1d35      	adds	r5, r6, #4
 800a3ac:	f106 0824 	add.w	r8, r6, #36	; 0x24
  {
    /* Read data from SDIO Rx FIFO */
    for(count = 0U; count < 8U; count++)
    {
      data = SDIO_ReadFIFO(hsd->Instance);
 800a3b0:	6820      	ldr	r0, [r4, #0]
 800a3b2:	f000 ff5c 	bl	800b26e <SDIO_ReadFIFO>
      *tmp = (uint8_t)(data & 0xFFU);
      tmp++;
      dataremaining--;
      *tmp = (uint8_t)((data >> 8U) & 0xFFU);
 800a3b6:	0a03      	lsrs	r3, r0, #8
      *tmp = (uint8_t)(data & 0xFFU);
 800a3b8:	f805 0c04 	strb.w	r0, [r5, #-4]
      *tmp = (uint8_t)((data >> 8U) & 0xFFU);
 800a3bc:	f805 3c03 	strb.w	r3, [r5, #-3]
      tmp++;
      dataremaining--;
      *tmp = (uint8_t)((data >> 16U) & 0xFFU);
 800a3c0:	0c03      	lsrs	r3, r0, #16
      tmp++;
      dataremaining--;
      *tmp = (uint8_t)((data >> 24U) & 0xFFU);
 800a3c2:	0e00      	lsrs	r0, r0, #24
      *tmp = (uint8_t)((data >> 16U) & 0xFFU);
 800a3c4:	f805 3c02 	strb.w	r3, [r5, #-2]
      *tmp = (uint8_t)((data >> 24U) & 0xFFU);
 800a3c8:	f805 0c01 	strb.w	r0, [r5, #-1]
    for(count = 0U; count < 8U; count++)
 800a3cc:	3504      	adds	r5, #4
 800a3ce:	4545      	cmp	r5, r8
 800a3d0:	d1ee      	bne.n	800a3b0 <HAL_SD_IRQHandler+0x20>
      tmp++;
 800a3d2:	3620      	adds	r6, #32
      dataremaining--;
 800a3d4:	3f20      	subs	r7, #32
    }

    hsd->pRxBuffPtr = tmp;
 800a3d6:	62a6      	str	r6, [r4, #40]	; 0x28
    hsd->RxXferSize = dataremaining;
 800a3d8:	62e7      	str	r7, [r4, #44]	; 0x2c
}
 800a3da:	b002      	add	sp, #8
 800a3dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  else if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DATAEND) != RESET)
 800a3e0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a3e2:	05df      	lsls	r7, r3, #23
 800a3e4:	d545      	bpl.n	800a472 <HAL_SD_IRQHandler+0xe2>
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_FLAG_DATAEND);
 800a3e6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a3ea:	6383      	str	r3, [r0, #56]	; 0x38
    __HAL_SD_DISABLE_IT(hsd, SDIO_IT_DATAEND  | SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT|\
 800a3ec:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800a3ee:	f423 4343 	bic.w	r3, r3, #49920	; 0xc300
 800a3f2:	f023 033a 	bic.w	r3, r3, #58	; 0x3a
 800a3f6:	63c3      	str	r3, [r0, #60]	; 0x3c
    hsd->Instance->DCTRL &= ~(SDIO_DCTRL_DTEN);
 800a3f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    if((context & SD_CONTEXT_IT) != 0U)
 800a3fa:	072e      	lsls	r6, r5, #28
    hsd->Instance->DCTRL &= ~(SDIO_DCTRL_DTEN);
 800a3fc:	f023 0301 	bic.w	r3, r3, #1
 800a400:	62c3      	str	r3, [r0, #44]	; 0x2c
    if((context & SD_CONTEXT_IT) != 0U)
 800a402:	d51b      	bpl.n	800a43c <HAL_SD_IRQHandler+0xac>
      if(((context & SD_CONTEXT_READ_MULTIPLE_BLOCK) != 0U) || ((context & SD_CONTEXT_WRITE_MULTIPLE_BLOCK) != 0U))
 800a404:	f015 0f22 	tst.w	r5, #34	; 0x22
 800a408:	d008      	beq.n	800a41c <HAL_SD_IRQHandler+0x8c>
        errorstate = SDMMC_CmdStopTransfer(hsd->Instance);
 800a40a:	f001 f897 	bl	800b53c <SDMMC_CmdStopTransfer>
        if(errorstate != HAL_SD_ERROR_NONE)
 800a40e:	b128      	cbz	r0, 800a41c <HAL_SD_IRQHandler+0x8c>
          hsd->ErrorCode |= errorstate;
 800a410:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a412:	4318      	orrs	r0, r3
 800a414:	63a0      	str	r0, [r4, #56]	; 0x38
          HAL_SD_ErrorCallback(hsd);
 800a416:	4620      	mov	r0, r4
 800a418:	f7ff fd4c 	bl	8009eb4 <HAL_SD_ErrorCallback>
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_DATA_FLAGS);
 800a41c:	6823      	ldr	r3, [r4, #0]
 800a41e:	f240 523a 	movw	r2, #1338	; 0x53a
 800a422:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 800a424:	2301      	movs	r3, #1
 800a426:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      if(((context & SD_CONTEXT_READ_SINGLE_BLOCK) != 0U) || ((context & SD_CONTEXT_READ_MULTIPLE_BLOCK) != 0U))
 800a42a:	07a9      	lsls	r1, r5, #30
      hsd->Context = SD_CONTEXT_NONE;
 800a42c:	f04f 0300 	mov.w	r3, #0
 800a430:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_SD_RxCpltCallback(hsd);
 800a432:	4620      	mov	r0, r4
      if(((context & SD_CONTEXT_READ_SINGLE_BLOCK) != 0U) || ((context & SD_CONTEXT_READ_MULTIPLE_BLOCK) != 0U))
 800a434:	d01a      	beq.n	800a46c <HAL_SD_IRQHandler+0xdc>
        HAL_SD_RxCpltCallback(hsd);
 800a436:	f7f6 f922 	bl	800067e <HAL_SD_RxCpltCallback>
 800a43a:	e7ce      	b.n	800a3da <HAL_SD_IRQHandler+0x4a>
    else if((context & SD_CONTEXT_DMA) != 0U)
 800a43c:	062a      	lsls	r2, r5, #24
 800a43e:	d5cc      	bpl.n	800a3da <HAL_SD_IRQHandler+0x4a>
      if((context & SD_CONTEXT_WRITE_MULTIPLE_BLOCK) != 0U)
 800a440:	06ab      	lsls	r3, r5, #26
 800a442:	d508      	bpl.n	800a456 <HAL_SD_IRQHandler+0xc6>
        errorstate = SDMMC_CmdStopTransfer(hsd->Instance);
 800a444:	f001 f87a 	bl	800b53c <SDMMC_CmdStopTransfer>
        if(errorstate != HAL_SD_ERROR_NONE)
 800a448:	b128      	cbz	r0, 800a456 <HAL_SD_IRQHandler+0xc6>
          hsd->ErrorCode |= errorstate;
 800a44a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a44c:	4318      	orrs	r0, r3
 800a44e:	63a0      	str	r0, [r4, #56]	; 0x38
          HAL_SD_ErrorCallback(hsd);
 800a450:	4620      	mov	r0, r4
 800a452:	f7ff fd2f 	bl	8009eb4 <HAL_SD_ErrorCallback>
      if(((context & SD_CONTEXT_READ_SINGLE_BLOCK) == 0U) && ((context & SD_CONTEXT_READ_MULTIPLE_BLOCK) == 0U))
 800a456:	07af      	lsls	r7, r5, #30
 800a458:	d1bf      	bne.n	800a3da <HAL_SD_IRQHandler+0x4a>
        hsd->Instance->DCTRL &= (uint32_t)~((uint32_t)SDIO_DCTRL_DMAEN);
 800a45a:	6822      	ldr	r2, [r4, #0]
 800a45c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800a45e:	f023 0308 	bic.w	r3, r3, #8
 800a462:	62d3      	str	r3, [r2, #44]	; 0x2c
        hsd->State = HAL_SD_STATE_READY;
 800a464:	2301      	movs	r3, #1
 800a466:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        HAL_SD_TxCpltCallback(hsd);
 800a46a:	4620      	mov	r0, r4
 800a46c:	f7f6 f903 	bl	8000676 <HAL_SD_TxCpltCallback>
 800a470:	e7b3      	b.n	800a3da <HAL_SD_IRQHandler+0x4a>
  else if((__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXFIFOHE) != RESET) && ((context & SD_CONTEXT_IT) != 0U))
 800a472:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a474:	045e      	lsls	r6, r3, #17
 800a476:	d526      	bpl.n	800a4c6 <HAL_SD_IRQHandler+0x136>
 800a478:	0729      	lsls	r1, r5, #28
 800a47a:	d524      	bpl.n	800a4c6 <HAL_SD_IRQHandler+0x136>
{
  uint32_t count, data, dataremaining;
  uint8_t* tmp;

  tmp = hsd->pTxBuffPtr;
  dataremaining = hsd->TxXferSize;
 800a47c:	6a67      	ldr	r7, [r4, #36]	; 0x24

  if (dataremaining > 0U)
 800a47e:	2f00      	cmp	r7, #0
 800a480:	d0ab      	beq.n	800a3da <HAL_SD_IRQHandler+0x4a>
  tmp = hsd->pTxBuffPtr;
 800a482:	6a26      	ldr	r6, [r4, #32]
 800a484:	1d35      	adds	r5, r6, #4
 800a486:	f106 0824 	add.w	r8, r6, #36	; 0x24
  {
    /* Write data to SDIO Tx FIFO */
    for(count = 0U; count < 8U; count++)
    {
      data = (uint32_t)(*tmp);
 800a48a:	f815 3c04 	ldrb.w	r3, [r5, #-4]
 800a48e:	9301      	str	r3, [sp, #4]
      tmp++;
      dataremaining--;
      data |= ((uint32_t)(*tmp) << 8U);
 800a490:	f815 2c03 	ldrb.w	r2, [r5, #-3]
      tmp++;
      dataremaining--;
      data |= ((uint32_t)(*tmp) << 24U);
      tmp++;
      dataremaining--;
      (void)SDIO_WriteFIFO(hsd->Instance, &data);
 800a494:	6820      	ldr	r0, [r4, #0]
      data |= ((uint32_t)(*tmp) << 8U);
 800a496:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800a49a:	9301      	str	r3, [sp, #4]
      data |= ((uint32_t)(*tmp) << 16U);
 800a49c:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 800a4a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a4a4:	9301      	str	r3, [sp, #4]
      data |= ((uint32_t)(*tmp) << 24U);
 800a4a6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
      (void)SDIO_WriteFIFO(hsd->Instance, &data);
 800a4aa:	a901      	add	r1, sp, #4
      data |= ((uint32_t)(*tmp) << 24U);
 800a4ac:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    for(count = 0U; count < 8U; count++)
 800a4b0:	3504      	adds	r5, #4
      data |= ((uint32_t)(*tmp) << 24U);
 800a4b2:	9301      	str	r3, [sp, #4]
      (void)SDIO_WriteFIFO(hsd->Instance, &data);
 800a4b4:	f000 fede 	bl	800b274 <SDIO_WriteFIFO>
    for(count = 0U; count < 8U; count++)
 800a4b8:	4545      	cmp	r5, r8
 800a4ba:	d1e6      	bne.n	800a48a <HAL_SD_IRQHandler+0xfa>
      tmp++;
 800a4bc:	3620      	adds	r6, #32
      dataremaining--;
 800a4be:	3f20      	subs	r7, #32
    }

    hsd->pTxBuffPtr = tmp;
 800a4c0:	6226      	str	r6, [r4, #32]
    hsd->TxXferSize = dataremaining;
 800a4c2:	6267      	str	r7, [r4, #36]	; 0x24
  }
}
 800a4c4:	e789      	b.n	800a3da <HAL_SD_IRQHandler+0x4a>
  else if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_RXOVERR | SDIO_FLAG_TXUNDERR | SDIO_FLAG_STBITERR) != RESET)
 800a4c6:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800a4c8:	f240 233a 	movw	r3, #570	; 0x23a
 800a4cc:	421a      	tst	r2, r3
 800a4ce:	d084      	beq.n	800a3da <HAL_SD_IRQHandler+0x4a>
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL) != RESET)
 800a4d0:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a4d2:	079a      	lsls	r2, r3, #30
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_CRC_FAIL;
 800a4d4:	bf42      	ittt	mi
 800a4d6:	6ba3      	ldrmi	r3, [r4, #56]	; 0x38
 800a4d8:	f043 0302 	orrmi.w	r3, r3, #2
 800a4dc:	63a3      	strmi	r3, [r4, #56]	; 0x38
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT) != RESET)
 800a4de:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a4e0:	071b      	lsls	r3, r3, #28
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_TIMEOUT;
 800a4e2:	bf42      	ittt	mi
 800a4e4:	6ba3      	ldrmi	r3, [r4, #56]	; 0x38
 800a4e6:	f043 0308 	orrmi.w	r3, r3, #8
 800a4ea:	63a3      	strmi	r3, [r4, #56]	; 0x38
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXOVERR) != RESET)
 800a4ec:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a4ee:	069f      	lsls	r7, r3, #26
      hsd->ErrorCode |= HAL_SD_ERROR_RX_OVERRUN;
 800a4f0:	bf42      	ittt	mi
 800a4f2:	6ba3      	ldrmi	r3, [r4, #56]	; 0x38
 800a4f4:	f043 0320 	orrmi.w	r3, r3, #32
 800a4f8:	63a3      	strmi	r3, [r4, #56]	; 0x38
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR) != RESET)
 800a4fa:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a4fc:	06de      	lsls	r6, r3, #27
      hsd->ErrorCode |= HAL_SD_ERROR_TX_UNDERRUN;
 800a4fe:	bf42      	ittt	mi
 800a500:	6ba3      	ldrmi	r3, [r4, #56]	; 0x38
 800a502:	f043 0310 	orrmi.w	r3, r3, #16
 800a506:	63a3      	strmi	r3, [r4, #56]	; 0x38
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_STBITERR) != RESET)
 800a508:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a50a:	0599      	lsls	r1, r3, #22
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_TIMEOUT;
 800a50c:	bf42      	ittt	mi
 800a50e:	6ba3      	ldrmi	r3, [r4, #56]	; 0x38
 800a510:	f043 0308 	orrmi.w	r3, r3, #8
 800a514:	63a3      	strmi	r3, [r4, #56]	; 0x38
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_DATA_FLAGS | SDIO_FLAG_STBITERR);
 800a516:	f240 733a 	movw	r3, #1850	; 0x73a
 800a51a:	6383      	str	r3, [r0, #56]	; 0x38
    __HAL_SD_DISABLE_IT(hsd, SDIO_IT_DATAEND | SDIO_IT_DCRCFAIL | SDIO_IT_DTIMEOUT|\
 800a51c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800a51e:	f423 734e 	bic.w	r3, r3, #824	; 0x338
 800a522:	f023 0302 	bic.w	r3, r3, #2
 800a526:	63c3      	str	r3, [r0, #60]	; 0x3c
    hsd->ErrorCode |= SDMMC_CmdStopTransfer(hsd->Instance);
 800a528:	f001 f808 	bl	800b53c <SDMMC_CmdStopTransfer>
 800a52c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    if((context & SD_CONTEXT_IT) != 0U)
 800a52e:	072a      	lsls	r2, r5, #28
    hsd->ErrorCode |= SDMMC_CmdStopTransfer(hsd->Instance);
 800a530:	ea40 0003 	orr.w	r0, r0, r3
 800a534:	63a0      	str	r0, [r4, #56]	; 0x38
    if((context & SD_CONTEXT_IT) != 0U)
 800a536:	d508      	bpl.n	800a54a <HAL_SD_IRQHandler+0x1ba>
      hsd->State = HAL_SD_STATE_READY;
 800a538:	2301      	movs	r3, #1
 800a53a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 800a53e:	2300      	movs	r3, #0
 800a540:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_SD_ErrorCallback(hsd);
 800a542:	4620      	mov	r0, r4
 800a544:	f7ff fcb6 	bl	8009eb4 <HAL_SD_ErrorCallback>
 800a548:	e747      	b.n	800a3da <HAL_SD_IRQHandler+0x4a>
    else if((context & SD_CONTEXT_DMA) != 0U)
 800a54a:	062b      	lsls	r3, r5, #24
 800a54c:	f57f af45 	bpl.w	800a3da <HAL_SD_IRQHandler+0x4a>
      if(((context & SD_CONTEXT_WRITE_SINGLE_BLOCK) != 0U) || ((context & SD_CONTEXT_WRITE_MULTIPLE_BLOCK) != 0U))
 800a550:	f015 0f30 	tst.w	r5, #48	; 0x30
 800a554:	d00d      	beq.n	800a572 <HAL_SD_IRQHandler+0x1e2>
        hsd->hdmatx->XferAbortCallback = SD_DMATxAbort;
 800a556:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a558:	4b11      	ldr	r3, [pc, #68]	; (800a5a0 <HAL_SD_IRQHandler+0x210>)
 800a55a:	6503      	str	r3, [r0, #80]	; 0x50
        if(HAL_DMA_Abort_IT(hsd->hdmatx) != HAL_OK)
 800a55c:	f7fd fd96 	bl	800808c <HAL_DMA_Abort_IT>
 800a560:	2800      	cmp	r0, #0
 800a562:	f43f af3a 	beq.w	800a3da <HAL_SD_IRQHandler+0x4a>
          SD_DMATxAbort(hsd->hdmatx);
 800a566:	6be0      	ldr	r0, [r4, #60]	; 0x3c
}
 800a568:	b002      	add	sp, #8
 800a56a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
          SD_DMARxAbort(hsd->hdmarx);
 800a56e:	f7ff beed 	b.w	800a34c <SD_DMATxAbort>
      else if(((context & SD_CONTEXT_READ_SINGLE_BLOCK) != 0U) || ((context & SD_CONTEXT_READ_MULTIPLE_BLOCK) != 0U))
 800a572:	f015 0503 	ands.w	r5, r5, #3
 800a576:	d009      	beq.n	800a58c <HAL_SD_IRQHandler+0x1fc>
        hsd->hdmarx->XferAbortCallback = SD_DMARxAbort;
 800a578:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a57a:	4b0a      	ldr	r3, [pc, #40]	; (800a5a4 <HAL_SD_IRQHandler+0x214>)
 800a57c:	6503      	str	r3, [r0, #80]	; 0x50
        if(HAL_DMA_Abort_IT(hsd->hdmarx) != HAL_OK)
 800a57e:	f7fd fd85 	bl	800808c <HAL_DMA_Abort_IT>
 800a582:	2800      	cmp	r0, #0
 800a584:	f43f af29 	beq.w	800a3da <HAL_SD_IRQHandler+0x4a>
          SD_DMARxAbort(hsd->hdmarx);
 800a588:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a58a:	e7ed      	b.n	800a568 <HAL_SD_IRQHandler+0x1d8>
        hsd->State = HAL_SD_STATE_READY;
 800a58c:	2301      	movs	r3, #1
        hsd->ErrorCode = HAL_SD_ERROR_NONE;
 800a58e:	63a5      	str	r5, [r4, #56]	; 0x38
        HAL_SD_AbortCallback(hsd);
 800a590:	4620      	mov	r0, r4
        hsd->State = HAL_SD_STATE_READY;
 800a592:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hsd->Context = SD_CONTEXT_NONE;
 800a596:	6325      	str	r5, [r4, #48]	; 0x30
        HAL_SD_AbortCallback(hsd);
 800a598:	f7f6 f869 	bl	800066e <HAL_SD_AbortCallback>
}
 800a59c:	e71d      	b.n	800a3da <HAL_SD_IRQHandler+0x4a>
 800a59e:	bf00      	nop
 800a5a0:	0800a34d 	.word	0x0800a34d
 800a5a4:	0800a5a9 	.word	0x0800a5a9

0800a5a8 <SD_DMARxAbort>:
 800a5a8:	f7ff bed0 	b.w	800a34c <SD_DMATxAbort>

0800a5ac <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800a5ac:	b538      	push	{r3, r4, r5, lr}
 800a5ae:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800a5b0:	4604      	mov	r4, r0
 800a5b2:	b1c8      	cbz	r0, 800a5e8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800a5b4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a5b8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a5bc:	b91b      	cbnz	r3, 800a5c6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800a5be:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800a5c2:	f7f7 f929 	bl	8001818 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a5c6:	2302      	movs	r3, #2
 800a5c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a5cc:	1d21      	adds	r1, r4, #4
 800a5ce:	6820      	ldr	r0, [r4, #0]
 800a5d0:	f000 fd90 	bl	800b0f4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800a5d4:	6862      	ldr	r2, [r4, #4]
 800a5d6:	6820      	ldr	r0, [r4, #0]
 800a5d8:	4629      	mov	r1, r5
 800a5da:	f000 fdc6 	bl	800b16a <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800a5de:	2301      	movs	r3, #1
 800a5e0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800a5e4:	2000      	movs	r0, #0
}
 800a5e6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a5e8:	2001      	movs	r0, #1
 800a5ea:	e7fc      	b.n	800a5e6 <HAL_SDRAM_Init+0x3a>

0800a5ec <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800a5ec:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a5ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800a5f2:	2b02      	cmp	r3, #2
{
 800a5f4:	4605      	mov	r5, r0
 800a5f6:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a5f8:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800a5fa:	d012      	beq.n	800a622 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800a5fc:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800a600:	2c01      	cmp	r4, #1
 800a602:	d10f      	bne.n	800a624 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a604:	2302      	movs	r3, #2
 800a606:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800a60a:	6828      	ldr	r0, [r5, #0]
 800a60c:	f000 fde3 	bl	800b1d6 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800a610:	6833      	ldr	r3, [r6, #0]
 800a612:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800a614:	bf06      	itte	eq
 800a616:	2305      	moveq	r3, #5
 800a618:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800a61c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800a620:	2000      	movs	r0, #0
}
 800a622:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800a624:	2001      	movs	r0, #1
 800a626:	e7fc      	b.n	800a622 <HAL_SDRAM_SendCommand+0x36>

0800a628 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800a628:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a62a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a62e:	2b02      	cmp	r3, #2
{
 800a630:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a632:	b2d8      	uxtb	r0, r3
 800a634:	d00d      	beq.n	800a652 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800a636:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a63a:	2b01      	cmp	r3, #1
 800a63c:	b2dd      	uxtb	r5, r3
 800a63e:	d109      	bne.n	800a654 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a640:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a642:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a644:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a648:	f000 fdeb 	bl	800b222 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800a64c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800a650:	2000      	movs	r0, #0
}
 800a652:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a654:	2001      	movs	r0, #1
 800a656:	e7fc      	b.n	800a652 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800a658 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800a658:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a65c:	461d      	mov	r5, r3
 800a65e:	4617      	mov	r7, r2
 800a660:	4688      	mov	r8, r1
 800a662:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a664:	f7fd fbc6 	bl	8007df4 <HAL_GetTick>
 800a668:	443d      	add	r5, r7
 800a66a:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 800a66c:	f7fd fbc2 	bl	8007df4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a670:	4b22      	ldr	r3, [pc, #136]	; (800a6fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 800a672:	681b      	ldr	r3, [r3, #0]
 800a674:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 800a678:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a67a:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a67c:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 800a67e:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a680:	6893      	ldr	r3, [r2, #8]
 800a682:	ea38 0303 	bics.w	r3, r8, r3
 800a686:	d001      	beq.n	800a68c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 800a688:	2000      	movs	r0, #0
 800a68a:	e02d      	b.n	800a6e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 800a68c:	1c7b      	adds	r3, r7, #1
 800a68e:	d0f7      	beq.n	800a680 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a690:	f7fd fbb0 	bl	8007df4 <HAL_GetTick>
 800a694:	1b40      	subs	r0, r0, r5
 800a696:	42a0      	cmp	r0, r4
 800a698:	d329      	bcc.n	800a6ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a69a:	6833      	ldr	r3, [r6, #0]
 800a69c:	685a      	ldr	r2, [r3, #4]
 800a69e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a6a2:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a6a4:	6872      	ldr	r2, [r6, #4]
 800a6a6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800a6aa:	d10a      	bne.n	800a6c2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 800a6ac:	68b2      	ldr	r2, [r6, #8]
 800a6ae:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a6b2:	d002      	beq.n	800a6ba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a6b4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a6b8:	d103      	bne.n	800a6c2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 800a6ba:	681a      	ldr	r2, [r3, #0]
 800a6bc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a6c0:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a6c2:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 800a6c4:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800a6c8:	d107      	bne.n	800a6da <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 800a6ca:	681a      	ldr	r2, [r3, #0]
 800a6cc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a6d0:	601a      	str	r2, [r3, #0]
 800a6d2:	681a      	ldr	r2, [r3, #0]
 800a6d4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a6d8:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800a6da:	2301      	movs	r3, #1
 800a6dc:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800a6e0:	2300      	movs	r3, #0
 800a6e2:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 800a6e6:	2003      	movs	r0, #3
}
 800a6e8:	b002      	add	sp, #8
 800a6ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 800a6ee:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800a6f0:	2b00      	cmp	r3, #0
      count--;
 800a6f2:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800a6f4:	bf08      	it	eq
 800a6f6:	2400      	moveq	r4, #0
      count--;
 800a6f8:	3b01      	subs	r3, #1
 800a6fa:	e7bf      	b.n	800a67c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 800a6fc:	20000098 	.word	0x20000098

0800a700 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800a700:	b538      	push	{r3, r4, r5, lr}
 800a702:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a704:	6842      	ldr	r2, [r0, #4]
 800a706:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800a70a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a70c:	d11f      	bne.n	800a74e <SPI_EndRxTransaction+0x4e>
 800a70e:	6882      	ldr	r2, [r0, #8]
 800a710:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a714:	d002      	beq.n	800a71c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a716:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a71a:	d107      	bne.n	800a72c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 800a71c:	6825      	ldr	r5, [r4, #0]
 800a71e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800a720:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 800a724:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800a728:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800a72a:	d007      	beq.n	800a73c <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a72c:	460a      	mov	r2, r1
 800a72e:	2180      	movs	r1, #128	; 0x80
 800a730:	4620      	mov	r0, r4
 800a732:	f7ff ff91 	bl	800a658 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a736:	b920      	cbnz	r0, 800a742 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800a738:	2000      	movs	r0, #0
}
 800a73a:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a73c:	460a      	mov	r2, r1
 800a73e:	2101      	movs	r1, #1
 800a740:	e7f6      	b.n	800a730 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a742:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a744:	f043 0320 	orr.w	r3, r3, #32
 800a748:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800a74a:	2003      	movs	r0, #3
 800a74c:	e7f5      	b.n	800a73a <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a74e:	460a      	mov	r2, r1
 800a750:	2101      	movs	r1, #1
 800a752:	e7ee      	b.n	800a732 <SPI_EndRxTransaction+0x32>

0800a754 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800a754:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a756:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a758:	4a12      	ldr	r2, [pc, #72]	; (800a7a4 <SPI_EndRxTxTransaction+0x50>)
 800a75a:	6815      	ldr	r5, [r2, #0]
 800a75c:	4a12      	ldr	r2, [pc, #72]	; (800a7a8 <SPI_EndRxTxTransaction+0x54>)
 800a75e:	fbb5 f5f2 	udiv	r5, r5, r2
 800a762:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800a766:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a768:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a76a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a76c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800a770:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a772:	d10b      	bne.n	800a78c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a774:	460a      	mov	r2, r1
 800a776:	2180      	movs	r1, #128	; 0x80
 800a778:	f7ff ff6e 	bl	800a658 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a77c:	b178      	cbz	r0, 800a79e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a77e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a780:	f043 0320 	orr.w	r3, r3, #32
 800a784:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800a786:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800a788:	b003      	add	sp, #12
 800a78a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 800a78c:	9b01      	ldr	r3, [sp, #4]
 800a78e:	b133      	cbz	r3, 800a79e <SPI_EndRxTxTransaction+0x4a>
      count--;
 800a790:	9b01      	ldr	r3, [sp, #4]
 800a792:	3b01      	subs	r3, #1
 800a794:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a796:	6823      	ldr	r3, [r4, #0]
 800a798:	689b      	ldr	r3, [r3, #8]
 800a79a:	061b      	lsls	r3, r3, #24
 800a79c:	d4f6      	bmi.n	800a78c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800a79e:	2000      	movs	r0, #0
 800a7a0:	e7f2      	b.n	800a788 <SPI_EndRxTxTransaction+0x34>
 800a7a2:	bf00      	nop
 800a7a4:	20000098 	.word	0x20000098
 800a7a8:	016e3600 	.word	0x016e3600

0800a7ac <HAL_SPI_Init>:
{
 800a7ac:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800a7ae:	4604      	mov	r4, r0
 800a7b0:	2800      	cmp	r0, #0
 800a7b2:	d055      	beq.n	800a860 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800a7b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800a7b6:	2b00      	cmp	r3, #0
 800a7b8:	d14e      	bne.n	800a858 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a7ba:	6842      	ldr	r2, [r0, #4]
 800a7bc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800a7c0:	d000      	beq.n	800a7c4 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800a7c2:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a7c4:	2300      	movs	r3, #0
 800a7c6:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a7c8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800a7cc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a7d0:	b923      	cbnz	r3, 800a7dc <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800a7d2:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800a7d6:	4620      	mov	r0, r4
 800a7d8:	f7f6 ffb2 	bl	8001740 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800a7dc:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a7de:	68a0      	ldr	r0, [r4, #8]
 800a7e0:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800a7e2:	2302      	movs	r3, #2
 800a7e4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800a7e8:	680b      	ldr	r3, [r1, #0]
 800a7ea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a7ee:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a7f0:	6863      	ldr	r3, [r4, #4]
 800a7f2:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800a7f6:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800a7fa:	4303      	orrs	r3, r0
 800a7fc:	68e0      	ldr	r0, [r4, #12]
 800a7fe:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800a802:	4303      	orrs	r3, r0
 800a804:	6920      	ldr	r0, [r4, #16]
 800a806:	f000 0002 	and.w	r0, r0, #2
 800a80a:	4303      	orrs	r3, r0
 800a80c:	6960      	ldr	r0, [r4, #20]
 800a80e:	f000 0001 	and.w	r0, r0, #1
 800a812:	4303      	orrs	r3, r0
 800a814:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800a818:	4303      	orrs	r3, r0
 800a81a:	69e0      	ldr	r0, [r4, #28]
 800a81c:	f000 0038 	and.w	r0, r0, #56	; 0x38
 800a820:	4303      	orrs	r3, r0
 800a822:	6a20      	ldr	r0, [r4, #32]
 800a824:	f000 0080 	and.w	r0, r0, #128	; 0x80
 800a828:	4303      	orrs	r3, r0
 800a82a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a82c:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 800a830:	4303      	orrs	r3, r0
 800a832:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a834:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a836:	0c12      	lsrs	r2, r2, #16
 800a838:	f003 0310 	and.w	r3, r3, #16
 800a83c:	f002 0204 	and.w	r2, r2, #4
 800a840:	431a      	orrs	r2, r3
 800a842:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a844:	69cb      	ldr	r3, [r1, #28]
 800a846:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a84a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a84c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800a84e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a850:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800a852:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 800a856:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800a858:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800a85a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a85e:	e7b1      	b.n	800a7c4 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800a860:	2001      	movs	r0, #1
 800a862:	e7f8      	b.n	800a856 <HAL_SPI_Init+0xaa>

0800a864 <HAL_SPI_Transmit>:
{
 800a864:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a868:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800a86a:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800a86e:	2b01      	cmp	r3, #1
{
 800a870:	4604      	mov	r4, r0
 800a872:	460d      	mov	r5, r1
 800a874:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 800a876:	f000 80a1 	beq.w	800a9bc <HAL_SPI_Transmit+0x158>
 800a87a:	2301      	movs	r3, #1
 800a87c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a880:	f7fd fab8 	bl	8007df4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800a884:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800a888:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800a88a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800a88c:	b2d8      	uxtb	r0, r3
 800a88e:	f040 8093 	bne.w	800a9b8 <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 800a892:	2d00      	cmp	r5, #0
 800a894:	d05e      	beq.n	800a954 <HAL_SPI_Transmit+0xf0>
 800a896:	2f00      	cmp	r7, #0
 800a898:	d05c      	beq.n	800a954 <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a89a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800a89c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a89e:	2303      	movs	r3, #3
 800a8a0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8a4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a8a8:	f04f 0300 	mov.w	r3, #0
 800a8ac:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800a8ae:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800a8b2:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800a8b4:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800a8b6:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800a8b8:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 800a8ba:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 800a8bc:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a8be:	d107      	bne.n	800a8d0 <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 800a8c0:	681a      	ldr	r2, [r3, #0]
 800a8c2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a8c6:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800a8c8:	681a      	ldr	r2, [r3, #0]
 800a8ca:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800a8ce:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a8d0:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a8d2:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a8d4:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800a8d6:	bf5e      	ittt	pl
 800a8d8:	681a      	ldrpl	r2, [r3, #0]
 800a8da:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800a8de:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a8e0:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a8e4:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a8e6:	d141      	bne.n	800a96c <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a8e8:	b10a      	cbz	r2, 800a8ee <HAL_SPI_Transmit+0x8a>
 800a8ea:	2f01      	cmp	r7, #1
 800a8ec:	d107      	bne.n	800a8fe <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a8ee:	f835 2b02 	ldrh.w	r2, [r5], #2
 800a8f2:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800a8f4:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a8f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a8f8:	3b01      	subs	r3, #1
 800a8fa:	b29b      	uxth	r3, r3
 800a8fc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a8fe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a900:	b29b      	uxth	r3, r3
 800a902:	b9a3      	cbnz	r3, 800a92e <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800a904:	4642      	mov	r2, r8
 800a906:	4631      	mov	r1, r6
 800a908:	4620      	mov	r0, r4
 800a90a:	f7ff ff23 	bl	800a754 <SPI_EndRxTxTransaction>
 800a90e:	2800      	cmp	r0, #0
 800a910:	d14f      	bne.n	800a9b2 <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a912:	68a3      	ldr	r3, [r4, #8]
 800a914:	b933      	cbnz	r3, 800a924 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a916:	9301      	str	r3, [sp, #4]
 800a918:	6823      	ldr	r3, [r4, #0]
 800a91a:	68da      	ldr	r2, [r3, #12]
 800a91c:	9201      	str	r2, [sp, #4]
 800a91e:	689b      	ldr	r3, [r3, #8]
 800a920:	9301      	str	r3, [sp, #4]
 800a922:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a924:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800a926:	3800      	subs	r0, #0
 800a928:	bf18      	it	ne
 800a92a:	2001      	movne	r0, #1
error:
 800a92c:	e012      	b.n	800a954 <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a92e:	6822      	ldr	r2, [r4, #0]
 800a930:	6893      	ldr	r3, [r2, #8]
 800a932:	0798      	lsls	r0, r3, #30
 800a934:	d505      	bpl.n	800a942 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a936:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a938:	f833 1b02 	ldrh.w	r1, [r3], #2
 800a93c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800a93e:	6323      	str	r3, [r4, #48]	; 0x30
 800a940:	e7d9      	b.n	800a8f6 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a942:	f7fd fa57 	bl	8007df4 <HAL_GetTick>
 800a946:	eba0 0008 	sub.w	r0, r0, r8
 800a94a:	42b0      	cmp	r0, r6
 800a94c:	d30b      	bcc.n	800a966 <HAL_SPI_Transmit+0x102>
 800a94e:	1c71      	adds	r1, r6, #1
 800a950:	d0d5      	beq.n	800a8fe <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 800a952:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800a954:	2301      	movs	r3, #1
 800a956:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800a95a:	2300      	movs	r3, #0
 800a95c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a960:	b002      	add	sp, #8
 800a962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a966:	2e00      	cmp	r6, #0
 800a968:	d1c9      	bne.n	800a8fe <HAL_SPI_Transmit+0x9a>
 800a96a:	e7f2      	b.n	800a952 <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a96c:	b10a      	cbz	r2, 800a972 <HAL_SPI_Transmit+0x10e>
 800a96e:	2f01      	cmp	r7, #1
 800a970:	d108      	bne.n	800a984 <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a972:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a974:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a976:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a978:	3301      	adds	r3, #1
 800a97a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a97c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a97e:	3b01      	subs	r3, #1
 800a980:	b29b      	uxth	r3, r3
 800a982:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a984:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a986:	b29b      	uxth	r3, r3
 800a988:	2b00      	cmp	r3, #0
 800a98a:	d0bb      	beq.n	800a904 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a98c:	6823      	ldr	r3, [r4, #0]
 800a98e:	689a      	ldr	r2, [r3, #8]
 800a990:	0792      	lsls	r2, r2, #30
 800a992:	d502      	bpl.n	800a99a <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a994:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a996:	7812      	ldrb	r2, [r2, #0]
 800a998:	e7ec      	b.n	800a974 <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a99a:	f7fd fa2b 	bl	8007df4 <HAL_GetTick>
 800a99e:	eba0 0008 	sub.w	r0, r0, r8
 800a9a2:	42b0      	cmp	r0, r6
 800a9a4:	d302      	bcc.n	800a9ac <HAL_SPI_Transmit+0x148>
 800a9a6:	1c73      	adds	r3, r6, #1
 800a9a8:	d0ec      	beq.n	800a984 <HAL_SPI_Transmit+0x120>
 800a9aa:	e7d2      	b.n	800a952 <HAL_SPI_Transmit+0xee>
 800a9ac:	2e00      	cmp	r6, #0
 800a9ae:	d1e9      	bne.n	800a984 <HAL_SPI_Transmit+0x120>
 800a9b0:	e7cf      	b.n	800a952 <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800a9b2:	2320      	movs	r3, #32
 800a9b4:	6563      	str	r3, [r4, #84]	; 0x54
 800a9b6:	e7ac      	b.n	800a912 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 800a9b8:	2002      	movs	r0, #2
 800a9ba:	e7cb      	b.n	800a954 <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 800a9bc:	2002      	movs	r0, #2
 800a9be:	e7cf      	b.n	800a960 <HAL_SPI_Transmit+0xfc>

0800a9c0 <HAL_SPI_TransmitReceive>:
{
 800a9c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a9c4:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800a9c6:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 800a9ca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800a9cc:	2b01      	cmp	r3, #1
{
 800a9ce:	4604      	mov	r4, r0
 800a9d0:	460d      	mov	r5, r1
 800a9d2:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800a9d4:	f000 80e6 	beq.w	800aba4 <HAL_SPI_TransmitReceive+0x1e4>
 800a9d8:	2301      	movs	r3, #1
 800a9da:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a9de:	f7fd fa09 	bl	8007df4 <HAL_GetTick>
  tmp_state           = hspi->State;
 800a9e2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800a9e6:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800a9e8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800a9ea:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 800a9ec:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800a9ee:	d00a      	beq.n	800aa06 <HAL_SPI_TransmitReceive+0x46>
 800a9f0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800a9f4:	f040 80d4 	bne.w	800aba0 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800a9f8:	68a3      	ldr	r3, [r4, #8]
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	f040 80d0 	bne.w	800aba0 <HAL_SPI_TransmitReceive+0x1e0>
 800aa00:	2904      	cmp	r1, #4
 800aa02:	f040 80cd 	bne.w	800aba0 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800aa06:	2d00      	cmp	r5, #0
 800aa08:	d040      	beq.n	800aa8c <HAL_SPI_TransmitReceive+0xcc>
 800aa0a:	f1b9 0f00 	cmp.w	r9, #0
 800aa0e:	d03d      	beq.n	800aa8c <HAL_SPI_TransmitReceive+0xcc>
 800aa10:	2e00      	cmp	r6, #0
 800aa12:	d03b      	beq.n	800aa8c <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800aa14:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800aa18:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800aa1c:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800aa1e:	bf1c      	itt	ne
 800aa20:	2305      	movne	r3, #5
 800aa22:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aa26:	2300      	movs	r3, #0
 800aa28:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800aa2a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aa2e:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800aa30:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800aa32:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aa34:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800aa36:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800aa38:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800aa3a:	bf58      	it	pl
 800aa3c:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800aa3e:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 800aa40:	bf58      	it	pl
 800aa42:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800aa46:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800aa48:	bf58      	it	pl
 800aa4a:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800aa4c:	68e1      	ldr	r1, [r4, #12]
 800aa4e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800aa52:	d152      	bne.n	800aafa <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aa54:	b10a      	cbz	r2, 800aa5a <HAL_SPI_TransmitReceive+0x9a>
 800aa56:	2e01      	cmp	r6, #1
 800aa58:	d107      	bne.n	800aa6a <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aa5a:	f835 2b02 	ldrh.w	r2, [r5], #2
 800aa5e:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800aa60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800aa62:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800aa64:	3b01      	subs	r3, #1
 800aa66:	b29b      	uxth	r3, r3
 800aa68:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800aa6a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800aa6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aa6e:	b29b      	uxth	r3, r3
 800aa70:	b973      	cbnz	r3, 800aa90 <HAL_SPI_TransmitReceive+0xd0>
 800aa72:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800aa74:	b29b      	uxth	r3, r3
 800aa76:	b95b      	cbnz	r3, 800aa90 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800aa78:	4642      	mov	r2, r8
 800aa7a:	4639      	mov	r1, r7
 800aa7c:	4620      	mov	r0, r4
 800aa7e:	f7ff fe69 	bl	800a754 <SPI_EndRxTxTransaction>
 800aa82:	2800      	cmp	r0, #0
 800aa84:	f000 8081 	beq.w	800ab8a <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800aa88:	2320      	movs	r3, #32
 800aa8a:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800aa8c:	2001      	movs	r0, #1
 800aa8e:	e02b      	b.n	800aae8 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800aa90:	6821      	ldr	r1, [r4, #0]
 800aa92:	688b      	ldr	r3, [r1, #8]
 800aa94:	079e      	lsls	r6, r3, #30
 800aa96:	d50d      	bpl.n	800aab4 <HAL_SPI_TransmitReceive+0xf4>
 800aa98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aa9a:	b29b      	uxth	r3, r3
 800aa9c:	b153      	cbz	r3, 800aab4 <HAL_SPI_TransmitReceive+0xf4>
 800aa9e:	b14d      	cbz	r5, 800aab4 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aaa0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800aaa2:	f833 2b02 	ldrh.w	r2, [r3], #2
 800aaa6:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aaa8:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aaaa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aaac:	3b01      	subs	r3, #1
 800aaae:	b29b      	uxth	r3, r3
 800aab0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800aab2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aab4:	688a      	ldr	r2, [r1, #8]
 800aab6:	f012 0201 	ands.w	r2, r2, #1
 800aaba:	d00c      	beq.n	800aad6 <HAL_SPI_TransmitReceive+0x116>
 800aabc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800aabe:	b29b      	uxth	r3, r3
 800aac0:	b14b      	cbz	r3, 800aad6 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800aac2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800aac4:	68c9      	ldr	r1, [r1, #12]
 800aac6:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800aaca:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800aacc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800aace:	3b01      	subs	r3, #1
 800aad0:	b29b      	uxth	r3, r3
 800aad2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800aad4:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800aad6:	f7fd f98d 	bl	8007df4 <HAL_GetTick>
 800aada:	eba0 0008 	sub.w	r0, r0, r8
 800aade:	42b8      	cmp	r0, r7
 800aae0:	d3c4      	bcc.n	800aa6c <HAL_SPI_TransmitReceive+0xac>
 800aae2:	1c78      	adds	r0, r7, #1
 800aae4:	d0c2      	beq.n	800aa6c <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 800aae6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800aae8:	2301      	movs	r3, #1
 800aaea:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800aaee:	2300      	movs	r3, #0
 800aaf0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800aaf4:	b003      	add	sp, #12
 800aaf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aafa:	b10a      	cbz	r2, 800ab00 <HAL_SPI_TransmitReceive+0x140>
 800aafc:	2e01      	cmp	r6, #1
 800aafe:	d108      	bne.n	800ab12 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ab00:	782a      	ldrb	r2, [r5, #0]
 800ab02:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ab04:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ab06:	3301      	adds	r3, #1
 800ab08:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ab0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab0c:	3b01      	subs	r3, #1
 800ab0e:	b29b      	uxth	r3, r3
 800ab10:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800ab12:	2501      	movs	r5, #1
 800ab14:	e02d      	b.n	800ab72 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ab16:	6822      	ldr	r2, [r4, #0]
 800ab18:	6893      	ldr	r3, [r2, #8]
 800ab1a:	0799      	lsls	r1, r3, #30
 800ab1c:	d50e      	bpl.n	800ab3c <HAL_SPI_TransmitReceive+0x17c>
 800ab1e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab20:	b29b      	uxth	r3, r3
 800ab22:	b15b      	cbz	r3, 800ab3c <HAL_SPI_TransmitReceive+0x17c>
 800ab24:	b155      	cbz	r5, 800ab3c <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ab26:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ab28:	781b      	ldrb	r3, [r3, #0]
 800ab2a:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800ab2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ab2e:	3301      	adds	r3, #1
 800ab30:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ab32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab34:	3b01      	subs	r3, #1
 800ab36:	b29b      	uxth	r3, r3
 800ab38:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ab3a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ab3c:	6822      	ldr	r2, [r4, #0]
 800ab3e:	6891      	ldr	r1, [r2, #8]
 800ab40:	f011 0101 	ands.w	r1, r1, #1
 800ab44:	d00d      	beq.n	800ab62 <HAL_SPI_TransmitReceive+0x1a2>
 800ab46:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ab48:	b29b      	uxth	r3, r3
 800ab4a:	b153      	cbz	r3, 800ab62 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ab4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ab4e:	68d2      	ldr	r2, [r2, #12]
 800ab50:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800ab52:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ab54:	3301      	adds	r3, #1
 800ab56:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ab58:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ab5a:	3b01      	subs	r3, #1
 800ab5c:	b29b      	uxth	r3, r3
 800ab5e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ab60:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ab62:	f7fd f947 	bl	8007df4 <HAL_GetTick>
 800ab66:	eba0 0008 	sub.w	r0, r0, r8
 800ab6a:	42b8      	cmp	r0, r7
 800ab6c:	d30a      	bcc.n	800ab84 <HAL_SPI_TransmitReceive+0x1c4>
 800ab6e:	1c7b      	adds	r3, r7, #1
 800ab70:	d1b9      	bne.n	800aae6 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ab72:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ab74:	b29b      	uxth	r3, r3
 800ab76:	2b00      	cmp	r3, #0
 800ab78:	d1cd      	bne.n	800ab16 <HAL_SPI_TransmitReceive+0x156>
 800ab7a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ab7c:	b29b      	uxth	r3, r3
 800ab7e:	2b00      	cmp	r3, #0
 800ab80:	d1c9      	bne.n	800ab16 <HAL_SPI_TransmitReceive+0x156>
 800ab82:	e779      	b.n	800aa78 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ab84:	2f00      	cmp	r7, #0
 800ab86:	d1f4      	bne.n	800ab72 <HAL_SPI_TransmitReceive+0x1b2>
 800ab88:	e7ad      	b.n	800aae6 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ab8a:	68a3      	ldr	r3, [r4, #8]
 800ab8c:	2b00      	cmp	r3, #0
 800ab8e:	d1ab      	bne.n	800aae8 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ab90:	6823      	ldr	r3, [r4, #0]
 800ab92:	9001      	str	r0, [sp, #4]
 800ab94:	68da      	ldr	r2, [r3, #12]
 800ab96:	9201      	str	r2, [sp, #4]
 800ab98:	689b      	ldr	r3, [r3, #8]
 800ab9a:	9301      	str	r3, [sp, #4]
 800ab9c:	9b01      	ldr	r3, [sp, #4]
 800ab9e:	e7a3      	b.n	800aae8 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800aba0:	2002      	movs	r0, #2
 800aba2:	e7a1      	b.n	800aae8 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800aba4:	2002      	movs	r0, #2
 800aba6:	e7a5      	b.n	800aaf4 <HAL_SPI_TransmitReceive+0x134>

0800aba8 <HAL_SPI_Receive>:
{
 800aba8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800abac:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800abae:	6843      	ldr	r3, [r0, #4]
 800abb0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800abb4:	4604      	mov	r4, r0
 800abb6:	4689      	mov	r9, r1
 800abb8:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800abba:	d10c      	bne.n	800abd6 <HAL_SPI_Receive+0x2e>
 800abbc:	6883      	ldr	r3, [r0, #8]
 800abbe:	b953      	cbnz	r3, 800abd6 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800abc0:	2304      	movs	r3, #4
 800abc2:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800abc6:	4613      	mov	r3, r2
 800abc8:	9500      	str	r5, [sp, #0]
 800abca:	460a      	mov	r2, r1
 800abcc:	f7ff fef8 	bl	800a9c0 <HAL_SPI_TransmitReceive>
}
 800abd0:	b003      	add	sp, #12
 800abd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 800abd6:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800abda:	2b01      	cmp	r3, #1
 800abdc:	f000 8086 	beq.w	800acec <HAL_SPI_Receive+0x144>
 800abe0:	2301      	movs	r3, #1
 800abe2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800abe6:	f7fd f905 	bl	8007df4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800abea:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800abee:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800abf0:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800abf2:	b2d8      	uxtb	r0, r3
 800abf4:	d178      	bne.n	800ace8 <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 800abf6:	f1b9 0f00 	cmp.w	r9, #0
 800abfa:	d05c      	beq.n	800acb6 <HAL_SPI_Receive+0x10e>
 800abfc:	2f00      	cmp	r7, #0
 800abfe:	d05a      	beq.n	800acb6 <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ac00:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ac02:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ac06:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ac08:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ac0a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ac0e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ac12:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ac16:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 800ac18:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800ac1a:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 800ac1c:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ac1e:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ac20:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800ac22:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ac24:	d107      	bne.n	800ac36 <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 800ac26:	681a      	ldr	r2, [r3, #0]
 800ac28:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ac2c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800ac2e:	681a      	ldr	r2, [r3, #0]
 800ac30:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800ac34:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ac36:	681a      	ldr	r2, [r3, #0]
 800ac38:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800ac3a:	bf5e      	ittt	pl
 800ac3c:	681a      	ldrpl	r2, [r3, #0]
 800ac3e:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800ac42:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ac44:	68e3      	ldr	r3, [r4, #12]
 800ac46:	b1f3      	cbz	r3, 800ac86 <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 800ac48:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ac4a:	b29b      	uxth	r3, r3
 800ac4c:	b1fb      	cbz	r3, 800ac8e <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ac4e:	6823      	ldr	r3, [r4, #0]
 800ac50:	689a      	ldr	r2, [r3, #8]
 800ac52:	07d2      	lsls	r2, r2, #31
 800ac54:	d539      	bpl.n	800acca <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ac56:	68da      	ldr	r2, [r3, #12]
 800ac58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ac5a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ac5e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ac60:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ac62:	3b01      	subs	r3, #1
 800ac64:	b29b      	uxth	r3, r3
 800ac66:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800ac68:	e7ee      	b.n	800ac48 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ac6a:	6823      	ldr	r3, [r4, #0]
 800ac6c:	689a      	ldr	r2, [r3, #8]
 800ac6e:	07d0      	lsls	r0, r2, #31
 800ac70:	d518      	bpl.n	800aca4 <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ac72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ac74:	7b1b      	ldrb	r3, [r3, #12]
 800ac76:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ac78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ac7a:	3301      	adds	r3, #1
 800ac7c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ac7e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ac80:	3b01      	subs	r3, #1
 800ac82:	b29b      	uxth	r3, r3
 800ac84:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ac86:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ac88:	b29b      	uxth	r3, r3
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d1ed      	bne.n	800ac6a <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ac8e:	4642      	mov	r2, r8
 800ac90:	4629      	mov	r1, r5
 800ac92:	4620      	mov	r0, r4
 800ac94:	f7ff fd34 	bl	800a700 <SPI_EndRxTransaction>
 800ac98:	bb18      	cbnz	r0, 800ace2 <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ac9a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ac9c:	3800      	subs	r0, #0
 800ac9e:	bf18      	it	ne
 800aca0:	2001      	movne	r0, #1
error :
 800aca2:	e008      	b.n	800acb6 <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800aca4:	f7fd f8a6 	bl	8007df4 <HAL_GetTick>
 800aca8:	eba0 0008 	sub.w	r0, r0, r8
 800acac:	42a8      	cmp	r0, r5
 800acae:	d309      	bcc.n	800acc4 <HAL_SPI_Receive+0x11c>
 800acb0:	1c69      	adds	r1, r5, #1
 800acb2:	d0e8      	beq.n	800ac86 <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 800acb4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800acb6:	2301      	movs	r3, #1
 800acb8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800acbc:	2300      	movs	r3, #0
 800acbe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800acc2:	e785      	b.n	800abd0 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800acc4:	2d00      	cmp	r5, #0
 800acc6:	d1de      	bne.n	800ac86 <HAL_SPI_Receive+0xde>
 800acc8:	e7f4      	b.n	800acb4 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800acca:	f7fd f893 	bl	8007df4 <HAL_GetTick>
 800acce:	eba0 0008 	sub.w	r0, r0, r8
 800acd2:	42a8      	cmp	r0, r5
 800acd4:	d302      	bcc.n	800acdc <HAL_SPI_Receive+0x134>
 800acd6:	1c6b      	adds	r3, r5, #1
 800acd8:	d0b6      	beq.n	800ac48 <HAL_SPI_Receive+0xa0>
 800acda:	e7eb      	b.n	800acb4 <HAL_SPI_Receive+0x10c>
 800acdc:	2d00      	cmp	r5, #0
 800acde:	d1b3      	bne.n	800ac48 <HAL_SPI_Receive+0xa0>
 800ace0:	e7e8      	b.n	800acb4 <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ace2:	2320      	movs	r3, #32
 800ace4:	6563      	str	r3, [r4, #84]	; 0x54
 800ace6:	e7d8      	b.n	800ac9a <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 800ace8:	2002      	movs	r0, #2
 800acea:	e7e4      	b.n	800acb6 <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 800acec:	2002      	movs	r0, #2
 800acee:	e76f      	b.n	800abd0 <HAL_SPI_Receive+0x28>

0800acf0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800acf0:	4770      	bx	lr
	...

0800acf4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800acf4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800acf8:	2b01      	cmp	r3, #1
 800acfa:	d130      	bne.n	800ad5e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800acfc:	2302      	movs	r3, #2
 800acfe:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ad02:	6803      	ldr	r3, [r0, #0]
 800ad04:	68da      	ldr	r2, [r3, #12]
 800ad06:	f042 0201 	orr.w	r2, r2, #1
 800ad0a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ad0c:	4a15      	ldr	r2, [pc, #84]	; (800ad64 <HAL_TIM_Base_Start_IT+0x70>)
 800ad0e:	4293      	cmp	r3, r2
 800ad10:	d01a      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad12:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ad16:	d017      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad18:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ad1c:	4293      	cmp	r3, r2
 800ad1e:	d013      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad20:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ad24:	4293      	cmp	r3, r2
 800ad26:	d00f      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad28:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ad2c:	4293      	cmp	r3, r2
 800ad2e:	d00b      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad30:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ad34:	4293      	cmp	r3, r2
 800ad36:	d007      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad38:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ad3c:	4293      	cmp	r3, r2
 800ad3e:	d003      	beq.n	800ad48 <HAL_TIM_Base_Start_IT+0x54>
 800ad40:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ad44:	4293      	cmp	r3, r2
 800ad46:	d104      	bne.n	800ad52 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ad48:	689a      	ldr	r2, [r3, #8]
 800ad4a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ad4e:	2a06      	cmp	r2, #6
 800ad50:	d003      	beq.n	800ad5a <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800ad52:	681a      	ldr	r2, [r3, #0]
 800ad54:	f042 0201 	orr.w	r2, r2, #1
 800ad58:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800ad5a:	2000      	movs	r0, #0
}
 800ad5c:	4770      	bx	lr
    return HAL_ERROR;
 800ad5e:	2001      	movs	r0, #1
 800ad60:	4770      	bx	lr
 800ad62:	bf00      	nop
 800ad64:	40010000 	.word	0x40010000

0800ad68 <HAL_TIM_OC_DelayElapsedCallback>:
 800ad68:	4770      	bx	lr

0800ad6a <HAL_TIM_IC_CaptureCallback>:
 800ad6a:	4770      	bx	lr

0800ad6c <HAL_TIM_PWM_PulseFinishedCallback>:
 800ad6c:	4770      	bx	lr

0800ad6e <HAL_TIM_TriggerCallback>:
 800ad6e:	4770      	bx	lr

0800ad70 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800ad70:	6803      	ldr	r3, [r0, #0]
 800ad72:	691a      	ldr	r2, [r3, #16]
 800ad74:	0791      	lsls	r1, r2, #30
{
 800ad76:	b510      	push	{r4, lr}
 800ad78:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800ad7a:	d50e      	bpl.n	800ad9a <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800ad7c:	68da      	ldr	r2, [r3, #12]
 800ad7e:	0792      	lsls	r2, r2, #30
 800ad80:	d50b      	bpl.n	800ad9a <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800ad82:	f06f 0202 	mvn.w	r2, #2
 800ad86:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ad88:	2201      	movs	r2, #1
 800ad8a:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800ad8c:	699b      	ldr	r3, [r3, #24]
 800ad8e:	079b      	lsls	r3, r3, #30
 800ad90:	d077      	beq.n	800ae82 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800ad92:	f7ff ffea 	bl	800ad6a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ad96:	2300      	movs	r3, #0
 800ad98:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800ad9a:	6823      	ldr	r3, [r4, #0]
 800ad9c:	691a      	ldr	r2, [r3, #16]
 800ad9e:	0750      	lsls	r0, r2, #29
 800ada0:	d510      	bpl.n	800adc4 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800ada2:	68da      	ldr	r2, [r3, #12]
 800ada4:	0751      	lsls	r1, r2, #29
 800ada6:	d50d      	bpl.n	800adc4 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ada8:	f06f 0204 	mvn.w	r2, #4
 800adac:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800adae:	2202      	movs	r2, #2
 800adb0:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800adb2:	699b      	ldr	r3, [r3, #24]
 800adb4:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800adb8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800adba:	d068      	beq.n	800ae8e <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800adbc:	f7ff ffd5 	bl	800ad6a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800adc0:	2300      	movs	r3, #0
 800adc2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800adc4:	6823      	ldr	r3, [r4, #0]
 800adc6:	691a      	ldr	r2, [r3, #16]
 800adc8:	0712      	lsls	r2, r2, #28
 800adca:	d50f      	bpl.n	800adec <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800adcc:	68da      	ldr	r2, [r3, #12]
 800adce:	0710      	lsls	r0, r2, #28
 800add0:	d50c      	bpl.n	800adec <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800add2:	f06f 0208 	mvn.w	r2, #8
 800add6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800add8:	2204      	movs	r2, #4
 800adda:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800addc:	69db      	ldr	r3, [r3, #28]
 800adde:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ade0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800ade2:	d05a      	beq.n	800ae9a <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800ade4:	f7ff ffc1 	bl	800ad6a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ade8:	2300      	movs	r3, #0
 800adea:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800adec:	6823      	ldr	r3, [r4, #0]
 800adee:	691a      	ldr	r2, [r3, #16]
 800adf0:	06d2      	lsls	r2, r2, #27
 800adf2:	d510      	bpl.n	800ae16 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800adf4:	68da      	ldr	r2, [r3, #12]
 800adf6:	06d0      	lsls	r0, r2, #27
 800adf8:	d50d      	bpl.n	800ae16 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800adfa:	f06f 0210 	mvn.w	r2, #16
 800adfe:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ae00:	2208      	movs	r2, #8
 800ae02:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ae04:	69db      	ldr	r3, [r3, #28]
 800ae06:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ae0a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ae0c:	d04b      	beq.n	800aea6 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800ae0e:	f7ff ffac 	bl	800ad6a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ae12:	2300      	movs	r3, #0
 800ae14:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800ae16:	6823      	ldr	r3, [r4, #0]
 800ae18:	691a      	ldr	r2, [r3, #16]
 800ae1a:	07d1      	lsls	r1, r2, #31
 800ae1c:	d508      	bpl.n	800ae30 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800ae1e:	68da      	ldr	r2, [r3, #12]
 800ae20:	07d2      	lsls	r2, r2, #31
 800ae22:	d505      	bpl.n	800ae30 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800ae24:	f06f 0201 	mvn.w	r2, #1
 800ae28:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800ae2a:	4620      	mov	r0, r4
 800ae2c:	f7f6 fa44 	bl	80012b8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800ae30:	6823      	ldr	r3, [r4, #0]
 800ae32:	691a      	ldr	r2, [r3, #16]
 800ae34:	0610      	lsls	r0, r2, #24
 800ae36:	d508      	bpl.n	800ae4a <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800ae38:	68da      	ldr	r2, [r3, #12]
 800ae3a:	0611      	lsls	r1, r2, #24
 800ae3c:	d505      	bpl.n	800ae4a <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800ae3e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ae42:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800ae44:	4620      	mov	r0, r4
 800ae46:	f000 f8c8 	bl	800afda <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800ae4a:	6823      	ldr	r3, [r4, #0]
 800ae4c:	691a      	ldr	r2, [r3, #16]
 800ae4e:	0652      	lsls	r2, r2, #25
 800ae50:	d508      	bpl.n	800ae64 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800ae52:	68da      	ldr	r2, [r3, #12]
 800ae54:	0650      	lsls	r0, r2, #25
 800ae56:	d505      	bpl.n	800ae64 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800ae58:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ae5c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800ae5e:	4620      	mov	r0, r4
 800ae60:	f7ff ff85 	bl	800ad6e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ae64:	6823      	ldr	r3, [r4, #0]
 800ae66:	691a      	ldr	r2, [r3, #16]
 800ae68:	0691      	lsls	r1, r2, #26
 800ae6a:	d522      	bpl.n	800aeb2 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800ae6c:	68da      	ldr	r2, [r3, #12]
 800ae6e:	0692      	lsls	r2, r2, #26
 800ae70:	d51f      	bpl.n	800aeb2 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ae72:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800ae76:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ae78:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800ae7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800ae7e:	f000 b8ab 	b.w	800afd8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800ae82:	f7ff ff71 	bl	800ad68 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ae86:	4620      	mov	r0, r4
 800ae88:	f7ff ff70 	bl	800ad6c <HAL_TIM_PWM_PulseFinishedCallback>
 800ae8c:	e783      	b.n	800ad96 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ae8e:	f7ff ff6b 	bl	800ad68 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ae92:	4620      	mov	r0, r4
 800ae94:	f7ff ff6a 	bl	800ad6c <HAL_TIM_PWM_PulseFinishedCallback>
 800ae98:	e792      	b.n	800adc0 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ae9a:	f7ff ff65 	bl	800ad68 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ae9e:	4620      	mov	r0, r4
 800aea0:	f7ff ff64 	bl	800ad6c <HAL_TIM_PWM_PulseFinishedCallback>
 800aea4:	e7a0      	b.n	800ade8 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800aea6:	f7ff ff5f 	bl	800ad68 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800aeaa:	4620      	mov	r0, r4
 800aeac:	f7ff ff5e 	bl	800ad6c <HAL_TIM_PWM_PulseFinishedCallback>
 800aeb0:	e7af      	b.n	800ae12 <HAL_TIM_IRQHandler+0xa2>
}
 800aeb2:	bd10      	pop	{r4, pc}

0800aeb4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800aeb4:	4a30      	ldr	r2, [pc, #192]	; (800af78 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800aeb6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800aeb8:	4290      	cmp	r0, r2
 800aeba:	d012      	beq.n	800aee2 <TIM_Base_SetConfig+0x2e>
 800aebc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800aec0:	d00f      	beq.n	800aee2 <TIM_Base_SetConfig+0x2e>
 800aec2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800aec6:	4290      	cmp	r0, r2
 800aec8:	d00b      	beq.n	800aee2 <TIM_Base_SetConfig+0x2e>
 800aeca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800aece:	4290      	cmp	r0, r2
 800aed0:	d007      	beq.n	800aee2 <TIM_Base_SetConfig+0x2e>
 800aed2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800aed6:	4290      	cmp	r0, r2
 800aed8:	d003      	beq.n	800aee2 <TIM_Base_SetConfig+0x2e>
 800aeda:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800aede:	4290      	cmp	r0, r2
 800aee0:	d119      	bne.n	800af16 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800aee2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800aee4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800aee8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800aeea:	4a23      	ldr	r2, [pc, #140]	; (800af78 <TIM_Base_SetConfig+0xc4>)
 800aeec:	4290      	cmp	r0, r2
 800aeee:	d029      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800aef0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800aef4:	d026      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800aef6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800aefa:	4290      	cmp	r0, r2
 800aefc:	d022      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800aefe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800af02:	4290      	cmp	r0, r2
 800af04:	d01e      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af06:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800af0a:	4290      	cmp	r0, r2
 800af0c:	d01a      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af0e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800af12:	4290      	cmp	r0, r2
 800af14:	d016      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af16:	4a19      	ldr	r2, [pc, #100]	; (800af7c <TIM_Base_SetConfig+0xc8>)
 800af18:	4290      	cmp	r0, r2
 800af1a:	d013      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af1c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800af20:	4290      	cmp	r0, r2
 800af22:	d00f      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af24:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800af28:	4290      	cmp	r0, r2
 800af2a:	d00b      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af2c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800af30:	4290      	cmp	r0, r2
 800af32:	d007      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af34:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800af38:	4290      	cmp	r0, r2
 800af3a:	d003      	beq.n	800af44 <TIM_Base_SetConfig+0x90>
 800af3c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800af40:	4290      	cmp	r0, r2
 800af42:	d103      	bne.n	800af4c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800af44:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800af46:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800af4a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800af4c:	694a      	ldr	r2, [r1, #20]
 800af4e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800af52:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800af54:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800af56:	688b      	ldr	r3, [r1, #8]
 800af58:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800af5a:	680b      	ldr	r3, [r1, #0]
 800af5c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800af5e:	4b06      	ldr	r3, [pc, #24]	; (800af78 <TIM_Base_SetConfig+0xc4>)
 800af60:	4298      	cmp	r0, r3
 800af62:	d003      	beq.n	800af6c <TIM_Base_SetConfig+0xb8>
 800af64:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800af68:	4298      	cmp	r0, r3
 800af6a:	d101      	bne.n	800af70 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800af6c:	690b      	ldr	r3, [r1, #16]
 800af6e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800af70:	2301      	movs	r3, #1
 800af72:	6143      	str	r3, [r0, #20]
}
 800af74:	4770      	bx	lr
 800af76:	bf00      	nop
 800af78:	40010000 	.word	0x40010000
 800af7c:	40014000 	.word	0x40014000

0800af80 <HAL_TIM_Base_Init>:
{
 800af80:	b510      	push	{r4, lr}
  if (htim == NULL)
 800af82:	4604      	mov	r4, r0
 800af84:	b330      	cbz	r0, 800afd4 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800af86:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800af8a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800af8e:	b91b      	cbnz	r3, 800af98 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800af90:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800af94:	f7ff feac 	bl	800acf0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800af98:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800af9a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800af9c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800afa0:	1d21      	adds	r1, r4, #4
 800afa2:	f7ff ff87 	bl	800aeb4 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800afa6:	2301      	movs	r3, #1
 800afa8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800afac:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800afae:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800afb2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800afb6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800afba:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800afbe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800afc2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800afc6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800afca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800afce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800afd2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800afd4:	2001      	movs	r0, #1
 800afd6:	e7fc      	b.n	800afd2 <HAL_TIM_Base_Init+0x52>

0800afd8 <HAL_TIMEx_CommutCallback>:
 800afd8:	4770      	bx	lr

0800afda <HAL_TIMEx_BreakCallback>:
 800afda:	4770      	bx	lr

0800afdc <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800afdc:	6802      	ldr	r2, [r0, #0]
 800afde:	68c1      	ldr	r1, [r0, #12]
 800afe0:	6913      	ldr	r3, [r2, #16]
 800afe2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800afe6:	430b      	orrs	r3, r1
{
 800afe8:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800afea:	6113      	str	r3, [r2, #16]
{
 800afec:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800afee:	6883      	ldr	r3, [r0, #8]
 800aff0:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 800aff2:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800aff4:	4303      	orrs	r3, r0
 800aff6:	6968      	ldr	r0, [r5, #20]
 800aff8:	4303      	orrs	r3, r0
 800affa:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 800affc:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 800b000:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b004:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 800b006:	430b      	orrs	r3, r1
 800b008:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800b00a:	6953      	ldr	r3, [r2, #20]
 800b00c:	69a9      	ldr	r1, [r5, #24]
 800b00e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b012:	430b      	orrs	r3, r1
 800b014:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800b016:	4b1f      	ldr	r3, [pc, #124]	; (800b094 <UART_SetConfig+0xb8>)
 800b018:	429a      	cmp	r2, r3
 800b01a:	d003      	beq.n	800b024 <UART_SetConfig+0x48>
 800b01c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b020:	429a      	cmp	r2, r3
 800b022:	d123      	bne.n	800b06c <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800b024:	f7fe fb86 	bl	8009734 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b028:	69eb      	ldr	r3, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800b02a:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b02c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800b030:	e9d5 4600 	ldrd	r4, r6, [r5]
 800b034:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b038:	d11b      	bne.n	800b072 <UART_SetConfig+0x96>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800b03a:	19b2      	adds	r2, r6, r6
 800b03c:	f04f 0300 	mov.w	r3, #0
 800b040:	415b      	adcs	r3, r3
 800b042:	f7f5 f92d 	bl	80002a0 <__aeabi_uldivmod>
 800b046:	2164      	movs	r1, #100	; 0x64
 800b048:	fbb0 f5f1 	udiv	r5, r0, r1
 800b04c:	fb01 0315 	mls	r3, r1, r5, r0
 800b050:	00db      	lsls	r3, r3, #3
 800b052:	3332      	adds	r3, #50	; 0x32
 800b054:	fbb3 f3f1 	udiv	r3, r3, r1
 800b058:	f003 0207 	and.w	r2, r3, #7
 800b05c:	005b      	lsls	r3, r3, #1
 800b05e:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 800b062:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800b066:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800b068:	60a3      	str	r3, [r4, #8]
  }
}
 800b06a:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 800b06c:	f7fe fb52 	bl	8009714 <HAL_RCC_GetPCLK1Freq>
 800b070:	e7da      	b.n	800b028 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800b072:	00b2      	lsls	r2, r6, #2
 800b074:	0fb3      	lsrs	r3, r6, #30
 800b076:	f7f5 f913 	bl	80002a0 <__aeabi_uldivmod>
 800b07a:	2264      	movs	r2, #100	; 0x64
 800b07c:	fbb0 f1f2 	udiv	r1, r0, r2
 800b080:	fb02 0311 	mls	r3, r2, r1, r0
 800b084:	011b      	lsls	r3, r3, #4
 800b086:	3332      	adds	r3, #50	; 0x32
 800b088:	fbb3 f3f2 	udiv	r3, r3, r2
 800b08c:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800b090:	e7ea      	b.n	800b068 <UART_SetConfig+0x8c>
 800b092:	bf00      	nop
 800b094:	40011000 	.word	0x40011000

0800b098 <HAL_UART_Init>:
{
 800b098:	b510      	push	{r4, lr}
  if (huart == NULL)
 800b09a:	4604      	mov	r4, r0
 800b09c:	b340      	cbz	r0, 800b0f0 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800b09e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b0a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b0a6:	b91b      	cbnz	r3, 800b0b0 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800b0a8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 800b0ac:	f7f6 fb7e 	bl	80017ac <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800b0b0:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800b0b2:	2324      	movs	r3, #36	; 0x24
 800b0b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 800b0b8:	68d3      	ldr	r3, [r2, #12]
 800b0ba:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b0be:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800b0c0:	4620      	mov	r0, r4
 800b0c2:	f7ff ff8b 	bl	800afdc <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800b0c6:	6823      	ldr	r3, [r4, #0]
 800b0c8:	691a      	ldr	r2, [r3, #16]
 800b0ca:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b0ce:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800b0d0:	695a      	ldr	r2, [r3, #20]
 800b0d2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b0d6:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800b0d8:	68da      	ldr	r2, [r3, #12]
 800b0da:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b0de:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b0e0:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800b0e2:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b0e4:	6420      	str	r0, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 800b0e6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 800b0ea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 800b0ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b0f0:	2001      	movs	r0, #1
 800b0f2:	e7fc      	b.n	800b0ee <HAL_UART_Init+0x56>

0800b0f4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800b0f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b0f8:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b0fc:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b0fe:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800b102:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800b106:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800b10a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800b10e:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b110:	b9a2      	cbnz	r2, 800b13c <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b112:	ea43 0209 	orr.w	r2, r3, r9
 800b116:	432a      	orrs	r2, r5
 800b118:	ea42 0308 	orr.w	r3, r2, r8
 800b11c:	6801      	ldr	r1, [r0, #0]
 800b11e:	ea43 030e 	orr.w	r3, r3, lr
 800b122:	ea43 030c 	orr.w	r3, r3, ip
 800b126:	433b      	orrs	r3, r7
 800b128:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800b12c:	4333      	orrs	r3, r6
 800b12e:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800b132:	430b      	orrs	r3, r1
 800b134:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800b136:	2000      	movs	r0, #0
 800b138:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b13c:	6802      	ldr	r2, [r0, #0]
 800b13e:	ea43 0309 	orr.w	r3, r3, r9
 800b142:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800b146:	4313      	orrs	r3, r2
 800b148:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b14a:	ea45 0308 	orr.w	r3, r5, r8
 800b14e:	6842      	ldr	r2, [r0, #4]
 800b150:	ea43 030e 	orr.w	r3, r3, lr
 800b154:	ea43 030c 	orr.w	r3, r3, ip
 800b158:	433b      	orrs	r3, r7
 800b15a:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800b15e:	4333      	orrs	r3, r6
 800b160:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800b164:	4313      	orrs	r3, r2
 800b166:	6043      	str	r3, [r0, #4]
 800b168:	e7e5      	b.n	800b136 <FMC_SDRAM_Init+0x42>

0800b16a <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b16a:	68cb      	ldr	r3, [r1, #12]
 800b16c:	f103 3cff 	add.w	ip, r3, #4294967295
 800b170:	694b      	ldr	r3, [r1, #20]
{
 800b172:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b174:	680f      	ldr	r7, [r1, #0]
 800b176:	684c      	ldr	r4, [r1, #4]
 800b178:	688e      	ldr	r6, [r1, #8]
 800b17a:	690d      	ldr	r5, [r1, #16]
 800b17c:	6989      	ldr	r1, [r1, #24]
 800b17e:	3b01      	subs	r3, #1
 800b180:	051b      	lsls	r3, r3, #20
 800b182:	3c01      	subs	r4, #1
 800b184:	3e01      	subs	r6, #1
 800b186:	3d01      	subs	r5, #1
 800b188:	3901      	subs	r1, #1
 800b18a:	3f01      	subs	r7, #1
 800b18c:	0124      	lsls	r4, r4, #4
 800b18e:	0236      	lsls	r6, r6, #8
 800b190:	042d      	lsls	r5, r5, #16
 800b192:	0609      	lsls	r1, r1, #24
 800b194:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800b198:	b95a      	cbnz	r2, 800b1b2 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b19a:	433b      	orrs	r3, r7
 800b19c:	4323      	orrs	r3, r4
 800b19e:	6882      	ldr	r2, [r0, #8]
 800b1a0:	4333      	orrs	r3, r6
 800b1a2:	432b      	orrs	r3, r5
 800b1a4:	430b      	orrs	r3, r1
 800b1a6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800b1aa:	4313      	orrs	r3, r2
 800b1ac:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800b1ae:	2000      	movs	r0, #0
 800b1b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b1b2:	6882      	ldr	r2, [r0, #8]
 800b1b4:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800b1b8:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800b1bc:	431a      	orrs	r2, r3
 800b1be:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b1c0:	ea44 0306 	orr.w	r3, r4, r6
 800b1c4:	68c2      	ldr	r2, [r0, #12]
 800b1c6:	433b      	orrs	r3, r7
 800b1c8:	432b      	orrs	r3, r5
 800b1ca:	430b      	orrs	r3, r1
 800b1cc:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800b1d0:	4313      	orrs	r3, r2
 800b1d2:	60c3      	str	r3, [r0, #12]
 800b1d4:	e7eb      	b.n	800b1ae <FMC_SDRAM_Timing_Init+0x44>

0800b1d6 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b1d6:	b570      	push	{r4, r5, r6, lr}
 800b1d8:	4604      	mov	r4, r0
 800b1da:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b1dc:	6902      	ldr	r2, [r0, #16]
 800b1de:	e9d1 3000 	ldrd	r3, r0, [r1]
 800b1e2:	4303      	orrs	r3, r0
 800b1e4:	68c8      	ldr	r0, [r1, #12]
 800b1e6:	0d92      	lsrs	r2, r2, #22
 800b1e8:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800b1ec:	0592      	lsls	r2, r2, #22
 800b1ee:	4313      	orrs	r3, r2
 800b1f0:	688a      	ldr	r2, [r1, #8]
 800b1f2:	3a01      	subs	r2, #1
 800b1f4:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b1f8:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800b1fa:	f7fc fdfb 	bl	8007df4 <HAL_GetTick>
 800b1fe:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b200:	69a3      	ldr	r3, [r4, #24]
 800b202:	f013 0320 	ands.w	r3, r3, #32
 800b206:	d101      	bne.n	800b20c <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800b208:	4618      	mov	r0, r3
 800b20a:	e003      	b.n	800b214 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800b20c:	1c6b      	adds	r3, r5, #1
 800b20e:	d0f7      	beq.n	800b200 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b210:	b90d      	cbnz	r5, 800b216 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800b212:	2003      	movs	r0, #3
}
 800b214:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b216:	f7fc fded 	bl	8007df4 <HAL_GetTick>
 800b21a:	1b80      	subs	r0, r0, r6
 800b21c:	42a8      	cmp	r0, r5
 800b21e:	d9ef      	bls.n	800b200 <FMC_SDRAM_SendCommand+0x2a>
 800b220:	e7f7      	b.n	800b212 <FMC_SDRAM_SendCommand+0x3c>

0800b222 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b222:	6943      	ldr	r3, [r0, #20]
 800b224:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800b228:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800b22c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800b230:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800b232:	2000      	movs	r0, #0
 800b234:	4770      	bx	lr

0800b236 <SDIO_Init>:
  * @param  SDIOx: Pointer to SDMMC register base
  * @param  Init: SDMMC initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_Init(SDIO_TypeDef *SDIOx, SDIO_InitTypeDef Init)
{
 800b236:	b084      	sub	sp, #16
 800b238:	b510      	push	{r4, lr}
 800b23a:	ac03      	add	r4, sp, #12
 800b23c:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  assert_param(IS_SDIO_BUS_WIDE(Init.BusWide));
  assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(Init.HardwareFlowControl));
  assert_param(IS_SDIO_CLKDIV(Init.ClockDiv));
  
  /* Set SDMMC configuration parameters */
  tmpreg |= (Init.ClockEdge           |\
 800b240:	460b      	mov	r3, r1
 800b242:	9904      	ldr	r1, [sp, #16]
             Init.HardwareFlowControl |\
             Init.ClockDiv
             ); 
  
  /* Write to SDMMC CLKCR */
  MODIFY_REG(SDIOx->CLKCR, CLKCR_CLEAR_MASK, tmpreg);  
 800b244:	6842      	ldr	r2, [r0, #4]
  tmpreg |= (Init.ClockEdge           |\
 800b246:	430b      	orrs	r3, r1
             Init.ClockBypass         |\
 800b248:	9905      	ldr	r1, [sp, #20]
 800b24a:	430b      	orrs	r3, r1
             Init.ClockPowerSave      |\
 800b24c:	9906      	ldr	r1, [sp, #24]
 800b24e:	430b      	orrs	r3, r1
             Init.BusWide             |\
 800b250:	9907      	ldr	r1, [sp, #28]
 800b252:	430b      	orrs	r3, r1
             Init.HardwareFlowControl |\
 800b254:	9908      	ldr	r1, [sp, #32]

  return HAL_OK;
}
 800b256:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  MODIFY_REG(SDIOx->CLKCR, CLKCR_CLEAR_MASK, tmpreg);  
 800b25a:	f422 42fd 	bic.w	r2, r2, #32384	; 0x7e80
             Init.HardwareFlowControl |\
 800b25e:	430b      	orrs	r3, r1
  MODIFY_REG(SDIOx->CLKCR, CLKCR_CLEAR_MASK, tmpreg);  
 800b260:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800b264:	4313      	orrs	r3, r2
 800b266:	6043      	str	r3, [r0, #4]
}
 800b268:	b004      	add	sp, #16
 800b26a:	2000      	movs	r0, #0
 800b26c:	4770      	bx	lr

0800b26e <SDIO_ReadFIFO>:
  * @retval HAL status
  */
uint32_t SDIO_ReadFIFO(SDIO_TypeDef *SDIOx)
{
  /* Read data from Rx FIFO */ 
  return (SDIOx->FIFO);
 800b26e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
}
 800b272:	4770      	bx	lr

0800b274 <SDIO_WriteFIFO>:
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_WriteFIFO(SDIO_TypeDef *SDIOx, uint32_t *pWriteData)
{ 
  /* Write data to FIFO */ 
  SDIOx->FIFO = *pWriteData;
 800b274:	680b      	ldr	r3, [r1, #0]
 800b276:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80

  return HAL_OK;
}
 800b27a:	2000      	movs	r0, #0
 800b27c:	4770      	bx	lr

0800b27e <SDIO_PowerState_ON>:
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_PowerState_ON(SDIO_TypeDef *SDIOx)
{  
  /* Set power state to ON */ 
  SDIOx->POWER = SDIO_POWER_PWRCTRL;
 800b27e:	2303      	movs	r3, #3
 800b280:	6003      	str	r3, [r0, #0]

  return HAL_OK;
}
 800b282:	2000      	movs	r0, #0
 800b284:	4770      	bx	lr

0800b286 <SDIO_GetPowerState>:
  *            - 0x02: Power UP
  *            - 0x03: Power ON 
  */
uint32_t SDIO_GetPowerState(SDIO_TypeDef *SDIOx)  
{
  return (SDIOx->POWER & SDIO_POWER_PWRCTRL);
 800b286:	6800      	ldr	r0, [r0, #0]
}
 800b288:	f000 0003 	and.w	r0, r0, #3
 800b28c:	4770      	bx	lr

0800b28e <SDIO_SendCommand>:
  assert_param(IS_SDIO_RESPONSE(Command->Response));
  assert_param(IS_SDIO_WAIT(Command->WaitForInterrupt));
  assert_param(IS_SDIO_CPSM(Command->CPSM));

  /* Set the SDMMC Argument value */
  SDIOx->ARG = Command->Argument;
 800b28e:	680b      	ldr	r3, [r1, #0]
{
 800b290:	b510      	push	{r4, lr}
  SDIOx->ARG = Command->Argument;
 800b292:	6083      	str	r3, [r0, #8]

  /* Set SDMMC command parameters */
  tmpreg |= (uint32_t)(Command->CmdIndex         |\
 800b294:	e9d1 3401 	ldrd	r3, r4, [r1, #4]
                       Command->Response         |\
                       Command->WaitForInterrupt |\
                       Command->CPSM);
  
  /* Write to SDMMC CMD register */
  MODIFY_REG(SDIOx->CMD, CMD_CLEAR_MASK, tmpreg); 
 800b298:	68c2      	ldr	r2, [r0, #12]
  tmpreg |= (uint32_t)(Command->CmdIndex         |\
 800b29a:	4323      	orrs	r3, r4
                       Command->Response         |\
 800b29c:	68cc      	ldr	r4, [r1, #12]
                       Command->WaitForInterrupt |\
 800b29e:	6909      	ldr	r1, [r1, #16]
                       Command->Response         |\
 800b2a0:	4323      	orrs	r3, r4
  MODIFY_REG(SDIOx->CMD, CMD_CLEAR_MASK, tmpreg); 
 800b2a2:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
                       Command->WaitForInterrupt |\
 800b2a6:	430b      	orrs	r3, r1
  MODIFY_REG(SDIOx->CMD, CMD_CLEAR_MASK, tmpreg); 
 800b2a8:	f022 020f 	bic.w	r2, r2, #15
 800b2ac:	4313      	orrs	r3, r2
 800b2ae:	60c3      	str	r3, [r0, #12]
  
  return HAL_OK;  
}
 800b2b0:	2000      	movs	r0, #0
 800b2b2:	bd10      	pop	{r4, pc}

0800b2b4 <SDIO_GetResponse>:

  /* Check the parameters */
  assert_param(IS_SDIO_RESP(Response));
  
  /* Get the response */
  tmp = (uint32_t)(&(SDIOx->RESP1)) + Response;
 800b2b4:	3014      	adds	r0, #20
  
  return (*(__IO uint32_t *) tmp);
 800b2b6:	5840      	ldr	r0, [r0, r1]
}  
 800b2b8:	4770      	bx	lr

0800b2ba <SDIO_ConfigData>:
  assert_param(IS_SDIO_TRANSFER_DIR(Data->TransferDir));
  assert_param(IS_SDIO_TRANSFER_MODE(Data->TransferMode));
  assert_param(IS_SDIO_DPSM(Data->DPSM));

  /* Set the SDMMC Data TimeOut value */
  SDIOx->DTIMER = Data->DataTimeOut;
 800b2ba:	680b      	ldr	r3, [r1, #0]
{
 800b2bc:	b510      	push	{r4, lr}
  SDIOx->DTIMER = Data->DataTimeOut;
 800b2be:	6243      	str	r3, [r0, #36]	; 0x24

  /* Set the SDMMC DataLength value */
  SDIOx->DLEN = Data->DataLength;
 800b2c0:	684b      	ldr	r3, [r1, #4]
 800b2c2:	6283      	str	r3, [r0, #40]	; 0x28

  /* Set the SDMMC data configuration parameters */
  tmpreg |= (uint32_t)(Data->DataBlockSize |\
 800b2c4:	e9d1 3402 	ldrd	r3, r4, [r1, #8]
 800b2c8:	4323      	orrs	r3, r4
                       Data->TransferDir   |\
 800b2ca:	690c      	ldr	r4, [r1, #16]
                       Data->TransferMode  |\
                       Data->DPSM);
  
  /* Write to SDMMC DCTRL */
  MODIFY_REG(SDIOx->DCTRL, DCTRL_CLEAR_MASK, tmpreg);
 800b2cc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
                       Data->TransferMode  |\
 800b2ce:	6949      	ldr	r1, [r1, #20]
                       Data->TransferDir   |\
 800b2d0:	4323      	orrs	r3, r4
                       Data->TransferMode  |\
 800b2d2:	430b      	orrs	r3, r1
  MODIFY_REG(SDIOx->DCTRL, DCTRL_CLEAR_MASK, tmpreg);
 800b2d4:	f022 02f7 	bic.w	r2, r2, #247	; 0xf7
 800b2d8:	4313      	orrs	r3, r2
 800b2da:	62c3      	str	r3, [r0, #44]	; 0x2c

  return HAL_OK;

}
 800b2dc:	2000      	movs	r0, #0
 800b2de:	bd10      	pop	{r4, pc}

0800b2e0 <SDMMC_CmdGoIdleState>:
  * @brief  Send the Go Idle State command and check the response.
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdGoIdleState(SDIO_TypeDef *SDIOx)
{
 800b2e0:	b510      	push	{r4, lr}
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  sdmmc_cmdinit.Argument         = 0U;
 800b2e2:	2300      	movs	r3, #0
{
 800b2e4:	b086      	sub	sp, #24
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_GO_IDLE_STATE;
 800b2e6:	e9cd 3301 	strd	r3, r3, [sp, #4]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_NO;
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800b2ea:	e9cd 3303 	strd	r3, r3, [sp, #12]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b2ee:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b2f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b2f4:	9305      	str	r3, [sp, #20]
{
 800b2f6:	4604      	mov	r4, r0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b2f8:	f7ff ffc9 	bl	800b28e <SDIO_SendCommand>
  */
static uint32_t SDMMC_GetCmdError(SDIO_TypeDef *SDIOx)
{
  /* 8 is the number of required instructions cycles for the below loop statement.
  The SDIO_CMDTIMEOUT is expressed in ms */
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b2fc:	4b0a      	ldr	r3, [pc, #40]	; (800b328 <SDMMC_CmdGoIdleState+0x48>)
 800b2fe:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 800b302:	681b      	ldr	r3, [r3, #0]
 800b304:	fbb3 f3f2 	udiv	r3, r3, r2
 800b308:	f241 3288 	movw	r2, #5000	; 0x1388
 800b30c:	4353      	muls	r3, r2
  
  do
  {
    if (count-- == 0U)
 800b30e:	3b01      	subs	r3, #1
 800b310:	d307      	bcc.n	800b322 <SDMMC_CmdGoIdleState+0x42>
    {
      return SDMMC_ERROR_TIMEOUT;
    }
    
  }while(!__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CMDSENT));
 800b312:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b314:	0612      	lsls	r2, r2, #24
 800b316:	d5fa      	bpl.n	800b30e <SDMMC_CmdGoIdleState+0x2e>
  
  /* Clear all the static flags */
  __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 800b318:	23c5      	movs	r3, #197	; 0xc5
 800b31a:	63a3      	str	r3, [r4, #56]	; 0x38
  
  return SDMMC_ERROR_NONE;
 800b31c:	2000      	movs	r0, #0
}
 800b31e:	b006      	add	sp, #24
 800b320:	bd10      	pop	{r4, pc}
      return SDMMC_ERROR_TIMEOUT;
 800b322:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
  return errorstate;
 800b326:	e7fa      	b.n	800b31e <SDMMC_CmdGoIdleState+0x3e>
 800b328:	20000098 	.word	0x20000098

0800b32c <SDMMC_GetCmdResp1>:
  uint32_t count = Timeout * (SystemCoreClock / 8U /1000U);
 800b32c:	4b45      	ldr	r3, [pc, #276]	; (800b444 <SDMMC_GetCmdResp1+0x118>)
{
 800b32e:	b510      	push	{r4, lr}
  uint32_t count = Timeout * (SystemCoreClock / 8U /1000U);
 800b330:	681b      	ldr	r3, [r3, #0]
{
 800b332:	4604      	mov	r4, r0
  uint32_t count = Timeout * (SystemCoreClock / 8U /1000U);
 800b334:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800b338:	fbb3 f3f0 	udiv	r3, r3, r0
 800b33c:	435a      	muls	r2, r3
    if (count-- == 0U)
 800b33e:	2a00      	cmp	r2, #0
 800b340:	d049      	beq.n	800b3d6 <SDMMC_GetCmdResp1+0xaa>
    sta_reg = SDIOx->STA;
 800b342:	6b63      	ldr	r3, [r4, #52]	; 0x34
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 800b344:	f013 0f45 	tst.w	r3, #69	; 0x45
 800b348:	d007      	beq.n	800b35a <SDMMC_GetCmdResp1+0x2e>
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 800b34a:	051b      	lsls	r3, r3, #20
 800b34c:	d405      	bmi.n	800b35a <SDMMC_GetCmdResp1+0x2e>
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 800b34e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b350:	0758      	lsls	r0, r3, #29
 800b352:	d504      	bpl.n	800b35e <SDMMC_GetCmdResp1+0x32>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 800b354:	2004      	movs	r0, #4
 800b356:	63a0      	str	r0, [r4, #56]	; 0x38
}
 800b358:	bd10      	pop	{r4, pc}
 800b35a:	3a01      	subs	r2, #1
 800b35c:	e7ef      	b.n	800b33e <SDMMC_GetCmdResp1+0x12>
  else if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 800b35e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b360:	f010 0001 	ands.w	r0, r0, #1
 800b364:	d002      	beq.n	800b36c <SDMMC_GetCmdResp1+0x40>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 800b366:	2301      	movs	r3, #1
 800b368:	63a3      	str	r3, [r4, #56]	; 0x38
    return SDMMC_ERROR_CMD_CRC_FAIL;
 800b36a:	e7f5      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
  __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 800b36c:	23c5      	movs	r3, #197	; 0xc5
 800b36e:	63a3      	str	r3, [r4, #56]	; 0x38
  return (uint8_t)(SDIOx->RESPCMD);
 800b370:	6923      	ldr	r3, [r4, #16]
  if(SDIO_GetCommandResponse(SDIOx) != SD_CMD)
 800b372:	b2db      	uxtb	r3, r3
 800b374:	4299      	cmp	r1, r3
 800b376:	d131      	bne.n	800b3dc <SDMMC_GetCmdResp1+0xb0>
  return (*(__IO uint32_t *) tmp);
 800b378:	6963      	ldr	r3, [r4, #20]
  if((response_r1 & SDMMC_OCR_ERRORBITS) == SDMMC_ALLZERO)
 800b37a:	4833      	ldr	r0, [pc, #204]	; (800b448 <SDMMC_GetCmdResp1+0x11c>)
 800b37c:	4018      	ands	r0, r3
 800b37e:	2800      	cmp	r0, #0
 800b380:	d0ea      	beq.n	800b358 <SDMMC_GetCmdResp1+0x2c>
  else if((response_r1 & SDMMC_OCR_ADDR_OUT_OF_RANGE) == SDMMC_OCR_ADDR_OUT_OF_RANGE)
 800b382:	2b00      	cmp	r3, #0
 800b384:	db2c      	blt.n	800b3e0 <SDMMC_GetCmdResp1+0xb4>
  else if((response_r1 & SDMMC_OCR_ADDR_MISALIGNED) == SDMMC_OCR_ADDR_MISALIGNED)
 800b386:	005a      	lsls	r2, r3, #1
 800b388:	d42d      	bmi.n	800b3e6 <SDMMC_GetCmdResp1+0xba>
  else if((response_r1 & SDMMC_OCR_BLOCK_LEN_ERR) == SDMMC_OCR_BLOCK_LEN_ERR)
 800b38a:	009c      	lsls	r4, r3, #2
 800b38c:	d42d      	bmi.n	800b3ea <SDMMC_GetCmdResp1+0xbe>
  else if((response_r1 & SDMMC_OCR_ERASE_SEQ_ERR) == SDMMC_OCR_ERASE_SEQ_ERR)
 800b38e:	00d9      	lsls	r1, r3, #3
 800b390:	d42d      	bmi.n	800b3ee <SDMMC_GetCmdResp1+0xc2>
  else if((response_r1 & SDMMC_OCR_BAD_ERASE_PARAM) == SDMMC_OCR_BAD_ERASE_PARAM)
 800b392:	011a      	lsls	r2, r3, #4
 800b394:	d42e      	bmi.n	800b3f4 <SDMMC_GetCmdResp1+0xc8>
  else if((response_r1 & SDMMC_OCR_WRITE_PROT_VIOLATION) == SDMMC_OCR_WRITE_PROT_VIOLATION)
 800b396:	015c      	lsls	r4, r3, #5
 800b398:	d42f      	bmi.n	800b3fa <SDMMC_GetCmdResp1+0xce>
  else if((response_r1 & SDMMC_OCR_LOCK_UNLOCK_FAILED) == SDMMC_OCR_LOCK_UNLOCK_FAILED)
 800b39a:	01d9      	lsls	r1, r3, #7
 800b39c:	d430      	bmi.n	800b400 <SDMMC_GetCmdResp1+0xd4>
  else if((response_r1 & SDMMC_OCR_COM_CRC_FAILED) == SDMMC_OCR_COM_CRC_FAILED)
 800b39e:	021a      	lsls	r2, r3, #8
 800b3a0:	d431      	bmi.n	800b406 <SDMMC_GetCmdResp1+0xda>
  else if((response_r1 & SDMMC_OCR_ILLEGAL_CMD) == SDMMC_OCR_ILLEGAL_CMD)
 800b3a2:	025c      	lsls	r4, r3, #9
 800b3a4:	d432      	bmi.n	800b40c <SDMMC_GetCmdResp1+0xe0>
  else if((response_r1 & SDMMC_OCR_CARD_ECC_FAILED) == SDMMC_OCR_CARD_ECC_FAILED)
 800b3a6:	0299      	lsls	r1, r3, #10
 800b3a8:	d433      	bmi.n	800b412 <SDMMC_GetCmdResp1+0xe6>
  else if((response_r1 & SDMMC_OCR_CC_ERROR) == SDMMC_OCR_CC_ERROR)
 800b3aa:	02da      	lsls	r2, r3, #11
 800b3ac:	d434      	bmi.n	800b418 <SDMMC_GetCmdResp1+0xec>
  else if((response_r1 & SDMMC_OCR_STREAM_READ_UNDERRUN) == SDMMC_OCR_STREAM_READ_UNDERRUN)
 800b3ae:	035c      	lsls	r4, r3, #13
 800b3b0:	d435      	bmi.n	800b41e <SDMMC_GetCmdResp1+0xf2>
  else if((response_r1 & SDMMC_OCR_STREAM_WRITE_OVERRUN) == SDMMC_OCR_STREAM_WRITE_OVERRUN)
 800b3b2:	0399      	lsls	r1, r3, #14
 800b3b4:	d436      	bmi.n	800b424 <SDMMC_GetCmdResp1+0xf8>
  else if((response_r1 & SDMMC_OCR_CID_CSD_OVERWRITE) == SDMMC_OCR_CID_CSD_OVERWRITE)
 800b3b6:	03da      	lsls	r2, r3, #15
 800b3b8:	d437      	bmi.n	800b42a <SDMMC_GetCmdResp1+0xfe>
  else if((response_r1 & SDMMC_OCR_WP_ERASE_SKIP) == SDMMC_OCR_WP_ERASE_SKIP)
 800b3ba:	041c      	lsls	r4, r3, #16
 800b3bc:	d438      	bmi.n	800b430 <SDMMC_GetCmdResp1+0x104>
  else if((response_r1 & SDMMC_OCR_CARD_ECC_DISABLED) == SDMMC_OCR_CARD_ECC_DISABLED)
 800b3be:	0459      	lsls	r1, r3, #17
 800b3c0:	d439      	bmi.n	800b436 <SDMMC_GetCmdResp1+0x10a>
  else if((response_r1 & SDMMC_OCR_ERASE_RESET) == SDMMC_OCR_ERASE_RESET)
 800b3c2:	049a      	lsls	r2, r3, #18
 800b3c4:	d43a      	bmi.n	800b43c <SDMMC_GetCmdResp1+0x110>
    return SDMMC_ERROR_GENERAL_UNKNOWN_ERR;
 800b3c6:	f013 0f08 	tst.w	r3, #8
 800b3ca:	bf14      	ite	ne
 800b3cc:	f44f 0000 	movne.w	r0, #8388608	; 0x800000
 800b3d0:	f44f 3080 	moveq.w	r0, #65536	; 0x10000
 800b3d4:	e7c0      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
      return SDMMC_ERROR_TIMEOUT;
 800b3d6:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 800b3da:	e7bd      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_CMD_CRC_FAIL;
 800b3dc:	2001      	movs	r0, #1
 800b3de:	e7bb      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_ADDR_OUT_OF_RANGE;
 800b3e0:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
 800b3e4:	e7b8      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_ADDR_MISALIGNED;
 800b3e6:	2040      	movs	r0, #64	; 0x40
 800b3e8:	e7b6      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_BLOCK_LEN_ERR;
 800b3ea:	2080      	movs	r0, #128	; 0x80
 800b3ec:	e7b4      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_ERASE_SEQ_ERR;
 800b3ee:	f44f 7080 	mov.w	r0, #256	; 0x100
 800b3f2:	e7b1      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_BAD_ERASE_PARAM;
 800b3f4:	f44f 7000 	mov.w	r0, #512	; 0x200
 800b3f8:	e7ae      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_WRITE_PROT_VIOLATION;
 800b3fa:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800b3fe:	e7ab      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_LOCK_UNLOCK_FAILED;
 800b400:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800b404:	e7a8      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_COM_CRC_FAILED;
 800b406:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800b40a:	e7a5      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_ILLEGAL_CMD;
 800b40c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800b410:	e7a2      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_CARD_ECC_FAILED;
 800b412:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800b416:	e79f      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_CC_ERR;
 800b418:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 800b41c:	e79c      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_STREAM_READ_UNDERRUN;
 800b41e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 800b422:	e799      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_STREAM_WRITE_OVERRUN;
 800b424:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 800b428:	e796      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_CID_CSD_OVERWRITE;
 800b42a:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 800b42e:	e793      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_WP_ERASE_SKIP;
 800b430:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800b434:	e790      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_CARD_ECC_DISABLED;
 800b436:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 800b43a:	e78d      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
    return SDMMC_ERROR_ERASE_RESET;
 800b43c:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 800b440:	e78a      	b.n	800b358 <SDMMC_GetCmdResp1+0x2c>
 800b442:	bf00      	nop
 800b444:	20000098 	.word	0x20000098
 800b448:	fdffe008 	.word	0xfdffe008

0800b44c <SDMMC_CmdBlockLength>:
{
 800b44c:	b530      	push	{r4, r5, lr}
 800b44e:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b450:	2510      	movs	r5, #16
 800b452:	2340      	movs	r3, #64	; 0x40
 800b454:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b458:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b45a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)BlockSize;
 800b45e:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b460:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b462:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b464:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b468:	f7ff ff11 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_SET_BLOCKLEN, SDIO_CMDTIMEOUT);
 800b46c:	f241 3288 	movw	r2, #5000	; 0x1388
 800b470:	4629      	mov	r1, r5
 800b472:	4620      	mov	r0, r4
 800b474:	f7ff ff5a 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b478:	b007      	add	sp, #28
 800b47a:	bd30      	pop	{r4, r5, pc}

0800b47c <SDMMC_CmdReadSingleBlock>:
{
 800b47c:	b530      	push	{r4, r5, lr}
 800b47e:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b480:	2511      	movs	r5, #17
 800b482:	2340      	movs	r3, #64	; 0x40
 800b484:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b488:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b48a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)ReadAdd;
 800b48e:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b490:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b492:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b494:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b498:	f7ff fef9 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_READ_SINGLE_BLOCK, SDIO_CMDTIMEOUT);
 800b49c:	f241 3288 	movw	r2, #5000	; 0x1388
 800b4a0:	4629      	mov	r1, r5
 800b4a2:	4620      	mov	r0, r4
 800b4a4:	f7ff ff42 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b4a8:	b007      	add	sp, #28
 800b4aa:	bd30      	pop	{r4, r5, pc}

0800b4ac <SDMMC_CmdReadMultiBlock>:
{
 800b4ac:	b530      	push	{r4, r5, lr}
 800b4ae:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b4b0:	2512      	movs	r5, #18
 800b4b2:	2340      	movs	r3, #64	; 0x40
 800b4b4:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b4b8:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b4ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)ReadAdd;
 800b4be:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b4c0:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b4c2:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b4c4:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b4c8:	f7ff fee1 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_READ_MULT_BLOCK, SDIO_CMDTIMEOUT);
 800b4cc:	f241 3288 	movw	r2, #5000	; 0x1388
 800b4d0:	4629      	mov	r1, r5
 800b4d2:	4620      	mov	r0, r4
 800b4d4:	f7ff ff2a 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b4d8:	b007      	add	sp, #28
 800b4da:	bd30      	pop	{r4, r5, pc}

0800b4dc <SDMMC_CmdWriteSingleBlock>:
{
 800b4dc:	b530      	push	{r4, r5, lr}
 800b4de:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b4e0:	2518      	movs	r5, #24
 800b4e2:	2340      	movs	r3, #64	; 0x40
 800b4e4:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b4e8:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b4ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)WriteAdd;
 800b4ee:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b4f0:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b4f2:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b4f4:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b4f8:	f7ff fec9 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_WRITE_SINGLE_BLOCK, SDIO_CMDTIMEOUT);
 800b4fc:	f241 3288 	movw	r2, #5000	; 0x1388
 800b500:	4629      	mov	r1, r5
 800b502:	4620      	mov	r0, r4
 800b504:	f7ff ff12 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b508:	b007      	add	sp, #28
 800b50a:	bd30      	pop	{r4, r5, pc}

0800b50c <SDMMC_CmdWriteMultiBlock>:
{
 800b50c:	b530      	push	{r4, r5, lr}
 800b50e:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b510:	2519      	movs	r5, #25
 800b512:	2340      	movs	r3, #64	; 0x40
 800b514:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b518:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b51a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)WriteAdd;
 800b51e:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b520:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b522:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b524:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b528:	f7ff feb1 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_WRITE_MULT_BLOCK, SDIO_CMDTIMEOUT);
 800b52c:	f241 3288 	movw	r2, #5000	; 0x1388
 800b530:	4629      	mov	r1, r5
 800b532:	4620      	mov	r0, r4
 800b534:	f7ff fefa 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b538:	b007      	add	sp, #28
 800b53a:	bd30      	pop	{r4, r5, pc}

0800b53c <SDMMC_CmdStopTransfer>:
{
 800b53c:	b530      	push	{r4, r5, lr}
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_STOP_TRANSMISSION;
 800b53e:	2300      	movs	r3, #0
{
 800b540:	b087      	sub	sp, #28
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_STOP_TRANSMISSION;
 800b542:	250c      	movs	r5, #12
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b544:	2240      	movs	r2, #64	; 0x40
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800b546:	e9cd 2303 	strd	r2, r3, [sp, #12]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_STOP_TRANSMISSION;
 800b54a:	e9cd 3501 	strd	r3, r5, [sp, #4]
{
 800b54e:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b550:	f44f 6380 	mov.w	r3, #1024	; 0x400
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b554:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b556:	9305      	str	r3, [sp, #20]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b558:	f7ff fe99 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_STOP_TRANSMISSION, SDIO_STOPTRANSFERTIMEOUT);
 800b55c:	4a03      	ldr	r2, [pc, #12]	; (800b56c <SDMMC_CmdStopTransfer+0x30>)
 800b55e:	4629      	mov	r1, r5
 800b560:	4620      	mov	r0, r4
 800b562:	f7ff fee3 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b566:	b007      	add	sp, #28
 800b568:	bd30      	pop	{r4, r5, pc}
 800b56a:	bf00      	nop
 800b56c:	05f5e100 	.word	0x05f5e100

0800b570 <SDMMC_CmdSelDesel>:
{
 800b570:	b530      	push	{r4, r5, lr}
 800b572:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b574:	2507      	movs	r5, #7
 800b576:	2340      	movs	r3, #64	; 0x40
 800b578:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b57c:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b57e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)Addr;
 800b582:	9201      	str	r2, [sp, #4]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b584:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b586:	2200      	movs	r2, #0
 800b588:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b58c:	f7ff fe7f 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_SEL_DESEL_CARD, SDIO_CMDTIMEOUT);
 800b590:	f241 3288 	movw	r2, #5000	; 0x1388
 800b594:	4629      	mov	r1, r5
 800b596:	4620      	mov	r0, r4
 800b598:	f7ff fec8 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b59c:	b007      	add	sp, #28
 800b59e:	bd30      	pop	{r4, r5, pc}

0800b5a0 <SDMMC_CmdAppCommand>:
{
 800b5a0:	b530      	push	{r4, r5, lr}
 800b5a2:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b5a4:	2537      	movs	r5, #55	; 0x37
 800b5a6:	2340      	movs	r3, #64	; 0x40
 800b5a8:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b5ac:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b5ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = (uint32_t)Argument;
 800b5b2:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b5b4:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b5b6:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b5b8:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b5bc:	f7ff fe67 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_APP_CMD, SDIO_CMDTIMEOUT);
 800b5c0:	f241 3288 	movw	r2, #5000	; 0x1388
 800b5c4:	4629      	mov	r1, r5
 800b5c6:	4620      	mov	r0, r4
 800b5c8:	f7ff feb0 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b5cc:	b007      	add	sp, #28
 800b5ce:	bd30      	pop	{r4, r5, pc}

0800b5d0 <SDMMC_CmdSendStatus>:
{
 800b5d0:	b530      	push	{r4, r5, lr}
 800b5d2:	b087      	sub	sp, #28
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b5d4:	250d      	movs	r5, #13
 800b5d6:	2340      	movs	r3, #64	; 0x40
 800b5d8:	e9cd 5302 	strd	r5, r3, [sp, #8]
{
 800b5dc:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b5de:	f44f 6380 	mov.w	r3, #1024	; 0x400
  sdmmc_cmdinit.Argument         = Argument;
 800b5e2:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b5e4:	2200      	movs	r2, #0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b5e6:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b5e8:	e9cd 2304 	strd	r2, r3, [sp, #16]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b5ec:	f7ff fe4f 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_SEND_STATUS, SDIO_CMDTIMEOUT);
 800b5f0:	f241 3288 	movw	r2, #5000	; 0x1388
 800b5f4:	4629      	mov	r1, r5
 800b5f6:	4620      	mov	r0, r4
 800b5f8:	f7ff fe98 	bl	800b32c <SDMMC_GetCmdResp1>
}
 800b5fc:	b007      	add	sp, #28
 800b5fe:	bd30      	pop	{r4, r5, pc}

0800b600 <SDMMC_GetCmdResp2>:
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b600:	4b11      	ldr	r3, [pc, #68]	; (800b648 <SDMMC_GetCmdResp2+0x48>)
 800b602:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800b606:	681b      	ldr	r3, [r3, #0]
 800b608:	fbb3 f3f1 	udiv	r3, r3, r1
 800b60c:	f241 3188 	movw	r1, #5000	; 0x1388
{
 800b610:	4602      	mov	r2, r0
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b612:	434b      	muls	r3, r1
    if (count-- == 0U)
 800b614:	3b01      	subs	r3, #1
 800b616:	d313      	bcc.n	800b640 <SDMMC_GetCmdResp2+0x40>
    sta_reg = SDIOx->STA;
 800b618:	6b51      	ldr	r1, [r2, #52]	; 0x34
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 800b61a:	f011 0f45 	tst.w	r1, #69	; 0x45
 800b61e:	d0f9      	beq.n	800b614 <SDMMC_GetCmdResp2+0x14>
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 800b620:	0509      	lsls	r1, r1, #20
 800b622:	d4f7      	bmi.n	800b614 <SDMMC_GetCmdResp2+0x14>
  if (__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 800b624:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800b626:	075b      	lsls	r3, r3, #29
 800b628:	d502      	bpl.n	800b630 <SDMMC_GetCmdResp2+0x30>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 800b62a:	2004      	movs	r0, #4
 800b62c:	6390      	str	r0, [r2, #56]	; 0x38
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 800b62e:	4770      	bx	lr
  else if (__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 800b630:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800b632:	f010 0001 	ands.w	r0, r0, #1
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 800b636:	bf14      	ite	ne
 800b638:	2301      	movne	r3, #1
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 800b63a:	23c5      	moveq	r3, #197	; 0xc5
 800b63c:	6393      	str	r3, [r2, #56]	; 0x38
  return SDMMC_ERROR_NONE;
 800b63e:	4770      	bx	lr
      return SDMMC_ERROR_TIMEOUT;
 800b640:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
}
 800b644:	4770      	bx	lr
 800b646:	bf00      	nop
 800b648:	20000098 	.word	0x20000098

0800b64c <SDMMC_CmdSendCID>:
{
 800b64c:	b510      	push	{r4, lr}
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_ALL_SEND_CID;
 800b64e:	2300      	movs	r3, #0
{
 800b650:	b086      	sub	sp, #24
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_ALL_SEND_CID;
 800b652:	2202      	movs	r2, #2
 800b654:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_LONG;
 800b658:	22c0      	movs	r2, #192	; 0xc0
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800b65a:	e9cd 2303 	strd	r2, r3, [sp, #12]
{
 800b65e:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b660:	f44f 6380 	mov.w	r3, #1024	; 0x400
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b664:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b666:	9305      	str	r3, [sp, #20]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b668:	f7ff fe11 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp2(SDIOx);
 800b66c:	4620      	mov	r0, r4
 800b66e:	f7ff ffc7 	bl	800b600 <SDMMC_GetCmdResp2>
}
 800b672:	b006      	add	sp, #24
 800b674:	bd10      	pop	{r4, pc}

0800b676 <SDMMC_CmdSendCSD>:
{
 800b676:	b510      	push	{r4, lr}
 800b678:	b086      	sub	sp, #24
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_LONG;
 800b67a:	2209      	movs	r2, #9
 800b67c:	23c0      	movs	r3, #192	; 0xc0
 800b67e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdmmc_cmdinit.Argument         = Argument;
 800b682:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b684:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b688:	2100      	movs	r1, #0
 800b68a:	e9cd 1304 	strd	r1, r3, [sp, #16]
{
 800b68e:	4604      	mov	r4, r0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b690:	a901      	add	r1, sp, #4
 800b692:	f7ff fdfc 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp2(SDIOx);
 800b696:	4620      	mov	r0, r4
 800b698:	f7ff ffb2 	bl	800b600 <SDMMC_GetCmdResp2>
}
 800b69c:	b006      	add	sp, #24
 800b69e:	bd10      	pop	{r4, pc}

0800b6a0 <SDMMC_GetCmdResp3>:
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b6a0:	4b0e      	ldr	r3, [pc, #56]	; (800b6dc <SDMMC_GetCmdResp3+0x3c>)
 800b6a2:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800b6a6:	681b      	ldr	r3, [r3, #0]
 800b6a8:	fbb3 f3f1 	udiv	r3, r3, r1
 800b6ac:	f241 3188 	movw	r1, #5000	; 0x1388
{
 800b6b0:	4602      	mov	r2, r0
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b6b2:	434b      	muls	r3, r1
    if (count-- == 0U)
 800b6b4:	3b01      	subs	r3, #1
 800b6b6:	d30e      	bcc.n	800b6d6 <SDMMC_GetCmdResp3+0x36>
    sta_reg = SDIOx->STA;
 800b6b8:	6b51      	ldr	r1, [r2, #52]	; 0x34
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 800b6ba:	f011 0f45 	tst.w	r1, #69	; 0x45
 800b6be:	d0f9      	beq.n	800b6b4 <SDMMC_GetCmdResp3+0x14>
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 800b6c0:	0509      	lsls	r1, r1, #20
 800b6c2:	d4f7      	bmi.n	800b6b4 <SDMMC_GetCmdResp3+0x14>
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 800b6c4:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800b6c6:	f010 0004 	ands.w	r0, r0, #4
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 800b6ca:	bf15      	itete	ne
 800b6cc:	2004      	movne	r0, #4
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 800b6ce:	23c5      	moveq	r3, #197	; 0xc5
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 800b6d0:	6390      	strne	r0, [r2, #56]	; 0x38
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 800b6d2:	6393      	streq	r3, [r2, #56]	; 0x38
  return SDMMC_ERROR_NONE;
 800b6d4:	4770      	bx	lr
      return SDMMC_ERROR_TIMEOUT;
 800b6d6:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
}
 800b6da:	4770      	bx	lr
 800b6dc:	20000098 	.word	0x20000098

0800b6e0 <SDMMC_CmdAppOperCommand>:
{
 800b6e0:	b510      	push	{r4, lr}
  sdmmc_cmdinit.Argument         = SDMMC_VOLTAGE_WINDOW_SD | Argument;
 800b6e2:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
{
 800b6e6:	b086      	sub	sp, #24
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b6e8:	2229      	movs	r2, #41	; 0x29
  sdmmc_cmdinit.Argument         = SDMMC_VOLTAGE_WINDOW_SD | Argument;
 800b6ea:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b6ee:	2340      	movs	r3, #64	; 0x40
 800b6f0:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdmmc_cmdinit.Argument         = SDMMC_VOLTAGE_WINDOW_SD | Argument;
 800b6f4:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b6f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b6fa:	2100      	movs	r1, #0
 800b6fc:	e9cd 1304 	strd	r1, r3, [sp, #16]
{
 800b700:	4604      	mov	r4, r0
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b702:	a901      	add	r1, sp, #4
 800b704:	f7ff fdc3 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp3(SDIOx);
 800b708:	4620      	mov	r0, r4
 800b70a:	f7ff ffc9 	bl	800b6a0 <SDMMC_GetCmdResp3>
}
 800b70e:	b006      	add	sp, #24
 800b710:	bd10      	pop	{r4, pc}
	...

0800b714 <SDMMC_GetCmdResp6>:
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b714:	4b1f      	ldr	r3, [pc, #124]	; (800b794 <SDMMC_GetCmdResp6+0x80>)
{
 800b716:	b510      	push	{r4, lr}
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b718:	681b      	ldr	r3, [r3, #0]
{
 800b71a:	4604      	mov	r4, r0
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b71c:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800b720:	fbb3 f3f0 	udiv	r3, r3, r0
 800b724:	f241 3088 	movw	r0, #5000	; 0x1388
 800b728:	4343      	muls	r3, r0
    if (count-- == 0U)
 800b72a:	3b01      	subs	r3, #1
 800b72c:	d329      	bcc.n	800b782 <SDMMC_GetCmdResp6+0x6e>
    sta_reg = SDIOx->STA;
 800b72e:	6b60      	ldr	r0, [r4, #52]	; 0x34
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 800b730:	f010 0f45 	tst.w	r0, #69	; 0x45
 800b734:	d0f9      	beq.n	800b72a <SDMMC_GetCmdResp6+0x16>
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 800b736:	0500      	lsls	r0, r0, #20
 800b738:	d4f7      	bmi.n	800b72a <SDMMC_GetCmdResp6+0x16>
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 800b73a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b73c:	0758      	lsls	r0, r3, #29
 800b73e:	d502      	bpl.n	800b746 <SDMMC_GetCmdResp6+0x32>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 800b740:	2004      	movs	r0, #4
 800b742:	63a0      	str	r0, [r4, #56]	; 0x38
}
 800b744:	bd10      	pop	{r4, pc}
  else if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 800b746:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b748:	f010 0001 	ands.w	r0, r0, #1
 800b74c:	d002      	beq.n	800b754 <SDMMC_GetCmdResp6+0x40>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 800b74e:	2301      	movs	r3, #1
 800b750:	63a3      	str	r3, [r4, #56]	; 0x38
    return SDMMC_ERROR_CMD_CRC_FAIL;
 800b752:	e7f7      	b.n	800b744 <SDMMC_GetCmdResp6+0x30>
  return (uint8_t)(SDIOx->RESPCMD);
 800b754:	6923      	ldr	r3, [r4, #16]
  if(SDIO_GetCommandResponse(SDIOx) != SD_CMD)
 800b756:	b2db      	uxtb	r3, r3
 800b758:	4299      	cmp	r1, r3
 800b75a:	d115      	bne.n	800b788 <SDMMC_GetCmdResp6+0x74>
  __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 800b75c:	23c5      	movs	r3, #197	; 0xc5
 800b75e:	63a3      	str	r3, [r4, #56]	; 0x38
  return (*(__IO uint32_t *) tmp);
 800b760:	6963      	ldr	r3, [r4, #20]
  if((response_r1 & (SDMMC_R6_GENERAL_UNKNOWN_ERROR | SDMMC_R6_ILLEGAL_CMD | SDMMC_R6_COM_CRC_FAILED)) == SDMMC_ALLZERO)
 800b762:	f413 4060 	ands.w	r0, r3, #57344	; 0xe000
 800b766:	d102      	bne.n	800b76e <SDMMC_GetCmdResp6+0x5a>
    *pRCA = (uint16_t) (response_r1 >> 16);
 800b768:	0c1b      	lsrs	r3, r3, #16
 800b76a:	8013      	strh	r3, [r2, #0]
    return SDMMC_ERROR_NONE;
 800b76c:	e7ea      	b.n	800b744 <SDMMC_GetCmdResp6+0x30>
  else if((response_r1 & SDMMC_R6_ILLEGAL_CMD) == SDMMC_R6_ILLEGAL_CMD)
 800b76e:	045a      	lsls	r2, r3, #17
 800b770:	d40c      	bmi.n	800b78c <SDMMC_GetCmdResp6+0x78>
    return SDMMC_ERROR_GENERAL_UNKNOWN_ERR;
 800b772:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 800b776:	bf14      	ite	ne
 800b778:	f44f 5080 	movne.w	r0, #4096	; 0x1000
 800b77c:	f44f 3080 	moveq.w	r0, #65536	; 0x10000
 800b780:	e7e0      	b.n	800b744 <SDMMC_GetCmdResp6+0x30>
      return SDMMC_ERROR_TIMEOUT;
 800b782:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 800b786:	e7dd      	b.n	800b744 <SDMMC_GetCmdResp6+0x30>
    return SDMMC_ERROR_CMD_CRC_FAIL;
 800b788:	2001      	movs	r0, #1
 800b78a:	e7db      	b.n	800b744 <SDMMC_GetCmdResp6+0x30>
    return SDMMC_ERROR_ILLEGAL_CMD;
 800b78c:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800b790:	e7d8      	b.n	800b744 <SDMMC_GetCmdResp6+0x30>
 800b792:	bf00      	nop
 800b794:	20000098 	.word	0x20000098

0800b798 <SDMMC_CmdSetRelAdd>:
{
 800b798:	b530      	push	{r4, r5, lr}
 800b79a:	b089      	sub	sp, #36	; 0x24
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SET_REL_ADDR;
 800b79c:	2300      	movs	r3, #0
{
 800b79e:	9101      	str	r1, [sp, #4]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SET_REL_ADDR;
 800b7a0:	2503      	movs	r5, #3
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800b7a2:	2140      	movs	r1, #64	; 0x40
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800b7a4:	e9cd 1305 	strd	r1, r3, [sp, #20]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SET_REL_ADDR;
 800b7a8:	e9cd 3503 	strd	r3, r5, [sp, #12]
{
 800b7ac:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b7ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b7b2:	a903      	add	r1, sp, #12
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b7b4:	9307      	str	r3, [sp, #28]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b7b6:	f7ff fd6a 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp6(SDIOx, SDMMC_CMD_SET_REL_ADDR, pRCA);
 800b7ba:	9a01      	ldr	r2, [sp, #4]
 800b7bc:	4629      	mov	r1, r5
 800b7be:	4620      	mov	r0, r4
 800b7c0:	f7ff ffa8 	bl	800b714 <SDMMC_GetCmdResp6>
}
 800b7c4:	b009      	add	sp, #36	; 0x24
 800b7c6:	bd30      	pop	{r4, r5, pc}

0800b7c8 <SDMMC_GetCmdResp7>:
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b7c8:	4b13      	ldr	r3, [pc, #76]	; (800b818 <SDMMC_GetCmdResp7+0x50>)
 800b7ca:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800b7ce:	681b      	ldr	r3, [r3, #0]
 800b7d0:	fbb3 f3f1 	udiv	r3, r3, r1
 800b7d4:	f241 3188 	movw	r1, #5000	; 0x1388
{
 800b7d8:	4602      	mov	r2, r0
  uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 800b7da:	434b      	muls	r3, r1
    if (count-- == 0U)
 800b7dc:	3b01      	subs	r3, #1
 800b7de:	d317      	bcc.n	800b810 <SDMMC_GetCmdResp7+0x48>
    sta_reg = SDIOx->STA;
 800b7e0:	6b51      	ldr	r1, [r2, #52]	; 0x34
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 800b7e2:	f011 0f45 	tst.w	r1, #69	; 0x45
 800b7e6:	d0f9      	beq.n	800b7dc <SDMMC_GetCmdResp7+0x14>
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 800b7e8:	0508      	lsls	r0, r1, #20
 800b7ea:	d4f7      	bmi.n	800b7dc <SDMMC_GetCmdResp7+0x14>
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 800b7ec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800b7ee:	0759      	lsls	r1, r3, #29
 800b7f0:	d502      	bpl.n	800b7f8 <SDMMC_GetCmdResp7+0x30>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 800b7f2:	2004      	movs	r0, #4
 800b7f4:	6390      	str	r0, [r2, #56]	; 0x38
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 800b7f6:	4770      	bx	lr
  else if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 800b7f8:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800b7fa:	f010 0001 	ands.w	r0, r0, #1
 800b7fe:	d002      	beq.n	800b806 <SDMMC_GetCmdResp7+0x3e>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 800b800:	2301      	movs	r3, #1
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CMDREND);
 800b802:	6393      	str	r3, [r2, #56]	; 0x38
 800b804:	4770      	bx	lr
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CMDREND))
 800b806:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800b808:	065b      	lsls	r3, r3, #25
 800b80a:	d503      	bpl.n	800b814 <SDMMC_GetCmdResp7+0x4c>
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CMDREND);
 800b80c:	2340      	movs	r3, #64	; 0x40
 800b80e:	e7f8      	b.n	800b802 <SDMMC_GetCmdResp7+0x3a>
      return SDMMC_ERROR_TIMEOUT;
 800b810:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
}
 800b814:	4770      	bx	lr
 800b816:	bf00      	nop
 800b818:	20000098 	.word	0x20000098

0800b81c <SDMMC_CmdOperCond>:
{
 800b81c:	b510      	push	{r4, lr}
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_HS_SEND_EXT_CSD;
 800b81e:	f44f 72d5 	mov.w	r2, #426	; 0x1aa
{
 800b822:	b086      	sub	sp, #24
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_HS_SEND_EXT_CSD;
 800b824:	2308      	movs	r3, #8
 800b826:	e9cd 2301 	strd	r2, r3, [sp, #4]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800b82a:	2140      	movs	r1, #64	; 0x40
 800b82c:	2300      	movs	r3, #0
 800b82e:	e9cd 1303 	strd	r1, r3, [sp, #12]
{
 800b832:	4604      	mov	r4, r0
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b834:	f44f 6380 	mov.w	r3, #1024	; 0x400
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b838:	a901      	add	r1, sp, #4
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800b83a:	9305      	str	r3, [sp, #20]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800b83c:	f7ff fd27 	bl	800b28e <SDIO_SendCommand>
  errorstate = SDMMC_GetCmdResp7(SDIOx);
 800b840:	4620      	mov	r0, r4
 800b842:	f7ff ffc1 	bl	800b7c8 <SDMMC_GetCmdResp7>
}
 800b846:	b006      	add	sp, #24
 800b848:	bd10      	pop	{r4, pc}
	...

0800b84c <ff_convert>:
)
{
	WCHAR c;


	if (chr < 0x80) {	/* ASCII */
 800b84c:	287f      	cmp	r0, #127	; 0x7f
{
 800b84e:	b510      	push	{r4, lr}
	if (chr < 0x80) {	/* ASCII */
 800b850:	d906      	bls.n	800b860 <ff_convert+0x14>
		c = chr;

	} else {
		if (dir) {		/* OEM code to Unicode */
 800b852:	b131      	cbz	r1, 800b862 <ff_convert+0x16>
			c = (chr >= 0x100) ? 0 : Tbl[chr - 0x80];
 800b854:	28ff      	cmp	r0, #255	; 0xff
 800b856:	d812      	bhi.n	800b87e <ff_convert+0x32>
 800b858:	4b0a      	ldr	r3, [pc, #40]	; (800b884 <ff_convert+0x38>)
 800b85a:	3880      	subs	r0, #128	; 0x80
 800b85c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
			c = (c + 0x80) & 0xFF;
		}
	}

	return c;
}
 800b860:	bd10      	pop	{r4, pc}
 800b862:	4a08      	ldr	r2, [pc, #32]	; (800b884 <ff_convert+0x38>)
				if (chr == Tbl[c]) break;
 800b864:	f832 4b02 	ldrh.w	r4, [r2], #2
 800b868:	4284      	cmp	r4, r0
 800b86a:	b28b      	uxth	r3, r1
 800b86c:	d003      	beq.n	800b876 <ff_convert+0x2a>
			for (c = 0; c < 0x80; c++) {
 800b86e:	3101      	adds	r1, #1
 800b870:	2980      	cmp	r1, #128	; 0x80
 800b872:	d1f7      	bne.n	800b864 <ff_convert+0x18>
 800b874:	460b      	mov	r3, r1
			c = (c + 0x80) & 0xFF;
 800b876:	f103 0080 	add.w	r0, r3, #128	; 0x80
 800b87a:	b2c0      	uxtb	r0, r0
 800b87c:	e7f0      	b.n	800b860 <ff_convert+0x14>
			c = (chr >= 0x100) ? 0 : Tbl[chr - 0x80];
 800b87e:	2000      	movs	r0, #0
 800b880:	e7ee      	b.n	800b860 <ff_convert+0x14>
 800b882:	bf00      	nop
 800b884:	0802a8bc 	.word	0x0802a8bc

0800b888 <ff_wtoupper>:


WCHAR ff_wtoupper (	/* Returns upper converted character */
	WCHAR chr		/* Unicode character to be upper converted (BMP only) */
)
{
 800b888:	b570      	push	{r4, r5, r6, lr}
	};
	const WCHAR *p;
	WCHAR bc, nc, cmd;


	p = chr < 0x1000 ? cvt1 : cvt2;
 800b88a:	4b1e      	ldr	r3, [pc, #120]	; (800b904 <ff_wtoupper+0x7c>)
 800b88c:	4a1e      	ldr	r2, [pc, #120]	; (800b908 <ff_wtoupper+0x80>)
 800b88e:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800b892:	bf28      	it	cs
 800b894:	4613      	movcs	r3, r2
 800b896:	1d19      	adds	r1, r3, #4
	for (;;) {
		bc = *p++;								/* Get block base */
 800b898:	f831 3c04 	ldrh.w	r3, [r1, #-4]
		if (!bc || chr < bc) break;
 800b89c:	460a      	mov	r2, r1
 800b89e:	b1ab      	cbz	r3, 800b8cc <ff_wtoupper+0x44>
 800b8a0:	4298      	cmp	r0, r3
 800b8a2:	d313      	bcc.n	800b8cc <ff_wtoupper+0x44>
		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 800b8a4:	f831 4c02 	ldrh.w	r4, [r1, #-2]
 800b8a8:	0a25      	lsrs	r5, r4, #8
 800b8aa:	b2e6      	uxtb	r6, r4
		if (chr < bc + nc) {	/* In the block? */
 800b8ac:	fa53 f484 	uxtab	r4, r3, r4
 800b8b0:	42a0      	cmp	r0, r4
 800b8b2:	da21      	bge.n	800b8f8 <ff_wtoupper+0x70>
			switch (cmd) {
 800b8b4:	2d08      	cmp	r5, #8
 800b8b6:	d809      	bhi.n	800b8cc <ff_wtoupper+0x44>
 800b8b8:	e8df f005 	tbb	[pc, r5]
 800b8bc:	110f0905 	.word	0x110f0905
 800b8c0:	19171513 	.word	0x19171513
 800b8c4:	1b          	.byte	0x1b
 800b8c5:	00          	.byte	0x00
			case 0:	chr = p[chr - bc]; break;		/* Table conversion */
 800b8c6:	1ac0      	subs	r0, r0, r3
 800b8c8:	f831 0010 	ldrh.w	r0, [r1, r0, lsl #1]
		}
		if (!cmd) p += nc;
	}

	return chr;
}
 800b8cc:	bd70      	pop	{r4, r5, r6, pc}
			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 800b8ce:	1ac3      	subs	r3, r0, r3
 800b8d0:	f003 0301 	and.w	r3, r3, #1
 800b8d4:	1ac0      	subs	r0, r0, r3
			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 800b8d6:	b280      	uxth	r0, r0
 800b8d8:	e7f8      	b.n	800b8cc <ff_wtoupper+0x44>
			case 2: chr -= 16; break;				/* Shift -16 */
 800b8da:	3810      	subs	r0, #16
 800b8dc:	e7fb      	b.n	800b8d6 <ff_wtoupper+0x4e>
			case 3:	chr -= 32; break;				/* Shift -32 */
 800b8de:	3820      	subs	r0, #32
 800b8e0:	e7f9      	b.n	800b8d6 <ff_wtoupper+0x4e>
			case 4:	chr -= 48; break;				/* Shift -48 */
 800b8e2:	3830      	subs	r0, #48	; 0x30
 800b8e4:	e7f7      	b.n	800b8d6 <ff_wtoupper+0x4e>
			case 5:	chr -= 26; break;				/* Shift -26 */
 800b8e6:	381a      	subs	r0, #26
 800b8e8:	e7f5      	b.n	800b8d6 <ff_wtoupper+0x4e>
			case 6:	chr += 8; break;				/* Shift +8 */
 800b8ea:	3008      	adds	r0, #8
 800b8ec:	e7f3      	b.n	800b8d6 <ff_wtoupper+0x4e>
			case 7: chr -= 80; break;				/* Shift -80 */
 800b8ee:	3850      	subs	r0, #80	; 0x50
 800b8f0:	e7f1      	b.n	800b8d6 <ff_wtoupper+0x4e>
			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 800b8f2:	f5a0 50e3 	sub.w	r0, r0, #7264	; 0x1c60
 800b8f6:	e7ee      	b.n	800b8d6 <ff_wtoupper+0x4e>
		if (!cmd) p += nc;
 800b8f8:	3104      	adds	r1, #4
 800b8fa:	2d00      	cmp	r5, #0
 800b8fc:	d1cc      	bne.n	800b898 <ff_wtoupper+0x10>
 800b8fe:	eb02 0346 	add.w	r3, r2, r6, lsl #1
 800b902:	e7c8      	b.n	800b896 <ff_wtoupper+0xe>
 800b904:	0802a9bc 	.word	0x0802a9bc
 800b908:	0802abae 	.word	0x0802abae

0800b90c <disk_status>:
	BYTE pdrv		/* Physical drive number to identify the drive */
)
{
  DSTATUS stat;

  stat = disk.drv[pdrv]->disk_status(disk.lun[pdrv]);
 800b90c:	4b03      	ldr	r3, [pc, #12]	; (800b91c <disk_status+0x10>)
 800b90e:	181a      	adds	r2, r3, r0
 800b910:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 800b914:	7a10      	ldrb	r0, [r2, #8]
 800b916:	685b      	ldr	r3, [r3, #4]
 800b918:	685b      	ldr	r3, [r3, #4]
 800b91a:	4718      	bx	r3
 800b91c:	20003de0 	.word	0x20003de0

0800b920 <disk_initialize>:
	BYTE pdrv				/* Physical drive nmuber to identify the drive */
)
{
  DSTATUS stat = RES_OK;

  if(disk.is_initialized[pdrv] == 0)
 800b920:	4b06      	ldr	r3, [pc, #24]	; (800b93c <disk_initialize+0x1c>)
 800b922:	5c1a      	ldrb	r2, [r3, r0]
 800b924:	b942      	cbnz	r2, 800b938 <disk_initialize+0x18>
  {
    disk.is_initialized[pdrv] = 1;
 800b926:	2201      	movs	r2, #1
 800b928:	541a      	strb	r2, [r3, r0]
    stat = disk.drv[pdrv]->disk_initialize(disk.lun[pdrv]);
 800b92a:	181a      	adds	r2, r3, r0
 800b92c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 800b930:	7a10      	ldrb	r0, [r2, #8]
 800b932:	685b      	ldr	r3, [r3, #4]
 800b934:	681b      	ldr	r3, [r3, #0]
 800b936:	4718      	bx	r3
  }
  return stat;
}
 800b938:	2000      	movs	r0, #0
 800b93a:	4770      	bx	lr
 800b93c:	20003de0 	.word	0x20003de0

0800b940 <disk_read>:
	BYTE pdrv,		/* Physical drive nmuber to identify the drive */
	BYTE *buff,		/* Data buffer to store read data */
	DWORD sector,	        /* Sector address in LBA */
	UINT count		/* Number of sectors to read */
)
{
 800b940:	b430      	push	{r4, r5}
  DRESULT res;

  res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count);
 800b942:	4c05      	ldr	r4, [pc, #20]	; (800b958 <disk_read+0x18>)
 800b944:	1825      	adds	r5, r4, r0
 800b946:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800b94a:	6860      	ldr	r0, [r4, #4]
 800b94c:	6884      	ldr	r4, [r0, #8]
 800b94e:	7a28      	ldrb	r0, [r5, #8]
 800b950:	46a4      	mov	ip, r4
  return res;
}
 800b952:	bc30      	pop	{r4, r5}
  res = disk.drv[pdrv]->disk_read(disk.lun[pdrv], buff, sector, count);
 800b954:	4760      	bx	ip
 800b956:	bf00      	nop
 800b958:	20003de0 	.word	0x20003de0

0800b95c <disk_write>:
	BYTE pdrv,		/* Physical drive nmuber to identify the drive */
	const BYTE *buff,	/* Data to be written */
	DWORD sector,		/* Sector address in LBA */
	UINT count        	/* Number of sectors to write */
)
{
 800b95c:	b430      	push	{r4, r5}
  DRESULT res;

  res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 800b95e:	4c05      	ldr	r4, [pc, #20]	; (800b974 <disk_write+0x18>)
 800b960:	1825      	adds	r5, r4, r0
 800b962:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800b966:	6860      	ldr	r0, [r4, #4]
 800b968:	68c4      	ldr	r4, [r0, #12]
 800b96a:	7a28      	ldrb	r0, [r5, #8]
 800b96c:	46a4      	mov	ip, r4
  return res;
}
 800b96e:	bc30      	pop	{r4, r5}
  res = disk.drv[pdrv]->disk_write(disk.lun[pdrv], buff, sector, count);
 800b970:	4760      	bx	ip
 800b972:	bf00      	nop
 800b974:	20003de0 	.word	0x20003de0

0800b978 <ld_dword>:
	rv = ptr[3];
	rv = rv << 8 | ptr[2];
	rv = rv << 8 | ptr[1];
	rv = rv << 8 | ptr[0];
	return rv;
}
 800b978:	6800      	ldr	r0, [r0, #0]
 800b97a:	4770      	bx	lr

0800b97c <st_dword>:
}

static
void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
{
	*ptr++ = (BYTE)val; val >>= 8;
 800b97c:	0a0b      	lsrs	r3, r1, #8
 800b97e:	7001      	strb	r1, [r0, #0]
	*ptr++ = (BYTE)val; val >>= 8;
 800b980:	7043      	strb	r3, [r0, #1]
 800b982:	0c0b      	lsrs	r3, r1, #16
	*ptr++ = (BYTE)val; val >>= 8;
 800b984:	0e09      	lsrs	r1, r1, #24
 800b986:	7083      	strb	r3, [r0, #2]
	*ptr++ = (BYTE)val;
 800b988:	70c1      	strb	r1, [r0, #3]
}
 800b98a:	4770      	bx	lr

0800b98c <mem_set>:
}

/* Fill memory block */
static
void mem_set (void* dst, int val, UINT cnt) {
	BYTE *d = (BYTE*)dst;
 800b98c:	4402      	add	r2, r0

	do {
		*d++ = (BYTE)val;
 800b98e:	f800 1b01 	strb.w	r1, [r0], #1
	} while (--cnt);
 800b992:	4290      	cmp	r0, r2
 800b994:	d1fb      	bne.n	800b98e <mem_set+0x2>
}
 800b996:	4770      	bx	lr

0800b998 <inc_lock>:
{
	UINT i;


	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
		if (Files[i].fs == dp->obj.fs &&
 800b998:	4a1f      	ldr	r2, [pc, #124]	; (800ba18 <inc_lock+0x80>)
{
 800b99a:	b5f0      	push	{r4, r5, r6, r7, lr}
		if (Files[i].fs == dp->obj.fs &&
 800b99c:	6813      	ldr	r3, [r2, #0]
 800b99e:	6806      	ldr	r6, [r0, #0]
 800b9a0:	429e      	cmp	r6, r3
 800b9a2:	d107      	bne.n	800b9b4 <inc_lock+0x1c>
 800b9a4:	6855      	ldr	r5, [r2, #4]
 800b9a6:	6884      	ldr	r4, [r0, #8]
 800b9a8:	42a5      	cmp	r5, r4
 800b9aa:	d103      	bne.n	800b9b4 <inc_lock+0x1c>
			Files[i].clu == dp->obj.sclust &&
 800b9ac:	6945      	ldr	r5, [r0, #20]
 800b9ae:	6894      	ldr	r4, [r2, #8]
 800b9b0:	42a5      	cmp	r5, r4
 800b9b2:	d022      	beq.n	800b9fa <inc_lock+0x62>
		if (Files[i].fs == dp->obj.fs &&
 800b9b4:	6914      	ldr	r4, [r2, #16]
 800b9b6:	42b4      	cmp	r4, r6
 800b9b8:	d107      	bne.n	800b9ca <inc_lock+0x32>
 800b9ba:	6957      	ldr	r7, [r2, #20]
 800b9bc:	6885      	ldr	r5, [r0, #8]
 800b9be:	42af      	cmp	r7, r5
 800b9c0:	d103      	bne.n	800b9ca <inc_lock+0x32>
			Files[i].clu == dp->obj.sclust &&
 800b9c2:	6997      	ldr	r7, [r2, #24]
 800b9c4:	6945      	ldr	r5, [r0, #20]
 800b9c6:	42af      	cmp	r7, r5
 800b9c8:	d021      	beq.n	800ba0e <inc_lock+0x76>
			Files[i].ofs == dp->dptr) break;
	}

	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 800b9ca:	b10b      	cbz	r3, 800b9d0 <inc_lock+0x38>
 800b9cc:	bb0c      	cbnz	r4, 800ba12 <inc_lock+0x7a>
 800b9ce:	2301      	movs	r3, #1
		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
		Files[i].fs = dp->obj.fs;
 800b9d0:	011d      	lsls	r5, r3, #4
 800b9d2:	eb02 1403 	add.w	r4, r2, r3, lsl #4
 800b9d6:	5156      	str	r6, [r2, r5]
		Files[i].clu = dp->obj.sclust;
 800b9d8:	6885      	ldr	r5, [r0, #8]
		Files[i].ofs = dp->dptr;
 800b9da:	6940      	ldr	r0, [r0, #20]
 800b9dc:	60a0      	str	r0, [r4, #8]
		Files[i].ctr = 0;
 800b9de:	2000      	movs	r0, #0
		Files[i].clu = dp->obj.sclust;
 800b9e0:	6065      	str	r5, [r4, #4]
		Files[i].ctr = 0;
 800b9e2:	81a0      	strh	r0, [r4, #12]
	}

	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 800b9e4:	b981      	cbnz	r1, 800ba08 <inc_lock+0x70>

	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 800b9e6:	eb02 1103 	add.w	r1, r2, r3, lsl #4
 800b9ea:	8989      	ldrh	r1, [r1, #12]
 800b9ec:	3101      	adds	r1, #1
 800b9ee:	b289      	uxth	r1, r1
 800b9f0:	eb02 1203 	add.w	r2, r2, r3, lsl #4

	return i + 1;
 800b9f4:	1c58      	adds	r0, r3, #1
	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 800b9f6:	8191      	strh	r1, [r2, #12]
}
 800b9f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 800b9fa:	2300      	movs	r3, #0
	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 800b9fc:	2900      	cmp	r1, #0
 800b9fe:	d0f2      	beq.n	800b9e6 <inc_lock+0x4e>
 800ba00:	eb02 1103 	add.w	r1, r2, r3, lsl #4
 800ba04:	8989      	ldrh	r1, [r1, #12]
 800ba06:	b921      	cbnz	r1, 800ba12 <inc_lock+0x7a>
	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 800ba08:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ba0c:	e7f0      	b.n	800b9f0 <inc_lock+0x58>
	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 800ba0e:	2301      	movs	r3, #1
 800ba10:	e7f4      	b.n	800b9fc <inc_lock+0x64>
		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 800ba12:	2000      	movs	r0, #0
 800ba14:	e7f0      	b.n	800b9f8 <inc_lock+0x60>
 800ba16:	bf00      	nop
 800ba18:	20003dbc 	.word	0x20003dbc

0800ba1c <dec_lock>:
{
	WORD n;
	FRESULT res;


	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 800ba1c:	3801      	subs	r0, #1
 800ba1e:	2801      	cmp	r0, #1
 800ba20:	d815      	bhi.n	800ba4e <dec_lock+0x32>
		n = Files[i].ctr;
 800ba22:	4a0c      	ldr	r2, [pc, #48]	; (800ba54 <dec_lock+0x38>)
 800ba24:	0101      	lsls	r1, r0, #4
 800ba26:	eb02 1000 	add.w	r0, r2, r0, lsl #4
 800ba2a:	8983      	ldrh	r3, [r0, #12]
		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 800ba2c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ba30:	d104      	bne.n	800ba3c <dec_lock+0x20>
		if (n > 0) n--;				/* Decrement read mode open count */
		Files[i].ctr = n;
 800ba32:	2300      	movs	r3, #0
 800ba34:	8183      	strh	r3, [r0, #12]
		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 800ba36:	2000      	movs	r0, #0
 800ba38:	5050      	str	r0, [r2, r1]
 800ba3a:	4770      	bx	lr
		if (n > 0) n--;				/* Decrement read mode open count */
 800ba3c:	2b00      	cmp	r3, #0
 800ba3e:	d0fa      	beq.n	800ba36 <dec_lock+0x1a>
 800ba40:	3b01      	subs	r3, #1
 800ba42:	b29b      	uxth	r3, r3
		Files[i].ctr = n;
 800ba44:	8183      	strh	r3, [r0, #12]
		if (n == 0) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 800ba46:	2b00      	cmp	r3, #0
 800ba48:	d0f5      	beq.n	800ba36 <dec_lock+0x1a>
		res = FR_OK;
 800ba4a:	2000      	movs	r0, #0
 800ba4c:	4770      	bx	lr
	} else {
		res = FR_INT_ERR;			/* Invalid index nunber */
 800ba4e:	2002      	movs	r0, #2
	}
	return res;
}
 800ba50:	4770      	bx	lr
 800ba52:	bf00      	nop
 800ba54:	20003dbc 	.word	0x20003dbc

0800ba58 <clear_lock>:
)
{
	UINT i;

	for (i = 0; i < _FS_LOCK; i++) {
		if (Files[i].fs == fs) Files[i].fs = 0;
 800ba58:	4b05      	ldr	r3, [pc, #20]	; (800ba70 <clear_lock+0x18>)
 800ba5a:	681a      	ldr	r2, [r3, #0]
 800ba5c:	4290      	cmp	r0, r2
 800ba5e:	bf04      	itt	eq
 800ba60:	2200      	moveq	r2, #0
 800ba62:	601a      	streq	r2, [r3, #0]
 800ba64:	691a      	ldr	r2, [r3, #16]
 800ba66:	4290      	cmp	r0, r2
 800ba68:	bf04      	itt	eq
 800ba6a:	2200      	moveq	r2, #0
 800ba6c:	611a      	streq	r2, [r3, #16]
	}
}
 800ba6e:	4770      	bx	lr
 800ba70:	20003dbc 	.word	0x20003dbc

0800ba74 <clust2sect>:
	FATFS* fs,		/* File system object */
	DWORD clst		/* Cluster# to be converted */
)
{
	clst -= 2;
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800ba74:	69c3      	ldr	r3, [r0, #28]
	clst -= 2;
 800ba76:	3902      	subs	r1, #2
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800ba78:	3b02      	subs	r3, #2
 800ba7a:	428b      	cmp	r3, r1
	return clst * fs->csize + fs->database;
 800ba7c:	bf83      	ittte	hi
 800ba7e:	8943      	ldrhhi	r3, [r0, #10]
 800ba80:	6b00      	ldrhi	r0, [r0, #48]	; 0x30
 800ba82:	fb01 0003 	mlahi	r0, r1, r3, r0
	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 800ba86:	2000      	movls	r0, #0
}
 800ba88:	4770      	bx	lr

0800ba8a <sum_sfn>:
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
	BYTE sum = 0;
	UINT n = 11;
 800ba8a:	f100 010b 	add.w	r1, r0, #11
	BYTE sum = 0;
 800ba8e:	2200      	movs	r2, #0

	do {
		sum = (sum >> 1) + (sum << 7) + *dir++;
 800ba90:	01d3      	lsls	r3, r2, #7
 800ba92:	ea43 0352 	orr.w	r3, r3, r2, lsr #1
 800ba96:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ba9a:	fa52 f383 	uxtab	r3, r2, r3
	} while (--n);
 800ba9e:	4288      	cmp	r0, r1
		sum = (sum >> 1) + (sum << 7) + *dir++;
 800baa0:	b2da      	uxtb	r2, r3
	} while (--n);
 800baa2:	d1f5      	bne.n	800ba90 <sum_sfn+0x6>
	return sum;
}
 800baa4:	4610      	mov	r0, r2
 800baa6:	4770      	bx	lr

0800baa8 <get_ldnumber>:
	char c;
	TCHAR tc;
#endif


	if (*path) {	/* If the pointer is not a null */
 800baa8:	6802      	ldr	r2, [r0, #0]
{
 800baaa:	b510      	push	{r4, lr}
	if (*path) {	/* If the pointer is not a null */
 800baac:	b152      	cbz	r2, 800bac4 <get_ldnumber+0x1c>
 800baae:	4611      	mov	r1, r2
 800bab0:	460b      	mov	r3, r1
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
 800bab2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bab6:	2c1f      	cmp	r4, #31
 800bab8:	d90c      	bls.n	800bad4 <get_ldnumber+0x2c>
 800baba:	2c3a      	cmp	r4, #58	; 0x3a
 800babc:	d1f8      	bne.n	800bab0 <get_ldnumber+0x8>
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0';
 800babe:	1c51      	adds	r1, r2, #1
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 800bac0:	428b      	cmp	r3, r1
 800bac2:	d002      	beq.n	800baca <get_ldnumber+0x22>
	int vol = -1;
 800bac4:	f04f 30ff 	mov.w	r0, #4294967295
 800bac8:	e005      	b.n	800bad6 <get_ldnumber+0x2e>
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 800baca:	7812      	ldrb	r2, [r2, #0]
 800bacc:	2a30      	cmp	r2, #48	; 0x30
 800bace:	d1f9      	bne.n	800bac4 <get_ldnumber+0x1c>
					vol = (int)i;
					*path = ++tt;
 800bad0:	3301      	adds	r3, #1
 800bad2:	6003      	str	r3, [r0, #0]
			return vol;
		}
#if _FS_RPATH != 0 && _VOLUMES >= 2
		vol = CurrVol;	/* Current drive */
#else
		vol = 0;		/* Drive 0 */
 800bad4:	2000      	movs	r0, #0
#endif
	}
	return vol;
}
 800bad6:	bd10      	pop	{r4, pc}

0800bad8 <get_fileinfo>:
{
 800bad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	fno->fname[0] = 0;		/* Invaidate file info */
 800badc:	2500      	movs	r5, #0
	FATFS *fs = dp->obj.fs;
 800bade:	f8d0 8000 	ldr.w	r8, [r0]
	fno->fname[0] = 0;		/* Invaidate file info */
 800bae2:	758d      	strb	r5, [r1, #22]
	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 800bae4:	69c3      	ldr	r3, [r0, #28]
{
 800bae6:	4606      	mov	r6, r0
 800bae8:	460c      	mov	r4, r1
	if (!dp->sect) return;	/* Exit if read pointer has reached end of directory */
 800baea:	2b00      	cmp	r3, #0
 800baec:	d05a      	beq.n	800bba4 <get_fileinfo+0xcc>
		if (dp->blk_ofs != 0xFFFFFFFF) {	/* Get LFN if available */
 800baee:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800baf0:	3301      	adds	r3, #1
 800baf2:	d00a      	beq.n	800bb0a <get_fileinfo+0x32>
 800baf4:	f101 0716 	add.w	r7, r1, #22
			while ((w = fs->lfnbuf[j++]) != 0) {	/* Get an LFN character */
 800baf8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800bafc:	f833 0015 	ldrh.w	r0, [r3, r5, lsl #1]
 800bb00:	2800      	cmp	r0, #0
 800bb02:	d151      	bne.n	800bba8 <get_fileinfo+0xd0>
			fno->fname[i] = 0;	/* Terminate the LFN */
 800bb04:	4425      	add	r5, r4
 800bb06:	2300      	movs	r3, #0
 800bb08:	75ab      	strb	r3, [r5, #22]
		c = (TCHAR)dp->dir[i++];
 800bb0a:	6a31      	ldr	r1, [r6, #32]
	lfv = fno->fname[i];	/* LFN is exist if non-zero */
 800bb0c:	7da5      	ldrb	r5, [r4, #22]
	i = j = 0;
 800bb0e:	2300      	movs	r3, #0
 800bb10:	1e4e      	subs	r6, r1, #1
 800bb12:	4618      	mov	r0, r3
			fno->altname[j++] = '.';
 800bb14:	272e      	movs	r7, #46	; 0x2e
		c = (TCHAR)dp->dir[i++];
 800bb16:	f816 2f01 	ldrb.w	r2, [r6, #1]!
		if (c == ' ') continue;				/* Skip padding spaces */
 800bb1a:	2a20      	cmp	r2, #32
		c = (TCHAR)dp->dir[i++];
 800bb1c:	f100 0001 	add.w	r0, r0, #1
		if (c == ' ') continue;				/* Skip padding spaces */
 800bb20:	d026      	beq.n	800bb70 <get_fileinfo+0x98>
		if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 800bb22:	2a05      	cmp	r2, #5
 800bb24:	bf08      	it	eq
 800bb26:	22e5      	moveq	r2, #229	; 0xe5
		if (i == 9) {						/* Insert a . if extension is exist */
 800bb28:	2809      	cmp	r0, #9
 800bb2a:	d107      	bne.n	800bb3c <get_fileinfo+0x64>
			if (!lfv) fno->fname[j] = '.';
 800bb2c:	eb04 0c03 	add.w	ip, r4, r3
 800bb30:	b90d      	cbnz	r5, 800bb36 <get_fileinfo+0x5e>
 800bb32:	f88c 7016 	strb.w	r7, [ip, #22]
			fno->altname[j++] = '.';
 800bb36:	f88c 7009 	strb.w	r7, [ip, #9]
 800bb3a:	3301      	adds	r3, #1
		fno->altname[j] = c;
 800bb3c:	eb04 0c03 	add.w	ip, r4, r3
 800bb40:	f88c 2009 	strb.w	r2, [ip, #9]
		if (!lfv) {
 800bb44:	b99d      	cbnz	r5, 800bb6e <get_fileinfo+0x96>
			if (IsUpper(c) && (dp->dir[DIR_NTres] & ((i >= 9) ? NS_EXT : NS_BODY))) {
 800bb46:	f1a2 0e41 	sub.w	lr, r2, #65	; 0x41
 800bb4a:	f1be 0f19 	cmp.w	lr, #25
 800bb4e:	d80c      	bhi.n	800bb6a <get_fileinfo+0x92>
 800bb50:	2808      	cmp	r0, #8
 800bb52:	f891 800c 	ldrb.w	r8, [r1, #12]
 800bb56:	bf8c      	ite	hi
 800bb58:	f04f 0e10 	movhi.w	lr, #16
 800bb5c:	f04f 0e08 	movls.w	lr, #8
 800bb60:	ea18 0f0e 	tst.w	r8, lr
				c += 0x20;			/* To lower */
 800bb64:	bf1c      	itt	ne
 800bb66:	3220      	addne	r2, #32
 800bb68:	b2d2      	uxtbne	r2, r2
			fno->fname[j] = c;
 800bb6a:	f88c 2016 	strb.w	r2, [ip, #22]
		j++;
 800bb6e:	3301      	adds	r3, #1
	while (i < 11) {		/* Copy name body and extension */
 800bb70:	280b      	cmp	r0, #11
 800bb72:	d1d0      	bne.n	800bb16 <get_fileinfo+0x3e>
	if (!lfv) {
 800bb74:	b92d      	cbnz	r5, 800bb82 <get_fileinfo+0xaa>
		fno->fname[j] = 0;
 800bb76:	18e2      	adds	r2, r4, r3
 800bb78:	7595      	strb	r5, [r2, #22]
		if (!dp->dir[DIR_NTres]) j = 0;	/* Altname is no longer needed if neither LFN nor case info is exist. */
 800bb7a:	7b0a      	ldrb	r2, [r1, #12]
 800bb7c:	2a00      	cmp	r2, #0
 800bb7e:	bf08      	it	eq
 800bb80:	2300      	moveq	r3, #0
	fno->altname[j] = 0;	/* Terminate the SFN */
 800bb82:	4423      	add	r3, r4
 800bb84:	2200      	movs	r2, #0
 800bb86:	725a      	strb	r2, [r3, #9]
	fno->fattrib = dp->dir[DIR_Attr];				/* Attribute */
 800bb88:	7acb      	ldrb	r3, [r1, #11]
 800bb8a:	7223      	strb	r3, [r4, #8]
	fno->fsize = ld_dword(dp->dir + DIR_FileSize);	/* Size */
 800bb8c:	f101 001c 	add.w	r0, r1, #28
 800bb90:	f7ff fef2 	bl	800b978 <ld_dword>
 800bb94:	6020      	str	r0, [r4, #0]
	tm = ld_dword(dp->dir + DIR_ModTime);			/* Timestamp */
 800bb96:	f101 0016 	add.w	r0, r1, #22
 800bb9a:	f7ff feed 	bl	800b978 <ld_dword>
	fno->ftime = (WORD)tm; fno->fdate = (WORD)(tm >> 16);
 800bb9e:	80e0      	strh	r0, [r4, #6]
 800bba0:	0c00      	lsrs	r0, r0, #16
 800bba2:	80a0      	strh	r0, [r4, #4]
}
 800bba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				w = ff_convert(w, 0);		/* Unicode -> OEM */
 800bba8:	2100      	movs	r1, #0
 800bbaa:	f7ff fe4f 	bl	800b84c <ff_convert>
				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
 800bbae:	b130      	cbz	r0, 800bbbe <get_fileinfo+0xe6>
				if (i >= _MAX_LFN) { i = 0; break; }	/* No LFN if buffer overflow */
 800bbb0:	3501      	adds	r5, #1
 800bbb2:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 800bbb6:	d002      	beq.n	800bbbe <get_fileinfo+0xe6>
				fno->fname[i++] = (TCHAR)w;
 800bbb8:	f807 0b01 	strb.w	r0, [r7], #1
 800bbbc:	e79c      	b.n	800baf8 <get_fileinfo+0x20>
				if (w == 0) { i = 0; break; }	/* No LFN if it could not be converted */
 800bbbe:	2500      	movs	r5, #0
 800bbc0:	e7a0      	b.n	800bb04 <get_fileinfo+0x2c>

0800bbc2 <sync_window.part.0>:
FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 800bbc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
		wsect = fs->winsect;	/* Current sector number */
 800bbc6:	6b46      	ldr	r6, [r0, #52]	; 0x34
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 800bbc8:	f100 0838 	add.w	r8, r0, #56	; 0x38
FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERROR */
 800bbcc:	4604      	mov	r4, r0
		if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 800bbce:	2301      	movs	r3, #1
 800bbd0:	7840      	ldrb	r0, [r0, #1]
 800bbd2:	4632      	mov	r2, r6
 800bbd4:	4641      	mov	r1, r8
 800bbd6:	f7ff fec1 	bl	800b95c <disk_write>
 800bbda:	4605      	mov	r5, r0
 800bbdc:	b9a8      	cbnz	r0, 800bc0a <sync_window.part.0+0x48>
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 800bbde:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bbe0:	6a22      	ldr	r2, [r4, #32]
			fs->wflag = 0;
 800bbe2:	70e0      	strb	r0, [r4, #3]
			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 800bbe4:	1af3      	subs	r3, r6, r3
 800bbe6:	4293      	cmp	r3, r2
 800bbe8:	d202      	bcs.n	800bbf0 <sync_window.part.0+0x2e>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 800bbea:	78a7      	ldrb	r7, [r4, #2]
 800bbec:	2f01      	cmp	r7, #1
 800bbee:	d802      	bhi.n	800bbf6 <sync_window.part.0+0x34>
}
 800bbf0:	4628      	mov	r0, r5
 800bbf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					wsect += fs->fsize;
 800bbf6:	6a23      	ldr	r3, [r4, #32]
					disk_write(fs->drv, fs->win, wsect, 1);
 800bbf8:	7860      	ldrb	r0, [r4, #1]
					wsect += fs->fsize;
 800bbfa:	441e      	add	r6, r3
					disk_write(fs->drv, fs->win, wsect, 1);
 800bbfc:	4632      	mov	r2, r6
 800bbfe:	2301      	movs	r3, #1
 800bc00:	4641      	mov	r1, r8
 800bc02:	f7ff feab 	bl	800b95c <disk_write>
				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 800bc06:	3f01      	subs	r7, #1
 800bc08:	e7f0      	b.n	800bbec <sync_window.part.0+0x2a>
			res = FR_DISK_ERR;
 800bc0a:	2501      	movs	r5, #1
 800bc0c:	e7f0      	b.n	800bbf0 <sync_window.part.0+0x2e>

0800bc0e <sync_window>:
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800bc0e:	78c3      	ldrb	r3, [r0, #3]
 800bc10:	b10b      	cbz	r3, 800bc16 <sync_window+0x8>
 800bc12:	f7ff bfd6 	b.w	800bbc2 <sync_window.part.0>
}
 800bc16:	4618      	mov	r0, r3
 800bc18:	4770      	bx	lr

0800bc1a <move_window>:
{
 800bc1a:	b538      	push	{r3, r4, r5, lr}
	if (sector != fs->winsect) {	/* Window offset changed? */
 800bc1c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800bc1e:	428b      	cmp	r3, r1
{
 800bc20:	4605      	mov	r5, r0
 800bc22:	460c      	mov	r4, r1
	if (sector != fs->winsect) {	/* Window offset changed? */
 800bc24:	d010      	beq.n	800bc48 <move_window+0x2e>
		res = sync_window(fs);		/* Write-back changes */
 800bc26:	f7ff fff2 	bl	800bc0e <sync_window>
		if (res == FR_OK) {			/* Fill sector window with new data */
 800bc2a:	b960      	cbnz	r0, 800bc46 <move_window+0x2c>
			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 800bc2c:	4622      	mov	r2, r4
 800bc2e:	7868      	ldrb	r0, [r5, #1]
 800bc30:	2301      	movs	r3, #1
 800bc32:	f105 0138 	add.w	r1, r5, #56	; 0x38
 800bc36:	f7ff fe83 	bl	800b940 <disk_read>
				res = FR_DISK_ERR;
 800bc3a:	2800      	cmp	r0, #0
 800bc3c:	bf1c      	itt	ne
 800bc3e:	f04f 34ff 	movne.w	r4, #4294967295
 800bc42:	2001      	movne	r0, #1
			fs->winsect = sector;
 800bc44:	636c      	str	r4, [r5, #52]	; 0x34
}
 800bc46:	bd38      	pop	{r3, r4, r5, pc}
	FRESULT res = FR_OK;
 800bc48:	2000      	movs	r0, #0
 800bc4a:	e7fc      	b.n	800bc46 <move_window+0x2c>

0800bc4c <check_fs>:
BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 800bc4c:	2300      	movs	r3, #0
{
 800bc4e:	b510      	push	{r4, lr}
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
 800bc50:	70c3      	strb	r3, [r0, #3]
 800bc52:	f04f 33ff 	mov.w	r3, #4294967295
 800bc56:	6343      	str	r3, [r0, #52]	; 0x34
{
 800bc58:	4604      	mov	r4, r0
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 800bc5a:	f7ff ffde 	bl	800bc1a <move_window>
 800bc5e:	4603      	mov	r3, r0
 800bc60:	bb18      	cbnz	r0, 800bcaa <check_fs+0x5e>

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed here even if the sector size is >512) */
 800bc62:	f8b4 1236 	ldrh.w	r1, [r4, #566]	; 0x236
 800bc66:	f64a 2255 	movw	r2, #43605	; 0xaa55
 800bc6a:	4291      	cmp	r1, r2
 800bc6c:	d11f      	bne.n	800bcae <check_fs+0x62>

	if (fs->win[BS_JmpBoot] == 0xE9 || (fs->win[BS_JmpBoot] == 0xEB && fs->win[BS_JmpBoot + 2] == 0x90)) {
 800bc6e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800bc72:	2ae9      	cmp	r2, #233	; 0xe9
 800bc74:	d005      	beq.n	800bc82 <check_fs+0x36>
 800bc76:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bc78:	490f      	ldr	r1, [pc, #60]	; (800bcb8 <check_fs+0x6c>)
 800bc7a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 800bc7e:	428a      	cmp	r2, r1
 800bc80:	d117      	bne.n	800bcb2 <check_fs+0x66>
		if ((ld_dword(fs->win + BS_FilSysType) & 0xFFFFFF) == 0x544146) return 0;	/* Check "FAT" string */
 800bc82:	f104 006e 	add.w	r0, r4, #110	; 0x6e
 800bc86:	f7ff fe77 	bl	800b978 <ld_dword>
 800bc8a:	4a0c      	ldr	r2, [pc, #48]	; (800bcbc <check_fs+0x70>)
 800bc8c:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800bc90:	4290      	cmp	r0, r2
 800bc92:	d008      	beq.n	800bca6 <check_fs+0x5a>
		if (ld_dword(fs->win + BS_FilSysType32) == 0x33544146) return 0;			/* Check "FAT3" string */
 800bc94:	f104 008a 	add.w	r0, r4, #138	; 0x8a
 800bc98:	f7ff fe6e 	bl	800b978 <ld_dword>
	}
#if _FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;
#endif
	return 2;
 800bc9c:	f102 524c 	add.w	r2, r2, #855638016	; 0x33000000
 800bca0:	4290      	cmp	r0, r2
 800bca2:	bf18      	it	ne
 800bca4:	2302      	movne	r3, #2
}
 800bca6:	4618      	mov	r0, r3
 800bca8:	bd10      	pop	{r4, pc}
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
 800bcaa:	2304      	movs	r3, #4
 800bcac:	e7fb      	b.n	800bca6 <check_fs+0x5a>
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always placed here even if the sector size is >512) */
 800bcae:	2303      	movs	r3, #3
 800bcb0:	e7f9      	b.n	800bca6 <check_fs+0x5a>
	return 2;
 800bcb2:	2302      	movs	r3, #2
 800bcb4:	e7f7      	b.n	800bca6 <check_fs+0x5a>
 800bcb6:	bf00      	nop
 800bcb8:	009000eb 	.word	0x009000eb
 800bcbc:	00544146 	.word	0x00544146

0800bcc0 <put_fat>:
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800bcc0:	2901      	cmp	r1, #1
{
 800bcc2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bcc6:	4606      	mov	r6, r0
 800bcc8:	460c      	mov	r4, r1
 800bcca:	4617      	mov	r7, r2
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
 800bccc:	d973      	bls.n	800bdb6 <put_fat+0xf6>
 800bcce:	69c3      	ldr	r3, [r0, #28]
 800bcd0:	428b      	cmp	r3, r1
 800bcd2:	d970      	bls.n	800bdb6 <put_fat+0xf6>
		switch (fs->fs_type) {
 800bcd4:	7803      	ldrb	r3, [r0, #0]
 800bcd6:	2b02      	cmp	r3, #2
 800bcd8:	d03f      	beq.n	800bd5a <put_fat+0x9a>
 800bcda:	2b03      	cmp	r3, #3
 800bcdc:	d050      	beq.n	800bd80 <put_fat+0xc0>
 800bcde:	2b01      	cmp	r3, #1
 800bce0:	d169      	bne.n	800bdb6 <put_fat+0xf6>
			bc = (UINT)clst; bc += bc / 2;
 800bce2:	eb01 0851 	add.w	r8, r1, r1, lsr #1
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800bce6:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800bce8:	eb01 2158 	add.w	r1, r1, r8, lsr #9
 800bcec:	f7ff ff95 	bl	800bc1a <move_window>
 800bcf0:	4605      	mov	r5, r0
			if (res != FR_OK) break;
 800bcf2:	bb38      	cbnz	r0, 800bd44 <put_fat+0x84>
			p = fs->win + bc++ % SS(fs);
 800bcf4:	f106 0938 	add.w	r9, r6, #56	; 0x38
 800bcf8:	f108 0a01 	add.w	sl, r8, #1
 800bcfc:	f3c8 0808 	ubfx	r8, r8, #0, #9
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 800bd00:	f014 0401 	ands.w	r4, r4, #1
 800bd04:	bf1f      	itttt	ne
 800bd06:	f819 3008 	ldrbne.w	r3, [r9, r8]
 800bd0a:	f003 020f 	andne.w	r2, r3, #15
 800bd0e:	013b      	lslne	r3, r7, #4
 800bd10:	f003 03f0 	andne.w	r3, r3, #240	; 0xf0
 800bd14:	bf14      	ite	ne
 800bd16:	4313      	orrne	r3, r2
 800bd18:	b2fb      	uxtbeq	r3, r7
 800bd1a:	f809 3008 	strb.w	r3, [r9, r8]
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800bd1e:	6ab1      	ldr	r1, [r6, #40]	; 0x28
			fs->wflag = 1;
 800bd20:	2301      	movs	r3, #1
 800bd22:	70f3      	strb	r3, [r6, #3]
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 800bd24:	eb01 215a 	add.w	r1, r1, sl, lsr #9
 800bd28:	4630      	mov	r0, r6
 800bd2a:	f7ff ff76 	bl	800bc1a <move_window>
			if (res != FR_OK) break;
 800bd2e:	4605      	mov	r5, r0
 800bd30:	b940      	cbnz	r0, 800bd44 <put_fat+0x84>
			p = fs->win + bc % SS(fs);
 800bd32:	f3ca 0a08 	ubfx	sl, sl, #0, #9
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 800bd36:	b144      	cbz	r4, 800bd4a <put_fat+0x8a>
 800bd38:	f3c7 1707 	ubfx	r7, r7, #4, #8
 800bd3c:	f809 700a 	strb.w	r7, [r9, sl]
			fs->wflag = 1;
 800bd40:	2301      	movs	r3, #1
 800bd42:	70f3      	strb	r3, [r6, #3]
}
 800bd44:	4628      	mov	r0, r5
 800bd46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 800bd4a:	f819 300a 	ldrb.w	r3, [r9, sl]
 800bd4e:	f3c7 2703 	ubfx	r7, r7, #8, #4
 800bd52:	f023 030f 	bic.w	r3, r3, #15
 800bd56:	431f      	orrs	r7, r3
 800bd58:	e7f0      	b.n	800bd3c <put_fat+0x7c>
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 800bd5a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800bd5c:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 800bd60:	f7ff ff5b 	bl	800bc1a <move_window>
			if (res != FR_OK) break;
 800bd64:	4605      	mov	r5, r0
 800bd66:	2800      	cmp	r0, #0
 800bd68:	d1ec      	bne.n	800bd44 <put_fat+0x84>
			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);
 800bd6a:	0064      	lsls	r4, r4, #1
 800bd6c:	f106 0338 	add.w	r3, r6, #56	; 0x38
 800bd70:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
 800bd74:	1918      	adds	r0, r3, r4
	*ptr++ = (BYTE)val; val >>= 8;
 800bd76:	551f      	strb	r7, [r3, r4]
 800bd78:	f3c7 2707 	ubfx	r7, r7, #8, #8
	*ptr++ = (BYTE)val;
 800bd7c:	7047      	strb	r7, [r0, #1]
			fs->wflag = 1;
 800bd7e:	e7df      	b.n	800bd40 <put_fat+0x80>
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 800bd80:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800bd82:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
 800bd86:	f7ff ff48 	bl	800bc1a <move_window>
			if (res != FR_OK) break;
 800bd8a:	4605      	mov	r5, r0
 800bd8c:	2800      	cmp	r0, #0
 800bd8e:	d1d9      	bne.n	800bd44 <put_fat+0x84>
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
 800bd90:	00a4      	lsls	r4, r4, #2
 800bd92:	f106 0338 	add.w	r3, r6, #56	; 0x38
 800bd96:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
 800bd9a:	441c      	add	r4, r3
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	f7ff fdeb 	bl	800b978 <ld_dword>
 800bda2:	f027 4770 	bic.w	r7, r7, #4026531840	; 0xf0000000
 800bda6:	f000 4070 	and.w	r0, r0, #4026531840	; 0xf0000000
			st_dword(fs->win + clst * 4 % SS(fs), val);
 800bdaa:	ea47 0100 	orr.w	r1, r7, r0
 800bdae:	4620      	mov	r0, r4
 800bdb0:	f7ff fde4 	bl	800b97c <st_dword>
 800bdb4:	e7c4      	b.n	800bd40 <put_fat+0x80>
		switch (fs->fs_type) {
 800bdb6:	2502      	movs	r5, #2
 800bdb8:	e7c4      	b.n	800bd44 <put_fat+0x84>

0800bdba <unlock_fs>:
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
 800bdba:	b140      	cbz	r0, 800bdce <unlock_fs+0x14>
 800bdbc:	f1a1 030b 	sub.w	r3, r1, #11
 800bdc0:	2b01      	cmp	r3, #1
 800bdc2:	d904      	bls.n	800bdce <unlock_fs+0x14>
 800bdc4:	290f      	cmp	r1, #15
 800bdc6:	d002      	beq.n	800bdce <unlock_fs+0x14>
		ff_rel_grant(fs->sobj);
 800bdc8:	6900      	ldr	r0, [r0, #16]
 800bdca:	f000 be32 	b.w	800ca32 <ff_rel_grant>
}
 800bdce:	4770      	bx	lr

0800bdd0 <find_volume>:
FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,		/* Pointer to pointer to the found file system object */
	BYTE mode			/* !=0: Check write protection for write access */
)
{
 800bdd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
 800bdd4:	2300      	movs	r3, #0
 800bdd6:	600b      	str	r3, [r1, #0]
{
 800bdd8:	460f      	mov	r7, r1
 800bdda:	4615      	mov	r5, r2
	vol = get_ldnumber(path);
 800bddc:	f7ff fe64 	bl	800baa8 <get_ldnumber>
	if (vol < 0) return FR_INVALID_DRIVE;
 800bde0:	1e06      	subs	r6, r0, #0
 800bde2:	f2c0 811b 	blt.w	800c01c <find_volume+0x24c>

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
 800bde6:	4b91      	ldr	r3, [pc, #580]	; (800c02c <find_volume+0x25c>)
 800bde8:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 800bdec:	2c00      	cmp	r4, #0
 800bdee:	f000 8117 	beq.w	800c020 <find_volume+0x250>
	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 800bdf2:	6920      	ldr	r0, [r4, #16]
 800bdf4:	f000 fe14 	bl	800ca20 <ff_req_grant>
 800bdf8:	2800      	cmp	r0, #0
 800bdfa:	f000 8113 	beq.w	800c024 <find_volume+0x254>

	ENTER_FF(fs);						/* Lock the volume */
	*rfs = fs;							/* Return pointer to the file system object */
 800bdfe:	603c      	str	r4, [r7, #0]

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type) {					/* If the volume has been mounted */
 800be00:	7823      	ldrb	r3, [r4, #0]
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
 800be02:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
	if (fs->fs_type) {					/* If the volume has been mounted */
 800be06:	b16b      	cbz	r3, 800be24 <find_volume+0x54>
		stat = disk_status(fs->drv);
 800be08:	7860      	ldrb	r0, [r4, #1]
 800be0a:	f7ff fd7f 	bl	800b90c <disk_status>
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 800be0e:	07c1      	lsls	r1, r0, #31
 800be10:	d408      	bmi.n	800be24 <find_volume+0x54>
			if (!_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
 800be12:	b11d      	cbz	r5, 800be1c <find_volume+0x4c>
 800be14:	f010 0504 	ands.w	r5, r0, #4
 800be18:	d000      	beq.n	800be1c <find_volume+0x4c>
				return FR_WRITE_PROTECTED;
 800be1a:	250a      	movs	r5, #10
#endif
#if _FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
 800be1c:	4628      	mov	r0, r5
 800be1e:	b004      	add	sp, #16
 800be20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	fs->fs_type = 0;					/* Clear the file system object */
 800be24:	2300      	movs	r3, #0
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 800be26:	b2f0      	uxtb	r0, r6
	fs->fs_type = 0;					/* Clear the file system object */
 800be28:	7023      	strb	r3, [r4, #0]
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 800be2a:	7060      	strb	r0, [r4, #1]
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 800be2c:	f7ff fd78 	bl	800b920 <disk_initialize>
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
 800be30:	07c2      	lsls	r2, r0, #31
 800be32:	f100 80f9 	bmi.w	800c028 <find_volume+0x258>
	if (!_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
 800be36:	b10d      	cbz	r5, 800be3c <find_volume+0x6c>
 800be38:	0743      	lsls	r3, r0, #29
 800be3a:	d4ee      	bmi.n	800be1a <find_volume+0x4a>
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
 800be3c:	2100      	movs	r1, #0
 800be3e:	4620      	mov	r0, r4
 800be40:	f7ff ff04 	bl	800bc4c <check_fs>
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
 800be44:	2802      	cmp	r0, #2
 800be46:	f040 80cd 	bne.w	800bfe4 <find_volume+0x214>
 800be4a:	466f      	mov	r7, sp
 800be4c:	f504 73ff 	add.w	r3, r4, #510	; 0x1fe
 800be50:	f204 213e 	addw	r1, r4, #574	; 0x23e
 800be54:	463a      	mov	r2, r7
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 800be56:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 800be5a:	b110      	cbz	r0, 800be62 <find_volume+0x92>
 800be5c:	4618      	mov	r0, r3
 800be5e:	f7ff fd8b 	bl	800b978 <ld_dword>
		for (i = 0; i < 4; i++) {		/* Get partition offset */
 800be62:	3310      	adds	r3, #16
 800be64:	428b      	cmp	r3, r1
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
 800be66:	f842 0b04 	str.w	r0, [r2], #4
		for (i = 0; i < 4; i++) {		/* Get partition offset */
 800be6a:	d1f4      	bne.n	800be56 <find_volume+0x86>
 800be6c:	2500      	movs	r5, #0
			bsect = br[i];
 800be6e:	f857 6b04 	ldr.w	r6, [r7], #4
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 800be72:	2e00      	cmp	r6, #0
 800be74:	f000 80ad 	beq.w	800bfd2 <find_volume+0x202>
 800be78:	4631      	mov	r1, r6
 800be7a:	4620      	mov	r0, r4
 800be7c:	f7ff fee6 	bl	800bc4c <check_fs>
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 800be80:	2801      	cmp	r0, #1
 800be82:	f200 80a7 	bhi.w	800bfd4 <find_volume+0x204>
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
 800be86:	f8b4 3043 	ldrh.w	r3, [r4, #67]	; 0x43
 800be8a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800be8e:	f040 80ad 	bne.w	800bfec <find_volume+0x21c>
		fasize = ld_word(fs->win + BPB_FATSz16);		/* Number of sectors per FAT */
 800be92:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
 800be96:	b921      	cbnz	r1, 800bea2 <find_volume+0xd2>
 800be98:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800be9c:	f7ff fd6c 	bl	800b978 <ld_dword>
 800bea0:	4601      	mov	r1, r0
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
 800bea2:	f894 2048 	ldrb.w	r2, [r4, #72]	; 0x48
		fs->fsize = fasize;
 800bea6:	6221      	str	r1, [r4, #32]
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 800bea8:	1e53      	subs	r3, r2, #1
 800beaa:	2b01      	cmp	r3, #1
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
 800beac:	70a2      	strb	r2, [r4, #2]
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
 800beae:	f200 809d 	bhi.w	800bfec <find_volume+0x21c>
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
 800beb2:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
 800beb6:	8165      	strh	r5, [r4, #10]
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 800beb8:	2d00      	cmp	r5, #0
 800beba:	f000 8097 	beq.w	800bfec <find_volume+0x21c>
 800bebe:	1e6b      	subs	r3, r5, #1
 800bec0:	422b      	tst	r3, r5
 800bec2:	f040 8093 	bne.w	800bfec <find_volume+0x21c>
	rv = ptr[1];
 800bec6:	f8b4 8049 	ldrh.w	r8, [r4, #73]	; 0x49
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
 800beca:	f8a4 8008 	strh.w	r8, [r4, #8]
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
 800bece:	f018 0f0f 	tst.w	r8, #15
 800bed2:	f040 808b 	bne.w	800bfec <find_volume+0x21c>
		tsect = ld_word(fs->win + BPB_TotSec16);		/* Number of sectors on the volume */
 800bed6:	f8b4 004b 	ldrh.w	r0, [r4, #75]	; 0x4b
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
 800beda:	b918      	cbnz	r0, 800bee4 <find_volume+0x114>
 800bedc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800bee0:	f7ff fd4a 	bl	800b978 <ld_dword>
	rv = ptr[1];
 800bee4:	f8b4 7046 	ldrh.w	r7, [r4, #70]	; 0x46
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
 800bee8:	2f00      	cmp	r7, #0
 800beea:	d07f      	beq.n	800bfec <find_volume+0x21c>
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
 800beec:	fb01 fc02 	mul.w	ip, r1, r2
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
 800bef0:	eb07 1218 	add.w	r2, r7, r8, lsr #4
 800bef4:	eb02 0e0c 	add.w	lr, r2, ip
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
 800bef8:	4570      	cmp	r0, lr
 800befa:	d377      	bcc.n	800bfec <find_volume+0x21c>
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 800befc:	eba0 020e 	sub.w	r2, r0, lr
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 800bf00:	42aa      	cmp	r2, r5
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
 800bf02:	fbb2 f3f5 	udiv	r3, r2, r5
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 800bf06:	d371      	bcc.n	800bfec <find_volume+0x21c>
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
 800bf08:	f64f 72f5 	movw	r2, #65525	; 0xfff5
 800bf0c:	4293      	cmp	r3, r2
 800bf0e:	d871      	bhi.n	800bff4 <find_volume+0x224>
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
 800bf10:	f640 75f5 	movw	r5, #4085	; 0xff5
 800bf14:	42ab      	cmp	r3, r5
 800bf16:	bf8c      	ite	hi
 800bf18:	2502      	movhi	r5, #2
 800bf1a:	2501      	movls	r5, #1
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 800bf1c:	3302      	adds	r3, #2
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 800bf1e:	4437      	add	r7, r6
		fs->database = bsect + sysect;					/* Data start sector */
 800bf20:	eb0e 0206 	add.w	r2, lr, r6
		if (fmt == FS_FAT32) {
 800bf24:	2d03      	cmp	r5, #3
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
 800bf26:	61e3      	str	r3, [r4, #28]
		fs->volbase = bsect;							/* Volume start sector */
 800bf28:	6266      	str	r6, [r4, #36]	; 0x24
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
 800bf2a:	62a7      	str	r7, [r4, #40]	; 0x28
		fs->database = bsect + sysect;					/* Data start sector */
 800bf2c:	6322      	str	r2, [r4, #48]	; 0x30
		if (fmt == FS_FAT32) {
 800bf2e:	d163      	bne.n	800bff8 <find_volume+0x228>
	rv = rv << 8 | ptr[0];
 800bf30:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
 800bf34:	ea52 0208 	orrs.w	r2, r2, r8
 800bf38:	d158      	bne.n	800bfec <find_volume+0x21c>
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 800bf3a:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bf3e:	f7ff fd1b 	bl	800b978 <ld_dword>
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
 800bf42:	009b      	lsls	r3, r3, #2
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
 800bf44:	62e0      	str	r0, [r4, #44]	; 0x2c
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
 800bf46:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
 800bf4a:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
 800bf4e:	d34d      	bcc.n	800bfec <find_volume+0x21c>
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
 800bf50:	f04f 33ff 	mov.w	r3, #4294967295
 800bf54:	e9c4 3305 	strd	r3, r3, [r4, #20]
		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
 800bf58:	2d03      	cmp	r5, #3
		fs->fsi_flag = 0x80;
 800bf5a:	f04f 0380 	mov.w	r3, #128	; 0x80
 800bf5e:	7123      	strb	r3, [r4, #4]
		if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo32 == 1 */
 800bf60:	d12b      	bne.n	800bfba <find_volume+0x1ea>
			&& ld_word(fs->win + BPB_FSInfo32) == 1
 800bf62:	f8b4 3068 	ldrh.w	r3, [r4, #104]	; 0x68
 800bf66:	2b01      	cmp	r3, #1
 800bf68:	d127      	bne.n	800bfba <find_volume+0x1ea>
			&& move_window(fs, bsect + 1) == FR_OK)
 800bf6a:	1c71      	adds	r1, r6, #1
 800bf6c:	4620      	mov	r0, r4
 800bf6e:	f7ff fe54 	bl	800bc1a <move_window>
 800bf72:	bb10      	cbnz	r0, 800bfba <find_volume+0x1ea>
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 800bf74:	f8b4 2236 	ldrh.w	r2, [r4, #566]	; 0x236
			fs->fsi_flag = 0;
 800bf78:	7120      	strb	r0, [r4, #4]
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 800bf7a:	f64a 2355 	movw	r3, #43605	; 0xaa55
 800bf7e:	429a      	cmp	r2, r3
 800bf80:	d11b      	bne.n	800bfba <find_volume+0x1ea>
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
 800bf82:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bf86:	f7ff fcf7 	bl	800b978 <ld_dword>
 800bf8a:	4b29      	ldr	r3, [pc, #164]	; (800c030 <find_volume+0x260>)
 800bf8c:	4298      	cmp	r0, r3
 800bf8e:	d114      	bne.n	800bfba <find_volume+0x1ea>
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
 800bf90:	f504 7007 	add.w	r0, r4, #540	; 0x21c
 800bf94:	f7ff fcf0 	bl	800b978 <ld_dword>
 800bf98:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
 800bf9c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800bfa0:	3320      	adds	r3, #32
 800bfa2:	4298      	cmp	r0, r3
 800bfa4:	d109      	bne.n	800bfba <find_volume+0x1ea>
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
 800bfa6:	f504 7008 	add.w	r0, r4, #544	; 0x220
 800bfaa:	f7ff fce5 	bl	800b978 <ld_dword>
 800bfae:	61a0      	str	r0, [r4, #24]
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
 800bfb0:	f504 7009 	add.w	r0, r4, #548	; 0x224
 800bfb4:	f7ff fce0 	bl	800b978 <ld_dword>
 800bfb8:	6160      	str	r0, [r4, #20]
	fs->id = ++Fsid;		/* File system mount ID */
 800bfba:	4a1e      	ldr	r2, [pc, #120]	; (800c034 <find_volume+0x264>)
	fs->fs_type = fmt;		/* FAT sub-type */
 800bfbc:	7025      	strb	r5, [r4, #0]
	fs->id = ++Fsid;		/* File system mount ID */
 800bfbe:	8813      	ldrh	r3, [r2, #0]
 800bfc0:	3301      	adds	r3, #1
 800bfc2:	b29b      	uxth	r3, r3
 800bfc4:	80e3      	strh	r3, [r4, #6]
	clear_lock(fs);
 800bfc6:	4620      	mov	r0, r4
	fs->id = ++Fsid;		/* File system mount ID */
 800bfc8:	8013      	strh	r3, [r2, #0]
	return FR_OK;
 800bfca:	2500      	movs	r5, #0
	clear_lock(fs);
 800bfcc:	f7ff fd44 	bl	800ba58 <clear_lock>
	return FR_OK;
 800bfd0:	e724      	b.n	800be1c <find_volume+0x4c>
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
 800bfd2:	2003      	movs	r0, #3
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
 800bfd4:	3501      	adds	r5, #1
 800bfd6:	2d04      	cmp	r5, #4
 800bfd8:	f47f af49 	bne.w	800be6e <find_volume+0x9e>
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 800bfdc:	2804      	cmp	r0, #4
 800bfde:	d105      	bne.n	800bfec <find_volume+0x21c>
 800bfe0:	2501      	movs	r5, #1
 800bfe2:	e71b      	b.n	800be1c <find_volume+0x4c>
 800bfe4:	2804      	cmp	r0, #4
 800bfe6:	d0fb      	beq.n	800bfe0 <find_volume+0x210>
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
 800bfe8:	2801      	cmp	r0, #1
 800bfea:	d901      	bls.n	800bff0 <find_volume+0x220>
 800bfec:	250d      	movs	r5, #13
 800bfee:	e715      	b.n	800be1c <find_volume+0x4c>
	bsect = 0;
 800bff0:	2600      	movs	r6, #0
 800bff2:	e748      	b.n	800be86 <find_volume+0xb6>
		fmt = FS_FAT32;
 800bff4:	2503      	movs	r5, #3
 800bff6:	e791      	b.n	800bf1c <find_volume+0x14c>
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;/* (BPB_RootEntCnt must not be 0) */
 800bff8:	f1b8 0f00 	cmp.w	r8, #0
 800bffc:	d0f6      	beq.n	800bfec <find_volume+0x21c>
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800bffe:	2d02      	cmp	r5, #2
 800c000:	ea4f 0243 	mov.w	r2, r3, lsl #1
 800c004:	bf18      	it	ne
 800c006:	18d2      	addne	r2, r2, r3
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 800c008:	4467      	add	r7, ip
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800c00a:	bf18      	it	ne
 800c00c:	f003 0301 	andne.w	r3, r3, #1
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
 800c010:	62e7      	str	r7, [r4, #44]	; 0x2c
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 800c012:	bf0c      	ite	eq
 800c014:	4613      	moveq	r3, r2
 800c016:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
 800c01a:	e794      	b.n	800bf46 <find_volume+0x176>
	if (vol < 0) return FR_INVALID_DRIVE;
 800c01c:	250b      	movs	r5, #11
 800c01e:	e6fd      	b.n	800be1c <find_volume+0x4c>
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 800c020:	250c      	movs	r5, #12
 800c022:	e6fb      	b.n	800be1c <find_volume+0x4c>
	ENTER_FF(fs);						/* Lock the volume */
 800c024:	250f      	movs	r5, #15
 800c026:	e6f9      	b.n	800be1c <find_volume+0x4c>
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 800c028:	2503      	movs	r5, #3
 800c02a:	e6f7      	b.n	800be1c <find_volume+0x4c>
 800c02c:	20003db8 	.word	0x20003db8
 800c030:	41615252 	.word	0x41615252
 800c034:	20003ddc 	.word	0x20003ddc

0800c038 <ld_clust.isra.0>:
	if (fs->fs_type == FS_FAT32) {
 800c038:	2803      	cmp	r0, #3
	cl = ld_word(dir + DIR_FstClusLO);
 800c03a:	8b4b      	ldrh	r3, [r1, #26]
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
 800c03c:	bf04      	itt	eq
 800c03e:	8a8a      	ldrheq	r2, [r1, #20]
 800c040:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
}
 800c044:	4618      	mov	r0, r3
 800c046:	4770      	bx	lr

0800c048 <get_fat.isra.0>:
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
 800c048:	2901      	cmp	r1, #1
DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
 800c04a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c04c:	4606      	mov	r6, r0
 800c04e:	460c      	mov	r4, r1
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
 800c050:	d94e      	bls.n	800c0f0 <get_fat.isra.0+0xa8>
 800c052:	69c3      	ldr	r3, [r0, #28]
 800c054:	4299      	cmp	r1, r3
 800c056:	d24b      	bcs.n	800c0f0 <get_fat.isra.0+0xa8>
		switch (fs->fs_type) {
 800c058:	7803      	ldrb	r3, [r0, #0]
 800c05a:	2b02      	cmp	r3, #2
 800c05c:	d029      	beq.n	800c0b2 <get_fat.isra.0+0x6a>
 800c05e:	2b03      	cmp	r3, #3
 800c060:	d034      	beq.n	800c0cc <get_fat.isra.0+0x84>
 800c062:	2b01      	cmp	r3, #1
 800c064:	d144      	bne.n	800c0f0 <get_fat.isra.0+0xa8>
			bc = (UINT)clst; bc += bc / 2;
 800c066:	eb01 0551 	add.w	r5, r1, r1, lsr #1
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c06a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800c06c:	eb01 2155 	add.w	r1, r1, r5, lsr #9
 800c070:	f7ff fdd3 	bl	800bc1a <move_window>
 800c074:	b110      	cbz	r0, 800c07c <get_fat.isra.0+0x34>
		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 800c076:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c07a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			wc = fs->win[bc++ % SS(fs)];
 800c07c:	1c6f      	adds	r7, r5, #1
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c07e:	6ab1      	ldr	r1, [r6, #40]	; 0x28
			wc = fs->win[bc++ % SS(fs)];
 800c080:	f3c5 0508 	ubfx	r5, r5, #0, #9
 800c084:	4435      	add	r5, r6
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c086:	eb01 2157 	add.w	r1, r1, r7, lsr #9
 800c08a:	4630      	mov	r0, r6
			wc = fs->win[bc++ % SS(fs)];
 800c08c:	f895 5038 	ldrb.w	r5, [r5, #56]	; 0x38
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 800c090:	f7ff fdc3 	bl	800bc1a <move_window>
 800c094:	2800      	cmp	r0, #0
 800c096:	d1ee      	bne.n	800c076 <get_fat.isra.0+0x2e>
			wc |= fs->win[bc % SS(fs)] << 8;
 800c098:	f3c7 0708 	ubfx	r7, r7, #0, #9
 800c09c:	443e      	add	r6, r7
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 800c09e:	07e3      	lsls	r3, r4, #31
			wc |= fs->win[bc % SS(fs)] << 8;
 800c0a0:	f896 0038 	ldrb.w	r0, [r6, #56]	; 0x38
 800c0a4:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 800c0a8:	bf4c      	ite	mi
 800c0aa:	0900      	lsrmi	r0, r0, #4
 800c0ac:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
 800c0b0:	e7e3      	b.n	800c07a <get_fat.isra.0+0x32>
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 800c0b2:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800c0b4:	eb01 2114 	add.w	r1, r1, r4, lsr #8
 800c0b8:	f7ff fdaf 	bl	800bc1a <move_window>
 800c0bc:	2800      	cmp	r0, #0
 800c0be:	d1da      	bne.n	800c076 <get_fat.isra.0+0x2e>
			val = ld_word(fs->win + clst * 2 % SS(fs));
 800c0c0:	0064      	lsls	r4, r4, #1
 800c0c2:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
 800c0c6:	4426      	add	r6, r4
 800c0c8:	8f30      	ldrh	r0, [r6, #56]	; 0x38
			break;
 800c0ca:	e7d6      	b.n	800c07a <get_fat.isra.0+0x32>
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 800c0cc:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800c0ce:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
 800c0d2:	f7ff fda2 	bl	800bc1a <move_window>
 800c0d6:	2800      	cmp	r0, #0
 800c0d8:	d1cd      	bne.n	800c076 <get_fat.isra.0+0x2e>
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;
 800c0da:	00a4      	lsls	r4, r4, #2
 800c0dc:	f106 0038 	add.w	r0, r6, #56	; 0x38
 800c0e0:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
 800c0e4:	4420      	add	r0, r4
 800c0e6:	f7ff fc47 	bl	800b978 <ld_dword>
 800c0ea:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
			break;
 800c0ee:	e7c4      	b.n	800c07a <get_fat.isra.0+0x32>
		switch (fs->fs_type) {
 800c0f0:	2001      	movs	r0, #1
	return val;
 800c0f2:	e7c2      	b.n	800c07a <get_fat.isra.0+0x32>

0800c0f4 <create_chain>:
{
 800c0f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	FATFS *fs = obj->fs;
 800c0f8:	6805      	ldr	r5, [r0, #0]
{
 800c0fa:	4680      	mov	r8, r0
	if (clst == 0) {	/* Create a new chain */
 800c0fc:	460f      	mov	r7, r1
 800c0fe:	b971      	cbnz	r1, 800c11e <create_chain+0x2a>
		scl = fs->last_clst;				/* Get suggested cluster to start from */
 800c100:	696e      	ldr	r6, [r5, #20]
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 800c102:	b1ee      	cbz	r6, 800c140 <create_chain+0x4c>
 800c104:	69eb      	ldr	r3, [r5, #28]
 800c106:	42b3      	cmp	r3, r6
 800c108:	bf98      	it	ls
 800c10a:	2601      	movls	r6, #1
		ncl = scl;	/* Start cluster */
 800c10c:	4634      	mov	r4, r6
			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 800c10e:	69eb      	ldr	r3, [r5, #28]
			ncl++;							/* Next cluster */
 800c110:	3401      	adds	r4, #1
			if (ncl >= fs->n_fatent) {		/* Check wrap-around */
 800c112:	42a3      	cmp	r3, r4
 800c114:	d817      	bhi.n	800c146 <create_chain+0x52>
				if (ncl > scl) return 0;	/* No free cluster */
 800c116:	2e01      	cmp	r6, #1
 800c118:	d814      	bhi.n	800c144 <create_chain+0x50>
 800c11a:	2400      	movs	r4, #0
 800c11c:	e006      	b.n	800c12c <create_chain+0x38>
		cs = get_fat(obj, clst);			/* Check the cluster status */
 800c11e:	4628      	mov	r0, r5
 800c120:	f7ff ff92 	bl	800c048 <get_fat.isra.0>
		if (cs < 2) return 1;				/* Invalid FAT value */
 800c124:	2801      	cmp	r0, #1
		cs = get_fat(obj, clst);			/* Check the cluster status */
 800c126:	4604      	mov	r4, r0
		if (cs < 2) return 1;				/* Invalid FAT value */
 800c128:	d803      	bhi.n	800c132 <create_chain+0x3e>
 800c12a:	2401      	movs	r4, #1
}
 800c12c:	4620      	mov	r0, r4
 800c12e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 800c132:	1c43      	adds	r3, r0, #1
 800c134:	d030      	beq.n	800c198 <create_chain+0xa4>
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 800c136:	69eb      	ldr	r3, [r5, #28]
 800c138:	4283      	cmp	r3, r0
 800c13a:	d8f7      	bhi.n	800c12c <create_chain+0x38>
 800c13c:	463e      	mov	r6, r7
 800c13e:	e7e5      	b.n	800c10c <create_chain+0x18>
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 800c140:	2601      	movs	r6, #1
 800c142:	e7e3      	b.n	800c10c <create_chain+0x18>
				ncl = 2;
 800c144:	2402      	movs	r4, #2
			cs = get_fat(obj, ncl);			/* Get the cluster status */
 800c146:	f8d8 0000 	ldr.w	r0, [r8]
 800c14a:	4621      	mov	r1, r4
 800c14c:	f7ff ff7c 	bl	800c048 <get_fat.isra.0>
			if (cs == 0) break;				/* Found a free cluster */
 800c150:	b130      	cbz	r0, 800c160 <create_chain+0x6c>
			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* An error occurred */
 800c152:	2801      	cmp	r0, #1
 800c154:	d0e9      	beq.n	800c12a <create_chain+0x36>
 800c156:	3001      	adds	r0, #1
 800c158:	d01e      	beq.n	800c198 <create_chain+0xa4>
			if (ncl == scl) return 0;		/* No free cluster */
 800c15a:	42b4      	cmp	r4, r6
 800c15c:	d1d7      	bne.n	800c10e <create_chain+0x1a>
 800c15e:	e7dc      	b.n	800c11a <create_chain+0x26>
		res = put_fat(fs, ncl, 0xFFFFFFFF);	/* Mark the new cluster 'EOC' */
 800c160:	f04f 32ff 	mov.w	r2, #4294967295
 800c164:	4621      	mov	r1, r4
 800c166:	4628      	mov	r0, r5
 800c168:	f7ff fdaa 	bl	800bcc0 <put_fat>
		if (res == FR_OK && clst != 0) {
 800c16c:	b990      	cbnz	r0, 800c194 <create_chain+0xa0>
 800c16e:	b957      	cbnz	r7, 800c186 <create_chain+0x92>
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 800c170:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
 800c174:	3a02      	subs	r2, #2
 800c176:	4293      	cmp	r3, r2
		fs->last_clst = ncl;
 800c178:	616c      	str	r4, [r5, #20]
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 800c17a:	d910      	bls.n	800c19e <create_chain+0xaa>
		fs->fsi_flag |= 1;
 800c17c:	792b      	ldrb	r3, [r5, #4]
 800c17e:	f043 0301 	orr.w	r3, r3, #1
 800c182:	712b      	strb	r3, [r5, #4]
 800c184:	e7d2      	b.n	800c12c <create_chain+0x38>
			res = put_fat(fs, clst, ncl);	/* Link it from the previous one if needed */
 800c186:	4622      	mov	r2, r4
 800c188:	4639      	mov	r1, r7
 800c18a:	4628      	mov	r0, r5
 800c18c:	f7ff fd98 	bl	800bcc0 <put_fat>
	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
 800c190:	2800      	cmp	r0, #0
 800c192:	d0ed      	beq.n	800c170 <create_chain+0x7c>
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
 800c194:	2801      	cmp	r0, #1
 800c196:	d1c8      	bne.n	800c12a <create_chain+0x36>
 800c198:	f04f 34ff 	mov.w	r4, #4294967295
 800c19c:	e7c6      	b.n	800c12c <create_chain+0x38>
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
 800c19e:	3b01      	subs	r3, #1
 800c1a0:	61ab      	str	r3, [r5, #24]
 800c1a2:	e7eb      	b.n	800c17c <create_chain+0x88>

0800c1a4 <dir_sdi>:
	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
 800c1a4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
{
 800c1a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c1aa:	4606      	mov	r6, r0
 800c1ac:	460c      	mov	r4, r1
	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
 800c1ae:	d301      	bcc.n	800c1b4 <dir_sdi+0x10>
		return FR_INT_ERR;
 800c1b0:	2002      	movs	r0, #2
}
 800c1b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	if (ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
 800c1b4:	06ca      	lsls	r2, r1, #27
 800c1b6:	d1fb      	bne.n	800c1b0 <dir_sdi+0xc>
	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
 800c1b8:	6882      	ldr	r2, [r0, #8]
	FATFS *fs = dp->obj.fs;
 800c1ba:	6805      	ldr	r5, [r0, #0]
	dp->dptr = ofs;				/* Set current offset */
 800c1bc:	6141      	str	r1, [r0, #20]
	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
 800c1be:	b9ca      	cbnz	r2, 800c1f4 <dir_sdi+0x50>
 800c1c0:	782b      	ldrb	r3, [r5, #0]
 800c1c2:	2b02      	cmp	r3, #2
 800c1c4:	d901      	bls.n	800c1ca <dir_sdi+0x26>
		clst = fs->dirbase;
 800c1c6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
 800c1c8:	b99b      	cbnz	r3, 800c1f2 <dir_sdi+0x4e>
		if (ofs / SZDIRE >= fs->n_rootdir)	return FR_INT_ERR;	/* Is index out of range? */
 800c1ca:	892b      	ldrh	r3, [r5, #8]
 800c1cc:	ebb3 1f54 	cmp.w	r3, r4, lsr #5
 800c1d0:	d9ee      	bls.n	800c1b0 <dir_sdi+0xc>
		dp->sect = fs->dirbase;
 800c1d2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c1d4:	61f3      	str	r3, [r6, #28]
	if (!dp->sect) return FR_INT_ERR;
 800c1d6:	69f3      	ldr	r3, [r6, #28]
	dp->clust = clst;					/* Current cluster# */
 800c1d8:	61b2      	str	r2, [r6, #24]
	if (!dp->sect) return FR_INT_ERR;
 800c1da:	2b00      	cmp	r3, #0
 800c1dc:	d0e8      	beq.n	800c1b0 <dir_sdi+0xc>
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 800c1de:	eb03 2354 	add.w	r3, r3, r4, lsr #9
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 800c1e2:	3538      	adds	r5, #56	; 0x38
 800c1e4:	f3c4 0408 	ubfx	r4, r4, #0, #9
 800c1e8:	442c      	add	r4, r5
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
 800c1ea:	61f3      	str	r3, [r6, #28]
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
 800c1ec:	6234      	str	r4, [r6, #32]
	return FR_OK;
 800c1ee:	2000      	movs	r0, #0
 800c1f0:	e7df      	b.n	800c1b2 <dir_sdi+0xe>
 800c1f2:	461a      	mov	r2, r3
		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
 800c1f4:	896f      	ldrh	r7, [r5, #10]
 800c1f6:	027f      	lsls	r7, r7, #9
		while (ofs >= csz) {				/* Follow cluster chain */
 800c1f8:	42bc      	cmp	r4, r7
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 800c1fa:	4611      	mov	r1, r2
		while (ofs >= csz) {				/* Follow cluster chain */
 800c1fc:	d204      	bcs.n	800c208 <dir_sdi+0x64>
		dp->sect = clust2sect(fs, clst);
 800c1fe:	4628      	mov	r0, r5
 800c200:	f7ff fc38 	bl	800ba74 <clust2sect>
 800c204:	61f0      	str	r0, [r6, #28]
 800c206:	e7e6      	b.n	800c1d6 <dir_sdi+0x32>
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 800c208:	6830      	ldr	r0, [r6, #0]
 800c20a:	f7ff ff1d 	bl	800c048 <get_fat.isra.0>
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800c20e:	1c43      	adds	r3, r0, #1
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
 800c210:	4602      	mov	r2, r0
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800c212:	d006      	beq.n	800c222 <dir_sdi+0x7e>
			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
 800c214:	2801      	cmp	r0, #1
 800c216:	d9cb      	bls.n	800c1b0 <dir_sdi+0xc>
 800c218:	69eb      	ldr	r3, [r5, #28]
 800c21a:	4283      	cmp	r3, r0
 800c21c:	d9c8      	bls.n	800c1b0 <dir_sdi+0xc>
			ofs -= csz;
 800c21e:	1be4      	subs	r4, r4, r7
 800c220:	e7ea      	b.n	800c1f8 <dir_sdi+0x54>
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800c222:	2001      	movs	r0, #1
 800c224:	e7c5      	b.n	800c1b2 <dir_sdi+0xe>

0800c226 <dir_next>:
	ofs = dp->dptr + SZDIRE;	/* Next entry */
 800c226:	6943      	ldr	r3, [r0, #20]
{
 800c228:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	ofs = dp->dptr + SZDIRE;	/* Next entry */
 800c22c:	f103 0820 	add.w	r8, r3, #32
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 800c230:	69c3      	ldr	r3, [r0, #28]
{
 800c232:	4605      	mov	r5, r0
 800c234:	468a      	mov	sl, r1
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 800c236:	b193      	cbz	r3, 800c25e <dir_next+0x38>
 800c238:	f5b8 1f00 	cmp.w	r8, #2097152	; 0x200000
 800c23c:	d20f      	bcs.n	800c25e <dir_next+0x38>
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
 800c23e:	f3c8 0908 	ubfx	r9, r8, #0, #9
	FATFS *fs = dp->obj.fs;
 800c242:	6804      	ldr	r4, [r0, #0]
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
 800c244:	f1b9 0f00 	cmp.w	r9, #0
 800c248:	d14d      	bne.n	800c2e6 <dir_next+0xc0>
		if (!dp->clust) {		/* Static table */
 800c24a:	6981      	ldr	r1, [r0, #24]
		dp->sect++;				/* Next sector */
 800c24c:	3301      	adds	r3, #1
 800c24e:	61c3      	str	r3, [r0, #28]
		if (!dp->clust) {		/* Static table */
 800c250:	b939      	cbnz	r1, 800c262 <dir_next+0x3c>
			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
 800c252:	8923      	ldrh	r3, [r4, #8]
 800c254:	ebb3 1f58 	cmp.w	r3, r8, lsr #5
 800c258:	d845      	bhi.n	800c2e6 <dir_next+0xc0>
				dp->sect = 0; return FR_NO_FILE;
 800c25a:	2300      	movs	r3, #0
 800c25c:	61eb      	str	r3, [r5, #28]
	if (!dp->sect || ofs >= (DWORD)((_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) return FR_NO_FILE;	/* Report EOT when offset has reached max value */
 800c25e:	2004      	movs	r0, #4
 800c260:	e00b      	b.n	800c27a <dir_next+0x54>
			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {		/* Cluster changed? */
 800c262:	8967      	ldrh	r7, [r4, #10]
 800c264:	3f01      	subs	r7, #1
 800c266:	ea17 2758 	ands.w	r7, r7, r8, lsr #9
 800c26a:	d13c      	bne.n	800c2e6 <dir_next+0xc0>
				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 800c26c:	4620      	mov	r0, r4
 800c26e:	f7ff feeb 	bl	800c048 <get_fat.isra.0>
				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 800c272:	2801      	cmp	r0, #1
				clst = get_fat(&dp->obj, dp->clust);			/* Get next cluster */
 800c274:	4606      	mov	r6, r0
				if (clst <= 1) return FR_INT_ERR;				/* Internal error */
 800c276:	d802      	bhi.n	800c27e <dir_next+0x58>
 800c278:	2002      	movs	r0, #2
}
 800c27a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;		/* Disk error */
 800c27e:	1c42      	adds	r2, r0, #1
 800c280:	d101      	bne.n	800c286 <dir_next+0x60>
 800c282:	2001      	movs	r0, #1
 800c284:	e7f9      	b.n	800c27a <dir_next+0x54>
				if (clst >= fs->n_fatent) {						/* Reached end of dynamic table */
 800c286:	69e3      	ldr	r3, [r4, #28]
 800c288:	4283      	cmp	r3, r0
 800c28a:	d826      	bhi.n	800c2da <dir_next+0xb4>
					if (!stretch) {								/* If no stretch, report EOT */
 800c28c:	f1ba 0f00 	cmp.w	sl, #0
 800c290:	d0e3      	beq.n	800c25a <dir_next+0x34>
					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
 800c292:	69a9      	ldr	r1, [r5, #24]
 800c294:	4628      	mov	r0, r5
 800c296:	f7ff ff2d 	bl	800c0f4 <create_chain>
					if (clst == 0) return FR_DENIED;			/* No free cluster */
 800c29a:	4606      	mov	r6, r0
 800c29c:	2800      	cmp	r0, #0
 800c29e:	d035      	beq.n	800c30c <dir_next+0xe6>
					if (clst == 1) return FR_INT_ERR;			/* Internal error */
 800c2a0:	2801      	cmp	r0, #1
 800c2a2:	d0e9      	beq.n	800c278 <dir_next+0x52>
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 800c2a4:	1c43      	adds	r3, r0, #1
 800c2a6:	d0ec      	beq.n	800c282 <dir_next+0x5c>
					if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
 800c2a8:	4620      	mov	r0, r4
 800c2aa:	f7ff fcb0 	bl	800bc0e <sync_window>
 800c2ae:	4601      	mov	r1, r0
 800c2b0:	2800      	cmp	r0, #0
 800c2b2:	d1e6      	bne.n	800c282 <dir_next+0x5c>
					mem_set(fs->win, 0, SS(fs));				/* Clear window buffer */
 800c2b4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c2b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 800c2bc:	f7ff fb66 	bl	800b98c <mem_set>
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 800c2c0:	4631      	mov	r1, r6
 800c2c2:	4620      	mov	r0, r4
 800c2c4:	f7ff fbd6 	bl	800ba74 <clust2sect>
						fs->wflag = 1;
 800c2c8:	f04f 0a01 	mov.w	sl, #1
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 800c2cc:	6360      	str	r0, [r4, #52]	; 0x34
 800c2ce:	8963      	ldrh	r3, [r4, #10]
 800c2d0:	429f      	cmp	r7, r3
 800c2d2:	d30f      	bcc.n	800c2f4 <dir_next+0xce>
					fs->winsect -= n;							/* Restore window offset */
 800c2d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c2d6:	1bdb      	subs	r3, r3, r7
 800c2d8:	6363      	str	r3, [r4, #52]	; 0x34
				dp->clust = clst;		/* Initialize data for new cluster */
 800c2da:	61ae      	str	r6, [r5, #24]
				dp->sect = clust2sect(fs, clst);
 800c2dc:	4631      	mov	r1, r6
 800c2de:	4620      	mov	r0, r4
 800c2e0:	f7ff fbc8 	bl	800ba74 <clust2sect>
 800c2e4:	61e8      	str	r0, [r5, #28]
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 800c2e6:	3438      	adds	r4, #56	; 0x38
 800c2e8:	444c      	add	r4, r9
	dp->dptr = ofs;						/* Current entry */
 800c2ea:	f8c5 8014 	str.w	r8, [r5, #20]
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
 800c2ee:	622c      	str	r4, [r5, #32]
	return FR_OK;
 800c2f0:	2000      	movs	r0, #0
 800c2f2:	e7c2      	b.n	800c27a <dir_next+0x54>
						fs->wflag = 1;
 800c2f4:	f884 a003 	strb.w	sl, [r4, #3]
	if (fs->wflag) {	/* Write back the sector if it is dirty */
 800c2f8:	4620      	mov	r0, r4
 800c2fa:	f7ff fc62 	bl	800bbc2 <sync_window.part.0>
						if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
 800c2fe:	2800      	cmp	r0, #0
 800c300:	d1bf      	bne.n	800c282 <dir_next+0x5c>
					for (n = 0, fs->winsect = clust2sect(fs, clst); n < fs->csize; n++, fs->winsect++) {	/* Fill the new cluster with 0 */
 800c302:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c304:	3301      	adds	r3, #1
 800c306:	3701      	adds	r7, #1
 800c308:	6363      	str	r3, [r4, #52]	; 0x34
 800c30a:	e7e0      	b.n	800c2ce <dir_next+0xa8>
					if (clst == 0) return FR_DENIED;			/* No free cluster */
 800c30c:	2007      	movs	r0, #7
 800c30e:	e7b4      	b.n	800c27a <dir_next+0x54>

0800c310 <dir_find>:
{
 800c310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800c314:	2100      	movs	r1, #0
{
 800c316:	b085      	sub	sp, #20
	FATFS *fs = dp->obj.fs;
 800c318:	f8d0 b000 	ldr.w	fp, [r0]
{
 800c31c:	4604      	mov	r4, r0
	res = dir_sdi(dp, 0);			/* Rewind directory object */
 800c31e:	f7ff ff41 	bl	800c1a4 <dir_sdi>
	if (res != FR_OK) return res;
 800c322:	4606      	mov	r6, r0
 800c324:	2800      	cmp	r0, #0
 800c326:	f040 8098 	bne.w	800c45a <dir_find+0x14a>
	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 800c32a:	f04f 3aff 	mov.w	sl, #4294967295
 800c32e:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800c332:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 800c336:	46c1      	mov	r9, r8
		res = move_window(fs, dp->sect);
 800c338:	69e1      	ldr	r1, [r4, #28]
 800c33a:	4658      	mov	r0, fp
 800c33c:	f7ff fc6d 	bl	800bc1a <move_window>
		if (res != FR_OK) break;
 800c340:	4606      	mov	r6, r0
 800c342:	2800      	cmp	r0, #0
 800c344:	f040 8089 	bne.w	800c45a <dir_find+0x14a>
		c = dp->dir[DIR_Name];
 800c348:	6a25      	ldr	r5, [r4, #32]
 800c34a:	782f      	ldrb	r7, [r5, #0]
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 800c34c:	2f00      	cmp	r7, #0
 800c34e:	f000 8088 	beq.w	800c462 <dir_find+0x152>
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
 800c352:	7aea      	ldrb	r2, [r5, #11]
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
 800c354:	2fe5      	cmp	r7, #229	; 0xe5
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
 800c356:	f002 033f 	and.w	r3, r2, #63	; 0x3f
 800c35a:	71a3      	strb	r3, [r4, #6]
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
 800c35c:	d003      	beq.n	800c366 <dir_find+0x56>
 800c35e:	0710      	lsls	r0, r2, #28
 800c360:	d504      	bpl.n	800c36c <dir_find+0x5c>
 800c362:	2b0f      	cmp	r3, #15
 800c364:	d004      	beq.n	800c370 <dir_find+0x60>
				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
 800c366:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
 800c36a:	e050      	b.n	800c40e <dir_find+0xfe>
			if (a == AM_LFN) {			/* An LFN entry is found */
 800c36c:	2b0f      	cmp	r3, #15
 800c36e:	d156      	bne.n	800c41e <dir_find+0x10e>
				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
 800c370:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c374:	0659      	lsls	r1, r3, #25
 800c376:	d440      	bmi.n	800c3fa <dir_find+0xea>
					if (c & LLEF) {		/* Is it start of LFN sequence? */
 800c378:	067a      	lsls	r2, r7, #25
 800c37a:	d546      	bpl.n	800c40a <dir_find+0xfa>
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 800c37c:	6963      	ldr	r3, [r4, #20]
						sum = dp->dir[LDIR_Chksum];
 800c37e:	f895 800d 	ldrb.w	r8, [r5, #13]
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
 800c382:	6323      	str	r3, [r4, #48]	; 0x30
						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
 800c384:	f007 07bf 	and.w	r7, r7, #191	; 0xbf
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c388:	7b6b      	ldrb	r3, [r5, #13]
 800c38a:	4543      	cmp	r3, r8
 800c38c:	d13f      	bne.n	800c40e <dir_find+0xfe>
	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
 800c38e:	8b6b      	ldrh	r3, [r5, #26]
 800c390:	2b00      	cmp	r3, #0
 800c392:	d13c      	bne.n	800c40e <dir_find+0xfe>
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
 800c394:	782e      	ldrb	r6, [r5, #0]
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c396:	f8db 300c 	ldr.w	r3, [fp, #12]
 800c39a:	9300      	str	r3, [sp, #0]
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
 800c39c:	f006 063f 	and.w	r6, r6, #63	; 0x3f
 800c3a0:	3e01      	subs	r6, #1
 800c3a2:	230d      	movs	r3, #13
 800c3a4:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 800c46c <dir_find+0x15c>
 800c3a8:	435e      	muls	r6, r3
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 800c3aa:	2201      	movs	r2, #1
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 800c3ac:	f819 3b01 	ldrb.w	r3, [r9], #1
	rv = ptr[1];
 800c3b0:	5aeb      	ldrh	r3, [r5, r3]
		if (wc) {
 800c3b2:	b37a      	cbz	r2, 800c414 <dir_find+0x104>
			if (i >= _MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
 800c3b4:	2efe      	cmp	r6, #254	; 0xfe
 800c3b6:	d82a      	bhi.n	800c40e <dir_find+0xfe>
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	9303      	str	r3, [sp, #12]
 800c3bc:	f7ff fa64 	bl	800b888 <ff_wtoupper>
 800c3c0:	9b00      	ldr	r3, [sp, #0]
 800c3c2:	9002      	str	r0, [sp, #8]
 800c3c4:	1c71      	adds	r1, r6, #1
 800c3c6:	f833 0016 	ldrh.w	r0, [r3, r6, lsl #1]
 800c3ca:	9101      	str	r1, [sp, #4]
 800c3cc:	f7ff fa5c 	bl	800b888 <ff_wtoupper>
 800c3d0:	9a02      	ldr	r2, [sp, #8]
 800c3d2:	4282      	cmp	r2, r0
 800c3d4:	d11b      	bne.n	800c40e <dir_find+0xfe>
 800c3d6:	9b03      	ldr	r3, [sp, #12]
 800c3d8:	9901      	ldr	r1, [sp, #4]
 800c3da:	461a      	mov	r2, r3
 800c3dc:	460e      	mov	r6, r1
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 800c3de:	4b22      	ldr	r3, [pc, #136]	; (800c468 <dir_find+0x158>)
 800c3e0:	4599      	cmp	r9, r3
 800c3e2:	d1e3      	bne.n	800c3ac <dir_find+0x9c>
	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different length */
 800c3e4:	782b      	ldrb	r3, [r5, #0]
 800c3e6:	065b      	lsls	r3, r3, #25
 800c3e8:	d504      	bpl.n	800c3f4 <dir_find+0xe4>
 800c3ea:	b11a      	cbz	r2, 800c3f4 <dir_find+0xe4>
 800c3ec:	9b00      	ldr	r3, [sp, #0]
 800c3ee:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
 800c3f2:	b963      	cbnz	r3, 800c40e <dir_find+0xfe>
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c3f4:	3f01      	subs	r7, #1
 800c3f6:	fa5f f987 	uxtb.w	r9, r7
		res = dir_next(dp, 0);	/* Next entry */
 800c3fa:	2100      	movs	r1, #0
 800c3fc:	4620      	mov	r0, r4
 800c3fe:	f7ff ff12 	bl	800c226 <dir_next>
	} while (res == FR_OK);
 800c402:	4606      	mov	r6, r0
 800c404:	2800      	cmp	r0, #0
 800c406:	d097      	beq.n	800c338 <dir_find+0x28>
 800c408:	e027      	b.n	800c45a <dir_find+0x14a>
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c40a:	45b9      	cmp	r9, r7
 800c40c:	d0bc      	beq.n	800c388 <dir_find+0x78>
 800c40e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800c412:	e7f2      	b.n	800c3fa <dir_find+0xea>
			if (uc != 0xFFFF) return 0;		/* Check filler */
 800c414:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c418:	428b      	cmp	r3, r1
 800c41a:	d0e0      	beq.n	800c3de <dir_find+0xce>
 800c41c:	e7f7      	b.n	800c40e <dir_find+0xfe>
				if (!ord && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
 800c41e:	f1b9 0f00 	cmp.w	r9, #0
 800c422:	d104      	bne.n	800c42e <dir_find+0x11e>
 800c424:	4628      	mov	r0, r5
 800c426:	f7ff fb30 	bl	800ba8a <sum_sfn>
 800c42a:	4540      	cmp	r0, r8
 800c42c:	d015      	beq.n	800c45a <dir_find+0x14a>
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 800c42e:	f894 602f 	ldrb.w	r6, [r4, #47]	; 0x2f
 800c432:	f016 0601 	ands.w	r6, r6, #1
 800c436:	d196      	bne.n	800c366 <dir_find+0x56>
 800c438:	f104 0224 	add.w	r2, r4, #36	; 0x24
int mem_cmp (const void* dst, const void* src, UINT cnt) {	/* ZR:same, NZ:different */
 800c43c:	f105 010b 	add.w	r1, r5, #11
		r = *d++ - *s++;
 800c440:	f815 3b01 	ldrb.w	r3, [r5], #1
 800c444:	f812 0b01 	ldrb.w	r0, [r2], #1
	} while (--cnt && r == 0);
 800c448:	428d      	cmp	r5, r1
		r = *d++ - *s++;
 800c44a:	eba3 0300 	sub.w	r3, r3, r0
	} while (--cnt && r == 0);
 800c44e:	d002      	beq.n	800c456 <dir_find+0x146>
 800c450:	2b00      	cmp	r3, #0
 800c452:	d0f5      	beq.n	800c440 <dir_find+0x130>
 800c454:	e787      	b.n	800c366 <dir_find+0x56>
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
 800c456:	2b00      	cmp	r3, #0
 800c458:	d185      	bne.n	800c366 <dir_find+0x56>
}
 800c45a:	4630      	mov	r0, r6
 800c45c:	b005      	add	sp, #20
 800c45e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 800c462:	2604      	movs	r6, #4
 800c464:	e7f9      	b.n	800c45a <dir_find+0x14a>
 800c466:	bf00      	nop
 800c468:	0802ad07 	.word	0x0802ad07
 800c46c:	0802acfa 	.word	0x0802acfa

0800c470 <dir_read.constprop.0>:
FRESULT dir_read (
 800c470:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	BYTE ord = 0xFF, sum = 0xFF;
 800c474:	27ff      	movs	r7, #255	; 0xff
	FATFS *fs = dp->obj.fs;
 800c476:	f8d0 8000 	ldr.w	r8, [r0]
FRESULT dir_read (
 800c47a:	4606      	mov	r6, r0
	BYTE ord = 0xFF, sum = 0xFF;
 800c47c:	463c      	mov	r4, r7
	FRESULT res = FR_NO_FILE;
 800c47e:	2504      	movs	r5, #4
			if (uc != 0xFFFF) return 0;		/* Check filler */
 800c480:	f64f 79ff 	movw	r9, #65535	; 0xffff
	while (dp->sect) {
 800c484:	69f1      	ldr	r1, [r6, #28]
 800c486:	b911      	cbnz	r1, 800c48e <dir_read.constprop.0+0x1e>
	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
 800c488:	2d00      	cmp	r5, #0
 800c48a:	d05f      	beq.n	800c54c <dir_read.constprop.0+0xdc>
 800c48c:	e04f      	b.n	800c52e <dir_read.constprop.0+0xbe>
		res = move_window(fs, dp->sect);
 800c48e:	4640      	mov	r0, r8
 800c490:	f7ff fbc3 	bl	800bc1a <move_window>
		if (res != FR_OK) break;
 800c494:	4605      	mov	r5, r0
 800c496:	2800      	cmp	r0, #0
 800c498:	d149      	bne.n	800c52e <dir_read.constprop.0+0xbe>
		c = dp->dir[DIR_Name];	/* Test for the entry type */
 800c49a:	6a30      	ldr	r0, [r6, #32]
 800c49c:	7803      	ldrb	r3, [r0, #0]
		if (c == 0) {
 800c49e:	2b00      	cmp	r3, #0
 800c4a0:	d05c      	beq.n	800c55c <dir_read.constprop.0+0xec>
			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
 800c4a2:	7ac2      	ldrb	r2, [r0, #11]
			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid data */
 800c4a4:	2be5      	cmp	r3, #229	; 0xe5
			dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;	/* Get attribute */
 800c4a6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800c4aa:	71b2      	strb	r2, [r6, #6]
			if (c == DDEM || c == '.' || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry without valid data */
 800c4ac:	d044      	beq.n	800c538 <dir_read.constprop.0+0xc8>
 800c4ae:	2b2e      	cmp	r3, #46	; 0x2e
 800c4b0:	d042      	beq.n	800c538 <dir_read.constprop.0+0xc8>
 800c4b2:	f022 0120 	bic.w	r1, r2, #32
 800c4b6:	2908      	cmp	r1, #8
 800c4b8:	d03e      	beq.n	800c538 <dir_read.constprop.0+0xc8>
				if (a == AM_LFN) {			/* An LFN entry is found */
 800c4ba:	2a0f      	cmp	r2, #15
 800c4bc:	d141      	bne.n	800c542 <dir_read.constprop.0+0xd2>
					if (c & LLEF) {			/* Is it start of an LFN sequence? */
 800c4be:	0659      	lsls	r1, r3, #25
 800c4c0:	d538      	bpl.n	800c534 <dir_read.constprop.0+0xc4>
						c &= (BYTE)~LLEF; ord = c;
 800c4c2:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
						dp->blk_ofs = dp->dptr;
 800c4c6:	6973      	ldr	r3, [r6, #20]
						sum = dp->dir[LDIR_Chksum];
 800c4c8:	7b47      	ldrb	r7, [r0, #13]
						dp->blk_ofs = dp->dptr;
 800c4ca:	6333      	str	r3, [r6, #48]	; 0x30
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c4cc:	7b43      	ldrb	r3, [r0, #13]
 800c4ce:	42bb      	cmp	r3, r7
 800c4d0:	d132      	bne.n	800c538 <dir_read.constprop.0+0xc8>
	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO is 0 */
 800c4d2:	8b42      	ldrh	r2, [r0, #26]
 800c4d4:	bb82      	cbnz	r2, 800c538 <dir_read.constprop.0+0xc8>
	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
 800c4d6:	7803      	ldrb	r3, [r0, #0]
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c4d8:	f8d8 500c 	ldr.w	r5, [r8, #12]
	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Offset in the LFN buffer */
 800c4dc:	f8df c080 	ldr.w	ip, [pc, #128]	; 800c560 <dir_read.constprop.0+0xf0>
 800c4e0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c4e4:	3b01      	subs	r3, #1
 800c4e6:	210d      	movs	r1, #13
 800c4e8:	434b      	muls	r3, r1
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 800c4ea:	f04f 0e01 	mov.w	lr, #1
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
 800c4ee:	f81c 1b01 	ldrb.w	r1, [ip], #1
	rv = ptr[1];
 800c4f2:	5a41      	ldrh	r1, [r0, r1]
		if (wc) {
 800c4f4:	f1be 0f00 	cmp.w	lr, #0
 800c4f8:	d020      	beq.n	800c53c <dir_read.constprop.0+0xcc>
			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
 800c4fa:	2bfe      	cmp	r3, #254	; 0xfe
 800c4fc:	d81c      	bhi.n	800c538 <dir_read.constprop.0+0xc8>
			lfnbuf[i++] = wc = uc;			/* Store it */
 800c4fe:	f825 1013 	strh.w	r1, [r5, r3, lsl #1]
 800c502:	468e      	mov	lr, r1
 800c504:	3301      	adds	r3, #1
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
 800c506:	3201      	adds	r2, #1
 800c508:	2a0d      	cmp	r2, #13
 800c50a:	d1f0      	bne.n	800c4ee <dir_read.constprop.0+0x7e>
	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
 800c50c:	7802      	ldrb	r2, [r0, #0]
 800c50e:	0652      	lsls	r2, r2, #25
 800c510:	d504      	bpl.n	800c51c <dir_read.constprop.0+0xac>
		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
 800c512:	2bfe      	cmp	r3, #254	; 0xfe
 800c514:	d810      	bhi.n	800c538 <dir_read.constprop.0+0xc8>
		lfnbuf[i] = 0;
 800c516:	2200      	movs	r2, #0
 800c518:	f825 2013 	strh.w	r2, [r5, r3, lsl #1]
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c51c:	3c01      	subs	r4, #1
 800c51e:	b2e4      	uxtb	r4, r4
		res = dir_next(dp, 0);		/* Next entry */
 800c520:	2100      	movs	r1, #0
 800c522:	4630      	mov	r0, r6
 800c524:	f7ff fe7f 	bl	800c226 <dir_next>
		if (res != FR_OK) break;
 800c528:	4605      	mov	r5, r0
 800c52a:	2800      	cmp	r0, #0
 800c52c:	d0aa      	beq.n	800c484 <dir_read.constprop.0+0x14>
	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
 800c52e:	2300      	movs	r3, #0
 800c530:	61f3      	str	r3, [r6, #28]
 800c532:	e00c      	b.n	800c54e <dir_read.constprop.0+0xde>
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
 800c534:	42a3      	cmp	r3, r4
 800c536:	d0c9      	beq.n	800c4cc <dir_read.constprop.0+0x5c>
 800c538:	24ff      	movs	r4, #255	; 0xff
 800c53a:	e7f1      	b.n	800c520 <dir_read.constprop.0+0xb0>
			if (uc != 0xFFFF) return 0;		/* Check filler */
 800c53c:	4549      	cmp	r1, r9
 800c53e:	d0e2      	beq.n	800c506 <dir_read.constprop.0+0x96>
 800c540:	e7fa      	b.n	800c538 <dir_read.constprop.0+0xc8>
					if (ord || sum != sum_sfn(dp->dir)) {	/* Is there a valid LFN? */
 800c542:	b93c      	cbnz	r4, 800c554 <dir_read.constprop.0+0xe4>
 800c544:	f7ff faa1 	bl	800ba8a <sum_sfn>
 800c548:	42b8      	cmp	r0, r7
 800c54a:	d103      	bne.n	800c554 <dir_read.constprop.0+0xe4>
		res = move_window(fs, dp->sect);
 800c54c:	2500      	movs	r5, #0
}
 800c54e:	4628      	mov	r0, r5
 800c550:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
						dp->blk_ofs = 0xFFFFFFFF;			/* It has no LFN. */
 800c554:	f04f 33ff 	mov.w	r3, #4294967295
 800c558:	6333      	str	r3, [r6, #48]	; 0x30
	if (res != FR_OK) dp->sect = 0;		/* Terminate the read operation on error or EOT */
 800c55a:	e7f8      	b.n	800c54e <dir_read.constprop.0+0xde>
			res = FR_NO_FILE; break; /* Reached to end of the directory */
 800c55c:	2504      	movs	r5, #4
 800c55e:	e7e6      	b.n	800c52e <dir_read.constprop.0+0xbe>
 800c560:	0802acfa 	.word	0x0802acfa

0800c564 <follow_path>:
{
 800c564:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	FATFS *fs = obj->fs;
 800c568:	f8d0 b000 	ldr.w	fp, [r0]
{
 800c56c:	4606      	mov	r6, r0
 800c56e:	4689      	mov	r9, r1
		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
 800c570:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c574:	2b2f      	cmp	r3, #47	; 0x2f
 800c576:	d0fa      	beq.n	800c56e <follow_path+0xa>
 800c578:	2b5c      	cmp	r3, #92	; 0x5c
 800c57a:	d0f8      	beq.n	800c56e <follow_path+0xa>
		obj->sclust = 0;					/* Start from root directory */
 800c57c:	2100      	movs	r1, #0
 800c57e:	60b1      	str	r1, [r6, #8]
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
 800c580:	f899 3000 	ldrb.w	r3, [r9]
 800c584:	2b1f      	cmp	r3, #31
 800c586:	f200 80af 	bhi.w	800c6e8 <follow_path+0x184>
		dp->fn[NSFLAG] = NS_NONAME;
 800c58a:	2380      	movs	r3, #128	; 0x80
		res = dir_sdi(dp, 0);
 800c58c:	4630      	mov	r0, r6
		dp->fn[NSFLAG] = NS_NONAME;
 800c58e:	f886 302f 	strb.w	r3, [r6, #47]	; 0x2f
}
 800c592:	b003      	add	sp, #12
 800c594:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		res = dir_sdi(dp, 0);
 800c598:	f7ff be04 	b.w	800c1a4 <dir_sdi>
			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 800c59c:	3401      	adds	r4, #1
 800c59e:	e0b7      	b.n	800c710 <follow_path+0x1ac>
		if (di >= _MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
 800c5a0:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
 800c5a4:	9300      	str	r3, [sp, #0]
 800c5a6:	d00c      	beq.n	800c5c2 <follow_path+0x5e>
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
 800c5a8:	2101      	movs	r1, #1
 800c5aa:	f7ff f94f 	bl	800b84c <ff_convert>
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
 800c5ae:	b140      	cbz	r0, 800c5c2 <follow_path+0x5e>
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) return FR_INVALID_NAME;	/* Reject illegal characters for LFN */
 800c5b0:	287f      	cmp	r0, #127	; 0x7f
 800c5b2:	9b00      	ldr	r3, [sp, #0]
 800c5b4:	d807      	bhi.n	800c5c6 <follow_path+0x62>
 800c5b6:	4980      	ldr	r1, [pc, #512]	; (800c7b8 <follow_path+0x254>)
	while (*str && *str != chr) str++;
 800c5b8:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c5bc:	b11a      	cbz	r2, 800c5c6 <follow_path+0x62>
 800c5be:	4290      	cmp	r0, r2
 800c5c0:	d1fa      	bne.n	800c5b8 <follow_path+0x54>
				cf |= NS_LOSS | NS_LFN; break;
 800c5c2:	2006      	movs	r0, #6
 800c5c4:	e04d      	b.n	800c662 <follow_path+0xfe>
		lfn[di++] = w;					/* Store the Unicode character */
 800c5c6:	f828 0f02 	strh.w	r0, [r8, #2]!
		w = p[si++];					/* Get a character */
 800c5ca:	4627      	mov	r7, r4
 800c5cc:	e095      	b.n	800c6fa <follow_path+0x196>
		w = lfn[di - 1];
 800c5ce:	f835 3017 	ldrh.w	r3, [r5, r7, lsl #1]
		if (w != ' ' && w != '.') break;
 800c5d2:	2b20      	cmp	r3, #32
 800c5d4:	d002      	beq.n	800c5dc <follow_path+0x78>
 800c5d6:	2b2e      	cmp	r3, #46	; 0x2e
 800c5d8:	f040 80aa 	bne.w	800c730 <follow_path+0x1cc>
		di--;
 800c5dc:	3f01      	subs	r7, #1
 800c5de:	e0a4      	b.n	800c72a <follow_path+0x1c6>
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
 800c5e0:	3101      	adds	r1, #1
 800c5e2:	e0b2      	b.n	800c74a <follow_path+0x1e6>
		if (i >= ni || si == di) {		/* Extension or end of SFN */
 800c5e4:	4543      	cmp	r3, r8
 800c5e6:	d205      	bcs.n	800c5f4 <follow_path+0x90>
 800c5e8:	42ba      	cmp	r2, r7
 800c5ea:	d149      	bne.n	800c680 <follow_path+0x11c>
			if (ni == 11) {				/* Long extension */
 800c5ec:	f1b8 0f0b 	cmp.w	r8, #11
 800c5f0:	d13f      	bne.n	800c672 <follow_path+0x10e>
 800c5f2:	e002      	b.n	800c5fa <follow_path+0x96>
 800c5f4:	f1b8 0f0b 	cmp.w	r8, #11
 800c5f8:	d136      	bne.n	800c668 <follow_path+0x104>
				cf |= NS_LOSS | NS_LFN; break;
 800c5fa:	f044 0403 	orr.w	r4, r4, #3
 800c5fe:	f04f 080b 	mov.w	r8, #11
	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
 800c602:	f896 3024 	ldrb.w	r3, [r6, #36]	; 0x24
 800c606:	2be5      	cmp	r3, #229	; 0xe5
 800c608:	bf04      	itt	eq
 800c60a:	2305      	moveq	r3, #5
 800c60c:	f886 3024 	strbeq.w	r3, [r6, #36]	; 0x24
	if (ni == 8) b <<= 2;
 800c610:	f1b8 0f08 	cmp.w	r8, #8
 800c614:	bf04      	itt	eq
 800c616:	00ad      	lsleq	r5, r5, #2
 800c618:	b2ed      	uxtbeq	r5, r5
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* Create LFN entry when there are composite capitals */
 800c61a:	f005 030c 	and.w	r3, r5, #12
 800c61e:	2b0c      	cmp	r3, #12
 800c620:	d003      	beq.n	800c62a <follow_path+0xc6>
 800c622:	f005 0203 	and.w	r2, r5, #3
 800c626:	2a03      	cmp	r2, #3
 800c628:	d101      	bne.n	800c62e <follow_path+0xca>
 800c62a:	f044 0402 	orr.w	r4, r4, #2
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
 800c62e:	07a1      	lsls	r1, r4, #30
 800c630:	d409      	bmi.n	800c646 <follow_path+0xe2>
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
 800c632:	f005 0503 	and.w	r5, r5, #3
 800c636:	2d01      	cmp	r5, #1
 800c638:	bf08      	it	eq
 800c63a:	f044 0410 	orreq.w	r4, r4, #16
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
 800c63e:	2b04      	cmp	r3, #4
 800c640:	bf08      	it	eq
 800c642:	f044 0408 	orreq.w	r4, r4, #8
	dp->fn[NSFLAG] = cf;	/* SFN is created */
 800c646:	f886 402f 	strb.w	r4, [r6, #47]	; 0x2f
			res = dir_find(dp);				/* Find an object with the segment name */
 800c64a:	4630      	mov	r0, r6
 800c64c:	f7ff fe60 	bl	800c310 <dir_find>
			ns = dp->fn[NSFLAG];
 800c650:	f896 302f 	ldrb.w	r3, [r6, #47]	; 0x2f
			if (res != FR_OK) {				/* Failed to find the object */
 800c654:	b3c0      	cbz	r0, 800c6c8 <follow_path+0x164>
				if (res == FR_NO_FILE) {	/* Object is not found */
 800c656:	2804      	cmp	r0, #4
 800c658:	d103      	bne.n	800c662 <follow_path+0xfe>
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
 800c65a:	f013 0f04 	tst.w	r3, #4
 800c65e:	bf08      	it	eq
 800c660:	2005      	moveq	r0, #5
}
 800c662:	b003      	add	sp, #12
 800c664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
 800c668:	42ba      	cmp	r2, r7
 800c66a:	d002      	beq.n	800c672 <follow_path+0x10e>
 800c66c:	f044 0403 	orr.w	r4, r4, #3
			if (si > di) break;			/* No extension */
 800c670:	d8c7      	bhi.n	800c602 <follow_path+0x9e>
			b <<= 2; continue;
 800c672:	00ad      	lsls	r5, r5, #2
 800c674:	b2ed      	uxtb	r5, r5
 800c676:	463a      	mov	r2, r7
			si = di; i = 8; ni = 11;	/* Enter extension section */
 800c678:	f04f 080b 	mov.w	r8, #11
 800c67c:	2308      	movs	r3, #8
			b <<= 2; continue;
 800c67e:	e089      	b.n	800c794 <follow_path+0x230>
		if (w >= 0x80) {				/* Non ASCII character */
 800c680:	287f      	cmp	r0, #127	; 0x7f
 800c682:	d90e      	bls.n	800c6a2 <follow_path+0x13e>
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
 800c684:	2100      	movs	r1, #0
 800c686:	e9cd 2300 	strd	r2, r3, [sp]
 800c68a:	f7ff f8df 	bl	800b84c <ff_convert>
			cf |= NS_LFN;				/* Force create LFN entry */
 800c68e:	f044 0402 	orr.w	r4, r4, #2
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
 800c692:	e9dd 2300 	ldrd	r2, r3, [sp]
 800c696:	b160      	cbz	r0, 800c6b2 <follow_path+0x14e>
 800c698:	4948      	ldr	r1, [pc, #288]	; (800c7bc <follow_path+0x258>)
 800c69a:	4408      	add	r0, r1
 800c69c:	f810 0c80 	ldrb.w	r0, [r0, #-128]
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
 800c6a0:	b138      	cbz	r0, 800c6b2 <follow_path+0x14e>
	while (*str && *str != chr) str++;
 800c6a2:	f8df c11c 	ldr.w	ip, [pc, #284]	; 800c7c0 <follow_path+0x25c>
 800c6a6:	f81c 1b01 	ldrb.w	r1, [ip], #1
 800c6aa:	2900      	cmp	r1, #0
 800c6ac:	d076      	beq.n	800c79c <follow_path+0x238>
 800c6ae:	4281      	cmp	r1, r0
 800c6b0:	d1f9      	bne.n	800c6a6 <follow_path+0x142>
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
 800c6b2:	f044 0403 	orr.w	r4, r4, #3
 800c6b6:	205f      	movs	r0, #95	; 0x5f
		dp->fn[i++] = (BYTE)w;
 800c6b8:	18f1      	adds	r1, r6, r3
 800c6ba:	3301      	adds	r3, #1
 800c6bc:	f881 0024 	strb.w	r0, [r1, #36]	; 0x24
 800c6c0:	e068      	b.n	800c794 <follow_path+0x230>
					b |= 2;
 800c6c2:	f045 0502 	orr.w	r5, r5, #2
 800c6c6:	e7f7      	b.n	800c6b8 <follow_path+0x154>
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
 800c6c8:	075a      	lsls	r2, r3, #29
 800c6ca:	d4ca      	bmi.n	800c662 <follow_path+0xfe>
			if (!(obj->attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
 800c6cc:	79b3      	ldrb	r3, [r6, #6]
 800c6ce:	06db      	lsls	r3, r3, #27
 800c6d0:	d562      	bpl.n	800c798 <follow_path+0x234>
				obj->sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
 800c6d2:	6971      	ldr	r1, [r6, #20]
 800c6d4:	f89b 0000 	ldrb.w	r0, [fp]
 800c6d8:	f10b 0338 	add.w	r3, fp, #56	; 0x38
 800c6dc:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800c6e0:	4419      	add	r1, r3
 800c6e2:	f7ff fca9 	bl	800c038 <ld_clust.isra.0>
 800c6e6:	60b0      	str	r0, [r6, #8]
	p = *path; lfn = dp->obj.fs->lfnbuf; si = di = 0;
 800c6e8:	6833      	ldr	r3, [r6, #0]
 800c6ea:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800c6ee:	f1aa 0502 	sub.w	r5, sl, #2
 800c6f2:	f109 33ff 	add.w	r3, r9, #4294967295
 800c6f6:	46a8      	mov	r8, r5
 800c6f8:	2700      	movs	r7, #0
		w = p[si++];					/* Get a character */
 800c6fa:	f813 0f01 	ldrb.w	r0, [r3, #1]!
		if (w < ' ') break;				/* Break if end of the path name */
 800c6fe:	281f      	cmp	r0, #31
		w = p[si++];					/* Get a character */
 800c700:	f107 0401 	add.w	r4, r7, #1
		if (w < ' ') break;				/* Break if end of the path name */
 800c704:	d90c      	bls.n	800c720 <follow_path+0x1bc>
		if (w == '/' || w == '\\') {	/* Break if a separator is found */
 800c706:	282f      	cmp	r0, #47	; 0x2f
 800c708:	d002      	beq.n	800c710 <follow_path+0x1ac>
 800c70a:	285c      	cmp	r0, #92	; 0x5c
 800c70c:	f47f af48 	bne.w	800c5a0 <follow_path+0x3c>
			while (p[si] == '/' || p[si] == '\\') si++;	/* Skip duplicated separator if exist */
 800c710:	f819 3004 	ldrb.w	r3, [r9, r4]
 800c714:	2b2f      	cmp	r3, #47	; 0x2f
 800c716:	f43f af41 	beq.w	800c59c <follow_path+0x38>
 800c71a:	2b5c      	cmp	r3, #92	; 0x5c
 800c71c:	f43f af3e 	beq.w	800c59c <follow_path+0x38>
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 800c720:	2820      	cmp	r0, #32
	*path = &p[si];						/* Return pointer to the next segment */
 800c722:	44a1      	add	r9, r4
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
 800c724:	bf34      	ite	cc
 800c726:	2404      	movcc	r4, #4
 800c728:	2400      	movcs	r4, #0
	while (di) {						/* Snip off trailing spaces and dots if exist */
 800c72a:	2f00      	cmp	r7, #0
 800c72c:	f47f af4f 	bne.w	800c5ce <follow_path+0x6a>
	lfn[di] = 0;						/* LFN is created */
 800c730:	2300      	movs	r3, #0
 800c732:	f82a 3017 	strh.w	r3, [sl, r7, lsl #1]
	if (di == 0) return FR_INVALID_NAME;	/* Reject nul name */
 800c736:	2f00      	cmp	r7, #0
 800c738:	f43f af43 	beq.w	800c5c2 <follow_path+0x5e>
	mem_set(dp->fn, ' ', 11);
 800c73c:	2120      	movs	r1, #32
 800c73e:	220b      	movs	r2, #11
 800c740:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800c744:	f7ff f922 	bl	800b98c <mem_set>
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
 800c748:	4619      	mov	r1, r3
 800c74a:	f83a 3011 	ldrh.w	r3, [sl, r1, lsl #1]
 800c74e:	2b20      	cmp	r3, #32
 800c750:	f43f af46 	beq.w	800c5e0 <follow_path+0x7c>
 800c754:	2b2e      	cmp	r3, #46	; 0x2e
 800c756:	f43f af43 	beq.w	800c5e0 <follow_path+0x7c>
	if (si) cf |= NS_LOSS | NS_LFN;
 800c75a:	b109      	cbz	r1, 800c760 <follow_path+0x1fc>
 800c75c:	f044 0403 	orr.w	r4, r4, #3
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
 800c760:	f835 3017 	ldrh.w	r3, [r5, r7, lsl #1]
 800c764:	2b2e      	cmp	r3, #46	; 0x2e
 800c766:	d001      	beq.n	800c76c <follow_path+0x208>
 800c768:	3f01      	subs	r7, #1
 800c76a:	d1f9      	bne.n	800c760 <follow_path+0x1fc>
		dp->fn[i++] = (BYTE)w;
 800c76c:	2300      	movs	r3, #0
 800c76e:	f04f 0808 	mov.w	r8, #8
 800c772:	461d      	mov	r5, r3
		w = lfn[si++];					/* Get an LFN character */
 800c774:	f83a 0011 	ldrh.w	r0, [sl, r1, lsl #1]
 800c778:	1c4a      	adds	r2, r1, #1
		if (!w) break;					/* Break on end of the LFN */
 800c77a:	2800      	cmp	r0, #0
 800c77c:	f43f af41 	beq.w	800c602 <follow_path+0x9e>
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
 800c780:	2820      	cmp	r0, #32
 800c782:	d005      	beq.n	800c790 <follow_path+0x22c>
 800c784:	282e      	cmp	r0, #46	; 0x2e
 800c786:	f47f af2d 	bne.w	800c5e4 <follow_path+0x80>
 800c78a:	42ba      	cmp	r2, r7
 800c78c:	f43f af2e 	beq.w	800c5ec <follow_path+0x88>
			cf |= NS_LOSS | NS_LFN; continue;
 800c790:	f044 0403 	orr.w	r4, r4, #3
		dp->fn[i++] = (BYTE)w;
 800c794:	4611      	mov	r1, r2
 800c796:	e7ed      	b.n	800c774 <follow_path+0x210>
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
 800c798:	2005      	movs	r0, #5
	return res;
 800c79a:	e762      	b.n	800c662 <follow_path+0xfe>
				if (IsUpper(w)) {		/* ASCII large capital */
 800c79c:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
 800c7a0:	2919      	cmp	r1, #25
 800c7a2:	d98e      	bls.n	800c6c2 <follow_path+0x15e>
					if (IsLower(w)) {	/* ASCII small capital */
 800c7a4:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
 800c7a8:	2919      	cmp	r1, #25
						b |= 1; w -= 0x20;
 800c7aa:	bf9e      	ittt	ls
 800c7ac:	3820      	subls	r0, #32
 800c7ae:	f045 0501 	orrls.w	r5, r5, #1
 800c7b2:	b280      	uxthls	r0, r0
 800c7b4:	e780      	b.n	800c6b8 <follow_path+0x154>
 800c7b6:	bf00      	nop
 800c7b8:	0802ac6a 	.word	0x0802ac6a
 800c7bc:	0802ac7a 	.word	0x0802ac7a
 800c7c0:	0802ac73 	.word	0x0802ac73

0800c7c4 <validate>:
static
FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
	_FDID* obj,		/* Pointer to the _OBJ, the 1st member in the FIL/DIR object, to check validity */
	FATFS** fs		/* Pointer to pointer to the owner file system object to return */
)
{
 800c7c4:	b538      	push	{r3, r4, r5, lr}
 800c7c6:	460d      	mov	r5, r1
	FRESULT res = FR_INVALID_OBJECT;


	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
 800c7c8:	4604      	mov	r4, r0
 800c7ca:	b1f0      	cbz	r0, 800c80a <validate+0x46>
 800c7cc:	6803      	ldr	r3, [r0, #0]
 800c7ce:	b1db      	cbz	r3, 800c808 <validate+0x44>
 800c7d0:	781a      	ldrb	r2, [r3, #0]
 800c7d2:	b1b2      	cbz	r2, 800c802 <validate+0x3e>
 800c7d4:	8881      	ldrh	r1, [r0, #4]
 800c7d6:	88da      	ldrh	r2, [r3, #6]
 800c7d8:	4291      	cmp	r1, r2
 800c7da:	d112      	bne.n	800c802 <validate+0x3e>
	return (fs && ff_req_grant(fs->sobj)) ? 1 : 0;
 800c7dc:	6918      	ldr	r0, [r3, #16]
 800c7de:	f000 f91f 	bl	800ca20 <ff_req_grant>
 800c7e2:	4603      	mov	r3, r0
 800c7e4:	b198      	cbz	r0, 800c80e <validate+0x4a>
#if _FS_REENTRANT
		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
			if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
 800c7e6:	6823      	ldr	r3, [r4, #0]
 800c7e8:	7858      	ldrb	r0, [r3, #1]
 800c7ea:	f7ff f88f 	bl	800b90c <disk_status>
 800c7ee:	f010 0001 	ands.w	r0, r0, #1
 800c7f2:	d102      	bne.n	800c7fa <validate+0x36>
		if (!(disk_status(obj->fs->drv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
			res = FR_OK;
		}
#endif
	}
	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 800c7f4:	6824      	ldr	r4, [r4, #0]
 800c7f6:	602c      	str	r4, [r5, #0]
	return res;
}
 800c7f8:	bd38      	pop	{r3, r4, r5, pc}
				unlock_fs(obj->fs, FR_OK);
 800c7fa:	6820      	ldr	r0, [r4, #0]
 800c7fc:	2100      	movs	r1, #0
 800c7fe:	f7ff fadc 	bl	800bdba <unlock_fs>
	FRESULT res = FR_INVALID_OBJECT;
 800c802:	2009      	movs	r0, #9
	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 800c804:	2400      	movs	r4, #0
 800c806:	e7f6      	b.n	800c7f6 <validate+0x32>
 800c808:	461c      	mov	r4, r3
	FRESULT res = FR_INVALID_OBJECT;
 800c80a:	2009      	movs	r0, #9
 800c80c:	e7f3      	b.n	800c7f6 <validate+0x32>
			res = FR_TIMEOUT;
 800c80e:	200f      	movs	r0, #15
	*fs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
 800c810:	461c      	mov	r4, r3
 800c812:	e7f0      	b.n	800c7f6 <validate+0x32>

0800c814 <f_mount>:
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
 800c814:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c816:	b085      	sub	sp, #20
 800c818:	e9cd 1000 	strd	r1, r0, [sp]
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
 800c81c:	a803      	add	r0, sp, #12
{
 800c81e:	4616      	mov	r6, r2
	const TCHAR *rp = path;
 800c820:	9103      	str	r1, [sp, #12]
	vol = get_ldnumber(&rp);
 800c822:	f7ff f941 	bl	800baa8 <get_ldnumber>
	if (vol < 0) return FR_INVALID_DRIVE;
 800c826:	1e05      	subs	r5, r0, #0
 800c828:	db2d      	blt.n	800c886 <f_mount+0x72>
	cfs = FatFs[vol];					/* Pointer to fs object */
 800c82a:	4f19      	ldr	r7, [pc, #100]	; (800c890 <f_mount+0x7c>)
 800c82c:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]

	if (cfs) {
 800c830:	b164      	cbz	r4, 800c84c <f_mount+0x38>
#if _FS_LOCK != 0
		clear_lock(cfs);
 800c832:	4620      	mov	r0, r4
 800c834:	f7ff f910 	bl	800ba58 <clear_lock>
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
 800c838:	6920      	ldr	r0, [r4, #16]
 800c83a:	f000 f8ec 	bl	800ca16 <ff_del_syncobj>
 800c83e:	b918      	cbnz	r0, 800c848 <f_mount+0x34>
 800c840:	2402      	movs	r4, #2

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
 800c842:	4620      	mov	r0, r4
 800c844:	b005      	add	sp, #20
 800c846:	bdf0      	pop	{r4, r5, r6, r7, pc}
		cfs->fs_type = 0;				/* Clear old fs object */
 800c848:	2300      	movs	r3, #0
 800c84a:	7023      	strb	r3, [r4, #0]
	if (fs) {
 800c84c:	9901      	ldr	r1, [sp, #4]
 800c84e:	b989      	cbnz	r1, 800c874 <f_mount+0x60>
	FatFs[vol] = fs;					/* Register new fs object */
 800c850:	9c01      	ldr	r4, [sp, #4]
 800c852:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 800c856:	2c00      	cmp	r4, #0
 800c858:	d0f3      	beq.n	800c842 <f_mount+0x2e>
 800c85a:	2e01      	cmp	r6, #1
 800c85c:	d115      	bne.n	800c88a <f_mount+0x76>
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
 800c85e:	a901      	add	r1, sp, #4
 800c860:	2200      	movs	r2, #0
 800c862:	4668      	mov	r0, sp
 800c864:	f7ff fab4 	bl	800bdd0 <find_volume>
 800c868:	4604      	mov	r4, r0
	LEAVE_FF(fs, res);
 800c86a:	4601      	mov	r1, r0
 800c86c:	9801      	ldr	r0, [sp, #4]
 800c86e:	f7ff faa4 	bl	800bdba <unlock_fs>
 800c872:	e7e6      	b.n	800c842 <f_mount+0x2e>
		fs->fs_type = 0;				/* Clear new fs object */
 800c874:	2300      	movs	r3, #0
 800c876:	f801 3b10 	strb.w	r3, [r1], #16
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
 800c87a:	b2e8      	uxtb	r0, r5
 800c87c:	f000 f8bf 	bl	800c9fe <ff_cre_syncobj>
 800c880:	2800      	cmp	r0, #0
 800c882:	d1e5      	bne.n	800c850 <f_mount+0x3c>
 800c884:	e7dc      	b.n	800c840 <f_mount+0x2c>
	if (vol < 0) return FR_INVALID_DRIVE;
 800c886:	240b      	movs	r4, #11
 800c888:	e7db      	b.n	800c842 <f_mount+0x2e>
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 800c88a:	2400      	movs	r4, #0
 800c88c:	e7d9      	b.n	800c842 <f_mount+0x2e>
 800c88e:	bf00      	nop
 800c890:	20003db8 	.word	0x20003db8

0800c894 <f_opendir>:

FRESULT f_opendir (
	DIR* dp,			/* Pointer to directory object to create */
	const TCHAR* path	/* Pointer to the directory path */
)
{
 800c894:	b530      	push	{r4, r5, lr}
 800c896:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
	FATFS *fs;
	_FDID *obj;
	DEF_NAMBUF


	if (!dp) return FR_INVALID_OBJECT;
 800c89a:	4605      	mov	r5, r0
{
 800c89c:	9101      	str	r1, [sp, #4]
	if (!dp) return FR_INVALID_OBJECT;
 800c89e:	2800      	cmp	r0, #0
 800c8a0:	d040      	beq.n	800c924 <f_opendir+0x90>

	/* Get logical drive */
	obj = &dp->obj;
	res = find_volume(&path, &fs, 0);
 800c8a2:	2200      	movs	r2, #0
 800c8a4:	a903      	add	r1, sp, #12
 800c8a6:	a801      	add	r0, sp, #4
 800c8a8:	f7ff fa92 	bl	800bdd0 <find_volume>
	if (res == FR_OK) {
 800c8ac:	4604      	mov	r4, r0
 800c8ae:	2800      	cmp	r0, #0
 800c8b0:	d133      	bne.n	800c91a <f_opendir+0x86>
		obj->fs = fs;
 800c8b2:	9b03      	ldr	r3, [sp, #12]
 800c8b4:	602b      	str	r3, [r5, #0]
		INIT_NAMBUF(fs);
 800c8b6:	aa04      	add	r2, sp, #16
		res = follow_path(dp, path);			/* Follow the path to the directory */
 800c8b8:	9901      	ldr	r1, [sp, #4]
		INIT_NAMBUF(fs);
 800c8ba:	60da      	str	r2, [r3, #12]
		res = follow_path(dp, path);			/* Follow the path to the directory */
 800c8bc:	4628      	mov	r0, r5
 800c8be:	f7ff fe51 	bl	800c564 <follow_path>
		if (res == FR_OK) {						/* Follow completed */
 800c8c2:	4604      	mov	r4, r0
 800c8c4:	bb30      	cbnz	r0, 800c914 <f_opendir+0x80>
			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 800c8c6:	f995 302f 	ldrsb.w	r3, [r5, #47]	; 0x2f
						obj->objsize = ld_qword(fs->dirbuf + XDIR_FileSize);
						obj->stat = fs->dirbuf[XDIR_GenFlags] & 2;
					} else
#endif
					{
						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
 800c8ca:	9c03      	ldr	r4, [sp, #12]
			if (!(dp->fn[NSFLAG] & NS_NONAME)) {	/* It is not the origin directory itself */
 800c8cc:	2b00      	cmp	r3, #0
 800c8ce:	db07      	blt.n	800c8e0 <f_opendir+0x4c>
				if (obj->attr & AM_DIR) {		/* This object is a sub-directory */
 800c8d0:	79ab      	ldrb	r3, [r5, #6]
 800c8d2:	06db      	lsls	r3, r3, #27
 800c8d4:	d520      	bpl.n	800c918 <f_opendir+0x84>
						obj->sclust = ld_clust(fs, dp->dir);	/* Get object allocation info */
 800c8d6:	7820      	ldrb	r0, [r4, #0]
 800c8d8:	6a29      	ldr	r1, [r5, #32]
 800c8da:	f7ff fbad 	bl	800c038 <ld_clust.isra.0>
 800c8de:	60a8      	str	r0, [r5, #8]
				} else {						/* This object is a file */
					res = FR_NO_PATH;
				}
			}
			if (res == FR_OK) {
				obj->id = fs->id;
 800c8e0:	88e3      	ldrh	r3, [r4, #6]
 800c8e2:	80ab      	strh	r3, [r5, #4]
				res = dir_sdi(dp, 0);			/* Rewind directory */
 800c8e4:	2100      	movs	r1, #0
 800c8e6:	4628      	mov	r0, r5
 800c8e8:	f7ff fc5c 	bl	800c1a4 <dir_sdi>
#if _FS_LOCK != 0
				if (res == FR_OK) {
 800c8ec:	4604      	mov	r4, r0
 800c8ee:	b988      	cbnz	r0, 800c914 <f_opendir+0x80>
					if (obj->sclust) {
 800c8f0:	68ab      	ldr	r3, [r5, #8]
 800c8f2:	b16b      	cbz	r3, 800c910 <f_opendir+0x7c>
						obj->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 800c8f4:	4601      	mov	r1, r0
 800c8f6:	4628      	mov	r0, r5
 800c8f8:	f7ff f84e 	bl	800b998 <inc_lock>
 800c8fc:	6128      	str	r0, [r5, #16]
						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 800c8fe:	b178      	cbz	r0, 800c920 <f_opendir+0x8c>
		FREE_NAMBUF();
		if (res == FR_NO_FILE) res = FR_NO_PATH;
	}
	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */

	LEAVE_FF(fs, res);
 800c900:	9803      	ldr	r0, [sp, #12]
 800c902:	4621      	mov	r1, r4
 800c904:	f7ff fa59 	bl	800bdba <unlock_fs>
}
 800c908:	4620      	mov	r0, r4
 800c90a:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
 800c90e:	bd30      	pop	{r4, r5, pc}
						obj->lockid = 0;	/* Root directory need not to be locked */
 800c910:	6128      	str	r0, [r5, #16]
		if (res == FR_NO_FILE) res = FR_NO_PATH;
 800c912:	e7f5      	b.n	800c900 <f_opendir+0x6c>
 800c914:	2c04      	cmp	r4, #4
 800c916:	d100      	bne.n	800c91a <f_opendir+0x86>
 800c918:	2405      	movs	r4, #5
	if (res != FR_OK) obj->fs = 0;		/* Invalidate the directory object if function faild */
 800c91a:	2300      	movs	r3, #0
 800c91c:	602b      	str	r3, [r5, #0]
 800c91e:	e7ef      	b.n	800c900 <f_opendir+0x6c>
						if (!obj->lockid) res = FR_TOO_MANY_OPEN_FILES;
 800c920:	2412      	movs	r4, #18
 800c922:	e7fa      	b.n	800c91a <f_opendir+0x86>
	if (!dp) return FR_INVALID_OBJECT;
 800c924:	2409      	movs	r4, #9
 800c926:	e7ef      	b.n	800c908 <f_opendir+0x74>

0800c928 <f_closedir>:
/*-----------------------------------------------------------------------*/

FRESULT f_closedir (
	DIR *dp		/* Pointer to the directory object to be closed */
)
{
 800c928:	b537      	push	{r0, r1, r2, r4, r5, lr}
	FRESULT res;
	FATFS *fs;


	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
 800c92a:	a901      	add	r1, sp, #4
{
 800c92c:	4605      	mov	r5, r0
	res = validate(&dp->obj, &fs);			/* Check validity of the file object */
 800c92e:	f7ff ff49 	bl	800c7c4 <validate>
	if (res == FR_OK) {
 800c932:	b940      	cbnz	r0, 800c946 <f_closedir+0x1e>
#if _FS_LOCK != 0
		if (dp->obj.lockid) {				/* Decrement sub-directory open counter */
 800c934:	6928      	ldr	r0, [r5, #16]
 800c936:	b940      	cbnz	r0, 800c94a <f_closedir+0x22>
			res = dec_lock(dp->obj.lockid);
		}
		if (res == FR_OK)
#endif
		{
			dp->obj.fs = 0;			/* Invalidate directory object */
 800c938:	2400      	movs	r4, #0
 800c93a:	602c      	str	r4, [r5, #0]
		}
#if _FS_REENTRANT
		unlock_fs(fs, FR_OK);		/* Unlock volume */
 800c93c:	9801      	ldr	r0, [sp, #4]
 800c93e:	2100      	movs	r1, #0
 800c940:	f7ff fa3b 	bl	800bdba <unlock_fs>
 800c944:	4620      	mov	r0, r4
#endif
	}
	return res;
}
 800c946:	b003      	add	sp, #12
 800c948:	bd30      	pop	{r4, r5, pc}
			res = dec_lock(dp->obj.lockid);
 800c94a:	f7ff f867 	bl	800ba1c <dec_lock>
		if (res == FR_OK)
 800c94e:	4604      	mov	r4, r0
 800c950:	2800      	cmp	r0, #0
 800c952:	d1f3      	bne.n	800c93c <f_closedir+0x14>
 800c954:	e7f0      	b.n	800c938 <f_closedir+0x10>

0800c956 <f_readdir>:

FRESULT f_readdir (
	DIR* dp,			/* Pointer to the open directory object */
	FILINFO* fno		/* Pointer to file information to return */
)
{
 800c956:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c958:	f5ad 7d03 	sub.w	sp, sp, #524	; 0x20c
 800c95c:	460e      	mov	r6, r1
	FRESULT res;
	FATFS *fs;
	DEF_NAMBUF


	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
 800c95e:	a901      	add	r1, sp, #4
{
 800c960:	4605      	mov	r5, r0
	res = validate(&dp->obj, &fs);	/* Check validity of the directory object */
 800c962:	f7ff ff2f 	bl	800c7c4 <validate>
	if (res == FR_OK) {
 800c966:	4604      	mov	r4, r0
 800c968:	b928      	cbnz	r0, 800c976 <f_readdir+0x20>
		if (!fno) {
 800c96a:	b966      	cbnz	r6, 800c986 <f_readdir+0x30>
			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 800c96c:	4601      	mov	r1, r0
 800c96e:	4628      	mov	r0, r5
 800c970:	f7ff fc18 	bl	800c1a4 <dir_sdi>
 800c974:	4604      	mov	r4, r0
				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
			}
			FREE_NAMBUF();
		}
	}
	LEAVE_FF(fs, res);
 800c976:	9801      	ldr	r0, [sp, #4]
 800c978:	4621      	mov	r1, r4
 800c97a:	f7ff fa1e 	bl	800bdba <unlock_fs>
}
 800c97e:	4620      	mov	r0, r4
 800c980:	f50d 7d03 	add.w	sp, sp, #524	; 0x20c
 800c984:	bdf0      	pop	{r4, r5, r6, r7, pc}
			INIT_NAMBUF(fs);
 800c986:	9b01      	ldr	r3, [sp, #4]
 800c988:	aa02      	add	r2, sp, #8
 800c98a:	60da      	str	r2, [r3, #12]
			res = dir_read(dp, 0);			/* Read an item */
 800c98c:	4628      	mov	r0, r5
 800c98e:	f7ff fd6f 	bl	800c470 <dir_read.constprop.0>
			if (res == FR_OK) {				/* A valid entry is found */
 800c992:	f010 07fb 	ands.w	r7, r0, #251	; 0xfb
			res = dir_read(dp, 0);			/* Read an item */
 800c996:	4604      	mov	r4, r0
			if (res == FR_OK) {				/* A valid entry is found */
 800c998:	d1ed      	bne.n	800c976 <f_readdir+0x20>
				get_fileinfo(dp, fno);		/* Get the object information */
 800c99a:	4631      	mov	r1, r6
 800c99c:	4628      	mov	r0, r5
 800c99e:	f7ff f89b 	bl	800bad8 <get_fileinfo>
				res = dir_next(dp, 0);		/* Increment index for next */
 800c9a2:	4639      	mov	r1, r7
 800c9a4:	4628      	mov	r0, r5
 800c9a6:	f7ff fc3e 	bl	800c226 <dir_next>
				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 800c9aa:	2804      	cmp	r0, #4
				res = dir_next(dp, 0);		/* Increment index for next */
 800c9ac:	4604      	mov	r4, r0
				if (res == FR_NO_FILE) res = FR_OK;	/* Ignore end of directory now */
 800c9ae:	bf14      	ite	ne
 800c9b0:	4604      	movne	r4, r0
 800c9b2:	2400      	moveq	r4, #0
 800c9b4:	e7df      	b.n	800c976 <f_readdir+0x20>
	...

0800c9b8 <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the parameter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(const Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 800c9b8:	b530      	push	{r4, r5, lr}
  uint8_t ret = 1;
  uint8_t DiskNum = 0;

  if(disk.nbr < _VOLUMES)
 800c9ba:	4b0e      	ldr	r3, [pc, #56]	; (800c9f4 <FATFS_LinkDriverEx+0x3c>)
 800c9bc:	7a5c      	ldrb	r4, [r3, #9]
{
 800c9be:	4605      	mov	r5, r0
  if(disk.nbr < _VOLUMES)
 800c9c0:	f004 00ff 	and.w	r0, r4, #255	; 0xff
 800c9c4:	b9a4      	cbnz	r4, 800c9f0 <FATFS_LinkDriverEx+0x38>
  {
    disk.is_initialized[disk.nbr] = 0;
 800c9c6:	7a5c      	ldrb	r4, [r3, #9]
 800c9c8:	5518      	strb	r0, [r3, r4]
    disk.drv[disk.nbr] = drv;
 800c9ca:	7a5c      	ldrb	r4, [r3, #9]
 800c9cc:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800c9d0:	6065      	str	r5, [r4, #4]
    disk.lun[disk.nbr] = lun;
 800c9d2:	7a5c      	ldrb	r4, [r3, #9]
 800c9d4:	441c      	add	r4, r3
 800c9d6:	7222      	strb	r2, [r4, #8]
    DiskNum = disk.nbr++;
 800c9d8:	7a5a      	ldrb	r2, [r3, #9]
 800c9da:	1c54      	adds	r4, r2, #1
 800c9dc:	b2e4      	uxtb	r4, r4
 800c9de:	725c      	strb	r4, [r3, #9]
    path[0] = DiskNum + '0';
    path[1] = ':';
 800c9e0:	233a      	movs	r3, #58	; 0x3a
    path[0] = DiskNum + '0';
 800c9e2:	3230      	adds	r2, #48	; 0x30
    path[1] = ':';
 800c9e4:	704b      	strb	r3, [r1, #1]
    path[2] = '/';
 800c9e6:	232f      	movs	r3, #47	; 0x2f
    path[0] = DiskNum + '0';
 800c9e8:	700a      	strb	r2, [r1, #0]
    path[2] = '/';
 800c9ea:	708b      	strb	r3, [r1, #2]
    path[3] = 0;
 800c9ec:	70c8      	strb	r0, [r1, #3]
    ret = 0;
  }

  return ret;
}
 800c9ee:	bd30      	pop	{r4, r5, pc}
  uint8_t ret = 1;
 800c9f0:	2001      	movs	r0, #1
 800c9f2:	e7fc      	b.n	800c9ee <FATFS_LinkDriverEx+0x36>
 800c9f4:	20003de0 	.word	0x20003de0

0800c9f8 <FATFS_LinkDriver>:
  * @param  path: pointer to the logical drive path
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(const Diskio_drvTypeDef *drv, char *path)
{
  return FATFS_LinkDriverEx(drv, path, 0);
 800c9f8:	2200      	movs	r2, #0
 800c9fa:	f7ff bfdd 	b.w	800c9b8 <FATFS_LinkDriverEx>

0800c9fe <ff_cre_syncobj>:

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
 800c9fe:	b510      	push	{r4, lr}
 800ca00:	460c      	mov	r4, r1

#if (osCMSIS < 0x20000U)
    osSemaphoreDef(SEM);
    *sobj = osSemaphoreCreate(osSemaphore(SEM), 1);
#else
    *sobj = osSemaphoreNew(1, 1, NULL);
 800ca02:	2101      	movs	r1, #1
 800ca04:	2200      	movs	r2, #0
 800ca06:	4608      	mov	r0, r1
 800ca08:	f000 f8ba 	bl	800cb80 <osSemaphoreNew>
 800ca0c:	6020      	str	r0, [r4, #0]

#endif
    ret = (*sobj != NULL);

    return ret;
}
 800ca0e:	3800      	subs	r0, #0
 800ca10:	bf18      	it	ne
 800ca12:	2001      	movne	r0, #1
 800ca14:	bd10      	pop	{r4, pc}

0800ca16 <ff_del_syncobj>:
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to any error */
	_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
 800ca16:	b508      	push	{r3, lr}
#if _USE_MUTEX
    osMutexDelete (sobj);
#else
    osSemaphoreDelete (sobj);
 800ca18:	f000 f94f 	bl	800ccba <osSemaphoreDelete>
#endif
    return 1;
}
 800ca1c:	2001      	movs	r0, #1
 800ca1e:	bd08      	pop	{r3, pc}

0800ca20 <ff_req_grant>:
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
 800ca20:	b508      	push	{r3, lr}
#else

#if _USE_MUTEX
   if(osMutexAcquire(sobj, _FS_TIMEOUT) == osOK)
#else
   if(osSemaphoreAcquire(sobj, _FS_TIMEOUT) == osOK)
 800ca22:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ca26:	f000 f8f5 	bl	800cc14 <osSemaphoreAcquire>
  {
    ret = 1;
  }

  return ret;
}
 800ca2a:	fab0 f080 	clz	r0, r0
 800ca2e:	0940      	lsrs	r0, r0, #5
 800ca30:	bd08      	pop	{r3, pc}

0800ca32 <ff_rel_grant>:
)
{
#if _USE_MUTEX
  osMutexRelease(sobj);
#else
  osSemaphoreRelease(sobj);
 800ca32:	f000 b91a 	b.w	800cc6a <osSemaphoreRelease>

0800ca36 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800ca36:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800ca38:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ca3c:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800ca3e:	f001 fe73 	bl	800e728 <xTaskGetSchedulerState>
 800ca42:	2801      	cmp	r0, #1
 800ca44:	d003      	beq.n	800ca4e <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800ca46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800ca4a:	f000 bc0b 	b.w	800d264 <xPortSysTickHandler>
}
 800ca4e:	bd08      	pop	{r3, pc}

0800ca50 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ca50:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca54:	b92b      	cbnz	r3, 800ca62 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800ca56:	4b06      	ldr	r3, [pc, #24]	; (800ca70 <osKernelInitialize+0x20>)
 800ca58:	6818      	ldr	r0, [r3, #0]
 800ca5a:	b928      	cbnz	r0, 800ca68 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ca5c:	2201      	movs	r2, #1
 800ca5e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ca60:	4770      	bx	lr
    stat = osErrorISR;
 800ca62:	f06f 0005 	mvn.w	r0, #5
 800ca66:	4770      	bx	lr
    } else {
      stat = osError;
 800ca68:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ca6c:	4770      	bx	lr
 800ca6e:	bf00      	nop
 800ca70:	200040ac 	.word	0x200040ac

0800ca74 <osKernelGetState>:
  }

  return (osOK);
}

osKernelState_t osKernelGetState (void) {
 800ca74:	b508      	push	{r3, lr}
  osKernelState_t state;

  switch (xTaskGetSchedulerState()) {
 800ca76:	f001 fe57 	bl	800e728 <xTaskGetSchedulerState>
 800ca7a:	b138      	cbz	r0, 800ca8c <osKernelGetState+0x18>
 800ca7c:	2802      	cmp	r0, #2
 800ca7e:	d004      	beq.n	800ca8a <osKernelGetState+0x16>
      state = osKernelLocked;
      break;

    case taskSCHEDULER_NOT_STARTED:
    default:
      if (KernelState == osKernelReady) {
 800ca80:	4b03      	ldr	r3, [pc, #12]	; (800ca90 <osKernelGetState+0x1c>)
 800ca82:	6818      	ldr	r0, [r3, #0]
 800ca84:	1e43      	subs	r3, r0, #1
 800ca86:	4258      	negs	r0, r3
 800ca88:	4158      	adcs	r0, r3
      }
      break;
  }

  return (state);
}
 800ca8a:	bd08      	pop	{r3, pc}
  switch (xTaskGetSchedulerState()) {
 800ca8c:	2003      	movs	r0, #3
  return (state);
 800ca8e:	e7fc      	b.n	800ca8a <osKernelGetState+0x16>
 800ca90:	200040ac 	.word	0x200040ac

0800ca94 <osKernelStart>:

osStatus_t osKernelStart (void) {
 800ca94:	b510      	push	{r4, lr}
 800ca96:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca9a:	b95c      	cbnz	r4, 800cab4 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ca9c:	4b08      	ldr	r3, [pc, #32]	; (800cac0 <osKernelStart+0x2c>)
 800ca9e:	681a      	ldr	r2, [r3, #0]
 800caa0:	2a01      	cmp	r2, #1
 800caa2:	d10a      	bne.n	800caba <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800caa4:	4a07      	ldr	r2, [pc, #28]	; (800cac4 <osKernelStart+0x30>)
 800caa6:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800caa8:	2202      	movs	r2, #2
 800caaa:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800caac:	f001 fb92 	bl	800e1d4 <vTaskStartScheduler>
      stat = osOK;
 800cab0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cab2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cab4:	f06f 0005 	mvn.w	r0, #5
 800cab8:	e7fb      	b.n	800cab2 <osKernelStart+0x1e>
      stat = osError;
 800caba:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800cabe:	e7f8      	b.n	800cab2 <osKernelStart+0x1e>
 800cac0:	200040ac 	.word	0x200040ac
 800cac4:	e000ed00 	.word	0xe000ed00

0800cac8 <osKernelGetTickCount>:
 800cac8:	f3ef 8305 	mrs	r3, IPSR
}

uint32_t osKernelGetTickCount (void) {
  TickType_t ticks;

  if (IS_IRQ()) {
 800cacc:	b10b      	cbz	r3, 800cad2 <osKernelGetTickCount+0xa>
    ticks = xTaskGetTickCountFromISR();
 800cace:	f001 bbdf 	b.w	800e290 <xTaskGetTickCountFromISR>
  } else {
    ticks = xTaskGetTickCount();
 800cad2:	f001 bbd7 	b.w	800e284 <xTaskGetTickCount>

0800cad6 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cad6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cad8:	b087      	sub	sp, #28
 800cada:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cadc:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cade:	460b      	mov	r3, r1
  hTask = NULL;
 800cae0:	9205      	str	r2, [sp, #20]
 800cae2:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cae6:	b9d2      	cbnz	r2, 800cb1e <osThreadNew+0x48>
 800cae8:	b1c8      	cbz	r0, 800cb1e <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800caea:	2c00      	cmp	r4, #0
 800caec:	d02f      	beq.n	800cb4e <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800caee:	69a5      	ldr	r5, [r4, #24]
 800caf0:	2d00      	cmp	r5, #0
 800caf2:	bf08      	it	eq
 800caf4:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800caf6:	1e69      	subs	r1, r5, #1
 800caf8:	2937      	cmp	r1, #55	; 0x37
 800cafa:	46ac      	mov	ip, r5
 800cafc:	d82b      	bhi.n	800cb56 <osThreadNew+0x80>
 800cafe:	6861      	ldr	r1, [r4, #4]
 800cb00:	07c9      	lsls	r1, r1, #31
 800cb02:	d428      	bmi.n	800cb56 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cb04:	6966      	ldr	r6, [r4, #20]
 800cb06:	b16e      	cbz	r6, 800cb24 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cb08:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cb0a:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800cb0e:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cb10:	b157      	cbz	r7, 800cb28 <osThreadNew+0x52>
 800cb12:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800cb16:	d902      	bls.n	800cb1e <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cb18:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cb1a:	b104      	cbz	r4, 800cb1e <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cb1c:	b9ee      	cbnz	r6, 800cb5a <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800cb1e:	9805      	ldr	r0, [sp, #20]
}
 800cb20:	b007      	add	sp, #28
 800cb22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800cb24:	2280      	movs	r2, #128	; 0x80
 800cb26:	e7f0      	b.n	800cb0a <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cb28:	f1be 0f00 	cmp.w	lr, #0
 800cb2c:	d1f7      	bne.n	800cb1e <osThreadNew+0x48>
      if (mem == 0) {
 800cb2e:	6924      	ldr	r4, [r4, #16]
 800cb30:	2c00      	cmp	r4, #0
 800cb32:	d1f4      	bne.n	800cb1e <osThreadNew+0x48>
 800cb34:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cb36:	a905      	add	r1, sp, #20
 800cb38:	e9cd c100 	strd	ip, r1, [sp]
 800cb3c:	b292      	uxth	r2, r2
 800cb3e:	4621      	mov	r1, r4
 800cb40:	f001 fb1a 	bl	800e178 <xTaskCreate>
 800cb44:	2801      	cmp	r0, #1
            hTask = NULL;
 800cb46:	bf1c      	itt	ne
 800cb48:	2300      	movne	r3, #0
 800cb4a:	9305      	strne	r3, [sp, #20]
 800cb4c:	e7e7      	b.n	800cb1e <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800cb4e:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800cb52:	2280      	movs	r2, #128	; 0x80
 800cb54:	e7ef      	b.n	800cb36 <osThreadNew+0x60>
        return (NULL);
 800cb56:	4610      	mov	r0, r2
 800cb58:	e7e2      	b.n	800cb20 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cb5a:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800cb5e:	9500      	str	r5, [sp, #0]
 800cb60:	f001 fad2 	bl	800e108 <xTaskCreateStatic>
 800cb64:	9005      	str	r0, [sp, #20]
 800cb66:	e7da      	b.n	800cb1e <osThreadNew+0x48>

0800cb68 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cb68:	b510      	push	{r4, lr}
 800cb6a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb6e:	b924      	cbnz	r4, 800cb7a <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cb70:	b110      	cbz	r0, 800cb78 <osDelay+0x10>
      vTaskDelay(ticks);
 800cb72:	f001 fc9f 	bl	800e4b4 <vTaskDelay>
    stat = osOK;
 800cb76:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800cb78:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cb7a:	f06f 0005 	mvn.w	r0, #5
 800cb7e:	e7fb      	b.n	800cb78 <osDelay+0x10>

0800cb80 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cb80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cb82:	4604      	mov	r4, r0
 800cb84:	460e      	mov	r6, r1
 800cb86:	4615      	mov	r5, r2
 800cb88:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cb8c:	b11a      	cbz	r2, 800cb96 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800cb8e:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cb90:	4620      	mov	r0, r4
 800cb92:	b003      	add	sp, #12
 800cb94:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cb96:	2800      	cmp	r0, #0
 800cb98:	d0f9      	beq.n	800cb8e <osSemaphoreNew+0xe>
 800cb9a:	4288      	cmp	r0, r1
 800cb9c:	d3f7      	bcc.n	800cb8e <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800cb9e:	b1e5      	cbz	r5, 800cbda <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cba0:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800cba4:	b1bb      	cbz	r3, 800cbd6 <osSemaphoreNew+0x56>
 800cba6:	2f4f      	cmp	r7, #79	; 0x4f
 800cba8:	d9f1      	bls.n	800cb8e <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800cbaa:	2801      	cmp	r0, #1
 800cbac:	d12a      	bne.n	800cc04 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cbae:	2103      	movs	r1, #3
 800cbb0:	9100      	str	r1, [sp, #0]
 800cbb2:	4611      	mov	r1, r2
 800cbb4:	f000 fcff 	bl	800d5b6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800cbb8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cbba:	2800      	cmp	r0, #0
 800cbbc:	d0e7      	beq.n	800cb8e <osSemaphoreNew+0xe>
 800cbbe:	b1de      	cbz	r6, 800cbf8 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cbc0:	2300      	movs	r3, #0
 800cbc2:	461a      	mov	r2, r3
 800cbc4:	4619      	mov	r1, r3
 800cbc6:	f000 fdab 	bl	800d720 <xQueueGenericSend>
 800cbca:	2801      	cmp	r0, #1
 800cbcc:	d014      	beq.n	800cbf8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cbce:	4620      	mov	r0, r4
 800cbd0:	f001 f8e6 	bl	800dda0 <vQueueDelete>
 800cbd4:	e7db      	b.n	800cb8e <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cbd6:	2f00      	cmp	r7, #0
 800cbd8:	d1d9      	bne.n	800cb8e <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800cbda:	2c01      	cmp	r4, #1
 800cbdc:	d105      	bne.n	800cbea <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800cbde:	2203      	movs	r2, #3
 800cbe0:	2100      	movs	r1, #0
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	f000 fd35 	bl	800d652 <xQueueGenericCreate>
 800cbe8:	e7e6      	b.n	800cbb8 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cbea:	4620      	mov	r0, r4
 800cbec:	4631      	mov	r1, r6
 800cbee:	f000 fd79 	bl	800d6e4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cbf2:	4604      	mov	r4, r0
 800cbf4:	2800      	cmp	r0, #0
 800cbf6:	d0ca      	beq.n	800cb8e <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800cbf8:	b955      	cbnz	r5, 800cc10 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800cbfa:	4629      	mov	r1, r5
 800cbfc:	4620      	mov	r0, r4
 800cbfe:	f001 f8a9 	bl	800dd54 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800cc02:	e7c5      	b.n	800cb90 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cc04:	461a      	mov	r2, r3
 800cc06:	f000 fd4b 	bl	800d6a0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800cc0a:	4604      	mov	r4, r0
 800cc0c:	2800      	cmp	r0, #0
 800cc0e:	d0be      	beq.n	800cb8e <osSemaphoreNew+0xe>
          name = attr->name;
 800cc10:	682d      	ldr	r5, [r5, #0]
 800cc12:	e7f2      	b.n	800cbfa <osSemaphoreNew+0x7a>

0800cc14 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cc14:	b513      	push	{r0, r1, r4, lr}
 800cc16:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cc18:	b308      	cbz	r0, 800cc5e <osSemaphoreAcquire+0x4a>
 800cc1a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cc1e:	b1b3      	cbz	r3, 800cc4e <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800cc20:	b9e9      	cbnz	r1, 800cc5e <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cc22:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cc24:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cc26:	f001 f846 	bl	800dcb6 <xQueueReceiveFromISR>
 800cc2a:	2801      	cmp	r0, #1
 800cc2c:	d114      	bne.n	800cc58 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cc2e:	9b01      	ldr	r3, [sp, #4]
 800cc30:	b913      	cbnz	r3, 800cc38 <osSemaphoreAcquire+0x24>
  stat = osOK;
 800cc32:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cc34:	b002      	add	sp, #8
 800cc36:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cc38:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc40:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc44:	f3bf 8f4f 	dsb	sy
 800cc48:	f3bf 8f6f 	isb	sy
 800cc4c:	e7f1      	b.n	800cc32 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cc4e:	f000 ff6f 	bl	800db30 <xQueueSemaphoreTake>
 800cc52:	2801      	cmp	r0, #1
 800cc54:	d0ed      	beq.n	800cc32 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800cc56:	b92c      	cbnz	r4, 800cc64 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800cc58:	f06f 0002 	mvn.w	r0, #2
 800cc5c:	e7ea      	b.n	800cc34 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800cc5e:	f06f 0003 	mvn.w	r0, #3
 800cc62:	e7e7      	b.n	800cc34 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800cc64:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800cc68:	e7e4      	b.n	800cc34 <osSemaphoreAcquire+0x20>

0800cc6a <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cc6a:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cc6c:	b310      	cbz	r0, 800ccb4 <osSemaphoreRelease+0x4a>
 800cc6e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cc72:	b1b3      	cbz	r3, 800cca2 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cc74:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cc76:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cc78:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cc7a:	f000 fe66 	bl	800d94a <xQueueGiveFromISR>
 800cc7e:	2801      	cmp	r0, #1
 800cc80:	d115      	bne.n	800ccae <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cc82:	9b01      	ldr	r3, [sp, #4]
 800cc84:	b913      	cbnz	r3, 800cc8c <osSemaphoreRelease+0x22>
  stat = osOK;
 800cc86:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cc88:	b002      	add	sp, #8
 800cc8a:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800cc8c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc94:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc98:	f3bf 8f4f 	dsb	sy
 800cc9c:	f3bf 8f6f 	isb	sy
 800cca0:	e7f1      	b.n	800cc86 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cca2:	461a      	mov	r2, r3
 800cca4:	4619      	mov	r1, r3
 800cca6:	f000 fd3b 	bl	800d720 <xQueueGenericSend>
 800ccaa:	2801      	cmp	r0, #1
 800ccac:	d0eb      	beq.n	800cc86 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800ccae:	f06f 0002 	mvn.w	r0, #2
 800ccb2:	e7e9      	b.n	800cc88 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800ccb4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800ccb8:	e7e6      	b.n	800cc88 <osSemaphoreRelease+0x1e>

0800ccba <osSemaphoreDelete>:
  }

  return (count);
}

osStatus_t osSemaphoreDelete (osSemaphoreId_t semaphore_id) {
 800ccba:	b538      	push	{r3, r4, r5, lr}
 800ccbc:	4605      	mov	r5, r0
 800ccbe:	f3ef 8405 	mrs	r4, IPSR
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  osStatus_t stat;

#ifndef USE_FreeRTOS_HEAP_1
  if (IS_IRQ()) {
 800ccc2:	b93c      	cbnz	r4, 800ccd4 <osSemaphoreDelete+0x1a>
    stat = osErrorISR;
  }
  else if (hSemaphore == NULL) {
 800ccc4:	b148      	cbz	r0, 800ccda <osSemaphoreDelete+0x20>
    stat = osErrorParameter;
  }
  else {
    #if (configQUEUE_REGISTRY_SIZE > 0)
    vQueueUnregisterQueue (hSemaphore);
 800ccc6:	f001 f857 	bl	800dd78 <vQueueUnregisterQueue>
    #endif

    stat = osOK;
    vSemaphoreDelete (hSemaphore);
 800ccca:	4628      	mov	r0, r5
 800cccc:	f001 f868 	bl	800dda0 <vQueueDelete>
    stat = osOK;
 800ccd0:	4620      	mov	r0, r4
#else
  stat = osError;
#endif

  return (stat);
}
 800ccd2:	bd38      	pop	{r3, r4, r5, pc}
    stat = osErrorISR;
 800ccd4:	f06f 0005 	mvn.w	r0, #5
 800ccd8:	e7fb      	b.n	800ccd2 <osSemaphoreDelete+0x18>
    stat = osErrorParameter;
 800ccda:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800ccde:	e7f8      	b.n	800ccd2 <osSemaphoreDelete+0x18>

0800cce0 <osMessageQueueNew>:

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cce0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cce2:	4605      	mov	r5, r0
 800cce4:	460e      	mov	r6, r1
 800cce6:	4614      	mov	r4, r2
 800cce8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ccec:	b11f      	cbz	r7, 800ccf6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800ccee:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ccf0:	4628      	mov	r0, r5
 800ccf2:	b003      	add	sp, #12
 800ccf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ccf6:	2800      	cmp	r0, #0
 800ccf8:	d0f9      	beq.n	800ccee <osMessageQueueNew+0xe>
 800ccfa:	2900      	cmp	r1, #0
 800ccfc:	d0f7      	beq.n	800ccee <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800ccfe:	b1da      	cbz	r2, 800cd38 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cd00:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800cd04:	b183      	cbz	r3, 800cd28 <osMessageQueueNew+0x48>
 800cd06:	2a4f      	cmp	r2, #79	; 0x4f
 800cd08:	d9f1      	bls.n	800ccee <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cd0a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cd0c:	2a00      	cmp	r2, #0
 800cd0e:	d0ee      	beq.n	800ccee <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cd10:	6966      	ldr	r6, [r4, #20]
 800cd12:	434d      	muls	r5, r1
 800cd14:	42ae      	cmp	r6, r5
 800cd16:	d3ea      	bcc.n	800ccee <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cd18:	9700      	str	r7, [sp, #0]
 800cd1a:	f000 fc4c 	bl	800d5b6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cd1e:	4605      	mov	r5, r0
 800cd20:	2800      	cmp	r0, #0
 800cd22:	d0e4      	beq.n	800ccee <osMessageQueueNew+0xe>
        name = attr->name;
 800cd24:	6824      	ldr	r4, [r4, #0]
 800cd26:	e011      	b.n	800cd4c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cd28:	2a00      	cmp	r2, #0
 800cd2a:	d1e0      	bne.n	800ccee <osMessageQueueNew+0xe>
 800cd2c:	6923      	ldr	r3, [r4, #16]
 800cd2e:	2b00      	cmp	r3, #0
 800cd30:	d1dd      	bne.n	800ccee <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cd32:	6963      	ldr	r3, [r4, #20]
 800cd34:	2b00      	cmp	r3, #0
 800cd36:	d1da      	bne.n	800ccee <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cd38:	4628      	mov	r0, r5
 800cd3a:	2200      	movs	r2, #0
 800cd3c:	4631      	mov	r1, r6
 800cd3e:	f000 fc88 	bl	800d652 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cd42:	4605      	mov	r5, r0
 800cd44:	2800      	cmp	r0, #0
 800cd46:	d0d2      	beq.n	800ccee <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800cd48:	2c00      	cmp	r4, #0
 800cd4a:	d1eb      	bne.n	800cd24 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800cd4c:	4621      	mov	r1, r4
 800cd4e:	4628      	mov	r0, r5
 800cd50:	f001 f800 	bl	800dd54 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cd54:	e7cc      	b.n	800ccf0 <osMessageQueueNew+0x10>

0800cd56 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cd56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd58:	461c      	mov	r4, r3
 800cd5a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cd5e:	b1c6      	cbz	r6, 800cd92 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cd60:	b318      	cbz	r0, 800cdaa <osMessageQueuePut+0x54>
 800cd62:	b311      	cbz	r1, 800cdaa <osMessageQueuePut+0x54>
 800cd64:	bb0b      	cbnz	r3, 800cdaa <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cd66:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd68:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cd6a:	f000 fd8c 	bl	800d886 <xQueueGenericSendFromISR>
 800cd6e:	2801      	cmp	r0, #1
 800cd70:	d118      	bne.n	800cda4 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd72:	9b01      	ldr	r3, [sp, #4]
 800cd74:	b913      	cbnz	r3, 800cd7c <osMessageQueuePut+0x26>
  stat = osOK;
 800cd76:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cd78:	b002      	add	sp, #8
 800cd7a:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800cd7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd84:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd88:	f3bf 8f4f 	dsb	sy
 800cd8c:	f3bf 8f6f 	isb	sy
 800cd90:	e7f1      	b.n	800cd76 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cd92:	b150      	cbz	r0, 800cdaa <osMessageQueuePut+0x54>
 800cd94:	b149      	cbz	r1, 800cdaa <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cd96:	4633      	mov	r3, r6
 800cd98:	4622      	mov	r2, r4
 800cd9a:	f000 fcc1 	bl	800d720 <xQueueGenericSend>
 800cd9e:	2801      	cmp	r0, #1
 800cda0:	d0e9      	beq.n	800cd76 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800cda2:	b92c      	cbnz	r4, 800cdb0 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800cda4:	f06f 0002 	mvn.w	r0, #2
 800cda8:	e7e6      	b.n	800cd78 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800cdaa:	f06f 0003 	mvn.w	r0, #3
 800cdae:	e7e3      	b.n	800cd78 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800cdb0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800cdb4:	e7e0      	b.n	800cd78 <osMessageQueuePut+0x22>

0800cdb6 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cdb6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cdb8:	461c      	mov	r4, r3
 800cdba:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cdbe:	b1c3      	cbz	r3, 800cdf2 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cdc0:	b310      	cbz	r0, 800ce08 <osMessageQueueGet+0x52>
 800cdc2:	b309      	cbz	r1, 800ce08 <osMessageQueueGet+0x52>
 800cdc4:	bb04      	cbnz	r4, 800ce08 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cdc6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cdc8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cdca:	f000 ff74 	bl	800dcb6 <xQueueReceiveFromISR>
 800cdce:	2801      	cmp	r0, #1
 800cdd0:	d117      	bne.n	800ce02 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cdd2:	9b01      	ldr	r3, [sp, #4]
 800cdd4:	b913      	cbnz	r3, 800cddc <osMessageQueueGet+0x26>
  stat = osOK;
 800cdd6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cdd8:	b003      	add	sp, #12
 800cdda:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800cddc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cde0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cde4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cde8:	f3bf 8f4f 	dsb	sy
 800cdec:	f3bf 8f6f 	isb	sy
 800cdf0:	e7f1      	b.n	800cdd6 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cdf2:	b148      	cbz	r0, 800ce08 <osMessageQueueGet+0x52>
 800cdf4:	b141      	cbz	r1, 800ce08 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cdf6:	4622      	mov	r2, r4
 800cdf8:	f000 fdfb 	bl	800d9f2 <xQueueReceive>
 800cdfc:	2801      	cmp	r0, #1
 800cdfe:	d0ea      	beq.n	800cdd6 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800ce00:	b92c      	cbnz	r4, 800ce0e <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800ce02:	f06f 0002 	mvn.w	r0, #2
 800ce06:	e7e7      	b.n	800cdd8 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800ce08:	f06f 0003 	mvn.w	r0, #3
 800ce0c:	e7e4      	b.n	800cdd8 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800ce0e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800ce12:	e7e1      	b.n	800cdd8 <osMessageQueueGet+0x22>

0800ce14 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800ce14:	4b03      	ldr	r3, [pc, #12]	; (800ce24 <vApplicationGetIdleTaskMemory+0x10>)
 800ce16:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800ce18:	4b03      	ldr	r3, [pc, #12]	; (800ce28 <vApplicationGetIdleTaskMemory+0x14>)
 800ce1a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800ce1c:	2380      	movs	r3, #128	; 0x80
 800ce1e:	6013      	str	r3, [r2, #0]
}
 800ce20:	4770      	bx	lr
 800ce22:	bf00      	nop
 800ce24:	20003fec 	.word	0x20003fec
 800ce28:	20003dec 	.word	0x20003dec

0800ce2c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800ce2c:	4b03      	ldr	r3, [pc, #12]	; (800ce3c <vApplicationGetTimerTaskMemory+0x10>)
 800ce2e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800ce30:	4b03      	ldr	r3, [pc, #12]	; (800ce40 <vApplicationGetTimerTaskMemory+0x14>)
 800ce32:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800ce34:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ce38:	6013      	str	r3, [r2, #0]
}
 800ce3a:	4770      	bx	lr
 800ce3c:	200044b0 	.word	0x200044b0
 800ce40:	200040b0 	.word	0x200040b0

0800ce44 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800ce44:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ce46:	4b0f      	ldr	r3, [pc, #60]	; (800ce84 <prvInsertBlockIntoFreeList+0x40>)
 800ce48:	461a      	mov	r2, r3
 800ce4a:	681b      	ldr	r3, [r3, #0]
 800ce4c:	4283      	cmp	r3, r0
 800ce4e:	d3fb      	bcc.n	800ce48 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800ce50:	6854      	ldr	r4, [r2, #4]
 800ce52:	1911      	adds	r1, r2, r4
 800ce54:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ce56:	bf01      	itttt	eq
 800ce58:	6841      	ldreq	r1, [r0, #4]
 800ce5a:	4610      	moveq	r0, r2
 800ce5c:	1909      	addeq	r1, r1, r4
 800ce5e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ce60:	6844      	ldr	r4, [r0, #4]
 800ce62:	1901      	adds	r1, r0, r4
 800ce64:	428b      	cmp	r3, r1
 800ce66:	d107      	bne.n	800ce78 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ce68:	4907      	ldr	r1, [pc, #28]	; (800ce88 <prvInsertBlockIntoFreeList+0x44>)
 800ce6a:	6809      	ldr	r1, [r1, #0]
 800ce6c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ce6e:	bf1f      	itttt	ne
 800ce70:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ce72:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ce74:	1909      	addne	r1, r1, r4
 800ce76:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800ce78:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800ce7a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800ce7c:	bf18      	it	ne
 800ce7e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800ce80:	bd10      	pop	{r4, pc}
 800ce82:	bf00      	nop
 800ce84:	20014588 	.word	0x20014588
 800ce88:	20004570 	.word	0x20004570

0800ce8c <pvPortMalloc>:
{
 800ce8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce90:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800ce92:	f001 f9ef 	bl	800e274 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800ce96:	4842      	ldr	r0, [pc, #264]	; (800cfa0 <pvPortMalloc+0x114>)
 800ce98:	4d42      	ldr	r5, [pc, #264]	; (800cfa4 <pvPortMalloc+0x118>)
 800ce9a:	6803      	ldr	r3, [r0, #0]
 800ce9c:	bb0b      	cbnz	r3, 800cee2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800ce9e:	4942      	ldr	r1, [pc, #264]	; (800cfa8 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cea0:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cea2:	bf1f      	itttt	ne
 800cea4:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cea6:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800ceaa:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800ceae:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800ceb0:	bf14      	ite	ne
 800ceb2:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800ceb4:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800ceb8:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800ceba:	4e3c      	ldr	r6, [pc, #240]	; (800cfac <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800cebc:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cebe:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800cec2:	2300      	movs	r3, #0
 800cec4:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cec6:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cec8:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cecc:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cece:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800ced2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ced4:	4a36      	ldr	r2, [pc, #216]	; (800cfb0 <pvPortMalloc+0x124>)
 800ced6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ced8:	4a36      	ldr	r2, [pc, #216]	; (800cfb4 <pvPortMalloc+0x128>)
 800ceda:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cedc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800cee0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cee2:	682f      	ldr	r7, [r5, #0]
 800cee4:	4227      	tst	r7, r4
 800cee6:	d155      	bne.n	800cf94 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800cee8:	2c00      	cmp	r4, #0
 800ceea:	d046      	beq.n	800cf7a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800ceec:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cef0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cef2:	bf1c      	itt	ne
 800cef4:	f023 0307 	bicne.w	r3, r3, #7
 800cef8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cefa:	2b00      	cmp	r3, #0
 800cefc:	d04a      	beq.n	800cf94 <pvPortMalloc+0x108>
 800cefe:	4c2d      	ldr	r4, [pc, #180]	; (800cfb4 <pvPortMalloc+0x128>)
 800cf00:	6826      	ldr	r6, [r4, #0]
 800cf02:	429e      	cmp	r6, r3
 800cf04:	d346      	bcc.n	800cf94 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800cf06:	4a29      	ldr	r2, [pc, #164]	; (800cfac <pvPortMalloc+0x120>)
 800cf08:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cf0a:	6869      	ldr	r1, [r5, #4]
 800cf0c:	4299      	cmp	r1, r3
 800cf0e:	d204      	bcs.n	800cf1a <pvPortMalloc+0x8e>
 800cf10:	f8d5 c000 	ldr.w	ip, [r5]
 800cf14:	f1bc 0f00 	cmp.w	ip, #0
 800cf18:	d115      	bne.n	800cf46 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800cf1a:	6800      	ldr	r0, [r0, #0]
 800cf1c:	42a8      	cmp	r0, r5
 800cf1e:	d039      	beq.n	800cf94 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cf20:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cf22:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cf24:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cf28:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cf2a:	2910      	cmp	r1, #16
 800cf2c:	d912      	bls.n	800cf54 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cf2e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cf30:	0742      	lsls	r2, r0, #29
 800cf32:	d00b      	beq.n	800cf4c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cf34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf38:	f383 8811 	msr	BASEPRI, r3
 800cf3c:	f3bf 8f6f 	isb	sy
 800cf40:	f3bf 8f4f 	dsb	sy
 800cf44:	e7fe      	b.n	800cf44 <pvPortMalloc+0xb8>
 800cf46:	462a      	mov	r2, r5
 800cf48:	4665      	mov	r5, ip
 800cf4a:	e7de      	b.n	800cf0a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cf4c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800cf4e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800cf50:	f7ff ff78 	bl	800ce44 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cf54:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cf56:	4916      	ldr	r1, [pc, #88]	; (800cfb0 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 800cf58:	4a17      	ldr	r2, [pc, #92]	; (800cfb8 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cf5a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cf5c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cf5e:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800cf60:	2300      	movs	r3, #0
 800cf62:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800cf64:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cf66:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cf68:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800cf6a:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800cf6e:	bf38      	it	cc
 800cf70:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cf72:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cf76:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800cf78:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800cf7a:	f001 fa27 	bl	800e3cc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800cf7e:	0763      	lsls	r3, r4, #29
 800cf80:	d00a      	beq.n	800cf98 <pvPortMalloc+0x10c>
 800cf82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf86:	f383 8811 	msr	BASEPRI, r3
 800cf8a:	f3bf 8f6f 	isb	sy
 800cf8e:	f3bf 8f4f 	dsb	sy
 800cf92:	e7fe      	b.n	800cf92 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800cf94:	2400      	movs	r4, #0
 800cf96:	e7f0      	b.n	800cf7a <pvPortMalloc+0xee>
}
 800cf98:	4620      	mov	r0, r4
 800cf9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf9e:	bf00      	nop
 800cfa0:	20004570 	.word	0x20004570
 800cfa4:	20014574 	.word	0x20014574
 800cfa8:	20004574 	.word	0x20004574
 800cfac:	20014588 	.word	0x20014588
 800cfb0:	2001457c 	.word	0x2001457c
 800cfb4:	20014578 	.word	0x20014578
 800cfb8:	20014580 	.word	0x20014580

0800cfbc <vPortFree>:
{
 800cfbc:	b510      	push	{r4, lr}
	if( pv != NULL )
 800cfbe:	4604      	mov	r4, r0
 800cfc0:	b390      	cbz	r0, 800d028 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cfc2:	4a1a      	ldr	r2, [pc, #104]	; (800d02c <vPortFree+0x70>)
 800cfc4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cfc8:	6812      	ldr	r2, [r2, #0]
 800cfca:	4213      	tst	r3, r2
 800cfcc:	d108      	bne.n	800cfe0 <vPortFree+0x24>
 800cfce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfd2:	f383 8811 	msr	BASEPRI, r3
 800cfd6:	f3bf 8f6f 	isb	sy
 800cfda:	f3bf 8f4f 	dsb	sy
 800cfde:	e7fe      	b.n	800cfde <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cfe0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cfe4:	b141      	cbz	r1, 800cff8 <vPortFree+0x3c>
 800cfe6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfea:	f383 8811 	msr	BASEPRI, r3
 800cfee:	f3bf 8f6f 	isb	sy
 800cff2:	f3bf 8f4f 	dsb	sy
 800cff6:	e7fe      	b.n	800cff6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cff8:	ea23 0302 	bic.w	r3, r3, r2
 800cffc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d000:	f001 f938 	bl	800e274 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d004:	4a0a      	ldr	r2, [pc, #40]	; (800d030 <vPortFree+0x74>)
 800d006:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d00a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d00c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d010:	440b      	add	r3, r1
 800d012:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d014:	f7ff ff16 	bl	800ce44 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d018:	4a06      	ldr	r2, [pc, #24]	; (800d034 <vPortFree+0x78>)
 800d01a:	6813      	ldr	r3, [r2, #0]
}
 800d01c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d020:	3301      	adds	r3, #1
 800d022:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d024:	f001 b9d2 	b.w	800e3cc <xTaskResumeAll>
}
 800d028:	bd10      	pop	{r4, pc}
 800d02a:	bf00      	nop
 800d02c:	20014574 	.word	0x20014574
 800d030:	20014578 	.word	0x20014578
 800d034:	20014584 	.word	0x20014584

0800d038 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d038:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d03c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d040:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d044:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d046:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d048:	2300      	movs	r3, #0
 800d04a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d04c:	4770      	bx	lr

0800d04e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d04e:	2300      	movs	r3, #0
 800d050:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d052:	4770      	bx	lr

0800d054 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d054:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d056:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d058:	689a      	ldr	r2, [r3, #8]
 800d05a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d05c:	689a      	ldr	r2, [r3, #8]
 800d05e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d060:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d062:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d064:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d066:	3301      	adds	r3, #1
 800d068:	6003      	str	r3, [r0, #0]
}
 800d06a:	4770      	bx	lr

0800d06c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d06c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d06e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d070:	1c63      	adds	r3, r4, #1
 800d072:	d10a      	bne.n	800d08a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d074:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d076:	685a      	ldr	r2, [r3, #4]
 800d078:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d07a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d07c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d07e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d080:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d082:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d084:	3301      	adds	r3, #1
 800d086:	6003      	str	r3, [r0, #0]
}
 800d088:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d08a:	f100 0208 	add.w	r2, r0, #8
 800d08e:	4613      	mov	r3, r2
 800d090:	6852      	ldr	r2, [r2, #4]
 800d092:	6815      	ldr	r5, [r2, #0]
 800d094:	42a5      	cmp	r5, r4
 800d096:	d9fa      	bls.n	800d08e <vListInsert+0x22>
 800d098:	e7ed      	b.n	800d076 <vListInsert+0xa>

0800d09a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d09a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d09e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d0a0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d0a2:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d0a4:	6859      	ldr	r1, [r3, #4]
 800d0a6:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d0a8:	bf08      	it	eq
 800d0aa:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d0ac:	2200      	movs	r2, #0
 800d0ae:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d0b0:	681a      	ldr	r2, [r3, #0]
 800d0b2:	3a01      	subs	r2, #1
 800d0b4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d0b6:	6818      	ldr	r0, [r3, #0]
}
 800d0b8:	4770      	bx	lr
	...

0800d0bc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d0bc:	4808      	ldr	r0, [pc, #32]	; (800d0e0 <prvPortStartFirstTask+0x24>)
 800d0be:	6800      	ldr	r0, [r0, #0]
 800d0c0:	6800      	ldr	r0, [r0, #0]
 800d0c2:	f380 8808 	msr	MSP, r0
 800d0c6:	f04f 0000 	mov.w	r0, #0
 800d0ca:	f380 8814 	msr	CONTROL, r0
 800d0ce:	b662      	cpsie	i
 800d0d0:	b661      	cpsie	f
 800d0d2:	f3bf 8f4f 	dsb	sy
 800d0d6:	f3bf 8f6f 	isb	sy
 800d0da:	df00      	svc	0
 800d0dc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d0de:	0000      	.short	0x0000
 800d0e0:	e000ed08 	.word	0xe000ed08

0800d0e4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d0e4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d0f4 <vPortEnableVFP+0x10>
 800d0e8:	6801      	ldr	r1, [r0, #0]
 800d0ea:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d0ee:	6001      	str	r1, [r0, #0]
 800d0f0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d0f2:	0000      	.short	0x0000
 800d0f4:	e000ed88 	.word	0xe000ed88

0800d0f8 <prvTaskExitError>:
{
 800d0f8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d0fa:	2300      	movs	r3, #0
 800d0fc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d0fe:	4b0d      	ldr	r3, [pc, #52]	; (800d134 <prvTaskExitError+0x3c>)
 800d100:	681b      	ldr	r3, [r3, #0]
 800d102:	3301      	adds	r3, #1
 800d104:	d008      	beq.n	800d118 <prvTaskExitError+0x20>
 800d106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d10a:	f383 8811 	msr	BASEPRI, r3
 800d10e:	f3bf 8f6f 	isb	sy
 800d112:	f3bf 8f4f 	dsb	sy
 800d116:	e7fe      	b.n	800d116 <prvTaskExitError+0x1e>
 800d118:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d11c:	f383 8811 	msr	BASEPRI, r3
 800d120:	f3bf 8f6f 	isb	sy
 800d124:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d128:	9b01      	ldr	r3, [sp, #4]
 800d12a:	2b00      	cmp	r3, #0
 800d12c:	d0fc      	beq.n	800d128 <prvTaskExitError+0x30>
}
 800d12e:	b002      	add	sp, #8
 800d130:	4770      	bx	lr
 800d132:	bf00      	nop
 800d134:	200000a4 	.word	0x200000a4

0800d138 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d138:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800d13c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d140:	4b07      	ldr	r3, [pc, #28]	; (800d160 <pxPortInitialiseStack+0x28>)
 800d142:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d146:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d14a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d14e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d152:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d156:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d15a:	3844      	subs	r0, #68	; 0x44
 800d15c:	4770      	bx	lr
 800d15e:	bf00      	nop
 800d160:	0800d0f9 	.word	0x0800d0f9
	...

0800d170 <SVC_Handler>:
	__asm volatile (
 800d170:	4b07      	ldr	r3, [pc, #28]	; (800d190 <pxCurrentTCBConst2>)
 800d172:	6819      	ldr	r1, [r3, #0]
 800d174:	6808      	ldr	r0, [r1, #0]
 800d176:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d17a:	f380 8809 	msr	PSP, r0
 800d17e:	f3bf 8f6f 	isb	sy
 800d182:	f04f 0000 	mov.w	r0, #0
 800d186:	f380 8811 	msr	BASEPRI, r0
 800d18a:	4770      	bx	lr
 800d18c:	f3af 8000 	nop.w

0800d190 <pxCurrentTCBConst2>:
 800d190:	200145d8 	.word	0x200145d8

0800d194 <vPortEnterCritical>:
 800d194:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d198:	f383 8811 	msr	BASEPRI, r3
 800d19c:	f3bf 8f6f 	isb	sy
 800d1a0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d1a4:	4a0a      	ldr	r2, [pc, #40]	; (800d1d0 <vPortEnterCritical+0x3c>)
 800d1a6:	6813      	ldr	r3, [r2, #0]
 800d1a8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d1aa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d1ac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d1ae:	d10e      	bne.n	800d1ce <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d1b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d1b4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d1b8:	b2db      	uxtb	r3, r3
 800d1ba:	b143      	cbz	r3, 800d1ce <vPortEnterCritical+0x3a>
 800d1bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1c0:	f383 8811 	msr	BASEPRI, r3
 800d1c4:	f3bf 8f6f 	isb	sy
 800d1c8:	f3bf 8f4f 	dsb	sy
 800d1cc:	e7fe      	b.n	800d1cc <vPortEnterCritical+0x38>
}
 800d1ce:	4770      	bx	lr
 800d1d0:	200000a4 	.word	0x200000a4

0800d1d4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d1d4:	4a08      	ldr	r2, [pc, #32]	; (800d1f8 <vPortExitCritical+0x24>)
 800d1d6:	6813      	ldr	r3, [r2, #0]
 800d1d8:	b943      	cbnz	r3, 800d1ec <vPortExitCritical+0x18>
 800d1da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1de:	f383 8811 	msr	BASEPRI, r3
 800d1e2:	f3bf 8f6f 	isb	sy
 800d1e6:	f3bf 8f4f 	dsb	sy
 800d1ea:	e7fe      	b.n	800d1ea <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d1ec:	3b01      	subs	r3, #1
 800d1ee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d1f0:	b90b      	cbnz	r3, 800d1f6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d1f2:	f383 8811 	msr	BASEPRI, r3
}
 800d1f6:	4770      	bx	lr
 800d1f8:	200000a4 	.word	0x200000a4
 800d1fc:	00000000 	.word	0x00000000

0800d200 <PendSV_Handler>:
	__asm volatile
 800d200:	f3ef 8009 	mrs	r0, PSP
 800d204:	f3bf 8f6f 	isb	sy
 800d208:	4b15      	ldr	r3, [pc, #84]	; (800d260 <pxCurrentTCBConst>)
 800d20a:	681a      	ldr	r2, [r3, #0]
 800d20c:	f01e 0f10 	tst.w	lr, #16
 800d210:	bf08      	it	eq
 800d212:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d216:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d21a:	6010      	str	r0, [r2, #0]
 800d21c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d220:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d224:	f380 8811 	msr	BASEPRI, r0
 800d228:	f3bf 8f4f 	dsb	sy
 800d22c:	f3bf 8f6f 	isb	sy
 800d230:	f001 f964 	bl	800e4fc <vTaskSwitchContext>
 800d234:	f04f 0000 	mov.w	r0, #0
 800d238:	f380 8811 	msr	BASEPRI, r0
 800d23c:	bc09      	pop	{r0, r3}
 800d23e:	6819      	ldr	r1, [r3, #0]
 800d240:	6808      	ldr	r0, [r1, #0]
 800d242:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d246:	f01e 0f10 	tst.w	lr, #16
 800d24a:	bf08      	it	eq
 800d24c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d250:	f380 8809 	msr	PSP, r0
 800d254:	f3bf 8f6f 	isb	sy
 800d258:	4770      	bx	lr
 800d25a:	bf00      	nop
 800d25c:	f3af 8000 	nop.w

0800d260 <pxCurrentTCBConst>:
 800d260:	200145d8 	.word	0x200145d8

0800d264 <xPortSysTickHandler>:
{
 800d264:	b508      	push	{r3, lr}
	__asm volatile
 800d266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d26a:	f383 8811 	msr	BASEPRI, r3
 800d26e:	f3bf 8f6f 	isb	sy
 800d272:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d276:	f001 f813 	bl	800e2a0 <xTaskIncrementTick>
 800d27a:	b128      	cbz	r0, 800d288 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d27c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d280:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d284:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d288:	2300      	movs	r3, #0
 800d28a:	f383 8811 	msr	BASEPRI, r3
}
 800d28e:	bd08      	pop	{r3, pc}

0800d290 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d290:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d294:	2300      	movs	r3, #0
 800d296:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d298:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d29a:	4b05      	ldr	r3, [pc, #20]	; (800d2b0 <vPortSetupTimerInterrupt+0x20>)
 800d29c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d2a0:	681b      	ldr	r3, [r3, #0]
 800d2a2:	fbb3 f3f1 	udiv	r3, r3, r1
 800d2a6:	3b01      	subs	r3, #1
 800d2a8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d2aa:	2307      	movs	r3, #7
 800d2ac:	6113      	str	r3, [r2, #16]
}
 800d2ae:	4770      	bx	lr
 800d2b0:	20000098 	.word	0x20000098

0800d2b4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d2b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800d2b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d2ba:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d2be:	4a3a      	ldr	r2, [pc, #232]	; (800d3a8 <xPortStartScheduler+0xf4>)
 800d2c0:	4291      	cmp	r1, r2
 800d2c2:	d108      	bne.n	800d2d6 <xPortStartScheduler+0x22>
	__asm volatile
 800d2c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2c8:	f383 8811 	msr	BASEPRI, r3
 800d2cc:	f3bf 8f6f 	isb	sy
 800d2d0:	f3bf 8f4f 	dsb	sy
 800d2d4:	e7fe      	b.n	800d2d4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d2d6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d2da:	4b34      	ldr	r3, [pc, #208]	; (800d3ac <xPortStartScheduler+0xf8>)
 800d2dc:	429a      	cmp	r2, r3
 800d2de:	d108      	bne.n	800d2f2 <xPortStartScheduler+0x3e>
 800d2e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2e4:	f383 8811 	msr	BASEPRI, r3
 800d2e8:	f3bf 8f6f 	isb	sy
 800d2ec:	f3bf 8f4f 	dsb	sy
 800d2f0:	e7fe      	b.n	800d2f0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d2f2:	4b2f      	ldr	r3, [pc, #188]	; (800d3b0 <xPortStartScheduler+0xfc>)
 800d2f4:	781a      	ldrb	r2, [r3, #0]
 800d2f6:	b2d2      	uxtb	r2, r2
 800d2f8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d2fa:	22ff      	movs	r2, #255	; 0xff
 800d2fc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d2fe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d300:	4a2c      	ldr	r2, [pc, #176]	; (800d3b4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d302:	b2db      	uxtb	r3, r3
 800d304:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d308:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d30c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800d310:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d312:	4a29      	ldr	r2, [pc, #164]	; (800d3b8 <xPortStartScheduler+0x104>)
 800d314:	2307      	movs	r3, #7
 800d316:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d318:	2100      	movs	r1, #0
 800d31a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800d31e:	0600      	lsls	r0, r0, #24
 800d320:	f103 34ff 	add.w	r4, r3, #4294967295
 800d324:	d40c      	bmi.n	800d340 <xPortStartScheduler+0x8c>
 800d326:	b111      	cbz	r1, 800d32e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d328:	2b03      	cmp	r3, #3
 800d32a:	6013      	str	r3, [r2, #0]
 800d32c:	d011      	beq.n	800d352 <xPortStartScheduler+0x9e>
 800d32e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d332:	f383 8811 	msr	BASEPRI, r3
 800d336:	f3bf 8f6f 	isb	sy
 800d33a:	f3bf 8f4f 	dsb	sy
 800d33e:	e7fe      	b.n	800d33e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d340:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d344:	005b      	lsls	r3, r3, #1
 800d346:	b2db      	uxtb	r3, r3
 800d348:	f88d 3003 	strb.w	r3, [sp, #3]
 800d34c:	2101      	movs	r1, #1
 800d34e:	4623      	mov	r3, r4
 800d350:	e7e3      	b.n	800d31a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d352:	f44f 7340 	mov.w	r3, #768	; 0x300
 800d356:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d358:	9b01      	ldr	r3, [sp, #4]
 800d35a:	4a15      	ldr	r2, [pc, #84]	; (800d3b0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d35c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d360:	b2db      	uxtb	r3, r3
 800d362:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d364:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d368:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d36c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d370:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d374:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d378:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800d37c:	f7ff ff88 	bl	800d290 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d380:	4b0e      	ldr	r3, [pc, #56]	; (800d3bc <xPortStartScheduler+0x108>)
 800d382:	2500      	movs	r5, #0
 800d384:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800d386:	f7ff fead 	bl	800d0e4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d38a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800d38e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d392:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d396:	f7ff fe91 	bl	800d0bc <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d39a:	f001 f8af 	bl	800e4fc <vTaskSwitchContext>
	prvTaskExitError();
 800d39e:	f7ff feab 	bl	800d0f8 <prvTaskExitError>
}
 800d3a2:	4628      	mov	r0, r5
 800d3a4:	b003      	add	sp, #12
 800d3a6:	bd30      	pop	{r4, r5, pc}
 800d3a8:	410fc271 	.word	0x410fc271
 800d3ac:	410fc270 	.word	0x410fc270
 800d3b0:	e000e400 	.word	0xe000e400
 800d3b4:	20014590 	.word	0x20014590
 800d3b8:	20014594 	.word	0x20014594
 800d3bc:	200000a4 	.word	0x200000a4

0800d3c0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d3c0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d3c4:	2b0f      	cmp	r3, #15
 800d3c6:	d90e      	bls.n	800d3e6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d3c8:	4a11      	ldr	r2, [pc, #68]	; (800d410 <vPortValidateInterruptPriority+0x50>)
 800d3ca:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d3cc:	4a11      	ldr	r2, [pc, #68]	; (800d414 <vPortValidateInterruptPriority+0x54>)
 800d3ce:	7812      	ldrb	r2, [r2, #0]
 800d3d0:	429a      	cmp	r2, r3
 800d3d2:	d908      	bls.n	800d3e6 <vPortValidateInterruptPriority+0x26>
 800d3d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3d8:	f383 8811 	msr	BASEPRI, r3
 800d3dc:	f3bf 8f6f 	isb	sy
 800d3e0:	f3bf 8f4f 	dsb	sy
 800d3e4:	e7fe      	b.n	800d3e4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d3e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d3ea:	4a0b      	ldr	r2, [pc, #44]	; (800d418 <vPortValidateInterruptPriority+0x58>)
 800d3ec:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d3f0:	6812      	ldr	r2, [r2, #0]
 800d3f2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d3f6:	4293      	cmp	r3, r2
 800d3f8:	d908      	bls.n	800d40c <vPortValidateInterruptPriority+0x4c>
 800d3fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3fe:	f383 8811 	msr	BASEPRI, r3
 800d402:	f3bf 8f6f 	isb	sy
 800d406:	f3bf 8f4f 	dsb	sy
 800d40a:	e7fe      	b.n	800d40a <vPortValidateInterruptPriority+0x4a>
	}
 800d40c:	4770      	bx	lr
 800d40e:	bf00      	nop
 800d410:	e000e3f0 	.word	0xe000e3f0
 800d414:	20014590 	.word	0x20014590
 800d418:	20014594 	.word	0x20014594

0800d41c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800d41c:	b510      	push	{r4, lr}
 800d41e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d420:	f7ff feb8 	bl	800d194 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d424:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d426:	f7ff fed5 	bl	800d1d4 <vPortExitCritical>

	return xReturn;
}
 800d42a:	fab4 f084 	clz	r0, r4
 800d42e:	0940      	lsrs	r0, r0, #5
 800d430:	bd10      	pop	{r4, pc}

0800d432 <prvCopyDataToQueue>:
{
 800d432:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d434:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d436:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d438:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800d43a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d43c:	b952      	cbnz	r2, 800d454 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d43e:	6807      	ldr	r7, [r0, #0]
 800d440:	bb47      	cbnz	r7, 800d494 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d442:	6880      	ldr	r0, [r0, #8]
 800d444:	f001 f9c2 	bl	800e7cc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d448:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d44a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d44c:	3601      	adds	r6, #1
 800d44e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d450:	4628      	mov	r0, r5
 800d452:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d454:	b965      	cbnz	r5, 800d470 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d456:	6840      	ldr	r0, [r0, #4]
 800d458:	f01a f9a2 	bl	80277a0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d45c:	6863      	ldr	r3, [r4, #4]
 800d45e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d460:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d462:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d464:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d466:	4293      	cmp	r3, r2
 800d468:	d3f0      	bcc.n	800d44c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d46a:	6823      	ldr	r3, [r4, #0]
 800d46c:	6063      	str	r3, [r4, #4]
 800d46e:	e7ed      	b.n	800d44c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d470:	68c0      	ldr	r0, [r0, #12]
 800d472:	f01a f995 	bl	80277a0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d476:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d478:	68e3      	ldr	r3, [r4, #12]
 800d47a:	4251      	negs	r1, r2
 800d47c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d47e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d480:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d482:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d484:	bf3e      	ittt	cc
 800d486:	68a3      	ldrcc	r3, [r4, #8]
 800d488:	185b      	addcc	r3, r3, r1
 800d48a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d48c:	2d02      	cmp	r5, #2
 800d48e:	d101      	bne.n	800d494 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d490:	b116      	cbz	r6, 800d498 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800d492:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800d494:	2500      	movs	r5, #0
 800d496:	e7d9      	b.n	800d44c <prvCopyDataToQueue+0x1a>
 800d498:	4635      	mov	r5, r6
 800d49a:	e7d7      	b.n	800d44c <prvCopyDataToQueue+0x1a>

0800d49c <prvCopyDataFromQueue>:
{
 800d49c:	4603      	mov	r3, r0
 800d49e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d4a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800d4a2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d4a4:	b16a      	cbz	r2, 800d4c2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4a6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d4a8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4aa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d4ac:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d4ae:	bf28      	it	cs
 800d4b0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d4b2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d4b4:	bf28      	it	cs
 800d4b6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d4b8:	68d9      	ldr	r1, [r3, #12]
}
 800d4ba:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d4be:	f01a b96f 	b.w	80277a0 <memcpy>
}
 800d4c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4c6:	4770      	bx	lr

0800d4c8 <prvUnlockQueue>:
{
 800d4c8:	b570      	push	{r4, r5, r6, lr}
 800d4ca:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800d4cc:	f7ff fe62 	bl	800d194 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d4d0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d4d4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800d4d8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d4da:	2d00      	cmp	r5, #0
 800d4dc:	dc14      	bgt.n	800d508 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800d4de:	23ff      	movs	r3, #255	; 0xff
 800d4e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d4e4:	f7ff fe76 	bl	800d1d4 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d4e8:	f7ff fe54 	bl	800d194 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d4ec:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d4f0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800d4f4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d4f6:	2d00      	cmp	r5, #0
 800d4f8:	dc12      	bgt.n	800d520 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800d4fa:	23ff      	movs	r3, #255	; 0xff
 800d4fc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800d500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d504:	f7ff be66 	b.w	800d1d4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d508:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d50a:	2b00      	cmp	r3, #0
 800d50c:	d0e7      	beq.n	800d4de <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d50e:	4630      	mov	r0, r6
 800d510:	f001 f878 	bl	800e604 <xTaskRemoveFromEventList>
 800d514:	b108      	cbz	r0, 800d51a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800d516:	f001 f901 	bl	800e71c <vTaskMissedYield>
			--cTxLock;
 800d51a:	3d01      	subs	r5, #1
 800d51c:	b26d      	sxtb	r5, r5
 800d51e:	e7dc      	b.n	800d4da <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d520:	6923      	ldr	r3, [r4, #16]
 800d522:	2b00      	cmp	r3, #0
 800d524:	d0e9      	beq.n	800d4fa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d526:	4630      	mov	r0, r6
 800d528:	f001 f86c 	bl	800e604 <xTaskRemoveFromEventList>
 800d52c:	b108      	cbz	r0, 800d532 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800d52e:	f001 f8f5 	bl	800e71c <vTaskMissedYield>
				--cRxLock;
 800d532:	3d01      	subs	r5, #1
 800d534:	b26d      	sxtb	r5, r5
 800d536:	e7de      	b.n	800d4f6 <prvUnlockQueue+0x2e>

0800d538 <xQueueGenericReset>:
{
 800d538:	b538      	push	{r3, r4, r5, lr}
 800d53a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d53c:	4604      	mov	r4, r0
 800d53e:	b940      	cbnz	r0, 800d552 <xQueueGenericReset+0x1a>
 800d540:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d544:	f383 8811 	msr	BASEPRI, r3
 800d548:	f3bf 8f6f 	isb	sy
 800d54c:	f3bf 8f4f 	dsb	sy
 800d550:	e7fe      	b.n	800d550 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800d552:	f7ff fe1f 	bl	800d194 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d556:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800d55a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d55c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d55e:	434b      	muls	r3, r1
 800d560:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d562:	1a5b      	subs	r3, r3, r1
 800d564:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d566:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d568:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d56a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800d56c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d56e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d570:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800d574:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800d578:	b9a5      	cbnz	r5, 800d5a4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d57a:	6923      	ldr	r3, [r4, #16]
 800d57c:	b173      	cbz	r3, 800d59c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d57e:	f104 0010 	add.w	r0, r4, #16
 800d582:	f001 f83f 	bl	800e604 <xTaskRemoveFromEventList>
 800d586:	b148      	cbz	r0, 800d59c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800d588:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d58c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d590:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d594:	f3bf 8f4f 	dsb	sy
 800d598:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800d59c:	f7ff fe1a 	bl	800d1d4 <vPortExitCritical>
}
 800d5a0:	2001      	movs	r0, #1
 800d5a2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d5a4:	f104 0010 	add.w	r0, r4, #16
 800d5a8:	f7ff fd46 	bl	800d038 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d5ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d5b0:	f7ff fd42 	bl	800d038 <vListInitialise>
 800d5b4:	e7f2      	b.n	800d59c <xQueueGenericReset+0x64>

0800d5b6 <xQueueGenericCreateStatic>:
	{
 800d5b6:	b513      	push	{r0, r1, r4, lr}
 800d5b8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d5ba:	b940      	cbnz	r0, 800d5ce <xQueueGenericCreateStatic+0x18>
 800d5bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5c0:	f383 8811 	msr	BASEPRI, r3
 800d5c4:	f3bf 8f6f 	isb	sy
 800d5c8:	f3bf 8f4f 	dsb	sy
 800d5cc:	e7fe      	b.n	800d5cc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800d5ce:	b943      	cbnz	r3, 800d5e2 <xQueueGenericCreateStatic+0x2c>
 800d5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5d4:	f383 8811 	msr	BASEPRI, r3
 800d5d8:	f3bf 8f6f 	isb	sy
 800d5dc:	f3bf 8f4f 	dsb	sy
 800d5e0:	e7fe      	b.n	800d5e0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d5e2:	b14a      	cbz	r2, 800d5f8 <xQueueGenericCreateStatic+0x42>
 800d5e4:	b991      	cbnz	r1, 800d60c <xQueueGenericCreateStatic+0x56>
 800d5e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5ea:	f383 8811 	msr	BASEPRI, r3
 800d5ee:	f3bf 8f6f 	isb	sy
 800d5f2:	f3bf 8f4f 	dsb	sy
 800d5f6:	e7fe      	b.n	800d5f6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d5f8:	b141      	cbz	r1, 800d60c <xQueueGenericCreateStatic+0x56>
 800d5fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5fe:	f383 8811 	msr	BASEPRI, r3
 800d602:	f3bf 8f6f 	isb	sy
 800d606:	f3bf 8f4f 	dsb	sy
 800d60a:	e7fe      	b.n	800d60a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d60c:	2350      	movs	r3, #80	; 0x50
 800d60e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d610:	9b01      	ldr	r3, [sp, #4]
 800d612:	2b50      	cmp	r3, #80	; 0x50
 800d614:	d008      	beq.n	800d628 <xQueueGenericCreateStatic+0x72>
 800d616:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d61a:	f383 8811 	msr	BASEPRI, r3
 800d61e:	f3bf 8f6f 	isb	sy
 800d622:	f3bf 8f4f 	dsb	sy
 800d626:	e7fe      	b.n	800d626 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d628:	2900      	cmp	r1, #0
 800d62a:	bf08      	it	eq
 800d62c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d62e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d630:	6022      	str	r2, [r4, #0]
 800d632:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d634:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d638:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800d63c:	4619      	mov	r1, r3
 800d63e:	4620      	mov	r0, r4
 800d640:	f7ff ff7a 	bl	800d538 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800d644:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d648:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800d64c:	4620      	mov	r0, r4
 800d64e:	b002      	add	sp, #8
 800d650:	bd10      	pop	{r4, pc}

0800d652 <xQueueGenericCreate>:
	{
 800d652:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d654:	460d      	mov	r5, r1
 800d656:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d658:	4606      	mov	r6, r0
 800d65a:	b940      	cbnz	r0, 800d66e <xQueueGenericCreate+0x1c>
 800d65c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d660:	f383 8811 	msr	BASEPRI, r3
 800d664:	f3bf 8f6f 	isb	sy
 800d668:	f3bf 8f4f 	dsb	sy
 800d66c:	e7fe      	b.n	800d66c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d66e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d670:	3050      	adds	r0, #80	; 0x50
 800d672:	f7ff fc0b 	bl	800ce8c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d676:	4604      	mov	r4, r0
 800d678:	b170      	cbz	r0, 800d698 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d67a:	2300      	movs	r3, #0
 800d67c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d680:	b165      	cbz	r5, 800d69c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d682:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800d686:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800d68a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800d68c:	2101      	movs	r1, #1
 800d68e:	4620      	mov	r0, r4
 800d690:	f7ff ff52 	bl	800d538 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800d694:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d698:	4620      	mov	r0, r4
 800d69a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d69c:	4603      	mov	r3, r0
 800d69e:	e7f2      	b.n	800d686 <xQueueGenericCreate+0x34>

0800d6a0 <xQueueCreateCountingSemaphoreStatic>:
	{
 800d6a0:	b513      	push	{r0, r1, r4, lr}
 800d6a2:	4613      	mov	r3, r2
 800d6a4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800d6a6:	b940      	cbnz	r0, 800d6ba <xQueueCreateCountingSemaphoreStatic+0x1a>
 800d6a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ac:	f383 8811 	msr	BASEPRI, r3
 800d6b0:	f3bf 8f6f 	isb	sy
 800d6b4:	f3bf 8f4f 	dsb	sy
 800d6b8:	e7fe      	b.n	800d6b8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d6ba:	4288      	cmp	r0, r1
 800d6bc:	d208      	bcs.n	800d6d0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800d6be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6c2:	f383 8811 	msr	BASEPRI, r3
 800d6c6:	f3bf 8f6f 	isb	sy
 800d6ca:	f3bf 8f4f 	dsb	sy
 800d6ce:	e7fe      	b.n	800d6ce <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800d6d0:	2202      	movs	r2, #2
 800d6d2:	9200      	str	r2, [sp, #0]
 800d6d4:	2200      	movs	r2, #0
 800d6d6:	4611      	mov	r1, r2
 800d6d8:	f7ff ff6d 	bl	800d5b6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800d6dc:	b100      	cbz	r0, 800d6e0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d6de:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800d6e0:	b002      	add	sp, #8
 800d6e2:	bd10      	pop	{r4, pc}

0800d6e4 <xQueueCreateCountingSemaphore>:
	{
 800d6e4:	b510      	push	{r4, lr}
 800d6e6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800d6e8:	b940      	cbnz	r0, 800d6fc <xQueueCreateCountingSemaphore+0x18>
 800d6ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ee:	f383 8811 	msr	BASEPRI, r3
 800d6f2:	f3bf 8f6f 	isb	sy
 800d6f6:	f3bf 8f4f 	dsb	sy
 800d6fa:	e7fe      	b.n	800d6fa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d6fc:	4288      	cmp	r0, r1
 800d6fe:	d208      	bcs.n	800d712 <xQueueCreateCountingSemaphore+0x2e>
 800d700:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d704:	f383 8811 	msr	BASEPRI, r3
 800d708:	f3bf 8f6f 	isb	sy
 800d70c:	f3bf 8f4f 	dsb	sy
 800d710:	e7fe      	b.n	800d710 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800d712:	2202      	movs	r2, #2
 800d714:	2100      	movs	r1, #0
 800d716:	f7ff ff9c 	bl	800d652 <xQueueGenericCreate>
		if( xHandle != NULL )
 800d71a:	b100      	cbz	r0, 800d71e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d71c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800d71e:	bd10      	pop	{r4, pc}

0800d720 <xQueueGenericSend>:
{
 800d720:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d724:	b085      	sub	sp, #20
 800d726:	4688      	mov	r8, r1
 800d728:	9201      	str	r2, [sp, #4]
 800d72a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800d72c:	4604      	mov	r4, r0
 800d72e:	b940      	cbnz	r0, 800d742 <xQueueGenericSend+0x22>
 800d730:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d734:	f383 8811 	msr	BASEPRI, r3
 800d738:	f3bf 8f6f 	isb	sy
 800d73c:	f3bf 8f4f 	dsb	sy
 800d740:	e7fe      	b.n	800d740 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d742:	b951      	cbnz	r1, 800d75a <xQueueGenericSend+0x3a>
 800d744:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d746:	b143      	cbz	r3, 800d75a <xQueueGenericSend+0x3a>
 800d748:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d74c:	f383 8811 	msr	BASEPRI, r3
 800d750:	f3bf 8f6f 	isb	sy
 800d754:	f3bf 8f4f 	dsb	sy
 800d758:	e7fe      	b.n	800d758 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d75a:	2f02      	cmp	r7, #2
 800d75c:	d10b      	bne.n	800d776 <xQueueGenericSend+0x56>
 800d75e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d760:	2b01      	cmp	r3, #1
 800d762:	d008      	beq.n	800d776 <xQueueGenericSend+0x56>
 800d764:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d768:	f383 8811 	msr	BASEPRI, r3
 800d76c:	f3bf 8f6f 	isb	sy
 800d770:	f3bf 8f4f 	dsb	sy
 800d774:	e7fe      	b.n	800d774 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d776:	f000 ffd7 	bl	800e728 <xTaskGetSchedulerState>
 800d77a:	4606      	mov	r6, r0
 800d77c:	b950      	cbnz	r0, 800d794 <xQueueGenericSend+0x74>
 800d77e:	9b01      	ldr	r3, [sp, #4]
 800d780:	b14b      	cbz	r3, 800d796 <xQueueGenericSend+0x76>
 800d782:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d786:	f383 8811 	msr	BASEPRI, r3
 800d78a:	f3bf 8f6f 	isb	sy
 800d78e:	f3bf 8f4f 	dsb	sy
 800d792:	e7fe      	b.n	800d792 <xQueueGenericSend+0x72>
 800d794:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800d796:	f04f 0900 	mov.w	r9, #0
 800d79a:	e037      	b.n	800d80c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d79c:	9d01      	ldr	r5, [sp, #4]
 800d79e:	b91d      	cbnz	r5, 800d7a8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800d7a0:	f7ff fd18 	bl	800d1d4 <vPortExitCritical>
			return errQUEUE_FULL;
 800d7a4:	2000      	movs	r0, #0
 800d7a6:	e052      	b.n	800d84e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800d7a8:	b916      	cbnz	r6, 800d7b0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d7aa:	a802      	add	r0, sp, #8
 800d7ac:	f000 ff6e 	bl	800e68c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800d7b0:	f7ff fd10 	bl	800d1d4 <vPortExitCritical>
		vTaskSuspendAll();
 800d7b4:	f000 fd5e 	bl	800e274 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d7b8:	f7ff fcec 	bl	800d194 <vPortEnterCritical>
 800d7bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d7c0:	2bff      	cmp	r3, #255	; 0xff
 800d7c2:	bf08      	it	eq
 800d7c4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800d7c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d7cc:	2bff      	cmp	r3, #255	; 0xff
 800d7ce:	bf08      	it	eq
 800d7d0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800d7d4:	f7ff fcfe 	bl	800d1d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d7d8:	a901      	add	r1, sp, #4
 800d7da:	a802      	add	r0, sp, #8
 800d7dc:	f000 ff62 	bl	800e6a4 <xTaskCheckForTimeOut>
 800d7e0:	2800      	cmp	r0, #0
 800d7e2:	d14a      	bne.n	800d87a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d7e4:	f7ff fcd6 	bl	800d194 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d7e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d7ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d7ec:	429a      	cmp	r2, r3
 800d7ee:	d131      	bne.n	800d854 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d7f0:	f7ff fcf0 	bl	800d1d4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d7f4:	9901      	ldr	r1, [sp, #4]
 800d7f6:	f104 0010 	add.w	r0, r4, #16
 800d7fa:	f000 fecb 	bl	800e594 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800d7fe:	4620      	mov	r0, r4
 800d800:	f7ff fe62 	bl	800d4c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800d804:	f000 fde2 	bl	800e3cc <xTaskResumeAll>
 800d808:	b360      	cbz	r0, 800d864 <xQueueGenericSend+0x144>
 800d80a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800d80c:	f7ff fcc2 	bl	800d194 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d810:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d812:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d814:	429a      	cmp	r2, r3
 800d816:	d301      	bcc.n	800d81c <xQueueGenericSend+0xfc>
 800d818:	2f02      	cmp	r7, #2
 800d81a:	d1bf      	bne.n	800d79c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d81c:	463a      	mov	r2, r7
 800d81e:	4641      	mov	r1, r8
 800d820:	4620      	mov	r0, r4
 800d822:	f7ff fe06 	bl	800d432 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d826:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d828:	b11b      	cbz	r3, 800d832 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d82a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d82e:	f000 fee9 	bl	800e604 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800d832:	b148      	cbz	r0, 800d848 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800d834:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d838:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d83c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d840:	f3bf 8f4f 	dsb	sy
 800d844:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d848:	f7ff fcc4 	bl	800d1d4 <vPortExitCritical>
				return pdPASS;
 800d84c:	2001      	movs	r0, #1
}
 800d84e:	b005      	add	sp, #20
 800d850:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800d854:	f7ff fcbe 	bl	800d1d4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800d858:	4620      	mov	r0, r4
 800d85a:	f7ff fe35 	bl	800d4c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800d85e:	f000 fdb5 	bl	800e3cc <xTaskResumeAll>
 800d862:	e7d2      	b.n	800d80a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800d864:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d868:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d86c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d870:	f3bf 8f4f 	dsb	sy
 800d874:	f3bf 8f6f 	isb	sy
 800d878:	e7c7      	b.n	800d80a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800d87a:	4620      	mov	r0, r4
 800d87c:	f7ff fe24 	bl	800d4c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800d880:	f000 fda4 	bl	800e3cc <xTaskResumeAll>
 800d884:	e78e      	b.n	800d7a4 <xQueueGenericSend+0x84>

0800d886 <xQueueGenericSendFromISR>:
{
 800d886:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d88a:	4689      	mov	r9, r1
 800d88c:	4690      	mov	r8, r2
 800d88e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800d890:	4604      	mov	r4, r0
 800d892:	b940      	cbnz	r0, 800d8a6 <xQueueGenericSendFromISR+0x20>
 800d894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d898:	f383 8811 	msr	BASEPRI, r3
 800d89c:	f3bf 8f6f 	isb	sy
 800d8a0:	f3bf 8f4f 	dsb	sy
 800d8a4:	e7fe      	b.n	800d8a4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8a6:	b951      	cbnz	r1, 800d8be <xQueueGenericSendFromISR+0x38>
 800d8a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d8aa:	b143      	cbz	r3, 800d8be <xQueueGenericSendFromISR+0x38>
 800d8ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8b0:	f383 8811 	msr	BASEPRI, r3
 800d8b4:	f3bf 8f6f 	isb	sy
 800d8b8:	f3bf 8f4f 	dsb	sy
 800d8bc:	e7fe      	b.n	800d8bc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d8be:	2f02      	cmp	r7, #2
 800d8c0:	d10b      	bne.n	800d8da <xQueueGenericSendFromISR+0x54>
 800d8c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d8c4:	2b01      	cmp	r3, #1
 800d8c6:	d008      	beq.n	800d8da <xQueueGenericSendFromISR+0x54>
 800d8c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8cc:	f383 8811 	msr	BASEPRI, r3
 800d8d0:	f3bf 8f6f 	isb	sy
 800d8d4:	f3bf 8f4f 	dsb	sy
 800d8d8:	e7fe      	b.n	800d8d8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d8da:	f7ff fd71 	bl	800d3c0 <vPortValidateInterruptPriority>
	__asm volatile
 800d8de:	f3ef 8611 	mrs	r6, BASEPRI
 800d8e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e6:	f383 8811 	msr	BASEPRI, r3
 800d8ea:	f3bf 8f6f 	isb	sy
 800d8ee:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d8f2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d8f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d8f6:	429a      	cmp	r2, r3
 800d8f8:	d301      	bcc.n	800d8fe <xQueueGenericSendFromISR+0x78>
 800d8fa:	2f02      	cmp	r7, #2
 800d8fc:	d123      	bne.n	800d946 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d8fe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d902:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d904:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d906:	463a      	mov	r2, r7
 800d908:	4649      	mov	r1, r9
 800d90a:	4620      	mov	r0, r4
 800d90c:	f7ff fd91 	bl	800d432 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d910:	1c6b      	adds	r3, r5, #1
 800d912:	d113      	bne.n	800d93c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d914:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d916:	b90b      	cbnz	r3, 800d91c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800d918:	2001      	movs	r0, #1
 800d91a:	e00b      	b.n	800d934 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d91c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d920:	f000 fe70 	bl	800e604 <xTaskRemoveFromEventList>
 800d924:	2800      	cmp	r0, #0
 800d926:	d0f7      	beq.n	800d918 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d928:	f1b8 0f00 	cmp.w	r8, #0
 800d92c:	d0f4      	beq.n	800d918 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d92e:	2001      	movs	r0, #1
 800d930:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800d934:	f386 8811 	msr	BASEPRI, r6
}
 800d938:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d93c:	3501      	adds	r5, #1
 800d93e:	b26d      	sxtb	r5, r5
 800d940:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800d944:	e7e8      	b.n	800d918 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800d946:	2000      	movs	r0, #0
 800d948:	e7f4      	b.n	800d934 <xQueueGenericSendFromISR+0xae>

0800d94a <xQueueGiveFromISR>:
{
 800d94a:	b570      	push	{r4, r5, r6, lr}
 800d94c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d94e:	4604      	mov	r4, r0
 800d950:	b940      	cbnz	r0, 800d964 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800d952:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d956:	f383 8811 	msr	BASEPRI, r3
 800d95a:	f3bf 8f6f 	isb	sy
 800d95e:	f3bf 8f4f 	dsb	sy
 800d962:	e7fe      	b.n	800d962 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d964:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d966:	b143      	cbz	r3, 800d97a <xQueueGiveFromISR+0x30>
 800d968:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d96c:	f383 8811 	msr	BASEPRI, r3
 800d970:	f3bf 8f6f 	isb	sy
 800d974:	f3bf 8f4f 	dsb	sy
 800d978:	e7fe      	b.n	800d978 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d97a:	6803      	ldr	r3, [r0, #0]
 800d97c:	b953      	cbnz	r3, 800d994 <xQueueGiveFromISR+0x4a>
 800d97e:	6883      	ldr	r3, [r0, #8]
 800d980:	b143      	cbz	r3, 800d994 <xQueueGiveFromISR+0x4a>
 800d982:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d986:	f383 8811 	msr	BASEPRI, r3
 800d98a:	f3bf 8f6f 	isb	sy
 800d98e:	f3bf 8f4f 	dsb	sy
 800d992:	e7fe      	b.n	800d992 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d994:	f7ff fd14 	bl	800d3c0 <vPortValidateInterruptPriority>
	__asm volatile
 800d998:	f3ef 8611 	mrs	r6, BASEPRI
 800d99c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9a0:	f383 8811 	msr	BASEPRI, r3
 800d9a4:	f3bf 8f6f 	isb	sy
 800d9a8:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d9ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800d9ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d9b0:	4293      	cmp	r3, r2
 800d9b2:	d91c      	bls.n	800d9ee <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d9b4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d9b8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800d9ba:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800d9bc:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d9be:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800d9c0:	d110      	bne.n	800d9e4 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d9c4:	b90b      	cbnz	r3, 800d9ca <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800d9c6:	2001      	movs	r0, #1
 800d9c8:	e009      	b.n	800d9de <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d9ce:	f000 fe19 	bl	800e604 <xTaskRemoveFromEventList>
 800d9d2:	2800      	cmp	r0, #0
 800d9d4:	d0f7      	beq.n	800d9c6 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800d9d6:	2d00      	cmp	r5, #0
 800d9d8:	d0f5      	beq.n	800d9c6 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d9da:	2001      	movs	r0, #1
 800d9dc:	6028      	str	r0, [r5, #0]
	__asm volatile
 800d9de:	f386 8811 	msr	BASEPRI, r6
}
 800d9e2:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d9e4:	3301      	adds	r3, #1
 800d9e6:	b25b      	sxtb	r3, r3
 800d9e8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d9ec:	e7eb      	b.n	800d9c6 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800d9ee:	2000      	movs	r0, #0
 800d9f0:	e7f5      	b.n	800d9de <xQueueGiveFromISR+0x94>

0800d9f2 <xQueueReceive>:
{
 800d9f2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d9f6:	460f      	mov	r7, r1
 800d9f8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d9fa:	4604      	mov	r4, r0
 800d9fc:	b940      	cbnz	r0, 800da10 <xQueueReceive+0x1e>
	__asm volatile
 800d9fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da02:	f383 8811 	msr	BASEPRI, r3
 800da06:	f3bf 8f6f 	isb	sy
 800da0a:	f3bf 8f4f 	dsb	sy
 800da0e:	e7fe      	b.n	800da0e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da10:	b951      	cbnz	r1, 800da28 <xQueueReceive+0x36>
 800da12:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da14:	b143      	cbz	r3, 800da28 <xQueueReceive+0x36>
 800da16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da1a:	f383 8811 	msr	BASEPRI, r3
 800da1e:	f3bf 8f6f 	isb	sy
 800da22:	f3bf 8f4f 	dsb	sy
 800da26:	e7fe      	b.n	800da26 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800da28:	f000 fe7e 	bl	800e728 <xTaskGetSchedulerState>
 800da2c:	4606      	mov	r6, r0
 800da2e:	b950      	cbnz	r0, 800da46 <xQueueReceive+0x54>
 800da30:	9b01      	ldr	r3, [sp, #4]
 800da32:	b14b      	cbz	r3, 800da48 <xQueueReceive+0x56>
 800da34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da38:	f383 8811 	msr	BASEPRI, r3
 800da3c:	f3bf 8f6f 	isb	sy
 800da40:	f3bf 8f4f 	dsb	sy
 800da44:	e7fe      	b.n	800da44 <xQueueReceive+0x52>
 800da46:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800da48:	f04f 0800 	mov.w	r8, #0
 800da4c:	e03d      	b.n	800daca <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800da4e:	9d01      	ldr	r5, [sp, #4]
 800da50:	b91d      	cbnz	r5, 800da5a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800da52:	f7ff fbbf 	bl	800d1d4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800da56:	2000      	movs	r0, #0
 800da58:	e056      	b.n	800db08 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800da5a:	b916      	cbnz	r6, 800da62 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800da5c:	a802      	add	r0, sp, #8
 800da5e:	f000 fe15 	bl	800e68c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800da62:	f7ff fbb7 	bl	800d1d4 <vPortExitCritical>
		vTaskSuspendAll();
 800da66:	f000 fc05 	bl	800e274 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800da6a:	f7ff fb93 	bl	800d194 <vPortEnterCritical>
 800da6e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da72:	2bff      	cmp	r3, #255	; 0xff
 800da74:	bf08      	it	eq
 800da76:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800da7a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da7e:	2bff      	cmp	r3, #255	; 0xff
 800da80:	bf08      	it	eq
 800da82:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800da86:	f7ff fba5 	bl	800d1d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800da8a:	a901      	add	r1, sp, #4
 800da8c:	a802      	add	r0, sp, #8
 800da8e:	f000 fe09 	bl	800e6a4 <xTaskCheckForTimeOut>
 800da92:	2800      	cmp	r0, #0
 800da94:	d141      	bne.n	800db1a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800da96:	4620      	mov	r0, r4
 800da98:	f7ff fcc0 	bl	800d41c <prvIsQueueEmpty>
 800da9c:	b3b8      	cbz	r0, 800db0e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800da9e:	9901      	ldr	r1, [sp, #4]
 800daa0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800daa4:	f000 fd76 	bl	800e594 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800daa8:	4620      	mov	r0, r4
 800daaa:	f7ff fd0d 	bl	800d4c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800daae:	f000 fc8d 	bl	800e3cc <xTaskResumeAll>
 800dab2:	b948      	cbnz	r0, 800dac8 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800dab4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dab8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dabc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dac0:	f3bf 8f4f 	dsb	sy
 800dac4:	f3bf 8f6f 	isb	sy
 800dac8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800daca:	f7ff fb63 	bl	800d194 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dace:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dad0:	2d00      	cmp	r5, #0
 800dad2:	d0bc      	beq.n	800da4e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800dad4:	4639      	mov	r1, r7
 800dad6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dad8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800dada:	f7ff fcdf 	bl	800d49c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dade:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dae0:	6923      	ldr	r3, [r4, #16]
 800dae2:	b173      	cbz	r3, 800db02 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dae4:	f104 0010 	add.w	r0, r4, #16
 800dae8:	f000 fd8c 	bl	800e604 <xTaskRemoveFromEventList>
 800daec:	b148      	cbz	r0, 800db02 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800daee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800daf2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800daf6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dafa:	f3bf 8f4f 	dsb	sy
 800dafe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800db02:	f7ff fb67 	bl	800d1d4 <vPortExitCritical>
				return pdPASS;
 800db06:	2001      	movs	r0, #1
}
 800db08:	b004      	add	sp, #16
 800db0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800db0e:	4620      	mov	r0, r4
 800db10:	f7ff fcda 	bl	800d4c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800db14:	f000 fc5a 	bl	800e3cc <xTaskResumeAll>
 800db18:	e7d6      	b.n	800dac8 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800db1a:	4620      	mov	r0, r4
 800db1c:	f7ff fcd4 	bl	800d4c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800db20:	f000 fc54 	bl	800e3cc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800db24:	4620      	mov	r0, r4
 800db26:	f7ff fc79 	bl	800d41c <prvIsQueueEmpty>
 800db2a:	2800      	cmp	r0, #0
 800db2c:	d0cc      	beq.n	800dac8 <xQueueReceive+0xd6>
 800db2e:	e792      	b.n	800da56 <xQueueReceive+0x64>

0800db30 <xQueueSemaphoreTake>:
{
 800db30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db32:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800db34:	4604      	mov	r4, r0
{
 800db36:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800db38:	b940      	cbnz	r0, 800db4c <xQueueSemaphoreTake+0x1c>
 800db3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db3e:	f383 8811 	msr	BASEPRI, r3
 800db42:	f3bf 8f6f 	isb	sy
 800db46:	f3bf 8f4f 	dsb	sy
 800db4a:	e7fe      	b.n	800db4a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800db4c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800db4e:	b145      	cbz	r5, 800db62 <xQueueSemaphoreTake+0x32>
 800db50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db54:	f383 8811 	msr	BASEPRI, r3
 800db58:	f3bf 8f6f 	isb	sy
 800db5c:	f3bf 8f4f 	dsb	sy
 800db60:	e7fe      	b.n	800db60 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800db62:	f000 fde1 	bl	800e728 <xTaskGetSchedulerState>
 800db66:	4606      	mov	r6, r0
 800db68:	b950      	cbnz	r0, 800db80 <xQueueSemaphoreTake+0x50>
 800db6a:	9b01      	ldr	r3, [sp, #4]
 800db6c:	b15b      	cbz	r3, 800db86 <xQueueSemaphoreTake+0x56>
 800db6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db72:	f383 8811 	msr	BASEPRI, r3
 800db76:	f3bf 8f6f 	isb	sy
 800db7a:	f3bf 8f4f 	dsb	sy
 800db7e:	e7fe      	b.n	800db7e <xQueueSemaphoreTake+0x4e>
 800db80:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800db82:	2700      	movs	r7, #0
 800db84:	e053      	b.n	800dc2e <xQueueSemaphoreTake+0xfe>
 800db86:	4605      	mov	r5, r0
 800db88:	e7fb      	b.n	800db82 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800db8a:	9b01      	ldr	r3, [sp, #4]
 800db8c:	b963      	cbnz	r3, 800dba8 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800db8e:	b145      	cbz	r5, 800dba2 <xQueueSemaphoreTake+0x72>
 800db90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db94:	f383 8811 	msr	BASEPRI, r3
 800db98:	f3bf 8f6f 	isb	sy
 800db9c:	f3bf 8f4f 	dsb	sy
 800dba0:	e7fe      	b.n	800dba0 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800dba2:	f7ff fb17 	bl	800d1d4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800dba6:	e062      	b.n	800dc6e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800dba8:	b916      	cbnz	r6, 800dbb0 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dbaa:	a802      	add	r0, sp, #8
 800dbac:	f000 fd6e 	bl	800e68c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dbb0:	f7ff fb10 	bl	800d1d4 <vPortExitCritical>
		vTaskSuspendAll();
 800dbb4:	f000 fb5e 	bl	800e274 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dbb8:	f7ff faec 	bl	800d194 <vPortEnterCritical>
 800dbbc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dbc0:	2bff      	cmp	r3, #255	; 0xff
 800dbc2:	bf08      	it	eq
 800dbc4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800dbc8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dbcc:	2bff      	cmp	r3, #255	; 0xff
 800dbce:	bf08      	it	eq
 800dbd0:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800dbd4:	f7ff fafe 	bl	800d1d4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dbd8:	a901      	add	r1, sp, #4
 800dbda:	a802      	add	r0, sp, #8
 800dbdc:	f000 fd62 	bl	800e6a4 <xTaskCheckForTimeOut>
 800dbe0:	2800      	cmp	r0, #0
 800dbe2:	d14d      	bne.n	800dc80 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dbe4:	4620      	mov	r0, r4
 800dbe6:	f7ff fc19 	bl	800d41c <prvIsQueueEmpty>
 800dbea:	2800      	cmp	r0, #0
 800dbec:	d042      	beq.n	800dc74 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dbee:	6823      	ldr	r3, [r4, #0]
 800dbf0:	b93b      	cbnz	r3, 800dc02 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800dbf2:	f7ff facf 	bl	800d194 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800dbf6:	68a0      	ldr	r0, [r4, #8]
 800dbf8:	f000 fda6 	bl	800e748 <xTaskPriorityInherit>
 800dbfc:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800dbfe:	f7ff fae9 	bl	800d1d4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dc02:	9901      	ldr	r1, [sp, #4]
 800dc04:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dc08:	f000 fcc4 	bl	800e594 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800dc0c:	4620      	mov	r0, r4
 800dc0e:	f7ff fc5b 	bl	800d4c8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800dc12:	f000 fbdb 	bl	800e3cc <xTaskResumeAll>
 800dc16:	b948      	cbnz	r0, 800dc2c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800dc18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc24:	f3bf 8f4f 	dsb	sy
 800dc28:	f3bf 8f6f 	isb	sy
 800dc2c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800dc2e:	f7ff fab1 	bl	800d194 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800dc32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800dc34:	2b00      	cmp	r3, #0
 800dc36:	d0a8      	beq.n	800db8a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800dc38:	3b01      	subs	r3, #1
 800dc3a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dc3c:	6823      	ldr	r3, [r4, #0]
 800dc3e:	b913      	cbnz	r3, 800dc46 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800dc40:	f000 fe5a 	bl	800e8f8 <pvTaskIncrementMutexHeldCount>
 800dc44:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc46:	6923      	ldr	r3, [r4, #16]
 800dc48:	b173      	cbz	r3, 800dc68 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc4a:	f104 0010 	add.w	r0, r4, #16
 800dc4e:	f000 fcd9 	bl	800e604 <xTaskRemoveFromEventList>
 800dc52:	b148      	cbz	r0, 800dc68 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800dc54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc60:	f3bf 8f4f 	dsb	sy
 800dc64:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dc68:	f7ff fab4 	bl	800d1d4 <vPortExitCritical>
				return pdPASS;
 800dc6c:	2501      	movs	r5, #1
}
 800dc6e:	4628      	mov	r0, r5
 800dc70:	b005      	add	sp, #20
 800dc72:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800dc74:	4620      	mov	r0, r4
 800dc76:	f7ff fc27 	bl	800d4c8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dc7a:	f000 fba7 	bl	800e3cc <xTaskResumeAll>
 800dc7e:	e7d5      	b.n	800dc2c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800dc80:	4620      	mov	r0, r4
 800dc82:	f7ff fc21 	bl	800d4c8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dc86:	f000 fba1 	bl	800e3cc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dc8a:	4620      	mov	r0, r4
 800dc8c:	f7ff fbc6 	bl	800d41c <prvIsQueueEmpty>
 800dc90:	2800      	cmp	r0, #0
 800dc92:	d0cb      	beq.n	800dc2c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800dc94:	2d00      	cmp	r5, #0
 800dc96:	d0ea      	beq.n	800dc6e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800dc98:	f7ff fa7c 	bl	800d194 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800dc9c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dc9e:	b119      	cbz	r1, 800dca8 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800dca0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dca2:	6819      	ldr	r1, [r3, #0]
 800dca4:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800dca8:	68a0      	ldr	r0, [r4, #8]
 800dcaa:	f000 fdd3 	bl	800e854 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800dcae:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800dcb0:	f7ff fa90 	bl	800d1d4 <vPortExitCritical>
 800dcb4:	e7db      	b.n	800dc6e <xQueueSemaphoreTake+0x13e>

0800dcb6 <xQueueReceiveFromISR>:
{
 800dcb6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dcba:	4689      	mov	r9, r1
 800dcbc:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800dcbe:	4605      	mov	r5, r0
 800dcc0:	b940      	cbnz	r0, 800dcd4 <xQueueReceiveFromISR+0x1e>
 800dcc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcc6:	f383 8811 	msr	BASEPRI, r3
 800dcca:	f3bf 8f6f 	isb	sy
 800dcce:	f3bf 8f4f 	dsb	sy
 800dcd2:	e7fe      	b.n	800dcd2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dcd4:	b951      	cbnz	r1, 800dcec <xQueueReceiveFromISR+0x36>
 800dcd6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dcd8:	b143      	cbz	r3, 800dcec <xQueueReceiveFromISR+0x36>
 800dcda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcde:	f383 8811 	msr	BASEPRI, r3
 800dce2:	f3bf 8f6f 	isb	sy
 800dce6:	f3bf 8f4f 	dsb	sy
 800dcea:	e7fe      	b.n	800dcea <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dcec:	f7ff fb68 	bl	800d3c0 <vPortValidateInterruptPriority>
	__asm volatile
 800dcf0:	f3ef 8711 	mrs	r7, BASEPRI
 800dcf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcf8:	f383 8811 	msr	BASEPRI, r3
 800dcfc:	f3bf 8f6f 	isb	sy
 800dd00:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd04:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dd06:	b31c      	cbz	r4, 800dd50 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800dd08:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800dd0c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800dd0e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800dd10:	4628      	mov	r0, r5
 800dd12:	f7ff fbc3 	bl	800d49c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dd16:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800dd18:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dd1a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800dd1c:	d113      	bne.n	800dd46 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd1e:	692b      	ldr	r3, [r5, #16]
 800dd20:	b90b      	cbnz	r3, 800dd26 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800dd22:	2001      	movs	r0, #1
 800dd24:	e00b      	b.n	800dd3e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd26:	f105 0010 	add.w	r0, r5, #16
 800dd2a:	f000 fc6b 	bl	800e604 <xTaskRemoveFromEventList>
 800dd2e:	2800      	cmp	r0, #0
 800dd30:	d0f7      	beq.n	800dd22 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800dd32:	f1b8 0f00 	cmp.w	r8, #0
 800dd36:	d0f4      	beq.n	800dd22 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800dd38:	2001      	movs	r0, #1
 800dd3a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800dd3e:	f387 8811 	msr	BASEPRI, r7
}
 800dd42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800dd46:	3601      	adds	r6, #1
 800dd48:	b276      	sxtb	r6, r6
 800dd4a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800dd4e:	e7e8      	b.n	800dd22 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800dd50:	4620      	mov	r0, r4
 800dd52:	e7f4      	b.n	800dd3e <xQueueReceiveFromISR+0x88>

0800dd54 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800dd54:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800dd56:	4a07      	ldr	r2, [pc, #28]	; (800dd74 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800dd58:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800dd5a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800dd5e:	b92c      	cbnz	r4, 800dd6c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800dd60:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800dd64:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800dd68:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800dd6a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800dd6c:	3301      	adds	r3, #1
 800dd6e:	2b08      	cmp	r3, #8
 800dd70:	d1f3      	bne.n	800dd5a <vQueueAddToRegistry+0x6>
 800dd72:	e7fa      	b.n	800dd6a <vQueueAddToRegistry+0x16>
 800dd74:	20014598 	.word	0x20014598

0800dd78 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800dd78:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800dd7a:	4a08      	ldr	r2, [pc, #32]	; (800dd9c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800dd7c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800dd7e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800dd82:	684c      	ldr	r4, [r1, #4]
 800dd84:	4284      	cmp	r4, r0
 800dd86:	d104      	bne.n	800dd92 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800dd88:	2000      	movs	r0, #0
 800dd8a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800dd8e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800dd90:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800dd92:	3301      	adds	r3, #1
 800dd94:	2b08      	cmp	r3, #8
 800dd96:	d1f2      	bne.n	800dd7e <vQueueUnregisterQueue+0x6>
 800dd98:	e7fa      	b.n	800dd90 <vQueueUnregisterQueue+0x18>
 800dd9a:	bf00      	nop
 800dd9c:	20014598 	.word	0x20014598

0800dda0 <vQueueDelete>:
{
 800dda0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800dda2:	4604      	mov	r4, r0
 800dda4:	b940      	cbnz	r0, 800ddb8 <vQueueDelete+0x18>
	__asm volatile
 800dda6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddaa:	f383 8811 	msr	BASEPRI, r3
 800ddae:	f3bf 8f6f 	isb	sy
 800ddb2:	f3bf 8f4f 	dsb	sy
 800ddb6:	e7fe      	b.n	800ddb6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800ddb8:	f7ff ffde 	bl	800dd78 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ddbc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800ddc0:	b923      	cbnz	r3, 800ddcc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800ddc2:	4620      	mov	r0, r4
}
 800ddc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800ddc8:	f7ff b8f8 	b.w	800cfbc <vPortFree>
}
 800ddcc:	bd10      	pop	{r4, pc}

0800ddce <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ddce:	b570      	push	{r4, r5, r6, lr}
 800ddd0:	4604      	mov	r4, r0
 800ddd2:	460d      	mov	r5, r1
 800ddd4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800ddd6:	f7ff f9dd 	bl	800d194 <vPortEnterCritical>
 800ddda:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ddde:	2bff      	cmp	r3, #255	; 0xff
 800dde0:	bf04      	itt	eq
 800dde2:	2300      	moveq	r3, #0
 800dde4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dde8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ddec:	2bff      	cmp	r3, #255	; 0xff
 800ddee:	bf04      	itt	eq
 800ddf0:	2300      	moveq	r3, #0
 800ddf2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ddf6:	f7ff f9ed 	bl	800d1d4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800ddfa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ddfc:	b92b      	cbnz	r3, 800de0a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800ddfe:	4632      	mov	r2, r6
 800de00:	4629      	mov	r1, r5
 800de02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800de06:	f000 fbdf 	bl	800e5c8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800de0a:	4620      	mov	r0, r4
	}
 800de0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800de10:	f7ff bb5a 	b.w	800d4c8 <prvUnlockQueue>

0800de14 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800de14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de18:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800de1a:	f7ff f9bb 	bl	800d194 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800de1e:	4b30      	ldr	r3, [pc, #192]	; (800dee0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800de20:	4e30      	ldr	r6, [pc, #192]	; (800dee4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800de22:	681a      	ldr	r2, [r3, #0]
 800de24:	4f30      	ldr	r7, [pc, #192]	; (800dee8 <prvAddNewTaskToReadyList+0xd4>)
 800de26:	3201      	adds	r2, #1
 800de28:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800de2a:	6835      	ldr	r5, [r6, #0]
 800de2c:	2d00      	cmp	r5, #0
 800de2e:	d14b      	bne.n	800dec8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800de30:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800de32:	681b      	ldr	r3, [r3, #0]
 800de34:	2b01      	cmp	r3, #1
 800de36:	d11f      	bne.n	800de78 <prvAddNewTaskToReadyList+0x64>
 800de38:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800de3a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800de3c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800de3e:	f7ff f8fb 	bl	800d038 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800de42:	2d38      	cmp	r5, #56	; 0x38
 800de44:	f108 0814 	add.w	r8, r8, #20
 800de48:	d1f7      	bne.n	800de3a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800de4a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800df10 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800de4e:	4d27      	ldr	r5, [pc, #156]	; (800deec <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800de50:	4640      	mov	r0, r8
 800de52:	f7ff f8f1 	bl	800d038 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800de56:	4628      	mov	r0, r5
 800de58:	f7ff f8ee 	bl	800d038 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800de5c:	4824      	ldr	r0, [pc, #144]	; (800def0 <prvAddNewTaskToReadyList+0xdc>)
 800de5e:	f7ff f8eb 	bl	800d038 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800de62:	4824      	ldr	r0, [pc, #144]	; (800def4 <prvAddNewTaskToReadyList+0xe0>)
 800de64:	f7ff f8e8 	bl	800d038 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800de68:	4823      	ldr	r0, [pc, #140]	; (800def8 <prvAddNewTaskToReadyList+0xe4>)
 800de6a:	f7ff f8e5 	bl	800d038 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800de6e:	4b23      	ldr	r3, [pc, #140]	; (800defc <prvAddNewTaskToReadyList+0xe8>)
 800de70:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800de74:	4b22      	ldr	r3, [pc, #136]	; (800df00 <prvAddNewTaskToReadyList+0xec>)
 800de76:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800de78:	4a22      	ldr	r2, [pc, #136]	; (800df04 <prvAddNewTaskToReadyList+0xf0>)
 800de7a:	6813      	ldr	r3, [r2, #0]
 800de7c:	3301      	adds	r3, #1
 800de7e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800de80:	4a21      	ldr	r2, [pc, #132]	; (800df08 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800de82:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800de84:	6811      	ldr	r1, [r2, #0]
 800de86:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800de88:	2014      	movs	r0, #20
 800de8a:	428b      	cmp	r3, r1
 800de8c:	fb00 7003 	mla	r0, r0, r3, r7
 800de90:	f104 0104 	add.w	r1, r4, #4
 800de94:	bf88      	it	hi
 800de96:	6013      	strhi	r3, [r2, #0]
 800de98:	f7ff f8dc 	bl	800d054 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800de9c:	f7ff f99a 	bl	800d1d4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800dea0:	4b1a      	ldr	r3, [pc, #104]	; (800df0c <prvAddNewTaskToReadyList+0xf8>)
 800dea2:	681b      	ldr	r3, [r3, #0]
 800dea4:	b173      	cbz	r3, 800dec4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800dea6:	6833      	ldr	r3, [r6, #0]
 800dea8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800deaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800deac:	429a      	cmp	r2, r3
 800deae:	d209      	bcs.n	800dec4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800deb0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800deb4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deb8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800debc:	f3bf 8f4f 	dsb	sy
 800dec0:	f3bf 8f6f 	isb	sy
}
 800dec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800dec8:	4b10      	ldr	r3, [pc, #64]	; (800df0c <prvAddNewTaskToReadyList+0xf8>)
 800deca:	681b      	ldr	r3, [r3, #0]
 800decc:	2b00      	cmp	r3, #0
 800dece:	d1d3      	bne.n	800de78 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ded0:	6833      	ldr	r3, [r6, #0]
 800ded2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ded4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ded6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800ded8:	bf98      	it	ls
 800deda:	6034      	strls	r4, [r6, #0]
 800dedc:	e7cc      	b.n	800de78 <prvAddNewTaskToReadyList+0x64>
 800dede:	bf00      	nop
 800dee0:	20014a44 	.word	0x20014a44
 800dee4:	200145d8 	.word	0x200145d8
 800dee8:	200145e4 	.word	0x200145e4
 800deec:	20014a6c 	.word	0x20014a6c
 800def0:	20014a8c 	.word	0x20014a8c
 800def4:	20014ab8 	.word	0x20014ab8
 800def8:	20014aa4 	.word	0x20014aa4
 800defc:	200145dc 	.word	0x200145dc
 800df00:	200145e0 	.word	0x200145e0
 800df04:	20014a50 	.word	0x20014a50
 800df08:	20014a54 	.word	0x20014a54
 800df0c:	20014aa0 	.word	0x20014aa0
 800df10:	20014a58 	.word	0x20014a58

0800df14 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800df14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800df16:	4b15      	ldr	r3, [pc, #84]	; (800df6c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800df18:	4e15      	ldr	r6, [pc, #84]	; (800df70 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800df1a:	681d      	ldr	r5, [r3, #0]
{
 800df1c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800df1e:	6830      	ldr	r0, [r6, #0]
 800df20:	3004      	adds	r0, #4
{
 800df22:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800df24:	f7ff f8b9 	bl	800d09a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800df28:	1c63      	adds	r3, r4, #1
 800df2a:	d107      	bne.n	800df3c <prvAddCurrentTaskToDelayedList+0x28>
 800df2c:	b137      	cbz	r7, 800df3c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800df2e:	6831      	ldr	r1, [r6, #0]
 800df30:	4810      	ldr	r0, [pc, #64]	; (800df74 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800df32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800df36:	3104      	adds	r1, #4
 800df38:	f7ff b88c 	b.w	800d054 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800df3c:	6833      	ldr	r3, [r6, #0]
 800df3e:	192c      	adds	r4, r5, r4
 800df40:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800df42:	d307      	bcc.n	800df54 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800df44:	4b0c      	ldr	r3, [pc, #48]	; (800df78 <prvAddCurrentTaskToDelayedList+0x64>)
 800df46:	6818      	ldr	r0, [r3, #0]
 800df48:	6831      	ldr	r1, [r6, #0]
}
 800df4a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800df4e:	3104      	adds	r1, #4
 800df50:	f7ff b88c 	b.w	800d06c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800df54:	4b09      	ldr	r3, [pc, #36]	; (800df7c <prvAddCurrentTaskToDelayedList+0x68>)
 800df56:	6818      	ldr	r0, [r3, #0]
 800df58:	6831      	ldr	r1, [r6, #0]
 800df5a:	3104      	adds	r1, #4
 800df5c:	f7ff f886 	bl	800d06c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800df60:	4b07      	ldr	r3, [pc, #28]	; (800df80 <prvAddCurrentTaskToDelayedList+0x6c>)
 800df62:	681a      	ldr	r2, [r3, #0]
 800df64:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800df66:	bf88      	it	hi
 800df68:	601c      	strhi	r4, [r3, #0]
}
 800df6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800df6c:	20014acc 	.word	0x20014acc
 800df70:	200145d8 	.word	0x200145d8
 800df74:	20014aa4 	.word	0x20014aa4
 800df78:	200145e0 	.word	0x200145e0
 800df7c:	200145dc 	.word	0x200145dc
 800df80:	20014a80 	.word	0x20014a80

0800df84 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800df84:	4a06      	ldr	r2, [pc, #24]	; (800dfa0 <prvResetNextTaskUnblockTime+0x1c>)
 800df86:	6813      	ldr	r3, [r2, #0]
 800df88:	6819      	ldr	r1, [r3, #0]
 800df8a:	4b06      	ldr	r3, [pc, #24]	; (800dfa4 <prvResetNextTaskUnblockTime+0x20>)
 800df8c:	b919      	cbnz	r1, 800df96 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800df8e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800df92:	601a      	str	r2, [r3, #0]
}
 800df94:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800df96:	6812      	ldr	r2, [r2, #0]
 800df98:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800df9a:	68d2      	ldr	r2, [r2, #12]
 800df9c:	6852      	ldr	r2, [r2, #4]
 800df9e:	e7f8      	b.n	800df92 <prvResetNextTaskUnblockTime+0xe>
 800dfa0:	200145dc 	.word	0x200145dc
 800dfa4:	20014a80 	.word	0x20014a80

0800dfa8 <prvDeleteTCB>:
	{
 800dfa8:	b510      	push	{r4, lr}
 800dfaa:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800dfac:	3058      	adds	r0, #88	; 0x58
 800dfae:	f019 ffe9 	bl	8027f84 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800dfb2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800dfb6:	b93b      	cbnz	r3, 800dfc8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800dfb8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dfba:	f7fe ffff 	bl	800cfbc <vPortFree>
				vPortFree( pxTCB );
 800dfbe:	4620      	mov	r0, r4
	}
 800dfc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800dfc4:	f7fe bffa 	b.w	800cfbc <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800dfc8:	2b01      	cmp	r3, #1
 800dfca:	d0f8      	beq.n	800dfbe <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800dfcc:	2b02      	cmp	r3, #2
 800dfce:	d008      	beq.n	800dfe2 <prvDeleteTCB+0x3a>
 800dfd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfd4:	f383 8811 	msr	BASEPRI, r3
 800dfd8:	f3bf 8f6f 	isb	sy
 800dfdc:	f3bf 8f4f 	dsb	sy
 800dfe0:	e7fe      	b.n	800dfe0 <prvDeleteTCB+0x38>
	}
 800dfe2:	bd10      	pop	{r4, pc}

0800dfe4 <prvIdleTask>:
{
 800dfe4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800dfe6:	4c13      	ldr	r4, [pc, #76]	; (800e034 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dfe8:	4f13      	ldr	r7, [pc, #76]	; (800e038 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800dfea:	4d14      	ldr	r5, [pc, #80]	; (800e03c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800dfec:	6823      	ldr	r3, [r4, #0]
 800dfee:	b973      	cbnz	r3, 800e00e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800dff0:	4b13      	ldr	r3, [pc, #76]	; (800e040 <prvIdleTask+0x5c>)
 800dff2:	681b      	ldr	r3, [r3, #0]
 800dff4:	2b01      	cmp	r3, #1
 800dff6:	d9f8      	bls.n	800dfea <prvIdleTask+0x6>
				taskYIELD();
 800dff8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dffc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e000:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e004:	f3bf 8f4f 	dsb	sy
 800e008:	f3bf 8f6f 	isb	sy
 800e00c:	e7ed      	b.n	800dfea <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e00e:	f7ff f8c1 	bl	800d194 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e012:	68fb      	ldr	r3, [r7, #12]
 800e014:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e016:	1d30      	adds	r0, r6, #4
 800e018:	f7ff f83f 	bl	800d09a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e01c:	682b      	ldr	r3, [r5, #0]
 800e01e:	3b01      	subs	r3, #1
 800e020:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e022:	6823      	ldr	r3, [r4, #0]
 800e024:	3b01      	subs	r3, #1
 800e026:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e028:	f7ff f8d4 	bl	800d1d4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e02c:	4630      	mov	r0, r6
 800e02e:	f7ff ffbb 	bl	800dfa8 <prvDeleteTCB>
 800e032:	e7db      	b.n	800dfec <prvIdleTask+0x8>
 800e034:	20014a48 	.word	0x20014a48
 800e038:	20014ab8 	.word	0x20014ab8
 800e03c:	20014a44 	.word	0x20014a44
 800e040:	200145e4 	.word	0x200145e4

0800e044 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e044:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e048:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e04c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e050:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e052:	4606      	mov	r6, r0
 800e054:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e056:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e058:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e05a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e05c:	f019 fbae 	bl	80277bc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e060:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e062:	f1a9 0904 	sub.w	r9, r9, #4
 800e066:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e068:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800e06c:	2d00      	cmp	r5, #0
 800e06e:	d042      	beq.n	800e0f6 <prvInitialiseNewTask.constprop.0+0xb2>
 800e070:	1e6b      	subs	r3, r5, #1
 800e072:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800e076:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e078:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e07c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800e080:	b108      	cbz	r0, 800e086 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e082:	42ab      	cmp	r3, r5
 800e084:	d1f8      	bne.n	800e078 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e086:	2300      	movs	r3, #0
 800e088:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e08c:	9d08      	ldr	r5, [sp, #32]
 800e08e:	2d37      	cmp	r5, #55	; 0x37
 800e090:	bf28      	it	cs
 800e092:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e094:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e098:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e09a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e09c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e09e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e0a2:	f7fe ffd4 	bl	800d04e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e0a6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e0aa:	f104 0018 	add.w	r0, r4, #24
 800e0ae:	f7fe ffce 	bl	800d04e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e0b2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e0b6:	2260      	movs	r2, #96	; 0x60
 800e0b8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e0ba:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e0bc:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e0be:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e0c0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e0c4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e0c8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e0cc:	f019 fb76 	bl	80277bc <memset>
 800e0d0:	4b0a      	ldr	r3, [pc, #40]	; (800e0fc <prvInitialiseNewTask.constprop.0+0xb8>)
 800e0d2:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e0d4:	4b0a      	ldr	r3, [pc, #40]	; (800e100 <prvInitialiseNewTask.constprop.0+0xbc>)
 800e0d6:	6623      	str	r3, [r4, #96]	; 0x60
 800e0d8:	4b0a      	ldr	r3, [pc, #40]	; (800e104 <prvInitialiseNewTask.constprop.0+0xc0>)
 800e0da:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e0dc:	463a      	mov	r2, r7
 800e0de:	4631      	mov	r1, r6
 800e0e0:	4648      	mov	r0, r9
 800e0e2:	f7ff f829 	bl	800d138 <pxPortInitialiseStack>
 800e0e6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e0e8:	f1b8 0f00 	cmp.w	r8, #0
 800e0ec:	d001      	beq.n	800e0f2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e0ee:	f8c8 4000 	str.w	r4, [r8]
}
 800e0f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e0f6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e0fa:	e7c7      	b.n	800e08c <prvInitialiseNewTask.constprop.0+0x48>
 800e0fc:	0802e3dc 	.word	0x0802e3dc
 800e100:	0802e3fc 	.word	0x0802e3fc
 800e104:	0802e3bc 	.word	0x0802e3bc

0800e108 <xTaskCreateStatic>:
	{
 800e108:	b570      	push	{r4, r5, r6, lr}
 800e10a:	b086      	sub	sp, #24
 800e10c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e110:	b945      	cbnz	r5, 800e124 <xTaskCreateStatic+0x1c>
 800e112:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e116:	f383 8811 	msr	BASEPRI, r3
 800e11a:	f3bf 8f6f 	isb	sy
 800e11e:	f3bf 8f4f 	dsb	sy
 800e122:	e7fe      	b.n	800e122 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e124:	b944      	cbnz	r4, 800e138 <xTaskCreateStatic+0x30>
 800e126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e12a:	f383 8811 	msr	BASEPRI, r3
 800e12e:	f3bf 8f6f 	isb	sy
 800e132:	f3bf 8f4f 	dsb	sy
 800e136:	e7fe      	b.n	800e136 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e138:	26c0      	movs	r6, #192	; 0xc0
 800e13a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e13c:	9e05      	ldr	r6, [sp, #20]
 800e13e:	2ec0      	cmp	r6, #192	; 0xc0
 800e140:	d008      	beq.n	800e154 <xTaskCreateStatic+0x4c>
 800e142:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e146:	f383 8811 	msr	BASEPRI, r3
 800e14a:	f3bf 8f6f 	isb	sy
 800e14e:	f3bf 8f4f 	dsb	sy
 800e152:	e7fe      	b.n	800e152 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e154:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e156:	2502      	movs	r5, #2
 800e158:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e15c:	ad04      	add	r5, sp, #16
 800e15e:	9501      	str	r5, [sp, #4]
 800e160:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e162:	9402      	str	r4, [sp, #8]
 800e164:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e166:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e168:	f7ff ff6c 	bl	800e044 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e16c:	4620      	mov	r0, r4
 800e16e:	f7ff fe51 	bl	800de14 <prvAddNewTaskToReadyList>
	}
 800e172:	9804      	ldr	r0, [sp, #16]
 800e174:	b006      	add	sp, #24
 800e176:	bd70      	pop	{r4, r5, r6, pc}

0800e178 <xTaskCreate>:
	{
 800e178:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e17c:	4607      	mov	r7, r0
 800e17e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e180:	0090      	lsls	r0, r2, #2
	{
 800e182:	4688      	mov	r8, r1
 800e184:	4616      	mov	r6, r2
 800e186:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e188:	f7fe fe80 	bl	800ce8c <pvPortMalloc>
			if( pxStack != NULL )
 800e18c:	4605      	mov	r5, r0
 800e18e:	b1e8      	cbz	r0, 800e1cc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e190:	20c0      	movs	r0, #192	; 0xc0
 800e192:	f7fe fe7b 	bl	800ce8c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e196:	4604      	mov	r4, r0
 800e198:	b1a8      	cbz	r0, 800e1c6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e19a:	2300      	movs	r3, #0
 800e19c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e1a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800e1a2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e1a4:	9301      	str	r3, [sp, #4]
 800e1a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e1a8:	9002      	str	r0, [sp, #8]
 800e1aa:	9300      	str	r3, [sp, #0]
 800e1ac:	4632      	mov	r2, r6
 800e1ae:	464b      	mov	r3, r9
 800e1b0:	4641      	mov	r1, r8
 800e1b2:	4638      	mov	r0, r7
 800e1b4:	f7ff ff46 	bl	800e044 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e1b8:	4620      	mov	r0, r4
 800e1ba:	f7ff fe2b 	bl	800de14 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e1be:	2001      	movs	r0, #1
	}
 800e1c0:	b005      	add	sp, #20
 800e1c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e1c6:	4628      	mov	r0, r5
 800e1c8:	f7fe fef8 	bl	800cfbc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e1cc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800e1d0:	e7f6      	b.n	800e1c0 <xTaskCreate+0x48>
	...

0800e1d4 <vTaskStartScheduler>:
{
 800e1d4:	b510      	push	{r4, lr}
 800e1d6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e1d8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e1da:	aa07      	add	r2, sp, #28
 800e1dc:	a906      	add	r1, sp, #24
 800e1de:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e1e0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e1e4:	f7fe fe16 	bl	800ce14 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e1e8:	9b05      	ldr	r3, [sp, #20]
 800e1ea:	9302      	str	r3, [sp, #8]
 800e1ec:	9b06      	ldr	r3, [sp, #24]
 800e1ee:	9a07      	ldr	r2, [sp, #28]
 800e1f0:	4919      	ldr	r1, [pc, #100]	; (800e258 <vTaskStartScheduler+0x84>)
 800e1f2:	481a      	ldr	r0, [pc, #104]	; (800e25c <vTaskStartScheduler+0x88>)
 800e1f4:	e9cd 4300 	strd	r4, r3, [sp]
 800e1f8:	4623      	mov	r3, r4
 800e1fa:	f7ff ff85 	bl	800e108 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800e1fe:	b340      	cbz	r0, 800e252 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800e200:	f000 fbd8 	bl	800e9b4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e204:	2801      	cmp	r0, #1
 800e206:	d119      	bne.n	800e23c <vTaskStartScheduler+0x68>
 800e208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e20c:	f383 8811 	msr	BASEPRI, r3
 800e210:	f3bf 8f6f 	isb	sy
 800e214:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e218:	4b11      	ldr	r3, [pc, #68]	; (800e260 <vTaskStartScheduler+0x8c>)
 800e21a:	4a12      	ldr	r2, [pc, #72]	; (800e264 <vTaskStartScheduler+0x90>)
 800e21c:	681b      	ldr	r3, [r3, #0]
 800e21e:	3358      	adds	r3, #88	; 0x58
 800e220:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e222:	4b11      	ldr	r3, [pc, #68]	; (800e268 <vTaskStartScheduler+0x94>)
 800e224:	f04f 32ff 	mov.w	r2, #4294967295
 800e228:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800e22a:	4b10      	ldr	r3, [pc, #64]	; (800e26c <vTaskStartScheduler+0x98>)
 800e22c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e22e:	4b10      	ldr	r3, [pc, #64]	; (800e270 <vTaskStartScheduler+0x9c>)
 800e230:	601c      	str	r4, [r3, #0]
}
 800e232:	b008      	add	sp, #32
 800e234:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e238:	f7ff b83c 	b.w	800d2b4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e23c:	3001      	adds	r0, #1
 800e23e:	d108      	bne.n	800e252 <vTaskStartScheduler+0x7e>
 800e240:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e244:	f383 8811 	msr	BASEPRI, r3
 800e248:	f3bf 8f6f 	isb	sy
 800e24c:	f3bf 8f4f 	dsb	sy
 800e250:	e7fe      	b.n	800e250 <vTaskStartScheduler+0x7c>
}
 800e252:	b008      	add	sp, #32
 800e254:	bd10      	pop	{r4, pc}
 800e256:	bf00      	nop
 800e258:	0802ad07 	.word	0x0802ad07
 800e25c:	0800dfe5 	.word	0x0800dfe5
 800e260:	200145d8 	.word	0x200145d8
 800e264:	20000120 	.word	0x20000120
 800e268:	20014a80 	.word	0x20014a80
 800e26c:	20014aa0 	.word	0x20014aa0
 800e270:	20014acc 	.word	0x20014acc

0800e274 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e274:	4a02      	ldr	r2, [pc, #8]	; (800e280 <vTaskSuspendAll+0xc>)
 800e276:	6813      	ldr	r3, [r2, #0]
 800e278:	3301      	adds	r3, #1
 800e27a:	6013      	str	r3, [r2, #0]
}
 800e27c:	4770      	bx	lr
 800e27e:	bf00      	nop
 800e280:	20014a4c 	.word	0x20014a4c

0800e284 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e284:	4b01      	ldr	r3, [pc, #4]	; (800e28c <xTaskGetTickCount+0x8>)
 800e286:	6818      	ldr	r0, [r3, #0]
}
 800e288:	4770      	bx	lr
 800e28a:	bf00      	nop
 800e28c:	20014acc 	.word	0x20014acc

0800e290 <xTaskGetTickCountFromISR>:
{
 800e290:	b508      	push	{r3, lr}
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e292:	f7ff f895 	bl	800d3c0 <vPortValidateInterruptPriority>
		xReturn = xTickCount;
 800e296:	4b01      	ldr	r3, [pc, #4]	; (800e29c <xTaskGetTickCountFromISR+0xc>)
 800e298:	6818      	ldr	r0, [r3, #0]
}
 800e29a:	bd08      	pop	{r3, pc}
 800e29c:	20014acc 	.word	0x20014acc

0800e2a0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e2a0:	4b3f      	ldr	r3, [pc, #252]	; (800e3a0 <xTaskIncrementTick+0x100>)
 800e2a2:	681b      	ldr	r3, [r3, #0]
{
 800e2a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e2a8:	2b00      	cmp	r3, #0
 800e2aa:	d173      	bne.n	800e394 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e2ac:	4b3d      	ldr	r3, [pc, #244]	; (800e3a4 <xTaskIncrementTick+0x104>)
 800e2ae:	681d      	ldr	r5, [r3, #0]
 800e2b0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800e2b2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e2b4:	b9bd      	cbnz	r5, 800e2e6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e2b6:	4b3c      	ldr	r3, [pc, #240]	; (800e3a8 <xTaskIncrementTick+0x108>)
 800e2b8:	681a      	ldr	r2, [r3, #0]
 800e2ba:	6812      	ldr	r2, [r2, #0]
 800e2bc:	b142      	cbz	r2, 800e2d0 <xTaskIncrementTick+0x30>
 800e2be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2c2:	f383 8811 	msr	BASEPRI, r3
 800e2c6:	f3bf 8f6f 	isb	sy
 800e2ca:	f3bf 8f4f 	dsb	sy
 800e2ce:	e7fe      	b.n	800e2ce <xTaskIncrementTick+0x2e>
 800e2d0:	4a36      	ldr	r2, [pc, #216]	; (800e3ac <xTaskIncrementTick+0x10c>)
 800e2d2:	6819      	ldr	r1, [r3, #0]
 800e2d4:	6810      	ldr	r0, [r2, #0]
 800e2d6:	6018      	str	r0, [r3, #0]
 800e2d8:	6011      	str	r1, [r2, #0]
 800e2da:	4a35      	ldr	r2, [pc, #212]	; (800e3b0 <xTaskIncrementTick+0x110>)
 800e2dc:	6813      	ldr	r3, [r2, #0]
 800e2de:	3301      	adds	r3, #1
 800e2e0:	6013      	str	r3, [r2, #0]
 800e2e2:	f7ff fe4f 	bl	800df84 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e2e6:	4e33      	ldr	r6, [pc, #204]	; (800e3b4 <xTaskIncrementTick+0x114>)
 800e2e8:	4f33      	ldr	r7, [pc, #204]	; (800e3b8 <xTaskIncrementTick+0x118>)
 800e2ea:	6833      	ldr	r3, [r6, #0]
 800e2ec:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800e3c4 <xTaskIncrementTick+0x124>
 800e2f0:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e2f2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e2f6:	d211      	bcs.n	800e31c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e2f8:	f8d8 3000 	ldr.w	r3, [r8]
 800e2fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2fe:	2214      	movs	r2, #20
 800e300:	4353      	muls	r3, r2
 800e302:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800e304:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800e306:	4b2d      	ldr	r3, [pc, #180]	; (800e3bc <xTaskIncrementTick+0x11c>)
 800e308:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800e30a:	bf28      	it	cs
 800e30c:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800e30e:	2b00      	cmp	r3, #0
 800e310:	bf18      	it	ne
 800e312:	2401      	movne	r4, #1
}
 800e314:	4620      	mov	r0, r4
 800e316:	b003      	add	sp, #12
 800e318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e31c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800e3a8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e320:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800e3c8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e324:	f8d9 3000 	ldr.w	r3, [r9]
 800e328:	681b      	ldr	r3, [r3, #0]
 800e32a:	b91b      	cbnz	r3, 800e334 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e32c:	f04f 33ff 	mov.w	r3, #4294967295
 800e330:	6033      	str	r3, [r6, #0]
					break;
 800e332:	e7e1      	b.n	800e2f8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e334:	f8d9 3000 	ldr.w	r3, [r9]
 800e338:	68db      	ldr	r3, [r3, #12]
 800e33a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e33e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800e342:	4295      	cmp	r5, r2
 800e344:	d201      	bcs.n	800e34a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e346:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e348:	e7d6      	b.n	800e2f8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e34a:	f10b 0104 	add.w	r1, fp, #4
 800e34e:	4608      	mov	r0, r1
 800e350:	9101      	str	r1, [sp, #4]
 800e352:	f7fe fea2 	bl	800d09a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e356:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800e35a:	9901      	ldr	r1, [sp, #4]
 800e35c:	b122      	cbz	r2, 800e368 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e35e:	f10b 0018 	add.w	r0, fp, #24
 800e362:	f7fe fe9a 	bl	800d09a <uxListRemove>
 800e366:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e368:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800e36c:	f8da 2000 	ldr.w	r2, [sl]
 800e370:	2314      	movs	r3, #20
 800e372:	4290      	cmp	r0, r2
 800e374:	bf88      	it	hi
 800e376:	f8ca 0000 	strhi.w	r0, [sl]
 800e37a:	fb03 7000 	mla	r0, r3, r0, r7
 800e37e:	f7fe fe69 	bl	800d054 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e382:	f8d8 1000 	ldr.w	r1, [r8]
 800e386:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800e38a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800e38c:	429a      	cmp	r2, r3
 800e38e:	bf28      	it	cs
 800e390:	2401      	movcs	r4, #1
 800e392:	e7c7      	b.n	800e324 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e394:	4a0a      	ldr	r2, [pc, #40]	; (800e3c0 <xTaskIncrementTick+0x120>)
 800e396:	6813      	ldr	r3, [r2, #0]
 800e398:	3301      	adds	r3, #1
 800e39a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e39c:	2400      	movs	r4, #0
	return xSwitchRequired;
 800e39e:	e7b9      	b.n	800e314 <xTaskIncrementTick+0x74>
 800e3a0:	20014a4c 	.word	0x20014a4c
 800e3a4:	20014acc 	.word	0x20014acc
 800e3a8:	200145dc 	.word	0x200145dc
 800e3ac:	200145e0 	.word	0x200145e0
 800e3b0:	20014a84 	.word	0x20014a84
 800e3b4:	20014a80 	.word	0x20014a80
 800e3b8:	200145e4 	.word	0x200145e4
 800e3bc:	20014ad0 	.word	0x20014ad0
 800e3c0:	20014a88 	.word	0x20014a88
 800e3c4:	200145d8 	.word	0x200145d8
 800e3c8:	20014a54 	.word	0x20014a54

0800e3cc <xTaskResumeAll>:
{
 800e3cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800e3ce:	4c31      	ldr	r4, [pc, #196]	; (800e494 <xTaskResumeAll+0xc8>)
 800e3d0:	6823      	ldr	r3, [r4, #0]
 800e3d2:	b943      	cbnz	r3, 800e3e6 <xTaskResumeAll+0x1a>
 800e3d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3d8:	f383 8811 	msr	BASEPRI, r3
 800e3dc:	f3bf 8f6f 	isb	sy
 800e3e0:	f3bf 8f4f 	dsb	sy
 800e3e4:	e7fe      	b.n	800e3e4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800e3e6:	f7fe fed5 	bl	800d194 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e3ea:	6823      	ldr	r3, [r4, #0]
 800e3ec:	3b01      	subs	r3, #1
 800e3ee:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e3f0:	6824      	ldr	r4, [r4, #0]
 800e3f2:	b12c      	cbz	r4, 800e400 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800e3f4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e3f6:	f7fe feed 	bl	800d1d4 <vPortExitCritical>
}
 800e3fa:	4620      	mov	r0, r4
 800e3fc:	b003      	add	sp, #12
 800e3fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e400:	4b25      	ldr	r3, [pc, #148]	; (800e498 <xTaskResumeAll+0xcc>)
 800e402:	681b      	ldr	r3, [r3, #0]
 800e404:	2b00      	cmp	r3, #0
 800e406:	d0f5      	beq.n	800e3f4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e408:	4d24      	ldr	r5, [pc, #144]	; (800e49c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800e40a:	4e25      	ldr	r6, [pc, #148]	; (800e4a0 <xTaskResumeAll+0xd4>)
 800e40c:	4f25      	ldr	r7, [pc, #148]	; (800e4a4 <xTaskResumeAll+0xd8>)
 800e40e:	e01e      	b.n	800e44e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e410:	68eb      	ldr	r3, [r5, #12]
 800e412:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e414:	f104 0018 	add.w	r0, r4, #24
 800e418:	f7fe fe3f 	bl	800d09a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e41c:	1d21      	adds	r1, r4, #4
 800e41e:	4608      	mov	r0, r1
 800e420:	9101      	str	r1, [sp, #4]
 800e422:	f7fe fe3a 	bl	800d09a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e426:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e428:	6832      	ldr	r2, [r6, #0]
 800e42a:	9901      	ldr	r1, [sp, #4]
 800e42c:	2014      	movs	r0, #20
 800e42e:	4293      	cmp	r3, r2
 800e430:	fb00 7003 	mla	r0, r0, r3, r7
 800e434:	bf88      	it	hi
 800e436:	6033      	strhi	r3, [r6, #0]
 800e438:	f7fe fe0c 	bl	800d054 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e43c:	4b1a      	ldr	r3, [pc, #104]	; (800e4a8 <xTaskResumeAll+0xdc>)
 800e43e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e440:	681b      	ldr	r3, [r3, #0]
 800e442:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e444:	429a      	cmp	r2, r3
 800e446:	d302      	bcc.n	800e44e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800e448:	4b18      	ldr	r3, [pc, #96]	; (800e4ac <xTaskResumeAll+0xe0>)
 800e44a:	2201      	movs	r2, #1
 800e44c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e44e:	682b      	ldr	r3, [r5, #0]
 800e450:	2b00      	cmp	r3, #0
 800e452:	d1dd      	bne.n	800e410 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800e454:	b10c      	cbz	r4, 800e45a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800e456:	f7ff fd95 	bl	800df84 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e45a:	4d15      	ldr	r5, [pc, #84]	; (800e4b0 <xTaskResumeAll+0xe4>)
 800e45c:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e45e:	b144      	cbz	r4, 800e472 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800e460:	4e12      	ldr	r6, [pc, #72]	; (800e4ac <xTaskResumeAll+0xe0>)
 800e462:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800e464:	f7ff ff1c 	bl	800e2a0 <xTaskIncrementTick>
 800e468:	b100      	cbz	r0, 800e46c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800e46a:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e46c:	3c01      	subs	r4, #1
 800e46e:	d1f9      	bne.n	800e464 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800e470:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800e472:	4b0e      	ldr	r3, [pc, #56]	; (800e4ac <xTaskResumeAll+0xe0>)
 800e474:	681b      	ldr	r3, [r3, #0]
 800e476:	2b00      	cmp	r3, #0
 800e478:	d0bc      	beq.n	800e3f4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800e47a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e47e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e482:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e486:	f3bf 8f4f 	dsb	sy
 800e48a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e48e:	2401      	movs	r4, #1
 800e490:	e7b1      	b.n	800e3f6 <xTaskResumeAll+0x2a>
 800e492:	bf00      	nop
 800e494:	20014a4c 	.word	0x20014a4c
 800e498:	20014a44 	.word	0x20014a44
 800e49c:	20014a8c 	.word	0x20014a8c
 800e4a0:	20014a54 	.word	0x20014a54
 800e4a4:	200145e4 	.word	0x200145e4
 800e4a8:	200145d8 	.word	0x200145d8
 800e4ac:	20014ad0 	.word	0x20014ad0
 800e4b0:	20014a88 	.word	0x20014a88

0800e4b4 <vTaskDelay>:
	{
 800e4b4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e4b6:	b950      	cbnz	r0, 800e4ce <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e4b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e4bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e4c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e4c4:	f3bf 8f4f 	dsb	sy
 800e4c8:	f3bf 8f6f 	isb	sy
	}
 800e4cc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e4ce:	4b0a      	ldr	r3, [pc, #40]	; (800e4f8 <vTaskDelay+0x44>)
 800e4d0:	6819      	ldr	r1, [r3, #0]
 800e4d2:	b141      	cbz	r1, 800e4e6 <vTaskDelay+0x32>
 800e4d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4d8:	f383 8811 	msr	BASEPRI, r3
 800e4dc:	f3bf 8f6f 	isb	sy
 800e4e0:	f3bf 8f4f 	dsb	sy
 800e4e4:	e7fe      	b.n	800e4e4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800e4e6:	f7ff fec5 	bl	800e274 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800e4ea:	f7ff fd13 	bl	800df14 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800e4ee:	f7ff ff6d 	bl	800e3cc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800e4f2:	2800      	cmp	r0, #0
 800e4f4:	d0e0      	beq.n	800e4b8 <vTaskDelay+0x4>
 800e4f6:	e7e9      	b.n	800e4cc <vTaskDelay+0x18>
 800e4f8:	20014a4c 	.word	0x20014a4c

0800e4fc <vTaskSwitchContext>:
{
 800e4fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e4fe:	4b1f      	ldr	r3, [pc, #124]	; (800e57c <vTaskSwitchContext+0x80>)
 800e500:	681a      	ldr	r2, [r3, #0]
 800e502:	4b1f      	ldr	r3, [pc, #124]	; (800e580 <vTaskSwitchContext+0x84>)
 800e504:	b112      	cbz	r2, 800e50c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800e506:	2201      	movs	r2, #1
 800e508:	601a      	str	r2, [r3, #0]
}
 800e50a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		taskCHECK_FOR_STACK_OVERFLOW();
 800e50c:	4c1d      	ldr	r4, [pc, #116]	; (800e584 <vTaskSwitchContext+0x88>)
		xYieldPending = pdFALSE;
 800e50e:	601a      	str	r2, [r3, #0]
		taskCHECK_FOR_STACK_OVERFLOW();
 800e510:	6822      	ldr	r2, [r4, #0]
 800e512:	6823      	ldr	r3, [r4, #0]
 800e514:	6812      	ldr	r2, [r2, #0]
 800e516:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e518:	429a      	cmp	r2, r3
 800e51a:	d804      	bhi.n	800e526 <vTaskSwitchContext+0x2a>
 800e51c:	6820      	ldr	r0, [r4, #0]
 800e51e:	6821      	ldr	r1, [r4, #0]
 800e520:	3134      	adds	r1, #52	; 0x34
 800e522:	f7f2 f9df 	bl	80008e4 <vApplicationStackOverflowHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e526:	4e18      	ldr	r6, [pc, #96]	; (800e588 <vTaskSwitchContext+0x8c>)
 800e528:	4918      	ldr	r1, [pc, #96]	; (800e58c <vTaskSwitchContext+0x90>)
 800e52a:	6832      	ldr	r2, [r6, #0]
 800e52c:	2714      	movs	r7, #20
 800e52e:	fb07 f302 	mul.w	r3, r7, r2
 800e532:	18c8      	adds	r0, r1, r3
 800e534:	58cd      	ldr	r5, [r1, r3]
 800e536:	b1a5      	cbz	r5, 800e562 <vTaskSwitchContext+0x66>
 800e538:	6845      	ldr	r5, [r0, #4]
 800e53a:	3308      	adds	r3, #8
 800e53c:	686d      	ldr	r5, [r5, #4]
 800e53e:	6045      	str	r5, [r0, #4]
 800e540:	440b      	add	r3, r1
 800e542:	429d      	cmp	r5, r3
 800e544:	bf04      	itt	eq
 800e546:	686b      	ldreq	r3, [r5, #4]
 800e548:	6043      	streq	r3, [r0, #4]
 800e54a:	2314      	movs	r3, #20
 800e54c:	fb03 1102 	mla	r1, r3, r2, r1
 800e550:	684b      	ldr	r3, [r1, #4]
 800e552:	68db      	ldr	r3, [r3, #12]
 800e554:	6023      	str	r3, [r4, #0]
 800e556:	6032      	str	r2, [r6, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e558:	6823      	ldr	r3, [r4, #0]
 800e55a:	4a0d      	ldr	r2, [pc, #52]	; (800e590 <vTaskSwitchContext+0x94>)
 800e55c:	3358      	adds	r3, #88	; 0x58
 800e55e:	6013      	str	r3, [r2, #0]
}
 800e560:	e7d3      	b.n	800e50a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e562:	b942      	cbnz	r2, 800e576 <vTaskSwitchContext+0x7a>
 800e564:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e568:	f383 8811 	msr	BASEPRI, r3
 800e56c:	f3bf 8f6f 	isb	sy
 800e570:	f3bf 8f4f 	dsb	sy
 800e574:	e7fe      	b.n	800e574 <vTaskSwitchContext+0x78>
 800e576:	3a01      	subs	r2, #1
 800e578:	e7d9      	b.n	800e52e <vTaskSwitchContext+0x32>
 800e57a:	bf00      	nop
 800e57c:	20014a4c 	.word	0x20014a4c
 800e580:	20014ad0 	.word	0x20014ad0
 800e584:	200145d8 	.word	0x200145d8
 800e588:	20014a54 	.word	0x20014a54
 800e58c:	200145e4 	.word	0x200145e4
 800e590:	20000120 	.word	0x20000120

0800e594 <vTaskPlaceOnEventList>:
{
 800e594:	b510      	push	{r4, lr}
 800e596:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800e598:	b940      	cbnz	r0, 800e5ac <vTaskPlaceOnEventList+0x18>
 800e59a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e59e:	f383 8811 	msr	BASEPRI, r3
 800e5a2:	f3bf 8f6f 	isb	sy
 800e5a6:	f3bf 8f4f 	dsb	sy
 800e5aa:	e7fe      	b.n	800e5aa <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e5ac:	4b05      	ldr	r3, [pc, #20]	; (800e5c4 <vTaskPlaceOnEventList+0x30>)
 800e5ae:	6819      	ldr	r1, [r3, #0]
 800e5b0:	3118      	adds	r1, #24
 800e5b2:	f7fe fd5b 	bl	800d06c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e5b6:	4620      	mov	r0, r4
 800e5b8:	2101      	movs	r1, #1
}
 800e5ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e5be:	f7ff bca9 	b.w	800df14 <prvAddCurrentTaskToDelayedList>
 800e5c2:	bf00      	nop
 800e5c4:	200145d8 	.word	0x200145d8

0800e5c8 <vTaskPlaceOnEventListRestricted>:
	{
 800e5c8:	b538      	push	{r3, r4, r5, lr}
 800e5ca:	460d      	mov	r5, r1
 800e5cc:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800e5ce:	b940      	cbnz	r0, 800e5e2 <vTaskPlaceOnEventListRestricted+0x1a>
 800e5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5d4:	f383 8811 	msr	BASEPRI, r3
 800e5d8:	f3bf 8f6f 	isb	sy
 800e5dc:	f3bf 8f4f 	dsb	sy
 800e5e0:	e7fe      	b.n	800e5e0 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e5e2:	4b07      	ldr	r3, [pc, #28]	; (800e600 <vTaskPlaceOnEventListRestricted+0x38>)
 800e5e4:	6819      	ldr	r1, [r3, #0]
 800e5e6:	3118      	adds	r1, #24
 800e5e8:	f7fe fd34 	bl	800d054 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800e5ec:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e5ee:	4621      	mov	r1, r4
 800e5f0:	bf0c      	ite	eq
 800e5f2:	4628      	moveq	r0, r5
 800e5f4:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800e5f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e5fc:	f7ff bc8a 	b.w	800df14 <prvAddCurrentTaskToDelayedList>
 800e600:	200145d8 	.word	0x200145d8

0800e604 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e604:	68c3      	ldr	r3, [r0, #12]
{
 800e606:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e608:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800e60a:	b944      	cbnz	r4, 800e61e <xTaskRemoveFromEventList+0x1a>
 800e60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e610:	f383 8811 	msr	BASEPRI, r3
 800e614:	f3bf 8f6f 	isb	sy
 800e618:	f3bf 8f4f 	dsb	sy
 800e61c:	e7fe      	b.n	800e61c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800e61e:	f104 0118 	add.w	r1, r4, #24
 800e622:	4608      	mov	r0, r1
 800e624:	9101      	str	r1, [sp, #4]
 800e626:	f7fe fd38 	bl	800d09a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e62a:	4b12      	ldr	r3, [pc, #72]	; (800e674 <xTaskRemoveFromEventList+0x70>)
 800e62c:	9901      	ldr	r1, [sp, #4]
 800e62e:	681b      	ldr	r3, [r3, #0]
 800e630:	b9eb      	cbnz	r3, 800e66e <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800e632:	1d21      	adds	r1, r4, #4
 800e634:	4608      	mov	r0, r1
 800e636:	9101      	str	r1, [sp, #4]
 800e638:	f7fe fd2f 	bl	800d09a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800e63c:	4a0e      	ldr	r2, [pc, #56]	; (800e678 <xTaskRemoveFromEventList+0x74>)
 800e63e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e640:	6810      	ldr	r0, [r2, #0]
 800e642:	9901      	ldr	r1, [sp, #4]
 800e644:	4283      	cmp	r3, r0
 800e646:	bf88      	it	hi
 800e648:	6013      	strhi	r3, [r2, #0]
 800e64a:	4a0c      	ldr	r2, [pc, #48]	; (800e67c <xTaskRemoveFromEventList+0x78>)
 800e64c:	2014      	movs	r0, #20
 800e64e:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e652:	f7fe fcff 	bl	800d054 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800e656:	4b0a      	ldr	r3, [pc, #40]	; (800e680 <xTaskRemoveFromEventList+0x7c>)
 800e658:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e65a:	681b      	ldr	r3, [r3, #0]
 800e65c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e65e:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800e660:	bf85      	ittet	hi
 800e662:	4b08      	ldrhi	r3, [pc, #32]	; (800e684 <xTaskRemoveFromEventList+0x80>)
 800e664:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800e666:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800e668:	6018      	strhi	r0, [r3, #0]
}
 800e66a:	b002      	add	sp, #8
 800e66c:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e66e:	4806      	ldr	r0, [pc, #24]	; (800e688 <xTaskRemoveFromEventList+0x84>)
 800e670:	e7ef      	b.n	800e652 <xTaskRemoveFromEventList+0x4e>
 800e672:	bf00      	nop
 800e674:	20014a4c 	.word	0x20014a4c
 800e678:	20014a54 	.word	0x20014a54
 800e67c:	200145e4 	.word	0x200145e4
 800e680:	200145d8 	.word	0x200145d8
 800e684:	20014ad0 	.word	0x20014ad0
 800e688:	20014a8c 	.word	0x20014a8c

0800e68c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800e68c:	4b03      	ldr	r3, [pc, #12]	; (800e69c <vTaskInternalSetTimeOutState+0x10>)
 800e68e:	681b      	ldr	r3, [r3, #0]
 800e690:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e692:	4b03      	ldr	r3, [pc, #12]	; (800e6a0 <vTaskInternalSetTimeOutState+0x14>)
 800e694:	681b      	ldr	r3, [r3, #0]
 800e696:	6043      	str	r3, [r0, #4]
}
 800e698:	4770      	bx	lr
 800e69a:	bf00      	nop
 800e69c:	20014a84 	.word	0x20014a84
 800e6a0:	20014acc 	.word	0x20014acc

0800e6a4 <xTaskCheckForTimeOut>:
{
 800e6a4:	b570      	push	{r4, r5, r6, lr}
 800e6a6:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800e6a8:	4605      	mov	r5, r0
 800e6aa:	b940      	cbnz	r0, 800e6be <xTaskCheckForTimeOut+0x1a>
 800e6ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6b0:	f383 8811 	msr	BASEPRI, r3
 800e6b4:	f3bf 8f6f 	isb	sy
 800e6b8:	f3bf 8f4f 	dsb	sy
 800e6bc:	e7fe      	b.n	800e6bc <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800e6be:	b941      	cbnz	r1, 800e6d2 <xTaskCheckForTimeOut+0x2e>
 800e6c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6c4:	f383 8811 	msr	BASEPRI, r3
 800e6c8:	f3bf 8f6f 	isb	sy
 800e6cc:	f3bf 8f4f 	dsb	sy
 800e6d0:	e7fe      	b.n	800e6d0 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800e6d2:	f7fe fd5f 	bl	800d194 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800e6d6:	4b0f      	ldr	r3, [pc, #60]	; (800e714 <xTaskCheckForTimeOut+0x70>)
 800e6d8:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800e6da:	6823      	ldr	r3, [r4, #0]
 800e6dc:	1c5a      	adds	r2, r3, #1
 800e6de:	d010      	beq.n	800e702 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e6e0:	480d      	ldr	r0, [pc, #52]	; (800e718 <xTaskCheckForTimeOut+0x74>)
 800e6e2:	682e      	ldr	r6, [r5, #0]
 800e6e4:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e6e6:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e6e8:	4286      	cmp	r6, r0
 800e6ea:	d001      	beq.n	800e6f0 <xTaskCheckForTimeOut+0x4c>
 800e6ec:	428a      	cmp	r2, r1
 800e6ee:	d90f      	bls.n	800e710 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e6f0:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800e6f2:	4283      	cmp	r3, r0
 800e6f4:	d90a      	bls.n	800e70c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800e6f6:	1a5b      	subs	r3, r3, r1
 800e6f8:	4413      	add	r3, r2
 800e6fa:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800e6fc:	4628      	mov	r0, r5
 800e6fe:	f7ff ffc5 	bl	800e68c <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800e702:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e704:	f7fe fd66 	bl	800d1d4 <vPortExitCritical>
}
 800e708:	4620      	mov	r0, r4
 800e70a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800e70c:	2300      	movs	r3, #0
 800e70e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800e710:	2401      	movs	r4, #1
 800e712:	e7f7      	b.n	800e704 <xTaskCheckForTimeOut+0x60>
 800e714:	20014acc 	.word	0x20014acc
 800e718:	20014a84 	.word	0x20014a84

0800e71c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800e71c:	4b01      	ldr	r3, [pc, #4]	; (800e724 <vTaskMissedYield+0x8>)
 800e71e:	2201      	movs	r2, #1
 800e720:	601a      	str	r2, [r3, #0]
}
 800e722:	4770      	bx	lr
 800e724:	20014ad0 	.word	0x20014ad0

0800e728 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800e728:	4b05      	ldr	r3, [pc, #20]	; (800e740 <xTaskGetSchedulerState+0x18>)
 800e72a:	681b      	ldr	r3, [r3, #0]
 800e72c:	b133      	cbz	r3, 800e73c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e72e:	4b05      	ldr	r3, [pc, #20]	; (800e744 <xTaskGetSchedulerState+0x1c>)
 800e730:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800e732:	2b00      	cmp	r3, #0
 800e734:	bf0c      	ite	eq
 800e736:	2002      	moveq	r0, #2
 800e738:	2000      	movne	r0, #0
 800e73a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800e73c:	2001      	movs	r0, #1
	}
 800e73e:	4770      	bx	lr
 800e740:	20014aa0 	.word	0x20014aa0
 800e744:	20014a4c 	.word	0x20014a4c

0800e748 <xTaskPriorityInherit>:
	{
 800e748:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800e74a:	4604      	mov	r4, r0
 800e74c:	b348      	cbz	r0, 800e7a2 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800e74e:	4d1c      	ldr	r5, [pc, #112]	; (800e7c0 <xTaskPriorityInherit+0x78>)
 800e750:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e752:	682a      	ldr	r2, [r5, #0]
 800e754:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e756:	4293      	cmp	r3, r2
 800e758:	d229      	bcs.n	800e7ae <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e75a:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e75c:	4e19      	ldr	r6, [pc, #100]	; (800e7c4 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e75e:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e760:	bfa1      	itttt	ge
 800e762:	682a      	ldrge	r2, [r5, #0]
 800e764:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800e766:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800e76a:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e76c:	2214      	movs	r2, #20
 800e76e:	fb02 6303 	mla	r3, r2, r3, r6
 800e772:	6942      	ldr	r2, [r0, #20]
 800e774:	429a      	cmp	r2, r3
 800e776:	d116      	bne.n	800e7a6 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e778:	1d01      	adds	r1, r0, #4
 800e77a:	4608      	mov	r0, r1
 800e77c:	9101      	str	r1, [sp, #4]
 800e77e:	f7fe fc8c 	bl	800d09a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e782:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e784:	4a10      	ldr	r2, [pc, #64]	; (800e7c8 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e786:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e788:	6810      	ldr	r0, [r2, #0]
 800e78a:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e78c:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e78e:	4283      	cmp	r3, r0
 800e790:	f04f 0014 	mov.w	r0, #20
 800e794:	fb00 6003 	mla	r0, r0, r3, r6
 800e798:	bf88      	it	hi
 800e79a:	6013      	strhi	r3, [r2, #0]
 800e79c:	f7fe fc5a 	bl	800d054 <vListInsertEnd>
				xReturn = pdTRUE;
 800e7a0:	2001      	movs	r0, #1
	}
 800e7a2:	b002      	add	sp, #8
 800e7a4:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e7a6:	682b      	ldr	r3, [r5, #0]
 800e7a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7aa:	62c3      	str	r3, [r0, #44]	; 0x2c
 800e7ac:	e7f8      	b.n	800e7a0 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800e7ae:	682b      	ldr	r3, [r5, #0]
 800e7b0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e7b2:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800e7b4:	42a0      	cmp	r0, r4
 800e7b6:	bf2c      	ite	cs
 800e7b8:	2000      	movcs	r0, #0
 800e7ba:	2001      	movcc	r0, #1
 800e7bc:	e7f1      	b.n	800e7a2 <xTaskPriorityInherit+0x5a>
 800e7be:	bf00      	nop
 800e7c0:	200145d8 	.word	0x200145d8
 800e7c4:	200145e4 	.word	0x200145e4
 800e7c8:	20014a54 	.word	0x20014a54

0800e7cc <xTaskPriorityDisinherit>:
	{
 800e7cc:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800e7ce:	b910      	cbnz	r0, 800e7d6 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800e7d0:	2000      	movs	r0, #0
	}
 800e7d2:	b002      	add	sp, #8
 800e7d4:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800e7d6:	4b1c      	ldr	r3, [pc, #112]	; (800e848 <xTaskPriorityDisinherit+0x7c>)
 800e7d8:	681c      	ldr	r4, [r3, #0]
 800e7da:	4284      	cmp	r4, r0
 800e7dc:	d008      	beq.n	800e7f0 <xTaskPriorityDisinherit+0x24>
 800e7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e2:	f383 8811 	msr	BASEPRI, r3
 800e7e6:	f3bf 8f6f 	isb	sy
 800e7ea:	f3bf 8f4f 	dsb	sy
 800e7ee:	e7fe      	b.n	800e7ee <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800e7f0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800e7f2:	b943      	cbnz	r3, 800e806 <xTaskPriorityDisinherit+0x3a>
 800e7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7f8:	f383 8811 	msr	BASEPRI, r3
 800e7fc:	f3bf 8f6f 	isb	sy
 800e800:	f3bf 8f4f 	dsb	sy
 800e804:	e7fe      	b.n	800e804 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e806:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e808:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800e80a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e80c:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800e80e:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e810:	d0de      	beq.n	800e7d0 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800e812:	2b00      	cmp	r3, #0
 800e814:	d1dc      	bne.n	800e7d0 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e816:	1d21      	adds	r1, r4, #4
 800e818:	4608      	mov	r0, r1
 800e81a:	9101      	str	r1, [sp, #4]
 800e81c:	f7fe fc3d 	bl	800d09a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e820:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800e822:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e824:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e826:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800e82a:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800e82c:	4a07      	ldr	r2, [pc, #28]	; (800e84c <xTaskPriorityDisinherit+0x80>)
 800e82e:	6810      	ldr	r0, [r2, #0]
 800e830:	4283      	cmp	r3, r0
 800e832:	bf88      	it	hi
 800e834:	6013      	strhi	r3, [r2, #0]
 800e836:	4a06      	ldr	r2, [pc, #24]	; (800e850 <xTaskPriorityDisinherit+0x84>)
 800e838:	2014      	movs	r0, #20
 800e83a:	fb00 2003 	mla	r0, r0, r3, r2
 800e83e:	f7fe fc09 	bl	800d054 <vListInsertEnd>
					xReturn = pdTRUE;
 800e842:	2001      	movs	r0, #1
		return xReturn;
 800e844:	e7c5      	b.n	800e7d2 <xTaskPriorityDisinherit+0x6>
 800e846:	bf00      	nop
 800e848:	200145d8 	.word	0x200145d8
 800e84c:	20014a54 	.word	0x20014a54
 800e850:	200145e4 	.word	0x200145e4

0800e854 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800e854:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800e856:	4604      	mov	r4, r0
 800e858:	2800      	cmp	r0, #0
 800e85a:	d044      	beq.n	800e8e6 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800e85c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800e85e:	b942      	cbnz	r2, 800e872 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800e860:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e864:	f383 8811 	msr	BASEPRI, r3
 800e868:	f3bf 8f6f 	isb	sy
 800e86c:	f3bf 8f4f 	dsb	sy
 800e870:	e7fe      	b.n	800e870 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800e872:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800e874:	4299      	cmp	r1, r3
 800e876:	bf38      	it	cc
 800e878:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800e87a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e87c:	428b      	cmp	r3, r1
 800e87e:	d032      	beq.n	800e8e6 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800e880:	2a01      	cmp	r2, #1
 800e882:	d130      	bne.n	800e8e6 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800e884:	4a19      	ldr	r2, [pc, #100]	; (800e8ec <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800e886:	6812      	ldr	r2, [r2, #0]
 800e888:	4282      	cmp	r2, r0
 800e88a:	d108      	bne.n	800e89e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800e88c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e890:	f383 8811 	msr	BASEPRI, r3
 800e894:	f3bf 8f6f 	isb	sy
 800e898:	f3bf 8f4f 	dsb	sy
 800e89c:	e7fe      	b.n	800e89c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e89e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e8a0:	4d13      	ldr	r5, [pc, #76]	; (800e8f0 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800e8a2:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e8a4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e8a6:	f04f 0214 	mov.w	r2, #20
 800e8aa:	fb02 5303 	mla	r3, r2, r3, r5
 800e8ae:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e8b0:	bfa4      	itt	ge
 800e8b2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800e8b6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800e8b8:	429a      	cmp	r2, r3
 800e8ba:	d114      	bne.n	800e8e6 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e8bc:	1d01      	adds	r1, r0, #4
 800e8be:	4608      	mov	r0, r1
 800e8c0:	9101      	str	r1, [sp, #4]
 800e8c2:	f7fe fbea 	bl	800d09a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800e8c6:	4a0b      	ldr	r2, [pc, #44]	; (800e8f4 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800e8c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e8ca:	6810      	ldr	r0, [r2, #0]
 800e8cc:	9901      	ldr	r1, [sp, #4]
 800e8ce:	4283      	cmp	r3, r0
 800e8d0:	f04f 0014 	mov.w	r0, #20
 800e8d4:	fb00 5003 	mla	r0, r0, r3, r5
 800e8d8:	bf88      	it	hi
 800e8da:	6013      	strhi	r3, [r2, #0]
	}
 800e8dc:	b003      	add	sp, #12
 800e8de:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800e8e2:	f7fe bbb7 	b.w	800d054 <vListInsertEnd>
	}
 800e8e6:	b003      	add	sp, #12
 800e8e8:	bd30      	pop	{r4, r5, pc}
 800e8ea:	bf00      	nop
 800e8ec:	200145d8 	.word	0x200145d8
 800e8f0:	200145e4 	.word	0x200145e4
 800e8f4:	20014a54 	.word	0x20014a54

0800e8f8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800e8f8:	4b04      	ldr	r3, [pc, #16]	; (800e90c <pvTaskIncrementMutexHeldCount+0x14>)
 800e8fa:	681a      	ldr	r2, [r3, #0]
 800e8fc:	b11a      	cbz	r2, 800e906 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800e8fe:	6819      	ldr	r1, [r3, #0]
 800e900:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800e902:	3201      	adds	r2, #1
 800e904:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800e906:	6818      	ldr	r0, [r3, #0]
	}
 800e908:	4770      	bx	lr
 800e90a:	bf00      	nop
 800e90c:	200145d8 	.word	0x200145d8

0800e910 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800e910:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800e912:	4c11      	ldr	r4, [pc, #68]	; (800e958 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800e914:	f7fe fc3e 	bl	800d194 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800e918:	6825      	ldr	r5, [r4, #0]
 800e91a:	b9bd      	cbnz	r5, 800e94c <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800e91c:	4f0f      	ldr	r7, [pc, #60]	; (800e95c <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800e91e:	4e10      	ldr	r6, [pc, #64]	; (800e960 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800e920:	4638      	mov	r0, r7
 800e922:	f7fe fb89 	bl	800d038 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800e926:	4630      	mov	r0, r6
 800e928:	f7fe fb86 	bl	800d038 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800e92c:	4b0d      	ldr	r3, [pc, #52]	; (800e964 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e92e:	4a0e      	ldr	r2, [pc, #56]	; (800e968 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800e930:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800e932:	4b0e      	ldr	r3, [pc, #56]	; (800e96c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e934:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800e936:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e938:	200a      	movs	r0, #10
 800e93a:	4b0d      	ldr	r3, [pc, #52]	; (800e970 <prvCheckForValidListAndQueue+0x60>)
 800e93c:	9500      	str	r5, [sp, #0]
 800e93e:	f7fe fe3a 	bl	800d5b6 <xQueueGenericCreateStatic>
 800e942:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800e944:	b110      	cbz	r0, 800e94c <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800e946:	490b      	ldr	r1, [pc, #44]	; (800e974 <prvCheckForValidListAndQueue+0x64>)
 800e948:	f7ff fa04 	bl	800dd54 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800e94c:	b003      	add	sp, #12
 800e94e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800e952:	f7fe bc3f 	b.w	800d1d4 <vPortExitCritical>
 800e956:	bf00      	nop
 800e958:	20014bf8 	.word	0x20014bf8
 800e95c:	20014b7c 	.word	0x20014b7c
 800e960:	20014b90 	.word	0x20014b90
 800e964:	20014ad4 	.word	0x20014ad4
 800e968:	20014adc 	.word	0x20014adc
 800e96c:	20014ad8 	.word	0x20014ad8
 800e970:	20014ba8 	.word	0x20014ba8
 800e974:	0802ad0c 	.word	0x0802ad0c

0800e978 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800e978:	4291      	cmp	r1, r2
{
 800e97a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800e97c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800e97e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800e980:	d80a      	bhi.n	800e998 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e982:	1ad2      	subs	r2, r2, r3
 800e984:	6983      	ldr	r3, [r0, #24]
 800e986:	429a      	cmp	r2, r3
 800e988:	d20d      	bcs.n	800e9a6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800e98a:	4b08      	ldr	r3, [pc, #32]	; (800e9ac <prvInsertTimerInActiveList+0x34>)
 800e98c:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e98e:	6818      	ldr	r0, [r3, #0]
 800e990:	f7fe fb6c 	bl	800d06c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800e994:	2000      	movs	r0, #0
}
 800e996:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800e998:	429a      	cmp	r2, r3
 800e99a:	d201      	bcs.n	800e9a0 <prvInsertTimerInActiveList+0x28>
 800e99c:	4299      	cmp	r1, r3
 800e99e:	d202      	bcs.n	800e9a6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800e9a0:	4b03      	ldr	r3, [pc, #12]	; (800e9b0 <prvInsertTimerInActiveList+0x38>)
 800e9a2:	1d01      	adds	r1, r0, #4
 800e9a4:	e7f3      	b.n	800e98e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800e9a6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800e9a8:	e7f5      	b.n	800e996 <prvInsertTimerInActiveList+0x1e>
 800e9aa:	bf00      	nop
 800e9ac:	20014ad8 	.word	0x20014ad8
 800e9b0:	20014ad4 	.word	0x20014ad4

0800e9b4 <xTimerCreateTimerTask>:
{
 800e9b4:	b510      	push	{r4, lr}
 800e9b6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800e9b8:	f7ff ffaa 	bl	800e910 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800e9bc:	4b12      	ldr	r3, [pc, #72]	; (800ea08 <xTimerCreateTimerTask+0x54>)
 800e9be:	681b      	ldr	r3, [r3, #0]
 800e9c0:	b1b3      	cbz	r3, 800e9f0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800e9c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800e9c4:	aa07      	add	r2, sp, #28
 800e9c6:	a906      	add	r1, sp, #24
 800e9c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800e9ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800e9ce:	f7fe fa2d 	bl	800ce2c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800e9d2:	9b05      	ldr	r3, [sp, #20]
 800e9d4:	9302      	str	r3, [sp, #8]
 800e9d6:	9b06      	ldr	r3, [sp, #24]
 800e9d8:	9301      	str	r3, [sp, #4]
 800e9da:	2302      	movs	r3, #2
 800e9dc:	9300      	str	r3, [sp, #0]
 800e9de:	9a07      	ldr	r2, [sp, #28]
 800e9e0:	490a      	ldr	r1, [pc, #40]	; (800ea0c <xTimerCreateTimerTask+0x58>)
 800e9e2:	480b      	ldr	r0, [pc, #44]	; (800ea10 <xTimerCreateTimerTask+0x5c>)
 800e9e4:	4623      	mov	r3, r4
 800e9e6:	f7ff fb8f 	bl	800e108 <xTaskCreateStatic>
 800e9ea:	4b0a      	ldr	r3, [pc, #40]	; (800ea14 <xTimerCreateTimerTask+0x60>)
 800e9ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800e9ee:	b940      	cbnz	r0, 800ea02 <xTimerCreateTimerTask+0x4e>
 800e9f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f4:	f383 8811 	msr	BASEPRI, r3
 800e9f8:	f3bf 8f6f 	isb	sy
 800e9fc:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ea00:	e7fe      	b.n	800ea00 <xTimerCreateTimerTask+0x4c>
}
 800ea02:	2001      	movs	r0, #1
 800ea04:	b008      	add	sp, #32
 800ea06:	bd10      	pop	{r4, pc}
 800ea08:	20014bf8 	.word	0x20014bf8
 800ea0c:	0802ad11 	.word	0x0802ad11
 800ea10:	0800eb1d 	.word	0x0800eb1d
 800ea14:	20014bfc 	.word	0x20014bfc

0800ea18 <xTimerGenericCommand>:
{
 800ea18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ea1a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800ea1c:	4604      	mov	r4, r0
{
 800ea1e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800ea20:	b940      	cbnz	r0, 800ea34 <xTimerGenericCommand+0x1c>
 800ea22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea26:	f383 8811 	msr	BASEPRI, r3
 800ea2a:	f3bf 8f6f 	isb	sy
 800ea2e:	f3bf 8f4f 	dsb	sy
 800ea32:	e7fe      	b.n	800ea32 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800ea34:	4d0d      	ldr	r5, [pc, #52]	; (800ea6c <xTimerGenericCommand+0x54>)
 800ea36:	6828      	ldr	r0, [r5, #0]
 800ea38:	b180      	cbz	r0, 800ea5c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ea3a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ea3c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ea40:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ea42:	dc0d      	bgt.n	800ea60 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ea44:	f7ff fe70 	bl	800e728 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ea48:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ea4a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ea4c:	bf08      	it	eq
 800ea4e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800ea50:	6828      	ldr	r0, [r5, #0]
 800ea52:	bf18      	it	ne
 800ea54:	461a      	movne	r2, r3
 800ea56:	4669      	mov	r1, sp
 800ea58:	f7fe fe62 	bl	800d720 <xQueueGenericSend>
}
 800ea5c:	b004      	add	sp, #16
 800ea5e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ea60:	2300      	movs	r3, #0
 800ea62:	4669      	mov	r1, sp
 800ea64:	f7fe ff0f 	bl	800d886 <xQueueGenericSendFromISR>
 800ea68:	e7f8      	b.n	800ea5c <xTimerGenericCommand+0x44>
 800ea6a:	bf00      	nop
 800ea6c:	20014bf8 	.word	0x20014bf8

0800ea70 <prvSampleTimeNow>:
{
 800ea70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800ea74:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800eb18 <prvSampleTimeNow+0xa8>
{
 800ea78:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800ea7a:	f7ff fc03 	bl	800e284 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ea7e:	f8d8 3000 	ldr.w	r3, [r8]
 800ea82:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800ea84:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ea86:	d940      	bls.n	800eb0a <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ea88:	4f21      	ldr	r7, [pc, #132]	; (800eb10 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ea8a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ea8e:	683b      	ldr	r3, [r7, #0]
 800ea90:	681a      	ldr	r2, [r3, #0]
 800ea92:	b95a      	cbnz	r2, 800eaac <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ea94:	4a1f      	ldr	r2, [pc, #124]	; (800eb14 <prvSampleTimeNow+0xa4>)
 800ea96:	6811      	ldr	r1, [r2, #0]
 800ea98:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ea9a:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ea9c:	2301      	movs	r3, #1
}
 800ea9e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800eaa0:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800eaa2:	f8c8 5000 	str.w	r5, [r8]
}
 800eaa6:	b004      	add	sp, #16
 800eaa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eaac:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eaae:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eab0:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eab4:	1d21      	adds	r1, r4, #4
 800eab6:	4608      	mov	r0, r1
 800eab8:	9103      	str	r1, [sp, #12]
 800eaba:	f7fe faee 	bl	800d09a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eabe:	6a23      	ldr	r3, [r4, #32]
 800eac0:	4620      	mov	r0, r4
 800eac2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eac4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800eac8:	9903      	ldr	r1, [sp, #12]
 800eaca:	f013 0f04 	tst.w	r3, #4
 800eace:	d0de      	beq.n	800ea8e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ead0:	69a3      	ldr	r3, [r4, #24]
 800ead2:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800ead4:	459a      	cmp	sl, r3
 800ead6:	d205      	bcs.n	800eae4 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ead8:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800eada:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eadc:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eade:	f7fe fac5 	bl	800d06c <vListInsert>
 800eae2:	e7d4      	b.n	800ea8e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800eae4:	2300      	movs	r3, #0
 800eae6:	f8cd 9000 	str.w	r9, [sp]
 800eaea:	4652      	mov	r2, sl
 800eaec:	4619      	mov	r1, r3
 800eaee:	4620      	mov	r0, r4
 800eaf0:	f7ff ff92 	bl	800ea18 <xTimerGenericCommand>
				configASSERT( xResult );
 800eaf4:	2800      	cmp	r0, #0
 800eaf6:	d1ca      	bne.n	800ea8e <prvSampleTimeNow+0x1e>
 800eaf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eafc:	f383 8811 	msr	BASEPRI, r3
 800eb00:	f3bf 8f6f 	isb	sy
 800eb04:	f3bf 8f4f 	dsb	sy
 800eb08:	e7fe      	b.n	800eb08 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800eb0a:	2300      	movs	r3, #0
 800eb0c:	e7c7      	b.n	800ea9e <prvSampleTimeNow+0x2e>
 800eb0e:	bf00      	nop
 800eb10:	20014ad4 	.word	0x20014ad4
 800eb14:	20014ad8 	.word	0x20014ad8
 800eb18:	20014ba4 	.word	0x20014ba4

0800eb1c <prvTimerTask>:
{
 800eb1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eb20:	4d6e      	ldr	r5, [pc, #440]	; (800ecdc <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800eb22:	4e6f      	ldr	r6, [pc, #444]	; (800ece0 <prvTimerTask+0x1c4>)
{
 800eb24:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eb26:	682b      	ldr	r3, [r5, #0]
 800eb28:	f8d3 8000 	ldr.w	r8, [r3]
 800eb2c:	f1b8 0f00 	cmp.w	r8, #0
 800eb30:	d035      	beq.n	800eb9e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eb32:	68db      	ldr	r3, [r3, #12]
 800eb34:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eb38:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800eb3a:	f7ff fb9b 	bl	800e274 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800eb3e:	a804      	add	r0, sp, #16
 800eb40:	f7ff ff96 	bl	800ea70 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800eb44:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800eb46:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800eb48:	2b00      	cmp	r3, #0
 800eb4a:	d169      	bne.n	800ec20 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800eb4c:	2c00      	cmp	r4, #0
 800eb4e:	d14c      	bne.n	800ebea <prvTimerTask+0xce>
 800eb50:	4540      	cmp	r0, r8
 800eb52:	d350      	bcc.n	800ebf6 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800eb54:	f7ff fc3a 	bl	800e3cc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eb58:	682b      	ldr	r3, [r5, #0]
 800eb5a:	68db      	ldr	r3, [r3, #12]
 800eb5c:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eb5e:	1d38      	adds	r0, r7, #4
 800eb60:	f7fe fa9b 	bl	800d09a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eb64:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800eb68:	0758      	lsls	r0, r3, #29
 800eb6a:	d51a      	bpl.n	800eba2 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800eb6c:	69b9      	ldr	r1, [r7, #24]
 800eb6e:	4643      	mov	r3, r8
 800eb70:	464a      	mov	r2, r9
 800eb72:	4441      	add	r1, r8
 800eb74:	4638      	mov	r0, r7
 800eb76:	f7ff feff 	bl	800e978 <prvInsertTimerInActiveList>
 800eb7a:	b1b0      	cbz	r0, 800ebaa <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800eb7c:	9400      	str	r4, [sp, #0]
 800eb7e:	4623      	mov	r3, r4
 800eb80:	4642      	mov	r2, r8
 800eb82:	4621      	mov	r1, r4
 800eb84:	4638      	mov	r0, r7
 800eb86:	f7ff ff47 	bl	800ea18 <xTimerGenericCommand>
			configASSERT( xResult );
 800eb8a:	b970      	cbnz	r0, 800ebaa <prvTimerTask+0x8e>
 800eb8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb90:	f383 8811 	msr	BASEPRI, r3
 800eb94:	f3bf 8f6f 	isb	sy
 800eb98:	f3bf 8f4f 	dsb	sy
 800eb9c:	e7fe      	b.n	800eb9c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800eb9e:	2401      	movs	r4, #1
 800eba0:	e7cb      	b.n	800eb3a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800eba2:	f023 0301 	bic.w	r3, r3, #1
 800eba6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ebaa:	6a3b      	ldr	r3, [r7, #32]
 800ebac:	4638      	mov	r0, r7
 800ebae:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ebb0:	6830      	ldr	r0, [r6, #0]
 800ebb2:	2200      	movs	r2, #0
 800ebb4:	a904      	add	r1, sp, #16
 800ebb6:	f7fe ff1c 	bl	800d9f2 <xQueueReceive>
 800ebba:	2800      	cmp	r0, #0
 800ebbc:	d0b3      	beq.n	800eb26 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ebbe:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ebc0:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ebc2:	2b00      	cmp	r3, #0
 800ebc4:	db2f      	blt.n	800ec26 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ebc6:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ebc8:	6963      	ldr	r3, [r4, #20]
 800ebca:	2b00      	cmp	r3, #0
 800ebcc:	d132      	bne.n	800ec34 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ebce:	a803      	add	r0, sp, #12
 800ebd0:	f7ff ff4e 	bl	800ea70 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800ebd4:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ebd6:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800ebd8:	2b09      	cmp	r3, #9
 800ebda:	d8e9      	bhi.n	800ebb0 <prvTimerTask+0x94>
 800ebdc:	e8df f003 	tbb	[pc, r3]
 800ebe0:	572e2e2e 	.word	0x572e2e2e
 800ebe4:	2e2e765e 	.word	0x2e2e765e
 800ebe8:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ebea:	4b3e      	ldr	r3, [pc, #248]	; (800ece4 <prvTimerTask+0x1c8>)
 800ebec:	681b      	ldr	r3, [r3, #0]
 800ebee:	681c      	ldr	r4, [r3, #0]
 800ebf0:	fab4 f484 	clz	r4, r4
 800ebf4:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ebf6:	6830      	ldr	r0, [r6, #0]
 800ebf8:	4622      	mov	r2, r4
 800ebfa:	eba8 0109 	sub.w	r1, r8, r9
 800ebfe:	f7ff f8e6 	bl	800ddce <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ec02:	f7ff fbe3 	bl	800e3cc <xTaskResumeAll>
 800ec06:	2800      	cmp	r0, #0
 800ec08:	d1d2      	bne.n	800ebb0 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800ec0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec12:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec16:	f3bf 8f4f 	dsb	sy
 800ec1a:	f3bf 8f6f 	isb	sy
 800ec1e:	e7c7      	b.n	800ebb0 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800ec20:	f7ff fbd4 	bl	800e3cc <xTaskResumeAll>
}
 800ec24:	e7c4      	b.n	800ebb0 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ec26:	9b05      	ldr	r3, [sp, #20]
 800ec28:	9907      	ldr	r1, [sp, #28]
 800ec2a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800ec2c:	9b04      	ldr	r3, [sp, #16]
 800ec2e:	2b00      	cmp	r3, #0
 800ec30:	dbbe      	blt.n	800ebb0 <prvTimerTask+0x94>
 800ec32:	e7c8      	b.n	800ebc6 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ec34:	1d20      	adds	r0, r4, #4
 800ec36:	f7fe fa30 	bl	800d09a <uxListRemove>
 800ec3a:	e7c8      	b.n	800ebce <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ec3c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ec40:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ec42:	f043 0301 	orr.w	r3, r3, #1
 800ec46:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ec4a:	9b05      	ldr	r3, [sp, #20]
 800ec4c:	4620      	mov	r0, r4
 800ec4e:	4419      	add	r1, r3
 800ec50:	f7ff fe92 	bl	800e978 <prvInsertTimerInActiveList>
 800ec54:	2800      	cmp	r0, #0
 800ec56:	d0ab      	beq.n	800ebb0 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ec58:	6a23      	ldr	r3, [r4, #32]
 800ec5a:	4620      	mov	r0, r4
 800ec5c:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ec5e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ec62:	0759      	lsls	r1, r3, #29
 800ec64:	d5a4      	bpl.n	800ebb0 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ec66:	69a2      	ldr	r2, [r4, #24]
 800ec68:	9905      	ldr	r1, [sp, #20]
 800ec6a:	2300      	movs	r3, #0
 800ec6c:	440a      	add	r2, r1
 800ec6e:	9300      	str	r3, [sp, #0]
 800ec70:	4619      	mov	r1, r3
 800ec72:	4620      	mov	r0, r4
 800ec74:	f7ff fed0 	bl	800ea18 <xTimerGenericCommand>
							configASSERT( xResult );
 800ec78:	2800      	cmp	r0, #0
 800ec7a:	d199      	bne.n	800ebb0 <prvTimerTask+0x94>
 800ec7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec80:	f383 8811 	msr	BASEPRI, r3
 800ec84:	f3bf 8f6f 	isb	sy
 800ec88:	f3bf 8f4f 	dsb	sy
 800ec8c:	e7fe      	b.n	800ec8c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ec8e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ec92:	f023 0301 	bic.w	r3, r3, #1
 800ec96:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ec9a:	e789      	b.n	800ebb0 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ec9c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800eca0:	f043 0301 	orr.w	r3, r3, #1
 800eca4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800eca8:	9905      	ldr	r1, [sp, #20]
 800ecaa:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ecac:	b941      	cbnz	r1, 800ecc0 <prvTimerTask+0x1a4>
 800ecae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecb2:	f383 8811 	msr	BASEPRI, r3
 800ecb6:	f3bf 8f6f 	isb	sy
 800ecba:	f3bf 8f4f 	dsb	sy
 800ecbe:	e7fe      	b.n	800ecbe <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ecc0:	4603      	mov	r3, r0
 800ecc2:	4401      	add	r1, r0
 800ecc4:	4620      	mov	r0, r4
 800ecc6:	f7ff fe57 	bl	800e978 <prvInsertTimerInActiveList>
					break;
 800ecca:	e771      	b.n	800ebb0 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800eccc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ecd0:	079a      	lsls	r2, r3, #30
 800ecd2:	d4de      	bmi.n	800ec92 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800ecd4:	4620      	mov	r0, r4
 800ecd6:	f7fe f971 	bl	800cfbc <vPortFree>
 800ecda:	e769      	b.n	800ebb0 <prvTimerTask+0x94>
 800ecdc:	20014ad4 	.word	0x20014ad4
 800ece0:	20014bf8 	.word	0x20014bf8
 800ece4:	20014ad8 	.word	0x20014ad8

0800ece8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ece8:	8880      	ldrh	r0, [r0, #4]
 800ecea:	4770      	bx	lr

0800ecec <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ecec:	2300      	movs	r3, #0
 800ecee:	8083      	strh	r3, [r0, #4]
 800ecf0:	4770      	bx	lr
	...

0800ecf4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ecf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ecf6:	6803      	ldr	r3, [r0, #0]
 800ecf8:	4605      	mov	r5, r0
 800ecfa:	460e      	mov	r6, r1
 800ecfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ecfe:	2100      	movs	r1, #0
 800ed00:	4798      	blx	r3
 800ed02:	682b      	ldr	r3, [r5, #0]
 800ed04:	4604      	mov	r4, r0
 800ed06:	6a1b      	ldr	r3, [r3, #32]
 800ed08:	4628      	mov	r0, r5
 800ed0a:	4798      	blx	r3
 800ed0c:	88ab      	ldrh	r3, [r5, #4]
 800ed0e:	1b34      	subs	r4, r6, r4
 800ed10:	b2a4      	uxth	r4, r4
 800ed12:	fbb4 f4f0 	udiv	r4, r4, r0
 800ed16:	42a3      	cmp	r3, r4
 800ed18:	d805      	bhi.n	800ed26 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800ed1a:	4b0e      	ldr	r3, [pc, #56]	; (800ed54 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800ed1c:	4a0e      	ldr	r2, [pc, #56]	; (800ed58 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800ed1e:	211d      	movs	r1, #29
 800ed20:	480e      	ldr	r0, [pc, #56]	; (800ed5c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800ed22:	f018 fbc5 	bl	80274b0 <__assert_func>
 800ed26:	682b      	ldr	r3, [r5, #0]
 800ed28:	2100      	movs	r1, #0
 800ed2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ed2c:	4628      	mov	r0, r5
 800ed2e:	4798      	blx	r3
 800ed30:	682b      	ldr	r3, [r5, #0]
 800ed32:	4607      	mov	r7, r0
 800ed34:	6a1b      	ldr	r3, [r3, #32]
 800ed36:	4628      	mov	r0, r5
 800ed38:	4798      	blx	r3
 800ed3a:	1bf3      	subs	r3, r6, r7
 800ed3c:	b29b      	uxth	r3, r3
 800ed3e:	fbb3 f2f0 	udiv	r2, r3, r0
 800ed42:	fb02 3010 	mls	r0, r2, r0, r3
 800ed46:	b118      	cbz	r0, 800ed50 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800ed48:	4b05      	ldr	r3, [pc, #20]	; (800ed60 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800ed4a:	4a03      	ldr	r2, [pc, #12]	; (800ed58 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800ed4c:	211e      	movs	r1, #30
 800ed4e:	e7e7      	b.n	800ed20 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800ed50:	4620      	mov	r0, r4
 800ed52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed54:	0802ad19 	.word	0x0802ad19
 800ed58:	0802ae86 	.word	0x0802ae86
 800ed5c:	0802ad2e 	.word	0x0802ad2e
 800ed60:	0802ad5c 	.word	0x0802ad5c

0800ed64 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800ed64:	b538      	push	{r3, r4, r5, lr}
 800ed66:	6803      	ldr	r3, [r0, #0]
 800ed68:	6a1b      	ldr	r3, [r3, #32]
 800ed6a:	460d      	mov	r5, r1
 800ed6c:	4604      	mov	r4, r0
 800ed6e:	4798      	blx	r3
 800ed70:	4285      	cmp	r5, r0
 800ed72:	d905      	bls.n	800ed80 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800ed74:	4b0c      	ldr	r3, [pc, #48]	; (800eda8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800ed76:	4a0d      	ldr	r2, [pc, #52]	; (800edac <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800ed78:	212f      	movs	r1, #47	; 0x2f
 800ed7a:	480d      	ldr	r0, [pc, #52]	; (800edb0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800ed7c:	f018 fb98 	bl	80274b0 <__assert_func>
 800ed80:	6823      	ldr	r3, [r4, #0]
 800ed82:	88a5      	ldrh	r5, [r4, #4]
 800ed84:	69db      	ldr	r3, [r3, #28]
 800ed86:	4620      	mov	r0, r4
 800ed88:	4798      	blx	r3
 800ed8a:	4285      	cmp	r5, r0
 800ed8c:	d303      	bcc.n	800ed96 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800ed8e:	4b09      	ldr	r3, [pc, #36]	; (800edb4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800ed90:	4a06      	ldr	r2, [pc, #24]	; (800edac <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800ed92:	2130      	movs	r1, #48	; 0x30
 800ed94:	e7f1      	b.n	800ed7a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800ed96:	6823      	ldr	r3, [r4, #0]
 800ed98:	88a1      	ldrh	r1, [r4, #4]
 800ed9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ed9c:	4620      	mov	r0, r4
 800ed9e:	4798      	blx	r3
 800eda0:	88a3      	ldrh	r3, [r4, #4]
 800eda2:	3301      	adds	r3, #1
 800eda4:	80a3      	strh	r3, [r4, #4]
 800eda6:	bd38      	pop	{r3, r4, r5, pc}
 800eda8:	0802add6 	.word	0x0802add6
 800edac:	0802aec9 	.word	0x0802aec9
 800edb0:	0802ad2e 	.word	0x0802ad2e
 800edb4:	0802aded 	.word	0x0802aded

0800edb8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800edb8:	b570      	push	{r4, r5, r6, lr}
 800edba:	6803      	ldr	r3, [r0, #0]
 800edbc:	6a1b      	ldr	r3, [r3, #32]
 800edbe:	4616      	mov	r6, r2
 800edc0:	4604      	mov	r4, r0
 800edc2:	460d      	mov	r5, r1
 800edc4:	4798      	blx	r3
 800edc6:	4286      	cmp	r6, r0
 800edc8:	d905      	bls.n	800edd6 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800edca:	4b06      	ldr	r3, [pc, #24]	; (800ede4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800edcc:	4a06      	ldr	r2, [pc, #24]	; (800ede8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800edce:	4807      	ldr	r0, [pc, #28]	; (800edec <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800edd0:	2139      	movs	r1, #57	; 0x39
 800edd2:	f018 fb6d 	bl	80274b0 <__assert_func>
 800edd6:	6823      	ldr	r3, [r4, #0]
 800edd8:	4629      	mov	r1, r5
 800edda:	4620      	mov	r0, r4
 800eddc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800edde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ede2:	4718      	bx	r3
 800ede4:	0802add6 	.word	0x0802add6
 800ede8:	0802ae3c 	.word	0x0802ae3c
 800edec:	0802ad2e 	.word	0x0802ad2e

0800edf0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800edf0:	4770      	bx	lr
	...

0800edf4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800edf4:	4a02      	ldr	r2, [pc, #8]	; (800ee00 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800edf6:	6002      	str	r2, [r0, #0]
 800edf8:	2200      	movs	r2, #0
 800edfa:	8082      	strh	r2, [r0, #4]
 800edfc:	4770      	bx	lr
 800edfe:	bf00      	nop
 800ee00:	0802ae10 	.word	0x0802ae10

0800ee04 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
 800ee04:	f880 102f 	strb.w	r1, [r0, #47]	; 0x2f
 800ee08:	4770      	bx	lr

0800ee0a <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 800ee0a:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 800ee0e:	4770      	bx	lr

0800ee10 <_ZN8touchgfx12DigitalClock8setWidthEs>:
 800ee10:	b508      	push	{r3, lr}
 800ee12:	3034      	adds	r0, #52	; 0x34
 800ee14:	f820 1c2c 	strh.w	r1, [r0, #-44]
 800ee18:	f7f3 fcd1 	bl	80027be <_ZN8touchgfx8TextArea8setWidthEs>
 800ee1c:	bd08      	pop	{r3, pc}

0800ee1e <_ZN8touchgfx12DigitalClock9setHeightEs>:
 800ee1e:	b508      	push	{r3, lr}
 800ee20:	3034      	adds	r0, #52	; 0x34
 800ee22:	f820 1c2a 	strh.w	r1, [r0, #-42]
 800ee26:	f7f3 fcdc 	bl	80027e2 <_ZN8touchgfx8TextArea9setHeightEs>
 800ee2a:	bd08      	pop	{r3, pc}

0800ee2c <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 800ee2c:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 800ee30:	4770      	bx	lr

0800ee32 <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 800ee32:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800ee36:	4770      	bx	lr

0800ee38 <_ZNK8touchgfx12DigitalClock8getColorEv>:
 800ee38:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800ee3a:	4770      	bx	lr

0800ee3c <_ZN8touchgfx12DigitalClockD1Ev>:
 800ee3c:	4770      	bx	lr

0800ee3e <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 800ee3e:	6641      	str	r1, [r0, #100]	; 0x64
 800ee40:	3034      	adds	r0, #52	; 0x34
 800ee42:	f005 bd6b 	b.w	801491c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>

0800ee46 <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 800ee46:	3034      	adds	r0, #52	; 0x34
 800ee48:	f005 b87a 	b.w	8013f40 <_ZNK8touchgfx8TextArea12getTextWidthEv>

0800ee4c <_ZN8touchgfx12DigitalClockD0Ev>:
 800ee4c:	b510      	push	{r4, lr}
 800ee4e:	2198      	movs	r1, #152	; 0x98
 800ee50:	4604      	mov	r4, r0
 800ee52:	f018 fafe 	bl	8027452 <_ZdlPvj>
 800ee56:	4620      	mov	r0, r4
 800ee58:	bd10      	pop	{r4, pc}

0800ee5a <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 800ee5a:	b538      	push	{r3, r4, r5, lr}
 800ee5c:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800ee60:	460d      	mov	r5, r1
 800ee62:	4620      	mov	r0, r4
 800ee64:	f005 fd5a 	bl	801491c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800ee68:	4620      	mov	r0, r4
 800ee6a:	4629      	mov	r1, r5
 800ee6c:	f005 fc76 	bl	801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ee70:	4620      	mov	r0, r4
 800ee72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ee76:	f005 bd51 	b.w	801491c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
	...

0800ee7c <_ZN8touchgfx12DigitalClock11updateClockEv>:
 800ee7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ee80:	4604      	mov	r4, r0
 800ee82:	f100 0634 	add.w	r6, r0, #52	; 0x34
 800ee86:	4630      	mov	r0, r6
 800ee88:	f005 fd48 	bl	801491c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800ee8c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800ee90:	bb03      	cbnz	r3, 800eed4 <_ZN8touchgfx12DigitalClock11updateClockEv+0x58>
 800ee92:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800ee96:	4a41      	ldr	r2, [pc, #260]	; (800ef9c <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 800ee98:	4d41      	ldr	r5, [pc, #260]	; (800efa0 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 800ee9a:	4620      	mov	r0, r4
 800ee9c:	2b00      	cmp	r3, #0
 800ee9e:	bf08      	it	eq
 800eea0:	4615      	moveq	r5, r2
 800eea2:	f000 f96e 	bl	800f182 <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800eea6:	4680      	mov	r8, r0
 800eea8:	4620      	mov	r0, r4
 800eeaa:	f000 f97d 	bl	800f1a8 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800eeae:	4681      	mov	r9, r0
 800eeb0:	4620      	mov	r0, r4
 800eeb2:	f000 f972 	bl	800f19a <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800eeb6:	2800      	cmp	r0, #0
 800eeb8:	bf14      	ite	ne
 800eeba:	2341      	movne	r3, #65	; 0x41
 800eebc:	2350      	moveq	r3, #80	; 0x50
 800eebe:	f104 0780 	add.w	r7, r4, #128	; 0x80
 800eec2:	e9cd 9300 	strd	r9, r3, [sp]
 800eec6:	462a      	mov	r2, r5
 800eec8:	4643      	mov	r3, r8
 800eeca:	210c      	movs	r1, #12
 800eecc:	4638      	mov	r0, r7
 800eece:	f00a fcb4 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800eed2:	e017      	b.n	800ef04 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 800eed4:	2b01      	cmp	r3, #1
 800eed6:	d11b      	bne.n	800ef10 <_ZN8touchgfx12DigitalClock11updateClockEv+0x94>
 800eed8:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800eedc:	4a31      	ldr	r2, [pc, #196]	; (800efa4 <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 800eede:	4d32      	ldr	r5, [pc, #200]	; (800efa8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 800eee0:	4620      	mov	r0, r4
 800eee2:	2b00      	cmp	r3, #0
 800eee4:	bf08      	it	eq
 800eee6:	4615      	moveq	r5, r2
 800eee8:	f000 f948 	bl	800f17c <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800eeec:	4607      	mov	r7, r0
 800eeee:	4620      	mov	r0, r4
 800eef0:	f000 f95a 	bl	800f1a8 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800eef4:	463b      	mov	r3, r7
 800eef6:	9000      	str	r0, [sp, #0]
 800eef8:	462a      	mov	r2, r5
 800eefa:	210c      	movs	r1, #12
 800eefc:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800ef00:	f00a fc9b 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ef04:	4630      	mov	r0, r6
 800ef06:	b004      	add	sp, #16
 800ef08:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ef0c:	f005 bd06 	b.w	801491c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800ef10:	2b02      	cmp	r3, #2
 800ef12:	d126      	bne.n	800ef62 <_ZN8touchgfx12DigitalClock11updateClockEv+0xe6>
 800ef14:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800ef18:	4a24      	ldr	r2, [pc, #144]	; (800efac <_ZN8touchgfx12DigitalClock11updateClockEv+0x130>)
 800ef1a:	4d25      	ldr	r5, [pc, #148]	; (800efb0 <_ZN8touchgfx12DigitalClock11updateClockEv+0x134>)
 800ef1c:	4620      	mov	r0, r4
 800ef1e:	2b00      	cmp	r3, #0
 800ef20:	bf08      	it	eq
 800ef22:	4615      	moveq	r5, r2
 800ef24:	f000 f92d 	bl	800f182 <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800ef28:	4680      	mov	r8, r0
 800ef2a:	4620      	mov	r0, r4
 800ef2c:	f000 f93c 	bl	800f1a8 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800ef30:	4681      	mov	r9, r0
 800ef32:	4620      	mov	r0, r4
 800ef34:	f000 f93b 	bl	800f1ae <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800ef38:	4682      	mov	sl, r0
 800ef3a:	4620      	mov	r0, r4
 800ef3c:	f000 f92d 	bl	800f19a <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800ef40:	2800      	cmp	r0, #0
 800ef42:	bf14      	ite	ne
 800ef44:	2341      	movne	r3, #65	; 0x41
 800ef46:	2350      	moveq	r3, #80	; 0x50
 800ef48:	f104 0780 	add.w	r7, r4, #128	; 0x80
 800ef4c:	e9cd a301 	strd	sl, r3, [sp, #4]
 800ef50:	f8cd 9000 	str.w	r9, [sp]
 800ef54:	4643      	mov	r3, r8
 800ef56:	462a      	mov	r2, r5
 800ef58:	210c      	movs	r1, #12
 800ef5a:	4638      	mov	r0, r7
 800ef5c:	f00a fc6d 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ef60:	e7d0      	b.n	800ef04 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 800ef62:	2b03      	cmp	r3, #3
 800ef64:	d1ce      	bne.n	800ef04 <_ZN8touchgfx12DigitalClock11updateClockEv+0x88>
 800ef66:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800ef6a:	4a12      	ldr	r2, [pc, #72]	; (800efb4 <_ZN8touchgfx12DigitalClock11updateClockEv+0x138>)
 800ef6c:	4d12      	ldr	r5, [pc, #72]	; (800efb8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x13c>)
 800ef6e:	4620      	mov	r0, r4
 800ef70:	2b00      	cmp	r3, #0
 800ef72:	bf08      	it	eq
 800ef74:	4615      	moveq	r5, r2
 800ef76:	f000 f901 	bl	800f17c <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800ef7a:	4607      	mov	r7, r0
 800ef7c:	4620      	mov	r0, r4
 800ef7e:	f000 f913 	bl	800f1a8 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800ef82:	4680      	mov	r8, r0
 800ef84:	4620      	mov	r0, r4
 800ef86:	f000 f912 	bl	800f1ae <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800ef8a:	463b      	mov	r3, r7
 800ef8c:	e9cd 8000 	strd	r8, r0, [sp]
 800ef90:	462a      	mov	r2, r5
 800ef92:	210c      	movs	r1, #12
 800ef94:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800ef98:	e799      	b.n	800eece <_ZN8touchgfx12DigitalClock11updateClockEv+0x52>
 800ef9a:	bf00      	nop
 800ef9c:	0802af07 	.word	0x0802af07
 800efa0:	0802af31 	.word	0x0802af31
 800efa4:	0802af13 	.word	0x0802af13
 800efa8:	0802af51 	.word	0x0802af51
 800efac:	0802af2e 	.word	0x0802af2e
 800efb0:	0802af1b 	.word	0x0802af1b
 800efb4:	0802af4e 	.word	0x0802af4e
 800efb8:	0802af3f 	.word	0x0802af3f

0800efbc <_ZNK8touchgfx12DigitalClock17invalidateContentEv>:
 800efbc:	b510      	push	{r4, lr}
 800efbe:	6803      	ldr	r3, [r0, #0]
 800efc0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800efc4:	4604      	mov	r4, r0
 800efc6:	4798      	blx	r3
 800efc8:	b120      	cbz	r0, 800efd4 <_ZNK8touchgfx12DigitalClock17invalidateContentEv+0x18>
 800efca:	4620      	mov	r0, r4
 800efcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800efd0:	f000 ba18 	b.w	800f404 <_ZNK8touchgfx9Container17invalidateContentEv>
 800efd4:	bd10      	pop	{r4, pc}
	...

0800efd8 <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 800efd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efdc:	4b13      	ldr	r3, [pc, #76]	; (800f02c <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x54>)
 800efde:	f8b0 6060 	ldrh.w	r6, [r0, #96]	; 0x60
 800efe2:	881b      	ldrh	r3, [r3, #0]
 800efe4:	42b3      	cmp	r3, r6
 800efe6:	4605      	mov	r5, r0
 800efe8:	d91e      	bls.n	800f028 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x50>
 800efea:	6803      	ldr	r3, [r0, #0]
 800efec:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800eff0:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 800eff2:	4b0f      	ldr	r3, [pc, #60]	; (800f030 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x58>)
 800eff4:	681b      	ldr	r3, [r3, #0]
 800eff6:	b28c      	uxth	r4, r1
 800eff8:	b92b      	cbnz	r3, 800f006 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x2e>
 800effa:	4b0e      	ldr	r3, [pc, #56]	; (800f034 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x5c>)
 800effc:	4a0e      	ldr	r2, [pc, #56]	; (800f038 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x60>)
 800effe:	480f      	ldr	r0, [pc, #60]	; (800f03c <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x64>)
 800f000:	21ae      	movs	r1, #174	; 0xae
 800f002:	f018 fa55 	bl	80274b0 <__assert_func>
 800f006:	f813 2016 	ldrb.w	r2, [r3, r6, lsl #1]
 800f00a:	4b0d      	ldr	r3, [pc, #52]	; (800f040 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x68>)
 800f00c:	681b      	ldr	r3, [r3, #0]
 800f00e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f012:	6803      	ldr	r3, [r0, #0]
 800f014:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f016:	4798      	blx	r3
 800f018:	1a22      	subs	r2, r4, r0
 800f01a:	4641      	mov	r1, r8
 800f01c:	4628      	mov	r0, r5
 800f01e:	463b      	mov	r3, r7
 800f020:	b212      	sxth	r2, r2
 800f022:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f026:	4718      	bx	r3
 800f028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f02c:	20014c80 	.word	0x20014c80
 800f030:	20014c7c 	.word	0x20014c7c
 800f034:	08029068 	.word	0x08029068
 800f038:	0802b01c 	.word	0x0802b01c
 800f03c:	080290f6 	.word	0x080290f6
 800f040:	20014c84 	.word	0x20014c84

0800f044 <_ZN8touchgfx12DigitalClockC1Ev>:
 800f044:	b510      	push	{r4, lr}
 800f046:	4604      	mov	r4, r0
 800f048:	f000 f87c 	bl	800f144 <_ZN8touchgfx13AbstractClockC1Ev>
 800f04c:	2201      	movs	r2, #1
 800f04e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800f052:	4a20      	ldr	r2, [pc, #128]	; (800f0d4 <_ZN8touchgfx12DigitalClockC1Ev+0x90>)
 800f054:	65e2      	str	r2, [r4, #92]	; 0x5c
 800f056:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f05a:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 800f05e:	f8a4 2074 	strh.w	r2, [r4, #116]	; 0x74
 800f062:	f8a4 2076 	strh.w	r2, [r4, #118]	; 0x76
 800f066:	4b1c      	ldr	r3, [pc, #112]	; (800f0d8 <_ZN8touchgfx12DigitalClockC1Ev+0x94>)
 800f068:	4a1c      	ldr	r2, [pc, #112]	; (800f0dc <_ZN8touchgfx12DigitalClockC1Ev+0x98>)
 800f06a:	6023      	str	r3, [r4, #0]
 800f06c:	6362      	str	r2, [r4, #52]	; 0x34
 800f06e:	2303      	movs	r3, #3
 800f070:	4622      	mov	r2, r4
 800f072:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800f076:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 800f07a:	2300      	movs	r3, #0
 800f07c:	66a1      	str	r1, [r4, #104]	; 0x68
 800f07e:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 800f082:	8723      	strh	r3, [r4, #56]	; 0x38
 800f084:	8763      	strh	r3, [r4, #58]	; 0x3a
 800f086:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800f088:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800f08a:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 800f08e:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800f092:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 800f096:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 800f09a:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f09e:	6523      	str	r3, [r4, #80]	; 0x50
 800f0a0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800f0a4:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800f0a8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800f0ac:	6663      	str	r3, [r4, #100]	; 0x64
 800f0ae:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 800f0b2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800f0b6:	f8a4 3070 	strh.w	r3, [r4, #112]	; 0x70
 800f0ba:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 800f0be:	67a3      	str	r3, [r4, #120]	; 0x78
 800f0c0:	f822 3f80 	strh.w	r3, [r2, #128]!
 800f0c4:	4620      	mov	r0, r4
 800f0c6:	67e2      	str	r2, [r4, #124]	; 0x7c
 800f0c8:	f104 0134 	add.w	r1, r4, #52	; 0x34
 800f0cc:	f000 f9de 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f0d0:	4620      	mov	r0, r4
 800f0d2:	bd10      	pop	{r4, pc}
 800f0d4:	080291d0 	.word	0x080291d0
 800f0d8:	0802af64 	.word	0x0802af64
 800f0dc:	080291e0 	.word	0x080291e0

0800f0e0 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 800f0e0:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 800f0e4:	4770      	bx	lr

0800f0e6 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 800f0e6:	b470      	push	{r4, r5, r6}
 800f0e8:	2518      	movs	r5, #24
 800f0ea:	fbb1 f6f5 	udiv	r6, r1, r5
 800f0ee:	fb06 1115 	mls	r1, r6, r5, r1
 800f0f2:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800f0f6:	213c      	movs	r1, #60	; 0x3c
 800f0f8:	fbb2 f5f1 	udiv	r5, r2, r1
 800f0fc:	fb05 2211 	mls	r2, r5, r1, r2
 800f100:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800f104:	fbb3 f2f1 	udiv	r2, r3, r1
 800f108:	fb02 3311 	mls	r3, r2, r1, r3
 800f10c:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 800f110:	6803      	ldr	r3, [r0, #0]
 800f112:	bc70      	pop	{r4, r5, r6}
 800f114:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800f118:	4718      	bx	r3

0800f11a <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 800f11a:	b4f0      	push	{r4, r5, r6, r7}
 800f11c:	6804      	ldr	r4, [r0, #0]
 800f11e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800f122:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 800f126:	2e00      	cmp	r6, #0
 800f128:	f04f 040c 	mov.w	r4, #12
 800f12c:	fbb1 f7f4 	udiv	r7, r1, r4
 800f130:	fb07 1114 	mls	r1, r7, r4, r1
 800f134:	bf18      	it	ne
 800f136:	2400      	movne	r4, #0
 800f138:	fa54 f181 	uxtab	r1, r4, r1
 800f13c:	46ac      	mov	ip, r5
 800f13e:	b2c9      	uxtb	r1, r1
 800f140:	bcf0      	pop	{r4, r5, r6, r7}
 800f142:	4760      	bx	ip

0800f144 <_ZN8touchgfx13AbstractClockC1Ev>:
 800f144:	2101      	movs	r1, #1
 800f146:	2200      	movs	r2, #0
 800f148:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800f14c:	490a      	ldr	r1, [pc, #40]	; (800f178 <_ZN8touchgfx13AbstractClockC1Ev+0x34>)
 800f14e:	8082      	strh	r2, [r0, #4]
 800f150:	80c2      	strh	r2, [r0, #6]
 800f152:	8102      	strh	r2, [r0, #8]
 800f154:	8142      	strh	r2, [r0, #10]
 800f156:	8182      	strh	r2, [r0, #12]
 800f158:	81c2      	strh	r2, [r0, #14]
 800f15a:	8202      	strh	r2, [r0, #16]
 800f15c:	8242      	strh	r2, [r0, #18]
 800f15e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f162:	61c2      	str	r2, [r0, #28]
 800f164:	8402      	strh	r2, [r0, #32]
 800f166:	8442      	strh	r2, [r0, #34]	; 0x22
 800f168:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f16c:	6001      	str	r1, [r0, #0]
 800f16e:	6282      	str	r2, [r0, #40]	; 0x28
 800f170:	8582      	strh	r2, [r0, #44]	; 0x2c
 800f172:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800f176:	4770      	bx	lr
 800f178:	0802b054 	.word	0x0802b054

0800f17c <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 800f17c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800f180:	4770      	bx	lr

0800f182 <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 800f182:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800f186:	220c      	movs	r2, #12
 800f188:	f100 030b 	add.w	r3, r0, #11
 800f18c:	fb93 f0f2 	sdiv	r0, r3, r2
 800f190:	fb02 3010 	mls	r0, r2, r0, r3
 800f194:	3001      	adds	r0, #1
 800f196:	b2c0      	uxtb	r0, r0
 800f198:	4770      	bx	lr

0800f19a <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 800f19a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800f19e:	280b      	cmp	r0, #11
 800f1a0:	bf8c      	ite	hi
 800f1a2:	2000      	movhi	r0, #0
 800f1a4:	2001      	movls	r0, #1
 800f1a6:	4770      	bx	lr

0800f1a8 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 800f1a8:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800f1ac:	4770      	bx	lr

0800f1ae <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 800f1ae:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800f1b2:	4770      	bx	lr

0800f1b4 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800f1b4:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800f1b8:	4770      	bx	lr

0800f1ba <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800f1ba:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800f1be:	4770      	bx	lr

0800f1c0 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800f1c0:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800f1c4:	4770      	bx	lr

0800f1c6 <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800f1c6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800f1c8:	4770      	bx	lr

0800f1ca <_ZN8touchgfx11ModalWindow4showEv>:
 800f1ca:	2201      	movs	r2, #1
 800f1cc:	6803      	ldr	r3, [r0, #0]
 800f1ce:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f1d2:	695b      	ldr	r3, [r3, #20]
 800f1d4:	4718      	bx	r3

0800f1d6 <_ZN8touchgfx11ModalWindow4hideEv>:
 800f1d6:	b510      	push	{r4, lr}
 800f1d8:	6803      	ldr	r3, [r0, #0]
 800f1da:	4604      	mov	r4, r0
 800f1dc:	695b      	ldr	r3, [r3, #20]
 800f1de:	4798      	blx	r3
 800f1e0:	2300      	movs	r3, #0
 800f1e2:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800f1e6:	bd10      	pop	{r4, pc}

0800f1e8 <_ZN8touchgfx11ModalWindowD1Ev>:
 800f1e8:	4770      	bx	lr

0800f1ea <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800f1ea:	3058      	adds	r0, #88	; 0x58
 800f1ec:	f000 b94e 	b.w	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800f1f0 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800f1f0:	6541      	str	r1, [r0, #84]	; 0x54
 800f1f2:	302c      	adds	r0, #44	; 0x2c
 800f1f4:	f008 ba4d 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>

0800f1f8 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800f1f8:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800f1fc:	302c      	adds	r0, #44	; 0x2c
 800f1fe:	f008 ba48 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>

0800f202 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800f202:	3058      	adds	r0, #88	; 0x58
 800f204:	f000 b910 	b.w	800f428 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800f208 <_ZN8touchgfx11ModalWindowD0Ev>:
 800f208:	b510      	push	{r4, lr}
 800f20a:	21b0      	movs	r1, #176	; 0xb0
 800f20c:	4604      	mov	r4, r0
 800f20e:	f018 f920 	bl	8027452 <_ZdlPvj>
 800f212:	4620      	mov	r0, r4
 800f214:	bd10      	pop	{r4, pc}

0800f216 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800f216:	b570      	push	{r4, r5, r6, lr}
 800f218:	4604      	mov	r4, r0
 800f21a:	461e      	mov	r6, r3
 800f21c:	f854 3b58 	ldr.w	r3, [r4], #88
 800f220:	4615      	mov	r5, r2
 800f222:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f226:	4798      	blx	r3
 800f228:	4632      	mov	r2, r6
 800f22a:	4629      	mov	r1, r5
 800f22c:	4620      	mov	r0, r4
 800f22e:	f7f3 fc42 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800f232:	bd70      	pop	{r4, r5, r6, pc}

0800f234 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800f234:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f236:	880b      	ldrh	r3, [r1, #0]
 800f238:	a902      	add	r1, sp, #8
 800f23a:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800f23e:	4604      	mov	r4, r0
 800f240:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800f244:	4628      	mov	r0, r5
 800f246:	f005 fc7b 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f24a:	2200      	movs	r2, #0
 800f24c:	4611      	mov	r1, r2
 800f24e:	4628      	mov	r0, r5
 800f250:	f7f3 fc31 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800f254:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800f258:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800f25c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800f260:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800f264:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800f268:	2302      	movs	r3, #2
 800f26a:	4628      	mov	r0, r5
 800f26c:	1bd2      	subs	r2, r2, r7
 800f26e:	1b89      	subs	r1, r1, r6
 800f270:	fb92 f2f3 	sdiv	r2, r2, r3
 800f274:	fb91 f1f3 	sdiv	r1, r1, r3
 800f278:	b212      	sxth	r2, r2
 800f27a:	b209      	sxth	r1, r1
 800f27c:	f7f3 fc1b 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800f280:	463a      	mov	r2, r7
 800f282:	4631      	mov	r1, r6
 800f284:	4628      	mov	r0, r5
 800f286:	f7f3 fc51 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f28a:	6823      	ldr	r3, [r4, #0]
 800f28c:	4620      	mov	r0, r4
 800f28e:	695b      	ldr	r3, [r3, #20]
 800f290:	4798      	blx	r3
 800f292:	b003      	add	sp, #12
 800f294:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f298 <_ZN8touchgfx11ModalWindowC1Ev>:
 800f298:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f29c:	4604      	mov	r4, r0
 800f29e:	4625      	mov	r5, r4
 800f2a0:	f7f5 fd3a 	bl	8004d18 <_ZN8touchgfx8DrawableC1Ev>
 800f2a4:	2600      	movs	r6, #0
 800f2a6:	4b36      	ldr	r3, [pc, #216]	; (800f380 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800f2a8:	62a6      	str	r6, [r4, #40]	; 0x28
 800f2aa:	f845 3b2c 	str.w	r3, [r5], #44
 800f2ae:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800f2b2:	4652      	mov	r2, sl
 800f2b4:	4631      	mov	r1, r6
 800f2b6:	4628      	mov	r0, r5
 800f2b8:	f018 fa80 	bl	80277bc <memset>
 800f2bc:	4628      	mov	r0, r5
 800f2be:	f7f5 fd2b 	bl	8004d18 <_ZN8touchgfx8DrawableC1Ev>
 800f2c2:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800f2c6:	4b2f      	ldr	r3, [pc, #188]	; (800f384 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800f2c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f2ca:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800f2ce:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800f2d2:	6566      	str	r6, [r4, #84]	; 0x54
 800f2d4:	4640      	mov	r0, r8
 800f2d6:	f7f5 fd1f 	bl	8004d18 <_ZN8touchgfx8DrawableC1Ev>
 800f2da:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800f2de:	4b2a      	ldr	r3, [pc, #168]	; (800f388 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800f2e0:	65a3      	str	r3, [r4, #88]	; 0x58
 800f2e2:	4652      	mov	r2, sl
 800f2e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f2e8:	4631      	mov	r1, r6
 800f2ea:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800f2ee:	4638      	mov	r0, r7
 800f2f0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f2f4:	f018 fa62 	bl	80277bc <memset>
 800f2f8:	4638      	mov	r0, r7
 800f2fa:	f7f5 fd0d 	bl	8004d18 <_ZN8touchgfx8DrawableC1Ev>
 800f2fe:	a902      	add	r1, sp, #8
 800f300:	4b22      	ldr	r3, [pc, #136]	; (800f38c <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800f302:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800f306:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f30a:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800f30e:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800f312:	4638      	mov	r0, r7
 800f314:	f005 fc14 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f318:	4b1d      	ldr	r3, [pc, #116]	; (800f390 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800f31a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f31e:	4b1d      	ldr	r3, [pc, #116]	; (800f394 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800f320:	4620      	mov	r0, r4
 800f322:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f326:	f7f3 fc01 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f32a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800f32e:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800f332:	4632      	mov	r2, r6
 800f334:	4631      	mov	r1, r6
 800f336:	4628      	mov	r0, r5
 800f338:	f7f3 fbbd 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 800f33c:	4652      	mov	r2, sl
 800f33e:	4649      	mov	r1, r9
 800f340:	4628      	mov	r0, r5
 800f342:	f7f3 fbf3 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f346:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800f34a:	6563      	str	r3, [r4, #84]	; 0x54
 800f34c:	2301      	movs	r3, #1
 800f34e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800f352:	2360      	movs	r3, #96	; 0x60
 800f354:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800f358:	4628      	mov	r0, r5
 800f35a:	f008 f99a 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f35e:	4629      	mov	r1, r5
 800f360:	4620      	mov	r0, r4
 800f362:	f000 f893 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f366:	4641      	mov	r1, r8
 800f368:	4620      	mov	r0, r4
 800f36a:	f000 f88f 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f36e:	4640      	mov	r0, r8
 800f370:	4639      	mov	r1, r7
 800f372:	f000 f88b 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f376:	4620      	mov	r0, r4
 800f378:	b002      	add	sp, #8
 800f37a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f37e:	bf00      	nop
 800f380:	0802b0f0 	.word	0x0802b0f0
 800f384:	0802c778 	.word	0x0802c778
 800f388:	0802b270 	.word	0x0802b270
 800f38c:	0802c878 	.word	0x0802c878
 800f390:	20014c02 	.word	0x20014c02
 800f394:	20014c00 	.word	0x20014c00

0800f398 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f398:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f39a:	2000      	movs	r0, #0
 800f39c:	b12b      	cbz	r3, 800f3aa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f39e:	b920      	cbnz	r0, 800f3aa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f3a0:	1a5a      	subs	r2, r3, r1
 800f3a2:	4250      	negs	r0, r2
 800f3a4:	4150      	adcs	r0, r2
 800f3a6:	699b      	ldr	r3, [r3, #24]
 800f3a8:	e7f8      	b.n	800f39c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f3aa:	4770      	bx	lr

0800f3ac <_ZN8touchgfx9Container9removeAllEv>:
 800f3ac:	2200      	movs	r2, #0
 800f3ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f3b0:	b123      	cbz	r3, 800f3bc <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f3b2:	6999      	ldr	r1, [r3, #24]
 800f3b4:	6281      	str	r1, [r0, #40]	; 0x28
 800f3b6:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f3ba:	e7f8      	b.n	800f3ae <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f3bc:	4770      	bx	lr

0800f3be <_ZN8touchgfx9Container6unlinkEv>:
 800f3be:	2300      	movs	r3, #0
 800f3c0:	6283      	str	r3, [r0, #40]	; 0x28
 800f3c2:	4770      	bx	lr

0800f3c4 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f3c4:	2200      	movs	r2, #0
 800f3c6:	8002      	strh	r2, [r0, #0]
 800f3c8:	8042      	strh	r2, [r0, #2]
 800f3ca:	8082      	strh	r2, [r0, #4]
 800f3cc:	80c2      	strh	r2, [r0, #6]
 800f3ce:	4770      	bx	lr

0800f3d0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f3d0:	b570      	push	{r4, r5, r6, lr}
 800f3d2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f3d4:	460d      	mov	r5, r1
 800f3d6:	4616      	mov	r6, r2
 800f3d8:	b13c      	cbz	r4, 800f3ea <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f3da:	6823      	ldr	r3, [r4, #0]
 800f3dc:	4620      	mov	r0, r4
 800f3de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f3e0:	4632      	mov	r2, r6
 800f3e2:	4629      	mov	r1, r5
 800f3e4:	4798      	blx	r3
 800f3e6:	69a4      	ldr	r4, [r4, #24]
 800f3e8:	e7f6      	b.n	800f3d8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f3ea:	bd70      	pop	{r4, r5, r6, pc}

0800f3ec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f3ec:	b538      	push	{r3, r4, r5, lr}
 800f3ee:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f3f0:	460d      	mov	r5, r1
 800f3f2:	b134      	cbz	r4, 800f402 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f3f4:	682b      	ldr	r3, [r5, #0]
 800f3f6:	4621      	mov	r1, r4
 800f3f8:	689b      	ldr	r3, [r3, #8]
 800f3fa:	4628      	mov	r0, r5
 800f3fc:	4798      	blx	r3
 800f3fe:	69a4      	ldr	r4, [r4, #24]
 800f400:	e7f7      	b.n	800f3f2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f402:	bd38      	pop	{r3, r4, r5, pc}

0800f404 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800f404:	b510      	push	{r4, lr}
 800f406:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f408:	b12c      	cbz	r4, 800f416 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800f40a:	6823      	ldr	r3, [r4, #0]
 800f40c:	4620      	mov	r0, r4
 800f40e:	699b      	ldr	r3, [r3, #24]
 800f410:	4798      	blx	r3
 800f412:	69a4      	ldr	r4, [r4, #24]
 800f414:	e7f8      	b.n	800f408 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800f416:	bd10      	pop	{r4, pc}

0800f418 <_ZN8touchgfx9ContainerD1Ev>:
 800f418:	4770      	bx	lr

0800f41a <_ZN8touchgfx9ContainerD0Ev>:
 800f41a:	b510      	push	{r4, lr}
 800f41c:	212c      	movs	r1, #44	; 0x2c
 800f41e:	4604      	mov	r4, r0
 800f420:	f018 f817 	bl	8027452 <_ZdlPvj>
 800f424:	4620      	mov	r0, r4
 800f426:	bd10      	pop	{r4, pc}

0800f428 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f428:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f42a:	b19b      	cbz	r3, 800f454 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f42c:	428b      	cmp	r3, r1
 800f42e:	d109      	bne.n	800f444 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f430:	699a      	ldr	r2, [r3, #24]
 800f432:	2100      	movs	r1, #0
 800f434:	6159      	str	r1, [r3, #20]
 800f436:	6282      	str	r2, [r0, #40]	; 0x28
 800f438:	b902      	cbnz	r2, 800f43c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f43a:	4770      	bx	lr
 800f43c:	6199      	str	r1, [r3, #24]
 800f43e:	4770      	bx	lr
 800f440:	4613      	mov	r3, r2
 800f442:	b13a      	cbz	r2, 800f454 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f444:	699a      	ldr	r2, [r3, #24]
 800f446:	428a      	cmp	r2, r1
 800f448:	d1fa      	bne.n	800f440 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f44a:	698a      	ldr	r2, [r1, #24]
 800f44c:	619a      	str	r2, [r3, #24]
 800f44e:	2300      	movs	r3, #0
 800f450:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f454:	4770      	bx	lr

0800f456 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f456:	b410      	push	{r4}
 800f458:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f45a:	4604      	mov	r4, r0
 800f45c:	b92b      	cbnz	r3, 800f46a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f45e:	6803      	ldr	r3, [r0, #0]
 800f460:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f464:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f466:	4611      	mov	r1, r2
 800f468:	4718      	bx	r3
 800f46a:	b941      	cbnz	r1, 800f47e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f46c:	6193      	str	r3, [r2, #24]
 800f46e:	6282      	str	r2, [r0, #40]	; 0x28
 800f470:	6154      	str	r4, [r2, #20]
 800f472:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f476:	4770      	bx	lr
 800f478:	4603      	mov	r3, r0
 800f47a:	2800      	cmp	r0, #0
 800f47c:	d0f9      	beq.n	800f472 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f47e:	4299      	cmp	r1, r3
 800f480:	6998      	ldr	r0, [r3, #24]
 800f482:	d1f9      	bne.n	800f478 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f484:	6190      	str	r0, [r2, #24]
 800f486:	618a      	str	r2, [r1, #24]
 800f488:	e7f2      	b.n	800f470 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f48c:	4288      	cmp	r0, r1
 800f48e:	b508      	push	{r3, lr}
 800f490:	d105      	bne.n	800f49e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800f492:	4b11      	ldr	r3, [pc, #68]	; (800f4d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800f494:	4a11      	ldr	r2, [pc, #68]	; (800f4dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f496:	2120      	movs	r1, #32
 800f498:	4811      	ldr	r0, [pc, #68]	; (800f4e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800f49a:	f018 f809 	bl	80274b0 <__assert_func>
 800f49e:	694b      	ldr	r3, [r1, #20]
 800f4a0:	b11b      	cbz	r3, 800f4aa <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800f4a2:	4b10      	ldr	r3, [pc, #64]	; (800f4e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800f4a4:	4a0d      	ldr	r2, [pc, #52]	; (800f4dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f4a6:	2121      	movs	r1, #33	; 0x21
 800f4a8:	e7f6      	b.n	800f498 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800f4aa:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800f4ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f4b0:	b913      	cbnz	r3, 800f4b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800f4b2:	6281      	str	r1, [r0, #40]	; 0x28
 800f4b4:	bd08      	pop	{r3, pc}
 800f4b6:	4613      	mov	r3, r2
 800f4b8:	699a      	ldr	r2, [r3, #24]
 800f4ba:	b12a      	cbz	r2, 800f4c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800f4bc:	428b      	cmp	r3, r1
 800f4be:	d1fa      	bne.n	800f4b6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800f4c0:	4b09      	ldr	r3, [pc, #36]	; (800f4e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800f4c2:	4a06      	ldr	r2, [pc, #24]	; (800f4dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f4c4:	2132      	movs	r1, #50	; 0x32
 800f4c6:	e7e7      	b.n	800f498 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800f4c8:	428b      	cmp	r3, r1
 800f4ca:	d103      	bne.n	800f4d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800f4cc:	4b06      	ldr	r3, [pc, #24]	; (800f4e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800f4ce:	4a03      	ldr	r2, [pc, #12]	; (800f4dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800f4d0:	2135      	movs	r1, #53	; 0x35
 800f4d2:	e7e1      	b.n	800f498 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800f4d4:	6199      	str	r1, [r3, #24]
 800f4d6:	e7ed      	b.n	800f4b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800f4d8:	0802b1a0 	.word	0x0802b1a0
 800f4dc:	0802b2f8 	.word	0x0802b2f8
 800f4e0:	0802b1cc 	.word	0x0802b1cc
 800f4e4:	0802b1ff 	.word	0x0802b1ff
 800f4e8:	0802b235 	.word	0x0802b235

0800f4ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4f0:	461f      	mov	r7, r3
 800f4f2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f4f6:	460d      	mov	r5, r1
 800f4f8:	4616      	mov	r6, r2
 800f4fa:	b103      	cbz	r3, 800f4fe <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f4fc:	6038      	str	r0, [r7, #0]
 800f4fe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f500:	b314      	cbz	r4, 800f548 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f502:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f506:	b1eb      	cbz	r3, 800f544 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f508:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f50c:	428d      	cmp	r5, r1
 800f50e:	db19      	blt.n	800f544 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f510:	8923      	ldrh	r3, [r4, #8]
 800f512:	b289      	uxth	r1, r1
 800f514:	440b      	add	r3, r1
 800f516:	b21b      	sxth	r3, r3
 800f518:	429d      	cmp	r5, r3
 800f51a:	da13      	bge.n	800f544 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f51c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f520:	4296      	cmp	r6, r2
 800f522:	db0f      	blt.n	800f544 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f524:	8963      	ldrh	r3, [r4, #10]
 800f526:	b292      	uxth	r2, r2
 800f528:	4413      	add	r3, r2
 800f52a:	b21b      	sxth	r3, r3
 800f52c:	429e      	cmp	r6, r3
 800f52e:	da09      	bge.n	800f544 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f530:	6823      	ldr	r3, [r4, #0]
 800f532:	1ab2      	subs	r2, r6, r2
 800f534:	1a69      	subs	r1, r5, r1
 800f536:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f53a:	b212      	sxth	r2, r2
 800f53c:	463b      	mov	r3, r7
 800f53e:	b209      	sxth	r1, r1
 800f540:	4620      	mov	r0, r4
 800f542:	47c0      	blx	r8
 800f544:	69a4      	ldr	r4, [r4, #24]
 800f546:	e7db      	b.n	800f500 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f548:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f54c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f550:	4c6e      	ldr	r4, [pc, #440]	; (800f70c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f552:	b0a1      	sub	sp, #132	; 0x84
 800f554:	6824      	ldr	r4, [r4, #0]
 800f556:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f558:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f55c:	9303      	str	r3, [sp, #12]
 800f55e:	2400      	movs	r4, #0
 800f560:	802c      	strh	r4, [r5, #0]
 800f562:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f564:	802c      	strh	r4, [r5, #0]
 800f566:	601c      	str	r4, [r3, #0]
 800f568:	4606      	mov	r6, r0
 800f56a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f56e:	f7ff ffbd 	bl	800f4ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f572:	f1b9 0f03 	cmp.w	r9, #3
 800f576:	f340 80c2 	ble.w	800f6fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f57a:	4631      	mov	r1, r6
 800f57c:	a80c      	add	r0, sp, #48	; 0x30
 800f57e:	f008 f923 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f582:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f586:	9306      	str	r3, [sp, #24]
 800f588:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f58c:	9307      	str	r3, [sp, #28]
 800f58e:	9b03      	ldr	r3, [sp, #12]
 800f590:	f8d3 a000 	ldr.w	sl, [r3]
 800f594:	f1ba 0f00 	cmp.w	sl, #0
 800f598:	f000 80b4 	beq.w	800f704 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f59c:	4651      	mov	r1, sl
 800f59e:	a810      	add	r0, sp, #64	; 0x40
 800f5a0:	f008 f912 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f5a4:	9b01      	ldr	r3, [sp, #4]
 800f5a6:	9a06      	ldr	r2, [sp, #24]
 800f5a8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f5ac:	189d      	adds	r5, r3, r2
 800f5ae:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f5b2:	9a07      	ldr	r2, [sp, #28]
 800f5b4:	2002      	movs	r0, #2
 800f5b6:	fb91 f1f0 	sdiv	r1, r1, r0
 800f5ba:	4419      	add	r1, r3
 800f5bc:	1a6d      	subs	r5, r5, r1
 800f5be:	9b02      	ldr	r3, [sp, #8]
 800f5c0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f5c4:	4413      	add	r3, r2
 800f5c6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f5ca:	fb92 f2f0 	sdiv	r2, r2, r0
 800f5ce:	440a      	add	r2, r1
 800f5d0:	1a9b      	subs	r3, r3, r2
 800f5d2:	435b      	muls	r3, r3
 800f5d4:	fb05 3505 	mla	r5, r5, r5, r3
 800f5d8:	4f4d      	ldr	r7, [pc, #308]	; (800f710 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f5da:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f5dc:	ac10      	add	r4, sp, #64	; 0x40
 800f5de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f5e0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f5e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f5e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f5e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f5e8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f5ec:	f1b9 0f0c 	cmp.w	r9, #12
 800f5f0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f5f4:	f04f 0303 	mov.w	r3, #3
 800f5f8:	bfc8      	it	gt
 800f5fa:	4698      	movgt	r8, r3
 800f5fc:	f8cd 9000 	str.w	r9, [sp]
 800f600:	f04f 0400 	mov.w	r4, #0
 800f604:	bfdc      	itt	le
 800f606:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f60a:	fb92 f8f3 	sdivle	r8, r2, r3
 800f60e:	1c63      	adds	r3, r4, #1
 800f610:	aa10      	add	r2, sp, #64	; 0x40
 800f612:	f004 0401 	and.w	r4, r4, #1
 800f616:	9308      	str	r3, [sp, #32]
 800f618:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f61c:	9b00      	ldr	r3, [sp, #0]
 800f61e:	fb93 f3f8 	sdiv	r3, r3, r8
 800f622:	b29b      	uxth	r3, r3
 800f624:	3404      	adds	r4, #4
 800f626:	f04f 0b00 	mov.w	fp, #0
 800f62a:	9304      	str	r3, [sp, #16]
 800f62c:	9a04      	ldr	r2, [sp, #16]
 800f62e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f632:	fb13 f302 	smulbb	r3, r3, r2
 800f636:	9a01      	ldr	r2, [sp, #4]
 800f638:	b29b      	uxth	r3, r3
 800f63a:	1899      	adds	r1, r3, r2
 800f63c:	9305      	str	r3, [sp, #20]
 800f63e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f642:	b209      	sxth	r1, r1
 800f644:	4299      	cmp	r1, r3
 800f646:	db4d      	blt.n	800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f648:	8932      	ldrh	r2, [r6, #8]
 800f64a:	4413      	add	r3, r2
 800f64c:	b21b      	sxth	r3, r3
 800f64e:	4299      	cmp	r1, r3
 800f650:	da48      	bge.n	800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f652:	9b04      	ldr	r3, [sp, #16]
 800f654:	6827      	ldr	r7, [r4, #0]
 800f656:	fb17 f703 	smulbb	r7, r7, r3
 800f65a:	9b02      	ldr	r3, [sp, #8]
 800f65c:	b2bf      	uxth	r7, r7
 800f65e:	18fa      	adds	r2, r7, r3
 800f660:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f664:	b212      	sxth	r2, r2
 800f666:	429a      	cmp	r2, r3
 800f668:	db3c      	blt.n	800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f66a:	8970      	ldrh	r0, [r6, #10]
 800f66c:	4403      	add	r3, r0
 800f66e:	b21b      	sxth	r3, r3
 800f670:	429a      	cmp	r2, r3
 800f672:	da37      	bge.n	800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f674:	2300      	movs	r3, #0
 800f676:	930b      	str	r3, [sp, #44]	; 0x2c
 800f678:	4630      	mov	r0, r6
 800f67a:	ab0b      	add	r3, sp, #44	; 0x2c
 800f67c:	f7ff ff36 	bl	800f4ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f680:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f682:	b37a      	cbz	r2, 800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f684:	4552      	cmp	r2, sl
 800f686:	d02d      	beq.n	800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f688:	4611      	mov	r1, r2
 800f68a:	a80e      	add	r0, sp, #56	; 0x38
 800f68c:	9209      	str	r2, [sp, #36]	; 0x24
 800f68e:	f008 f89b 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f692:	9a06      	ldr	r2, [sp, #24]
 800f694:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f698:	9b01      	ldr	r3, [sp, #4]
 800f69a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f69e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f6a2:	4413      	add	r3, r2
 800f6a4:	f04f 0e02 	mov.w	lr, #2
 800f6a8:	fb91 f1fe 	sdiv	r1, r1, lr
 800f6ac:	4401      	add	r1, r0
 800f6ae:	1a58      	subs	r0, r3, r1
 800f6b0:	9a07      	ldr	r2, [sp, #28]
 800f6b2:	9b02      	ldr	r3, [sp, #8]
 800f6b4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f6b8:	fb9c fcfe 	sdiv	ip, ip, lr
 800f6bc:	4413      	add	r3, r2
 800f6be:	448c      	add	ip, r1
 800f6c0:	eba3 030c 	sub.w	r3, r3, ip
 800f6c4:	435b      	muls	r3, r3
 800f6c6:	fb00 3300 	mla	r3, r0, r0, r3
 800f6ca:	42ab      	cmp	r3, r5
 800f6cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f6ce:	d208      	bcs.n	800f6e2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f6d0:	9803      	ldr	r0, [sp, #12]
 800f6d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f6d4:	6001      	str	r1, [r0, #0]
 800f6d6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f6d8:	9805      	ldr	r0, [sp, #20]
 800f6da:	8008      	strh	r0, [r1, #0]
 800f6dc:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f6de:	461d      	mov	r5, r3
 800f6e0:	800f      	strh	r7, [r1, #0]
 800f6e2:	4692      	mov	sl, r2
 800f6e4:	f10b 0b01 	add.w	fp, fp, #1
 800f6e8:	f1bb 0f04 	cmp.w	fp, #4
 800f6ec:	f104 0408 	add.w	r4, r4, #8
 800f6f0:	d19c      	bne.n	800f62c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f6f2:	9b00      	ldr	r3, [sp, #0]
 800f6f4:	9c08      	ldr	r4, [sp, #32]
 800f6f6:	444b      	add	r3, r9
 800f6f8:	4544      	cmp	r4, r8
 800f6fa:	9300      	str	r3, [sp, #0]
 800f6fc:	d187      	bne.n	800f60e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f6fe:	b021      	add	sp, #132	; 0x84
 800f700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f704:	f04f 35ff 	mov.w	r5, #4294967295
 800f708:	e766      	b.n	800f5d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f70a:	bf00      	nop
 800f70c:	20014c0c 	.word	0x20014c0c
 800f710:	08028710 	.word	0x08028710

0800f714 <_ZN8touchgfx4RectaNERKS0_>:
 800f714:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f718:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f71c:	888c      	ldrh	r4, [r1, #4]
 800f71e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f722:	443c      	add	r4, r7
 800f724:	b2a4      	uxth	r4, r4
 800f726:	fa0f f884 	sxth.w	r8, r4
 800f72a:	45c1      	cmp	r9, r8
 800f72c:	da2f      	bge.n	800f78e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f72e:	8882      	ldrh	r2, [r0, #4]
 800f730:	444a      	add	r2, r9
 800f732:	b292      	uxth	r2, r2
 800f734:	fa0f fe82 	sxth.w	lr, r2
 800f738:	4577      	cmp	r7, lr
 800f73a:	da28      	bge.n	800f78e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f73c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f740:	88cb      	ldrh	r3, [r1, #6]
 800f742:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f746:	442b      	add	r3, r5
 800f748:	b21b      	sxth	r3, r3
 800f74a:	429e      	cmp	r6, r3
 800f74c:	da1f      	bge.n	800f78e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f74e:	88c3      	ldrh	r3, [r0, #6]
 800f750:	4433      	add	r3, r6
 800f752:	b29b      	uxth	r3, r3
 800f754:	fa0f fc83 	sxth.w	ip, r3
 800f758:	4565      	cmp	r5, ip
 800f75a:	da18      	bge.n	800f78e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f75c:	454f      	cmp	r7, r9
 800f75e:	bfb8      	it	lt
 800f760:	464f      	movlt	r7, r9
 800f762:	42b5      	cmp	r5, r6
 800f764:	bfb8      	it	lt
 800f766:	4635      	movlt	r5, r6
 800f768:	45f0      	cmp	r8, lr
 800f76a:	bfd8      	it	le
 800f76c:	4622      	movle	r2, r4
 800f76e:	1bd2      	subs	r2, r2, r7
 800f770:	8082      	strh	r2, [r0, #4]
 800f772:	884a      	ldrh	r2, [r1, #2]
 800f774:	88c9      	ldrh	r1, [r1, #6]
 800f776:	8007      	strh	r7, [r0, #0]
 800f778:	440a      	add	r2, r1
 800f77a:	b292      	uxth	r2, r2
 800f77c:	b211      	sxth	r1, r2
 800f77e:	458c      	cmp	ip, r1
 800f780:	bfa8      	it	ge
 800f782:	4613      	movge	r3, r2
 800f784:	1b5b      	subs	r3, r3, r5
 800f786:	80c3      	strh	r3, [r0, #6]
 800f788:	8045      	strh	r5, [r0, #2]
 800f78a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f78e:	2300      	movs	r3, #0
 800f790:	8003      	strh	r3, [r0, #0]
 800f792:	8043      	strh	r3, [r0, #2]
 800f794:	8083      	strh	r3, [r0, #4]
 800f796:	80c3      	strh	r3, [r0, #6]
 800f798:	e7f7      	b.n	800f78a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f79a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f79a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f79e:	2b00      	cmp	r3, #0
 800f7a0:	dd06      	ble.n	800f7b0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f7a2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f7a6:	2800      	cmp	r0, #0
 800f7a8:	bfcc      	ite	gt
 800f7aa:	2000      	movgt	r0, #0
 800f7ac:	2001      	movle	r0, #1
 800f7ae:	4770      	bx	lr
 800f7b0:	2001      	movs	r0, #1
 800f7b2:	4770      	bx	lr

0800f7b4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f7b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7b8:	2300      	movs	r3, #0
 800f7ba:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f7bc:	8003      	strh	r3, [r0, #0]
 800f7be:	4604      	mov	r4, r0
 800f7c0:	8043      	strh	r3, [r0, #2]
 800f7c2:	8083      	strh	r3, [r0, #4]
 800f7c4:	80c3      	strh	r3, [r0, #6]
 800f7c6:	2d00      	cmp	r5, #0
 800f7c8:	d040      	beq.n	800f84c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f7ca:	1d28      	adds	r0, r5, #4
 800f7cc:	f7ff ffe5 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f7d0:	b988      	cbnz	r0, 800f7f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f7d2:	4620      	mov	r0, r4
 800f7d4:	f7ff ffe1 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f7d8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f7dc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f7e0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f7e4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f7e8:	b138      	cbz	r0, 800f7fa <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f7ea:	8022      	strh	r2, [r4, #0]
 800f7ec:	8063      	strh	r3, [r4, #2]
 800f7ee:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f7f2:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f7f6:	69ad      	ldr	r5, [r5, #24]
 800f7f8:	e7e5      	b.n	800f7c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f7fa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f7fe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f802:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f806:	4290      	cmp	r0, r2
 800f808:	4607      	mov	r7, r0
 800f80a:	bfa8      	it	ge
 800f80c:	4617      	movge	r7, r2
 800f80e:	4472      	add	r2, lr
 800f810:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f814:	8027      	strh	r7, [r4, #0]
 800f816:	4299      	cmp	r1, r3
 800f818:	460e      	mov	r6, r1
 800f81a:	4440      	add	r0, r8
 800f81c:	bfa8      	it	ge
 800f81e:	461e      	movge	r6, r3
 800f820:	4471      	add	r1, lr
 800f822:	4463      	add	r3, ip
 800f824:	b200      	sxth	r0, r0
 800f826:	b212      	sxth	r2, r2
 800f828:	b209      	sxth	r1, r1
 800f82a:	b21b      	sxth	r3, r3
 800f82c:	4290      	cmp	r0, r2
 800f82e:	bfac      	ite	ge
 800f830:	ebc7 0200 	rsbge	r2, r7, r0
 800f834:	ebc7 0202 	rsblt	r2, r7, r2
 800f838:	4299      	cmp	r1, r3
 800f83a:	bfac      	ite	ge
 800f83c:	ebc6 0301 	rsbge	r3, r6, r1
 800f840:	ebc6 0303 	rsblt	r3, r6, r3
 800f844:	8066      	strh	r6, [r4, #2]
 800f846:	80a2      	strh	r2, [r4, #4]
 800f848:	80e3      	strh	r3, [r4, #6]
 800f84a:	e7d4      	b.n	800f7f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f84c:	4620      	mov	r0, r4
 800f84e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f852 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f852:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f856:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f85a:	b383      	cbz	r3, 800f8be <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f85c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f85e:	b374      	cbz	r4, 800f8be <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f860:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f864:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f868:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f86c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f870:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f874:	b303      	cbz	r3, 800f8b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f876:	4668      	mov	r0, sp
 800f878:	1d21      	adds	r1, r4, #4
 800f87a:	f8ad 5000 	strh.w	r5, [sp]
 800f87e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f882:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f886:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f88a:	f7ff ff43 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 800f88e:	4668      	mov	r0, sp
 800f890:	f7ff ff83 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f894:	b980      	cbnz	r0, 800f8b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f896:	f8bd 3000 	ldrh.w	r3, [sp]
 800f89a:	88a2      	ldrh	r2, [r4, #4]
 800f89c:	1a9b      	subs	r3, r3, r2
 800f89e:	f8ad 3000 	strh.w	r3, [sp]
 800f8a2:	88e2      	ldrh	r2, [r4, #6]
 800f8a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f8a8:	1a9b      	subs	r3, r3, r2
 800f8aa:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f8ae:	6823      	ldr	r3, [r4, #0]
 800f8b0:	4669      	mov	r1, sp
 800f8b2:	689b      	ldr	r3, [r3, #8]
 800f8b4:	4620      	mov	r0, r4
 800f8b6:	4798      	blx	r3
 800f8b8:	69a4      	ldr	r4, [r4, #24]
 800f8ba:	2c00      	cmp	r4, #0
 800f8bc:	d1d8      	bne.n	800f870 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f8be:	b002      	add	sp, #8
 800f8c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f8c4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f8c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f8c6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f8ca:	460d      	mov	r5, r1
 800f8cc:	4616      	mov	r6, r2
 800f8ce:	b323      	cbz	r3, 800f91a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f8d0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f8d2:	b314      	cbz	r4, 800f91a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f8d4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f8d8:	b1eb      	cbz	r3, 800f916 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f8da:	6828      	ldr	r0, [r5, #0]
 800f8dc:	6869      	ldr	r1, [r5, #4]
 800f8de:	466b      	mov	r3, sp
 800f8e0:	c303      	stmia	r3!, {r0, r1}
 800f8e2:	4668      	mov	r0, sp
 800f8e4:	1d21      	adds	r1, r4, #4
 800f8e6:	f7ff ff15 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 800f8ea:	4668      	mov	r0, sp
 800f8ec:	f7ff ff55 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f8f0:	b988      	cbnz	r0, 800f916 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f8f2:	f8bd 3000 	ldrh.w	r3, [sp]
 800f8f6:	88a2      	ldrh	r2, [r4, #4]
 800f8f8:	1a9b      	subs	r3, r3, r2
 800f8fa:	f8ad 3000 	strh.w	r3, [sp]
 800f8fe:	88e2      	ldrh	r2, [r4, #6]
 800f900:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f904:	1a9b      	subs	r3, r3, r2
 800f906:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f90a:	6823      	ldr	r3, [r4, #0]
 800f90c:	4632      	mov	r2, r6
 800f90e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f910:	4669      	mov	r1, sp
 800f912:	4620      	mov	r0, r4
 800f914:	4798      	blx	r3
 800f916:	69a4      	ldr	r4, [r4, #24]
 800f918:	e7db      	b.n	800f8d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f91a:	b002      	add	sp, #8
 800f91c:	bd70      	pop	{r4, r5, r6, pc}

0800f91e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f91e:	2000      	movs	r0, #0
 800f920:	4770      	bx	lr

0800f922 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f922:	2001      	movs	r0, #1
 800f924:	4770      	bx	lr

0800f926 <_ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_>:
 800f926:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f928:	6803      	ldr	r3, [r0, #0]
 800f92a:	4604      	mov	r4, r0
 800f92c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f930:	460e      	mov	r6, r1
 800f932:	4601      	mov	r1, r0
 800f934:	4668      	mov	r0, sp
 800f936:	4615      	mov	r5, r2
 800f938:	4798      	blx	r3
 800f93a:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800f93e:	b13b      	cbz	r3, 800f950 <_ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_+0x2a>
 800f940:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f944:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800f948:	4293      	cmp	r3, r2
 800f94a:	bfac      	ite	ge
 800f94c:	2300      	movge	r3, #0
 800f94e:	2301      	movlt	r3, #1
 800f950:	7033      	strb	r3, [r6, #0]
 800f952:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800f956:	b13b      	cbz	r3, 800f968 <_ZN8touchgfx19ScrollableContainer14isScrollableXYERbS1_+0x42>
 800f958:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f95c:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 800f960:	4293      	cmp	r3, r2
 800f962:	bfac      	ite	ge
 800f964:	2300      	movge	r3, #0
 800f966:	2301      	movlt	r3, #1
 800f968:	702b      	strb	r3, [r5, #0]
 800f96a:	b002      	add	sp, #8
 800f96c:	bd70      	pop	{r4, r5, r6, pc}

0800f96e <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss>:
 800f96e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f972:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800f974:	4604      	mov	r4, r0
 800f976:	460f      	mov	r7, r1
 800f978:	4616      	mov	r6, r2
 800f97a:	f100 0838 	add.w	r8, r0, #56	; 0x38
 800f97e:	f100 0964 	add.w	r9, r0, #100	; 0x64
 800f982:	b15d      	cbz	r5, 800f99c <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x2e>
 800f984:	4545      	cmp	r5, r8
 800f986:	d007      	beq.n	800f998 <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x2a>
 800f988:	454d      	cmp	r5, r9
 800f98a:	d005      	beq.n	800f998 <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x2a>
 800f98c:	682b      	ldr	r3, [r5, #0]
 800f98e:	4632      	mov	r2, r6
 800f990:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f992:	4639      	mov	r1, r7
 800f994:	4628      	mov	r0, r5
 800f996:	4798      	blx	r3
 800f998:	69ad      	ldr	r5, [r5, #24]
 800f99a:	e7f2      	b.n	800f982 <_ZN8touchgfx19ScrollableContainer20moveChildrenRelativeEss+0x14>
 800f99c:	f8b4 3098 	ldrh.w	r3, [r4, #152]	; 0x98
 800f9a0:	441f      	add	r7, r3
 800f9a2:	f8b4 309a 	ldrh.w	r3, [r4, #154]	; 0x9a
 800f9a6:	f8a4 7098 	strh.w	r7, [r4, #152]	; 0x98
 800f9aa:	441e      	add	r6, r3
 800f9ac:	f8a4 609a 	strh.w	r6, [r4, #154]	; 0x9a
 800f9b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800f9b4 <_ZN8touchgfx19ScrollableContainerD1Ev>:
 800f9b4:	4770      	bx	lr

0800f9b6 <_ZN8touchgfx9DragEventD1Ev>:
 800f9b6:	4770      	bx	lr

0800f9b8 <_ZN8touchgfx10ClickEventD1Ev>:
 800f9b8:	4770      	bx	lr

0800f9ba <_ZN8touchgfx19ScrollableContainer3addERNS_8DrawableE>:
 800f9ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9bc:	4605      	mov	r5, r0
 800f9be:	4604      	mov	r4, r0
 800f9c0:	f855 3b64 	ldr.w	r3, [r5], #100
 800f9c4:	f100 0638 	add.w	r6, r0, #56	; 0x38
 800f9c8:	460f      	mov	r7, r1
 800f9ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f9cc:	4631      	mov	r1, r6
 800f9ce:	4798      	blx	r3
 800f9d0:	6823      	ldr	r3, [r4, #0]
 800f9d2:	4629      	mov	r1, r5
 800f9d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f9d6:	4620      	mov	r0, r4
 800f9d8:	4798      	blx	r3
 800f9da:	4639      	mov	r1, r7
 800f9dc:	4620      	mov	r0, r4
 800f9de:	f7ff fd55 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f9e2:	4631      	mov	r1, r6
 800f9e4:	4620      	mov	r0, r4
 800f9e6:	f7ff fd51 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f9ea:	4629      	mov	r1, r5
 800f9ec:	4620      	mov	r0, r4
 800f9ee:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800f9f2:	f7ff bd4b 	b.w	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800f9f6 <_ZN8touchgfx10ClickEventD0Ev>:
 800f9f6:	b510      	push	{r4, lr}
 800f9f8:	210c      	movs	r1, #12
 800f9fa:	4604      	mov	r4, r0
 800f9fc:	f017 fd29 	bl	8027452 <_ZdlPvj>
 800fa00:	4620      	mov	r0, r4
 800fa02:	bd10      	pop	{r4, pc}

0800fa04 <_ZN8touchgfx9DragEventD0Ev>:
 800fa04:	b510      	push	{r4, lr}
 800fa06:	2110      	movs	r1, #16
 800fa08:	4604      	mov	r4, r0
 800fa0a:	f017 fd22 	bl	8027452 <_ZdlPvj>
 800fa0e:	4620      	mov	r0, r4
 800fa10:	bd10      	pop	{r4, pc}

0800fa12 <_ZN8touchgfx19ScrollableContainerD0Ev>:
 800fa12:	b510      	push	{r4, lr}
 800fa14:	21bc      	movs	r1, #188	; 0xbc
 800fa16:	4604      	mov	r4, r0
 800fa18:	f017 fd1b 	bl	8027452 <_ZdlPvj>
 800fa1c:	4620      	mov	r0, r4
 800fa1e:	bd10      	pop	{r4, pc}

0800fa20 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE>:
 800fa20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa24:	b08b      	sub	sp, #44	; 0x2c
 800fa26:	aa0a      	add	r2, sp, #40	; 0x28
 800fa28:	2300      	movs	r3, #0
 800fa2a:	f88d 3006 	strb.w	r3, [sp, #6]
 800fa2e:	f802 3d21 	strb.w	r3, [r2, #-33]!
 800fa32:	6803      	ldr	r3, [r0, #0]
 800fa34:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fa38:	f9b1 9008 	ldrsh.w	r9, [r1, #8]
 800fa3c:	f9b1 500a 	ldrsh.w	r5, [r1, #10]
 800fa40:	f9b1 600c 	ldrsh.w	r6, [r1, #12]
 800fa44:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fa48:	4604      	mov	r4, r0
 800fa4a:	460f      	mov	r7, r1
 800fa4c:	f10d 0106 	add.w	r1, sp, #6
 800fa50:	4798      	blx	r3
 800fa52:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 800fa56:	2900      	cmp	r1, #0
 800fa58:	d03d      	beq.n	800fad6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800fa5a:	42a1      	cmp	r1, r4
 800fa5c:	d03b      	beq.n	800fad6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800fa5e:	a802      	add	r0, sp, #8
 800fa60:	f007 feb2 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fa64:	4621      	mov	r1, r4
 800fa66:	a804      	add	r0, sp, #16
 800fa68:	f9bd b008 	ldrsh.w	fp, [sp, #8]
 800fa6c:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800fa70:	f007 feaa 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fa74:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800fa78:	f8b4 20b2 	ldrh.w	r2, [r4, #178]	; 0xb2
 800fa7c:	f8b4 00b4 	ldrh.w	r0, [r4, #180]	; 0xb4
 800fa80:	88f9      	ldrh	r1, [r7, #6]
 800fa82:	f89d c006 	ldrb.w	ip, [sp, #6]
 800fa86:	eba3 030b 	sub.w	r3, r3, fp
 800fa8a:	4413      	add	r3, r2
 800fa8c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fa90:	eba2 020a 	sub.w	r2, r2, sl
 800fa94:	4402      	add	r2, r0
 800fa96:	8938      	ldrh	r0, [r7, #8]
 800fa98:	b29b      	uxth	r3, r3
 800fa9a:	b292      	uxth	r2, r2
 800fa9c:	4419      	add	r1, r3
 800fa9e:	4410      	add	r0, r2
 800faa0:	b209      	sxth	r1, r1
 800faa2:	b200      	sxth	r0, r0
 800faa4:	f1bc 0f00 	cmp.w	ip, #0
 800faa8:	f040 808d 	bne.w	800fbc6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1a6>
 800faac:	f8b7 e00a 	ldrh.w	lr, [r7, #10]
 800fab0:	4473      	add	r3, lr
 800fab2:	b21b      	sxth	r3, r3
 800fab4:	f89d e007 	ldrb.w	lr, [sp, #7]
 800fab8:	f1be 0f00 	cmp.w	lr, #0
 800fabc:	f040 80b1 	bne.w	800fc22 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x202>
 800fac0:	f8b7 e00c 	ldrh.w	lr, [r7, #12]
 800fac4:	4472      	add	r2, lr
 800fac6:	b212      	sxth	r2, r2
 800fac8:	f1bc 0f00 	cmp.w	ip, #0
 800facc:	f000 80c8 	beq.w	800fc60 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x240>
 800fad0:	4290      	cmp	r0, r2
 800fad2:	f040 80ae 	bne.w	800fc32 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x212>
 800fad6:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 800fada:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800fade:	2b00      	cmp	r3, #0
 800fae0:	f040 8099 	bne.w	800fc16 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f6>
 800fae4:	897d      	ldrh	r5, [r7, #10]
 800fae6:	89be      	ldrh	r6, [r7, #12]
 800fae8:	f8b4 20b2 	ldrh.w	r2, [r4, #178]	; 0xb2
 800faec:	f8b4 30b4 	ldrh.w	r3, [r4, #180]	; 0xb4
 800faf0:	f8b4 109e 	ldrh.w	r1, [r4, #158]	; 0x9e
 800faf4:	f8b4 c0a0 	ldrh.w	ip, [r4, #160]	; 0xa0
 800faf8:	f89d 7006 	ldrb.w	r7, [sp, #6]
 800fafc:	4411      	add	r1, r2
 800fafe:	449c      	add	ip, r3
 800fb00:	442a      	add	r2, r5
 800fb02:	4433      	add	r3, r6
 800fb04:	b292      	uxth	r2, r2
 800fb06:	b29b      	uxth	r3, r3
 800fb08:	b289      	uxth	r1, r1
 800fb0a:	fa1f fc8c 	uxth.w	ip, ip
 800fb0e:	b215      	sxth	r5, r2
 800fb10:	b21e      	sxth	r6, r3
 800fb12:	b15f      	cbz	r7, 800fb2c <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x10c>
 800fb14:	1a52      	subs	r2, r2, r1
 800fb16:	b212      	sxth	r2, r2
 800fb18:	2a00      	cmp	r2, #0
 800fb1a:	f9b4 709c 	ldrsh.w	r7, [r4, #156]	; 0x9c
 800fb1e:	bfb8      	it	lt
 800fb20:	4252      	neglt	r2, r2
 800fb22:	b212      	sxth	r2, r2
 800fb24:	4297      	cmp	r7, r2
 800fb26:	bfac      	ite	ge
 800fb28:	2700      	movge	r7, #0
 800fb2a:	2701      	movlt	r7, #1
 800fb2c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800fb30:	b152      	cbz	r2, 800fb48 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x128>
 800fb32:	eba3 030c 	sub.w	r3, r3, ip
 800fb36:	b21b      	sxth	r3, r3
 800fb38:	2b00      	cmp	r3, #0
 800fb3a:	bfb8      	it	lt
 800fb3c:	425b      	neglt	r3, r3
 800fb3e:	f9b4 209c 	ldrsh.w	r2, [r4, #156]	; 0x9c
 800fb42:	b21b      	sxth	r3, r3
 800fb44:	429a      	cmp	r2, r3
 800fb46:	db01      	blt.n	800fb4c <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x12c>
 800fb48:	2f00      	cmp	r7, #0
 800fb4a:	d03e      	beq.n	800fbca <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1aa>
 800fb4c:	2701      	movs	r7, #1
 800fb4e:	fa0f f881 	sxth.w	r8, r1
 800fb52:	fa0f f98c 	sxth.w	r9, ip
 800fb56:	f884 70a3 	strb.w	r7, [r4, #163]	; 0xa3
 800fb5a:	b1a0      	cbz	r0, 800fb86 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x166>
 800fb5c:	f894 30b6 	ldrb.w	r3, [r4, #182]	; 0xb6
 800fb60:	b98b      	cbnz	r3, 800fb86 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x166>
 800fb62:	4a41      	ldr	r2, [pc, #260]	; (800fc68 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x248>)
 800fb64:	9206      	str	r2, [sp, #24]
 800fb66:	2202      	movs	r2, #2
 800fb68:	f88d 201c 	strb.w	r2, [sp, #28]
 800fb6c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800fb70:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fb74:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800fb78:	6803      	ldr	r3, [r0, #0]
 800fb7a:	a906      	add	r1, sp, #24
 800fb7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fb7e:	4798      	blx	r3
 800fb80:	2301      	movs	r3, #1
 800fb82:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800fb86:	f894 10a4 	ldrb.w	r1, [r4, #164]	; 0xa4
 800fb8a:	b149      	cbz	r1, 800fba0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x180>
 800fb8c:	eba5 0108 	sub.w	r1, r5, r8
 800fb90:	b209      	sxth	r1, r1
 800fb92:	b12f      	cbz	r7, 800fba0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x180>
 800fb94:	2900      	cmp	r1, #0
 800fb96:	dc40      	bgt.n	800fc1a <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1fa>
 800fb98:	bf14      	ite	ne
 800fb9a:	f04f 31ff 	movne.w	r1, #4294967295
 800fb9e:	2100      	moveq	r1, #0
 800fba0:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800fba4:	b14a      	cbz	r2, 800fbba <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x19a>
 800fba6:	eba6 0609 	sub.w	r6, r6, r9
 800fbaa:	b232      	sxth	r2, r6
 800fbac:	b12f      	cbz	r7, 800fbba <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x19a>
 800fbae:	2a00      	cmp	r2, #0
 800fbb0:	dc35      	bgt.n	800fc1e <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1fe>
 800fbb2:	bf14      	ite	ne
 800fbb4:	f04f 32ff 	movne.w	r2, #4294967295
 800fbb8:	2200      	moveq	r2, #0
 800fbba:	6823      	ldr	r3, [r4, #0]
 800fbbc:	4620      	mov	r0, r4
 800fbbe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fbc2:	4798      	blx	r3
 800fbc4:	e024      	b.n	800fc10 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800fbc6:	460b      	mov	r3, r1
 800fbc8:	e774      	b.n	800fab4 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x94>
 800fbca:	b308      	cbz	r0, 800fc10 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800fbcc:	f894 30b6 	ldrb.w	r3, [r4, #182]	; 0xb6
 800fbd0:	b9f3      	cbnz	r3, 800fc10 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800fbd2:	ab0a      	add	r3, sp, #40	; 0x28
 800fbd4:	4620      	mov	r0, r4
 800fbd6:	f843 7d18 	str.w	r7, [r3, #-24]!
 800fbda:	4632      	mov	r2, r6
 800fbdc:	4629      	mov	r1, r5
 800fbde:	f7ff fc85 	bl	800f4ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fbe2:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800fbe6:	9b04      	ldr	r3, [sp, #16]
 800fbe8:	4298      	cmp	r0, r3
 800fbea:	d011      	beq.n	800fc10 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x1f0>
 800fbec:	4b1e      	ldr	r3, [pc, #120]	; (800fc68 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x248>)
 800fbee:	9306      	str	r3, [sp, #24]
 800fbf0:	2302      	movs	r3, #2
 800fbf2:	f88d 301c 	strb.w	r3, [sp, #28]
 800fbf6:	f8ad 701e 	strh.w	r7, [sp, #30]
 800fbfa:	f8ad 7020 	strh.w	r7, [sp, #32]
 800fbfe:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800fc02:	6803      	ldr	r3, [r0, #0]
 800fc04:	a906      	add	r1, sp, #24
 800fc06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fc08:	4798      	blx	r3
 800fc0a:	2301      	movs	r3, #1
 800fc0c:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800fc10:	b00b      	add	sp, #44	; 0x2c
 800fc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc16:	2700      	movs	r7, #0
 800fc18:	e79f      	b.n	800fb5a <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x13a>
 800fc1a:	2101      	movs	r1, #1
 800fc1c:	e7c0      	b.n	800fba0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x180>
 800fc1e:	2201      	movs	r2, #1
 800fc20:	e7cb      	b.n	800fbba <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x19a>
 800fc22:	f1bc 0f00 	cmp.w	ip, #0
 800fc26:	f47f af56 	bne.w	800fad6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800fc2a:	428b      	cmp	r3, r1
 800fc2c:	f43f af53 	beq.w	800fad6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800fc30:	4602      	mov	r2, r0
 800fc32:	f8df c038 	ldr.w	ip, [pc, #56]	; 800fc6c <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x24c>
 800fc36:	f8cd c018 	str.w	ip, [sp, #24]
 800fc3a:	f8ad 0020 	strh.w	r0, [sp, #32]
 800fc3e:	f04f 0c00 	mov.w	ip, #0
 800fc42:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 800fc46:	f8ad 101e 	strh.w	r1, [sp, #30]
 800fc4a:	f88d c01c 	strb.w	ip, [sp, #28]
 800fc4e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800fc52:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800fc56:	6803      	ldr	r3, [r0, #0]
 800fc58:	a906      	add	r1, sp, #24
 800fc5a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fc5c:	4798      	blx	r3
 800fc5e:	e73a      	b.n	800fad6 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb6>
 800fc60:	428b      	cmp	r3, r1
 800fc62:	f43f af35 	beq.w	800fad0 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0xb0>
 800fc66:	e7e4      	b.n	800fc32 <_ZN8touchgfx19ScrollableContainer15handleDragEventERKNS_9DragEventE+0x212>
 800fc68:	0802b33c 	.word	0x0802b33c
 800fc6c:	0802b350 	.word	0x0802b350

0800fc70 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE>:
 800fc70:	b570      	push	{r4, r5, r6, lr}
 800fc72:	b086      	sub	sp, #24
 800fc74:	aa06      	add	r2, sp, #24
 800fc76:	2300      	movs	r3, #0
 800fc78:	f88d 3002 	strb.w	r3, [sp, #2]
 800fc7c:	f802 3d15 	strb.w	r3, [r2, #-21]!
 800fc80:	6803      	ldr	r3, [r0, #0]
 800fc82:	460c      	mov	r4, r1
 800fc84:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fc88:	f10d 0102 	add.w	r1, sp, #2
 800fc8c:	4605      	mov	r5, r0
 800fc8e:	4798      	blx	r3
 800fc90:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800fc94:	b10b      	cbz	r3, 800fc9a <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x2a>
 800fc96:	7923      	ldrb	r3, [r4, #4]
 800fc98:	b133      	cbz	r3, 800fca8 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x38>
 800fc9a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800fc9e:	2b00      	cmp	r3, #0
 800fca0:	d067      	beq.n	800fd72 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x102>
 800fca2:	7923      	ldrb	r3, [r4, #4]
 800fca4:	2b01      	cmp	r3, #1
 800fca6:	d164      	bne.n	800fd72 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x102>
 800fca8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fcac:	2a00      	cmp	r2, #0
 800fcae:	bfb8      	it	lt
 800fcb0:	4252      	neglt	r2, r2
 800fcb2:	b213      	sxth	r3, r2
 800fcb4:	f9b5 209c 	ldrsh.w	r2, [r5, #156]	; 0x9c
 800fcb8:	429a      	cmp	r2, r3
 800fcba:	dc5a      	bgt.n	800fd72 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x102>
 800fcbc:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
 800fcbe:	f8b5 10b8 	ldrh.w	r1, [r5, #184]	; 0xb8
 800fcc2:	429a      	cmp	r2, r3
 800fcc4:	bfa8      	it	ge
 800fcc6:	461a      	movge	r2, r3
 800fcc8:	b212      	sxth	r2, r2
 800fcca:	2a05      	cmp	r2, #5
 800fccc:	bfb8      	it	lt
 800fcce:	2205      	movlt	r2, #5
 800fcd0:	4351      	muls	r1, r2
 800fcd2:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 800fcd6:	fb91 f1f3 	sdiv	r1, r1, r3
 800fcda:	f8a5 10a8 	strh.w	r1, [r5, #168]	; 0xa8
 800fcde:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fce2:	3a04      	subs	r2, #4
 800fce4:	2b00      	cmp	r3, #0
 800fce6:	eb02 02c2 	add.w	r2, r2, r2, lsl #3
 800fcea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fcee:	bfd4      	ite	le
 800fcf0:	4618      	movle	r0, r3
 800fcf2:	2001      	movgt	r0, #1
 800fcf4:	00d3      	lsls	r3, r2, #3
 800fcf6:	fb13 f300 	smulbb	r3, r3, r0
 800fcfa:	b21b      	sxth	r3, r3
 800fcfc:	2b00      	cmp	r3, #0
 800fcfe:	f8a5 30ac 	strh.w	r3, [r5, #172]	; 0xac
 800fd02:	bfb8      	it	lt
 800fd04:	425b      	neglt	r3, r3
 800fd06:	b21b      	sxth	r3, r3
 800fd08:	b289      	uxth	r1, r1
 800fd0a:	428b      	cmp	r3, r1
 800fd0c:	bfa8      	it	ge
 800fd0e:	460b      	movge	r3, r1
 800fd10:	f8a5 30a8 	strh.w	r3, [r5, #168]	; 0xa8
 800fd14:	7922      	ldrb	r2, [r4, #4]
 800fd16:	682b      	ldr	r3, [r5, #0]
 800fd18:	2a01      	cmp	r2, #1
 800fd1a:	4629      	mov	r1, r5
 800fd1c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fd20:	d129      	bne.n	800fd76 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x106>
 800fd22:	a801      	add	r0, sp, #4
 800fd24:	4798      	blx	r3
 800fd26:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800fd2a:	f8a5 30aa 	strh.w	r3, [r5, #170]	; 0xaa
 800fd2e:	2601      	movs	r6, #1
 800fd30:	f885 60b0 	strb.w	r6, [r5, #176]	; 0xb0
 800fd34:	f006 fcd8 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 800fd38:	4629      	mov	r1, r5
 800fd3a:	f006 fcdb 	bl	80166f4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800fd3e:	f8d5 0090 	ldr.w	r0, [r5, #144]	; 0x90
 800fd42:	7923      	ldrb	r3, [r4, #4]
 800fd44:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800fd48:	b198      	cbz	r0, 800fd72 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x102>
 800fd4a:	f895 30b6 	ldrb.w	r3, [r5, #182]	; 0xb6
 800fd4e:	b983      	cbnz	r3, 800fd72 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x102>
 800fd50:	4a0b      	ldr	r2, [pc, #44]	; (800fd80 <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0x110>)
 800fd52:	9203      	str	r2, [sp, #12]
 800fd54:	2202      	movs	r2, #2
 800fd56:	f88d 2010 	strb.w	r2, [sp, #16]
 800fd5a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fd5e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800fd62:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fd66:	6803      	ldr	r3, [r0, #0]
 800fd68:	a903      	add	r1, sp, #12
 800fd6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fd6c:	4798      	blx	r3
 800fd6e:	f885 60b6 	strb.w	r6, [r5, #182]	; 0xb6
 800fd72:	b006      	add	sp, #24
 800fd74:	bd70      	pop	{r4, r5, r6, pc}
 800fd76:	a803      	add	r0, sp, #12
 800fd78:	4798      	blx	r3
 800fd7a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fd7e:	e7d4      	b.n	800fd2a <_ZN8touchgfx19ScrollableContainer18handleGestureEventERKNS_12GestureEventE+0xba>
 800fd80:	0802b33c 	.word	0x0802b33c

0800fd84 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv>:
 800fd84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fd86:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 800fd8a:	4604      	mov	r4, r0
 800fd8c:	2b00      	cmp	r3, #0
 800fd8e:	d048      	beq.n	800fe22 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x9e>
 800fd90:	f8b0 00ae 	ldrh.w	r0, [r0, #174]	; 0xae
 800fd94:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 800fd98:	3001      	adds	r0, #1
 800fd9a:	b280      	uxth	r0, r0
 800fd9c:	4298      	cmp	r0, r3
 800fd9e:	f8a4 00ae 	strh.w	r0, [r4, #174]	; 0xae
 800fda2:	d842      	bhi.n	800fe2a <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0xa6>
 800fda4:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 800fda8:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800fdac:	f008 f9a4 	bl	80180f8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 800fdb0:	b282      	uxth	r2, r0
 800fdb2:	f012 0301 	ands.w	r3, r2, #1
 800fdb6:	4605      	mov	r5, r0
 800fdb8:	d006      	beq.n	800fdc8 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x44>
 800fdba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fdbe:	2800      	cmp	r0, #0
 800fdc0:	bfd8      	it	le
 800fdc2:	460b      	movle	r3, r1
 800fdc4:	18d5      	adds	r5, r2, r3
 800fdc6:	b22d      	sxth	r5, r5
 800fdc8:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800fdcc:	2b01      	cmp	r3, #1
 800fdce:	d02a      	beq.n	800fe26 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0xa2>
 800fdd0:	6823      	ldr	r3, [r4, #0]
 800fdd2:	4621      	mov	r1, r4
 800fdd4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fdd8:	4668      	mov	r0, sp
 800fdda:	4798      	blx	r3
 800fddc:	f8bd 6000 	ldrh.w	r6, [sp]
 800fde0:	1bae      	subs	r6, r5, r6
 800fde2:	b236      	sxth	r6, r6
 800fde4:	f894 2036 	ldrb.w	r2, [r4, #54]	; 0x36
 800fde8:	b14a      	cbz	r2, 800fdfe <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x7a>
 800fdea:	6823      	ldr	r3, [r4, #0]
 800fdec:	4621      	mov	r1, r4
 800fdee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fdf2:	4668      	mov	r0, sp
 800fdf4:	4798      	blx	r3
 800fdf6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800fdfa:	1aad      	subs	r5, r5, r2
 800fdfc:	b22a      	sxth	r2, r5
 800fdfe:	6823      	ldr	r3, [r4, #0]
 800fe00:	4631      	mov	r1, r6
 800fe02:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fe06:	4620      	mov	r0, r4
 800fe08:	4798      	blx	r3
 800fe0a:	f884 00b0 	strb.w	r0, [r4, #176]	; 0xb0
 800fe0e:	f894 50b0 	ldrb.w	r5, [r4, #176]	; 0xb0
 800fe12:	b935      	cbnz	r5, 800fe22 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x9e>
 800fe14:	f006 fc68 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 800fe18:	4621      	mov	r1, r4
 800fe1a:	f006 fc9d 	bl	8016758 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800fe1e:	f8a4 50ae 	strh.w	r5, [r4, #174]	; 0xae
 800fe22:	b002      	add	sp, #8
 800fe24:	bd70      	pop	{r4, r5, r6, pc}
 800fe26:	2600      	movs	r6, #0
 800fe28:	e7dc      	b.n	800fde4 <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x60>
 800fe2a:	2300      	movs	r3, #0
 800fe2c:	f884 30b0 	strb.w	r3, [r4, #176]	; 0xb0
 800fe30:	e7ed      	b.n	800fe0e <_ZN8touchgfx19ScrollableContainer15handleTickEventEv+0x8a>

0800fe32 <_ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE>:
 800fe32:	b470      	push	{r4, r5, r6}
 800fe34:	f890 6025 	ldrb.w	r6, [r0, #37]	; 0x25
 800fe38:	461d      	mov	r5, r3
 800fe3a:	b11e      	cbz	r6, 800fe44 <_ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE+0x12>
 800fe3c:	f890 6024 	ldrb.w	r6, [r0, #36]	; 0x24
 800fe40:	b116      	cbz	r6, 800fe48 <_ZN8touchgfx19ScrollableContainer12getLastChildEssPPNS_8DrawableE+0x16>
 800fe42:	6028      	str	r0, [r5, #0]
 800fe44:	bc70      	pop	{r4, r5, r6}
 800fe46:	4770      	bx	lr
 800fe48:	bc70      	pop	{r4, r5, r6}
 800fe4a:	f7ff bb4f 	b.w	800f4ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>

0800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800fe4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe50:	4604      	mov	r4, r0
 800fe52:	4608      	mov	r0, r1
 800fe54:	460d      	mov	r5, r1
 800fe56:	f7ff fca0 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe5a:	b978      	cbnz	r0, 800fe7c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800fe5c:	4620      	mov	r0, r4
 800fe5e:	f7ff fc9c 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe62:	f9b5 6000 	ldrsh.w	r6, [r5]
 800fe66:	b150      	cbz	r0, 800fe7e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800fe68:	8026      	strh	r6, [r4, #0]
 800fe6a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800fe6e:	8063      	strh	r3, [r4, #2]
 800fe70:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800fe74:	80a3      	strh	r3, [r4, #4]
 800fe76:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fe7a:	80e3      	strh	r3, [r4, #6]
 800fe7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe7e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fe82:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fe86:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800fe8a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800fe8e:	88ed      	ldrh	r5, [r5, #6]
 800fe90:	42b1      	cmp	r1, r6
 800fe92:	460f      	mov	r7, r1
 800fe94:	bfa8      	it	ge
 800fe96:	4637      	movge	r7, r6
 800fe98:	4293      	cmp	r3, r2
 800fe9a:	4618      	mov	r0, r3
 800fe9c:	4466      	add	r6, ip
 800fe9e:	bfa8      	it	ge
 800fea0:	4610      	movge	r0, r2
 800fea2:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fea6:	8027      	strh	r7, [r4, #0]
 800fea8:	442a      	add	r2, r5
 800feaa:	88e5      	ldrh	r5, [r4, #6]
 800feac:	8060      	strh	r0, [r4, #2]
 800feae:	4461      	add	r1, ip
 800feb0:	442b      	add	r3, r5
 800feb2:	b236      	sxth	r6, r6
 800feb4:	b209      	sxth	r1, r1
 800feb6:	b212      	sxth	r2, r2
 800feb8:	b21b      	sxth	r3, r3
 800feba:	428e      	cmp	r6, r1
 800febc:	bfac      	ite	ge
 800febe:	ebc7 0106 	rsbge	r1, r7, r6
 800fec2:	ebc7 0101 	rsblt	r1, r7, r1
 800fec6:	429a      	cmp	r2, r3
 800fec8:	bfac      	ite	ge
 800feca:	ebc0 0202 	rsbge	r2, r0, r2
 800fece:	ebc0 0203 	rsblt	r2, r0, r3
 800fed2:	80a1      	strh	r1, [r4, #4]
 800fed4:	80e2      	strh	r2, [r4, #6]
 800fed6:	e7d1      	b.n	800fe7c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800fed8 <_ZNK8touchgfx19ScrollableContainer16getContainedAreaEv>:
 800fed8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800feda:	4604      	mov	r4, r0
 800fedc:	680b      	ldr	r3, [r1, #0]
 800fede:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
 800fee2:	f9b1 000a 	ldrsh.w	r0, [r1, #10]
 800fee6:	80e0      	strh	r0, [r4, #6]
 800fee8:	2200      	movs	r2, #0
 800feea:	8022      	strh	r2, [r4, #0]
 800feec:	8062      	strh	r2, [r4, #2]
 800feee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800fef2:	80a5      	strh	r5, [r4, #4]
 800fef4:	4668      	mov	r0, sp
 800fef6:	4798      	blx	r3
 800fef8:	4620      	mov	r0, r4
 800fefa:	4669      	mov	r1, sp
 800fefc:	f7ff ffa7 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ff00:	4620      	mov	r0, r4
 800ff02:	b003      	add	sp, #12
 800ff04:	bd30      	pop	{r4, r5, pc}

0800ff06 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv>:
 800ff06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff08:	2300      	movs	r3, #0
 800ff0a:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ff0c:	8003      	strh	r3, [r0, #0]
 800ff0e:	4605      	mov	r5, r0
 800ff10:	8043      	strh	r3, [r0, #2]
 800ff12:	8083      	strh	r3, [r0, #4]
 800ff14:	80c3      	strh	r3, [r0, #6]
 800ff16:	f101 0738 	add.w	r7, r1, #56	; 0x38
 800ff1a:	f101 0664 	add.w	r6, r1, #100	; 0x64
 800ff1e:	b164      	cbz	r4, 800ff3a <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x34>
 800ff20:	42bc      	cmp	r4, r7
 800ff22:	d008      	beq.n	800ff36 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x30>
 800ff24:	42b4      	cmp	r4, r6
 800ff26:	d006      	beq.n	800ff36 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x30>
 800ff28:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ff2c:	b11b      	cbz	r3, 800ff36 <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x30>
 800ff2e:	1d21      	adds	r1, r4, #4
 800ff30:	4628      	mov	r0, r5
 800ff32:	f7ff ff8c 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ff36:	69a4      	ldr	r4, [r4, #24]
 800ff38:	e7f1      	b.n	800ff1e <_ZNK8touchgfx19ScrollableContainer24getChildrenContainedAreaEv+0x18>
 800ff3a:	4628      	mov	r0, r5
 800ff3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800ff40 <_ZN8touchgfx3BoxC1EttNS_9colortypeEh>:
 800ff40:	b530      	push	{r4, r5, lr}
 800ff42:	2500      	movs	r5, #0
 800ff44:	8085      	strh	r5, [r0, #4]
 800ff46:	80c5      	strh	r5, [r0, #6]
 800ff48:	8185      	strh	r5, [r0, #12]
 800ff4a:	81c5      	strh	r5, [r0, #14]
 800ff4c:	8205      	strh	r5, [r0, #16]
 800ff4e:	8245      	strh	r5, [r0, #18]
 800ff50:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800ff54:	61c5      	str	r5, [r0, #28]
 800ff56:	8405      	strh	r5, [r0, #32]
 800ff58:	8445      	strh	r5, [r0, #34]	; 0x22
 800ff5a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 800ff5e:	2501      	movs	r5, #1
 800ff60:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800ff64:	4d04      	ldr	r5, [pc, #16]	; (800ff78 <_ZN8touchgfx3BoxC1EttNS_9colortypeEh+0x38>)
 800ff66:	6005      	str	r5, [r0, #0]
 800ff68:	f89d 500c 	ldrb.w	r5, [sp, #12]
 800ff6c:	f880 5026 	strb.w	r5, [r0, #38]	; 0x26
 800ff70:	6283      	str	r3, [r0, #40]	; 0x28
 800ff72:	8101      	strh	r1, [r0, #8]
 800ff74:	8142      	strh	r2, [r0, #10]
 800ff76:	bd30      	pop	{r4, r5, pc}
 800ff78:	0802c778 	.word	0x0802c778

0800ff7c <_ZN8touchgfx19ScrollableContainerC1Ev>:
 800ff7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ff7e:	4b2f      	ldr	r3, [pc, #188]	; (801003c <_ZN8touchgfx19ScrollableContainerC1Ev+0xc0>)
 800ff80:	6003      	str	r3, [r0, #0]
 800ff82:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ff86:	2500      	movs	r5, #0
 800ff88:	4604      	mov	r4, r0
 800ff8a:	2601      	movs	r6, #1
 800ff8c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800ff8e:	2278      	movs	r2, #120	; 0x78
 800ff90:	f04f 33ff 	mov.w	r3, #4294967295
 800ff94:	2111      	movs	r1, #17
 800ff96:	8085      	strh	r5, [r0, #4]
 800ff98:	80c5      	strh	r5, [r0, #6]
 800ff9a:	8105      	strh	r5, [r0, #8]
 800ff9c:	8145      	strh	r5, [r0, #10]
 800ff9e:	8185      	strh	r5, [r0, #12]
 800ffa0:	81c5      	strh	r5, [r0, #14]
 800ffa2:	8205      	strh	r5, [r0, #16]
 800ffa4:	8245      	strh	r5, [r0, #18]
 800ffa6:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800ffaa:	61c5      	str	r5, [r0, #28]
 800ffac:	8405      	strh	r5, [r0, #32]
 800ffae:	8445      	strh	r5, [r0, #34]	; 0x22
 800ffb0:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 800ffb4:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
 800ffb8:	6285      	str	r5, [r0, #40]	; 0x28
 800ffba:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800ffbe:	6303      	str	r3, [r0, #48]	; 0x30
 800ffc0:	8681      	strh	r1, [r0, #52]	; 0x34
 800ffc2:	f880 5036 	strb.w	r5, [r0, #54]	; 0x36
 800ffc6:	4629      	mov	r1, r5
 800ffc8:	9200      	str	r2, [sp, #0]
 800ffca:	3038      	adds	r0, #56	; 0x38
 800ffcc:	462a      	mov	r2, r5
 800ffce:	f7ff ffb7 	bl	800ff40 <_ZN8touchgfx3BoxC1EttNS_9colortypeEh>
 800ffd2:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
 800ffd6:	9300      	str	r3, [sp, #0]
 800ffd8:	462a      	mov	r2, r5
 800ffda:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ffdc:	4629      	mov	r1, r5
 800ffde:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800ffe2:	f7ff ffad 	bl	800ff40 <_ZN8touchgfx3BoxC1EttNS_9colortypeEh>
 800ffe6:	2305      	movs	r3, #5
 800ffe8:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 800ffec:	4b14      	ldr	r3, [pc, #80]	; (8010040 <_ZN8touchgfx19ScrollableContainerC1Ev+0xc4>)
 800ffee:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 800fff2:	4620      	mov	r0, r4
 800fff4:	e9c4 5524 	strd	r5, r5, [r4, #144]	; 0x90
 800fff8:	f8a4 50a0 	strh.w	r5, [r4, #160]	; 0xa0
 800fffc:	f884 50a2 	strb.w	r5, [r4, #162]	; 0xa2
 8010000:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 8010004:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 8010008:	f884 60a5 	strb.w	r6, [r4, #165]	; 0xa5
 801000c:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 8010010:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 8010014:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 8010018:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801001c:	f8a4 50b2 	strh.w	r5, [r4, #178]	; 0xb2
 8010020:	f8a4 50b4 	strh.w	r5, [r4, #180]	; 0xb4
 8010024:	f884 50b6 	strb.w	r5, [r4, #182]	; 0xb6
 8010028:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801002c:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
 8010030:	f884 5089 	strb.w	r5, [r4, #137]	; 0x89
 8010034:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 8010038:	b002      	add	sp, #8
 801003a:	bd70      	pop	{r4, r5, r6, pc}
 801003c:	0802b364 	.word	0x0802b364
 8010040:	00010007 	.word	0x00010007

08010044 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv>:
 8010044:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010046:	f891 30a4 	ldrb.w	r3, [r1, #164]	; 0xa4
 801004a:	2600      	movs	r6, #0
 801004c:	4605      	mov	r5, r0
 801004e:	460c      	mov	r4, r1
 8010050:	8006      	strh	r6, [r0, #0]
 8010052:	8046      	strh	r6, [r0, #2]
 8010054:	8086      	strh	r6, [r0, #4]
 8010056:	80c6      	strh	r6, [r0, #6]
 8010058:	2b00      	cmp	r3, #0
 801005a:	d041      	beq.n	80100e0 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x9c>
 801005c:	680b      	ldr	r3, [r1, #0]
 801005e:	4668      	mov	r0, sp
 8010060:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010064:	4798      	blx	r3
 8010066:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 801006a:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 801006e:	2b00      	cmp	r3, #0
 8010070:	d039      	beq.n	80100e6 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0xa2>
 8010072:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8010076:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801007a:	429a      	cmp	r2, r3
 801007c:	dd05      	ble.n	801008a <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x46>
 801007e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8010082:	f894 602d 	ldrb.w	r6, [r4, #45]	; 0x2d
 8010086:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801008a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801008e:	42bb      	cmp	r3, r7
 8010090:	da26      	bge.n	80100e0 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x9c>
 8010092:	f9bd 0000 	ldrsh.w	r0, [sp]
 8010096:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 801009a:	4242      	negs	r2, r0
 801009c:	4438      	add	r0, r7
 801009e:	b200      	sxth	r0, r0
 80100a0:	1ac0      	subs	r0, r0, r3
 80100a2:	eb06 0641 	add.w	r6, r6, r1, lsl #1
 80100a6:	435a      	muls	r2, r3
 80100a8:	1b9e      	subs	r6, r3, r6
 80100aa:	4343      	muls	r3, r0
 80100ac:	f894 002d 	ldrb.w	r0, [r4, #45]	; 0x2d
 80100b0:	fb92 f2f7 	sdiv	r2, r2, r7
 80100b4:	fb93 f3f7 	sdiv	r3, r3, r7
 80100b8:	4413      	add	r3, r2
 80100ba:	1af3      	subs	r3, r6, r3
 80100bc:	0047      	lsls	r7, r0, #1
 80100be:	429f      	cmp	r7, r3
 80100c0:	dd05      	ble.n	80100ce <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x8a>
 80100c2:	1afb      	subs	r3, r7, r3
 80100c4:	4353      	muls	r3, r2
 80100c6:	fb93 f3f6 	sdiv	r3, r3, r6
 80100ca:	1ad2      	subs	r2, r2, r3
 80100cc:	463b      	mov	r3, r7
 80100ce:	b289      	uxth	r1, r1
 80100d0:	8964      	ldrh	r4, [r4, #10]
 80100d2:	80ab      	strh	r3, [r5, #4]
 80100d4:	180e      	adds	r6, r1, r0
 80100d6:	1ba4      	subs	r4, r4, r6
 80100d8:	4411      	add	r1, r2
 80100da:	8029      	strh	r1, [r5, #0]
 80100dc:	806c      	strh	r4, [r5, #2]
 80100de:	80e8      	strh	r0, [r5, #6]
 80100e0:	4628      	mov	r0, r5
 80100e2:	b003      	add	sp, #12
 80100e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100e6:	461e      	mov	r6, r3
 80100e8:	e7cf      	b.n	801008a <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv+0x46>

080100ea <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv>:
 80100ea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80100ec:	f891 30a5 	ldrb.w	r3, [r1, #165]	; 0xa5
 80100f0:	2600      	movs	r6, #0
 80100f2:	4605      	mov	r5, r0
 80100f4:	460c      	mov	r4, r1
 80100f6:	8006      	strh	r6, [r0, #0]
 80100f8:	8046      	strh	r6, [r0, #2]
 80100fa:	8086      	strh	r6, [r0, #4]
 80100fc:	80c6      	strh	r6, [r0, #6]
 80100fe:	2b00      	cmp	r3, #0
 8010100:	d041      	beq.n	8010186 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x9c>
 8010102:	680b      	ldr	r3, [r1, #0]
 8010104:	4668      	mov	r0, sp
 8010106:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801010a:	4798      	blx	r3
 801010c:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8010110:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8010114:	2b00      	cmp	r3, #0
 8010116:	d039      	beq.n	801018c <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0xa2>
 8010118:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801011c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010120:	429a      	cmp	r2, r3
 8010122:	dd05      	ble.n	8010130 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x46>
 8010124:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8010128:	f894 602d 	ldrb.w	r6, [r4, #45]	; 0x2d
 801012c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010130:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010134:	42bb      	cmp	r3, r7
 8010136:	da26      	bge.n	8010186 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x9c>
 8010138:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
 801013c:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 8010140:	4242      	negs	r2, r0
 8010142:	4438      	add	r0, r7
 8010144:	b200      	sxth	r0, r0
 8010146:	1ac0      	subs	r0, r0, r3
 8010148:	eb06 0641 	add.w	r6, r6, r1, lsl #1
 801014c:	435a      	muls	r2, r3
 801014e:	1b9e      	subs	r6, r3, r6
 8010150:	4343      	muls	r3, r0
 8010152:	f894 002d 	ldrb.w	r0, [r4, #45]	; 0x2d
 8010156:	fb92 f2f7 	sdiv	r2, r2, r7
 801015a:	fb93 f3f7 	sdiv	r3, r3, r7
 801015e:	4413      	add	r3, r2
 8010160:	1af3      	subs	r3, r6, r3
 8010162:	0047      	lsls	r7, r0, #1
 8010164:	429f      	cmp	r7, r3
 8010166:	dd05      	ble.n	8010174 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x8a>
 8010168:	1afb      	subs	r3, r7, r3
 801016a:	4353      	muls	r3, r2
 801016c:	fb93 f3f6 	sdiv	r3, r3, r6
 8010170:	1ad2      	subs	r2, r2, r3
 8010172:	463b      	mov	r3, r7
 8010174:	b289      	uxth	r1, r1
 8010176:	8924      	ldrh	r4, [r4, #8]
 8010178:	80a8      	strh	r0, [r5, #4]
 801017a:	180e      	adds	r6, r1, r0
 801017c:	1ba4      	subs	r4, r4, r6
 801017e:	4411      	add	r1, r2
 8010180:	802c      	strh	r4, [r5, #0]
 8010182:	8069      	strh	r1, [r5, #2]
 8010184:	80eb      	strh	r3, [r5, #6]
 8010186:	4628      	mov	r0, r5
 8010188:	b003      	add	sp, #12
 801018a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801018c:	461e      	mov	r6, r3
 801018e:	e7cf      	b.n	8010130 <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv+0x46>

08010190 <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_>:
 8010190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010194:	4617      	mov	r7, r2
 8010196:	2200      	movs	r2, #0
 8010198:	8002      	strh	r2, [r0, #0]
 801019a:	8042      	strh	r2, [r0, #2]
 801019c:	8082      	strh	r2, [r0, #4]
 801019e:	80c2      	strh	r2, [r0, #6]
 80101a0:	4604      	mov	r4, r0
 80101a2:	4638      	mov	r0, r7
 80101a4:	460e      	mov	r6, r1
 80101a6:	4698      	mov	r8, r3
 80101a8:	f7ff faf7 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80101ac:	4605      	mov	r5, r0
 80101ae:	b998      	cbnz	r0, 80101d8 <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_+0x48>
 80101b0:	4640      	mov	r0, r8
 80101b2:	f7ff faf2 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80101b6:	f896 202c 	ldrb.w	r2, [r6, #44]	; 0x2c
 80101ba:	f896 102d 	ldrb.w	r1, [r6, #45]	; 0x2d
 80101be:	b908      	cbnz	r0, 80101c4 <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_+0x34>
 80101c0:	eb01 0542 	add.w	r5, r1, r2, lsl #1
 80101c4:	8933      	ldrh	r3, [r6, #8]
 80101c6:	f9b7 7002 	ldrsh.w	r7, [r7, #2]
 80101ca:	8022      	strh	r2, [r4, #0]
 80101cc:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80101d0:	1b58      	subs	r0, r3, r5
 80101d2:	8067      	strh	r7, [r4, #2]
 80101d4:	80a0      	strh	r0, [r4, #4]
 80101d6:	80e1      	strh	r1, [r4, #6]
 80101d8:	4620      	mov	r0, r4
 80101da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080101de <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_>:
 80101de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101e2:	4604      	mov	r4, r0
 80101e4:	2000      	movs	r0, #0
 80101e6:	8020      	strh	r0, [r4, #0]
 80101e8:	8060      	strh	r0, [r4, #2]
 80101ea:	80a0      	strh	r0, [r4, #4]
 80101ec:	80e0      	strh	r0, [r4, #6]
 80101ee:	4618      	mov	r0, r3
 80101f0:	460f      	mov	r7, r1
 80101f2:	4616      	mov	r6, r2
 80101f4:	4698      	mov	r8, r3
 80101f6:	f7ff fad0 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80101fa:	4605      	mov	r5, r0
 80101fc:	b998      	cbnz	r0, 8010226 <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_+0x48>
 80101fe:	4630      	mov	r0, r6
 8010200:	f7ff facb 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8010204:	f897 602c 	ldrb.w	r6, [r7, #44]	; 0x2c
 8010208:	f897 102d 	ldrb.w	r1, [r7, #45]	; 0x2d
 801020c:	b908      	cbnz	r0, 8010212 <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_+0x34>
 801020e:	eb01 0546 	add.w	r5, r1, r6, lsl #1
 8010212:	897a      	ldrh	r2, [r7, #10]
 8010214:	f8b8 3000 	ldrh.w	r3, [r8]
 8010218:	8023      	strh	r3, [r4, #0]
 801021a:	eba2 0246 	sub.w	r2, r2, r6, lsl #1
 801021e:	1b50      	subs	r0, r2, r5
 8010220:	8066      	strh	r6, [r4, #2]
 8010222:	80a1      	strh	r1, [r4, #4]
 8010224:	80e0      	strh	r0, [r4, #6]
 8010226:	4620      	mov	r0, r4
 8010228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801022c <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>:
 801022c:	b570      	push	{r4, r5, r6, lr}
 801022e:	b088      	sub	sp, #32
 8010230:	4604      	mov	r4, r0
 8010232:	4601      	mov	r1, r0
 8010234:	4668      	mov	r0, sp
 8010236:	f7ff ff05 	bl	8010044 <_ZNK8touchgfx19ScrollableContainer13getXScrollbarEv>
 801023a:	4621      	mov	r1, r4
 801023c:	a802      	add	r0, sp, #8
 801023e:	f7ff ff54 	bl	80100ea <_ZNK8touchgfx19ScrollableContainer13getYScrollbarEv>
 8010242:	ab02      	add	r3, sp, #8
 8010244:	466a      	mov	r2, sp
 8010246:	4621      	mov	r1, r4
 8010248:	a804      	add	r0, sp, #16
 801024a:	f7ff ffa1 	bl	8010190 <_ZNK8touchgfx19ScrollableContainer10getXBorderERKNS_4RectES3_>
 801024e:	ab02      	add	r3, sp, #8
 8010250:	466a      	mov	r2, sp
 8010252:	4621      	mov	r1, r4
 8010254:	a806      	add	r0, sp, #24
 8010256:	f7ff ffc2 	bl	80101de <_ZNK8touchgfx19ScrollableContainer10getYBorderERKNS_4RectES3_>
 801025a:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 801025e:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 8010262:	429a      	cmp	r2, r3
 8010264:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010268:	da02      	bge.n	8010270 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0x44>
 801026a:	4630      	mov	r0, r6
 801026c:	f007 fa11 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 8010270:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8010274:	f9b4 3068 	ldrsh.w	r3, [r4, #104]	; 0x68
 8010278:	429a      	cmp	r2, r3
 801027a:	f104 0564 	add.w	r5, r4, #100	; 0x64
 801027e:	da02      	bge.n	8010286 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0x5a>
 8010280:	4628      	mov	r0, r5
 8010282:	f007 fa06 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 8010286:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801028a:	f8bd 0000 	ldrh.w	r0, [sp]
 801028e:	f9bd 1004 	ldrsh.w	r1, [sp, #4]
 8010292:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8010296:	87a0      	strh	r0, [r4, #60]	; 0x3c
 8010298:	87e3      	strh	r3, [r4, #62]	; 0x3e
 801029a:	4630      	mov	r0, r6
 801029c:	f7f2 fc46 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80102a0:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80102a4:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 80102a8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80102ac:	f8a4 0068 	strh.w	r0, [r4, #104]	; 0x68
 80102b0:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
 80102b4:	4628      	mov	r0, r5
 80102b6:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80102ba:	f7f2 fc37 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80102be:	8922      	ldrh	r2, [r4, #8]
 80102c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80102c4:	2300      	movs	r3, #0
 80102c6:	8962      	ldrh	r2, [r4, #10]
 80102c8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80102cc:	a804      	add	r0, sp, #16
 80102ce:	f8ad 201e 	strh.w	r2, [sp, #30]
 80102d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80102d6:	f7ff fa60 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80102da:	b920      	cbnz	r0, 80102e6 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0xba>
 80102dc:	6823      	ldr	r3, [r4, #0]
 80102de:	a904      	add	r1, sp, #16
 80102e0:	691b      	ldr	r3, [r3, #16]
 80102e2:	4620      	mov	r0, r4
 80102e4:	4798      	blx	r3
 80102e6:	a806      	add	r0, sp, #24
 80102e8:	f7ff fa57 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80102ec:	b920      	cbnz	r0, 80102f8 <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv+0xcc>
 80102ee:	6823      	ldr	r3, [r4, #0]
 80102f0:	a906      	add	r1, sp, #24
 80102f2:	691b      	ldr	r3, [r3, #16]
 80102f4:	4620      	mov	r0, r4
 80102f6:	4798      	blx	r3
 80102f8:	b008      	add	sp, #32
 80102fa:	bd70      	pop	{r4, r5, r6, pc}

080102fc <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE>:
 80102fc:	b570      	push	{r4, r5, r6, lr}
 80102fe:	790b      	ldrb	r3, [r1, #4]
 8010300:	b08a      	sub	sp, #40	; 0x28
 8010302:	4604      	mov	r4, r0
 8010304:	460d      	mov	r5, r1
 8010306:	2b00      	cmp	r3, #0
 8010308:	d17e      	bne.n	8010408 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x10c>
 801030a:	2201      	movs	r2, #1
 801030c:	f880 20a2 	strb.w	r2, [r0, #162]	; 0xa2
 8010310:	f890 20b0 	ldrb.w	r2, [r0, #176]	; 0xb0
 8010314:	b142      	cbz	r2, 8010328 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x2c>
 8010316:	f880 30b0 	strb.w	r3, [r0, #176]	; 0xb0
 801031a:	f8a0 30ae 	strh.w	r3, [r0, #174]	; 0xae
 801031e:	f006 f9e3 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8010322:	4621      	mov	r1, r4
 8010324:	f006 fa18 	bl	8016758 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8010328:	4623      	mov	r3, r4
 801032a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801032e:	f853 0bb4 	ldr.w	r0, [r3], #180
 8010332:	9301      	str	r3, [sp, #4]
 8010334:	f104 03b2 	add.w	r3, r4, #178	; 0xb2
 8010338:	9300      	str	r3, [sp, #0]
 801033a:	6f86      	ldr	r6, [r0, #120]	; 0x78
 801033c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8010340:	f104 0390 	add.w	r3, r4, #144	; 0x90
 8010344:	4620      	mov	r0, r4
 8010346:	47b0      	blx	r6
 8010348:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 801034c:	42a3      	cmp	r3, r4
 801034e:	bf04      	itt	eq
 8010350:	2300      	moveq	r3, #0
 8010352:	f8c4 3090 	streq.w	r3, [r4, #144]	; 0x90
 8010356:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 801035a:	2900      	cmp	r1, #0
 801035c:	d03a      	beq.n	80103d4 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xd8>
 801035e:	2600      	movs	r6, #0
 8010360:	f884 60b6 	strb.w	r6, [r4, #182]	; 0xb6
 8010364:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010368:	f8a4 309e 	strh.w	r3, [r4, #158]	; 0x9e
 801036c:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010370:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
 8010374:	a803      	add	r0, sp, #12
 8010376:	f007 fa27 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801037a:	4621      	mov	r1, r4
 801037c:	a805      	add	r0, sp, #20
 801037e:	f007 fa23 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010382:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010386:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801038a:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 801038e:	7929      	ldrb	r1, [r5, #4]
 8010390:	f88d 1020 	strb.w	r1, [sp, #32]
 8010394:	1ad2      	subs	r2, r2, r3
 8010396:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 801039a:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801039e:	441a      	add	r2, r3
 80103a0:	88eb      	ldrh	r3, [r5, #6]
 80103a2:	441a      	add	r2, r3
 80103a4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80103a8:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 80103ac:	1a1b      	subs	r3, r3, r0
 80103ae:	f8b4 00b4 	ldrh.w	r0, [r4, #180]	; 0xb4
 80103b2:	4403      	add	r3, r0
 80103b4:	8928      	ldrh	r0, [r5, #8]
 80103b6:	4403      	add	r3, r0
 80103b8:	482f      	ldr	r0, [pc, #188]	; (8010478 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x17c>)
 80103ba:	9007      	str	r0, [sp, #28]
 80103bc:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 80103c0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80103c4:	6803      	ldr	r3, [r0, #0]
 80103c6:	a907      	add	r1, sp, #28
 80103c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80103ca:	4798      	blx	r3
 80103cc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80103d0:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80103d4:	f894 20a2 	ldrb.w	r2, [r4, #162]	; 0xa2
 80103d8:	2300      	movs	r3, #0
 80103da:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 80103de:	b112      	cbz	r2, 80103e6 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xea>
 80103e0:	f894 30a6 	ldrb.w	r3, [r4, #166]	; 0xa6
 80103e4:	b90b      	cbnz	r3, 80103ea <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xee>
 80103e6:	f894 30a7 	ldrb.w	r3, [r4, #167]	; 0xa7
 80103ea:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
 80103ee:	b112      	cbz	r2, 80103f6 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xfa>
 80103f0:	f894 30a6 	ldrb.w	r3, [r4, #166]	; 0xa6
 80103f4:	b90b      	cbnz	r3, 80103fa <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xfe>
 80103f6:	f894 30a7 	ldrb.w	r3, [r4, #167]	; 0xa7
 80103fa:	f884 3089 	strb.w	r3, [r4, #137]	; 0x89
 80103fe:	4620      	mov	r0, r4
 8010400:	f7ff ff14 	bl	801022c <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>
 8010404:	b00a      	add	sp, #40	; 0x28
 8010406:	bd70      	pop	{r4, r5, r6, pc}
 8010408:	2b02      	cmp	r3, #2
 801040a:	d0fb      	beq.n	8010404 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x108>
 801040c:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
 8010410:	b361      	cbz	r1, 801046c <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x170>
 8010412:	a803      	add	r0, sp, #12
 8010414:	f007 f9d8 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010418:	4621      	mov	r1, r4
 801041a:	a805      	add	r0, sp, #20
 801041c:	f007 f9d4 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010420:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010424:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010428:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 801042c:	7929      	ldrb	r1, [r5, #4]
 801042e:	f88d 1020 	strb.w	r1, [sp, #32]
 8010432:	1ad2      	subs	r2, r2, r3
 8010434:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8010438:	441a      	add	r2, r3
 801043a:	88eb      	ldrh	r3, [r5, #6]
 801043c:	441a      	add	r2, r3
 801043e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010442:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 8010446:	1a1b      	subs	r3, r3, r0
 8010448:	f8b4 00b4 	ldrh.w	r0, [r4, #180]	; 0xb4
 801044c:	4403      	add	r3, r0
 801044e:	8928      	ldrh	r0, [r5, #8]
 8010450:	4403      	add	r3, r0
 8010452:	4809      	ldr	r0, [pc, #36]	; (8010478 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0x17c>)
 8010454:	9007      	str	r0, [sp, #28]
 8010456:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801045a:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 801045e:	2300      	movs	r3, #0
 8010460:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010464:	6803      	ldr	r3, [r0, #0]
 8010466:	a907      	add	r1, sp, #28
 8010468:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801046a:	4798      	blx	r3
 801046c:	2300      	movs	r3, #0
 801046e:	e9c4 3324 	strd	r3, r3, [r4, #144]	; 0x90
 8010472:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 8010476:	e7ad      	b.n	80103d4 <_ZN8touchgfx19ScrollableContainer16handleClickEventERKNS_10ClickEventE+0xd8>
 8010478:	0802b33c 	.word	0x0802b33c

0801047c <_ZN8touchgfx19ScrollableContainer8doScrollEss>:
 801047c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801047e:	4606      	mov	r6, r0
 8010480:	4615      	mov	r5, r2
 8010482:	460c      	mov	r4, r1
 8010484:	b919      	cbnz	r1, 801048e <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x12>
 8010486:	b912      	cbnz	r2, 801048e <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x12>
 8010488:	2000      	movs	r0, #0
 801048a:	b003      	add	sp, #12
 801048c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801048e:	6833      	ldr	r3, [r6, #0]
 8010490:	4631      	mov	r1, r6
 8010492:	4668      	mov	r0, sp
 8010494:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010498:	4798      	blx	r3
 801049a:	f9bd 1004 	ldrsh.w	r1, [sp, #4]
 801049e:	f9b6 0008 	ldrsh.w	r0, [r6, #8]
 80104a2:	f9bd 2000 	ldrsh.w	r2, [sp]
 80104a6:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 80104aa:	4288      	cmp	r0, r1
 80104ac:	da2c      	bge.n	8010508 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x8c>
 80104ae:	2c00      	cmp	r4, #0
 80104b0:	dd20      	ble.n	80104f4 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x78>
 80104b2:	1913      	adds	r3, r2, r4
 80104b4:	2b00      	cmp	r3, #0
 80104b6:	dd01      	ble.n	80104bc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 80104b8:	4252      	negs	r2, r2
 80104ba:	b214      	sxth	r4, r2
 80104bc:	f9b6 200a 	ldrsh.w	r2, [r6, #10]
 80104c0:	4297      	cmp	r7, r2
 80104c2:	dd2c      	ble.n	801051e <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xa2>
 80104c4:	2d00      	cmp	r5, #0
 80104c6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80104ca:	dd1f      	ble.n	801050c <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x90>
 80104cc:	195a      	adds	r2, r3, r5
 80104ce:	2a00      	cmp	r2, #0
 80104d0:	dd04      	ble.n	80104dc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>
 80104d2:	425b      	negs	r3, r3
 80104d4:	b21d      	sxth	r5, r3
 80104d6:	b90c      	cbnz	r4, 80104dc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>
 80104d8:	2d00      	cmp	r5, #0
 80104da:	d0d5      	beq.n	8010488 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xc>
 80104dc:	6833      	ldr	r3, [r6, #0]
 80104de:	462a      	mov	r2, r5
 80104e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80104e4:	4621      	mov	r1, r4
 80104e6:	4630      	mov	r0, r6
 80104e8:	4798      	blx	r3
 80104ea:	4630      	mov	r0, r6
 80104ec:	f7ff fe9e 	bl	801022c <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>
 80104f0:	2001      	movs	r0, #1
 80104f2:	e7ca      	b.n	801048a <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xe>
 80104f4:	d0e2      	beq.n	80104bc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 80104f6:	440a      	add	r2, r1
 80104f8:	b292      	uxth	r2, r2
 80104fa:	fa04 f382 	sxtah	r3, r4, r2
 80104fe:	4283      	cmp	r3, r0
 8010500:	dadc      	bge.n	80104bc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 8010502:	1a84      	subs	r4, r0, r2
 8010504:	b224      	sxth	r4, r4
 8010506:	e7d9      	b.n	80104bc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 8010508:	2400      	movs	r4, #0
 801050a:	e7d7      	b.n	80104bc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x40>
 801050c:	d007      	beq.n	801051e <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xa2>
 801050e:	443b      	add	r3, r7
 8010510:	b29b      	uxth	r3, r3
 8010512:	fa05 f183 	sxtah	r1, r5, r3
 8010516:	4291      	cmp	r1, r2
 8010518:	dae0      	bge.n	80104dc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>
 801051a:	1ad3      	subs	r3, r2, r3
 801051c:	e7da      	b.n	80104d4 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x58>
 801051e:	2c00      	cmp	r4, #0
 8010520:	d0b2      	beq.n	8010488 <_ZN8touchgfx19ScrollableContainer8doScrollEss+0xc>
 8010522:	2500      	movs	r5, #0
 8010524:	e7da      	b.n	80104dc <_ZN8touchgfx19ScrollableContainer8doScrollEss+0x60>

08010526 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv>:
 8010526:	b513      	push	{r0, r1, r4, lr}
 8010528:	6803      	ldr	r3, [r0, #0]
 801052a:	4601      	mov	r1, r0
 801052c:	4604      	mov	r4, r0
 801052e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010532:	4668      	mov	r0, sp
 8010534:	4798      	blx	r3
 8010536:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
 801053a:	f9bd 1000 	ldrsh.w	r1, [sp]
 801053e:	2800      	cmp	r0, #0
 8010540:	dd20      	ble.n	8010584 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x5e>
 8010542:	4602      	mov	r2, r0
 8010544:	2900      	cmp	r1, #0
 8010546:	dc0e      	bgt.n	8010566 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x40>
 8010548:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801054c:	f9b4 0008 	ldrsh.w	r0, [r4, #8]
 8010550:	440b      	add	r3, r1
 8010552:	b21b      	sxth	r3, r3
 8010554:	4298      	cmp	r0, r3
 8010556:	dd04      	ble.n	8010562 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x3c>
 8010558:	1a1b      	subs	r3, r3, r0
 801055a:	4299      	cmp	r1, r3
 801055c:	bfb8      	it	lt
 801055e:	4619      	movlt	r1, r3
 8010560:	b909      	cbnz	r1, 8010566 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x40>
 8010562:	b1f2      	cbz	r2, 80105a2 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x7c>
 8010564:	2100      	movs	r1, #0
 8010566:	6823      	ldr	r3, [r4, #0]
 8010568:	4252      	negs	r2, r2
 801056a:	4249      	negs	r1, r1
 801056c:	4620      	mov	r0, r4
 801056e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010572:	b212      	sxth	r2, r2
 8010574:	b209      	sxth	r1, r1
 8010576:	4798      	blx	r3
 8010578:	4620      	mov	r0, r4
 801057a:	b002      	add	sp, #8
 801057c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010580:	f7ff be54 	b.w	801022c <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>
 8010584:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010588:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 801058c:	4403      	add	r3, r0
 801058e:	b21b      	sxth	r3, r3
 8010590:	429a      	cmp	r2, r3
 8010592:	dd04      	ble.n	801059e <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x78>
 8010594:	1a9a      	subs	r2, r3, r2
 8010596:	4282      	cmp	r2, r0
 8010598:	bfb8      	it	lt
 801059a:	4602      	movlt	r2, r0
 801059c:	e7d2      	b.n	8010544 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x1e>
 801059e:	2200      	movs	r2, #0
 80105a0:	e7d0      	b.n	8010544 <_ZN8touchgfx19ScrollableContainer20childGeometryChangedEv+0x1e>
 80105a2:	b002      	add	sp, #8
 80105a4:	bd10      	pop	{r4, pc}

080105a6 <_ZN8touchgfx19ScrollableContainer18setScrollbarsColorENS_9colortypeE>:
 80105a6:	6301      	str	r1, [r0, #48]	; 0x30
 80105a8:	6601      	str	r1, [r0, #96]	; 0x60
 80105aa:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80105ae:	4770      	bx	lr

080105b0 <_ZN8touchgfx19ScrollableContainer31setScrollbarsPermanentlyVisibleEb>:
 80105b0:	2201      	movs	r2, #1
 80105b2:	f880 10a7 	strb.w	r1, [r0, #167]	; 0xa7
 80105b6:	f880 205d 	strb.w	r2, [r0, #93]	; 0x5d
 80105ba:	f880 2089 	strb.w	r2, [r0, #137]	; 0x89
 80105be:	f7ff be35 	b.w	801022c <_ZN8touchgfx19ScrollableContainer20invalidateScrollbarsEv>

080105c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80105c2:	b513      	push	{r0, r1, r4, lr}
 80105c4:	6803      	ldr	r3, [r0, #0]
 80105c6:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80105ca:	2300      	movs	r3, #0
 80105cc:	e9cd 3300 	strd	r3, r3, [sp]
 80105d0:	466b      	mov	r3, sp
 80105d2:	47a0      	blx	r4
 80105d4:	b002      	add	sp, #8
 80105d6:	bd10      	pop	{r4, pc}

080105d8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80105d8:	2301      	movs	r3, #1
 80105da:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80105de:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80105e2:	4770      	bx	lr

080105e4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80105e4:	2301      	movs	r3, #1
 80105e6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80105ea:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80105ee:	4770      	bx	lr

080105f0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80105f0:	6843      	ldr	r3, [r0, #4]
 80105f2:	2201      	movs	r2, #1
 80105f4:	725a      	strb	r2, [r3, #9]
 80105f6:	6840      	ldr	r0, [r0, #4]
 80105f8:	6803      	ldr	r3, [r0, #0]
 80105fa:	691b      	ldr	r3, [r3, #16]
 80105fc:	4718      	bx	r3

080105fe <_ZN8touchgfx3HAL8flushDMAEv>:
 80105fe:	6840      	ldr	r0, [r0, #4]
 8010600:	6803      	ldr	r3, [r0, #0]
 8010602:	689b      	ldr	r3, [r3, #8]
 8010604:	4718      	bx	r3

08010606 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010606:	b530      	push	{r4, r5, lr}
 8010608:	b08b      	sub	sp, #44	; 0x2c
 801060a:	6804      	ldr	r4, [r0, #0]
 801060c:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010610:	9509      	str	r5, [sp, #36]	; 0x24
 8010612:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010616:	9508      	str	r5, [sp, #32]
 8010618:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801061c:	9507      	str	r5, [sp, #28]
 801061e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010622:	9506      	str	r5, [sp, #24]
 8010624:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010628:	9505      	str	r5, [sp, #20]
 801062a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801062e:	9504      	str	r5, [sp, #16]
 8010630:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010634:	9503      	str	r5, [sp, #12]
 8010636:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801063a:	9502      	str	r5, [sp, #8]
 801063c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010640:	e9cd 3500 	strd	r3, r5, [sp]
 8010644:	4613      	mov	r3, r2
 8010646:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010648:	2200      	movs	r2, #0
 801064a:	47a0      	blx	r4
 801064c:	b00b      	add	sp, #44	; 0x2c
 801064e:	bd30      	pop	{r4, r5, pc}

08010650 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010650:	4b04      	ldr	r3, [pc, #16]	; (8010664 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010652:	781b      	ldrb	r3, [r3, #0]
 8010654:	b123      	cbz	r3, 8010660 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010656:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 801065a:	f080 0001 	eor.w	r0, r0, #1
 801065e:	4770      	bx	lr
 8010660:	2001      	movs	r0, #1
 8010662:	4770      	bx	lr
 8010664:	20014c0a 	.word	0x20014c0a

08010668 <_ZN8touchgfx3HAL8endFrameEv>:
 8010668:	b510      	push	{r4, lr}
 801066a:	4604      	mov	r4, r0
 801066c:	6840      	ldr	r0, [r0, #4]
 801066e:	6803      	ldr	r3, [r0, #0]
 8010670:	689b      	ldr	r3, [r3, #8]
 8010672:	4798      	blx	r3
 8010674:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8010678:	b113      	cbz	r3, 8010680 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801067a:	2301      	movs	r3, #1
 801067c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8010680:	bd10      	pop	{r4, pc}

08010682 <_ZN8touchgfx3HAL10initializeEv>:
 8010682:	b510      	push	{r4, lr}
 8010684:	4604      	mov	r4, r0
 8010686:	f7f1 fbe5 	bl	8001e54 <_ZN8touchgfx10OSWrappers10initializeEv>
 801068a:	6860      	ldr	r0, [r4, #4]
 801068c:	6803      	ldr	r3, [r0, #0]
 801068e:	68db      	ldr	r3, [r3, #12]
 8010690:	4798      	blx	r3
 8010692:	68e0      	ldr	r0, [r4, #12]
 8010694:	6803      	ldr	r3, [r0, #0]
 8010696:	689b      	ldr	r3, [r3, #8]
 8010698:	4798      	blx	r3
 801069a:	6823      	ldr	r3, [r4, #0]
 801069c:	4620      	mov	r0, r4
 801069e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80106a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80106a4:	4718      	bx	r3
	...

080106a8 <_ZN8touchgfx3HAL4tickEv>:
 80106a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80106aa:	6803      	ldr	r3, [r0, #0]
 80106ac:	4d5b      	ldr	r5, [pc, #364]	; (801081c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80106ae:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80106b2:	4604      	mov	r4, r0
 80106b4:	4798      	blx	r3
 80106b6:	2800      	cmp	r0, #0
 80106b8:	f000 8095 	beq.w	80107e6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80106bc:	2001      	movs	r0, #1
 80106be:	f7f1 fa87 	bl	8001bd0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80106c2:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80106c6:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80106ca:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80106ce:	2600      	movs	r6, #0
 80106d0:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80106d4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80106d8:	b133      	cbz	r3, 80106e8 <_ZN8touchgfx3HAL4tickEv+0x40>
 80106da:	6823      	ldr	r3, [r4, #0]
 80106dc:	4620      	mov	r0, r4
 80106de:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80106e2:	4798      	blx	r3
 80106e4:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80106e8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80106ec:	6862      	ldr	r2, [r4, #4]
 80106ee:	f083 0301 	eor.w	r3, r3, #1
 80106f2:	7253      	strb	r3, [r2, #9]
 80106f4:	2601      	movs	r6, #1
 80106f6:	702e      	strb	r6, [r5, #0]
 80106f8:	f005 fff6 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 80106fc:	6803      	ldr	r3, [r0, #0]
 80106fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010700:	4798      	blx	r3
 8010702:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8010706:	b90b      	cbnz	r3, 801070c <_ZN8touchgfx3HAL4tickEv+0x64>
 8010708:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 801070c:	f005 ffec 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8010710:	6803      	ldr	r3, [r0, #0]
 8010712:	695b      	ldr	r3, [r3, #20]
 8010714:	4798      	blx	r3
 8010716:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010718:	6803      	ldr	r3, [r0, #0]
 801071a:	691b      	ldr	r3, [r3, #16]
 801071c:	4798      	blx	r3
 801071e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8010722:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8010726:	3b01      	subs	r3, #1
 8010728:	b2db      	uxtb	r3, r3
 801072a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 801072e:	b10a      	cbz	r2, 8010734 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010730:	2b00      	cmp	r3, #0
 8010732:	d1eb      	bne.n	801070c <_ZN8touchgfx3HAL4tickEv+0x64>
 8010734:	4a3a      	ldr	r2, [pc, #232]	; (8010820 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010736:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 801073a:	7813      	ldrb	r3, [r2, #0]
 801073c:	3301      	adds	r3, #1
 801073e:	b25b      	sxtb	r3, r3
 8010740:	4299      	cmp	r1, r3
 8010742:	7013      	strb	r3, [r2, #0]
 8010744:	dc10      	bgt.n	8010768 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010746:	68e0      	ldr	r0, [r4, #12]
 8010748:	2300      	movs	r3, #0
 801074a:	7013      	strb	r3, [r2, #0]
 801074c:	6803      	ldr	r3, [r0, #0]
 801074e:	aa03      	add	r2, sp, #12
 8010750:	68db      	ldr	r3, [r3, #12]
 8010752:	a902      	add	r1, sp, #8
 8010754:	4798      	blx	r3
 8010756:	6823      	ldr	r3, [r4, #0]
 8010758:	2800      	cmp	r0, #0
 801075a:	d050      	beq.n	80107fe <_ZN8touchgfx3HAL4tickEv+0x156>
 801075c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010760:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010764:	4620      	mov	r0, r4
 8010766:	4798      	blx	r3
 8010768:	6960      	ldr	r0, [r4, #20]
 801076a:	2300      	movs	r3, #0
 801076c:	f88d 3007 	strb.w	r3, [sp, #7]
 8010770:	b158      	cbz	r0, 801078a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010772:	6803      	ldr	r3, [r0, #0]
 8010774:	f10d 0107 	add.w	r1, sp, #7
 8010778:	68db      	ldr	r3, [r3, #12]
 801077a:	4798      	blx	r3
 801077c:	b128      	cbz	r0, 801078a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801077e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010780:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010784:	6803      	ldr	r3, [r0, #0]
 8010786:	68db      	ldr	r3, [r3, #12]
 8010788:	4798      	blx	r3
 801078a:	f104 001c 	add.w	r0, r4, #28
 801078e:	f015 f989 	bl	8025aa4 <_ZN8touchgfx8Gestures4tickEv>
 8010792:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8010796:	b30b      	cbz	r3, 80107dc <_ZN8touchgfx3HAL4tickEv+0x134>
 8010798:	6920      	ldr	r0, [r4, #16]
 801079a:	6803      	ldr	r3, [r0, #0]
 801079c:	691b      	ldr	r3, [r3, #16]
 801079e:	4798      	blx	r3
 80107a0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80107a2:	4606      	mov	r6, r0
 80107a4:	b903      	cbnz	r3, 80107a8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80107a6:	6720      	str	r0, [r4, #112]	; 0x70
 80107a8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80107aa:	4a1e      	ldr	r2, [pc, #120]	; (8010824 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80107ac:	1af3      	subs	r3, r6, r3
 80107ae:	4293      	cmp	r3, r2
 80107b0:	d914      	bls.n	80107dc <_ZN8touchgfx3HAL4tickEv+0x134>
 80107b2:	6920      	ldr	r0, [r4, #16]
 80107b4:	6803      	ldr	r3, [r0, #0]
 80107b6:	699b      	ldr	r3, [r3, #24]
 80107b8:	4798      	blx	r3
 80107ba:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80107bc:	2264      	movs	r2, #100	; 0x64
 80107be:	1af3      	subs	r3, r6, r3
 80107c0:	fbb3 f3f2 	udiv	r3, r3, r2
 80107c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80107c8:	2800      	cmp	r0, #0
 80107ca:	dc1d      	bgt.n	8010808 <_ZN8touchgfx3HAL4tickEv+0x160>
 80107cc:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80107d0:	6920      	ldr	r0, [r4, #16]
 80107d2:	6803      	ldr	r3, [r0, #0]
 80107d4:	2100      	movs	r1, #0
 80107d6:	69db      	ldr	r3, [r3, #28]
 80107d8:	4798      	blx	r3
 80107da:	6726      	str	r6, [r4, #112]	; 0x70
 80107dc:	f005 ff84 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 80107e0:	6803      	ldr	r3, [r0, #0]
 80107e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80107e4:	4798      	blx	r3
 80107e6:	6823      	ldr	r3, [r4, #0]
 80107e8:	4620      	mov	r0, r4
 80107ea:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80107ee:	4798      	blx	r3
 80107f0:	2001      	movs	r0, #1
 80107f2:	f7f1 fa13 	bl	8001c1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80107f6:	2300      	movs	r3, #0
 80107f8:	702b      	strb	r3, [r5, #0]
 80107fa:	b004      	add	sp, #16
 80107fc:	bd70      	pop	{r4, r5, r6, pc}
 80107fe:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010802:	4620      	mov	r0, r4
 8010804:	4798      	blx	r3
 8010806:	e7af      	b.n	8010768 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010808:	2863      	cmp	r0, #99	; 0x63
 801080a:	bfcb      	itete	gt
 801080c:	2300      	movgt	r3, #0
 801080e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010812:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8010816:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 801081a:	e7d9      	b.n	80107d0 <_ZN8touchgfx3HAL4tickEv+0x128>
 801081c:	20014c10 	.word	0x20014c10
 8010820:	20014c11 	.word	0x20014c11
 8010824:	05f5e100 	.word	0x05f5e100

08010828 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010828:	f7f1 bb44 	b.w	8001eb4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801082c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 801082c:	6581      	str	r1, [r0, #88]	; 0x58
 801082e:	301c      	adds	r0, #28
 8010830:	f015 b936 	b.w	8025aa0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010834 <_ZN8touchgfx3HAL5touchEll>:
 8010834:	b530      	push	{r4, r5, lr}
 8010836:	b087      	sub	sp, #28
 8010838:	4604      	mov	r4, r0
 801083a:	a804      	add	r0, sp, #16
 801083c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010840:	f005 fcfc 	bl	801623c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010844:	9b04      	ldr	r3, [sp, #16]
 8010846:	f8ad 300c 	strh.w	r3, [sp, #12]
 801084a:	a906      	add	r1, sp, #24
 801084c:	9b05      	ldr	r3, [sp, #20]
 801084e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010852:	a803      	add	r0, sp, #12
 8010854:	f005 fd44 	bl	80162e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010858:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 801085c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010860:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010864:	f104 001c 	add.w	r0, r4, #28
 8010868:	b189      	cbz	r1, 801088e <_ZN8touchgfx3HAL5touchEll+0x5a>
 801086a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 801086e:	9300      	str	r3, [sp, #0]
 8010870:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8010874:	4613      	mov	r3, r2
 8010876:	462a      	mov	r2, r5
 8010878:	f015 f922 	bl	8025ac0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 801087c:	b128      	cbz	r0, 801088a <_ZN8touchgfx3HAL5touchEll+0x56>
 801087e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010882:	65e3      	str	r3, [r4, #92]	; 0x5c
 8010884:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010888:	6623      	str	r3, [r4, #96]	; 0x60
 801088a:	b007      	add	sp, #28
 801088c:	bd30      	pop	{r4, r5, pc}
 801088e:	f015 f957 	bl	8025b40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010892:	2301      	movs	r3, #1
 8010894:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010898:	e7f1      	b.n	801087e <_ZN8touchgfx3HAL5touchEll+0x4a>

0801089a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801089a:	b510      	push	{r4, lr}
 801089c:	2b00      	cmp	r3, #0
 801089e:	d046      	beq.n	801092e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80108a0:	ea81 0002 	eor.w	r0, r1, r2
 80108a4:	07c4      	lsls	r4, r0, #31
 80108a6:	d508      	bpl.n	80108ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80108a8:	440b      	add	r3, r1
 80108aa:	3a01      	subs	r2, #1
 80108ac:	428b      	cmp	r3, r1
 80108ae:	d93e      	bls.n	801092e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80108b0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80108b4:	f801 0b01 	strb.w	r0, [r1], #1
 80108b8:	e7f8      	b.n	80108ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80108ba:	07d0      	lsls	r0, r2, #31
 80108bc:	bf42      	ittt	mi
 80108be:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80108c2:	f801 0b01 	strbmi.w	r0, [r1], #1
 80108c6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80108ca:	2b01      	cmp	r3, #1
 80108cc:	d911      	bls.n	80108f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80108ce:	ea81 0402 	eor.w	r4, r1, r2
 80108d2:	07a4      	lsls	r4, r4, #30
 80108d4:	4610      	mov	r0, r2
 80108d6:	d022      	beq.n	801091e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80108d8:	f023 0401 	bic.w	r4, r3, #1
 80108dc:	440c      	add	r4, r1
 80108de:	428c      	cmp	r4, r1
 80108e0:	4602      	mov	r2, r0
 80108e2:	d904      	bls.n	80108ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80108e4:	8812      	ldrh	r2, [r2, #0]
 80108e6:	f821 2b02 	strh.w	r2, [r1], #2
 80108ea:	3002      	adds	r0, #2
 80108ec:	e7f7      	b.n	80108de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80108ee:	f003 0301 	and.w	r3, r3, #1
 80108f2:	f023 0003 	bic.w	r0, r3, #3
 80108f6:	4408      	add	r0, r1
 80108f8:	4288      	cmp	r0, r1
 80108fa:	4614      	mov	r4, r2
 80108fc:	d904      	bls.n	8010908 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80108fe:	6824      	ldr	r4, [r4, #0]
 8010900:	f841 4b04 	str.w	r4, [r1], #4
 8010904:	3204      	adds	r2, #4
 8010906:	e7f7      	b.n	80108f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010908:	f003 0303 	and.w	r3, r3, #3
 801090c:	440b      	add	r3, r1
 801090e:	3a01      	subs	r2, #1
 8010910:	428b      	cmp	r3, r1
 8010912:	d90c      	bls.n	801092e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010914:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010918:	f801 0b01 	strb.w	r0, [r1], #1
 801091c:	e7f8      	b.n	8010910 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801091e:	0790      	lsls	r0, r2, #30
 8010920:	d0e7      	beq.n	80108f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010922:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010926:	f821 0b02 	strh.w	r0, [r1], #2
 801092a:	3b02      	subs	r3, #2
 801092c:	e7e1      	b.n	80108f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801092e:	2001      	movs	r0, #1
 8010930:	bd10      	pop	{r4, pc}

08010932 <_ZN8touchgfx3HAL7noTouchEv>:
 8010932:	b510      	push	{r4, lr}
 8010934:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8010938:	4604      	mov	r4, r0
 801093a:	b153      	cbz	r3, 8010952 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 801093c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8010940:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8010944:	2101      	movs	r1, #1
 8010946:	301c      	adds	r0, #28
 8010948:	f015 f8fa 	bl	8025b40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801094c:	2300      	movs	r3, #0
 801094e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010952:	bd10      	pop	{r4, pc}

08010954 <_ZN8touchgfx3HAL3lcdEv>:
 8010954:	4b04      	ldr	r3, [pc, #16]	; (8010968 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8010956:	681b      	ldr	r3, [r3, #0]
 8010958:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801095c:	b10a      	cbz	r2, 8010962 <_ZN8touchgfx3HAL3lcdEv+0xe>
 801095e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010960:	b900      	cbnz	r0, 8010964 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8010962:	6898      	ldr	r0, [r3, #8]
 8010964:	4770      	bx	lr
 8010966:	bf00      	nop
 8010968:	20014c0c 	.word	0x20014c0c

0801096c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 801096c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010970:	4604      	mov	r4, r0
 8010972:	6980      	ldr	r0, [r0, #24]
 8010974:	b085      	sub	sp, #20
 8010976:	460f      	mov	r7, r1
 8010978:	4690      	mov	r8, r2
 801097a:	4699      	mov	r9, r3
 801097c:	b930      	cbnz	r0, 801098c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 801097e:	4b1c      	ldr	r3, [pc, #112]	; (80109f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8010980:	4a1c      	ldr	r2, [pc, #112]	; (80109f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8010982:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8010986:	481c      	ldr	r0, [pc, #112]	; (80109f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8010988:	f016 fd92 	bl	80274b0 <__assert_func>
 801098c:	ad04      	add	r5, sp, #16
 801098e:	2600      	movs	r6, #0
 8010990:	f845 6d04 	str.w	r6, [r5, #-4]!
 8010994:	6806      	ldr	r6, [r0, #0]
 8010996:	9501      	str	r5, [sp, #4]
 8010998:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801099c:	9500      	str	r5, [sp, #0]
 801099e:	6835      	ldr	r5, [r6, #0]
 80109a0:	47a8      	blx	r5
 80109a2:	4d16      	ldr	r5, [pc, #88]	; (80109fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80109a4:	4606      	mov	r6, r0
 80109a6:	f8a5 9000 	strh.w	r9, [r5]
 80109aa:	f7ff ffd3 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 80109ae:	6803      	ldr	r3, [r0, #0]
 80109b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109b2:	4798      	blx	r3
 80109b4:	2801      	cmp	r0, #1
 80109b6:	d012      	beq.n	80109de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80109b8:	d306      	bcc.n	80109c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80109ba:	280d      	cmp	r0, #13
 80109bc:	d80b      	bhi.n	80109d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80109be:	4b10      	ldr	r3, [pc, #64]	; (8010a00 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80109c0:	4a0c      	ldr	r2, [pc, #48]	; (80109f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80109c2:	f240 115b 	movw	r1, #347	; 0x15b
 80109c6:	e7de      	b.n	8010986 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80109c8:	882b      	ldrh	r3, [r5, #0]
 80109ca:	fb08 7203 	mla	r2, r8, r3, r7
 80109ce:	9b03      	ldr	r3, [sp, #12]
 80109d0:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80109d4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80109d6:	4630      	mov	r0, r6
 80109d8:	b005      	add	sp, #20
 80109da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109de:	882a      	ldrh	r2, [r5, #0]
 80109e0:	9b03      	ldr	r3, [sp, #12]
 80109e2:	fb08 7202 	mla	r2, r8, r2, r7
 80109e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80109ea:	1a9a      	subs	r2, r3, r2
 80109ec:	63e2      	str	r2, [r4, #60]	; 0x3c
 80109ee:	e7f2      	b.n	80109d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80109f0:	0802b55e 	.word	0x0802b55e
 80109f4:	0802b81c 	.word	0x0802b81c
 80109f8:	0802b5a3 	.word	0x0802b5a3
 80109fc:	20014c06 	.word	0x20014c06
 8010a00:	0802b5c9 	.word	0x0802b5c9

08010a04 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010a04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a06:	b08b      	sub	sp, #44	; 0x2c
 8010a08:	4617      	mov	r7, r2
 8010a0a:	4604      	mov	r4, r0
 8010a0c:	460e      	mov	r6, r1
 8010a0e:	461d      	mov	r5, r3
 8010a10:	f7ff ffa0 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8010a14:	6803      	ldr	r3, [r0, #0]
 8010a16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a18:	4798      	blx	r3
 8010a1a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010a1e:	9007      	str	r0, [sp, #28]
 8010a20:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010a24:	4b0d      	ldr	r3, [pc, #52]	; (8010a5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010a26:	6822      	ldr	r2, [r4, #0]
 8010a28:	881b      	ldrh	r3, [r3, #0]
 8010a2a:	9306      	str	r3, [sp, #24]
 8010a2c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010a30:	9305      	str	r3, [sp, #20]
 8010a32:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010a36:	9304      	str	r3, [sp, #16]
 8010a38:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010a3c:	9303      	str	r3, [sp, #12]
 8010a3e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010a42:	9302      	str	r3, [sp, #8]
 8010a44:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010a48:	e9cd 5300 	strd	r5, r3, [sp]
 8010a4c:	4631      	mov	r1, r6
 8010a4e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010a50:	463b      	mov	r3, r7
 8010a52:	2200      	movs	r2, #0
 8010a54:	4620      	mov	r0, r4
 8010a56:	47a8      	blx	r5
 8010a58:	b00b      	add	sp, #44	; 0x2c
 8010a5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a5c:	20014c06 	.word	0x20014c06

08010a60 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a64:	4698      	mov	r8, r3
 8010a66:	6803      	ldr	r3, [r0, #0]
 8010a68:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010a6a:	4b15      	ldr	r3, [pc, #84]	; (8010ac0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010a6c:	b08b      	sub	sp, #44	; 0x2c
 8010a6e:	4617      	mov	r7, r2
 8010a70:	f8b3 9000 	ldrh.w	r9, [r3]
 8010a74:	460e      	mov	r6, r1
 8010a76:	4604      	mov	r4, r0
 8010a78:	f7ff ff6c 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8010a7c:	6803      	ldr	r3, [r0, #0]
 8010a7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a80:	4798      	blx	r3
 8010a82:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010a86:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010a8a:	2302      	movs	r3, #2
 8010a8c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010a90:	2301      	movs	r3, #1
 8010a92:	9305      	str	r3, [sp, #20]
 8010a94:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010a98:	9304      	str	r3, [sp, #16]
 8010a9a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010a9e:	9303      	str	r3, [sp, #12]
 8010aa0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010aa4:	9302      	str	r3, [sp, #8]
 8010aa6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010aaa:	2200      	movs	r2, #0
 8010aac:	e9cd 8300 	strd	r8, r3, [sp]
 8010ab0:	4631      	mov	r1, r6
 8010ab2:	463b      	mov	r3, r7
 8010ab4:	4620      	mov	r0, r4
 8010ab6:	47a8      	blx	r5
 8010ab8:	b00b      	add	sp, #44	; 0x2c
 8010aba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010abe:	bf00      	nop
 8010ac0:	20014c06 	.word	0x20014c06

08010ac4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010ac4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010ac8:	4698      	mov	r8, r3
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010ace:	4b11      	ldr	r3, [pc, #68]	; (8010b14 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010ad0:	b087      	sub	sp, #28
 8010ad2:	f8b3 9000 	ldrh.w	r9, [r3]
 8010ad6:	460e      	mov	r6, r1
 8010ad8:	4617      	mov	r7, r2
 8010ada:	4604      	mov	r4, r0
 8010adc:	f7ff ff3a 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8010ae0:	6803      	ldr	r3, [r0, #0]
 8010ae2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ae4:	4798      	blx	r3
 8010ae6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010aea:	f8cd 900c 	str.w	r9, [sp, #12]
 8010aee:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010af2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010af6:	9302      	str	r3, [sp, #8]
 8010af8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010afc:	9301      	str	r3, [sp, #4]
 8010afe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010b02:	9300      	str	r3, [sp, #0]
 8010b04:	463a      	mov	r2, r7
 8010b06:	4643      	mov	r3, r8
 8010b08:	4631      	mov	r1, r6
 8010b0a:	4620      	mov	r0, r4
 8010b0c:	47a8      	blx	r5
 8010b0e:	b007      	add	sp, #28
 8010b10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b14:	20014c06 	.word	0x20014c06

08010b18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b1c:	4604      	mov	r4, r0
 8010b1e:	b08f      	sub	sp, #60	; 0x3c
 8010b20:	4610      	mov	r0, r2
 8010b22:	460d      	mov	r5, r1
 8010b24:	4691      	mov	r9, r2
 8010b26:	461e      	mov	r6, r3
 8010b28:	f008 feac 	bl	8019884 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010b2c:	2800      	cmp	r0, #0
 8010b2e:	f000 809c 	beq.w	8010c6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8010b32:	6823      	ldr	r3, [r4, #0]
 8010b34:	f8df b194 	ldr.w	fp, [pc, #404]	; 8010ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8010b38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010b3a:	f8df a194 	ldr.w	sl, [pc, #404]	; 8010cd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010b3e:	4f60      	ldr	r7, [pc, #384]	; (8010cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8010b40:	4620      	mov	r0, r4
 8010b42:	4798      	blx	r3
 8010b44:	6823      	ldr	r3, [r4, #0]
 8010b46:	4620      	mov	r0, r4
 8010b48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b4a:	4798      	blx	r3
 8010b4c:	f8bb 3000 	ldrh.w	r3, [fp]
 8010b50:	9301      	str	r3, [sp, #4]
 8010b52:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010b56:	f8ba 3000 	ldrh.w	r3, [sl]
 8010b5a:	9302      	str	r3, [sp, #8]
 8010b5c:	883b      	ldrh	r3, [r7, #0]
 8010b5e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010b62:	9303      	str	r3, [sp, #12]
 8010b64:	4b57      	ldr	r3, [pc, #348]	; (8010cc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010b66:	9305      	str	r3, [sp, #20]
 8010b68:	881a      	ldrh	r2, [r3, #0]
 8010b6a:	9204      	str	r2, [sp, #16]
 8010b6c:	4640      	mov	r0, r8
 8010b6e:	f008 ff39 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010b72:	8038      	strh	r0, [r7, #0]
 8010b74:	4640      	mov	r0, r8
 8010b76:	f008 ff79 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010b7a:	9b05      	ldr	r3, [sp, #20]
 8010b7c:	8018      	strh	r0, [r3, #0]
 8010b7e:	4b52      	ldr	r3, [pc, #328]	; (8010cc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010b80:	781b      	ldrb	r3, [r3, #0]
 8010b82:	2b00      	cmp	r3, #0
 8010b84:	d174      	bne.n	8010c70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8010b86:	883b      	ldrh	r3, [r7, #0]
 8010b88:	f8ab 3000 	strh.w	r3, [fp]
 8010b8c:	f8aa 0000 	strh.w	r0, [sl]
 8010b90:	4648      	mov	r0, r9
 8010b92:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010b96:	f008 fe75 	bl	8019884 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010b9a:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010b9e:	2200      	movs	r2, #0
 8010ba0:	4611      	mov	r1, r2
 8010ba2:	4628      	mov	r0, r5
 8010ba4:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010ba8:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010bac:	f7f1 ff83 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8010bb0:	2301      	movs	r3, #1
 8010bb2:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010bb6:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010bba:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010bbe:	2b00      	cmp	r3, #0
 8010bc0:	dd5c      	ble.n	8010c7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8010bc2:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010bc6:	2b00      	cmp	r3, #0
 8010bc8:	dd58      	ble.n	8010c7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8010bca:	462a      	mov	r2, r5
 8010bcc:	ab0a      	add	r3, sp, #40	; 0x28
 8010bce:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010bd2:	6851      	ldr	r1, [r2, #4]
 8010bd4:	c303      	stmia	r3!, {r0, r1}
 8010bd6:	4631      	mov	r1, r6
 8010bd8:	a80a      	add	r0, sp, #40	; 0x28
 8010bda:	f7fe fd9b 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8010bde:	4b38      	ldr	r3, [pc, #224]	; (8010cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8010be0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010be4:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010be8:	2100      	movs	r1, #0
 8010bea:	aa0a      	add	r2, sp, #40	; 0x28
 8010bec:	4b35      	ldr	r3, [pc, #212]	; (8010cc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010bee:	910c      	str	r1, [sp, #48]	; 0x30
 8010bf0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010bf4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010bf8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010bfc:	ab08      	add	r3, sp, #32
 8010bfe:	e883 0003 	stmia.w	r3, {r0, r1}
 8010c02:	4618      	mov	r0, r3
 8010c04:	a90c      	add	r1, sp, #48	; 0x30
 8010c06:	f7fe fd85 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8010c0a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010c0c:	2b00      	cmp	r3, #0
 8010c0e:	d13c      	bne.n	8010c8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8010c10:	2000      	movs	r0, #0
 8010c12:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8010c16:	2600      	movs	r6, #0
 8010c18:	682a      	ldr	r2, [r5, #0]
 8010c1a:	696b      	ldr	r3, [r5, #20]
 8010c1c:	616e      	str	r6, [r5, #20]
 8010c1e:	9305      	str	r3, [sp, #20]
 8010c20:	6892      	ldr	r2, [r2, #8]
 8010c22:	a908      	add	r1, sp, #32
 8010c24:	4628      	mov	r0, r5
 8010c26:	4790      	blx	r2
 8010c28:	9b05      	ldr	r3, [sp, #20]
 8010c2a:	616b      	str	r3, [r5, #20]
 8010c2c:	4652      	mov	r2, sl
 8010c2e:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8010c32:	4649      	mov	r1, r9
 8010c34:	4628      	mov	r0, r5
 8010c36:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010c3a:	f7f1 ff3c 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 8010c3e:	4b23      	ldr	r3, [pc, #140]	; (8010ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010c40:	9a01      	ldr	r2, [sp, #4]
 8010c42:	801a      	strh	r2, [r3, #0]
 8010c44:	4b22      	ldr	r3, [pc, #136]	; (8010cd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010c46:	9a02      	ldr	r2, [sp, #8]
 8010c48:	801a      	strh	r2, [r3, #0]
 8010c4a:	4b1d      	ldr	r3, [pc, #116]	; (8010cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8010c4c:	9a03      	ldr	r2, [sp, #12]
 8010c4e:	801a      	strh	r2, [r3, #0]
 8010c50:	4b1c      	ldr	r3, [pc, #112]	; (8010cc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010c52:	9a04      	ldr	r2, [sp, #16]
 8010c54:	801a      	strh	r2, [r3, #0]
 8010c56:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010c5a:	6823      	ldr	r3, [r4, #0]
 8010c5c:	4620      	mov	r0, r4
 8010c5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010c60:	4798      	blx	r3
 8010c62:	6823      	ldr	r3, [r4, #0]
 8010c64:	4620      	mov	r0, r4
 8010c66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c68:	4798      	blx	r3
 8010c6a:	b00f      	add	sp, #60	; 0x3c
 8010c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c70:	883b      	ldrh	r3, [r7, #0]
 8010c72:	f8ab 0000 	strh.w	r0, [fp]
 8010c76:	f8aa 3000 	strh.w	r3, [sl]
 8010c7a:	e789      	b.n	8010b90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 8010c7c:	462a      	mov	r2, r5
 8010c7e:	ab0a      	add	r3, sp, #40	; 0x28
 8010c80:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010c84:	6851      	ldr	r1, [r2, #4]
 8010c86:	c303      	stmia	r3!, {r0, r1}
 8010c88:	e7a9      	b.n	8010bde <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 8010c8a:	a807      	add	r0, sp, #28
 8010c8c:	f009 f850 	bl	8019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010c90:	4606      	mov	r6, r0
 8010c92:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010c94:	6803      	ldr	r3, [r0, #0]
 8010c96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c98:	4798      	blx	r3
 8010c9a:	4286      	cmp	r6, r0
 8010c9c:	d1b8      	bne.n	8010c10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8010c9e:	f7ff fe59 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8010ca2:	6803      	ldr	r3, [r0, #0]
 8010ca4:	4606      	mov	r6, r0
 8010ca6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010ca8:	9305      	str	r3, [sp, #20]
 8010caa:	a807      	add	r0, sp, #28
 8010cac:	f009 f840 	bl	8019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010cb0:	9b05      	ldr	r3, [sp, #20]
 8010cb2:	4601      	mov	r1, r0
 8010cb4:	4630      	mov	r0, r6
 8010cb6:	4798      	blx	r3
 8010cb8:	f080 0001 	eor.w	r0, r0, #1
 8010cbc:	b2c0      	uxtb	r0, r0
 8010cbe:	e7a8      	b.n	8010c12 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010cc0:	20014c00 	.word	0x20014c00
 8010cc4:	20014c02 	.word	0x20014c02
 8010cc8:	20014c04 	.word	0x20014c04
 8010ccc:	20014c06 	.word	0x20014c06
 8010cd0:	20014c08 	.word	0x20014c08

08010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010cd4:	b510      	push	{r4, lr}
 8010cd6:	4b07      	ldr	r3, [pc, #28]	; (8010cf4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010cd8:	781b      	ldrb	r3, [r3, #0]
 8010cda:	4604      	mov	r4, r0
 8010cdc:	b13b      	cbz	r3, 8010cee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010cde:	6803      	ldr	r3, [r0, #0]
 8010ce0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ce2:	4798      	blx	r3
 8010ce4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010ce6:	4283      	cmp	r3, r0
 8010ce8:	d101      	bne.n	8010cee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010cea:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010cec:	bd10      	pop	{r4, pc}
 8010cee:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010cf0:	e7fc      	b.n	8010cec <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010cf2:	bf00      	nop
 8010cf4:	20014c0a 	.word	0x20014c0a

08010cf8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010cf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010cfc:	b08a      	sub	sp, #40	; 0x28
 8010cfe:	461d      	mov	r5, r3
 8010d00:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010d04:	2400      	movs	r4, #0
 8010d06:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8010d0a:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8010d0e:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 8010d12:	9404      	str	r4, [sp, #16]
 8010d14:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010d18:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010d1c:	f8ad 8018 	strh.w	r8, [sp, #24]
 8010d20:	4692      	mov	sl, r2
 8010d22:	4606      	mov	r6, r0
 8010d24:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010d28:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010d2c:	f88d 4020 	strb.w	r4, [sp, #32]
 8010d30:	f7ff ffd0 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010d34:	fb09 a505 	mla	r5, r9, r5, sl
 8010d38:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010d3c:	9505      	str	r5, [sp, #20]
 8010d3e:	f8ad 901e 	strh.w	r9, [sp, #30]
 8010d42:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010d46:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010d4a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010d4e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010d52:	f1b8 0f00 	cmp.w	r8, #0
 8010d56:	d000      	beq.n	8010d5a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8010d58:	b937      	cbnz	r7, 8010d68 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 8010d5a:	4b0d      	ldr	r3, [pc, #52]	; (8010d90 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8010d5c:	4a0d      	ldr	r2, [pc, #52]	; (8010d94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8010d5e:	f240 2102 	movw	r1, #514	; 0x202
 8010d62:	480d      	ldr	r0, [pc, #52]	; (8010d98 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8010d64:	f016 fba4 	bl	80274b0 <__assert_func>
 8010d68:	6833      	ldr	r3, [r6, #0]
 8010d6a:	9c01      	ldr	r4, [sp, #4]
 8010d6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010d6e:	4630      	mov	r0, r6
 8010d70:	4798      	blx	r3
 8010d72:	4220      	tst	r0, r4
 8010d74:	d104      	bne.n	8010d80 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 8010d76:	4b09      	ldr	r3, [pc, #36]	; (8010d9c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 8010d78:	4a06      	ldr	r2, [pc, #24]	; (8010d94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8010d7a:	f240 2103 	movw	r1, #515	; 0x203
 8010d7e:	e7f0      	b.n	8010d62 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8010d80:	6870      	ldr	r0, [r6, #4]
 8010d82:	6803      	ldr	r3, [r0, #0]
 8010d84:	a901      	add	r1, sp, #4
 8010d86:	685b      	ldr	r3, [r3, #4]
 8010d88:	4798      	blx	r3
 8010d8a:	b00a      	add	sp, #40	; 0x28
 8010d8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010d90:	0802b3f8 	.word	0x0802b3f8
 8010d94:	0802b651 	.word	0x0802b651
 8010d98:	0802b5a3 	.word	0x0802b5a3
 8010d9c:	0802b430 	.word	0x0802b430

08010da0 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010da4:	b08b      	sub	sp, #44	; 0x2c
 8010da6:	2400      	movs	r4, #0
 8010da8:	461d      	mov	r5, r3
 8010daa:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010dae:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8010db2:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 8010db6:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8010dba:	9404      	str	r4, [sp, #16]
 8010dbc:	468a      	mov	sl, r1
 8010dbe:	4693      	mov	fp, r2
 8010dc0:	4606      	mov	r6, r0
 8010dc2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010dc6:	f7ff ff85 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010dca:	fb09 b505 	mla	r5, r9, r5, fp
 8010dce:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010dd2:	9505      	str	r5, [sp, #20]
 8010dd4:	f8ad 8018 	strh.w	r8, [sp, #24]
 8010dd8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010ddc:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010de0:	f8ad 901e 	strh.w	r9, [sp, #30]
 8010de4:	f8cd a010 	str.w	sl, [sp, #16]
 8010de8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010dec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010df0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010df4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010df8:	f1b8 0f00 	cmp.w	r8, #0
 8010dfc:	d000      	beq.n	8010e00 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8010dfe:	b937      	cbnz	r7, 8010e0e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 8010e00:	4b0d      	ldr	r3, [pc, #52]	; (8010e38 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8010e02:	4a0e      	ldr	r2, [pc, #56]	; (8010e3c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8010e04:	f240 2119 	movw	r1, #537	; 0x219
 8010e08:	480d      	ldr	r0, [pc, #52]	; (8010e40 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8010e0a:	f016 fb51 	bl	80274b0 <__assert_func>
 8010e0e:	6833      	ldr	r3, [r6, #0]
 8010e10:	9c01      	ldr	r4, [sp, #4]
 8010e12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e14:	4630      	mov	r0, r6
 8010e16:	4798      	blx	r3
 8010e18:	4220      	tst	r0, r4
 8010e1a:	d104      	bne.n	8010e26 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 8010e1c:	4b09      	ldr	r3, [pc, #36]	; (8010e44 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 8010e1e:	4a07      	ldr	r2, [pc, #28]	; (8010e3c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8010e20:	f240 211a 	movw	r1, #538	; 0x21a
 8010e24:	e7f0      	b.n	8010e08 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 8010e26:	6870      	ldr	r0, [r6, #4]
 8010e28:	6803      	ldr	r3, [r0, #0]
 8010e2a:	a901      	add	r1, sp, #4
 8010e2c:	685b      	ldr	r3, [r3, #4]
 8010e2e:	4798      	blx	r3
 8010e30:	b00b      	add	sp, #44	; 0x2c
 8010e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e36:	bf00      	nop
 8010e38:	0802b475 	.word	0x0802b475
 8010e3c:	0802b6c7 	.word	0x0802b6c7
 8010e40:	0802b5a3 	.word	0x0802b5a3
 8010e44:	0802b4ad 	.word	0x0802b4ad

08010e48 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8010e48:	b508      	push	{r3, lr}
 8010e4a:	290d      	cmp	r1, #13
 8010e4c:	d817      	bhi.n	8010e7e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8010e4e:	e8df f001 	tbb	[pc, r1]
 8010e52:	090b      	.short	0x090b
 8010e54:	0d0d0d07 	.word	0x0d0d0d07
 8010e58:	1414140d 	.word	0x1414140d
 8010e5c:	0d0d1414 	.word	0x0d0d1414
 8010e60:	2020      	movs	r0, #32
 8010e62:	bd08      	pop	{r3, pc}
 8010e64:	2018      	movs	r0, #24
 8010e66:	e7fc      	b.n	8010e62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8010e68:	2010      	movs	r0, #16
 8010e6a:	e7fa      	b.n	8010e62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8010e6c:	4b05      	ldr	r3, [pc, #20]	; (8010e84 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8010e6e:	4a06      	ldr	r2, [pc, #24]	; (8010e88 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8010e70:	4806      	ldr	r0, [pc, #24]	; (8010e8c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8010e72:	f240 2183 	movw	r1, #643	; 0x283
 8010e76:	f016 fb1b 	bl	80274b0 <__assert_func>
 8010e7a:	2008      	movs	r0, #8
 8010e7c:	e7f1      	b.n	8010e62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8010e7e:	2000      	movs	r0, #0
 8010e80:	e7ef      	b.n	8010e62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8010e82:	bf00      	nop
 8010e84:	0802b61f 	.word	0x0802b61f
 8010e88:	0802b9f2 	.word	0x0802b9f2
 8010e8c:	0802b5a3 	.word	0x0802b5a3

08010e90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8010e90:	b570      	push	{r4, r5, r6, lr}
 8010e92:	460d      	mov	r5, r1
 8010e94:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8010e98:	4616      	mov	r6, r2
 8010e9a:	461c      	mov	r4, r3
 8010e9c:	f7ff ffd4 	bl	8010e48 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8010ea0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8010ea4:	10c0      	asrs	r0, r0, #3
 8010ea6:	fb06 5101 	mla	r1, r6, r1, r5
 8010eaa:	fb00 4001 	mla	r0, r0, r1, r4
 8010eae:	bd70      	pop	{r4, r5, r6, pc}

08010eb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010eb4:	b08c      	sub	sp, #48	; 0x30
 8010eb6:	f04f 0c00 	mov.w	ip, #0
 8010eba:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8010ebe:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8010ec2:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8010ec6:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8010eca:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8010ece:	f8cd c018 	str.w	ip, [sp, #24]
 8010ed2:	2d0b      	cmp	r5, #11
 8010ed4:	4604      	mov	r4, r0
 8010ed6:	469a      	mov	sl, r3
 8010ed8:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8010edc:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8010ee0:	d130      	bne.n	8010f44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8010ee2:	2080      	movs	r0, #128	; 0x80
 8010ee4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8010ee8:	9205      	str	r2, [sp, #20]
 8010eea:	4620      	mov	r0, r4
 8010eec:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8010ef0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8010ef4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010ef8:	f8ad 7020 	strh.w	r7, [sp, #32]
 8010efc:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8010f00:	f7ff fee8 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f04:	e9cd 9800 	strd	r9, r8, [sp]
 8010f08:	4603      	mov	r3, r0
 8010f0a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8010f0e:	4651      	mov	r1, sl
 8010f10:	4620      	mov	r0, r4
 8010f12:	f7ff ffbd 	bl	8010e90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8010f16:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 8010f1a:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8010f1e:	2300      	movs	r3, #0
 8010f20:	9007      	str	r0, [sp, #28]
 8010f22:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 8010f26:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 8010f2a:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 8010f2e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8010f32:	b107      	cbz	r7, 8010f36 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8010f34:	b9d6      	cbnz	r6, 8010f6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 8010f36:	4b17      	ldr	r3, [pc, #92]	; (8010f94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8010f38:	4a17      	ldr	r2, [pc, #92]	; (8010f98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8010f3a:	f240 11c9 	movw	r1, #457	; 0x1c9
 8010f3e:	4817      	ldr	r0, [pc, #92]	; (8010f9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8010f40:	f016 fab6 	bl	80274b0 <__assert_func>
 8010f44:	2d02      	cmp	r5, #2
 8010f46:	d108      	bne.n	8010f5a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8010f48:	2bff      	cmp	r3, #255	; 0xff
 8010f4a:	d104      	bne.n	8010f56 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 8010f4c:	2800      	cmp	r0, #0
 8010f4e:	bf14      	ite	ne
 8010f50:	2040      	movne	r0, #64	; 0x40
 8010f52:	2020      	moveq	r0, #32
 8010f54:	e7c6      	b.n	8010ee4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8010f56:	2040      	movs	r0, #64	; 0x40
 8010f58:	e7c4      	b.n	8010ee4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8010f5a:	2bff      	cmp	r3, #255	; 0xff
 8010f5c:	d104      	bne.n	8010f68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 8010f5e:	2800      	cmp	r0, #0
 8010f60:	bf14      	ite	ne
 8010f62:	2004      	movne	r0, #4
 8010f64:	2001      	moveq	r0, #1
 8010f66:	e7bd      	b.n	8010ee4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8010f68:	2004      	movs	r0, #4
 8010f6a:	e7bb      	b.n	8010ee4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8010f6c:	6823      	ldr	r3, [r4, #0]
 8010f6e:	9d03      	ldr	r5, [sp, #12]
 8010f70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f72:	4620      	mov	r0, r4
 8010f74:	4798      	blx	r3
 8010f76:	4228      	tst	r0, r5
 8010f78:	d104      	bne.n	8010f84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 8010f7a:	4b09      	ldr	r3, [pc, #36]	; (8010fa0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 8010f7c:	4a06      	ldr	r2, [pc, #24]	; (8010f98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8010f7e:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8010f82:	e7dc      	b.n	8010f3e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8010f84:	6860      	ldr	r0, [r4, #4]
 8010f86:	6803      	ldr	r3, [r0, #0]
 8010f88:	a903      	add	r1, sp, #12
 8010f8a:	685b      	ldr	r3, [r3, #4]
 8010f8c:	4798      	blx	r3
 8010f8e:	b00c      	add	sp, #48	; 0x30
 8010f90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010f94:	0802b3f8 	.word	0x0802b3f8
 8010f98:	0802b880 	.word	0x0802b880
 8010f9c:	0802b5a3 	.word	0x0802b5a3
 8010fa0:	0802b430 	.word	0x0802b430

08010fa4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fa8:	b08d      	sub	sp, #52	; 0x34
 8010faa:	469b      	mov	fp, r3
 8010fac:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 8010fb0:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8010fb4:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 8010fb8:	2fff      	cmp	r7, #255	; 0xff
 8010fba:	bf14      	ite	ne
 8010fbc:	2308      	movne	r3, #8
 8010fbe:	2302      	moveq	r3, #2
 8010fc0:	2500      	movs	r5, #0
 8010fc2:	4604      	mov	r4, r0
 8010fc4:	4689      	mov	r9, r1
 8010fc6:	4692      	mov	sl, r2
 8010fc8:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8010fcc:	9506      	str	r5, [sp, #24]
 8010fce:	f7ff fe81 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010fd2:	465a      	mov	r2, fp
 8010fd4:	4603      	mov	r3, r0
 8010fd6:	4651      	mov	r1, sl
 8010fd8:	e9cd 8600 	strd	r8, r6, [sp]
 8010fdc:	4620      	mov	r0, r4
 8010fde:	f7ff ff57 	bl	8010e90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8010fe2:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8010fe6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010fea:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8010fee:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010ff2:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8010ff6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8010ffa:	6823      	ldr	r3, [r4, #0]
 8010ffc:	9007      	str	r0, [sp, #28]
 8010ffe:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8011002:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011006:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 801100a:	f8cd 9018 	str.w	r9, [sp, #24]
 801100e:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 8011012:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 8011016:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 801101a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801101c:	9d03      	ldr	r5, [sp, #12]
 801101e:	4620      	mov	r0, r4
 8011020:	4798      	blx	r3
 8011022:	4228      	tst	r0, r5
 8011024:	d106      	bne.n	8011034 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 8011026:	4b07      	ldr	r3, [pc, #28]	; (8011044 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8011028:	4a07      	ldr	r2, [pc, #28]	; (8011048 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 801102a:	4808      	ldr	r0, [pc, #32]	; (801104c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 801102c:	f44f 710c 	mov.w	r1, #560	; 0x230
 8011030:	f016 fa3e 	bl	80274b0 <__assert_func>
 8011034:	6860      	ldr	r0, [r4, #4]
 8011036:	6803      	ldr	r3, [r0, #0]
 8011038:	a903      	add	r1, sp, #12
 801103a:	685b      	ldr	r3, [r3, #4]
 801103c:	4798      	blx	r3
 801103e:	b00d      	add	sp, #52	; 0x34
 8011040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011044:	0802b430 	.word	0x0802b430
 8011048:	0802b957 	.word	0x0802b957
 801104c:	0802b5a3 	.word	0x0802b5a3

08011050 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011050:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011054:	461f      	mov	r7, r3
 8011056:	4b0b      	ldr	r3, [pc, #44]	; (8011084 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011058:	460d      	mov	r5, r1
 801105a:	f8b3 8000 	ldrh.w	r8, [r3]
 801105e:	4616      	mov	r6, r2
 8011060:	4604      	mov	r4, r0
 8011062:	f7ff fc77 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8011066:	6803      	ldr	r3, [r0, #0]
 8011068:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801106a:	4798      	blx	r3
 801106c:	463b      	mov	r3, r7
 801106e:	e9cd 8000 	strd	r8, r0, [sp]
 8011072:	4632      	mov	r2, r6
 8011074:	4629      	mov	r1, r5
 8011076:	4620      	mov	r0, r4
 8011078:	f7ff ff0a 	bl	8010e90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 801107c:	b002      	add	sp, #8
 801107e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011082:	bf00      	nop
 8011084:	20014c06 	.word	0x20014c06

08011088 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011088:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801108c:	b08b      	sub	sp, #44	; 0x2c
 801108e:	4699      	mov	r9, r3
 8011090:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8011094:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 8011098:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801109c:	f8ad 7018 	strh.w	r7, [sp, #24]
 80110a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80110a4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80110a8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80110ac:	2500      	movs	r5, #0
 80110ae:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80110b2:	f88d 3020 	strb.w	r3, [sp, #32]
 80110b6:	4690      	mov	r8, r2
 80110b8:	4604      	mov	r4, r0
 80110ba:	9504      	str	r5, [sp, #16]
 80110bc:	f8ad 601a 	strh.w	r6, [sp, #26]
 80110c0:	f7ff fe08 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80110c4:	464a      	mov	r2, r9
 80110c6:	4603      	mov	r3, r0
 80110c8:	4641      	mov	r1, r8
 80110ca:	4620      	mov	r0, r4
 80110cc:	f7ff ffc0 	bl	8011050 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80110d0:	4b19      	ldr	r3, [pc, #100]	; (8011138 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 80110d2:	9005      	str	r0, [sp, #20]
 80110d4:	881b      	ldrh	r3, [r3, #0]
 80110d6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80110da:	f7ff fc3b 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 80110de:	6803      	ldr	r3, [r0, #0]
 80110e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110e2:	4798      	blx	r3
 80110e4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80110e8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80110ec:	b107      	cbz	r7, 80110f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 80110ee:	b936      	cbnz	r6, 80110fe <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 80110f0:	4b12      	ldr	r3, [pc, #72]	; (801113c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 80110f2:	4a13      	ldr	r2, [pc, #76]	; (8011140 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 80110f4:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 80110f8:	4812      	ldr	r0, [pc, #72]	; (8011144 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 80110fa:	f016 f9d9 	bl	80274b0 <__assert_func>
 80110fe:	6823      	ldr	r3, [r4, #0]
 8011100:	9e01      	ldr	r6, [sp, #4]
 8011102:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011104:	4620      	mov	r0, r4
 8011106:	4798      	blx	r3
 8011108:	4230      	tst	r0, r6
 801110a:	d104      	bne.n	8011116 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 801110c:	4b0e      	ldr	r3, [pc, #56]	; (8011148 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 801110e:	4a0c      	ldr	r2, [pc, #48]	; (8011140 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8011110:	f240 11e7 	movw	r1, #487	; 0x1e7
 8011114:	e7f0      	b.n	80110f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 8011116:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011118:	9304      	str	r3, [sp, #16]
 801111a:	6860      	ldr	r0, [r4, #4]
 801111c:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8011120:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011124:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011128:	6803      	ldr	r3, [r0, #0]
 801112a:	a901      	add	r1, sp, #4
 801112c:	685b      	ldr	r3, [r3, #4]
 801112e:	4798      	blx	r3
 8011130:	b00b      	add	sp, #44	; 0x2c
 8011132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011136:	bf00      	nop
 8011138:	20014c06 	.word	0x20014c06
 801113c:	0802b3f8 	.word	0x0802b3f8
 8011140:	0802b72c 	.word	0x0802b72c
 8011144:	0802b5a3 	.word	0x0802b5a3
 8011148:	0802b430 	.word	0x0802b430

0801114c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801114c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801114e:	b08d      	sub	sp, #52	; 0x34
 8011150:	466b      	mov	r3, sp
 8011152:	e883 0006 	stmia.w	r3, {r1, r2}
 8011156:	4b22      	ldr	r3, [pc, #136]	; (80111e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8011158:	781b      	ldrb	r3, [r3, #0]
 801115a:	4604      	mov	r4, r0
 801115c:	b933      	cbnz	r3, 801116c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 801115e:	4b21      	ldr	r3, [pc, #132]	; (80111e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8011160:	4a21      	ldr	r2, [pc, #132]	; (80111e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8011162:	4822      	ldr	r0, [pc, #136]	; (80111ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8011164:	f240 2141 	movw	r1, #577	; 0x241
 8011168:	f016 f9a2 	bl	80274b0 <__assert_func>
 801116c:	2300      	movs	r3, #0
 801116e:	9306      	str	r3, [sp, #24]
 8011170:	6803      	ldr	r3, [r0, #0]
 8011172:	f8bd 6000 	ldrh.w	r6, [sp]
 8011176:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011178:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801117c:	2501      	movs	r5, #1
 801117e:	9503      	str	r5, [sp, #12]
 8011180:	4798      	blx	r3
 8011182:	463a      	mov	r2, r7
 8011184:	4631      	mov	r1, r6
 8011186:	4603      	mov	r3, r0
 8011188:	4620      	mov	r0, r4
 801118a:	f7ff ff61 	bl	8011050 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801118e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011190:	9307      	str	r3, [sp, #28]
 8011192:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011196:	f8ad 3020 	strh.w	r3, [sp, #32]
 801119a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801119e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80111a2:	4b13      	ldr	r3, [pc, #76]	; (80111f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 80111a4:	9004      	str	r0, [sp, #16]
 80111a6:	881b      	ldrh	r3, [r3, #0]
 80111a8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80111ac:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80111b0:	f7ff fbd0 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 80111b4:	6803      	ldr	r3, [r0, #0]
 80111b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111b8:	4798      	blx	r3
 80111ba:	23ff      	movs	r3, #255	; 0xff
 80111bc:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80111c0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80111c4:	6860      	ldr	r0, [r4, #4]
 80111c6:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80111ca:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80111ce:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80111d2:	6803      	ldr	r3, [r0, #0]
 80111d4:	a903      	add	r1, sp, #12
 80111d6:	685b      	ldr	r3, [r3, #4]
 80111d8:	4798      	blx	r3
 80111da:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80111dc:	b00d      	add	sp, #52	; 0x34
 80111de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111e0:	20014c0b 	.word	0x20014c0b
 80111e4:	0802b4f7 	.word	0x0802b4f7
 80111e8:	0802b7d6 	.word	0x0802b7d6
 80111ec:	0802b5a3 	.word	0x0802b5a3
 80111f0:	20014c06 	.word	0x20014c06

080111f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80111f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111f8:	b08c      	sub	sp, #48	; 0x30
 80111fa:	461e      	mov	r6, r3
 80111fc:	466d      	mov	r5, sp
 80111fe:	2300      	movs	r3, #0
 8011200:	e885 0006 	stmia.w	r5, {r1, r2}
 8011204:	9306      	str	r3, [sp, #24]
 8011206:	6803      	ldr	r3, [r0, #0]
 8011208:	f8bd 7000 	ldrh.w	r7, [sp]
 801120c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801120e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011212:	2501      	movs	r5, #1
 8011214:	9503      	str	r5, [sp, #12]
 8011216:	4604      	mov	r4, r0
 8011218:	4798      	blx	r3
 801121a:	4642      	mov	r2, r8
 801121c:	4639      	mov	r1, r7
 801121e:	4603      	mov	r3, r0
 8011220:	4620      	mov	r0, r4
 8011222:	f7ff ff15 	bl	8011050 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011226:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801122a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801122e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011232:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011236:	4b11      	ldr	r3, [pc, #68]	; (801127c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011238:	9004      	str	r0, [sp, #16]
 801123a:	881b      	ldrh	r3, [r3, #0]
 801123c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011240:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011242:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011246:	9607      	str	r6, [sp, #28]
 8011248:	f7ff fb84 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 801124c:	6803      	ldr	r3, [r0, #0]
 801124e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011250:	4798      	blx	r3
 8011252:	23ff      	movs	r3, #255	; 0xff
 8011254:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011258:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801125c:	6860      	ldr	r0, [r4, #4]
 801125e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011262:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011266:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801126a:	6803      	ldr	r3, [r0, #0]
 801126c:	a903      	add	r1, sp, #12
 801126e:	685b      	ldr	r3, [r3, #4]
 8011270:	4798      	blx	r3
 8011272:	4630      	mov	r0, r6
 8011274:	b00c      	add	sp, #48	; 0x30
 8011276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801127a:	bf00      	nop
 801127c:	20014c06 	.word	0x20014c06

08011280 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011280:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011282:	b085      	sub	sp, #20
 8011284:	ac02      	add	r4, sp, #8
 8011286:	e884 0006 	stmia.w	r4, {r1, r2}
 801128a:	4605      	mov	r5, r0
 801128c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011290:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011294:	f7ff fd1e 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011298:	463a      	mov	r2, r7
 801129a:	4603      	mov	r3, r0
 801129c:	4631      	mov	r1, r6
 801129e:	4628      	mov	r0, r5
 80112a0:	f7ff fed6 	bl	8011050 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80112a4:	4a05      	ldr	r2, [pc, #20]	; (80112bc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80112a6:	682b      	ldr	r3, [r5, #0]
 80112a8:	8812      	ldrh	r2, [r2, #0]
 80112aa:	9200      	str	r2, [sp, #0]
 80112ac:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80112ae:	e894 0006 	ldmia.w	r4, {r1, r2}
 80112b2:	4603      	mov	r3, r0
 80112b4:	4628      	mov	r0, r5
 80112b6:	47b0      	blx	r6
 80112b8:	b005      	add	sp, #20
 80112ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112bc:	20014c06 	.word	0x20014c06

080112c0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80112c0:	b570      	push	{r4, r5, r6, lr}
 80112c2:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 80112c6:	4604      	mov	r4, r0
 80112c8:	b19b      	cbz	r3, 80112f2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80112ca:	2002      	movs	r0, #2
 80112cc:	f7f0 fccc 	bl	8001c68 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80112d0:	2300      	movs	r3, #0
 80112d2:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80112d6:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80112da:	6823      	ldr	r3, [r4, #0]
 80112dc:	4620      	mov	r0, r4
 80112de:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80112e2:	f7ff fcf7 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80112e6:	462b      	mov	r3, r5
 80112e8:	4601      	mov	r1, r0
 80112ea:	4620      	mov	r0, r4
 80112ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80112f0:	4718      	bx	r3
 80112f2:	bd70      	pop	{r4, r5, r6, pc}

080112f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80112f4:	b538      	push	{r3, r4, r5, lr}
 80112f6:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 80112fa:	428b      	cmp	r3, r1
 80112fc:	4604      	mov	r4, r0
 80112fe:	460d      	mov	r5, r1
 8011300:	d006      	beq.n	8011310 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011302:	6803      	ldr	r3, [r0, #0]
 8011304:	b929      	cbnz	r1, 8011312 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011306:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801130a:	4798      	blx	r3
 801130c:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 8011310:	bd38      	pop	{r3, r4, r5, pc}
 8011312:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011316:	e7f8      	b.n	801130a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011318 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011318:	b510      	push	{r4, lr}
 801131a:	4b0d      	ldr	r3, [pc, #52]	; (8011350 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801131c:	781b      	ldrb	r3, [r3, #0]
 801131e:	4604      	mov	r4, r0
 8011320:	b95b      	cbnz	r3, 801133a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011322:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011326:	2b02      	cmp	r3, #2
 8011328:	d007      	beq.n	801133a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801132a:	6840      	ldr	r0, [r0, #4]
 801132c:	f000 f93c 	bl	80115a8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011330:	b118      	cbz	r0, 801133a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011332:	6862      	ldr	r2, [r4, #4]
 8011334:	7a53      	ldrb	r3, [r2, #9]
 8011336:	2b00      	cmp	r3, #0
 8011338:	d0fc      	beq.n	8011334 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801133a:	f7f0 fdb3 	bl	8001ea4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801133e:	4620      	mov	r0, r4
 8011340:	2100      	movs	r1, #0
 8011342:	f7ff ffd7 	bl	80112f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011346:	4620      	mov	r0, r4
 8011348:	f7ff fcc4 	bl	8010cd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801134c:	bd10      	pop	{r4, pc}
 801134e:	bf00      	nop
 8011350:	20014c0a 	.word	0x20014c0a

08011354 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011354:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011358:	1a13      	subs	r3, r2, r0
 801135a:	4258      	negs	r0, r3
 801135c:	4158      	adcs	r0, r3
 801135e:	4770      	bx	lr

08011360 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011360:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011364:	1a9b      	subs	r3, r3, r2
 8011366:	2b00      	cmp	r3, #0
 8011368:	bfdc      	itt	le
 801136a:	6882      	ldrle	r2, [r0, #8]
 801136c:	189b      	addle	r3, r3, r2
 801136e:	2b01      	cmp	r3, #1
 8011370:	bfcc      	ite	gt
 8011372:	2000      	movgt	r0, #0
 8011374:	2001      	movle	r0, #1
 8011376:	4770      	bx	lr

08011378 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011378:	6902      	ldr	r2, [r0, #16]
 801137a:	6843      	ldr	r3, [r0, #4]
 801137c:	2024      	movs	r0, #36	; 0x24
 801137e:	fb00 3002 	mla	r0, r0, r2, r3
 8011382:	4770      	bx	lr

08011384 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011384:	6803      	ldr	r3, [r0, #0]
 8011386:	691b      	ldr	r3, [r3, #16]
 8011388:	4718      	bx	r3

0801138a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801138a:	4770      	bx	lr

0801138c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 801138c:	4770      	bx	lr

0801138e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801138e:	4770      	bx	lr

08011390 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011390:	b570      	push	{r4, r5, r6, lr}
 8011392:	2301      	movs	r3, #1
 8011394:	7203      	strb	r3, [r0, #8]
 8011396:	4604      	mov	r4, r0
 8011398:	6840      	ldr	r0, [r0, #4]
 801139a:	6803      	ldr	r3, [r0, #0]
 801139c:	699b      	ldr	r3, [r3, #24]
 801139e:	4798      	blx	r3
 80113a0:	6803      	ldr	r3, [r0, #0]
 80113a2:	2b40      	cmp	r3, #64	; 0x40
 80113a4:	4605      	mov	r5, r0
 80113a6:	d039      	beq.n	801141c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80113a8:	d815      	bhi.n	80113d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 80113aa:	2b04      	cmp	r3, #4
 80113ac:	d022      	beq.n	80113f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80113ae:	d808      	bhi.n	80113c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80113b0:	2b01      	cmp	r3, #1
 80113b2:	d033      	beq.n	801141c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80113b4:	2b02      	cmp	r3, #2
 80113b6:	d108      	bne.n	80113ca <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 80113b8:	6823      	ldr	r3, [r4, #0]
 80113ba:	4620      	mov	r0, r4
 80113bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80113be:	4798      	blx	r3
 80113c0:	e025      	b.n	801140e <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 80113c2:	2b08      	cmp	r3, #8
 80113c4:	d01e      	beq.n	8011404 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 80113c6:	2b20      	cmp	r3, #32
 80113c8:	d028      	beq.n	801141c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80113ca:	4b17      	ldr	r3, [pc, #92]	; (8011428 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 80113cc:	4a17      	ldr	r2, [pc, #92]	; (801142c <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 80113ce:	4818      	ldr	r0, [pc, #96]	; (8011430 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 80113d0:	2188      	movs	r1, #136	; 0x88
 80113d2:	f016 f86d 	bl	80274b0 <__assert_func>
 80113d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80113da:	d01f      	beq.n	801141c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80113dc:	d804      	bhi.n	80113e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 80113de:	2b80      	cmp	r3, #128	; 0x80
 80113e0:	d01c      	beq.n	801141c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80113e2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80113e6:	e7ef      	b.n	80113c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 80113e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80113ec:	d016      	beq.n	801141c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80113ee:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80113f2:	e7e0      	b.n	80113b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80113f4:	6823      	ldr	r3, [r4, #0]
 80113f6:	7f01      	ldrb	r1, [r0, #28]
 80113f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80113fa:	4620      	mov	r0, r4
 80113fc:	4798      	blx	r3
 80113fe:	6823      	ldr	r3, [r4, #0]
 8011400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011402:	e006      	b.n	8011412 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011404:	6823      	ldr	r3, [r4, #0]
 8011406:	7f01      	ldrb	r1, [r0, #28]
 8011408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801140a:	4620      	mov	r0, r4
 801140c:	4798      	blx	r3
 801140e:	6823      	ldr	r3, [r4, #0]
 8011410:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011412:	4629      	mov	r1, r5
 8011414:	4620      	mov	r0, r4
 8011416:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801141a:	4718      	bx	r3
 801141c:	6823      	ldr	r3, [r4, #0]
 801141e:	4620      	mov	r0, r4
 8011420:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011422:	4798      	blx	r3
 8011424:	e7eb      	b.n	80113fe <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8011426:	bf00      	nop
 8011428:	0802ba3b 	.word	0x0802ba3b
 801142c:	0802bafc 	.word	0x0802bafc
 8011430:	0802ba60 	.word	0x0802ba60

08011434 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011434:	b570      	push	{r4, r5, r6, lr}
 8011436:	4604      	mov	r4, r0
 8011438:	460e      	mov	r6, r1
 801143a:	6860      	ldr	r0, [r4, #4]
 801143c:	6803      	ldr	r3, [r0, #0]
 801143e:	685b      	ldr	r3, [r3, #4]
 8011440:	4798      	blx	r3
 8011442:	2800      	cmp	r0, #0
 8011444:	d1f9      	bne.n	801143a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011446:	4d0d      	ldr	r5, [pc, #52]	; (801147c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011448:	6828      	ldr	r0, [r5, #0]
 801144a:	6803      	ldr	r3, [r0, #0]
 801144c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801144e:	4798      	blx	r3
 8011450:	f7f0 fd36 	bl	8001ec0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011454:	6828      	ldr	r0, [r5, #0]
 8011456:	2101      	movs	r1, #1
 8011458:	f7ff ff4c 	bl	80112f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801145c:	6860      	ldr	r0, [r4, #4]
 801145e:	6803      	ldr	r3, [r0, #0]
 8011460:	4631      	mov	r1, r6
 8011462:	689b      	ldr	r3, [r3, #8]
 8011464:	4798      	blx	r3
 8011466:	6823      	ldr	r3, [r4, #0]
 8011468:	4620      	mov	r0, r4
 801146a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801146c:	4798      	blx	r3
 801146e:	6828      	ldr	r0, [r5, #0]
 8011470:	6803      	ldr	r3, [r0, #0]
 8011472:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011476:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011478:	4718      	bx	r3
 801147a:	bf00      	nop
 801147c:	20014c0c 	.word	0x20014c0c

08011480 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011480:	b508      	push	{r3, lr}
 8011482:	f7f0 fd0f 	bl	8001ea4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011486:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801148a:	f7f0 bd13 	b.w	8001eb4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801148e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801148e:	b510      	push	{r4, lr}
 8011490:	2114      	movs	r1, #20
 8011492:	4604      	mov	r4, r0
 8011494:	f015 ffdd 	bl	8027452 <_ZdlPvj>
 8011498:	4620      	mov	r0, r4
 801149a:	bd10      	pop	{r4, pc}

0801149c <_ZN8touchgfx13DMA_Interface5startEv>:
 801149c:	b510      	push	{r4, lr}
 801149e:	4604      	mov	r4, r0
 80114a0:	6840      	ldr	r0, [r0, #4]
 80114a2:	6803      	ldr	r3, [r0, #0]
 80114a4:	681b      	ldr	r3, [r3, #0]
 80114a6:	4798      	blx	r3
 80114a8:	b948      	cbnz	r0, 80114be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80114aa:	7a63      	ldrb	r3, [r4, #9]
 80114ac:	b13b      	cbz	r3, 80114be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80114ae:	7a23      	ldrb	r3, [r4, #8]
 80114b0:	b92b      	cbnz	r3, 80114be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80114b2:	6823      	ldr	r3, [r4, #0]
 80114b4:	4620      	mov	r0, r4
 80114b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114bc:	4718      	bx	r3
 80114be:	bd10      	pop	{r4, pc}

080114c0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80114c0:	b510      	push	{r4, lr}
 80114c2:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80114c6:	1ad2      	subs	r2, r2, r3
 80114c8:	2a00      	cmp	r2, #0
 80114ca:	bfdc      	itt	le
 80114cc:	6884      	ldrle	r4, [r0, #8]
 80114ce:	1912      	addle	r2, r2, r4
 80114d0:	2a01      	cmp	r2, #1
 80114d2:	dd17      	ble.n	8011504 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 80114d4:	6842      	ldr	r2, [r0, #4]
 80114d6:	2424      	movs	r4, #36	; 0x24
 80114d8:	fb04 2303 	mla	r3, r4, r3, r2
 80114dc:	f101 0220 	add.w	r2, r1, #32
 80114e0:	f851 4b04 	ldr.w	r4, [r1], #4
 80114e4:	f843 4b04 	str.w	r4, [r3], #4
 80114e8:	4291      	cmp	r1, r2
 80114ea:	d1f9      	bne.n	80114e0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80114ec:	780a      	ldrb	r2, [r1, #0]
 80114ee:	701a      	strb	r2, [r3, #0]
 80114f0:	68c3      	ldr	r3, [r0, #12]
 80114f2:	6882      	ldr	r2, [r0, #8]
 80114f4:	f3bf 8f5b 	dmb	ish
 80114f8:	3301      	adds	r3, #1
 80114fa:	429a      	cmp	r2, r3
 80114fc:	bfd8      	it	le
 80114fe:	1a9b      	suble	r3, r3, r2
 8011500:	60c3      	str	r3, [r0, #12]
 8011502:	bd10      	pop	{r4, pc}
 8011504:	4b02      	ldr	r3, [pc, #8]	; (8011510 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 8011506:	4a03      	ldr	r2, [pc, #12]	; (8011514 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8011508:	4803      	ldr	r0, [pc, #12]	; (8011518 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 801150a:	2136      	movs	r1, #54	; 0x36
 801150c:	f015 ffd0 	bl	80274b0 <__assert_func>
 8011510:	0802ba86 	.word	0x0802ba86
 8011514:	0802bb2c 	.word	0x0802bb2c
 8011518:	0802ba60 	.word	0x0802ba60

0801151c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 801151c:	b510      	push	{r4, lr}
 801151e:	6803      	ldr	r3, [r0, #0]
 8011520:	681b      	ldr	r3, [r3, #0]
 8011522:	4604      	mov	r4, r0
 8011524:	4798      	blx	r3
 8011526:	b128      	cbz	r0, 8011534 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8011528:	4b07      	ldr	r3, [pc, #28]	; (8011548 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 801152a:	4a08      	ldr	r2, [pc, #32]	; (801154c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 801152c:	4808      	ldr	r0, [pc, #32]	; (8011550 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 801152e:	213c      	movs	r1, #60	; 0x3c
 8011530:	f015 ffbe 	bl	80274b0 <__assert_func>
 8011534:	6923      	ldr	r3, [r4, #16]
 8011536:	68a2      	ldr	r2, [r4, #8]
 8011538:	f3bf 8f5b 	dmb	ish
 801153c:	3301      	adds	r3, #1
 801153e:	429a      	cmp	r2, r3
 8011540:	bfd8      	it	le
 8011542:	1a9b      	suble	r3, r3, r2
 8011544:	6123      	str	r3, [r4, #16]
 8011546:	bd10      	pop	{r4, pc}
 8011548:	0802baa9 	.word	0x0802baa9
 801154c:	0802bb7a 	.word	0x0802bb7a
 8011550:	0802ba60 	.word	0x0802ba60

08011554 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011554:	b570      	push	{r4, r5, r6, lr}
 8011556:	4604      	mov	r4, r0
 8011558:	6840      	ldr	r0, [r0, #4]
 801155a:	6803      	ldr	r3, [r0, #0]
 801155c:	681b      	ldr	r3, [r3, #0]
 801155e:	4798      	blx	r3
 8011560:	4605      	mov	r5, r0
 8011562:	b930      	cbnz	r0, 8011572 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011564:	7a23      	ldrb	r3, [r4, #8]
 8011566:	b123      	cbz	r3, 8011572 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011568:	6860      	ldr	r0, [r4, #4]
 801156a:	6803      	ldr	r3, [r0, #0]
 801156c:	695b      	ldr	r3, [r3, #20]
 801156e:	4798      	blx	r3
 8011570:	7225      	strb	r5, [r4, #8]
 8011572:	6860      	ldr	r0, [r4, #4]
 8011574:	6803      	ldr	r3, [r0, #0]
 8011576:	681b      	ldr	r3, [r3, #0]
 8011578:	4798      	blx	r3
 801157a:	b928      	cbnz	r0, 8011588 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 801157c:	6823      	ldr	r3, [r4, #0]
 801157e:	4620      	mov	r0, r4
 8011580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011582:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011586:	4718      	bx	r3
 8011588:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801158c:	f7f0 bca0 	b.w	8001ed0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011590 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011590:	b510      	push	{r4, lr}
 8011592:	4c04      	ldr	r4, [pc, #16]	; (80115a4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011594:	6082      	str	r2, [r0, #8]
 8011596:	2200      	movs	r2, #0
 8011598:	e9c0 4100 	strd	r4, r1, [r0]
 801159c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80115a0:	bd10      	pop	{r4, pc}
 80115a2:	bf00      	nop
 80115a4:	0802bae0 	.word	0x0802bae0

080115a8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80115a8:	6840      	ldr	r0, [r0, #4]
 80115aa:	6803      	ldr	r3, [r0, #0]
 80115ac:	681b      	ldr	r3, [r3, #0]
 80115ae:	4718      	bx	r3

080115b0 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 80115b0:	2001      	movs	r0, #1
 80115b2:	4770      	bx	lr

080115b4 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 80115b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115b8:	4413      	add	r3, r2
 80115ba:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 80115be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80115c0:	4d43      	ldr	r5, [pc, #268]	; (80116d0 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x11c>)
 80115c2:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 80115c6:	eb01 0e43 	add.w	lr, r1, r3, lsl #1
 80115ca:	6943      	ldr	r3, [r0, #20]
 80115cc:	095c      	lsrs	r4, r3, #5
 80115ce:	ea05 2213 	and.w	r2, r5, r3, lsr #8
 80115d2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80115d6:	4322      	orrs	r2, r4
 80115d8:	7a04      	ldrb	r4, [r0, #8]
 80115da:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80115de:	431a      	orrs	r2, r3
 80115e0:	2cff      	cmp	r4, #255	; 0xff
 80115e2:	b292      	uxth	r2, r2
 80115e4:	d017      	beq.n	8011616 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x62>
 80115e6:	ea02 0305 	and.w	r3, r2, r5
 80115ea:	9301      	str	r3, [sp, #4]
 80115ec:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80115f0:	f402 6afc 	and.w	sl, r2, #2016	; 0x7e0
 80115f4:	f002 0b1f 	and.w	fp, r2, #31
 80115f8:	7a04      	ldrb	r4, [r0, #8]
 80115fa:	f818 3b01 	ldrb.w	r3, [r8], #1
 80115fe:	4363      	muls	r3, r4
 8011600:	1c5c      	adds	r4, r3, #1
 8011602:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8011606:	121b      	asrs	r3, r3, #8
 8011608:	2bff      	cmp	r3, #255	; 0xff
 801160a:	d13e      	bne.n	801168a <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0xd6>
 801160c:	800a      	strh	r2, [r1, #0]
 801160e:	3102      	adds	r1, #2
 8011610:	458e      	cmp	lr, r1
 8011612:	d8f1      	bhi.n	80115f8 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x44>
 8011614:	e00d      	b.n	8011632 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x7e>
 8011616:	ea02 0605 	and.w	r6, r2, r5
 801161a:	f402 67fc 	and.w	r7, r2, #2016	; 0x7e0
 801161e:	f002 0c1f 	and.w	ip, r2, #31
 8011622:	f818 0b01 	ldrb.w	r0, [r8], #1
 8011626:	28ff      	cmp	r0, #255	; 0xff
 8011628:	d106      	bne.n	8011638 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x84>
 801162a:	800a      	strh	r2, [r1, #0]
 801162c:	3102      	adds	r1, #2
 801162e:	458e      	cmp	lr, r1
 8011630:	d8f7      	bhi.n	8011622 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x6e>
 8011632:	b003      	add	sp, #12
 8011634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011638:	f8b1 a000 	ldrh.w	sl, [r1]
 801163c:	ea6f 0900 	mvn.w	r9, r0
 8011640:	fa5f f989 	uxtb.w	r9, r9
 8011644:	ea0a 0305 	and.w	r3, sl, r5
 8011648:	fb09 f303 	mul.w	r3, r9, r3
 801164c:	fb00 3306 	mla	r3, r0, r6, r3
 8011650:	fb93 f3f4 	sdiv	r3, r3, r4
 8011654:	ea03 0b05 	and.w	fp, r3, r5
 8011658:	f40a 63fc 	and.w	r3, sl, #2016	; 0x7e0
 801165c:	fb09 f303 	mul.w	r3, r9, r3
 8011660:	f00a 0a1f 	and.w	sl, sl, #31
 8011664:	fb00 3307 	mla	r3, r0, r7, r3
 8011668:	fb09 f90a 	mul.w	r9, r9, sl
 801166c:	fb93 f3f4 	sdiv	r3, r3, r4
 8011670:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011674:	ea4b 0303 	orr.w	r3, fp, r3
 8011678:	fb00 900c 	mla	r0, r0, ip, r9
 801167c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011680:	f000 001f 	and.w	r0, r0, #31
 8011684:	4303      	orrs	r3, r0
 8011686:	800b      	strh	r3, [r1, #0]
 8011688:	e7d0      	b.n	801162c <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x78>
 801168a:	f8b1 c000 	ldrh.w	ip, [r1]
 801168e:	9c01      	ldr	r4, [sp, #4]
 8011690:	43df      	mvns	r7, r3
 8011692:	b2ff      	uxtb	r7, r7
 8011694:	ea0c 0605 	and.w	r6, ip, r5
 8011698:	437e      	muls	r6, r7
 801169a:	fb03 6604 	mla	r6, r3, r4, r6
 801169e:	f40c 64fc 	and.w	r4, ip, #2016	; 0x7e0
 80116a2:	437c      	muls	r4, r7
 80116a4:	fb96 f6f9 	sdiv	r6, r6, r9
 80116a8:	fb03 440a 	mla	r4, r3, sl, r4
 80116ac:	402e      	ands	r6, r5
 80116ae:	fb94 f4f9 	sdiv	r4, r4, r9
 80116b2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80116b6:	4334      	orrs	r4, r6
 80116b8:	f00c 061f 	and.w	r6, ip, #31
 80116bc:	437e      	muls	r6, r7
 80116be:	fb03 660b 	mla	r6, r3, fp, r6
 80116c2:	fb96 f6f9 	sdiv	r6, r6, r9
 80116c6:	f006 061f 	and.w	r6, r6, #31
 80116ca:	4334      	orrs	r4, r6
 80116cc:	800c      	strh	r4, [r1, #0]
 80116ce:	e79e      	b.n	801160e <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x5a>
 80116d0:	fffff800 	.word	0xfffff800

080116d4 <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 80116d4:	b510      	push	{r4, lr}
 80116d6:	8ac4      	ldrh	r4, [r0, #22]
 80116d8:	700c      	strb	r4, [r1, #0]
 80116da:	6941      	ldr	r1, [r0, #20]
 80116dc:	0a09      	lsrs	r1, r1, #8
 80116de:	7011      	strb	r1, [r2, #0]
 80116e0:	6942      	ldr	r2, [r0, #20]
 80116e2:	701a      	strb	r2, [r3, #0]
 80116e4:	9b02      	ldr	r3, [sp, #8]
 80116e6:	22ff      	movs	r2, #255	; 0xff
 80116e8:	701a      	strb	r2, [r3, #0]
 80116ea:	2001      	movs	r0, #1
 80116ec:	bd10      	pop	{r4, pc}

080116ee <_ZN8touchgfx13PainterRGB565D1Ev>:
 80116ee:	4770      	bx	lr

080116f0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80116f0:	b510      	push	{r4, lr}
 80116f2:	2118      	movs	r1, #24
 80116f4:	4604      	mov	r4, r0
 80116f6:	f015 feac 	bl	8027452 <_ZdlPvj>
 80116fa:	4620      	mov	r0, r4
 80116fc:	bd10      	pop	{r4, pc}

080116fe <_ZN8touchgfx21AbstractPainterRGB56510renderNextERhS1_S1_S1_>:
 80116fe:	2000      	movs	r0, #0
 8011700:	4770      	bx	lr

08011702 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 8011702:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011706:	4616      	mov	r6, r2
 8011708:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801170c:	b085      	sub	sp, #20
 801170e:	4432      	add	r2, r6
 8011710:	60c2      	str	r2, [r0, #12]
 8011712:	4698      	mov	r8, r3
 8011714:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8011718:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801171a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801171c:	441a      	add	r2, r3
 801171e:	6803      	ldr	r3, [r0, #0]
 8011720:	6102      	str	r2, [r0, #16]
 8011722:	68db      	ldr	r3, [r3, #12]
 8011724:	4604      	mov	r4, r0
 8011726:	460d      	mov	r5, r1
 8011728:	4798      	blx	r3
 801172a:	2800      	cmp	r0, #0
 801172c:	d03b      	beq.n	80117a6 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa4>
 801172e:	4446      	add	r6, r8
 8011730:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 8011734:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8011736:	eb05 0646 	add.w	r6, r5, r6, lsl #1
 801173a:	6823      	ldr	r3, [r4, #0]
 801173c:	f10d 020f 	add.w	r2, sp, #15
 8011740:	9200      	str	r2, [sp, #0]
 8011742:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8011746:	f10d 020d 	add.w	r2, sp, #13
 801174a:	f10d 030e 	add.w	r3, sp, #14
 801174e:	a903      	add	r1, sp, #12
 8011750:	4620      	mov	r0, r4
 8011752:	47c0      	blx	r8
 8011754:	b1f8      	cbz	r0, 8011796 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x94>
 8011756:	f89d 300f 	ldrb.w	r3, [sp, #15]
 801175a:	7a20      	ldrb	r0, [r4, #8]
 801175c:	f89d 200c 	ldrb.w	r2, [sp, #12]
 8011760:	f89d c00e 	ldrb.w	ip, [sp, #14]
 8011764:	4358      	muls	r0, r3
 8011766:	1c43      	adds	r3, r0, #1
 8011768:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801176c:	7838      	ldrb	r0, [r7, #0]
 801176e:	121b      	asrs	r3, r3, #8
 8011770:	fb10 f003 	smulbb	r0, r0, r3
 8011774:	b283      	uxth	r3, r0
 8011776:	1c58      	adds	r0, r3, #1
 8011778:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801177c:	1200      	asrs	r0, r0, #8
 801177e:	6823      	ldr	r3, [r4, #0]
 8011780:	28ff      	cmp	r0, #255	; 0xff
 8011782:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8011786:	f89d 300d 	ldrb.w	r3, [sp, #13]
 801178a:	d10f      	bne.n	80117ac <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xaa>
 801178c:	f8cd c000 	str.w	ip, [sp]
 8011790:	4629      	mov	r1, r5
 8011792:	4620      	mov	r0, r4
 8011794:	47c0      	blx	r8
 8011796:	68e3      	ldr	r3, [r4, #12]
 8011798:	3502      	adds	r5, #2
 801179a:	3301      	adds	r3, #1
 801179c:	42ae      	cmp	r6, r5
 801179e:	f107 0701 	add.w	r7, r7, #1
 80117a2:	60e3      	str	r3, [r4, #12]
 80117a4:	d8c9      	bhi.n	801173a <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x38>
 80117a6:	b005      	add	sp, #20
 80117a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80117ac:	8829      	ldrh	r1, [r5, #0]
 80117ae:	fa1f fe80 	uxth.w	lr, r0
 80117b2:	ea4f 2921 	mov.w	r9, r1, asr #8
 80117b6:	43c0      	mvns	r0, r0
 80117b8:	b2c0      	uxtb	r0, r0
 80117ba:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80117be:	fb12 f20e 	smulbb	r2, r2, lr
 80117c2:	fb09 2200 	mla	r2, r9, r0, r2
 80117c6:	ea4f 09e1 	mov.w	r9, r1, asr #3
 80117ca:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80117ce:	fb13 f30e 	smulbb	r3, r3, lr
 80117d2:	fb09 3300 	mla	r3, r9, r0, r3
 80117d6:	00c9      	lsls	r1, r1, #3
 80117d8:	b29b      	uxth	r3, r3
 80117da:	b2c9      	uxtb	r1, r1
 80117dc:	fb1c fc0e 	smulbb	ip, ip, lr
 80117e0:	b292      	uxth	r2, r2
 80117e2:	fb01 c000 	mla	r0, r1, r0, ip
 80117e6:	1c59      	adds	r1, r3, #1
 80117e8:	b280      	uxth	r0, r0
 80117ea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80117ee:	1c51      	adds	r1, r2, #1
 80117f0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80117f4:	1c41      	adds	r1, r0, #1
 80117f6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80117fa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80117fe:	9000      	str	r0, [sp, #0]
 8011800:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8011804:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8011808:	e7c2      	b.n	8011790 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8e>
	...

0801180c <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 801180c:	f89d 0000 	ldrb.w	r0, [sp]
 8011810:	00db      	lsls	r3, r3, #3
 8011812:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011816:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 801181a:	4803      	ldr	r0, [pc, #12]	; (8011828 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 801181c:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 8011820:	4313      	orrs	r3, r2
 8011822:	800b      	strh	r3, [r1, #0]
 8011824:	4770      	bx	lr
 8011826:	bf00      	nop
 8011828:	fffff800 	.word	0xfffff800

0801182c <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
 801182c:	4770      	bx	lr

0801182e <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 801182e:	b510      	push	{r4, lr}
 8011830:	2114      	movs	r1, #20
 8011832:	4604      	mov	r4, r0
 8011834:	f015 fe0d 	bl	8027452 <_ZdlPvj>
 8011838:	4620      	mov	r0, r4
 801183a:	bd10      	pop	{r4, pc}

0801183c <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 801183c:	6281      	str	r1, [r0, #40]	; 0x28
 801183e:	4770      	bx	lr

08011840 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8011840:	b510      	push	{r4, lr}
 8011842:	2200      	movs	r2, #0
 8011844:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8011848:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 801184c:	8002      	strh	r2, [r0, #0]
 801184e:	8042      	strh	r2, [r0, #2]
 8011850:	8084      	strh	r4, [r0, #4]
 8011852:	80c1      	strh	r1, [r0, #6]
 8011854:	bd10      	pop	{r4, pc}

08011856 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 8011856:	2200      	movs	r2, #0
 8011858:	8002      	strh	r2, [r0, #0]
 801185a:	8042      	strh	r2, [r0, #2]
 801185c:	8082      	strh	r2, [r0, #4]
 801185e:	80c2      	strh	r2, [r0, #6]
 8011860:	4770      	bx	lr
	...

08011864 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 8011864:	b508      	push	{r3, lr}
 8011866:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011868:	b928      	cbnz	r0, 8011876 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 801186a:	4b03      	ldr	r3, [pc, #12]	; (8011878 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 801186c:	4a03      	ldr	r2, [pc, #12]	; (801187c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 801186e:	4804      	ldr	r0, [pc, #16]	; (8011880 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 8011870:	2123      	movs	r1, #35	; 0x23
 8011872:	f015 fe1d 	bl	80274b0 <__assert_func>
 8011876:	bd08      	pop	{r3, pc}
 8011878:	0802bbec 	.word	0x0802bbec
 801187c:	0802bcd0 	.word	0x0802bcd0
 8011880:	0802bc13 	.word	0x0802bc13

08011884 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8011884:	b510      	push	{r4, lr}
 8011886:	f9b1 4000 	ldrsh.w	r4, [r1]
 801188a:	888a      	ldrh	r2, [r1, #4]
 801188c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011890:	4422      	add	r2, r4
 8011892:	b212      	sxth	r2, r2
 8011894:	4293      	cmp	r3, r2
 8011896:	da15      	bge.n	80118c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011898:	8882      	ldrh	r2, [r0, #4]
 801189a:	4413      	add	r3, r2
 801189c:	b21b      	sxth	r3, r3
 801189e:	429c      	cmp	r4, r3
 80118a0:	da10      	bge.n	80118c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80118a2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80118a6:	88c9      	ldrh	r1, [r1, #6]
 80118a8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80118ac:	4419      	add	r1, r3
 80118ae:	b209      	sxth	r1, r1
 80118b0:	428a      	cmp	r2, r1
 80118b2:	da07      	bge.n	80118c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80118b4:	88c0      	ldrh	r0, [r0, #6]
 80118b6:	4410      	add	r0, r2
 80118b8:	b200      	sxth	r0, r0
 80118ba:	4283      	cmp	r3, r0
 80118bc:	bfac      	ite	ge
 80118be:	2000      	movge	r0, #0
 80118c0:	2001      	movlt	r0, #1
 80118c2:	bd10      	pop	{r4, pc}
 80118c4:	2000      	movs	r0, #0
 80118c6:	e7fc      	b.n	80118c2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080118c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80118c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118cc:	4604      	mov	r4, r0
 80118ce:	b08b      	sub	sp, #44	; 0x2c
 80118d0:	6808      	ldr	r0, [r1, #0]
 80118d2:	6849      	ldr	r1, [r1, #4]
 80118d4:	ab04      	add	r3, sp, #16
 80118d6:	c303      	stmia	r3!, {r0, r1}
 80118d8:	4b37      	ldr	r3, [pc, #220]	; (80119b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf0>)
 80118da:	781b      	ldrb	r3, [r3, #0]
 80118dc:	2b01      	cmp	r3, #1
 80118de:	6823      	ldr	r3, [r4, #0]
 80118e0:	4621      	mov	r1, r4
 80118e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80118e4:	a806      	add	r0, sp, #24
 80118e6:	bf1f      	itttt	ne
 80118e8:	f10d 090e 	addne.w	r9, sp, #14
 80118ec:	ae05      	addne	r6, sp, #20
 80118ee:	f10d 0516 	addne.w	r5, sp, #22
 80118f2:	f10d 0812 	addne.w	r8, sp, #18
 80118f6:	bf01      	itttt	eq
 80118f8:	f10d 0916 	addeq.w	r9, sp, #22
 80118fc:	f10d 060e 	addeq.w	r6, sp, #14
 8011900:	ad05      	addeq	r5, sp, #20
 8011902:	f10d 0810 	addeq.w	r8, sp, #16
 8011906:	4798      	blx	r3
 8011908:	f04f 0a00 	mov.w	sl, #0
 801190c:	f647 7bff 	movw	fp, #32767	; 0x7fff
 8011910:	f9b5 3000 	ldrsh.w	r3, [r5]
 8011914:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8011918:	2b00      	cmp	r3, #0
 801191a:	d042      	beq.n	80119a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xda>
 801191c:	4293      	cmp	r3, r2
 801191e:	bfa8      	it	ge
 8011920:	4613      	movge	r3, r2
 8011922:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011926:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 801192a:	2f00      	cmp	r7, #0
 801192c:	dd21      	ble.n	8011972 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xaa>
 801192e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8011932:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8011936:	f9b6 2000 	ldrsh.w	r2, [r6]
 801193a:	f9b9 3000 	ldrsh.w	r3, [r9]
 801193e:	f8ad 0020 	strh.w	r0, [sp, #32]
 8011942:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8011946:	a808      	add	r0, sp, #32
 8011948:	a906      	add	r1, sp, #24
 801194a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801194e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011952:	f7ff ff97 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011956:	9001      	str	r0, [sp, #4]
 8011958:	b1d0      	cbz	r0, 8011990 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 801195a:	6822      	ldr	r2, [r4, #0]
 801195c:	a908      	add	r1, sp, #32
 801195e:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8011960:	4620      	mov	r0, r4
 8011962:	4790      	blx	r2
 8011964:	b9a0      	cbnz	r0, 8011990 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 8011966:	9b01      	ldr	r3, [sp, #4]
 8011968:	107f      	asrs	r7, r7, #1
 801196a:	f8ad 700e 	strh.w	r7, [sp, #14]
 801196e:	469a      	mov	sl, r3
 8011970:	e7d9      	b.n	8011926 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011972:	d10d      	bne.n	8011990 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 8011974:	2301      	movs	r3, #1
 8011976:	f8ad 300e 	strh.w	r3, [sp, #14]
 801197a:	f8b8 2000 	ldrh.w	r2, [r8]
 801197e:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 8011982:	440a      	add	r2, r1
 8011984:	f8a8 2000 	strh.w	r2, [r8]
 8011988:	882b      	ldrh	r3, [r5, #0]
 801198a:	1a5b      	subs	r3, r3, r1
 801198c:	802b      	strh	r3, [r5, #0]
 801198e:	e7bf      	b.n	8011910 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011990:	f1ba 0f00 	cmp.w	sl, #0
 8011994:	d0f1      	beq.n	801197a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 8011996:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	; 0x2c
 801199a:	455b      	cmp	r3, fp
 801199c:	bf08      	it	eq
 801199e:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 80119a0:	e7eb      	b.n	801197a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 80119a2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80119a6:	429a      	cmp	r2, r3
 80119a8:	bf04      	itt	eq
 80119aa:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 80119ae:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 80119b0:	b00b      	add	sp, #44	; 0x2c
 80119b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119b6:	bf00      	nop
 80119b8:	20014c04 	.word	0x20014c04

080119bc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80119bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119be:	6803      	ldr	r3, [r0, #0]
 80119c0:	b085      	sub	sp, #20
 80119c2:	4604      	mov	r4, r0
 80119c4:	4601      	mov	r1, r0
 80119c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80119c8:	4668      	mov	r0, sp
 80119ca:	4798      	blx	r3
 80119cc:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 80119d0:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 80119d4:	f8ad 600c 	strh.w	r6, [sp, #12]
 80119d8:	2300      	movs	r3, #0
 80119da:	a902      	add	r1, sp, #8
 80119dc:	4668      	mov	r0, sp
 80119de:	9302      	str	r3, [sp, #8]
 80119e0:	f8ad 500e 	strh.w	r5, [sp, #14]
 80119e4:	f7ff ff4e 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80119e8:	b340      	cbz	r0, 8011a3c <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x80>
 80119ea:	f9bd 2000 	ldrsh.w	r2, [sp]
 80119ee:	f8bd 7004 	ldrh.w	r7, [sp, #4]
 80119f2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80119f6:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 80119fa:	443a      	add	r2, r7
 80119fc:	b292      	uxth	r2, r2
 80119fe:	b217      	sxth	r7, r2
 8011a00:	42be      	cmp	r6, r7
 8011a02:	bfd8      	it	le
 8011a04:	b2b2      	uxthle	r2, r6
 8011a06:	1a12      	subs	r2, r2, r0
 8011a08:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011a0c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011a10:	f8ad 0000 	strh.w	r0, [sp]
 8011a14:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8011a18:	4413      	add	r3, r2
 8011a1a:	b29b      	uxth	r3, r3
 8011a1c:	b21a      	sxth	r2, r3
 8011a1e:	4295      	cmp	r5, r2
 8011a20:	bfd8      	it	le
 8011a22:	b2ab      	uxthle	r3, r5
 8011a24:	1a5b      	subs	r3, r3, r1
 8011a26:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a2a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8011a2e:	6823      	ldr	r3, [r4, #0]
 8011a30:	4669      	mov	r1, sp
 8011a32:	691b      	ldr	r3, [r3, #16]
 8011a34:	4620      	mov	r0, r4
 8011a36:	4798      	blx	r3
 8011a38:	b005      	add	sp, #20
 8011a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a3c:	e9cd 0000 	strd	r0, r0, [sp]
 8011a40:	e7f5      	b.n	8011a2e <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x72>
	...

08011a44 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011a44:	2101      	movs	r1, #1
 8011a46:	2200      	movs	r2, #0
 8011a48:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011a4c:	490c      	ldr	r1, [pc, #48]	; (8011a80 <_ZN8touchgfx12CanvasWidgetC1Ev+0x3c>)
 8011a4e:	8082      	strh	r2, [r0, #4]
 8011a50:	80c2      	strh	r2, [r0, #6]
 8011a52:	8102      	strh	r2, [r0, #8]
 8011a54:	8142      	strh	r2, [r0, #10]
 8011a56:	8182      	strh	r2, [r0, #12]
 8011a58:	81c2      	strh	r2, [r0, #14]
 8011a5a:	8202      	strh	r2, [r0, #16]
 8011a5c:	8242      	strh	r2, [r0, #18]
 8011a5e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011a62:	61c2      	str	r2, [r0, #28]
 8011a64:	8402      	strh	r2, [r0, #32]
 8011a66:	8442      	strh	r2, [r0, #34]	; 0x22
 8011a68:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011a6c:	6001      	str	r1, [r0, #0]
 8011a6e:	6282      	str	r2, [r0, #40]	; 0x28
 8011a70:	21ff      	movs	r1, #255	; 0xff
 8011a72:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011a76:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011a7a:	8582      	strh	r2, [r0, #44]	; 0x2c
 8011a7c:	4770      	bx	lr
 8011a7e:	bf00      	nop
 8011a80:	0802bc58 	.word	0x0802bc58

08011a84 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011a84:	f101 0368 	add.w	r3, r1, #104	; 0x68
 8011a88:	4602      	mov	r2, r0
 8011a8a:	cb03      	ldmia	r3!, {r0, r1}
 8011a8c:	6010      	str	r0, [r2, #0]
 8011a8e:	6051      	str	r1, [r2, #4]
 8011a90:	4610      	mov	r0, r2
 8011a92:	4770      	bx	lr

08011a94 <_ZN8touchgfx4LineD1Ev>:
 8011a94:	4770      	bx	lr

08011a96 <_ZN8touchgfx4LineD0Ev>:
 8011a96:	b510      	push	{r4, lr}
 8011a98:	2174      	movs	r1, #116	; 0x74
 8011a9a:	4604      	mov	r4, r0
 8011a9c:	f015 fcd9 	bl	8027452 <_ZdlPvj>
 8011aa0:	4620      	mov	r0, r4
 8011aa2:	bd10      	pop	{r4, pc}

08011aa4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011aa4:	b507      	push	{r0, r1, r2, lr}
 8011aa6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011aaa:	ab01      	add	r3, sp, #4
 8011aac:	6809      	ldr	r1, [r1, #0]
 8011aae:	6800      	ldr	r0, [r0, #0]
 8011ab0:	f005 ffba 	bl	8017a28 <_ZN8touchgfx6muldivElllRl>
 8011ab4:	b003      	add	sp, #12
 8011ab6:	f85d fb04 	ldr.w	pc, [sp], #4

08011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011aba:	6800      	ldr	r0, [r0, #0]
 8011abc:	2800      	cmp	r0, #0
 8011abe:	bfb9      	ittee	lt
 8011ac0:	2320      	movlt	r3, #32
 8011ac2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011ac6:	301f      	addge	r0, #31
 8011ac8:	1140      	asrge	r0, r0, #5
 8011aca:	4770      	bx	lr

08011acc <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ad0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011ad4:	b089      	sub	sp, #36	; 0x24
 8011ad6:	4604      	mov	r4, r0
 8011ad8:	b353      	cbz	r3, 8011b30 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011ada:	6803      	ldr	r3, [r0, #0]
 8011adc:	4601      	mov	r1, r0
 8011ade:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011ae0:	a802      	add	r0, sp, #8
 8011ae2:	4798      	blx	r3
 8011ae4:	2220      	movs	r2, #32
 8011ae6:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
 8011aea:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011aec:	fb9a f0f2 	sdiv	r0, sl, r2
 8011af0:	fb91 f5f2 	sdiv	r5, r1, r2
 8011af4:	1b40      	subs	r0, r0, r5
 8011af6:	2800      	cmp	r0, #0
 8011af8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8011afa:	fb93 f6f2 	sdiv	r6, r3, r2
 8011afe:	bfb8      	it	lt
 8011b00:	4240      	neglt	r0, r0
 8011b02:	0076      	lsls	r6, r6, #1
 8011b04:	4286      	cmp	r6, r0
 8011b06:	f8d4 b000 	ldr.w	fp, [r4]
 8011b0a:	dc0c      	bgt.n	8011b26 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011b0c:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8011b0e:	f8d4 803c 	ldr.w	r8, [r4, #60]	; 0x3c
 8011b12:	fb95 f0f2 	sdiv	r0, r5, r2
 8011b16:	fb98 f7f2 	sdiv	r7, r8, r2
 8011b1a:	1bc0      	subs	r0, r0, r7
 8011b1c:	2800      	cmp	r0, #0
 8011b1e:	bfb8      	it	lt
 8011b20:	4240      	neglt	r0, r0
 8011b22:	4286      	cmp	r6, r0
 8011b24:	dd07      	ble.n	8011b36 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011b26:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011b2a:	a902      	add	r1, sp, #8
 8011b2c:	4620      	mov	r0, r4
 8011b2e:	4798      	blx	r3
 8011b30:	b009      	add	sp, #36	; 0x24
 8011b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b36:	3301      	adds	r3, #1
 8011b38:	2002      	movs	r0, #2
 8011b3a:	f10d 0920 	add.w	r9, sp, #32
 8011b3e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011b42:	4103      	asrs	r3, r0
 8011b44:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011b48:	eb01 060a 	add.w	r6, r1, sl
 8011b4c:	eb08 0705 	add.w	r7, r8, r5
 8011b50:	fb96 f6f0 	sdiv	r6, r6, r0
 8011b54:	fb97 f7f0 	sdiv	r7, r7, r0
 8011b58:	4648      	mov	r0, r9
 8011b5a:	9101      	str	r1, [sp, #4]
 8011b5c:	b236      	sxth	r6, r6
 8011b5e:	b23f      	sxth	r7, r7
 8011b60:	fb96 f6f2 	sdiv	r6, r6, r2
 8011b64:	fb97 f7f2 	sdiv	r7, r7, r2
 8011b68:	f7ff ffa7 	bl	8011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011b6c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011b70:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011b74:	9901      	ldr	r1, [sp, #4]
 8011b76:	4293      	cmp	r3, r2
 8011b78:	fa1f fe87 	uxth.w	lr, r7
 8011b7c:	fa1f fc86 	uxth.w	ip, r6
 8011b80:	eba1 0a0a 	sub.w	sl, r1, sl
 8011b84:	b280      	uxth	r0, r0
 8011b86:	da54      	bge.n	8011c32 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011b88:	ebac 0100 	sub.w	r1, ip, r0
 8011b8c:	b289      	uxth	r1, r1
 8011b8e:	4460      	add	r0, ip
 8011b90:	f1ba 0f00 	cmp.w	sl, #0
 8011b94:	b20e      	sxth	r6, r1
 8011b96:	b280      	uxth	r0, r0
 8011b98:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011b9c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011ba0:	da29      	bge.n	8011bf6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011ba2:	eba8 0505 	sub.w	r5, r8, r5
 8011ba6:	2d00      	cmp	r5, #0
 8011ba8:	da2a      	bge.n	8011c00 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011baa:	fa1f f88a 	uxth.w	r8, sl
 8011bae:	eba0 0008 	sub.w	r0, r0, r8
 8011bb2:	fa1f f58c 	uxth.w	r5, ip
 8011bb6:	4443      	add	r3, r8
 8011bb8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011bbc:	1a59      	subs	r1, r3, r1
 8011bbe:	ebae 0005 	sub.w	r0, lr, r5
 8011bc2:	f8ad a010 	strh.w	sl, [sp, #16]
 8011bc6:	f8ad c012 	strh.w	ip, [sp, #18]
 8011bca:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011bce:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011bd2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011bd6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011bda:	442a      	add	r2, r5
 8011bdc:	eba2 0e0e 	sub.w	lr, r2, lr
 8011be0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011be4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011be8:	a904      	add	r1, sp, #16
 8011bea:	4620      	mov	r0, r4
 8011bec:	4798      	blx	r3
 8011bee:	6823      	ldr	r3, [r4, #0]
 8011bf0:	4649      	mov	r1, r9
 8011bf2:	691b      	ldr	r3, [r3, #16]
 8011bf4:	e79a      	b.n	8011b2c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011bf6:	d003      	beq.n	8011c00 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011bf8:	eba8 0505 	sub.w	r5, r8, r5
 8011bfc:	2d00      	cmp	r5, #0
 8011bfe:	dcd4      	bgt.n	8011baa <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011c00:	fa1f f88a 	uxth.w	r8, sl
 8011c04:	4443      	add	r3, r8
 8011c06:	fa1f f58c 	uxth.w	r5, ip
 8011c0a:	1a59      	subs	r1, r3, r1
 8011c0c:	eba0 0008 	sub.w	r0, r0, r8
 8011c10:	ebae 0305 	sub.w	r3, lr, r5
 8011c14:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011c18:	f8ad c012 	strh.w	ip, [sp, #18]
 8011c1c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011c20:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011c24:	f8ad a018 	strh.w	sl, [sp, #24]
 8011c28:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011c2c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011c30:	e7d3      	b.n	8011bda <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011c32:	ebae 0100 	sub.w	r1, lr, r0
 8011c36:	b289      	uxth	r1, r1
 8011c38:	4470      	add	r0, lr
 8011c3a:	f1ba 0f00 	cmp.w	sl, #0
 8011c3e:	b20f      	sxth	r7, r1
 8011c40:	b280      	uxth	r0, r0
 8011c42:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011c46:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011c4a:	da20      	bge.n	8011c8e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011c4c:	eba8 0505 	sub.w	r5, r8, r5
 8011c50:	2d00      	cmp	r5, #0
 8011c52:	da21      	bge.n	8011c98 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011c54:	fa1f f88e 	uxth.w	r8, lr
 8011c58:	fa1f f58a 	uxth.w	r5, sl
 8011c5c:	4443      	add	r3, r8
 8011c5e:	442a      	add	r2, r5
 8011c60:	f8ad e010 	strh.w	lr, [sp, #16]
 8011c64:	1b40      	subs	r0, r0, r5
 8011c66:	ebac 0e08 	sub.w	lr, ip, r8
 8011c6a:	1a51      	subs	r1, r2, r1
 8011c6c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011c70:	f8ad a012 	strh.w	sl, [sp, #18]
 8011c74:	f8ad e014 	strh.w	lr, [sp, #20]
 8011c78:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011c7c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011c80:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011c84:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011c88:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011c8c:	e7aa      	b.n	8011be4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011c8e:	d003      	beq.n	8011c98 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011c90:	eba8 0505 	sub.w	r5, r8, r5
 8011c94:	2d00      	cmp	r5, #0
 8011c96:	dcdd      	bgt.n	8011c54 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011c98:	fa1f f58e 	uxth.w	r5, lr
 8011c9c:	fa1f f88a 	uxth.w	r8, sl
 8011ca0:	4442      	add	r2, r8
 8011ca2:	442b      	add	r3, r5
 8011ca4:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011ca8:	1a51      	subs	r1, r2, r1
 8011caa:	ebac 0705 	sub.w	r7, ip, r5
 8011cae:	eba0 0008 	sub.w	r0, r0, r8
 8011cb2:	eba3 0c0c 	sub.w	ip, r3, ip
 8011cb6:	f8ad e010 	strh.w	lr, [sp, #16]
 8011cba:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011cbe:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011cc2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011cc6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011cca:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011cce:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011cd2:	e787      	b.n	8011be4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011cd4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011cd4:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8011cd8:	fb90 f3f2 	sdiv	r3, r0, r2
 8011cdc:	fb03 0312 	mls	r3, r3, r2, r0
 8011ce0:	4413      	add	r3, r2
 8011ce2:	fb93 f0f2 	sdiv	r0, r3, r2
 8011ce6:	fb02 3010 	mls	r0, r2, r0, r3
 8011cea:	285a      	cmp	r0, #90	; 0x5a
 8011cec:	4b09      	ldr	r3, [pc, #36]	; (8011d14 <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 8011cee:	dc02      	bgt.n	8011cf6 <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 8011cf0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011cf4:	4770      	bx	lr
 8011cf6:	28b4      	cmp	r0, #180	; 0xb4
 8011cf8:	dc02      	bgt.n	8011d00 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 8011cfa:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011cfe:	e7f7      	b.n	8011cf0 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 8011d00:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011d04:	bfd4      	ite	le
 8011d06:	38b4      	suble	r0, #180	; 0xb4
 8011d08:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011d0c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011d10:	4240      	negs	r0, r0
 8011d12:	4770      	bx	lr
 8011d14:	0802bd7a 	.word	0x0802bd7a

08011d18 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011d18:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011d1c:	bf2c      	ite	cs
 8011d1e:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011d22:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011d26:	2300      	movs	r3, #0
 8011d28:	1899      	adds	r1, r3, r2
 8011d2a:	4288      	cmp	r0, r1
 8011d2c:	bf24      	itt	cs
 8011d2e:	1853      	addcs	r3, r2, r1
 8011d30:	1a40      	subcs	r0, r0, r1
 8011d32:	0892      	lsrs	r2, r2, #2
 8011d34:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011d38:	d1f6      	bne.n	8011d28 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011d3a:	4618      	mov	r0, r3
 8011d3c:	4770      	bx	lr

08011d3e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011d3e:	b510      	push	{r4, lr}
 8011d40:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011d44:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011d48:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011d4c:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011d50:	13a4      	asrs	r4, r4, #14
 8011d52:	139b      	asrs	r3, r3, #14
 8011d54:	429c      	cmp	r4, r3
 8011d56:	bfb8      	it	lt
 8011d58:	461c      	movlt	r4, r3
 8011d5a:	2c01      	cmp	r4, #1
 8011d5c:	dd07      	ble.n	8011d6e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011d5e:	fb91 f1f4 	sdiv	r1, r1, r4
 8011d62:	fb90 f0f4 	sdiv	r0, r0, r4
 8011d66:	f7ff ffea 	bl	8011d3e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011d6a:	4360      	muls	r0, r4
 8011d6c:	bd10      	pop	{r4, pc}
 8011d6e:	4340      	muls	r0, r0
 8011d70:	fb01 0001 	mla	r0, r1, r1, r0
 8011d74:	f7ff ffd0 	bl	8011d18 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011d78:	e7f8      	b.n	8011d6c <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

08011d7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011d7c:	2800      	cmp	r0, #0
 8011d7e:	b508      	push	{r3, lr}
 8011d80:	da05      	bge.n	8011d8e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011d82:	4240      	negs	r0, r0
 8011d84:	f7ff fffa 	bl	8011d7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011d88:	4240      	negs	r0, r0
 8011d8a:	b240      	sxtb	r0, r0
 8011d8c:	bd08      	pop	{r3, pc}
 8011d8e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011d92:	dc11      	bgt.n	8011db8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011d94:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011d98:	dd09      	ble.n	8011dae <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011d9a:	4340      	muls	r0, r0
 8011d9c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011da0:	f7ff ffba 	bl	8011d18 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011da4:	f7ff ffea 	bl	8011d7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011da8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011dac:	e7ed      	b.n	8011d8a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011dae:	3003      	adds	r0, #3
 8011db0:	10c0      	asrs	r0, r0, #3
 8011db2:	4b02      	ldr	r3, [pc, #8]	; (8011dbc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011db4:	5618      	ldrsb	r0, [r3, r0]
 8011db6:	e7e9      	b.n	8011d8c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011db8:	2000      	movs	r0, #0
 8011dba:	e7e7      	b.n	8011d8c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011dbc:	0802bd1e 	.word	0x0802bd1e

08011dc0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011dc0:	1e03      	subs	r3, r0, #0
 8011dc2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011dc4:	460c      	mov	r4, r1
 8011dc6:	4615      	mov	r5, r2
 8011dc8:	db01      	blt.n	8011dce <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0xe>
 8011dca:	2900      	cmp	r1, #0
 8011dcc:	da06      	bge.n	8011ddc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1c>
 8011dce:	4b10      	ldr	r3, [pc, #64]	; (8011e10 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x50>)
 8011dd0:	4a10      	ldr	r2, [pc, #64]	; (8011e14 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x54>)
 8011dd2:	4811      	ldr	r0, [pc, #68]	; (8011e18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x58>)
 8011dd4:	f240 3139 	movw	r1, #825	; 0x339
 8011dd8:	f015 fb6a 	bl	80274b0 <__assert_func>
 8011ddc:	4299      	cmp	r1, r3
 8011dde:	dd07      	ble.n	8011df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x30>
 8011de0:	4619      	mov	r1, r3
 8011de2:	4620      	mov	r0, r4
 8011de4:	f7ff ffec 	bl	8011dc0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011de8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011dec:	b003      	add	sp, #12
 8011dee:	bd30      	pop	{r4, r5, pc}
 8011df0:	f7ff ffa5 	bl	8011d3e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011df4:	6028      	str	r0, [r5, #0]
 8011df6:	2800      	cmp	r0, #0
 8011df8:	d0f8      	beq.n	8011dec <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2c>
 8011dfa:	4602      	mov	r2, r0
 8011dfc:	ab01      	add	r3, sp, #4
 8011dfe:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011e02:	4620      	mov	r0, r4
 8011e04:	f005 fe10 	bl	8017a28 <_ZN8touchgfx6muldivElllRl>
 8011e08:	f7ff ffb8 	bl	8011d7c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011e0c:	e7ee      	b.n	8011dec <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2c>
 8011e0e:	bf00      	nop
 8011e10:	0802be30 	.word	0x0802be30
 8011e14:	0802bef8 	.word	0x0802bef8
 8011e18:	0802be41 	.word	0x0802be41

08011e1c <_ZN8touchgfx4LineC1Ev>:
 8011e1c:	b510      	push	{r4, lr}
 8011e1e:	4604      	mov	r4, r0
 8011e20:	f7ff fe10 	bl	8011a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011e24:	4b0c      	ldr	r3, [pc, #48]	; (8011e58 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8011e26:	6023      	str	r3, [r4, #0]
 8011e28:	2220      	movs	r2, #32
 8011e2a:	2300      	movs	r3, #0
 8011e2c:	6422      	str	r2, [r4, #64]	; 0x40
 8011e2e:	2212      	movs	r2, #18
 8011e30:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 8011e34:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 8011e38:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8011e3c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8011e40:	e9c4 3314 	strd	r3, r3, [r4, #80]	; 0x50
 8011e44:	e9c4 3316 	strd	r3, r3, [r4, #88]	; 0x58
 8011e48:	e9c4 3318 	strd	r3, r3, [r4, #96]	; 0x60
 8011e4c:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
 8011e50:	6722      	str	r2, [r4, #112]	; 0x70
 8011e52:	60a3      	str	r3, [r4, #8]
 8011e54:	4620      	mov	r0, r4
 8011e56:	bd10      	pop	{r4, pc}
 8011e58:	0802be80 	.word	0x0802be80

08011e5c <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e60:	6b87      	ldr	r7, [r0, #56]	; 0x38
 8011e62:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011e64:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8011e66:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8011e68:	1aff      	subs	r7, r7, r3
 8011e6a:	b087      	sub	sp, #28
 8011e6c:	4604      	mov	r4, r0
 8011e6e:	eba5 0502 	sub.w	r5, r5, r2
 8011e72:	f040 8093 	bne.w	8011f9c <_ZN8touchgfx4Line17updateCachedShapeEv+0x140>
 8011e76:	b955      	cbnz	r5, 8011e8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x32>
 8011e78:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 8011e7c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8011e80:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011e84:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011e88:	b007      	add	sp, #28
 8011e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e8e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011e92:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011e96:	4642      	mov	r2, r8
 8011e98:	4629      	mov	r1, r5
 8011e9a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011e9c:	f005 fde3 	bl	8017a66 <_ZN8touchgfx6muldivElll>
 8011ea0:	2502      	movs	r5, #2
 8011ea2:	4642      	mov	r2, r8
 8011ea4:	fb90 f6f5 	sdiv	r6, r0, r5
 8011ea8:	4639      	mov	r1, r7
 8011eaa:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011eac:	f005 fddb 	bl	8017a66 <_ZN8touchgfx6muldivElll>
 8011eb0:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
 8011eb4:	f894 b044 	ldrb.w	fp, [r4, #68]	; 0x44
 8011eb8:	fb90 f5f5 	sdiv	r5, r0, r5
 8011ebc:	f8d4 9038 	ldr.w	r9, [r4, #56]	; 0x38
 8011ec0:	f8d4 803c 	ldr.w	r8, [r4, #60]	; 0x3c
 8011ec4:	6b67      	ldr	r7, [r4, #52]	; 0x34
 8011ec6:	ebaa 0306 	sub.w	r3, sl, r6
 8011eca:	f1bb 0f00 	cmp.w	fp, #0
 8011ece:	f040 80af 	bne.w	8012030 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1d4>
 8011ed2:	64a3      	str	r3, [r4, #72]	; 0x48
 8011ed4:	19eb      	adds	r3, r5, r7
 8011ed6:	65a3      	str	r3, [r4, #88]	; 0x58
 8011ed8:	eba9 0306 	sub.w	r3, r9, r6
 8011edc:	64e3      	str	r3, [r4, #76]	; 0x4c
 8011ede:	eb05 0308 	add.w	r3, r5, r8
 8011ee2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8011ee4:	eb06 0309 	add.w	r3, r6, r9
 8011ee8:	6523      	str	r3, [r4, #80]	; 0x50
 8011eea:	eba8 0305 	sub.w	r3, r8, r5
 8011eee:	6623      	str	r3, [r4, #96]	; 0x60
 8011ef0:	eb06 030a 	add.w	r3, r6, sl
 8011ef4:	6563      	str	r3, [r4, #84]	; 0x54
 8011ef6:	1b7b      	subs	r3, r7, r5
 8011ef8:	f8d4 e048 	ldr.w	lr, [r4, #72]	; 0x48
 8011efc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011efe:	6663      	str	r3, [r4, #100]	; 0x64
 8011f00:	f8cd e010 	str.w	lr, [sp, #16]
 8011f04:	9005      	str	r0, [sp, #20]
 8011f06:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8011f0a:	f104 0c58 	add.w	ip, r4, #88	; 0x58
 8011f0e:	6813      	ldr	r3, [r2, #0]
 8011f10:	9904      	ldr	r1, [sp, #16]
 8011f12:	459e      	cmp	lr, r3
 8011f14:	bfa8      	it	ge
 8011f16:	469e      	movge	lr, r3
 8011f18:	428b      	cmp	r3, r1
 8011f1a:	bfc8      	it	gt
 8011f1c:	9304      	strgt	r3, [sp, #16]
 8011f1e:	6913      	ldr	r3, [r2, #16]
 8011f20:	9905      	ldr	r1, [sp, #20]
 8011f22:	4298      	cmp	r0, r3
 8011f24:	bfa8      	it	ge
 8011f26:	4618      	movge	r0, r3
 8011f28:	3204      	adds	r2, #4
 8011f2a:	428b      	cmp	r3, r1
 8011f2c:	bfc8      	it	gt
 8011f2e:	9305      	strgt	r3, [sp, #20]
 8011f30:	4594      	cmp	ip, r2
 8011f32:	d1ec      	bne.n	8011f0e <_ZN8touchgfx4Line17updateCachedShapeEv+0xb2>
 8011f34:	2320      	movs	r3, #32
 8011f36:	fb9e f1f3 	sdiv	r1, lr, r3
 8011f3a:	fb90 f3f3 	sdiv	r3, r0, r3
 8011f3e:	a804      	add	r0, sp, #16
 8011f40:	9103      	str	r1, [sp, #12]
 8011f42:	9302      	str	r3, [sp, #8]
 8011f44:	f7ff fdb9 	bl	8011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011f48:	9001      	str	r0, [sp, #4]
 8011f4a:	a805      	add	r0, sp, #20
 8011f4c:	f7ff fdb5 	bl	8011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011f50:	9903      	ldr	r1, [sp, #12]
 8011f52:	9b02      	ldr	r3, [sp, #8]
 8011f54:	9a01      	ldr	r2, [sp, #4]
 8011f56:	f8a4 1068 	strh.w	r1, [r4, #104]	; 0x68
 8011f5a:	1ac0      	subs	r0, r0, r3
 8011f5c:	1a51      	subs	r1, r2, r1
 8011f5e:	f1bb 0f01 	cmp.w	fp, #1
 8011f62:	f8a4 306a 	strh.w	r3, [r4, #106]	; 0x6a
 8011f66:	f8a4 106c 	strh.w	r1, [r4, #108]	; 0x6c
 8011f6a:	f8a4 006e 	strh.w	r0, [r4, #110]	; 0x6e
 8011f6e:	d18b      	bne.n	8011e88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2c>
 8011f70:	ebaa 0306 	sub.w	r3, sl, r6
 8011f74:	64a3      	str	r3, [r4, #72]	; 0x48
 8011f76:	19eb      	adds	r3, r5, r7
 8011f78:	65a3      	str	r3, [r4, #88]	; 0x58
 8011f7a:	eba9 0306 	sub.w	r3, r9, r6
 8011f7e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8011f80:	eb05 0308 	add.w	r3, r5, r8
 8011f84:	65e3      	str	r3, [r4, #92]	; 0x5c
 8011f86:	eb06 0309 	add.w	r3, r6, r9
 8011f8a:	6523      	str	r3, [r4, #80]	; 0x50
 8011f8c:	4456      	add	r6, sl
 8011f8e:	eba8 0305 	sub.w	r3, r8, r5
 8011f92:	1b7d      	subs	r5, r7, r5
 8011f94:	6623      	str	r3, [r4, #96]	; 0x60
 8011f96:	6566      	str	r6, [r4, #84]	; 0x54
 8011f98:	6665      	str	r5, [r4, #100]	; 0x64
 8011f9a:	e775      	b.n	8011e88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2c>
 8011f9c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011fa0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011fa4:	2d00      	cmp	r5, #0
 8011fa6:	f43f af76 	beq.w	8011e96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x3a>
 8011faa:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8011fae:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011fb2:	fb93 f2f8 	sdiv	r2, r3, r8
 8011fb6:	fb08 3312 	mls	r3, r8, r2, r3
 8011fba:	b353      	cbz	r3, 8012012 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b6>
 8011fbc:	fb98 f2f3 	sdiv	r2, r8, r3
 8011fc0:	fb03 8812 	mls	r8, r3, r2, r8
 8011fc4:	f1b8 0f00 	cmp.w	r8, #0
 8011fc8:	d1f3      	bne.n	8011fb2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011fca:	2b01      	cmp	r3, #1
 8011fcc:	bf1c      	itt	ne
 8011fce:	fb95 f5f3 	sdivne	r5, r5, r3
 8011fd2:	fb97 f7f3 	sdivne	r7, r7, r3
 8011fd6:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011fda:	f24b 5104 	movw	r1, #46340	; 0xb504
 8011fde:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011fe2:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011fe6:	428b      	cmp	r3, r1
 8011fe8:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8011fec:	4608      	mov	r0, r1
 8011fee:	dd01      	ble.n	8011ff4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x198>
 8011ff0:	428a      	cmp	r2, r1
 8011ff2:	dc10      	bgt.n	8012016 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1ba>
 8011ff4:	fb90 f3f3 	sdiv	r3, r0, r3
 8011ff8:	fb90 f2f2 	sdiv	r2, r0, r2
 8011ffc:	4293      	cmp	r3, r2
 8011ffe:	bfa8      	it	ge
 8012000:	4613      	movge	r3, r2
 8012002:	435f      	muls	r7, r3
 8012004:	435d      	muls	r5, r3
 8012006:	4629      	mov	r1, r5
 8012008:	4638      	mov	r0, r7
 801200a:	f7ff fe98 	bl	8011d3e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801200e:	4680      	mov	r8, r0
 8012010:	e741      	b.n	8011e96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x3a>
 8012012:	4643      	mov	r3, r8
 8012014:	e7d9      	b.n	8011fca <_ZN8touchgfx4Line17updateCachedShapeEv+0x16e>
 8012016:	fb93 f3f1 	sdiv	r3, r3, r1
 801201a:	fb92 f2f1 	sdiv	r2, r2, r1
 801201e:	4293      	cmp	r3, r2
 8012020:	bfcc      	ite	gt
 8012022:	3301      	addgt	r3, #1
 8012024:	1c53      	addle	r3, r2, #1
 8012026:	fb97 f7f3 	sdiv	r7, r7, r3
 801202a:	fb95 f5f3 	sdiv	r5, r5, r3
 801202e:	e7ea      	b.n	8012006 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1aa>
 8012030:	1b5b      	subs	r3, r3, r5
 8012032:	64a3      	str	r3, [r4, #72]	; 0x48
 8012034:	19eb      	adds	r3, r5, r7
 8012036:	1b9b      	subs	r3, r3, r6
 8012038:	65a3      	str	r3, [r4, #88]	; 0x58
 801203a:	eba9 0306 	sub.w	r3, r9, r6
 801203e:	442b      	add	r3, r5
 8012040:	64e3      	str	r3, [r4, #76]	; 0x4c
 8012042:	eb05 0308 	add.w	r3, r5, r8
 8012046:	4433      	add	r3, r6
 8012048:	65e3      	str	r3, [r4, #92]	; 0x5c
 801204a:	eb06 0309 	add.w	r3, r6, r9
 801204e:	442b      	add	r3, r5
 8012050:	6523      	str	r3, [r4, #80]	; 0x50
 8012052:	eba8 0305 	sub.w	r3, r8, r5
 8012056:	4433      	add	r3, r6
 8012058:	6623      	str	r3, [r4, #96]	; 0x60
 801205a:	eb06 030a 	add.w	r3, r6, sl
 801205e:	1b5b      	subs	r3, r3, r5
 8012060:	6563      	str	r3, [r4, #84]	; 0x54
 8012062:	1b7b      	subs	r3, r7, r5
 8012064:	1b9b      	subs	r3, r3, r6
 8012066:	e747      	b.n	8011ef8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>

08012068 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012068:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801206a:	428b      	cmp	r3, r1
 801206c:	d102      	bne.n	8012074 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 801206e:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012070:	4293      	cmp	r3, r2
 8012072:	d003      	beq.n	801207c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012074:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
 8012078:	f7ff bef0 	b.w	8011e5c <_ZN8touchgfx4Line17updateCachedShapeEv>
 801207c:	4770      	bx	lr

0801207e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 801207e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012080:	428b      	cmp	r3, r1
 8012082:	d102      	bne.n	801208a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012084:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012086:	4293      	cmp	r3, r2
 8012088:	d003      	beq.n	8012092 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801208a:	e9c0 120e 	strd	r1, r2, [r0, #56]	; 0x38
 801208e:	f7ff bee5 	b.w	8011e5c <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012092:	4770      	bx	lr

08012094 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012094:	f880 1044 	strb.w	r1, [r0, #68]	; 0x44
 8012098:	f7ff bee0 	b.w	8011e5c <_ZN8touchgfx4Line17updateCachedShapeEv>

0801209c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 801209c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120a0:	b0b2      	sub	sp, #200	; 0xc8
 80120a2:	4604      	mov	r4, r0
 80120a4:	460a      	mov	r2, r1
 80120a6:	4601      	mov	r1, r0
 80120a8:	a803      	add	r0, sp, #12
 80120aa:	f013 fdfb 	bl	8025ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80120ae:	2300      	movs	r3, #0
 80120b0:	9300      	str	r3, [sp, #0]
 80120b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80120b6:	2b01      	cmp	r3, #1
 80120b8:	d17c      	bne.n	80121b4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80120ba:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80120bc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80120be:	6da1      	ldr	r1, [r4, #88]	; 0x58
 80120c0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80120c2:	1ac0      	subs	r0, r0, r3
 80120c4:	eba1 0102 	sub.w	r1, r1, r2
 80120c8:	d437      	bmi.n	801213a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80120ca:	2900      	cmp	r1, #0
 80120cc:	466a      	mov	r2, sp
 80120ce:	db2e      	blt.n	801212e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80120d0:	f7ff fe76 	bl	8011dc0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80120d4:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80120d8:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80120da:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80120dc:	a803      	add	r0, sp, #12
 80120de:	f013 ffac 	bl	802603a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80120e2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80120e4:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80120e6:	a803      	add	r0, sp, #12
 80120e8:	f013 ff36 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80120ec:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80120ee:	2db3      	cmp	r5, #179	; 0xb3
 80120f0:	dc33      	bgt.n	801215a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80120f2:	eba6 0805 	sub.w	r8, r6, r5
 80120f6:	4640      	mov	r0, r8
 80120f8:	f7ff fdec 	bl	8011cd4 <_ZN8touchgfx7CWRUtil4sineEi>
 80120fc:	a901      	add	r1, sp, #4
 80120fe:	9001      	str	r0, [sp, #4]
 8012100:	4668      	mov	r0, sp
 8012102:	f7ff fccf 	bl	8011aa4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012106:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012108:	1847      	adds	r7, r0, r1
 801210a:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 801210e:	f7ff fde1 	bl	8011cd4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012112:	a902      	add	r1, sp, #8
 8012114:	9002      	str	r0, [sp, #8]
 8012116:	4668      	mov	r0, sp
 8012118:	f7ff fcc4 	bl	8011aa4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801211c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 801211e:	4639      	mov	r1, r7
 8012120:	1a12      	subs	r2, r2, r0
 8012122:	a803      	add	r0, sp, #12
 8012124:	f013 ff18 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012128:	6f23      	ldr	r3, [r4, #112]	; 0x70
 801212a:	441d      	add	r5, r3
 801212c:	e7df      	b.n	80120ee <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 801212e:	4249      	negs	r1, r1
 8012130:	f7ff fe46 	bl	8011dc0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012134:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012138:	e7ce      	b.n	80120d8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801213a:	2900      	cmp	r1, #0
 801213c:	f1c0 0000 	rsb	r0, r0, #0
 8012140:	466a      	mov	r2, sp
 8012142:	db04      	blt.n	801214e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012144:	f7ff fe3c 	bl	8011dc0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012148:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 801214c:	e7c4      	b.n	80120d8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801214e:	4249      	negs	r1, r1
 8012150:	f7ff fe36 	bl	8011dc0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012154:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012158:	e7be      	b.n	80120d8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801215a:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801215c:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801215e:	a803      	add	r0, sp, #12
 8012160:	f013 fefa 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012164:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8012166:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012168:	a803      	add	r0, sp, #12
 801216a:	f013 fef5 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801216e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8012170:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012174:	2d00      	cmp	r5, #0
 8012176:	dd31      	ble.n	80121dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012178:	eb05 0806 	add.w	r8, r5, r6
 801217c:	4640      	mov	r0, r8
 801217e:	f7ff fda9 	bl	8011cd4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012182:	a901      	add	r1, sp, #4
 8012184:	9001      	str	r0, [sp, #4]
 8012186:	4668      	mov	r0, sp
 8012188:	f7ff fc8c 	bl	8011aa4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801218c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801218e:	1847      	adds	r7, r0, r1
 8012190:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012194:	f7ff fd9e 	bl	8011cd4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012198:	a902      	add	r1, sp, #8
 801219a:	9002      	str	r0, [sp, #8]
 801219c:	4668      	mov	r0, sp
 801219e:	f7ff fc81 	bl	8011aa4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80121a2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80121a4:	4639      	mov	r1, r7
 80121a6:	1a12      	subs	r2, r2, r0
 80121a8:	a803      	add	r0, sp, #12
 80121aa:	f013 fed5 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121ae:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80121b0:	1aed      	subs	r5, r5, r3
 80121b2:	e7df      	b.n	8012174 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80121b4:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80121b6:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80121b8:	a803      	add	r0, sp, #12
 80121ba:	f013 ff3e 	bl	802603a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80121be:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80121c0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80121c2:	a803      	add	r0, sp, #12
 80121c4:	f013 fec8 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121c8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80121ca:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80121cc:	a803      	add	r0, sp, #12
 80121ce:	f013 fec3 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121d2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80121d4:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80121d6:	a803      	add	r0, sp, #12
 80121d8:	f013 febe 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121dc:	21ff      	movs	r1, #255	; 0xff
 80121de:	a803      	add	r0, sp, #12
 80121e0:	f014 f82f 	bl	8026242 <_ZN8touchgfx6Canvas6renderEh>
 80121e4:	4604      	mov	r4, r0
 80121e6:	a803      	add	r0, sp, #12
 80121e8:	f014 f86a 	bl	80262c0 <_ZN8touchgfx6CanvasD1Ev>
 80121ec:	4620      	mov	r0, r4
 80121ee:	b032      	add	sp, #200	; 0xc8
 80121f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080121f4 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 80121f4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80121f6:	4770      	bx	lr

080121f8 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 80121f8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80121fa:	4770      	bx	lr

080121fc <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 80121fc:	4770      	bx	lr

080121fe <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 80121fe:	4608      	mov	r0, r1
 8012200:	4770      	bx	lr

08012202 <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 8012202:	4608      	mov	r0, r1
 8012204:	4770      	bx	lr

08012206 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 8012206:	b530      	push	{r4, r5, lr}
 8012208:	460d      	mov	r5, r1
 801220a:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801220c:	8949      	ldrh	r1, [r1, #10]
 801220e:	1ac9      	subs	r1, r1, r3
 8012210:	6803      	ldr	r3, [r0, #0]
 8012212:	b085      	sub	sp, #20
 8012214:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8012218:	f10d 0206 	add.w	r2, sp, #6
 801221c:	b209      	sxth	r1, r1
 801221e:	4604      	mov	r4, r0
 8012220:	4798      	blx	r3
 8012222:	b1a0      	cbz	r0, 801224e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8012224:	792b      	ldrb	r3, [r5, #4]
 8012226:	b993      	cbnz	r3, 801224e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8012228:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 801222c:	b178      	cbz	r0, 801224e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 801222e:	6803      	ldr	r3, [r0, #0]
 8012230:	68db      	ldr	r3, [r3, #12]
 8012232:	4798      	blx	r3
 8012234:	b158      	cbz	r0, 801224e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8012236:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801223a:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 801223e:	f8ad 3008 	strh.w	r3, [sp, #8]
 8012242:	9503      	str	r5, [sp, #12]
 8012244:	6803      	ldr	r3, [r0, #0]
 8012246:	aa02      	add	r2, sp, #8
 8012248:	689b      	ldr	r3, [r3, #8]
 801224a:	4621      	mov	r1, r4
 801224c:	4798      	blx	r3
 801224e:	b005      	add	sp, #20
 8012250:	bd30      	pop	{r4, r5, pc}
	...

08012254 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 8012254:	b508      	push	{r3, lr}
 8012256:	b929      	cbnz	r1, 8012264 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x10>
 8012258:	4b03      	ldr	r3, [pc, #12]	; (8012268 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x14>)
 801225a:	4a04      	ldr	r2, [pc, #16]	; (801226c <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x18>)
 801225c:	4804      	ldr	r0, [pc, #16]	; (8012270 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x1c>)
 801225e:	2171      	movs	r1, #113	; 0x71
 8012260:	f015 f926 	bl	80274b0 <__assert_func>
 8012264:	6301      	str	r1, [r0, #48]	; 0x30
 8012266:	bd08      	pop	{r3, pc}
 8012268:	0802bfac 	.word	0x0802bfac
 801226c:	0802c31e 	.word	0x0802c31e
 8012270:	08029f78 	.word	0x08029f78

08012274 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 8012274:	b508      	push	{r3, lr}
 8012276:	b929      	cbnz	r1, 8012284 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x10>
 8012278:	4b03      	ldr	r3, [pc, #12]	; (8012288 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x14>)
 801227a:	4a04      	ldr	r2, [pc, #16]	; (801228c <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x18>)
 801227c:	4804      	ldr	r0, [pc, #16]	; (8012290 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x1c>)
 801227e:	2193      	movs	r1, #147	; 0x93
 8012280:	f015 f916 	bl	80274b0 <__assert_func>
 8012284:	6341      	str	r1, [r0, #52]	; 0x34
 8012286:	bd08      	pop	{r3, pc}
 8012288:	0802bfac 	.word	0x0802bfac
 801228c:	0802c35d 	.word	0x0802c35d
 8012290:	08029f78 	.word	0x08029f78

08012294 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 8012294:	2300      	movs	r3, #0
 8012296:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 801229a:	3038      	adds	r0, #56	; 0x38
 801229c:	f005 b9f9 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>

080122a0 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 80122a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122a4:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80122a8:	4605      	mov	r5, r0
 80122aa:	4688      	mov	r8, r1
 80122ac:	4617      	mov	r7, r2
 80122ae:	2b00      	cmp	r3, #0
 80122b0:	d040      	beq.n	8012334 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x94>
 80122b2:	6803      	ldr	r3, [r0, #0]
 80122b4:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 80122b8:	4798      	blx	r3
 80122ba:	682b      	ldr	r3, [r5, #0]
 80122bc:	4604      	mov	r4, r0
 80122be:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80122c2:	4628      	mov	r0, r5
 80122c4:	4798      	blx	r3
 80122c6:	4284      	cmp	r4, r0
 80122c8:	bfc8      	it	gt
 80122ca:	b223      	sxthgt	r3, r4
 80122cc:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 80122d0:	bfc8      	it	gt
 80122d2:	4604      	movgt	r4, r0
 80122d4:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80122d8:	bfc8      	it	gt
 80122da:	4618      	movgt	r0, r3
 80122dc:	42b4      	cmp	r4, r6
 80122de:	da29      	bge.n	8012334 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x94>
 80122e0:	42b0      	cmp	r0, r6
 80122e2:	bfa8      	it	ge
 80122e4:	4630      	movge	r0, r6
 80122e6:	2800      	cmp	r0, #0
 80122e8:	db24      	blt.n	8012334 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x94>
 80122ea:	f1b8 0f00 	cmp.w	r8, #0
 80122ee:	d11e      	bne.n	801232e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8e>
 80122f0:	f8d5 3144 	ldr.w	r3, [r5, #324]	; 0x144
 80122f4:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80122f8:	4619      	mov	r1, r3
 80122fa:	b224      	sxth	r4, r4
 80122fc:	42a0      	cmp	r0, r4
 80122fe:	dd0b      	ble.n	8012318 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x78>
 8012300:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 8012304:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 8012308:	4291      	cmp	r1, r2
 801230a:	bfa8      	it	ge
 801230c:	4611      	movge	r1, r2
 801230e:	4293      	cmp	r3, r2
 8012310:	bfb8      	it	lt
 8012312:	4613      	movlt	r3, r2
 8012314:	3401      	adds	r4, #1
 8012316:	e7f0      	b.n	80122fa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 8012318:	1bc9      	subs	r1, r1, r7
 801231a:	18fa      	adds	r2, r7, r3
 801231c:	4291      	cmp	r1, r2
 801231e:	d009      	beq.n	8012334 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x94>
 8012320:	682b      	ldr	r3, [r5, #0]
 8012322:	4628      	mov	r0, r5
 8012324:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012328:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801232c:	4718      	bx	r3
 801232e:	427b      	negs	r3, r7
 8012330:	4639      	mov	r1, r7
 8012332:	e7e2      	b.n	80122fa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 8012334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012338 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 8012338:	4291      	cmp	r1, r2
 801233a:	b510      	push	{r4, lr}
 801233c:	4604      	mov	r4, r0
 801233e:	d106      	bne.n	801234e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x16>
 8012340:	4b12      	ldr	r3, [pc, #72]	; (801238c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x54>)
 8012342:	4a13      	ldr	r2, [pc, #76]	; (8012390 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x58>)
 8012344:	4813      	ldr	r0, [pc, #76]	; (8012394 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x5c>)
 8012346:	f240 1111 	movw	r1, #273	; 0x111
 801234a:	f015 f8b1 	bl	80274b0 <__assert_func>
 801234e:	bfc2      	ittt	gt
 8012350:	460b      	movgt	r3, r1
 8012352:	4611      	movgt	r1, r2
 8012354:	461a      	movgt	r2, r3
 8012356:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 801235a:	428b      	cmp	r3, r1
 801235c:	d103      	bne.n	8012366 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x2e>
 801235e:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8012362:	4293      	cmp	r3, r2
 8012364:	d011      	beq.n	801238a <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x52>
 8012366:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 801236a:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 801236e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8012372:	f005 f98e 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012376:	f104 0038 	add.w	r0, r4, #56	; 0x38
 801237a:	f005 f98a 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 801237e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8012382:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012386:	f005 b984 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 801238a:	bd10      	pop	{r4, pc}
 801238c:	0802bf63 	.word	0x0802bf63
 8012390:	0802c28c 	.word	0x0802c28c
 8012394:	0802bf6e 	.word	0x0802bf6e

08012398 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 8012398:	4291      	cmp	r1, r2
 801239a:	b510      	push	{r4, lr}
 801239c:	4604      	mov	r4, r0
 801239e:	d106      	bne.n	80123ae <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x16>
 80123a0:	4b12      	ldr	r3, [pc, #72]	; (80123ec <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x54>)
 80123a2:	4a13      	ldr	r2, [pc, #76]	; (80123f0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x58>)
 80123a4:	4813      	ldr	r0, [pc, #76]	; (80123f4 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x5c>)
 80123a6:	f44f 7192 	mov.w	r1, #292	; 0x124
 80123aa:	f015 f881 	bl	80274b0 <__assert_func>
 80123ae:	bfc2      	ittt	gt
 80123b0:	460b      	movgt	r3, r1
 80123b2:	4611      	movgt	r1, r2
 80123b4:	461a      	movgt	r2, r3
 80123b6:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 80123ba:	428b      	cmp	r3, r1
 80123bc:	d103      	bne.n	80123c6 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x2e>
 80123be:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 80123c2:	4293      	cmp	r3, r2
 80123c4:	d011      	beq.n	80123ea <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x52>
 80123c6:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 80123ca:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 80123ce:	f104 0064 	add.w	r0, r4, #100	; 0x64
 80123d2:	f005 f95e 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80123d6:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80123da:	f005 f95a 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80123de:	f104 0090 	add.w	r0, r4, #144	; 0x90
 80123e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123e6:	f005 b954 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80123ea:	bd10      	pop	{r4, pc}
 80123ec:	0802bf63 	.word	0x0802bf63
 80123f0:	0802c2d5 	.word	0x0802c2d5
 80123f4:	0802bf6e 	.word	0x0802bf6e

080123f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 80123f8:	b530      	push	{r4, r5, lr}
 80123fa:	790b      	ldrb	r3, [r1, #4]
 80123fc:	2b02      	cmp	r3, #2
 80123fe:	b085      	sub	sp, #20
 8012400:	4604      	mov	r4, r0
 8012402:	460d      	mov	r5, r1
 8012404:	d020      	beq.n	8012448 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8012406:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012408:	88c9      	ldrh	r1, [r1, #6]
 801240a:	1ac9      	subs	r1, r1, r3
 801240c:	6803      	ldr	r3, [r0, #0]
 801240e:	f10d 0206 	add.w	r2, sp, #6
 8012412:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8012416:	b209      	sxth	r1, r1
 8012418:	4798      	blx	r3
 801241a:	b1a8      	cbz	r0, 8012448 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801241c:	792b      	ldrb	r3, [r5, #4]
 801241e:	2b01      	cmp	r3, #1
 8012420:	d812      	bhi.n	8012448 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8012422:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8012426:	b178      	cbz	r0, 8012448 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8012428:	6803      	ldr	r3, [r0, #0]
 801242a:	68db      	ldr	r3, [r3, #12]
 801242c:	4798      	blx	r3
 801242e:	b158      	cbz	r0, 8012448 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8012430:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8012434:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8012438:	f8ad 3008 	strh.w	r3, [sp, #8]
 801243c:	9503      	str	r5, [sp, #12]
 801243e:	6803      	ldr	r3, [r0, #0]
 8012440:	aa02      	add	r2, sp, #8
 8012442:	689b      	ldr	r3, [r3, #8]
 8012444:	4621      	mov	r1, r4
 8012446:	4798      	blx	r3
 8012448:	b005      	add	sp, #20
 801244a:	bd30      	pop	{r4, r5, pc}

0801244c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 801244c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012450:	4604      	mov	r4, r0
 8012452:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8012456:	9e06      	ldr	r6, [sp, #24]
 8012458:	4690      	mov	r8, r2
 801245a:	461f      	mov	r7, r3
 801245c:	b928      	cbnz	r0, 801246a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 801245e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012462:	8033      	strh	r3, [r6, #0]
 8012464:	803b      	strh	r3, [r7, #0]
 8012466:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801246a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 801246e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 8012472:	1883      	adds	r3, r0, r2
 8012474:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8012478:	1ad2      	subs	r2, r2, r3
 801247a:	b212      	sxth	r2, r2
 801247c:	2a01      	cmp	r2, #1
 801247e:	dc07      	bgt.n	8012490 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 8012480:	2300      	movs	r3, #0
 8012482:	803b      	strh	r3, [r7, #0]
 8012484:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 8012488:	3b01      	subs	r3, #1
 801248a:	8033      	strh	r3, [r6, #0]
 801248c:	2001      	movs	r0, #1
 801248e:	e7ea      	b.n	8012466 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8012490:	1a08      	subs	r0, r1, r0
 8012492:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8012496:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 801249a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 801249c:	1a5b      	subs	r3, r3, r1
 801249e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80124a2:	d45b      	bmi.n	801255c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 80124a4:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80124a8:	fb93 f1f5 	sdiv	r1, r3, r5
 80124ac:	2302      	movs	r3, #2
 80124ae:	fb91 f1f3 	sdiv	r1, r1, r3
 80124b2:	3a01      	subs	r2, #1
 80124b4:	f005 fad7 	bl	8017a66 <_ZN8touchgfx6muldivElll>
 80124b8:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 80124bc:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 80124c0:	2900      	cmp	r1, #0
 80124c2:	db57      	blt.n	8012574 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 80124c4:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 80124c8:	2502      	movs	r5, #2
 80124ca:	fb93 f3fc 	sdiv	r3, r3, ip
 80124ce:	fb93 f3f5 	sdiv	r3, r3, r5
 80124d2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 80124d6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 80124da:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 80124de:	1a52      	subs	r2, r2, r1
 80124e0:	eba8 0003 	sub.w	r0, r8, r3
 80124e4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80124e8:	d450      	bmi.n	801258c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 80124ea:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 80124ee:	fb92 f1fc 	sdiv	r1, r2, ip
 80124f2:	2202      	movs	r2, #2
 80124f4:	fb91 f1f2 	sdiv	r1, r1, r2
 80124f8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 80124fc:	4413      	add	r3, r2
 80124fe:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8012502:	1ad2      	subs	r2, r2, r3
 8012504:	b212      	sxth	r2, r2
 8012506:	3a01      	subs	r2, #1
 8012508:	f005 faad 	bl	8017a66 <_ZN8touchgfx6muldivElll>
 801250c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8012510:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012512:	2b00      	cmp	r3, #0
 8012514:	db46      	blt.n	80125a4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 8012516:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801251a:	fb93 f3f2 	sdiv	r3, r3, r2
 801251e:	2202      	movs	r2, #2
 8012520:	fb93 f3f2 	sdiv	r3, r3, r2
 8012524:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8012528:	429d      	cmp	r5, r3
 801252a:	bfde      	ittt	le
 801252c:	461a      	movle	r2, r3
 801252e:	462b      	movle	r3, r5
 8012530:	4615      	movle	r5, r2
 8012532:	2d00      	cmp	r5, #0
 8012534:	bfa4      	itt	ge
 8012536:	351f      	addge	r5, #31
 8012538:	116d      	asrge	r5, r5, #5
 801253a:	f04f 0020 	mov.w	r0, #32
 801253e:	bfb8      	it	lt
 8012540:	fb95 f5f0 	sdivlt	r5, r5, r0
 8012544:	b22d      	sxth	r5, r5
 8012546:	2d00      	cmp	r5, #0
 8012548:	b21b      	sxth	r3, r3
 801254a:	fb93 f3f0 	sdiv	r3, r3, r0
 801254e:	803b      	strh	r3, [r7, #0]
 8012550:	8035      	strh	r5, [r6, #0]
 8012552:	da33      	bge.n	80125bc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 8012554:	2000      	movs	r0, #0
 8012556:	8030      	strh	r0, [r6, #0]
 8012558:	8038      	strh	r0, [r7, #0]
 801255a:	e784      	b.n	8012466 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 801255c:	f06f 0101 	mvn.w	r1, #1
 8012560:	fb01 5303 	mla	r3, r1, r3, r5
 8012564:	1e59      	subs	r1, r3, #1
 8012566:	2302      	movs	r3, #2
 8012568:	fb91 f1f5 	sdiv	r1, r1, r5
 801256c:	fb91 f1f3 	sdiv	r1, r1, r3
 8012570:	4249      	negs	r1, r1
 8012572:	e79e      	b.n	80124b2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 8012574:	f06f 0301 	mvn.w	r3, #1
 8012578:	fb03 c301 	mla	r3, r3, r1, ip
 801257c:	3b01      	subs	r3, #1
 801257e:	2502      	movs	r5, #2
 8012580:	fb93 f3fc 	sdiv	r3, r3, ip
 8012584:	fb93 f3f5 	sdiv	r3, r3, r5
 8012588:	425b      	negs	r3, r3
 801258a:	e7a2      	b.n	80124d2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 801258c:	f06f 0101 	mvn.w	r1, #1
 8012590:	fb01 c202 	mla	r2, r1, r2, ip
 8012594:	1e51      	subs	r1, r2, #1
 8012596:	2202      	movs	r2, #2
 8012598:	fb91 f1fc 	sdiv	r1, r1, ip
 801259c:	fb91 f1f2 	sdiv	r1, r1, r2
 80125a0:	4249      	negs	r1, r1
 80125a2:	e7a9      	b.n	80124f8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 80125a4:	f06f 0101 	mvn.w	r1, #1
 80125a8:	fb01 2303 	mla	r3, r1, r3, r2
 80125ac:	3b01      	subs	r3, #1
 80125ae:	fb93 f3f2 	sdiv	r3, r3, r2
 80125b2:	2202      	movs	r2, #2
 80125b4:	fb93 f3f2 	sdiv	r3, r3, r2
 80125b8:	425b      	negs	r3, r3
 80125ba:	e7b3      	b.n	8012524 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 80125bc:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80125c0:	f9b7 2000 	ldrsh.w	r2, [r7]
 80125c4:	4293      	cmp	r3, r2
 80125c6:	dc05      	bgt.n	80125d4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 80125c8:	3b01      	subs	r3, #1
 80125ca:	b21b      	sxth	r3, r3
 80125cc:	8033      	strh	r3, [r6, #0]
 80125ce:	2000      	movs	r0, #0
 80125d0:	803b      	strh	r3, [r7, #0]
 80125d2:	e748      	b.n	8012466 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 80125d4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80125d8:	803a      	strh	r2, [r7, #0]
 80125da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80125de:	f9b6 2000 	ldrsh.w	r2, [r6]
 80125e2:	4293      	cmp	r3, r2
 80125e4:	bfdc      	itt	le
 80125e6:	f103 33ff 	addle.w	r3, r3, #4294967295
 80125ea:	b21a      	sxthle	r2, r3
 80125ec:	8032      	strh	r2, [r6, #0]
 80125ee:	e74d      	b.n	801248c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

080125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 80125f0:	6800      	ldr	r0, [r0, #0]
 80125f2:	2800      	cmp	r0, #0
 80125f4:	bfbd      	ittte	lt
 80125f6:	380f      	sublt	r0, #15
 80125f8:	2320      	movlt	r3, #32
 80125fa:	fb90 f0f3 	sdivlt	r0, r0, r3
 80125fe:	3010      	addge	r0, #16
 8012600:	bfa8      	it	ge
 8012602:	1140      	asrge	r0, r0, #5
 8012604:	4770      	bx	lr

08012606 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8012606:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801260a:	4605      	mov	r5, r0
 801260c:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8012610:	4688      	mov	r8, r1
 8012612:	4691      	mov	r9, r2
 8012614:	469a      	mov	sl, r3
 8012616:	b360      	cbz	r0, 8012672 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 8012618:	2700      	movs	r7, #0
 801261a:	f04f 3bff 	mov.w	fp, #4294967295
 801261e:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 8012622:	b23e      	sxth	r6, r7
 8012624:	42b3      	cmp	r3, r6
 8012626:	dd23      	ble.n	8012670 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 8012628:	682b      	ldr	r3, [r5, #0]
 801262a:	4631      	mov	r1, r6
 801262c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8012630:	4628      	mov	r0, r5
 8012632:	4798      	blx	r3
 8012634:	9001      	str	r0, [sp, #4]
 8012636:	a801      	add	r0, sp, #4
 8012638:	f7ff ffda 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801263c:	682b      	ldr	r3, [r5, #0]
 801263e:	eba0 0008 	sub.w	r0, r0, r8
 8012642:	b204      	sxth	r4, r0
 8012644:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8012648:	4631      	mov	r1, r6
 801264a:	4628      	mov	r0, r5
 801264c:	4798      	blx	r3
 801264e:	9001      	str	r0, [sp, #4]
 8012650:	a801      	add	r0, sp, #4
 8012652:	f7ff ffcd 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012656:	eba0 0009 	sub.w	r0, r0, r9
 801265a:	fb10 f000 	smulbb	r0, r0, r0
 801265e:	fb04 0404 	mla	r4, r4, r4, r0
 8012662:	455c      	cmp	r4, fp
 8012664:	bf3c      	itt	cc
 8012666:	f8aa 6000 	strhcc.w	r6, [sl]
 801266a:	46a3      	movcc	fp, r4
 801266c:	3701      	adds	r7, #1
 801266e:	e7d6      	b.n	801261e <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 8012670:	2001      	movs	r0, #1
 8012672:	b003      	add	sp, #12
 8012674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012678 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 8012678:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801267c:	4604      	mov	r4, r0
 801267e:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8012682:	4688      	mov	r8, r1
 8012684:	4691      	mov	r9, r2
 8012686:	b1f8      	cbz	r0, 80126c8 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 8012688:	2500      	movs	r5, #0
 801268a:	f04f 37ff 	mov.w	r7, #4294967295
 801268e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8012692:	b22e      	sxth	r6, r5
 8012694:	42b3      	cmp	r3, r6
 8012696:	dd16      	ble.n	80126c6 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 8012698:	6823      	ldr	r3, [r4, #0]
 801269a:	4631      	mov	r1, r6
 801269c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80126a0:	4620      	mov	r0, r4
 80126a2:	4798      	blx	r3
 80126a4:	9001      	str	r0, [sp, #4]
 80126a6:	a801      	add	r0, sp, #4
 80126a8:	f7ff ffa2 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80126ac:	b200      	sxth	r0, r0
 80126ae:	eba0 0008 	sub.w	r0, r0, r8
 80126b2:	2800      	cmp	r0, #0
 80126b4:	bfb8      	it	lt
 80126b6:	4240      	neglt	r0, r0
 80126b8:	42b8      	cmp	r0, r7
 80126ba:	bf3c      	itt	cc
 80126bc:	f8a9 6000 	strhcc.w	r6, [r9]
 80126c0:	4607      	movcc	r7, r0
 80126c2:	3501      	adds	r5, #1
 80126c4:	e7e3      	b.n	801268e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 80126c6:	2001      	movs	r0, #1
 80126c8:	b003      	add	sp, #12
 80126ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080126ce <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 80126ce:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 80126d2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80126d6:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 80126da:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 80126de:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 80126e2:	4770      	bx	lr

080126e4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 80126e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80126e6:	4604      	mov	r4, r0
 80126e8:	3038      	adds	r0, #56	; 0x38
 80126ea:	460d      	mov	r5, r1
 80126ec:	f7fc fece 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80126f0:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 80126f4:	9200      	str	r2, [sp, #0]
 80126f6:	2200      	movs	r2, #0
 80126f8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80126fc:	4611      	mov	r1, r2
 80126fe:	4628      	mov	r0, r5
 8012700:	f7f0 f83c 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8012704:	b003      	add	sp, #12
 8012706:	bd30      	pop	{r4, r5, pc}

08012708 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 8012708:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801270a:	4604      	mov	r4, r0
 801270c:	3064      	adds	r0, #100	; 0x64
 801270e:	460d      	mov	r5, r1
 8012710:	f7fc febc 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012714:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8012718:	9200      	str	r2, [sp, #0]
 801271a:	2200      	movs	r2, #0
 801271c:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8012720:	4611      	mov	r1, r2
 8012722:	4628      	mov	r0, r5
 8012724:	f7f0 f82a 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8012728:	b003      	add	sp, #12
 801272a:	bd30      	pop	{r4, r5, pc}

0801272c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 801272c:	b538      	push	{r3, r4, r5, lr}
 801272e:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8012732:	428b      	cmp	r3, r1
 8012734:	460d      	mov	r5, r1
 8012736:	dd08      	ble.n	801274a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8012738:	6e04      	ldr	r4, [r0, #96]	; 0x60
 801273a:	b134      	cbz	r4, 801274a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 801273c:	6823      	ldr	r3, [r4, #0]
 801273e:	4620      	mov	r0, r4
 8012740:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012742:	4629      	mov	r1, r5
 8012744:	4798      	blx	r3
 8012746:	69a4      	ldr	r4, [r4, #24]
 8012748:	e7f7      	b.n	801273a <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 801274a:	bd38      	pop	{r3, r4, r5, pc}

0801274c <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 801274c:	b570      	push	{r4, r5, r6, lr}
 801274e:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 8012752:	4606      	mov	r6, r0
 8012754:	460d      	mov	r5, r1
 8012756:	b134      	cbz	r4, 8012766 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 8012758:	6823      	ldr	r3, [r4, #0]
 801275a:	4620      	mov	r0, r4
 801275c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801275e:	4629      	mov	r1, r5
 8012760:	4798      	blx	r3
 8012762:	69a4      	ldr	r4, [r4, #24]
 8012764:	e7f7      	b.n	8012756 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 8012766:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 801276a:	b134      	cbz	r4, 801277a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 801276c:	6823      	ldr	r3, [r4, #0]
 801276e:	4620      	mov	r0, r4
 8012770:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012772:	4629      	mov	r1, r5
 8012774:	4798      	blx	r3
 8012776:	69a4      	ldr	r4, [r4, #24]
 8012778:	e7f7      	b.n	801276a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 801277a:	bd70      	pop	{r4, r5, r6, pc}

0801277c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 801277c:	b538      	push	{r3, r4, r5, lr}
 801277e:	4604      	mov	r4, r0
 8012780:	2500      	movs	r5, #0
 8012782:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8012786:	42ab      	cmp	r3, r5
 8012788:	db05      	blt.n	8012796 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 801278a:	b229      	sxth	r1, r5
 801278c:	4620      	mov	r0, r4
 801278e:	f7ff ffdd 	bl	801274c <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 8012792:	3501      	adds	r5, #1
 8012794:	e7f5      	b.n	8012782 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 8012796:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 801279a:	f004 ff7a 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 801279e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 80127a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80127a6:	f004 bf74 	b.w	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>

080127aa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 80127aa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80127ac:	6e05      	ldr	r5, [r0, #96]	; 0x60
 80127ae:	4604      	mov	r4, r0
 80127b0:	b15d      	cbz	r5, 80127ca <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 80127b2:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 80127b6:	9200      	str	r2, [sp, #0]
 80127b8:	2200      	movs	r2, #0
 80127ba:	4628      	mov	r0, r5
 80127bc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80127c0:	4611      	mov	r1, r2
 80127c2:	f7ef ffdb 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80127c6:	69ad      	ldr	r5, [r5, #24]
 80127c8:	e7f2      	b.n	80127b0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 80127ca:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 80127ce:	b15d      	cbz	r5, 80127e8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 80127d0:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 80127d4:	9200      	str	r2, [sp, #0]
 80127d6:	2200      	movs	r2, #0
 80127d8:	4628      	mov	r0, r5
 80127da:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 80127de:	4611      	mov	r1, r2
 80127e0:	f7ef ffcc 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80127e4:	69ad      	ldr	r5, [r5, #24]
 80127e6:	e7f2      	b.n	80127ce <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 80127e8:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 80127ec:	b15d      	cbz	r5, 8012806 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 80127ee:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 80127f2:	9200      	str	r2, [sp, #0]
 80127f4:	2200      	movs	r2, #0
 80127f6:	4628      	mov	r0, r5
 80127f8:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 80127fc:	4611      	mov	r1, r2
 80127fe:	f7ef ffbd 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8012802:	69ad      	ldr	r5, [r5, #24]
 8012804:	e7f2      	b.n	80127ec <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 8012806:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 801280a:	b15d      	cbz	r5, 8012824 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 801280c:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8012810:	9200      	str	r2, [sp, #0]
 8012812:	2200      	movs	r2, #0
 8012814:	4628      	mov	r0, r5
 8012816:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 801281a:	4611      	mov	r1, r2
 801281c:	f7ef ffae 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8012820:	69ad      	ldr	r5, [r5, #24]
 8012822:	e7f2      	b.n	801280a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 8012824:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 8012828:	b15d      	cbz	r5, 8012842 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 801282a:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 801282e:	9200      	str	r2, [sp, #0]
 8012830:	2200      	movs	r2, #0
 8012832:	4628      	mov	r0, r5
 8012834:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8012838:	4611      	mov	r1, r2
 801283a:	f7ef ff9f 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 801283e:	69ad      	ldr	r5, [r5, #24]
 8012840:	e7f2      	b.n	8012828 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 8012842:	6823      	ldr	r3, [r4, #0]
 8012844:	695b      	ldr	r3, [r3, #20]
 8012846:	4620      	mov	r0, r4
 8012848:	b003      	add	sp, #12
 801284a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801284e:	4718      	bx	r3

08012850 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 8012850:	b430      	push	{r4, r5}
 8012852:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 8012856:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 801285a:	b28a      	uxth	r2, r1
 801285c:	1b15      	subs	r5, r2, r4
 801285e:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 8012862:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 8012866:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 801286a:	442c      	add	r4, r5
 801286c:	1b12      	subs	r2, r2, r4
 801286e:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8012872:	8101      	strh	r1, [r0, #8]
 8012874:	bc30      	pop	{r4, r5}
 8012876:	f7ff bf98 	b.w	80127aa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0801287a <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 801287a:	b430      	push	{r4, r5}
 801287c:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 8012880:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 8012884:	b28a      	uxth	r2, r1
 8012886:	1b15      	subs	r5, r2, r4
 8012888:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 801288c:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 8012890:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 8012894:	442c      	add	r4, r5
 8012896:	1b12      	subs	r2, r2, r4
 8012898:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 801289c:	8141      	strh	r1, [r0, #10]
 801289e:	bc30      	pop	{r4, r5}
 80128a0:	f7ff bf83 	b.w	80127aa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

080128a4 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 80128a4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80128a8:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 80128ac:	fa1f fa83 	uxth.w	sl, r3
 80128b0:	4699      	mov	r9, r3
 80128b2:	8903      	ldrh	r3, [r0, #8]
 80128b4:	4604      	mov	r4, r0
 80128b6:	4615      	mov	r5, r2
 80128b8:	fa1f f887 	uxth.w	r8, r7
 80128bc:	4452      	add	r2, sl
 80128be:	8940      	ldrh	r0, [r0, #10]
 80128c0:	1a9b      	subs	r3, r3, r2
 80128c2:	eb08 0201 	add.w	r2, r8, r1
 80128c6:	1a80      	subs	r0, r0, r2
 80128c8:	b200      	sxth	r0, r0
 80128ca:	460e      	mov	r6, r1
 80128cc:	9000      	str	r0, [sp, #0]
 80128ce:	460a      	mov	r2, r1
 80128d0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80128d4:	4629      	mov	r1, r5
 80128d6:	b21b      	sxth	r3, r3
 80128d8:	f7ef ff50 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80128dc:	2200      	movs	r2, #0
 80128de:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80128e2:	9600      	str	r6, [sp, #0]
 80128e4:	4611      	mov	r1, r2
 80128e6:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80128ea:	f7ef ff47 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 80128ee:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80128f2:	9300      	str	r3, [sp, #0]
 80128f4:	2200      	movs	r2, #0
 80128f6:	462b      	mov	r3, r5
 80128f8:	4611      	mov	r1, r2
 80128fa:	f104 0064 	add.w	r0, r4, #100	; 0x64
 80128fe:	f7ef ff3d 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8012902:	8921      	ldrh	r1, [r4, #8]
 8012904:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012908:	9300      	str	r3, [sp, #0]
 801290a:	eba1 010a 	sub.w	r1, r1, sl
 801290e:	464b      	mov	r3, r9
 8012910:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8012914:	2200      	movs	r2, #0
 8012916:	b209      	sxth	r1, r1
 8012918:	f7ef ff30 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 801291c:	8962      	ldrh	r2, [r4, #10]
 801291e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8012922:	9700      	str	r7, [sp, #0]
 8012924:	eba2 0208 	sub.w	r2, r2, r8
 8012928:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 801292c:	b212      	sxth	r2, r2
 801292e:	2100      	movs	r1, #0
 8012930:	f7ef ff24 	bl	800277c <_ZN8touchgfx8Drawable11setPositionEssss>
 8012934:	4620      	mov	r0, r4
 8012936:	b002      	add	sp, #8
 8012938:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801293c:	f7ff bf35 	b.w	80127aa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08012940 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8012940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012944:	b085      	sub	sp, #20
 8012946:	4604      	mov	r4, r0
 8012948:	9103      	str	r1, [sp, #12]
 801294a:	f7f3 fae3 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 801294e:	4b31      	ldr	r3, [pc, #196]	; (8012a14 <_ZN8touchgfx17AbstractDataGraphC1Es+0xd4>)
 8012950:	6023      	str	r3, [r4, #0]
 8012952:	2601      	movs	r6, #1
 8012954:	23ff      	movs	r3, #255	; 0xff
 8012956:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 801295a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801295e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012962:	4658      	mov	r0, fp
 8012964:	f104 0964 	add.w	r9, r4, #100	; 0x64
 8012968:	f7f3 fad4 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 801296c:	f104 0890 	add.w	r8, r4, #144	; 0x90
 8012970:	4648      	mov	r0, r9
 8012972:	f7f3 facf 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 8012976:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 801297a:	4640      	mov	r0, r8
 801297c:	f7f3 faca 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 8012980:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 8012984:	4650      	mov	r0, sl
 8012986:	f7f3 fac5 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 801298a:	4638      	mov	r0, r7
 801298c:	f7f3 fac2 	bl	8005f14 <_ZN8touchgfx9ContainerC1Ev>
 8012990:	9903      	ldr	r1, [sp, #12]
 8012992:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 8012996:	2500      	movs	r5, #0
 8012998:	42a9      	cmp	r1, r5
 801299a:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 801299e:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 80129a2:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 80129a6:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 80129aa:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 80129ae:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 80129b2:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80129b6:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80129ba:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80129be:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 80129c2:	dc05      	bgt.n	80129d0 <_ZN8touchgfx17AbstractDataGraphC1Es+0x90>
 80129c4:	4b14      	ldr	r3, [pc, #80]	; (8012a18 <_ZN8touchgfx17AbstractDataGraphC1Es+0xd8>)
 80129c6:	4a15      	ldr	r2, [pc, #84]	; (8012a1c <_ZN8touchgfx17AbstractDataGraphC1Es+0xdc>)
 80129c8:	4815      	ldr	r0, [pc, #84]	; (8012a20 <_ZN8touchgfx17AbstractDataGraphC1Es+0xe0>)
 80129ca:	211d      	movs	r1, #29
 80129cc:	f014 fd70 	bl	80274b0 <__assert_func>
 80129d0:	4659      	mov	r1, fp
 80129d2:	4620      	mov	r0, r4
 80129d4:	f7fc fd5a 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80129d8:	4651      	mov	r1, sl
 80129da:	4620      	mov	r0, r4
 80129dc:	f7fc fd56 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80129e0:	4649      	mov	r1, r9
 80129e2:	4620      	mov	r0, r4
 80129e4:	f7fc fd52 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80129e8:	4641      	mov	r1, r8
 80129ea:	4620      	mov	r0, r4
 80129ec:	f7fc fd4e 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80129f0:	4639      	mov	r1, r7
 80129f2:	4620      	mov	r0, r4
 80129f4:	f7fc fd4a 	bl	800f48c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80129f8:	4620      	mov	r0, r4
 80129fa:	9500      	str	r5, [sp, #0]
 80129fc:	462b      	mov	r3, r5
 80129fe:	462a      	mov	r2, r5
 8012a00:	4629      	mov	r1, r5
 8012a02:	f7ff ff4f 	bl	80128a4 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8012a06:	4620      	mov	r0, r4
 8012a08:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 8012a0c:	b005      	add	sp, #20
 8012a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a12:	bf00      	nop
 8012a14:	0802c164 	.word	0x0802c164
 8012a18:	0802bfb7 	.word	0x0802bfb7
 8012a1c:	0802c39c 	.word	0x0802c39c
 8012a20:	0802bf6e 	.word	0x0802bf6e

08012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 8012a24:	4291      	cmp	r1, r2
 8012a26:	4613      	mov	r3, r2
 8012a28:	d003      	beq.n	8012a32 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 8012a2a:	460a      	mov	r2, r1
 8012a2c:	4619      	mov	r1, r3
 8012a2e:	f005 b81a 	b.w	8017a66 <_ZN8touchgfx6muldivElll>
 8012a32:	4770      	bx	lr

08012a34 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 8012a34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012a38:	6803      	ldr	r3, [r0, #0]
 8012a3a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8012a3e:	460d      	mov	r5, r1
 8012a40:	4604      	mov	r4, r0
 8012a42:	4617      	mov	r7, r2
 8012a44:	4798      	blx	r3
 8012a46:	42a8      	cmp	r0, r5
 8012a48:	4606      	mov	r6, r0
 8012a4a:	d028      	beq.n	8012a9e <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x6a>
 8012a4c:	6823      	ldr	r3, [r4, #0]
 8012a4e:	4601      	mov	r1, r0
 8012a50:	462a      	mov	r2, r5
 8012a52:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 8012a56:	f8d3 80a4 	ldr.w	r8, [r3, #164]	; 0xa4
 8012a5a:	f7ff ffe3 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8012a5e:	462a      	mov	r2, r5
 8012a60:	4681      	mov	r9, r0
 8012a62:	4631      	mov	r1, r6
 8012a64:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 8012a68:	f7ff ffdc 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8012a6c:	4649      	mov	r1, r9
 8012a6e:	4602      	mov	r2, r0
 8012a70:	4620      	mov	r0, r4
 8012a72:	47c0      	blx	r8
 8012a74:	462a      	mov	r2, r5
 8012a76:	4631      	mov	r1, r6
 8012a78:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8012a7c:	f7ff ffd2 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8012a80:	462a      	mov	r2, r5
 8012a82:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 8012a86:	4631      	mov	r1, r6
 8012a88:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8012a8c:	f7ff ffca 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8012a90:	463a      	mov	r2, r7
 8012a92:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 8012a96:	4629      	mov	r1, r5
 8012a98:	4620      	mov	r0, r4
 8012a9a:	f7ff fbdb 	bl	8012254 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>
 8012a9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08012aa2 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 8012aa2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012aa6:	4604      	mov	r4, r0
 8012aa8:	460f      	mov	r7, r1
 8012aaa:	b1ba      	cbz	r2, 8012adc <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8012aac:	6803      	ldr	r3, [r0, #0]
 8012aae:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8012ab2:	4798      	blx	r3
 8012ab4:	2600      	movs	r6, #0
 8012ab6:	4681      	mov	r9, r0
 8012ab8:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8012abc:	b235      	sxth	r5, r6
 8012abe:	42ab      	cmp	r3, r5
 8012ac0:	f106 0601 	add.w	r6, r6, #1
 8012ac4:	dd0a      	ble.n	8012adc <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8012ac6:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 8012aca:	463a      	mov	r2, r7
 8012acc:	4649      	mov	r1, r9
 8012ace:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8012ad2:	f7ff ffa7 	bl	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8012ad6:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8012ada:	e7ed      	b.n	8012ab8 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 8012adc:	2200      	movs	r2, #0
 8012ade:	4639      	mov	r1, r7
 8012ae0:	4620      	mov	r0, r4
 8012ae2:	f7ff fbc7 	bl	8012274 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>
 8012ae6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08012aea <_ZN8touchgfx16GraphElementLineD1Ev>:
 8012aea:	4770      	bx	lr

08012aec <_ZN8touchgfx16GraphElementLineD0Ev>:
 8012aec:	b510      	push	{r4, lr}
 8012aee:	2130      	movs	r1, #48	; 0x30
 8012af0:	4604      	mov	r4, r0
 8012af2:	f014 fcae 	bl	8027452 <_ZdlPvj>
 8012af6:	4620      	mov	r0, r4
 8012af8:	bd10      	pop	{r4, pc}

08012afa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 8012afa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012afe:	6803      	ldr	r3, [r0, #0]
 8012b00:	6945      	ldr	r5, [r0, #20]
 8012b02:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012b04:	b093      	sub	sp, #76	; 0x4c
 8012b06:	4604      	mov	r4, r0
 8012b08:	460f      	mov	r7, r1
 8012b0a:	2d00      	cmp	r5, #0
 8012b0c:	f000 81ad 	beq.w	8012e6a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 8012b10:	696d      	ldr	r5, [r5, #20]
 8012b12:	4798      	blx	r3
 8012b14:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8012b18:	2b00      	cmp	r3, #0
 8012b1a:	d077      	beq.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012b1c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8012b20:	fb13 f000 	smulbb	r0, r3, r0
 8012b24:	b283      	uxth	r3, r0
 8012b26:	1c58      	adds	r0, r3, #1
 8012b28:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8012b2c:	1200      	asrs	r0, r0, #8
 8012b2e:	d06d      	beq.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012b30:	b2c3      	uxtb	r3, r0
 8012b32:	9308      	str	r3, [sp, #32]
 8012b34:	6823      	ldr	r3, [r4, #0]
 8012b36:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8012b3a:	462a      	mov	r2, r5
 8012b3c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012b40:	4621      	mov	r1, r4
 8012b42:	4640      	mov	r0, r8
 8012b44:	4798      	blx	r3
 8012b46:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012b4a:	ae0e      	add	r6, sp, #56	; 0x38
 8012b4c:	e886 0003 	stmia.w	r6, {r0, r1}
 8012b50:	4639      	mov	r1, r7
 8012b52:	4630      	mov	r0, r6
 8012b54:	f7fc fdde 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8012b58:	6823      	ldr	r3, [r4, #0]
 8012b5a:	4629      	mov	r1, r5
 8012b5c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012b60:	4620      	mov	r0, r4
 8012b62:	4798      	blx	r3
 8012b64:	6823      	ldr	r3, [r4, #0]
 8012b66:	4607      	mov	r7, r0
 8012b68:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8012b6c:	4629      	mov	r1, r5
 8012b6e:	4620      	mov	r0, r4
 8012b70:	4798      	blx	r3
 8012b72:	4681      	mov	r9, r0
 8012b74:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
 8012b78:	0103      	lsls	r3, r0, #4
 8012b7a:	9309      	str	r3, [sp, #36]	; 0x24
 8012b7c:	6823      	ldr	r3, [r4, #0]
 8012b7e:	4629      	mov	r1, r5
 8012b80:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012b84:	4620      	mov	r0, r4
 8012b86:	4798      	blx	r3
 8012b88:	b203      	sxth	r3, r0
 8012b8a:	9306      	str	r3, [sp, #24]
 8012b8c:	6823      	ldr	r3, [r4, #0]
 8012b8e:	4629      	mov	r1, r5
 8012b90:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8012b94:	4620      	mov	r0, r4
 8012b96:	4798      	blx	r3
 8012b98:	2f00      	cmp	r7, #0
 8012b9a:	b203      	sxth	r3, r0
 8012b9c:	9307      	str	r3, [sp, #28]
 8012b9e:	d138      	bne.n	8012c12 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 8012ba0:	f1b9 0f00 	cmp.w	r9, #0
 8012ba4:	d132      	bne.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012ba6:	6823      	ldr	r3, [r4, #0]
 8012ba8:	464a      	mov	r2, r9
 8012baa:	4629      	mov	r1, r5
 8012bac:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012bb0:	4620      	mov	r0, r4
 8012bb2:	4798      	blx	r3
 8012bb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012bb6:	1ac0      	subs	r0, r0, r3
 8012bb8:	9010      	str	r0, [sp, #64]	; 0x40
 8012bba:	4640      	mov	r0, r8
 8012bbc:	f7ff fd18 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012bc0:	6823      	ldr	r3, [r4, #0]
 8012bc2:	4607      	mov	r7, r0
 8012bc4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8012bc8:	4629      	mov	r1, r5
 8012bca:	4620      	mov	r0, r4
 8012bcc:	4798      	blx	r3
 8012bce:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8012bd2:	1a38      	subs	r0, r7, r0
 8012bd4:	fa0f f880 	sxth.w	r8, r0
 8012bd8:	eb13 0f08 	cmn.w	r3, r8
 8012bdc:	d416      	bmi.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012bde:	6823      	ldr	r3, [r4, #0]
 8012be0:	4629      	mov	r1, r5
 8012be2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8012be6:	4620      	mov	r0, r4
 8012be8:	4798      	blx	r3
 8012bea:	4580      	cmp	r8, r0
 8012bec:	da0e      	bge.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012bee:	9a08      	ldr	r2, [sp, #32]
 8012bf0:	6823      	ldr	r3, [r4, #0]
 8012bf2:	9202      	str	r2, [sp, #8]
 8012bf4:	b23f      	sxth	r7, r7
 8012bf6:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8012bfa:	9201      	str	r2, [sp, #4]
 8012bfc:	9700      	str	r7, [sp, #0]
 8012bfe:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 8012c02:	4631      	mov	r1, r6
 8012c04:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012c08:	4620      	mov	r0, r4
 8012c0a:	47a8      	blx	r5
 8012c0c:	b013      	add	sp, #76	; 0x4c
 8012c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c12:	ddfb      	ble.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012c14:	6823      	ldr	r3, [r4, #0]
 8012c16:	4629      	mov	r1, r5
 8012c18:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8012c1c:	4620      	mov	r0, r4
 8012c1e:	4798      	blx	r3
 8012c20:	6823      	ldr	r3, [r4, #0]
 8012c22:	4683      	mov	fp, r0
 8012c24:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8012c28:	4629      	mov	r1, r5
 8012c2a:	4620      	mov	r0, r4
 8012c2c:	4798      	blx	r3
 8012c2e:	eba0 030b 	sub.w	r3, r0, fp
 8012c32:	2b00      	cmp	r3, #0
 8012c34:	bfb8      	it	lt
 8012c36:	425b      	neglt	r3, r3
 8012c38:	fb93 f3f7 	sdiv	r3, r3, r7
 8012c3c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8012c40:	4680      	mov	r8, r0
 8012c42:	dce3      	bgt.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012c44:	6823      	ldr	r3, [r4, #0]
 8012c46:	465a      	mov	r2, fp
 8012c48:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012c4c:	4629      	mov	r1, r5
 8012c4e:	4620      	mov	r0, r4
 8012c50:	4798      	blx	r3
 8012c52:	6823      	ldr	r3, [r4, #0]
 8012c54:	4606      	mov	r6, r0
 8012c56:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012c5a:	4642      	mov	r2, r8
 8012c5c:	4629      	mov	r1, r5
 8012c5e:	4620      	mov	r0, r4
 8012c60:	4798      	blx	r3
 8012c62:	42b0      	cmp	r0, r6
 8012c64:	bfa2      	ittt	ge
 8012c66:	4643      	movge	r3, r8
 8012c68:	46d8      	movge	r8, fp
 8012c6a:	469b      	movge	fp, r3
 8012c6c:	45d8      	cmp	r8, fp
 8012c6e:	bfac      	ite	ge
 8012c70:	f04f 33ff 	movge.w	r3, #4294967295
 8012c74:	2301      	movlt	r3, #1
 8012c76:	fb98 f6f7 	sdiv	r6, r8, r7
 8012c7a:	fb9b f2f7 	sdiv	r2, fp, r7
 8012c7e:	1af6      	subs	r6, r6, r3
 8012c80:	441a      	add	r2, r3
 8012c82:	4296      	cmp	r6, r2
 8012c84:	bfac      	ite	ge
 8012c86:	f04f 3aff 	movge.w	sl, #4294967295
 8012c8a:	f04f 0a01 	movlt.w	sl, #1
 8012c8e:	f1b9 0f00 	cmp.w	r9, #0
 8012c92:	d13e      	bne.n	8012d12 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 8012c94:	fb07 fb0a 	mul.w	fp, r7, sl
 8012c98:	eb0a 0802 	add.w	r8, sl, r2
 8012c9c:	4377      	muls	r7, r6
 8012c9e:	45b0      	cmp	r8, r6
 8012ca0:	d0b4      	beq.n	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012ca2:	6823      	ldr	r3, [r4, #0]
 8012ca4:	463a      	mov	r2, r7
 8012ca6:	4629      	mov	r1, r5
 8012ca8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012cac:	4620      	mov	r0, r4
 8012cae:	4798      	blx	r3
 8012cb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012cb2:	1ac0      	subs	r0, r0, r3
 8012cb4:	9010      	str	r0, [sp, #64]	; 0x40
 8012cb6:	a810      	add	r0, sp, #64	; 0x40
 8012cb8:	f7ff fc9a 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012cbc:	6823      	ldr	r3, [r4, #0]
 8012cbe:	4681      	mov	r9, r0
 8012cc0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8012cc4:	4629      	mov	r1, r5
 8012cc6:	4620      	mov	r0, r4
 8012cc8:	4798      	blx	r3
 8012cca:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8012cce:	eba9 0000 	sub.w	r0, r9, r0
 8012cd2:	b203      	sxth	r3, r0
 8012cd4:	42da      	cmn	r2, r3
 8012cd6:	9304      	str	r3, [sp, #16]
 8012cd8:	d418      	bmi.n	8012d0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 8012cda:	6822      	ldr	r2, [r4, #0]
 8012cdc:	4629      	mov	r1, r5
 8012cde:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 8012ce2:	4620      	mov	r0, r4
 8012ce4:	4790      	blx	r2
 8012ce6:	9b04      	ldr	r3, [sp, #16]
 8012ce8:	4283      	cmp	r3, r0
 8012cea:	da0f      	bge.n	8012d0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 8012cec:	9b08      	ldr	r3, [sp, #32]
 8012cee:	9302      	str	r3, [sp, #8]
 8012cf0:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8012cf4:	6822      	ldr	r2, [r4, #0]
 8012cf6:	9301      	str	r3, [sp, #4]
 8012cf8:	fa0f f389 	sxth.w	r3, r9
 8012cfc:	9300      	str	r3, [sp, #0]
 8012cfe:	f8d2 908c 	ldr.w	r9, [r2, #140]	; 0x8c
 8012d02:	a90e      	add	r1, sp, #56	; 0x38
 8012d04:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012d08:	4620      	mov	r0, r4
 8012d0a:	47c8      	blx	r9
 8012d0c:	4456      	add	r6, sl
 8012d0e:	445f      	add	r7, fp
 8012d10:	e7c5      	b.n	8012c9e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 8012d12:	fb98 f8f9 	sdiv	r8, r8, r9
 8012d16:	eba8 0203 	sub.w	r2, r8, r3
 8012d1a:	fb9b f8f9 	sdiv	r8, fp, r9
 8012d1e:	4498      	add	r8, r3
 8012d20:	4542      	cmp	r2, r8
 8012d22:	bfac      	ite	ge
 8012d24:	f04f 33ff 	movge.w	r3, #4294967295
 8012d28:	2301      	movlt	r3, #1
 8012d2a:	930a      	str	r3, [sp, #40]	; 0x28
 8012d2c:	6823      	ldr	r3, [r4, #0]
 8012d2e:	9204      	str	r2, [sp, #16]
 8012d30:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012d34:	fb02 f209 	mul.w	r2, r2, r9
 8012d38:	4629      	mov	r1, r5
 8012d3a:	4620      	mov	r0, r4
 8012d3c:	4798      	blx	r3
 8012d3e:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 8012d42:	f84b 0d08 	str.w	r0, [fp, #-8]!
 8012d46:	4658      	mov	r0, fp
 8012d48:	f7ff fc52 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012d4c:	b203      	sxth	r3, r0
 8012d4e:	9305      	str	r3, [sp, #20]
 8012d50:	6823      	ldr	r3, [r4, #0]
 8012d52:	fb06 f207 	mul.w	r2, r6, r7
 8012d56:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012d5a:	4629      	mov	r1, r5
 8012d5c:	4620      	mov	r0, r4
 8012d5e:	4798      	blx	r3
 8012d60:	9010      	str	r0, [sp, #64]	; 0x40
 8012d62:	4658      	mov	r0, fp
 8012d64:	f7ff fc44 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012d68:	fb07 f20a 	mul.w	r2, r7, sl
 8012d6c:	920b      	str	r2, [sp, #44]	; 0x2c
 8012d6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012d70:	4442      	add	r2, r8
 8012d72:	b203      	sxth	r3, r0
 8012d74:	920c      	str	r2, [sp, #48]	; 0x30
 8012d76:	9a05      	ldr	r2, [sp, #20]
 8012d78:	429a      	cmp	r2, r3
 8012d7a:	dc16      	bgt.n	8012daa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 8012d7c:	eb06 080a 	add.w	r8, r6, sl
 8012d80:	fb07 f808 	mul.w	r8, r7, r8
 8012d84:	9a05      	ldr	r2, [sp, #20]
 8012d86:	429a      	cmp	r2, r3
 8012d88:	db54      	blt.n	8012e34 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 8012d8a:	6823      	ldr	r3, [r4, #0]
 8012d8c:	4642      	mov	r2, r8
 8012d8e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012d92:	4629      	mov	r1, r5
 8012d94:	4620      	mov	r0, r4
 8012d96:	4798      	blx	r3
 8012d98:	9010      	str	r0, [sp, #64]	; 0x40
 8012d9a:	4658      	mov	r0, fp
 8012d9c:	f7ff fc28 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012da0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012da2:	4456      	add	r6, sl
 8012da4:	b203      	sxth	r3, r0
 8012da6:	4490      	add	r8, r2
 8012da8:	e7ec      	b.n	8012d84 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 8012daa:	6823      	ldr	r3, [r4, #0]
 8012dac:	fb07 f206 	mul.w	r2, r7, r6
 8012db0:	4629      	mov	r1, r5
 8012db2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012db6:	4620      	mov	r0, r4
 8012db8:	4798      	blx	r3
 8012dba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012dbc:	1ac0      	subs	r0, r0, r3
 8012dbe:	9010      	str	r0, [sp, #64]	; 0x40
 8012dc0:	4658      	mov	r0, fp
 8012dc2:	f7ff fc15 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012dc6:	6823      	ldr	r3, [r4, #0]
 8012dc8:	4680      	mov	r8, r0
 8012dca:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8012dce:	4629      	mov	r1, r5
 8012dd0:	4620      	mov	r0, r4
 8012dd2:	4798      	blx	r3
 8012dd4:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8012dd8:	eba8 0000 	sub.w	r0, r8, r0
 8012ddc:	b203      	sxth	r3, r0
 8012dde:	42da      	cmn	r2, r3
 8012de0:	930d      	str	r3, [sp, #52]	; 0x34
 8012de2:	d418      	bmi.n	8012e16 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 8012de4:	6822      	ldr	r2, [r4, #0]
 8012de6:	4629      	mov	r1, r5
 8012de8:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 8012dec:	4620      	mov	r0, r4
 8012dee:	4790      	blx	r2
 8012df0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012df2:	4283      	cmp	r3, r0
 8012df4:	da0f      	bge.n	8012e16 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 8012df6:	9b08      	ldr	r3, [sp, #32]
 8012df8:	9302      	str	r3, [sp, #8]
 8012dfa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8012dfe:	6822      	ldr	r2, [r4, #0]
 8012e00:	9301      	str	r3, [sp, #4]
 8012e02:	fa0f f388 	sxth.w	r3, r8
 8012e06:	9300      	str	r3, [sp, #0]
 8012e08:	f8d2 808c 	ldr.w	r8, [r2, #140]	; 0x8c
 8012e0c:	a90e      	add	r1, sp, #56	; 0x38
 8012e0e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8012e12:	4620      	mov	r0, r4
 8012e14:	47c0      	blx	r8
 8012e16:	6823      	ldr	r3, [r4, #0]
 8012e18:	4456      	add	r6, sl
 8012e1a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012e1e:	fb06 f207 	mul.w	r2, r6, r7
 8012e22:	4629      	mov	r1, r5
 8012e24:	4620      	mov	r0, r4
 8012e26:	4798      	blx	r3
 8012e28:	9010      	str	r0, [sp, #64]	; 0x40
 8012e2a:	4658      	mov	r0, fp
 8012e2c:	f7ff fbe0 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012e30:	b203      	sxth	r3, r0
 8012e32:	e7a0      	b.n	8012d76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 8012e34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012e36:	930d      	str	r3, [sp, #52]	; 0x34
 8012e38:	9b04      	ldr	r3, [sp, #16]
 8012e3a:	4413      	add	r3, r2
 8012e3c:	9304      	str	r3, [sp, #16]
 8012e3e:	9a04      	ldr	r2, [sp, #16]
 8012e40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e42:	4293      	cmp	r3, r2
 8012e44:	f43f aee2 	beq.w	8012c0c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8012e48:	9b04      	ldr	r3, [sp, #16]
 8012e4a:	6822      	ldr	r2, [r4, #0]
 8012e4c:	4629      	mov	r1, r5
 8012e4e:	f8d2 80b0 	ldr.w	r8, [r2, #176]	; 0xb0
 8012e52:	4620      	mov	r0, r4
 8012e54:	fb03 f209 	mul.w	r2, r3, r9
 8012e58:	47c0      	blx	r8
 8012e5a:	9010      	str	r0, [sp, #64]	; 0x40
 8012e5c:	4658      	mov	r0, fp
 8012e5e:	f7ff fbc7 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8012e62:	b203      	sxth	r3, r0
 8012e64:	9305      	str	r3, [sp, #20]
 8012e66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e68:	e785      	b.n	8012d76 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 8012e6a:	4798      	blx	r3
 8012e6c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8012e70:	deff      	udf	#255	; 0xff

08012e72 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 8012e72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012e74:	9906      	ldr	r1, [sp, #24]
 8012e76:	4291      	cmp	r1, r2
 8012e78:	bfbc      	itt	lt
 8012e7a:	9206      	strlt	r2, [sp, #24]
 8012e7c:	460a      	movlt	r2, r1
 8012e7e:	9907      	ldr	r1, [sp, #28]
 8012e80:	428b      	cmp	r3, r1
 8012e82:	4606      	mov	r6, r0
 8012e84:	461c      	mov	r4, r3
 8012e86:	f04f 0020 	mov.w	r0, #32
 8012e8a:	bfc8      	it	gt
 8012e8c:	460c      	movgt	r4, r1
 8012e8e:	fb92 f5f0 	sdiv	r5, r2, r0
 8012e92:	fb94 f4f0 	sdiv	r4, r4, r0
 8012e96:	a806      	add	r0, sp, #24
 8012e98:	bfc8      	it	gt
 8012e9a:	9307      	strgt	r3, [sp, #28]
 8012e9c:	f7fe fe0d 	bl	8011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012ea0:	4607      	mov	r7, r0
 8012ea2:	a807      	add	r0, sp, #28
 8012ea4:	f7fe fe09 	bl	8011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012ea8:	1b7a      	subs	r2, r7, r5
 8012eaa:	1b00      	subs	r0, r0, r4
 8012eac:	80f0      	strh	r0, [r6, #6]
 8012eae:	8035      	strh	r5, [r6, #0]
 8012eb0:	8074      	strh	r4, [r6, #2]
 8012eb2:	80b2      	strh	r2, [r6, #4]
 8012eb4:	4630      	mov	r0, r6
 8012eb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012eb8 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 8012eb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012eba:	9c08      	ldr	r4, [sp, #32]
 8012ebc:	2602      	movs	r6, #2
 8012ebe:	3401      	adds	r4, #1
 8012ec0:	fb94 f4f6 	sdiv	r4, r4, r6
 8012ec4:	18a6      	adds	r6, r4, r2
 8012ec6:	191f      	adds	r7, r3, r4
 8012ec8:	e9cd 6700 	strd	r6, r7, [sp]
 8012ecc:	1b1b      	subs	r3, r3, r4
 8012ece:	1b12      	subs	r2, r2, r4
 8012ed0:	4605      	mov	r5, r0
 8012ed2:	f7ff ffce 	bl	8012e72 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 8012ed6:	4628      	mov	r0, r5
 8012ed8:	b003      	add	sp, #12
 8012eda:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012edc <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 8012edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ee0:	6943      	ldr	r3, [r0, #20]
 8012ee2:	b089      	sub	sp, #36	; 0x24
 8012ee4:	4680      	mov	r8, r0
 8012ee6:	460d      	mov	r5, r1
 8012ee8:	2b00      	cmp	r3, #0
 8012eea:	f000 8082 	beq.w	8012ff2 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x116>
 8012eee:	695c      	ldr	r4, [r3, #20]
 8012ef0:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 8012ef4:	6823      	ldr	r3, [r4, #0]
 8012ef6:	4620      	mov	r0, r4
 8012ef8:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8012efc:	4798      	blx	r3
 8012efe:	6823      	ldr	r3, [r4, #0]
 8012f00:	4606      	mov	r6, r0
 8012f02:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8012f06:	4629      	mov	r1, r5
 8012f08:	4620      	mov	r0, r4
 8012f0a:	4798      	blx	r3
 8012f0c:	ea4f 1949 	mov.w	r9, r9, lsl #5
 8012f10:	af02      	add	r7, sp, #8
 8012f12:	4603      	mov	r3, r0
 8012f14:	4632      	mov	r2, r6
 8012f16:	f8cd 9000 	str.w	r9, [sp]
 8012f1a:	4641      	mov	r1, r8
 8012f1c:	4638      	mov	r0, r7
 8012f1e:	f7ff ffcb 	bl	8012eb8 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8012f22:	2d00      	cmp	r5, #0
 8012f24:	ae06      	add	r6, sp, #24
 8012f26:	dd1c      	ble.n	8012f62 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x86>
 8012f28:	6823      	ldr	r3, [r4, #0]
 8012f2a:	f105 3aff 	add.w	sl, r5, #4294967295
 8012f2e:	fa0f fa8a 	sxth.w	sl, sl
 8012f32:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8012f36:	4651      	mov	r1, sl
 8012f38:	4620      	mov	r0, r4
 8012f3a:	4798      	blx	r3
 8012f3c:	6823      	ldr	r3, [r4, #0]
 8012f3e:	4683      	mov	fp, r0
 8012f40:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8012f44:	4651      	mov	r1, sl
 8012f46:	4620      	mov	r0, r4
 8012f48:	4798      	blx	r3
 8012f4a:	4641      	mov	r1, r8
 8012f4c:	4603      	mov	r3, r0
 8012f4e:	f8cd 9000 	str.w	r9, [sp]
 8012f52:	4630      	mov	r0, r6
 8012f54:	465a      	mov	r2, fp
 8012f56:	f7ff ffaf 	bl	8012eb8 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8012f5a:	4631      	mov	r1, r6
 8012f5c:	4638      	mov	r0, r7
 8012f5e:	f7fc ff76 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012f62:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8012f66:	3b01      	subs	r3, #1
 8012f68:	429d      	cmp	r5, r3
 8012f6a:	da1a      	bge.n	8012fa2 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xc6>
 8012f6c:	6823      	ldr	r3, [r4, #0]
 8012f6e:	3501      	adds	r5, #1
 8012f70:	b22d      	sxth	r5, r5
 8012f72:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8012f76:	4629      	mov	r1, r5
 8012f78:	4620      	mov	r0, r4
 8012f7a:	4798      	blx	r3
 8012f7c:	6823      	ldr	r3, [r4, #0]
 8012f7e:	4682      	mov	sl, r0
 8012f80:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8012f84:	4629      	mov	r1, r5
 8012f86:	4620      	mov	r0, r4
 8012f88:	4798      	blx	r3
 8012f8a:	4641      	mov	r1, r8
 8012f8c:	4603      	mov	r3, r0
 8012f8e:	f8cd 9000 	str.w	r9, [sp]
 8012f92:	4630      	mov	r0, r6
 8012f94:	4652      	mov	r2, sl
 8012f96:	f7ff ff8f 	bl	8012eb8 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8012f9a:	4631      	mov	r1, r6
 8012f9c:	4638      	mov	r0, r7
 8012f9e:	f7fc ff56 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012fa2:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 8012fa6:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 8012faa:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 8012fae:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012fb2:	18ca      	adds	r2, r1, r3
 8012fb4:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012fb8:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012fbc:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 8012fc0:	e886 0003 	stmia.w	r6, {r0, r1}
 8012fc4:	1a9b      	subs	r3, r3, r2
 8012fc6:	a904      	add	r1, sp, #16
 8012fc8:	2200      	movs	r2, #0
 8012fca:	4630      	mov	r0, r6
 8012fcc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012fd0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012fd4:	f7fc fb9e 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8012fd8:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012fdc:	f8d8 3000 	ldr.w	r3, [r8]
 8012fe0:	e887 0003 	stmia.w	r7, {r0, r1}
 8012fe4:	691b      	ldr	r3, [r3, #16]
 8012fe6:	4639      	mov	r1, r7
 8012fe8:	4640      	mov	r0, r8
 8012fea:	4798      	blx	r3
 8012fec:	b009      	add	sp, #36	; 0x24
 8012fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ff2:	681b      	ldr	r3, [r3, #0]
 8012ff4:	deff      	udf	#255	; 0xff

08012ff6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 8012ff6:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012ffa:	2b00      	cmp	r3, #0
 8012ffc:	da05      	bge.n	801300a <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 8012ffe:	880a      	ldrh	r2, [r1, #0]
 8013000:	b29b      	uxth	r3, r3
 8013002:	441a      	add	r2, r3
 8013004:	425b      	negs	r3, r3
 8013006:	800a      	strh	r2, [r1, #0]
 8013008:	808b      	strh	r3, [r1, #4]
 801300a:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801300e:	2b00      	cmp	r3, #0
 8013010:	da05      	bge.n	801301e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 8013012:	884a      	ldrh	r2, [r1, #2]
 8013014:	b29b      	uxth	r3, r3
 8013016:	441a      	add	r2, r3
 8013018:	425b      	negs	r3, r3
 801301a:	804a      	strh	r2, [r1, #2]
 801301c:	80cb      	strh	r3, [r1, #6]
 801301e:	4770      	bx	lr

08013020 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 8013020:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013022:	4604      	mov	r4, r0
 8013024:	460d      	mov	r5, r1
 8013026:	6801      	ldr	r1, [r0, #0]
 8013028:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 801302c:	9001      	str	r0, [sp, #4]
 801302e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8013032:	9000      	str	r0, [sp, #0]
 8013034:	f8d1 6094 	ldr.w	r6, [r1, #148]	; 0x94
 8013038:	a802      	add	r0, sp, #8
 801303a:	4621      	mov	r1, r4
 801303c:	47b0      	blx	r6
 801303e:	a902      	add	r1, sp, #8
 8013040:	4620      	mov	r0, r4
 8013042:	f7ff ffd8 	bl	8012ff6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 8013046:	a802      	add	r0, sp, #8
 8013048:	4629      	mov	r1, r5
 801304a:	f7fc fb63 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 801304e:	a802      	add	r0, sp, #8
 8013050:	f7fc fba3 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013054:	b968      	cbnz	r0, 8013072 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 8013056:	6823      	ldr	r3, [r4, #0]
 8013058:	a902      	add	r1, sp, #8
 801305a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801305c:	4620      	mov	r0, r4
 801305e:	4798      	blx	r3
 8013060:	f7fd fc78 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8013064:	6803      	ldr	r3, [r0, #0]
 8013066:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013068:	6a1d      	ldr	r5, [r3, #32]
 801306a:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 801306e:	a902      	add	r1, sp, #8
 8013070:	47a8      	blx	r5
 8013072:	b004      	add	sp, #16
 8013074:	bd70      	pop	{r4, r5, r6, pc}

08013076 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 8013076:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801307a:	b08b      	sub	sp, #44	; 0x2c
 801307c:	461e      	mov	r6, r3
 801307e:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8013082:	9304      	str	r3, [sp, #16]
 8013084:	429e      	cmp	r6, r3
 8013086:	4689      	mov	r9, r1
 8013088:	4615      	mov	r5, r2
 801308a:	d072      	beq.n	8013172 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 801308c:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 8013090:	015b      	lsls	r3, r3, #5
 8013092:	9303      	str	r3, [sp, #12]
 8013094:	6813      	ldr	r3, [r2, #0]
 8013096:	4610      	mov	r0, r2
 8013098:	4631      	mov	r1, r6
 801309a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801309e:	4798      	blx	r3
 80130a0:	ab0a      	add	r3, sp, #40	; 0x28
 80130a2:	4634      	mov	r4, r6
 80130a4:	f843 0d10 	str.w	r0, [r3, #-16]!
 80130a8:	4618      	mov	r0, r3
 80130aa:	f7ff faa1 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80130ae:	682b      	ldr	r3, [r5, #0]
 80130b0:	4631      	mov	r1, r6
 80130b2:	0147      	lsls	r7, r0, #5
 80130b4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 80130b8:	4628      	mov	r0, r5
 80130ba:	4798      	blx	r3
 80130bc:	ab0a      	add	r3, sp, #40	; 0x28
 80130be:	f843 0d0c 	str.w	r0, [r3, #-12]!
 80130c2:	4618      	mov	r0, r3
 80130c4:	f7ff fa94 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80130c8:	ea4f 1840 	mov.w	r8, r0, lsl #5
 80130cc:	4642      	mov	r2, r8
 80130ce:	4639      	mov	r1, r7
 80130d0:	4648      	mov	r0, r9
 80130d2:	f012 ffb2 	bl	802603a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80130d6:	2301      	movs	r3, #1
 80130d8:	9300      	str	r3, [sp, #0]
 80130da:	9b00      	ldr	r3, [sp, #0]
 80130dc:	441c      	add	r4, r3
 80130de:	682b      	ldr	r3, [r5, #0]
 80130e0:	b224      	sxth	r4, r4
 80130e2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80130e6:	4621      	mov	r1, r4
 80130e8:	4628      	mov	r0, r5
 80130ea:	4798      	blx	r3
 80130ec:	9008      	str	r0, [sp, #32]
 80130ee:	a808      	add	r0, sp, #32
 80130f0:	f7ff fa7e 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80130f4:	0143      	lsls	r3, r0, #5
 80130f6:	9301      	str	r3, [sp, #4]
 80130f8:	682b      	ldr	r3, [r5, #0]
 80130fa:	4621      	mov	r1, r4
 80130fc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8013100:	4628      	mov	r0, r5
 8013102:	4798      	blx	r3
 8013104:	9009      	str	r0, [sp, #36]	; 0x24
 8013106:	a809      	add	r0, sp, #36	; 0x24
 8013108:	f7ff fa72 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801310c:	0143      	lsls	r3, r0, #5
 801310e:	9302      	str	r3, [sp, #8]
 8013110:	9b01      	ldr	r3, [sp, #4]
 8013112:	eba3 0b07 	sub.w	fp, r3, r7
 8013116:	9b02      	ldr	r3, [sp, #8]
 8013118:	eba3 0a08 	sub.w	sl, r3, r8
 801311c:	4651      	mov	r1, sl
 801311e:	4658      	mov	r0, fp
 8013120:	f7fe fe0d 	bl	8011d3e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013124:	b318      	cbz	r0, 801316e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 8013126:	4602      	mov	r2, r0
 8013128:	4651      	mov	r1, sl
 801312a:	9005      	str	r0, [sp, #20]
 801312c:	9803      	ldr	r0, [sp, #12]
 801312e:	f004 fc9a 	bl	8017a66 <_ZN8touchgfx6muldivElll>
 8013132:	2302      	movs	r3, #2
 8013134:	fb90 faf3 	sdiv	sl, r0, r3
 8013138:	9b05      	ldr	r3, [sp, #20]
 801313a:	9803      	ldr	r0, [sp, #12]
 801313c:	461a      	mov	r2, r3
 801313e:	4659      	mov	r1, fp
 8013140:	f004 fc91 	bl	8017a66 <_ZN8touchgfx6muldivElll>
 8013144:	2302      	movs	r3, #2
 8013146:	eba7 010a 	sub.w	r1, r7, sl
 801314a:	fb90 fbf3 	sdiv	fp, r0, r3
 801314e:	4648      	mov	r0, r9
 8013150:	eb0b 0208 	add.w	r2, fp, r8
 8013154:	f012 ff00 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013158:	9b02      	ldr	r3, [sp, #8]
 801315a:	eb03 020b 	add.w	r2, r3, fp
 801315e:	9b01      	ldr	r3, [sp, #4]
 8013160:	4648      	mov	r0, r9
 8013162:	eba3 010a 	sub.w	r1, r3, sl
 8013166:	f012 fef7 	bl	8025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801316a:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 801316e:	42a6      	cmp	r6, r4
 8013170:	db02      	blt.n	8013178 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 8013172:	b00b      	add	sp, #44	; 0x2c
 8013174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013178:	9b00      	ldr	r3, [sp, #0]
 801317a:	9a04      	ldr	r2, [sp, #16]
 801317c:	42a2      	cmp	r2, r4
 801317e:	bf08      	it	eq
 8013180:	f04f 33ff 	moveq.w	r3, #4294967295
 8013184:	e7a8      	b.n	80130d8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>

08013186 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 8013186:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801318a:	6943      	ldr	r3, [r0, #20]
 801318c:	b0b4      	sub	sp, #208	; 0xd0
 801318e:	4606      	mov	r6, r0
 8013190:	460f      	mov	r7, r1
 8013192:	2b00      	cmp	r3, #0
 8013194:	d06a      	beq.n	801326c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 8013196:	695c      	ldr	r4, [r3, #20]
 8013198:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 801319c:	2b01      	cmp	r3, #1
 801319e:	dc04      	bgt.n	80131aa <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 80131a0:	2401      	movs	r4, #1
 80131a2:	4620      	mov	r0, r4
 80131a4:	b034      	add	sp, #208	; 0xd0
 80131a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80131aa:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 80131ae:	ad34      	add	r5, sp, #208	; 0xd0
 80131b0:	011b      	lsls	r3, r3, #4
 80131b2:	f845 3dbc 	str.w	r3, [r5, #-188]!
 80131b6:	4628      	mov	r0, r5
 80131b8:	f7fe fc7f 	bl	8011aba <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80131bc:	8839      	ldrh	r1, [r7, #0]
 80131be:	88ba      	ldrh	r2, [r7, #4]
 80131c0:	6823      	ldr	r3, [r4, #0]
 80131c2:	b280      	uxth	r0, r0
 80131c4:	440a      	add	r2, r1
 80131c6:	4402      	add	r2, r0
 80131c8:	1a09      	subs	r1, r1, r0
 80131ca:	f10d 000a 	add.w	r0, sp, #10
 80131ce:	9000      	str	r0, [sp, #0]
 80131d0:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 80131d4:	b212      	sxth	r2, r2
 80131d6:	ab02      	add	r3, sp, #8
 80131d8:	b209      	sxth	r1, r1
 80131da:	4620      	mov	r0, r4
 80131dc:	47c0      	blx	r8
 80131de:	2800      	cmp	r0, #0
 80131e0:	d0de      	beq.n	80131a0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 80131e2:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 80131e6:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 80131ea:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 80131ee:	f8ad 100e 	strh.w	r1, [sp, #14]
 80131f2:	18ca      	adds	r2, r1, r3
 80131f4:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 80131f8:	f8ad 0010 	strh.w	r0, [sp, #16]
 80131fc:	1a9b      	subs	r3, r3, r2
 80131fe:	4639      	mov	r1, r7
 8013200:	2200      	movs	r2, #0
 8013202:	a803      	add	r0, sp, #12
 8013204:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013208:	f8ad 200c 	strh.w	r2, [sp, #12]
 801320c:	f7fc fa82 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8013210:	aa03      	add	r2, sp, #12
 8013212:	4631      	mov	r1, r6
 8013214:	4628      	mov	r0, r5
 8013216:	f012 fd45 	bl	8025ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801321a:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 801321e:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8013222:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8013226:	2f00      	cmp	r7, #0
 8013228:	dd03      	ble.n	8013232 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 801322a:	42bb      	cmp	r3, r7
 801322c:	da01      	bge.n	8013232 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 801322e:	42ba      	cmp	r2, r7
 8013230:	da0f      	bge.n	8013252 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 8013232:	9200      	str	r2, [sp, #0]
 8013234:	4622      	mov	r2, r4
 8013236:	4629      	mov	r1, r5
 8013238:	4630      	mov	r0, r6
 801323a:	f7ff ff1c 	bl	8013076 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 801323e:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 8013242:	4628      	mov	r0, r5
 8013244:	f012 fffd 	bl	8026242 <_ZN8touchgfx6Canvas6renderEh>
 8013248:	4604      	mov	r4, r0
 801324a:	4628      	mov	r0, r5
 801324c:	f013 f838 	bl	80262c0 <_ZN8touchgfx6CanvasD1Ev>
 8013250:	e7a7      	b.n	80131a2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 8013252:	1e7a      	subs	r2, r7, #1
 8013254:	b212      	sxth	r2, r2
 8013256:	9200      	str	r2, [sp, #0]
 8013258:	4629      	mov	r1, r5
 801325a:	4622      	mov	r2, r4
 801325c:	4630      	mov	r0, r6
 801325e:	f7ff ff0a 	bl	8013076 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 8013262:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8013266:	9300      	str	r3, [sp, #0]
 8013268:	463b      	mov	r3, r7
 801326a:	e7e3      	b.n	8013234 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 801326c:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 8013270:	deff      	udf	#255	; 0xff

08013272 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 8013272:	4770      	bx	lr

08013274 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 8013274:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013276:	b118      	cbz	r0, 8013280 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8013278:	6803      	ldr	r3, [r0, #0]
 801327a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801327e:	4718      	bx	r3
 8013280:	4770      	bx	lr

08013282 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 8013282:	680b      	ldr	r3, [r1, #0]
 8013284:	4608      	mov	r0, r1
 8013286:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 801328a:	4718      	bx	r3

0801328c <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 801328c:	680b      	ldr	r3, [r1, #0]
 801328e:	4608      	mov	r0, r1
 8013290:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8013294:	4718      	bx	r3

08013296 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 8013296:	4770      	bx	lr

08013298 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8013298:	b538      	push	{r3, r4, r5, lr}
 801329a:	680a      	ldr	r2, [r1, #0]
 801329c:	e9d0 540d 	ldrd	r5, r4, [r0, #52]	; 0x34
 80132a0:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 80132a4:	4608      	mov	r0, r1
 80132a6:	4790      	blx	r2
 80132a8:	4629      	mov	r1, r5
 80132aa:	4602      	mov	r2, r0
 80132ac:	4620      	mov	r0, r4
 80132ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80132b2:	f7ff bbb7 	b.w	8012a24 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

080132b8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 80132b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132bc:	4b3b      	ldr	r3, [pc, #236]	; (80133ac <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xf4>)
 80132be:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 80132c2:	881b      	ldrh	r3, [r3, #0]
 80132c4:	4293      	cmp	r3, r2
 80132c6:	b087      	sub	sp, #28
 80132c8:	4604      	mov	r4, r0
 80132ca:	4689      	mov	r9, r1
 80132cc:	d93e      	bls.n	801334c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 80132ce:	4b38      	ldr	r3, [pc, #224]	; (80133b0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xf8>)
 80132d0:	681b      	ldr	r3, [r3, #0]
 80132d2:	b92b      	cbnz	r3, 80132e0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x28>
 80132d4:	4b37      	ldr	r3, [pc, #220]	; (80133b4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xfc>)
 80132d6:	4a38      	ldr	r2, [pc, #224]	; (80133b8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x100>)
 80132d8:	4838      	ldr	r0, [pc, #224]	; (80133bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x104>)
 80132da:	21ae      	movs	r1, #174	; 0xae
 80132dc:	f014 f8e8 	bl	80274b0 <__assert_func>
 80132e0:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80132e4:	4b36      	ldr	r3, [pc, #216]	; (80133c0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x108>)
 80132e6:	681b      	ldr	r3, [r3, #0]
 80132e8:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 80132ec:	f1b8 0f00 	cmp.w	r8, #0
 80132f0:	d02c      	beq.n	801334c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 80132f2:	6803      	ldr	r3, [r0, #0]
 80132f4:	6945      	ldr	r5, [r0, #20]
 80132f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80132f8:	2d00      	cmp	r5, #0
 80132fa:	d052      	beq.n	80133a2 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xea>
 80132fc:	696f      	ldr	r7, [r5, #20]
 80132fe:	4798      	blx	r3
 8013300:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 8013304:	fb15 f000 	smulbb	r0, r5, r0
 8013308:	b280      	uxth	r0, r0
 801330a:	1c45      	adds	r5, r0, #1
 801330c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013310:	122d      	asrs	r5, r5, #8
 8013312:	d01b      	beq.n	801334c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8013314:	6823      	ldr	r3, [r4, #0]
 8013316:	4639      	mov	r1, r7
 8013318:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801331c:	4620      	mov	r0, r4
 801331e:	4798      	blx	r3
 8013320:	6823      	ldr	r3, [r4, #0]
 8013322:	4606      	mov	r6, r0
 8013324:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8013328:	4639      	mov	r1, r7
 801332a:	4620      	mov	r0, r4
 801332c:	4798      	blx	r3
 801332e:	b2ed      	uxtb	r5, r5
 8013330:	4683      	mov	fp, r0
 8013332:	b970      	cbnz	r0, 8013352 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x9a>
 8013334:	b96e      	cbnz	r6, 8013352 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x9a>
 8013336:	e9cd 6501 	strd	r6, r5, [sp, #4]
 801333a:	6823      	ldr	r3, [r4, #0]
 801333c:	9600      	str	r6, [sp, #0]
 801333e:	f8d3 5090 	ldr.w	r5, [r3, #144]	; 0x90
 8013342:	4642      	mov	r2, r8
 8013344:	463b      	mov	r3, r7
 8013346:	4649      	mov	r1, r9
 8013348:	4620      	mov	r0, r4
 801334a:	47a8      	blx	r5
 801334c:	b007      	add	sp, #28
 801334e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013352:	2e00      	cmp	r6, #0
 8013354:	ddfa      	ble.n	801334c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8013356:	6823      	ldr	r3, [r4, #0]
 8013358:	4639      	mov	r1, r7
 801335a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801335e:	4620      	mov	r0, r4
 8013360:	4798      	blx	r3
 8013362:	6823      	ldr	r3, [r4, #0]
 8013364:	4682      	mov	sl, r0
 8013366:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801336a:	4639      	mov	r1, r7
 801336c:	4620      	mov	r0, r4
 801336e:	4798      	blx	r3
 8013370:	4582      	cmp	sl, r0
 8013372:	bfde      	ittt	le
 8013374:	4603      	movle	r3, r0
 8013376:	4650      	movle	r0, sl
 8013378:	469a      	movle	sl, r3
 801337a:	ebaa 0300 	sub.w	r3, sl, r0
 801337e:	fb93 f3f6 	sdiv	r3, r3, r6
 8013382:	2b64      	cmp	r3, #100	; 0x64
 8013384:	dce2      	bgt.n	801334c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8013386:	e9cd b503 	strd	fp, r5, [sp, #12]
 801338a:	e9cd a601 	strd	sl, r6, [sp, #4]
 801338e:	6823      	ldr	r3, [r4, #0]
 8013390:	9000      	str	r0, [sp, #0]
 8013392:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 8013396:	4642      	mov	r2, r8
 8013398:	463b      	mov	r3, r7
 801339a:	4649      	mov	r1, r9
 801339c:	4620      	mov	r0, r4
 801339e:	47a8      	blx	r5
 80133a0:	e7d4      	b.n	801334c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 80133a2:	4798      	blx	r3
 80133a4:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 80133a8:	deff      	udf	#255	; 0xff
 80133aa:	bf00      	nop
 80133ac:	20014c80 	.word	0x20014c80
 80133b0:	20014c7c 	.word	0x20014c7c
 80133b4:	08029068 	.word	0x08029068
 80133b8:	0802c4fc 	.word	0x0802c4fc
 80133bc:	080290f6 	.word	0x080290f6
 80133c0:	20014c84 	.word	0x20014c84

080133c4 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 80133c4:	b510      	push	{r4, lr}
 80133c6:	2150      	movs	r1, #80	; 0x50
 80133c8:	4604      	mov	r4, r0
 80133ca:	f014 f842 	bl	8027452 <_ZdlPvj>
 80133ce:	4620      	mov	r0, r4
 80133d0:	bd10      	pop	{r4, pc}

080133d2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 80133d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133d6:	b08d      	sub	sp, #52	; 0x34
 80133d8:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 80133dc:	9309      	str	r3, [sp, #36]	; 0x24
 80133de:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 80133e2:	930a      	str	r3, [sp, #40]	; 0x28
 80133e4:	4606      	mov	r6, r0
 80133e6:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80133ea:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 80133ee:	f1b9 0f00 	cmp.w	r9, #0
 80133f2:	d117      	bne.n	8013424 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 80133f4:	2f00      	cmp	r7, #0
 80133f6:	dc7c      	bgt.n	80134f2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 80133f8:	f1b8 0f00 	cmp.w	r8, #0
 80133fc:	da01      	bge.n	8013402 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 80133fe:	2f00      	cmp	r7, #0
 8013400:	d17a      	bne.n	80134f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8013402:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013404:	9318      	str	r3, [sp, #96]	; 0x60
 8013406:	2300      	movs	r3, #0
 8013408:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 801340c:	6832      	ldr	r2, [r6, #0]
 801340e:	9907      	ldr	r1, [sp, #28]
 8013410:	f8d2 4090 	ldr.w	r4, [r2, #144]	; 0x90
 8013414:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013418:	4630      	mov	r0, r6
 801341a:	46a4      	mov	ip, r4
 801341c:	b00d      	add	sp, #52	; 0x34
 801341e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013422:	4760      	bx	ip
 8013424:	fb97 f4f9 	sdiv	r4, r7, r9
 8013428:	1e63      	subs	r3, r4, #1
 801342a:	9305      	str	r3, [sp, #20]
 801342c:	f1ba 0f00 	cmp.w	sl, #0
 8013430:	d122      	bne.n	8013478 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 8013432:	fb98 faf9 	sdiv	sl, r8, r9
 8013436:	fb03 f509 	mul.w	r5, r3, r9
 801343a:	f10a 0a02 	add.w	sl, sl, #2
 801343e:	9b05      	ldr	r3, [sp, #20]
 8013440:	459a      	cmp	sl, r3
 8013442:	d059      	beq.n	80134f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8013444:	42af      	cmp	r7, r5
 8013446:	dc5a      	bgt.n	80134fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 8013448:	45a8      	cmp	r8, r5
 801344a:	da01      	bge.n	8013450 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 801344c:	42af      	cmp	r7, r5
 801344e:	db0e      	blt.n	801346e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8013450:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013452:	9302      	str	r3, [sp, #8]
 8013454:	9905      	ldr	r1, [sp, #20]
 8013456:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8013458:	6832      	ldr	r2, [r6, #0]
 801345a:	434b      	muls	r3, r1
 801345c:	e9cd 5300 	strd	r5, r3, [sp]
 8013460:	9907      	ldr	r1, [sp, #28]
 8013462:	f8d2 b090 	ldr.w	fp, [r2, #144]	; 0x90
 8013466:	4630      	mov	r0, r6
 8013468:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801346c:	47d8      	blx	fp
 801346e:	9b05      	ldr	r3, [sp, #20]
 8013470:	3301      	adds	r3, #1
 8013472:	9305      	str	r3, [sp, #20]
 8013474:	444d      	add	r5, r9
 8013476:	e7e2      	b.n	801343e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 8013478:	fb97 f3fa 	sdiv	r3, r7, sl
 801347c:	3b01      	subs	r3, #1
 801347e:	9306      	str	r3, [sp, #24]
 8013480:	9a06      	ldr	r2, [sp, #24]
 8013482:	fb98 f3fa 	sdiv	r3, r8, sl
 8013486:	fb02 fb0a 	mul.w	fp, r2, sl
 801348a:	9a05      	ldr	r2, [sp, #20]
 801348c:	3302      	adds	r3, #2
 801348e:	fb02 f509 	mul.w	r5, r2, r9
 8013492:	930b      	str	r3, [sp, #44]	; 0x2c
 8013494:	45ab      	cmp	fp, r5
 8013496:	dd1d      	ble.n	80134d4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8013498:	42af      	cmp	r7, r5
 801349a:	dc08      	bgt.n	80134ae <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 801349c:	45a8      	cmp	r8, r5
 801349e:	da08      	bge.n	80134b2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 80134a0:	42af      	cmp	r7, r5
 80134a2:	da06      	bge.n	80134b2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 80134a4:	9b05      	ldr	r3, [sp, #20]
 80134a6:	3301      	adds	r3, #1
 80134a8:	9305      	str	r3, [sp, #20]
 80134aa:	444d      	add	r5, r9
 80134ac:	e7f2      	b.n	8013494 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 80134ae:	45a8      	cmp	r8, r5
 80134b0:	dcf8      	bgt.n	80134a4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 80134b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80134b4:	9302      	str	r3, [sp, #8]
 80134b6:	9905      	ldr	r1, [sp, #20]
 80134b8:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80134ba:	6832      	ldr	r2, [r6, #0]
 80134bc:	434b      	muls	r3, r1
 80134be:	e9cd 5300 	strd	r5, r3, [sp]
 80134c2:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 80134c6:	9907      	ldr	r1, [sp, #28]
 80134c8:	461c      	mov	r4, r3
 80134ca:	4630      	mov	r0, r6
 80134cc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80134d0:	47a0      	blx	r4
 80134d2:	e7e7      	b.n	80134a4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 80134d4:	45ab      	cmp	fp, r5
 80134d6:	db04      	blt.n	80134e2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 80134d8:	9b05      	ldr	r3, [sp, #20]
 80134da:	3301      	adds	r3, #1
 80134dc:	9305      	str	r3, [sp, #20]
 80134de:	444d      	add	r5, r9
 80134e0:	e7f8      	b.n	80134d4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 80134e2:	9b06      	ldr	r3, [sp, #24]
 80134e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80134e6:	3301      	adds	r3, #1
 80134e8:	4293      	cmp	r3, r2
 80134ea:	9306      	str	r3, [sp, #24]
 80134ec:	d004      	beq.n	80134f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 80134ee:	44d3      	add	fp, sl
 80134f0:	e7d0      	b.n	8013494 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 80134f2:	f1b8 0f00 	cmp.w	r8, #0
 80134f6:	dd84      	ble.n	8013402 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 80134f8:	b00d      	add	sp, #52	; 0x34
 80134fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134fe:	45a8      	cmp	r8, r5
 8013500:	dcb5      	bgt.n	801346e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8013502:	e7a5      	b.n	8013450 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

08013504 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 8013504:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013508:	f1b3 0900 	subs.w	r9, r3, #0
 801350c:	460d      	mov	r5, r1
 801350e:	4690      	mov	r8, r2
 8013510:	9f08      	ldr	r7, [sp, #32]
 8013512:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 8013516:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013518:	da18      	bge.n	801354c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 801351a:	2a01      	cmp	r2, #1
 801351c:	dd16      	ble.n	801354c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 801351e:	232d      	movs	r3, #45	; 0x2d
 8013520:	800b      	strh	r3, [r1, #0]
 8013522:	f1c9 0900 	rsb	r9, r9, #0
 8013526:	2001      	movs	r0, #1
 8013528:	2f00      	cmp	r7, #0
 801352a:	d111      	bne.n	8013550 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 801352c:	eba8 0100 	sub.w	r1, r8, r0
 8013530:	2302      	movs	r3, #2
 8013532:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8013536:	fb96 f3f3 	sdiv	r3, r6, r3
 801353a:	4a24      	ldr	r2, [pc, #144]	; (80135cc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 801353c:	444b      	add	r3, r9
 801353e:	b289      	uxth	r1, r1
 8013540:	fb93 f3f6 	sdiv	r3, r3, r6
 8013544:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013548:	f006 b977 	b.w	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 801354c:	2000      	movs	r0, #0
 801354e:	e7eb      	b.n	8013528 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 8013550:	dd39      	ble.n	80135c6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8013552:	fb99 f4f6 	sdiv	r4, r9, r6
 8013556:	eba8 0100 	sub.w	r1, r8, r0
 801355a:	4623      	mov	r3, r4
 801355c:	4a1b      	ldr	r2, [pc, #108]	; (80135cc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 801355e:	b289      	uxth	r1, r1
 8013560:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8013564:	f006 f969 	bl	801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8013568:	4628      	mov	r0, r5
 801356a:	f005 fddd 	bl	8019128 <_ZN8touchgfx7Unicode6strlenEPKt>
 801356e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013572:	4580      	cmp	r8, r0
 8013574:	dd27      	ble.n	80135c6 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8013576:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 801357a:	fb06 9314 	mls	r3, r6, r4, r9
 801357e:	3001      	adds	r0, #1
 8013580:	2200      	movs	r2, #0
 8013582:	f04f 090a 	mov.w	r9, #10
 8013586:	f107 3aff 	add.w	sl, r7, #4294967295
 801358a:	f04f 0e02 	mov.w	lr, #2
 801358e:	fb96 fefe 	sdiv	lr, r6, lr
 8013592:	4580      	cmp	r8, r0
 8013594:	4684      	mov	ip, r0
 8013596:	dd13      	ble.n	80135c0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 8013598:	fb09 f303 	mul.w	r3, r9, r3
 801359c:	4592      	cmp	sl, r2
 801359e:	f102 0201 	add.w	r2, r2, #1
 80135a2:	bf08      	it	eq
 80135a4:	4473      	addeq	r3, lr
 80135a6:	f100 0c01 	add.w	ip, r0, #1
 80135aa:	fb93 f4f6 	sdiv	r4, r3, r6
 80135ae:	4297      	cmp	r7, r2
 80135b0:	f104 0130 	add.w	r1, r4, #48	; 0x30
 80135b4:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 80135b8:	fb06 3314 	mls	r3, r6, r4, r3
 80135bc:	4660      	mov	r0, ip
 80135be:	d1e8      	bne.n	8013592 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 80135c0:	2300      	movs	r3, #0
 80135c2:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 80135c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80135ca:	bf00      	nop
 80135cc:	0802a6d8 	.word	0x0802a6d8

080135d0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 80135d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135d4:	461f      	mov	r7, r3
 80135d6:	b09b      	sub	sp, #108	; 0x6c
 80135d8:	681b      	ldr	r3, [r3, #0]
 80135da:	9104      	str	r1, [sp, #16]
 80135dc:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80135e0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80135e2:	4604      	mov	r4, r0
 80135e4:	4638      	mov	r0, r7
 80135e6:	4616      	mov	r6, r2
 80135e8:	4798      	blx	r3
 80135ea:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80135ee:	f848 0d28 	str.w	r0, [r8, #-40]!
 80135f2:	4640      	mov	r0, r8
 80135f4:	f7fe fffc 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80135f8:	f8b7 3114 	ldrh.w	r3, [r7, #276]	; 0x114
 80135fc:	1ac0      	subs	r0, r0, r3
 80135fe:	b200      	sxth	r0, r0
 8013600:	2800      	cmp	r0, #0
 8013602:	f2c0 80f1 	blt.w	80137e8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 8013606:	f8b7 211a 	ldrh.w	r2, [r7, #282]	; 0x11a
 801360a:	441a      	add	r2, r3
 801360c:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8013610:	1a9b      	subs	r3, r3, r2
 8013612:	b21b      	sxth	r3, r3
 8013614:	4298      	cmp	r0, r3
 8013616:	f280 80e7 	bge.w	80137e8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 801361a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801361c:	9302      	str	r3, [sp, #8]
 801361e:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 8013622:	9301      	str	r3, [sp, #4]
 8013624:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8013628:	9300      	str	r3, [sp, #0]
 801362a:	2214      	movs	r2, #20
 801362c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801362e:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 801382c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>
 8013632:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 8013830 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x260>
 8013636:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 8013834 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x264>
 801363a:	4641      	mov	r1, r8
 801363c:	4620      	mov	r0, r4
 801363e:	f7ff ff61 	bl	8013504 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8013642:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8013646:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801364a:	6833      	ldr	r3, [r6, #0]
 801364c:	f040 80cf 	bne.w	80137ee <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x21e>
 8013650:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8013652:	f8db 3000 	ldr.w	r3, [fp]
 8013656:	b92b      	cbnz	r3, 8013664 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x94>
 8013658:	4b70      	ldr	r3, [pc, #448]	; (801381c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x24c>)
 801365a:	4a71      	ldr	r2, [pc, #452]	; (8013820 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 801365c:	21ae      	movs	r1, #174	; 0xae
 801365e:	4871      	ldr	r0, [pc, #452]	; (8013824 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x254>)
 8013660:	f013 ff26 	bl	80274b0 <__assert_func>
 8013664:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8013668:	f8ba 3000 	ldrh.w	r3, [sl]
 801366c:	428b      	cmp	r3, r1
 801366e:	d803      	bhi.n	8013678 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 8013670:	4b6d      	ldr	r3, [pc, #436]	; (8013828 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x258>)
 8013672:	4a6b      	ldr	r2, [pc, #428]	; (8013820 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 8013674:	21af      	movs	r1, #175	; 0xaf
 8013676:	e7f2      	b.n	801365e <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x8e>
 8013678:	f8d9 0000 	ldr.w	r0, [r9]
 801367c:	f7f3 fb9a 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8013680:	4642      	mov	r2, r8
 8013682:	4601      	mov	r1, r0
 8013684:	4630      	mov	r0, r6
 8013686:	47a8      	blx	r5
 8013688:	6832      	ldr	r2, [r6, #0]
 801368a:	9005      	str	r0, [sp, #20]
 801368c:	6c15      	ldr	r5, [r2, #64]	; 0x40
 801368e:	f8db 2000 	ldr.w	r2, [fp]
 8013692:	2a00      	cmp	r2, #0
 8013694:	d0e0      	beq.n	8013658 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 8013696:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801369a:	f8ba 2000 	ldrh.w	r2, [sl]
 801369e:	428a      	cmp	r2, r1
 80136a0:	d9e6      	bls.n	8013670 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 80136a2:	f8d9 0000 	ldr.w	r0, [r9]
 80136a6:	f7f3 fb85 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80136aa:	4642      	mov	r2, r8
 80136ac:	4601      	mov	r1, r0
 80136ae:	4630      	mov	r0, r6
 80136b0:	47a8      	blx	r5
 80136b2:	9b05      	ldr	r3, [sp, #20]
 80136b4:	f8db 2000 	ldr.w	r2, [fp]
 80136b8:	fb13 f000 	smulbb	r0, r3, r0
 80136bc:	6833      	ldr	r3, [r6, #0]
 80136be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80136c0:	9305      	str	r3, [sp, #20]
 80136c2:	b285      	uxth	r5, r0
 80136c4:	2a00      	cmp	r2, #0
 80136c6:	d0c7      	beq.n	8013658 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 80136c8:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80136cc:	f8ba 2000 	ldrh.w	r2, [sl]
 80136d0:	428a      	cmp	r2, r1
 80136d2:	d9cd      	bls.n	8013670 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 80136d4:	f8d9 0000 	ldr.w	r0, [r9]
 80136d8:	f7f3 fb6c 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80136dc:	4642      	mov	r2, r8
 80136de:	4601      	mov	r1, r0
 80136e0:	9b05      	ldr	r3, [sp, #20]
 80136e2:	4630      	mov	r0, r6
 80136e4:	4798      	blx	r3
 80136e6:	4405      	add	r5, r0
 80136e8:	b2ad      	uxth	r5, r5
 80136ea:	683b      	ldr	r3, [r7, #0]
 80136ec:	9924      	ldr	r1, [sp, #144]	; 0x90
 80136ee:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80136f2:	f8b7 a0c6 	ldrh.w	sl, [r7, #198]	; 0xc6
 80136f6:	4638      	mov	r0, r7
 80136f8:	4798      	blx	r3
 80136fa:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80136fe:	2700      	movs	r7, #0
 8013700:	f848 0d3c 	str.w	r0, [r8, #-60]!
 8013704:	4640      	mov	r0, r8
 8013706:	f7fe ff73 	bl	80125f0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801370a:	4450      	add	r0, sl
 801370c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8013710:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013714:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 8013718:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 801371c:	f8ad 701c 	strh.w	r7, [sp, #28]
 8013720:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013724:	ad07      	add	r5, sp, #28
 8013726:	e895 0003 	ldmia.w	r5, {r0, r1}
 801372a:	f10d 0a24 	add.w	sl, sp, #36	; 0x24
 801372e:	e88a 0003 	stmia.w	sl, {r0, r1}
 8013732:	9904      	ldr	r1, [sp, #16]
 8013734:	4650      	mov	r0, sl
 8013736:	f7fb ffed 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 801373a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801373e:	42bb      	cmp	r3, r7
 8013740:	dd52      	ble.n	80137e8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 8013742:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8013746:	42bb      	cmp	r3, r7
 8013748:	dd4e      	ble.n	80137e8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 801374a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801374e:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8013752:	1a9b      	subs	r3, r3, r2
 8013754:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013758:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801375c:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8013760:	1a9b      	subs	r3, r3, r2
 8013762:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013766:	6823      	ldr	r3, [r4, #0]
 8013768:	4629      	mov	r1, r5
 801376a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801376c:	4620      	mov	r0, r4
 801376e:	4798      	blx	r3
 8013770:	4b2e      	ldr	r3, [pc, #184]	; (801382c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>)
 8013772:	681b      	ldr	r3, [r3, #0]
 8013774:	2b00      	cmp	r3, #0
 8013776:	f43f af6f 	beq.w	8013658 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 801377a:	4a2d      	ldr	r2, [pc, #180]	; (8013830 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x260>)
 801377c:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 8013780:	8812      	ldrh	r2, [r2, #0]
 8013782:	455a      	cmp	r2, fp
 8013784:	f67f af74 	bls.w	8013670 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 8013788:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801378c:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 8013790:	785b      	ldrb	r3, [r3, #1]
 8013792:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013794:	920d      	str	r2, [sp, #52]	; 0x34
 8013796:	f3c3 0001 	ubfx	r0, r3, #0, #2
 801379a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801379e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80137a2:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 80137a6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80137aa:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 80137ae:	960b      	str	r6, [sp, #44]	; 0x2c
 80137b0:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 80137b4:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 80137b8:	f88d 703b 	strb.w	r7, [sp, #59]	; 0x3b
 80137bc:	f88d 703c 	strb.w	r7, [sp, #60]	; 0x3c
 80137c0:	f7fd f8c8 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 80137c4:	4659      	mov	r1, fp
 80137c6:	4604      	mov	r4, r0
 80137c8:	f8d9 0000 	ldr.w	r0, [r9]
 80137cc:	f7f3 faf2 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80137d0:	ab10      	add	r3, sp, #64	; 0x40
 80137d2:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80137d6:	9703      	str	r7, [sp, #12]
 80137d8:	f8cd 8000 	str.w	r8, [sp]
 80137dc:	4653      	mov	r3, sl
 80137de:	e895 0006 	ldmia.w	r5, {r1, r2}
 80137e2:	4620      	mov	r0, r4
 80137e4:	f7f3 fa98 	bl	8006d18 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80137e8:	b01b      	add	sp, #108	; 0x6c
 80137ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137ee:	699d      	ldr	r5, [r3, #24]
 80137f0:	f8db 3000 	ldr.w	r3, [fp]
 80137f4:	2b00      	cmp	r3, #0
 80137f6:	f43f af2f 	beq.w	8013658 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 80137fa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80137fe:	f8ba 3000 	ldrh.w	r3, [sl]
 8013802:	428b      	cmp	r3, r1
 8013804:	f67f af34 	bls.w	8013670 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 8013808:	f8d9 0000 	ldr.w	r0, [r9]
 801380c:	f7f3 fad2 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8013810:	4642      	mov	r2, r8
 8013812:	4601      	mov	r1, r0
 8013814:	4630      	mov	r0, r6
 8013816:	47a8      	blx	r5
 8013818:	4605      	mov	r5, r0
 801381a:	e766      	b.n	80136ea <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x11a>
 801381c:	08029068 	.word	0x08029068
 8013820:	0802c4fc 	.word	0x0802c4fc
 8013824:	080290f6 	.word	0x080290f6
 8013828:	0802911f 	.word	0x0802911f
 801382c:	20014c7c 	.word	0x20014c7c
 8013830:	20014c80 	.word	0x20014c80
 8013834:	20014c88 	.word	0x20014c88

08013838 <_ZN8touchgfx15GraphScrollData5clearEv>:
 8013838:	b510      	push	{r4, lr}
 801383a:	4604      	mov	r4, r0
 801383c:	f7fe fd2a 	bl	8012294 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 8013840:	2300      	movs	r3, #0
 8013842:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 8013846:	bd10      	pop	{r4, pc}

08013848 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 8013848:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 801384c:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 8013850:	429a      	cmp	r2, r3
 8013852:	d101      	bne.n	8013858 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 8013854:	f7fe bf92 	b.w	801277c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 8013858:	4770      	bx	lr

0801385a <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 801385a:	b538      	push	{r3, r4, r5, lr}
 801385c:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 8013860:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 8013864:	42a5      	cmp	r5, r4
 8013866:	da04      	bge.n	8013872 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 8013868:	6803      	ldr	r3, [r0, #0]
 801386a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801386e:	4798      	blx	r3
 8013870:	bd38      	pop	{r3, r4, r5, pc}
 8013872:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8013876:	4408      	add	r0, r1
 8013878:	1b00      	subs	r0, r0, r4
 801387a:	e7f9      	b.n	8013870 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0801387c <_ZN8touchgfx15GraphScrollData8addValueEi>:
 801387c:	b570      	push	{r4, r5, r6, lr}
 801387e:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 8013882:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 8013886:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 801388a:	4604      	mov	r4, r0
 801388c:	1c6b      	adds	r3, r5, #1
 801388e:	b21b      	sxth	r3, r3
 8013890:	42ae      	cmp	r6, r5
 8013892:	bf08      	it	eq
 8013894:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 8013898:	fb93 f0f2 	sdiv	r0, r3, r2
 801389c:	fb02 3010 	mls	r0, r2, r0, r3
 80138a0:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 80138a4:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 80138a8:	4296      	cmp	r6, r2
 80138aa:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 80138ae:	d108      	bne.n	80138c2 <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 80138b0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80138b4:	f003 feed 	bl	8017692 <_ZNK8touchgfx8Drawable10invalidateEv>
 80138b8:	4620      	mov	r0, r4
 80138ba:	f7fe ff5f 	bl	801277c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 80138be:	4628      	mov	r0, r5
 80138c0:	bd70      	pop	{r4, r5, r6, pc}
 80138c2:	4629      	mov	r1, r5
 80138c4:	4620      	mov	r0, r4
 80138c6:	f7fe ff31 	bl	801272c <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 80138ca:	e7f8      	b.n	80138be <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

080138cc <_ZN8touchgfx13AnimatedImageD1Ev>:
 80138cc:	4770      	bx	lr

080138ce <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 80138ce:	b513      	push	{r0, r1, r4, lr}
 80138d0:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80138d4:	4604      	mov	r4, r0
 80138d6:	b13b      	cbz	r3, 80138e8 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1a>
 80138d8:	f002 ff06 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 80138dc:	4621      	mov	r1, r4
 80138de:	f002 ff3b 	bl	8016758 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 80138e2:	2300      	movs	r3, #0
 80138e4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80138e8:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 80138ec:	b163      	cbz	r3, 8013908 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3a>
 80138ee:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80138f0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80138f4:	a901      	add	r1, sp, #4
 80138f6:	4620      	mov	r0, r4
 80138f8:	f001 f922 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80138fc:	6823      	ldr	r3, [r4, #0]
 80138fe:	4620      	mov	r0, r4
 8013900:	695b      	ldr	r3, [r3, #20]
 8013902:	4798      	blx	r3
 8013904:	b002      	add	sp, #8
 8013906:	bd10      	pop	{r4, pc}
 8013908:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801390a:	e7f1      	b.n	80138f0 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x22>

0801390c <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 801390c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801390e:	8e05      	ldrh	r5, [r0, #48]	; 0x30
 8013910:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8013914:	42bd      	cmp	r5, r7
 8013916:	4604      	mov	r4, r0
 8013918:	d019      	beq.n	801394e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x42>
 801391a:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 801391c:	42be      	cmp	r6, r7
 801391e:	d016      	beq.n	801394e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x42>
 8013920:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 8013924:	f880 3037 	strb.w	r3, [r0, #55]	; 0x37
 8013928:	b199      	cbz	r1, 8013952 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x46>
 801392a:	b142      	cbz	r2, 801393e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 801392c:	a902      	add	r1, sp, #8
 801392e:	f821 6d04 	strh.w	r6, [r1, #-4]!
 8013932:	f001 f905 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013936:	6823      	ldr	r3, [r4, #0]
 8013938:	4620      	mov	r0, r4
 801393a:	695b      	ldr	r3, [r3, #20]
 801393c:	4798      	blx	r3
 801393e:	f002 fed3 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8013942:	4621      	mov	r1, r4
 8013944:	f002 fed6 	bl	80166f4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8013948:	2301      	movs	r3, #1
 801394a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 801394e:	b003      	add	sp, #12
 8013950:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013952:	2a00      	cmp	r2, #0
 8013954:	d0f3      	beq.n	801393e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 8013956:	a902      	add	r1, sp, #8
 8013958:	f821 5d04 	strh.w	r5, [r1, #-4]!
 801395c:	e7e9      	b.n	8013932 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0801395e <_ZN8touchgfx13AnimatedImageD0Ev>:
 801395e:	b510      	push	{r4, lr}
 8013960:	213c      	movs	r1, #60	; 0x3c
 8013962:	4604      	mov	r4, r0
 8013964:	f013 fd75 	bl	8027452 <_ZdlPvj>
 8013968:	4620      	mov	r0, r4
 801396a:	bd10      	pop	{r4, pc}

0801396c <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 801396c:	b510      	push	{r4, lr}
 801396e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8013972:	4604      	mov	r4, r0
 8013974:	b143      	cbz	r3, 8013988 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1c>
 8013976:	f002 feb7 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 801397a:	4621      	mov	r1, r4
 801397c:	f002 feec 	bl	8016758 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8013980:	2300      	movs	r3, #0
 8013982:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8013986:	bd10      	pop	{r4, pc}
 8013988:	f002 feae 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 801398c:	4621      	mov	r1, r4
 801398e:	f002 feb1 	bl	80166f4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8013992:	2301      	movs	r3, #1
 8013994:	e7f5      	b.n	8013982 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x16>

08013996 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013996:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 801399a:	b12a      	cbz	r2, 80139a8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801399c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80139a0:	b112      	cbz	r2, 80139a8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80139a2:	6803      	ldr	r3, [r0, #0]
 80139a4:	695b      	ldr	r3, [r3, #20]
 80139a6:	4718      	bx	r3
 80139a8:	4770      	bx	lr
	...

080139ac <_ZNK8touchgfx6Bitmap5getIdEv>:
 80139ac:	b508      	push	{r3, lr}
 80139ae:	4b05      	ldr	r3, [pc, #20]	; (80139c4 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 80139b0:	681b      	ldr	r3, [r3, #0]
 80139b2:	b92b      	cbnz	r3, 80139c0 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 80139b4:	4b04      	ldr	r3, [pc, #16]	; (80139c8 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 80139b6:	4a05      	ldr	r2, [pc, #20]	; (80139cc <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 80139b8:	4805      	ldr	r0, [pc, #20]	; (80139d0 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 80139ba:	2187      	movs	r1, #135	; 0x87
 80139bc:	f013 fd78 	bl	80274b0 <__assert_func>
 80139c0:	8800      	ldrh	r0, [r0, #0]
 80139c2:	bd08      	pop	{r3, pc}
 80139c4:	20014cb4 	.word	0x20014cb4
 80139c8:	0802c52a 	.word	0x0802c52a
 80139cc:	0802c608 	.word	0x0802c608
 80139d0:	0802c566 	.word	0x0802c566

080139d4 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 80139d4:	b538      	push	{r3, r4, r5, lr}
 80139d6:	4604      	mov	r4, r0
 80139d8:	4608      	mov	r0, r1
 80139da:	460d      	mov	r5, r1
 80139dc:	f7ff ffe6 	bl	80139ac <_ZNK8touchgfx6Bitmap5getIdEv>
 80139e0:	4629      	mov	r1, r5
 80139e2:	8620      	strh	r0, [r4, #48]	; 0x30
 80139e4:	4620      	mov	r0, r4
 80139e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80139ea:	f001 b8a9 	b.w	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

080139ee <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 80139ee:	b510      	push	{r4, lr}
 80139f0:	4604      	mov	r4, r0
 80139f2:	4608      	mov	r0, r1
 80139f4:	f7ff ffda 	bl	80139ac <_ZNK8touchgfx6Bitmap5getIdEv>
 80139f8:	8660      	strh	r0, [r4, #50]	; 0x32
 80139fa:	bd10      	pop	{r4, pc}

080139fc <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 80139fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80139fe:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8013a02:	4604      	mov	r4, r0
 8013a04:	2b00      	cmp	r3, #0
 8013a06:	d047      	beq.n	8013a98 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9c>
 8013a08:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8013a0c:	f890 2034 	ldrb.w	r2, [r0, #52]	; 0x34
 8013a10:	3301      	adds	r3, #1
 8013a12:	b2db      	uxtb	r3, r3
 8013a14:	429a      	cmp	r2, r3
 8013a16:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 8013a1a:	d13d      	bne.n	8013a98 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9c>
 8013a1c:	2300      	movs	r3, #0
 8013a1e:	ad02      	add	r5, sp, #8
 8013a20:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 8013a24:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8013a26:	f825 3d04 	strh.w	r3, [r5, #-4]!
 8013a2a:	4628      	mov	r0, r5
 8013a2c:	f7ff ffbe 	bl	80139ac <_ZNK8touchgfx6Bitmap5getIdEv>
 8013a30:	8e62      	ldrh	r2, [r4, #50]	; 0x32
 8013a32:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8013a36:	4282      	cmp	r2, r0
 8013a38:	d100      	bne.n	8013a3c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x40>
 8013a3a:	b123      	cbz	r3, 8013a46 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x4a>
 8013a3c:	8e22      	ldrh	r2, [r4, #48]	; 0x30
 8013a3e:	4282      	cmp	r2, r0
 8013a40:	d12e      	bne.n	8013aa0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa4>
 8013a42:	2b00      	cmp	r3, #0
 8013a44:	d032      	beq.n	8013aac <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xb0>
 8013a46:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8013a4a:	b936      	cbnz	r6, 8013a5a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x5e>
 8013a4c:	f002 fe4c 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8013a50:	4621      	mov	r1, r4
 8013a52:	f002 fe81 	bl	8016758 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8013a56:	f884 6038 	strb.w	r6, [r4, #56]	; 0x38
 8013a5a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8013a5c:	b140      	cbz	r0, 8013a70 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x74>
 8013a5e:	6803      	ldr	r3, [r0, #0]
 8013a60:	68db      	ldr	r3, [r3, #12]
 8013a62:	4798      	blx	r3
 8013a64:	b120      	cbz	r0, 8013a70 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x74>
 8013a66:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8013a68:	6803      	ldr	r3, [r0, #0]
 8013a6a:	4621      	mov	r1, r4
 8013a6c:	689b      	ldr	r3, [r3, #8]
 8013a6e:	4798      	blx	r3
 8013a70:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013a74:	b183      	cbz	r3, 8013a98 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9c>
 8013a76:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8013a7a:	b16b      	cbz	r3, 8013a98 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9c>
 8013a7c:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8013a80:	b163      	cbz	r3, 8013a9c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa0>
 8013a82:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013a84:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013a88:	4620      	mov	r0, r4
 8013a8a:	4629      	mov	r1, r5
 8013a8c:	f001 f858 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013a90:	6823      	ldr	r3, [r4, #0]
 8013a92:	4620      	mov	r0, r4
 8013a94:	695b      	ldr	r3, [r3, #20]
 8013a96:	4798      	blx	r3
 8013a98:	b002      	add	sp, #8
 8013a9a:	bd70      	pop	{r4, r5, r6, pc}
 8013a9c:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8013a9e:	e7f1      	b.n	8013a84 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x88>
 8013aa0:	b123      	cbz	r3, 8013aac <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xb0>
 8013aa2:	3801      	subs	r0, #1
 8013aa4:	b280      	uxth	r0, r0
 8013aa6:	f8ad 0004 	strh.w	r0, [sp, #4]
 8013aaa:	e7ed      	b.n	8013a88 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x8c>
 8013aac:	3001      	adds	r0, #1
 8013aae:	e7f9      	b.n	8013aa4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>

08013ab0 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 8013ab0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013ab2:	ac02      	add	r4, sp, #8
 8013ab4:	6803      	ldr	r3, [r0, #0]
 8013ab6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8013ab8:	f824 1d04 	strh.w	r1, [r4, #-4]!
 8013abc:	4605      	mov	r5, r0
 8013abe:	4621      	mov	r1, r4
 8013ac0:	4616      	mov	r6, r2
 8013ac2:	4798      	blx	r3
 8013ac4:	682b      	ldr	r3, [r5, #0]
 8013ac6:	4621      	mov	r1, r4
 8013ac8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8013aca:	f8ad 6004 	strh.w	r6, [sp, #4]
 8013ace:	4628      	mov	r0, r5
 8013ad0:	4798      	blx	r3
 8013ad2:	b002      	add	sp, #8
 8013ad4:	bd70      	pop	{r4, r5, r6, pc}

08013ad6 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 8013ad6:	2300      	movs	r3, #0
 8013ad8:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 8013adc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 8013ae0:	4770      	bx	lr

08013ae2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 8013ae2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8013ae6:	4770      	bx	lr

08013ae8 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8013ae8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8013aec:	4770      	bx	lr

08013aee <_ZN8touchgfx13ScalableImageD1Ev>:
 8013aee:	4770      	bx	lr

08013af0 <_ZN8touchgfx13ScalableImageD0Ev>:
 8013af0:	b510      	push	{r4, lr}
 8013af2:	212c      	movs	r1, #44	; 0x2c
 8013af4:	4604      	mov	r4, r0
 8013af6:	f013 fcac 	bl	8027452 <_ZdlPvj>
 8013afa:	4620      	mov	r0, r4
 8013afc:	bd10      	pop	{r4, pc}

08013afe <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8013afe:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013b00:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013b04:	2bff      	cmp	r3, #255	; 0xff
 8013b06:	4605      	mov	r5, r0
 8013b08:	d11e      	bne.n	8013b48 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 8013b0a:	f101 0426 	add.w	r4, r1, #38	; 0x26
 8013b0e:	4621      	mov	r1, r4
 8013b10:	4668      	mov	r0, sp
 8013b12:	f005 ffef 	bl	8019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b16:	4620      	mov	r0, r4
 8013b18:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 8013b1c:	f005 ff62 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b20:	4286      	cmp	r6, r0
 8013b22:	d111      	bne.n	8013b48 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 8013b24:	4621      	mov	r1, r4
 8013b26:	a802      	add	r0, sp, #8
 8013b28:	f005 ffe4 	bl	8019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b2c:	4620      	mov	r0, r4
 8013b2e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8013b32:	f005 ff9b 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b36:	4286      	cmp	r6, r0
 8013b38:	d106      	bne.n	8013b48 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 8013b3a:	4621      	mov	r1, r4
 8013b3c:	4628      	mov	r0, r5
 8013b3e:	f005 ffd9 	bl	8019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b42:	4628      	mov	r0, r5
 8013b44:	b004      	add	sp, #16
 8013b46:	bd70      	pop	{r4, r5, r6, pc}
 8013b48:	2300      	movs	r3, #0
 8013b4a:	802b      	strh	r3, [r5, #0]
 8013b4c:	806b      	strh	r3, [r5, #2]
 8013b4e:	80ab      	strh	r3, [r5, #4]
 8013b50:	80eb      	strh	r3, [r5, #6]
 8013b52:	e7f6      	b.n	8013b42 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x44>

08013b54 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8013b54:	b538      	push	{r3, r4, r5, lr}
 8013b56:	2300      	movs	r3, #0
 8013b58:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013b5c:	8083      	strh	r3, [r0, #4]
 8013b5e:	80c3      	strh	r3, [r0, #6]
 8013b60:	8103      	strh	r3, [r0, #8]
 8013b62:	8143      	strh	r3, [r0, #10]
 8013b64:	8183      	strh	r3, [r0, #12]
 8013b66:	81c3      	strh	r3, [r0, #14]
 8013b68:	8203      	strh	r3, [r0, #16]
 8013b6a:	8243      	strh	r3, [r0, #18]
 8013b6c:	61c3      	str	r3, [r0, #28]
 8013b6e:	8403      	strh	r3, [r0, #32]
 8013b70:	8443      	strh	r3, [r0, #34]	; 0x22
 8013b72:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8013b76:	2501      	movs	r5, #1
 8013b78:	4b08      	ldr	r3, [pc, #32]	; (8013b9c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 8013b7a:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 8013b7e:	6003      	str	r3, [r0, #0]
 8013b80:	880b      	ldrh	r3, [r1, #0]
 8013b82:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013b84:	23ff      	movs	r3, #255	; 0xff
 8013b86:	4604      	mov	r4, r0
 8013b88:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013b8c:	f000 ffd8 	bl	8014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013b90:	4b03      	ldr	r3, [pc, #12]	; (8013ba0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8013b92:	6023      	str	r3, [r4, #0]
 8013b94:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8013b98:	4620      	mov	r0, r4
 8013b9a:	bd38      	pop	{r3, r4, r5, pc}
 8013b9c:	0802c878 	.word	0x0802c878
 8013ba0:	0802c644 	.word	0x0802c644

08013ba4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8013ba4:	4603      	mov	r3, r0
 8013ba6:	3026      	adds	r0, #38	; 0x26
 8013ba8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8013bac:	b90b      	cbnz	r3, 8013bb2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8013bae:	f003 beb0 	b.w	8017912 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8013bb2:	f003 bebe 	b.w	8017932 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08013bb8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8013bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bbc:	4604      	mov	r4, r0
 8013bbe:	469b      	mov	fp, r3
 8013bc0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8013bc4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013bc8:	f9b1 6000 	ldrsh.w	r6, [r1]
 8013bcc:	8888      	ldrh	r0, [r1, #4]
 8013bce:	b0b3      	sub	sp, #204	; 0xcc
 8013bd0:	4430      	add	r0, r6
 8013bd2:	b280      	uxth	r0, r0
 8013bd4:	9206      	str	r2, [sp, #24]
 8013bd6:	fa0f fe80 	sxth.w	lr, r0
 8013bda:	2200      	movs	r2, #0
 8013bdc:	4596      	cmp	lr, r2
 8013bde:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 8013be2:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 8013be6:	9211      	str	r2, [sp, #68]	; 0x44
 8013be8:	f340 811a 	ble.w	8013e20 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8013bec:	45b4      	cmp	ip, r6
 8013bee:	f340 8117 	ble.w	8013e20 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8013bf2:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8013bf6:	88ca      	ldrh	r2, [r1, #6]
 8013bf8:	442a      	add	r2, r5
 8013bfa:	b292      	uxth	r2, r2
 8013bfc:	b211      	sxth	r1, r2
 8013bfe:	2900      	cmp	r1, #0
 8013c00:	f340 810e 	ble.w	8013e20 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8013c04:	42ab      	cmp	r3, r5
 8013c06:	f340 810b 	ble.w	8013e20 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 8013c0a:	45f4      	cmp	ip, lr
 8013c0c:	bfb8      	it	lt
 8013c0e:	fa1f f08c 	uxthlt.w	r0, ip
 8013c12:	428b      	cmp	r3, r1
 8013c14:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013c18:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013c1c:	bfb8      	it	lt
 8013c1e:	b29a      	uxthlt	r2, r3
 8013c20:	1b80      	subs	r0, r0, r6
 8013c22:	1b52      	subs	r2, r2, r5
 8013c24:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8013c28:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8013c2c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013c30:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8013c34:	ab11      	add	r3, sp, #68	; 0x44
 8013c36:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013c3a:	6822      	ldr	r2, [r4, #0]
 8013c3c:	9307      	str	r3, [sp, #28]
 8013c3e:	ad13      	add	r5, sp, #76	; 0x4c
 8013c40:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8013c42:	e885 0003 	stmia.w	r5, {r0, r1}
 8013c46:	4629      	mov	r1, r5
 8013c48:	4620      	mov	r0, r4
 8013c4a:	4790      	blx	r2
 8013c4c:	4621      	mov	r1, r4
 8013c4e:	a815      	add	r0, sp, #84	; 0x54
 8013c50:	f003 fdba 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013c54:	a815      	add	r0, sp, #84	; 0x54
 8013c56:	f002 fb71 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c5a:	9b07      	ldr	r3, [sp, #28]
 8013c5c:	1d26      	adds	r6, r4, #4
 8013c5e:	4618      	mov	r0, r3
 8013c60:	4631      	mov	r1, r6
 8013c62:	f002 fbaf 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013c66:	4628      	mov	r0, r5
 8013c68:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8013c6c:	f002 fb66 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c70:	4628      	mov	r0, r5
 8013c72:	f005 ffd3 	bl	8019c1c <_ZNK8touchgfx6Bitmap7getDataEv>
 8013c76:	9007      	str	r0, [sp, #28]
 8013c78:	2800      	cmp	r0, #0
 8013c7a:	f000 80ce 	beq.w	8013e1a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
 8013c7e:	f8db 2000 	ldr.w	r2, [fp]
 8013c82:	9209      	str	r2, [sp, #36]	; 0x24
 8013c84:	f8db 2004 	ldr.w	r2, [fp, #4]
 8013c88:	920a      	str	r2, [sp, #40]	; 0x28
 8013c8a:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013c8e:	920b      	str	r2, [sp, #44]	; 0x2c
 8013c90:	f8db 200c 	ldr.w	r2, [fp, #12]
 8013c94:	920c      	str	r2, [sp, #48]	; 0x30
 8013c96:	f8da 2000 	ldr.w	r2, [sl]
 8013c9a:	920d      	str	r2, [sp, #52]	; 0x34
 8013c9c:	f8da 2004 	ldr.w	r2, [sl, #4]
 8013ca0:	920e      	str	r2, [sp, #56]	; 0x38
 8013ca2:	f8da 2008 	ldr.w	r2, [sl, #8]
 8013ca6:	920f      	str	r2, [sp, #60]	; 0x3c
 8013ca8:	f8da 200c 	ldr.w	r2, [sl, #12]
 8013cac:	9210      	str	r2, [sp, #64]	; 0x40
 8013cae:	a90d      	add	r1, sp, #52	; 0x34
 8013cb0:	4632      	mov	r2, r6
 8013cb2:	a809      	add	r0, sp, #36	; 0x24
 8013cb4:	f002 fb6a 	bl	801638c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8013cb8:	4632      	mov	r2, r6
 8013cba:	a90e      	add	r1, sp, #56	; 0x38
 8013cbc:	a80a      	add	r0, sp, #40	; 0x28
 8013cbe:	f002 fb65 	bl	801638c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8013cc2:	4632      	mov	r2, r6
 8013cc4:	a90f      	add	r1, sp, #60	; 0x3c
 8013cc6:	a80b      	add	r0, sp, #44	; 0x2c
 8013cc8:	f002 fb60 	bl	801638c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8013ccc:	4632      	mov	r2, r6
 8013cce:	a910      	add	r1, sp, #64	; 0x40
 8013cd0:	a80c      	add	r0, sp, #48	; 0x30
 8013cd2:	f002 fb5b 	bl	801638c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8013cd6:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8013cda:	edd7 3a00 	vldr	s7, [r7]
 8013cde:	ed97 5a01 	vldr	s10, [r7, #4]
 8013ce2:	edd9 2a00 	vldr	s5, [r9]
 8013ce6:	ed98 3a00 	vldr	s6, [r8]
 8013cea:	ed99 4a01 	vldr	s8, [r9, #4]
 8013cee:	edd8 4a01 	vldr	s9, [r8, #4]
 8013cf2:	edd9 5a02 	vldr	s11, [r9, #8]
 8013cf6:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8013cfa:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8013cfe:	edcd 2a20 	vstr	s5, [sp, #128]	; 0x80
 8013d02:	eef0 6a67 	vmov.f32	s13, s15
 8013d06:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8013d0a:	ed8d 3a21 	vstr	s6, [sp, #132]	; 0x84
 8013d0e:	eeb0 7a67 	vmov.f32	s14, s15
 8013d12:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8013d16:	edcd 3a22 	vstr	s7, [sp, #136]	; 0x88
 8013d1a:	eeb0 6a67 	vmov.f32	s12, s15
 8013d1e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8013d22:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8013d26:	ed8d 4a25 	vstr	s8, [sp, #148]	; 0x94
 8013d2a:	ee16 6a10 	vmov	r6, s12
 8013d2e:	eeb0 6a67 	vmov.f32	s12, s15
 8013d32:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8013d36:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8013d3a:	edcd 4a26 	vstr	s9, [sp, #152]	; 0x98
 8013d3e:	ee16 0a10 	vmov	r0, s12
 8013d42:	eeb0 6a67 	vmov.f32	s12, s15
 8013d46:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8013d4a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8013d4e:	ed8d 5a27 	vstr	s10, [sp, #156]	; 0x9c
 8013d52:	ee16 1a10 	vmov	r1, s12
 8013d56:	eeb0 6a67 	vmov.f32	s12, s15
 8013d5a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8013d5e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8013d62:	ee16 2a10 	vmov	r2, s12
 8013d66:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8013d6a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8013d6e:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8013d72:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8013d76:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8013d7a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8013d7e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8013d82:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8013d86:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8013d8a:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8013d8e:	68ff      	ldr	r7, [r7, #12]
 8013d90:	9624      	str	r6, [sp, #144]	; 0x90
 8013d92:	edcd 5a2a 	vstr	s11, [sp, #168]	; 0xa8
 8013d96:	922d      	str	r2, [sp, #180]	; 0xb4
 8013d98:	4a23      	ldr	r2, [pc, #140]	; (8013e28 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
 8013d9a:	9b06      	ldr	r3, [sp, #24]
 8013d9c:	8812      	ldrh	r2, [r2, #0]
 8013d9e:	9317      	str	r3, [sp, #92]	; 0x5c
 8013da0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8013da4:	9b07      	ldr	r3, [sp, #28]
 8013da6:	9218      	str	r2, [sp, #96]	; 0x60
 8013da8:	4628      	mov	r0, r5
 8013daa:	9319      	str	r3, [sp, #100]	; 0x64
 8013dac:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8013db0:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8013db4:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8013db8:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8013dbc:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8013dc0:	9731      	str	r7, [sp, #196]	; 0xc4
 8013dc2:	f005 ff5d 	bl	8019c80 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013dc6:	901a      	str	r0, [sp, #104]	; 0x68
 8013dc8:	4628      	mov	r0, r5
 8013dca:	f005 fe0b 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013dce:	901b      	str	r0, [sp, #108]	; 0x6c
 8013dd0:	4628      	mov	r0, r5
 8013dd2:	f005 fe4b 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013dd6:	901c      	str	r0, [sp, #112]	; 0x70
 8013dd8:	4628      	mov	r0, r5
 8013dda:	f005 fe03 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013dde:	4b13      	ldr	r3, [pc, #76]	; (8013e2c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
 8013de0:	901d      	str	r0, [sp, #116]	; 0x74
 8013de2:	681b      	ldr	r3, [r3, #0]
 8013de4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013de8:	b10a      	cbz	r2, 8013dee <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
 8013dea:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8013dec:	b905      	cbnz	r5, 8013df0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
 8013dee:	689d      	ldr	r5, [r3, #8]
 8013df0:	682b      	ldr	r3, [r5, #0]
 8013df2:	4620      	mov	r0, r4
 8013df4:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8013df6:	f7ff fed5 	bl	8013ba4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 8013dfa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013dfe:	9304      	str	r3, [sp, #16]
 8013e00:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8013e04:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8013e08:	ab13      	add	r3, sp, #76	; 0x4c
 8013e0a:	9301      	str	r3, [sp, #4]
 8013e0c:	ab15      	add	r3, sp, #84	; 0x54
 8013e0e:	9300      	str	r3, [sp, #0]
 8013e10:	aa1e      	add	r2, sp, #120	; 0x78
 8013e12:	ab19      	add	r3, sp, #100	; 0x64
 8013e14:	a917      	add	r1, sp, #92	; 0x5c
 8013e16:	4628      	mov	r0, r5
 8013e18:	47b0      	blx	r6
 8013e1a:	b033      	add	sp, #204	; 0xcc
 8013e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e20:	2300      	movs	r3, #0
 8013e22:	9312      	str	r3, [sp, #72]	; 0x48
 8013e24:	e706      	b.n	8013c34 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 8013e26:	bf00      	nop
 8013e28:	20014c06 	.word	0x20014c06
 8013e2c:	20014c0c 	.word	0x20014c0c

08013e30 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8013e30:	b570      	push	{r4, r5, r6, lr}
 8013e32:	ed2d 8b04 	vpush	{d8-d9}
 8013e36:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8013e3a:	b098      	sub	sp, #96	; 0x60
 8013e3c:	4604      	mov	r4, r0
 8013e3e:	460e      	mov	r6, r1
 8013e40:	2b00      	cmp	r3, #0
 8013e42:	d065      	beq.n	8013f10 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 8013e44:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013e48:	ed9f 8a38 	vldr	s16, [pc, #224]	; 8013f2c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 8013e4c:	ee09 3a10 	vmov	s18, r3
 8013e50:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013e54:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8013e58:	ee08 3a90 	vmov	s17, r3
 8013e5c:	4628      	mov	r0, r5
 8013e5e:	4b34      	ldr	r3, [pc, #208]	; (8013f30 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8013e60:	930c      	str	r3, [sp, #48]	; 0x30
 8013e62:	930d      	str	r3, [sp, #52]	; 0x34
 8013e64:	930e      	str	r3, [sp, #56]	; 0x38
 8013e66:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e68:	f005 fdbc 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013e6c:	ee07 0a90 	vmov	s15, r0
 8013e70:	4628      	mov	r0, r5
 8013e72:	eef8 9a67 	vcvt.f32.u32	s19, s15
 8013e76:	f005 fdf9 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013e7a:	4b2e      	ldr	r3, [pc, #184]	; (8013f34 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 8013e7c:	781b      	ldrb	r3, [r3, #0]
 8013e7e:	ee07 0a90 	vmov	s15, r0
 8013e82:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8013e86:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8013e8a:	2b01      	cmp	r3, #1
 8013e8c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8013e90:	ee39 9a08 	vadd.f32	s18, s18, s16
 8013e94:	ee78 8a88 	vadd.f32	s17, s17, s16
 8013e98:	eef0 7a48 	vmov.f32	s15, s16
 8013e9c:	d13c      	bne.n	8013f18 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 8013e9e:	eef0 6a69 	vmov.f32	s13, s19
 8013ea2:	eeb0 6a47 	vmov.f32	s12, s14
 8013ea6:	eef0 5a47 	vmov.f32	s11, s14
 8013eaa:	ee19 3a90 	vmov	r3, s19
 8013eae:	eeb0 7a48 	vmov.f32	s14, s16
 8013eb2:	eef0 9a48 	vmov.f32	s19, s16
 8013eb6:	9314      	str	r3, [sp, #80]	; 0x50
 8013eb8:	ab14      	add	r3, sp, #80	; 0x50
 8013eba:	9303      	str	r3, [sp, #12]
 8013ebc:	ab10      	add	r3, sp, #64	; 0x40
 8013ebe:	9302      	str	r3, [sp, #8]
 8013ec0:	ab0c      	add	r3, sp, #48	; 0x30
 8013ec2:	9301      	str	r3, [sp, #4]
 8013ec4:	ab08      	add	r3, sp, #32
 8013ec6:	9300      	str	r3, [sp, #0]
 8013ec8:	2200      	movs	r2, #0
 8013eca:	ab04      	add	r3, sp, #16
 8013ecc:	4631      	mov	r1, r6
 8013ece:	4620      	mov	r0, r4
 8013ed0:	edcd 7a04 	vstr	s15, [sp, #16]
 8013ed4:	ed8d 9a05 	vstr	s18, [sp, #20]
 8013ed8:	ed8d 9a06 	vstr	s18, [sp, #24]
 8013edc:	edcd 7a07 	vstr	s15, [sp, #28]
 8013ee0:	edcd 7a08 	vstr	s15, [sp, #32]
 8013ee4:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 8013ee8:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 8013eec:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 8013ef0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8013ef4:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 8013ef8:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 8013efc:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8013f00:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8013f04:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 8013f08:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 8013f0c:	f7ff fe54 	bl	8013bb8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8013f10:	b018      	add	sp, #96	; 0x60
 8013f12:	ecbd 8b04 	vpop	{d8-d9}
 8013f16:	bd70      	pop	{r4, r5, r6, pc}
 8013f18:	eef0 6a47 	vmov.f32	s13, s14
 8013f1c:	eef0 5a69 	vmov.f32	s11, s19
 8013f20:	eeb0 6a48 	vmov.f32	s12, s16
 8013f24:	ee18 3a10 	vmov	r3, s16
 8013f28:	e7c5      	b.n	8013eb6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 8013f2a:	bf00      	nop
 8013f2c:	00000000 	.word	0x00000000
 8013f30:	42c80000 	.word	0x42c80000
 8013f34:	20014c04 	.word	0x20014c04

08013f38 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013f38:	2000      	movs	r0, #0
 8013f3a:	4770      	bx	lr

08013f3c <_ZN8touchgfx8TextAreaD1Ev>:
 8013f3c:	4770      	bx	lr
	...

08013f40 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8013f40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013f44:	4b1a      	ldr	r3, [pc, #104]	; (8013fb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013f46:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013f48:	881b      	ldrh	r3, [r3, #0]
 8013f4a:	428b      	cmp	r3, r1
 8013f4c:	4604      	mov	r4, r0
 8013f4e:	d92d      	bls.n	8013fac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 8013f50:	4b18      	ldr	r3, [pc, #96]	; (8013fb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8013f52:	681b      	ldr	r3, [r3, #0]
 8013f54:	b92b      	cbnz	r3, 8013f62 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 8013f56:	4b18      	ldr	r3, [pc, #96]	; (8013fb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8013f58:	4a18      	ldr	r2, [pc, #96]	; (8013fbc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8013f5a:	4819      	ldr	r0, [pc, #100]	; (8013fc0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8013f5c:	21ae      	movs	r1, #174	; 0xae
 8013f5e:	f013 faa7 	bl	80274b0 <__assert_func>
 8013f62:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013f66:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013f6a:	4b16      	ldr	r3, [pc, #88]	; (8013fc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 8013f6c:	7855      	ldrb	r5, [r2, #1]
 8013f6e:	681b      	ldr	r3, [r3, #0]
 8013f70:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8013f74:	6833      	ldr	r3, [r6, #0]
 8013f76:	69df      	ldr	r7, [r3, #28]
 8013f78:	4b13      	ldr	r3, [pc, #76]	; (8013fc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 8013f7a:	6818      	ldr	r0, [r3, #0]
 8013f7c:	f7f2 ff1a 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8013f80:	6823      	ldr	r3, [r4, #0]
 8013f82:	4680      	mov	r8, r0
 8013f84:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013f86:	4620      	mov	r0, r4
 8013f88:	4798      	blx	r3
 8013f8a:	6823      	ldr	r3, [r4, #0]
 8013f8c:	4681      	mov	r9, r0
 8013f8e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013f92:	4620      	mov	r0, r4
 8013f94:	4798      	blx	r3
 8013f96:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013f9a:	9000      	str	r0, [sp, #0]
 8013f9c:	464b      	mov	r3, r9
 8013f9e:	4642      	mov	r2, r8
 8013fa0:	4629      	mov	r1, r5
 8013fa2:	4630      	mov	r0, r6
 8013fa4:	47b8      	blx	r7
 8013fa6:	b003      	add	sp, #12
 8013fa8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013fac:	2000      	movs	r0, #0
 8013fae:	e7fa      	b.n	8013fa6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 8013fb0:	20014c80 	.word	0x20014c80
 8013fb4:	20014c7c 	.word	0x20014c7c
 8013fb8:	08029068 	.word	0x08029068
 8013fbc:	0802c740 	.word	0x0802c740
 8013fc0:	080290f6 	.word	0x080290f6
 8013fc4:	20014c84 	.word	0x20014c84
 8013fc8:	20014c88 	.word	0x20014c88

08013fcc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8013fcc:	b40e      	push	{r1, r2, r3}
 8013fce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fd2:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 80140c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 8013fd6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013fd8:	f8b9 3000 	ldrh.w	r3, [r9]
 8013fdc:	4293      	cmp	r3, r2
 8013fde:	b09c      	sub	sp, #112	; 0x70
 8013fe0:	4604      	mov	r4, r0
 8013fe2:	d965      	bls.n	80140b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 8013fe4:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 80140c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 8013fe8:	ab26      	add	r3, sp, #152	; 0x98
 8013fea:	9302      	str	r3, [sp, #8]
 8013fec:	f8da 3000 	ldr.w	r3, [sl]
 8013ff0:	b92b      	cbnz	r3, 8013ffe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 8013ff2:	4b30      	ldr	r3, [pc, #192]	; (80140b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 8013ff4:	4a30      	ldr	r2, [pc, #192]	; (80140b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 8013ff6:	21ae      	movs	r1, #174	; 0xae
 8013ff8:	4830      	ldr	r0, [pc, #192]	; (80140bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 8013ffa:	f013 fa59 	bl	80274b0 <__assert_func>
 8013ffe:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80140cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 8014002:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8014006:	f8d8 3000 	ldr.w	r3, [r8]
 801400a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801400e:	682b      	ldr	r3, [r5, #0]
 8014010:	4628      	mov	r0, r5
 8014012:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014014:	4798      	blx	r3
 8014016:	4606      	mov	r6, r0
 8014018:	b207      	sxth	r7, r0
 801401a:	a803      	add	r0, sp, #12
 801401c:	f004 f89f 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8014020:	682b      	ldr	r3, [r5, #0]
 8014022:	4628      	mov	r0, r5
 8014024:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014026:	4798      	blx	r3
 8014028:	682b      	ldr	r3, [r5, #0]
 801402a:	4683      	mov	fp, r0
 801402c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801402e:	4628      	mov	r0, r5
 8014030:	4798      	blx	r3
 8014032:	465b      	mov	r3, fp
 8014034:	9000      	str	r0, [sp, #0]
 8014036:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014038:	9a02      	ldr	r2, [sp, #8]
 801403a:	a803      	add	r0, sp, #12
 801403c:	f004 f8fa 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014040:	f8da 3000 	ldr.w	r3, [sl]
 8014044:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014048:	2b00      	cmp	r3, #0
 801404a:	d0d2      	beq.n	8013ff2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 801404c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801404e:	f8b9 0000 	ldrh.w	r0, [r9]
 8014052:	4290      	cmp	r0, r2
 8014054:	d926      	bls.n	80140a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 8014056:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 801405a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801405e:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014062:	786a      	ldrb	r2, [r5, #1]
 8014064:	8925      	ldrh	r5, [r4, #8]
 8014066:	f8d8 3000 	ldr.w	r3, [r8]
 801406a:	eba5 050c 	sub.w	r5, r5, ip
 801406e:	b22d      	sxth	r5, r5
 8014070:	9500      	str	r5, [sp, #0]
 8014072:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014076:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801407a:	a803      	add	r0, sp, #12
 801407c:	f001 fe7d 	bl	8015d7a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014080:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014084:	18b9      	adds	r1, r7, r2
 8014086:	2900      	cmp	r1, #0
 8014088:	b203      	sxth	r3, r0
 801408a:	dd0f      	ble.n	80140ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 801408c:	3b01      	subs	r3, #1
 801408e:	fb13 f302 	smulbb	r3, r3, r2
 8014092:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014096:	b21f      	sxth	r7, r3
 8014098:	4638      	mov	r0, r7
 801409a:	b01c      	add	sp, #112	; 0x70
 801409c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140a0:	b003      	add	sp, #12
 80140a2:	4770      	bx	lr
 80140a4:	4b06      	ldr	r3, [pc, #24]	; (80140c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 80140a6:	4a04      	ldr	r2, [pc, #16]	; (80140b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 80140a8:	21af      	movs	r1, #175	; 0xaf
 80140aa:	e7a5      	b.n	8013ff8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 80140ac:	2b00      	cmp	r3, #0
 80140ae:	dcf3      	bgt.n	8014098 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80140b0:	2700      	movs	r7, #0
 80140b2:	e7f1      	b.n	8014098 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80140b4:	08029068 	.word	0x08029068
 80140b8:	0802c740 	.word	0x0802c740
 80140bc:	080290f6 	.word	0x080290f6
 80140c0:	0802911f 	.word	0x0802911f
 80140c4:	20014c80 	.word	0x20014c80
 80140c8:	20014c7c 	.word	0x20014c7c
 80140cc:	20014c84 	.word	0x20014c84

080140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80140d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140d4:	4b6d      	ldr	r3, [pc, #436]	; (801428c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 80140d6:	460c      	mov	r4, r1
 80140d8:	881a      	ldrh	r2, [r3, #0]
 80140da:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80140dc:	b0b9      	sub	sp, #228	; 0xe4
 80140de:	428a      	cmp	r2, r1
 80140e0:	4681      	mov	r9, r0
 80140e2:	9302      	str	r3, [sp, #8]
 80140e4:	d809      	bhi.n	80140fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 80140e6:	2300      	movs	r3, #0
 80140e8:	f04f 32ff 	mov.w	r2, #4294967295
 80140ec:	e9c0 3200 	strd	r3, r2, [r0]
 80140f0:	6083      	str	r3, [r0, #8]
 80140f2:	4648      	mov	r0, r9
 80140f4:	b039      	add	sp, #228	; 0xe4
 80140f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140fa:	4a65      	ldr	r2, [pc, #404]	; (8014290 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 80140fc:	6813      	ldr	r3, [r2, #0]
 80140fe:	4692      	mov	sl, r2
 8014100:	b92b      	cbnz	r3, 801410e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 8014102:	4b64      	ldr	r3, [pc, #400]	; (8014294 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 8014104:	4a64      	ldr	r2, [pc, #400]	; (8014298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 8014106:	21ae      	movs	r1, #174	; 0xae
 8014108:	4864      	ldr	r0, [pc, #400]	; (801429c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 801410a:	f013 f9d1 	bl	80274b0 <__assert_func>
 801410e:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014112:	4b63      	ldr	r3, [pc, #396]	; (80142a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 8014114:	f8df b190 	ldr.w	fp, [pc, #400]	; 80142a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 8014118:	681b      	ldr	r3, [r3, #0]
 801411a:	f8db 0000 	ldr.w	r0, [fp]
 801411e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014122:	f7f2 fe47 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8014126:	682b      	ldr	r3, [r5, #0]
 8014128:	4680      	mov	r8, r0
 801412a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801412c:	4628      	mov	r0, r5
 801412e:	4798      	blx	r3
 8014130:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 8014132:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 8014136:	f8cd b00c 	str.w	fp, [sp, #12]
 801413a:	4406      	add	r6, r0
 801413c:	b2b6      	uxth	r6, r6
 801413e:	2f00      	cmp	r7, #0
 8014140:	f040 80b4 	bne.w	80142ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 8014144:	a806      	add	r0, sp, #24
 8014146:	f004 f80a 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 801414a:	682b      	ldr	r3, [r5, #0]
 801414c:	4628      	mov	r0, r5
 801414e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014150:	4798      	blx	r3
 8014152:	682b      	ldr	r3, [r5, #0]
 8014154:	4683      	mov	fp, r0
 8014156:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014158:	4628      	mov	r0, r5
 801415a:	4798      	blx	r3
 801415c:	6822      	ldr	r2, [r4, #0]
 801415e:	9005      	str	r0, [sp, #20]
 8014160:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8014162:	4620      	mov	r0, r4
 8014164:	4790      	blx	r2
 8014166:	6821      	ldr	r1, [r4, #0]
 8014168:	9004      	str	r0, [sp, #16]
 801416a:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 801416e:	4620      	mov	r0, r4
 8014170:	4788      	blx	r1
 8014172:	9a04      	ldr	r2, [sp, #16]
 8014174:	9001      	str	r0, [sp, #4]
 8014176:	9200      	str	r2, [sp, #0]
 8014178:	4641      	mov	r1, r8
 801417a:	9b05      	ldr	r3, [sp, #20]
 801417c:	465a      	mov	r2, fp
 801417e:	a806      	add	r0, sp, #24
 8014180:	f004 f86d 	bl	801825e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014184:	46b8      	mov	r8, r7
 8014186:	f8da 3000 	ldr.w	r3, [sl]
 801418a:	2b00      	cmp	r3, #0
 801418c:	d0b9      	beq.n	8014102 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 801418e:	9902      	ldr	r1, [sp, #8]
 8014190:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014192:	8809      	ldrh	r1, [r1, #0]
 8014194:	4291      	cmp	r1, r2
 8014196:	d803      	bhi.n	80141a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 8014198:	4b42      	ldr	r3, [pc, #264]	; (80142a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 801419a:	4a3f      	ldr	r2, [pc, #252]	; (8014298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 801419c:	21af      	movs	r1, #175	; 0xaf
 801419e:	e7b3      	b.n	8014108 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 80141a0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80141a4:	4629      	mov	r1, r5
 80141a6:	785b      	ldrb	r3, [r3, #1]
 80141a8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80141ac:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80141b0:	a806      	add	r0, sp, #24
 80141b2:	f001 fb37 	bl	8015824 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80141b6:	4580      	cmp	r8, r0
 80141b8:	bfb8      	it	lt
 80141ba:	fa0f f880 	sxthlt.w	r8, r0
 80141be:	3701      	adds	r7, #1
 80141c0:	a806      	add	r0, sp, #24
 80141c2:	b2bf      	uxth	r7, r7
 80141c4:	f003 fff2 	bl	80181ac <_ZN8touchgfx12TextProvider11endOfStringEv>
 80141c8:	2800      	cmp	r0, #0
 80141ca:	d0dc      	beq.n	8014186 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 80141cc:	fb16 f607 	smulbb	r6, r6, r7
 80141d0:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80141d2:	1bf6      	subs	r6, r6, r7
 80141d4:	b2b6      	uxth	r6, r6
 80141d6:	fa0f fb86 	sxth.w	fp, r6
 80141da:	f1bb 0f00 	cmp.w	fp, #0
 80141de:	dd06      	ble.n	80141ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 80141e0:	682b      	ldr	r3, [r5, #0]
 80141e2:	4628      	mov	r0, r5
 80141e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80141e6:	4798      	blx	r3
 80141e8:	4430      	add	r0, r6
 80141ea:	fa0f fb80 	sxth.w	fp, r0
 80141ee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80141f2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80141f6:	6823      	ldr	r3, [r4, #0]
 80141f8:	bf08      	it	eq
 80141fa:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 80141fe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014200:	bf18      	it	ne
 8014202:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 8014206:	4620      	mov	r0, r4
 8014208:	4798      	blx	r3
 801420a:	2801      	cmp	r0, #1
 801420c:	fa1f f288 	uxth.w	r2, r8
 8014210:	f000 80f7 	beq.w	8014402 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8014214:	2802      	cmp	r0, #2
 8014216:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801421a:	f000 80f9 	beq.w	8014410 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 801421e:	7a29      	ldrb	r1, [r5, #8]
 8014220:	7a68      	ldrb	r0, [r5, #9]
 8014222:	b21b      	sxth	r3, r3
 8014224:	1a5b      	subs	r3, r3, r1
 8014226:	4401      	add	r1, r0
 8014228:	440a      	add	r2, r1
 801422a:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 801422e:	b29b      	uxth	r3, r3
 8014230:	b292      	uxth	r2, r2
 8014232:	2902      	cmp	r1, #2
 8014234:	b21e      	sxth	r6, r3
 8014236:	b217      	sxth	r7, r2
 8014238:	f000 80ed 	beq.w	8014416 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 801423c:	2903      	cmp	r1, #3
 801423e:	f000 80f3 	beq.w	8014428 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 8014242:	2901      	cmp	r1, #1
 8014244:	f040 80f9 	bne.w	801443a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 8014248:	8923      	ldrh	r3, [r4, #8]
 801424a:	463a      	mov	r2, r7
 801424c:	eba3 030b 	sub.w	r3, r3, fp
 8014250:	465f      	mov	r7, fp
 8014252:	4635      	mov	r5, r6
 8014254:	4693      	mov	fp, r2
 8014256:	b21e      	sxth	r6, r3
 8014258:	f8da 3000 	ldr.w	r3, [sl]
 801425c:	2b00      	cmp	r3, #0
 801425e:	f43f af50 	beq.w	8014102 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 8014262:	9b02      	ldr	r3, [sp, #8]
 8014264:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014266:	881b      	ldrh	r3, [r3, #0]
 8014268:	428b      	cmp	r3, r1
 801426a:	d995      	bls.n	8014198 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 801426c:	9b03      	ldr	r3, [sp, #12]
 801426e:	6818      	ldr	r0, [r3, #0]
 8014270:	f7f2 fda0 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8014274:	f8a9 6000 	strh.w	r6, [r9]
 8014278:	f8a9 5002 	strh.w	r5, [r9, #2]
 801427c:	f8a9 7004 	strh.w	r7, [r9, #4]
 8014280:	f8a9 b006 	strh.w	fp, [r9, #6]
 8014284:	f8c9 0008 	str.w	r0, [r9, #8]
 8014288:	e733      	b.n	80140f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 801428a:	bf00      	nop
 801428c:	20014c80 	.word	0x20014c80
 8014290:	20014c7c 	.word	0x20014c7c
 8014294:	08029068 	.word	0x08029068
 8014298:	0802c740 	.word	0x0802c740
 801429c:	080290f6 	.word	0x080290f6
 80142a0:	20014c84 	.word	0x20014c84
 80142a4:	0802911f 	.word	0x0802911f
 80142a8:	20014c88 	.word	0x20014c88
 80142ac:	af1f      	add	r7, sp, #124	; 0x7c
 80142ae:	4638      	mov	r0, r7
 80142b0:	f003 ff55 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 80142b4:	682b      	ldr	r3, [r5, #0]
 80142b6:	4628      	mov	r0, r5
 80142b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80142ba:	4798      	blx	r3
 80142bc:	682b      	ldr	r3, [r5, #0]
 80142be:	4683      	mov	fp, r0
 80142c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80142c2:	4628      	mov	r0, r5
 80142c4:	4798      	blx	r3
 80142c6:	6822      	ldr	r2, [r4, #0]
 80142c8:	9005      	str	r0, [sp, #20]
 80142ca:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80142cc:	4620      	mov	r0, r4
 80142ce:	4790      	blx	r2
 80142d0:	6821      	ldr	r1, [r4, #0]
 80142d2:	9004      	str	r0, [sp, #16]
 80142d4:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 80142d8:	4620      	mov	r0, r4
 80142da:	4788      	blx	r1
 80142dc:	9a04      	ldr	r2, [sp, #16]
 80142de:	9001      	str	r0, [sp, #4]
 80142e0:	9200      	str	r2, [sp, #0]
 80142e2:	9b05      	ldr	r3, [sp, #20]
 80142e4:	465a      	mov	r2, fp
 80142e6:	4641      	mov	r1, r8
 80142e8:	4638      	mov	r0, r7
 80142ea:	f003 ffb8 	bl	801825e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80142ee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80142f2:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80142f6:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 80142fa:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80142fe:	bf0a      	itet	eq
 8014300:	465b      	moveq	r3, fp
 8014302:	4613      	movne	r3, r2
 8014304:	4693      	moveq	fp, r2
 8014306:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 801430a:	1a9b      	subs	r3, r3, r2
 801430c:	b29a      	uxth	r2, r3
 801430e:	f8da 3000 	ldr.w	r3, [sl]
 8014312:	2b00      	cmp	r3, #0
 8014314:	f43f aef5 	beq.w	8014102 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 8014318:	9802      	ldr	r0, [sp, #8]
 801431a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801431c:	8800      	ldrh	r0, [r0, #0]
 801431e:	4288      	cmp	r0, r1
 8014320:	f67f af3a 	bls.w	8014198 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 8014324:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014328:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 801432c:	7859      	ldrb	r1, [r3, #1]
 801432e:	9707      	str	r7, [sp, #28]
 8014330:	2300      	movs	r3, #0
 8014332:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8014336:	f8ad 3018 	strh.w	r3, [sp, #24]
 801433a:	f88d 1020 	strb.w	r1, [sp, #32]
 801433e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8014342:	9509      	str	r5, [sp, #36]	; 0x24
 8014344:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014348:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801434c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8014350:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014354:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8014358:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801435c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8014360:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 8014364:	b350      	cbz	r0, 80143bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8014366:	682b      	ldr	r3, [r5, #0]
 8014368:	4628      	mov	r0, r5
 801436a:	695b      	ldr	r3, [r3, #20]
 801436c:	4798      	blx	r3
 801436e:	4680      	mov	r8, r0
 8014370:	b320      	cbz	r0, 80143bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8014372:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014374:	6803      	ldr	r3, [r0, #0]
 8014376:	4641      	mov	r1, r8
 8014378:	68db      	ldr	r3, [r3, #12]
 801437a:	4798      	blx	r3
 801437c:	4607      	mov	r7, r0
 801437e:	b1e8      	cbz	r0, 80143bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8014380:	7b43      	ldrb	r3, [r0, #13]
 8014382:	7a82      	ldrb	r2, [r0, #10]
 8014384:	005b      	lsls	r3, r3, #1
 8014386:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801438a:	4313      	orrs	r3, r2
 801438c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8014390:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8014394:	2b04      	cmp	r3, #4
 8014396:	d111      	bne.n	80143bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8014398:	9809      	ldr	r0, [sp, #36]	; 0x24
 801439a:	6803      	ldr	r3, [r0, #0]
 801439c:	463a      	mov	r2, r7
 801439e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80143a0:	4641      	mov	r1, r8
 80143a2:	4798      	blx	r3
 80143a4:	7b7b      	ldrb	r3, [r7, #13]
 80143a6:	005b      	lsls	r3, r3, #1
 80143a8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80143ac:	7abb      	ldrb	r3, [r7, #10]
 80143ae:	4313      	orrs	r3, r2
 80143b0:	4418      	add	r0, r3
 80143b2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80143b6:	4418      	add	r0, r3
 80143b8:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 80143bc:	b233      	sxth	r3, r6
 80143be:	2700      	movs	r7, #0
 80143c0:	005a      	lsls	r2, r3, #1
 80143c2:	46b8      	mov	r8, r7
 80143c4:	455a      	cmp	r2, fp
 80143c6:	bfd4      	ite	le
 80143c8:	2100      	movle	r1, #0
 80143ca:	2101      	movgt	r1, #1
 80143cc:	a806      	add	r0, sp, #24
 80143ce:	9305      	str	r3, [sp, #20]
 80143d0:	9204      	str	r2, [sp, #16]
 80143d2:	f001 fc03 	bl	8015bdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80143d6:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80143da:	4588      	cmp	r8, r1
 80143dc:	bfb8      	it	lt
 80143de:	fa0f f881 	sxthlt.w	r8, r1
 80143e2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80143e6:	3701      	adds	r7, #1
 80143e8:	ebab 0b06 	sub.w	fp, fp, r6
 80143ec:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80143f0:	b2bf      	uxth	r7, r7
 80143f2:	fa0f fb8b 	sxth.w	fp, fp
 80143f6:	2900      	cmp	r1, #0
 80143f8:	f43f aee8 	beq.w	80141cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80143fc:	455b      	cmp	r3, fp
 80143fe:	dbe1      	blt.n	80143c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 8014400:	e6e4      	b.n	80141cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8014402:	eba6 0308 	sub.w	r3, r6, r8
 8014406:	f04f 0802 	mov.w	r8, #2
 801440a:	fb93 f3f8 	sdiv	r3, r3, r8
 801440e:	e706      	b.n	801421e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8014410:	4413      	add	r3, r2
 8014412:	1af3      	subs	r3, r6, r3
 8014414:	e703      	b.n	801421e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8014416:	8926      	ldrh	r6, [r4, #8]
 8014418:	8965      	ldrh	r5, [r4, #10]
 801441a:	1ab2      	subs	r2, r6, r2
 801441c:	1ad3      	subs	r3, r2, r3
 801441e:	eba5 050b 	sub.w	r5, r5, fp
 8014422:	b21e      	sxth	r6, r3
 8014424:	b22d      	sxth	r5, r5
 8014426:	e717      	b.n	8014258 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8014428:	8965      	ldrh	r5, [r4, #10]
 801442a:	1aaa      	subs	r2, r5, r2
 801442c:	1ad3      	subs	r3, r2, r3
 801442e:	b21d      	sxth	r5, r3
 8014430:	463b      	mov	r3, r7
 8014432:	2600      	movs	r6, #0
 8014434:	465f      	mov	r7, fp
 8014436:	469b      	mov	fp, r3
 8014438:	e70e      	b.n	8014258 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 801443a:	2500      	movs	r5, #0
 801443c:	e70c      	b.n	8014258 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 801443e:	bf00      	nop

08014440 <_ZN8touchgfx8TextAreaD0Ev>:
 8014440:	b510      	push	{r4, lr}
 8014442:	2148      	movs	r1, #72	; 0x48
 8014444:	4604      	mov	r4, r0
 8014446:	f013 f804 	bl	8027452 <_ZdlPvj>
 801444a:	4620      	mov	r0, r4
 801444c:	bd10      	pop	{r4, pc}
	...

08014450 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014450:	b508      	push	{r3, lr}
 8014452:	4b0b      	ldr	r3, [pc, #44]	; (8014480 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 8014454:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014456:	881b      	ldrh	r3, [r3, #0]
 8014458:	4293      	cmp	r3, r2
 801445a:	d90e      	bls.n	801447a <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 801445c:	4b09      	ldr	r3, [pc, #36]	; (8014484 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 801445e:	681b      	ldr	r3, [r3, #0]
 8014460:	b92b      	cbnz	r3, 801446e <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 8014462:	4b09      	ldr	r3, [pc, #36]	; (8014488 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 8014464:	4a09      	ldr	r2, [pc, #36]	; (801448c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 8014466:	480a      	ldr	r0, [pc, #40]	; (8014490 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 8014468:	21ae      	movs	r1, #174	; 0xae
 801446a:	f013 f821 	bl	80274b0 <__assert_func>
 801446e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014472:	7858      	ldrb	r0, [r3, #1]
 8014474:	f000 0003 	and.w	r0, r0, #3
 8014478:	bd08      	pop	{r3, pc}
 801447a:	2000      	movs	r0, #0
 801447c:	e7fc      	b.n	8014478 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 801447e:	bf00      	nop
 8014480:	20014c80 	.word	0x20014c80
 8014484:	20014c7c 	.word	0x20014c7c
 8014488:	08029068 	.word	0x08029068
 801448c:	0802c740 	.word	0x0802c740
 8014490:	080290f6 	.word	0x080290f6

08014494 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014498:	4b15      	ldr	r3, [pc, #84]	; (80144f0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 801449a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801449c:	881b      	ldrh	r3, [r3, #0]
 801449e:	428b      	cmp	r3, r1
 80144a0:	4604      	mov	r4, r0
 80144a2:	d921      	bls.n	80144e8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 80144a4:	6803      	ldr	r3, [r0, #0]
 80144a6:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80144a8:	4b12      	ldr	r3, [pc, #72]	; (80144f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 80144aa:	681b      	ldr	r3, [r3, #0]
 80144ac:	b92b      	cbnz	r3, 80144ba <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 80144ae:	4b12      	ldr	r3, [pc, #72]	; (80144f8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 80144b0:	4a12      	ldr	r2, [pc, #72]	; (80144fc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 80144b2:	4813      	ldr	r0, [pc, #76]	; (8014500 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 80144b4:	21ae      	movs	r1, #174	; 0xae
 80144b6:	f012 fffb 	bl	80274b0 <__assert_func>
 80144ba:	4b12      	ldr	r3, [pc, #72]	; (8014504 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 80144bc:	6818      	ldr	r0, [r3, #0]
 80144be:	f7f2 fc79 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80144c2:	6823      	ldr	r3, [r4, #0]
 80144c4:	4606      	mov	r6, r0
 80144c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80144c8:	4620      	mov	r0, r4
 80144ca:	4798      	blx	r3
 80144cc:	6823      	ldr	r3, [r4, #0]
 80144ce:	4607      	mov	r7, r0
 80144d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80144d4:	4620      	mov	r0, r4
 80144d6:	4798      	blx	r3
 80144d8:	463a      	mov	r2, r7
 80144da:	4603      	mov	r3, r0
 80144dc:	4631      	mov	r1, r6
 80144de:	4620      	mov	r0, r4
 80144e0:	46ac      	mov	ip, r5
 80144e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80144e6:	4760      	bx	ip
 80144e8:	2000      	movs	r0, #0
 80144ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80144ee:	bf00      	nop
 80144f0:	20014c80 	.word	0x20014c80
 80144f4:	20014c7c 	.word	0x20014c7c
 80144f8:	08029068 	.word	0x08029068
 80144fc:	0802c740 	.word	0x0802c740
 8014500:	080290f6 	.word	0x080290f6
 8014504:	20014c88 	.word	0x20014c88

08014508 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8014508:	b513      	push	{r0, r1, r4, lr}
 801450a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801450e:	4604      	mov	r4, r0
 8014510:	b343      	cbz	r3, 8014564 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8014512:	4b1b      	ldr	r3, [pc, #108]	; (8014580 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 8014514:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014516:	881b      	ldrh	r3, [r3, #0]
 8014518:	428b      	cmp	r3, r1
 801451a:	d923      	bls.n	8014564 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 801451c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014520:	2b00      	cmp	r3, #0
 8014522:	dd1f      	ble.n	8014564 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8014524:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014528:	2b00      	cmp	r3, #0
 801452a:	dd1b      	ble.n	8014564 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 801452c:	4b15      	ldr	r3, [pc, #84]	; (8014584 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 801452e:	681b      	ldr	r3, [r3, #0]
 8014530:	b92b      	cbnz	r3, 801453e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 8014532:	4b15      	ldr	r3, [pc, #84]	; (8014588 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 8014534:	4a15      	ldr	r2, [pc, #84]	; (801458c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 8014536:	4816      	ldr	r0, [pc, #88]	; (8014590 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 8014538:	21ae      	movs	r1, #174	; 0xae
 801453a:	f012 ffb9 	bl	80274b0 <__assert_func>
 801453e:	4b15      	ldr	r3, [pc, #84]	; (8014594 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 8014540:	6818      	ldr	r0, [r3, #0]
 8014542:	f7f2 fc37 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 8014546:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801454a:	6822      	ldr	r2, [r4, #0]
 801454c:	2b00      	cmp	r3, #0
 801454e:	db06      	blt.n	801455e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 8014550:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014554:	2b00      	cmp	r3, #0
 8014556:	db02      	blt.n	801455e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 8014558:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801455a:	4298      	cmp	r0, r3
 801455c:	d004      	beq.n	8014568 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 801455e:	6953      	ldr	r3, [r2, #20]
 8014560:	4620      	mov	r0, r4
 8014562:	4798      	blx	r3
 8014564:	b002      	add	sp, #8
 8014566:	bd10      	pop	{r4, pc}
 8014568:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801456c:	c903      	ldmia	r1, {r0, r1}
 801456e:	466b      	mov	r3, sp
 8014570:	e883 0003 	stmia.w	r3, {r0, r1}
 8014574:	6912      	ldr	r2, [r2, #16]
 8014576:	4619      	mov	r1, r3
 8014578:	4620      	mov	r0, r4
 801457a:	4790      	blx	r2
 801457c:	e7f2      	b.n	8014564 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 801457e:	bf00      	nop
 8014580:	20014c80 	.word	0x20014c80
 8014584:	20014c7c 	.word	0x20014c7c
 8014588:	08029068 	.word	0x08029068
 801458c:	0802c740 	.word	0x0802c740
 8014590:	080290f6 	.word	0x080290f6
 8014594:	20014c88 	.word	0x20014c88

08014598 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8014598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801459c:	4d56      	ldr	r5, [pc, #344]	; (80146f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 801459e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80145a0:	882b      	ldrh	r3, [r5, #0]
 80145a2:	4293      	cmp	r3, r2
 80145a4:	b08e      	sub	sp, #56	; 0x38
 80145a6:	4604      	mov	r4, r0
 80145a8:	f240 80a3 	bls.w	80146f2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 80145ac:	6808      	ldr	r0, [r1, #0]
 80145ae:	4e53      	ldr	r6, [pc, #332]	; (80146fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 80145b0:	6849      	ldr	r1, [r1, #4]
 80145b2:	ab05      	add	r3, sp, #20
 80145b4:	c303      	stmia	r3!, {r0, r1}
 80145b6:	6833      	ldr	r3, [r6, #0]
 80145b8:	b92b      	cbnz	r3, 80145c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 80145ba:	4b51      	ldr	r3, [pc, #324]	; (8014700 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 80145bc:	4a51      	ldr	r2, [pc, #324]	; (8014704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 80145be:	21ae      	movs	r1, #174	; 0xae
 80145c0:	4851      	ldr	r0, [pc, #324]	; (8014708 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 80145c2:	f012 ff75 	bl	80274b0 <__assert_func>
 80145c6:	4f51      	ldr	r7, [pc, #324]	; (801470c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 80145c8:	4611      	mov	r1, r2
 80145ca:	6838      	ldr	r0, [r7, #0]
 80145cc:	f7f2 fbf2 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80145d0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80145d4:	2b00      	cmp	r3, #0
 80145d6:	db11      	blt.n	80145fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 80145d8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80145dc:	2b00      	cmp	r3, #0
 80145de:	db0d      	blt.n	80145fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 80145e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80145e2:	4298      	cmp	r0, r3
 80145e4:	d10a      	bne.n	80145fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 80145e6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80145ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 80145ee:	ab09      	add	r3, sp, #36	; 0x24
 80145f0:	e883 0003 	stmia.w	r3, {r0, r1}
 80145f4:	4619      	mov	r1, r3
 80145f6:	a805      	add	r0, sp, #20
 80145f8:	f7fb f88c 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 80145fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014600:	2b00      	cmp	r3, #0
 8014602:	dd76      	ble.n	80146f2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8014604:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014608:	2b00      	cmp	r3, #0
 801460a:	dd72      	ble.n	80146f2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 801460c:	6833      	ldr	r3, [r6, #0]
 801460e:	2b00      	cmp	r3, #0
 8014610:	d0d3      	beq.n	80145ba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8014612:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014614:	8829      	ldrh	r1, [r5, #0]
 8014616:	4291      	cmp	r1, r2
 8014618:	d803      	bhi.n	8014622 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 801461a:	4b3d      	ldr	r3, [pc, #244]	; (8014710 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 801461c:	4a39      	ldr	r2, [pc, #228]	; (8014704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 801461e:	21af      	movs	r1, #175	; 0xaf
 8014620:	e7ce      	b.n	80145c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 8014622:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8014626:	4b3b      	ldr	r3, [pc, #236]	; (8014714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 8014628:	681b      	ldr	r3, [r3, #0]
 801462a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 801462e:	f1b8 0f00 	cmp.w	r8, #0
 8014632:	d05e      	beq.n	80146f2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8014634:	6823      	ldr	r3, [r4, #0]
 8014636:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 801463a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801463c:	4620      	mov	r0, r4
 801463e:	4798      	blx	r3
 8014640:	6833      	ldr	r3, [r6, #0]
 8014642:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8014646:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 801464a:	2b00      	cmp	r3, #0
 801464c:	d0b5      	beq.n	80145ba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 801464e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014650:	f8b5 e000 	ldrh.w	lr, [r5]
 8014654:	4596      	cmp	lr, r2
 8014656:	d9e0      	bls.n	801461a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 8014658:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801465c:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 8014660:	785b      	ldrb	r3, [r3, #1]
 8014662:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014664:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 8014668:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801466c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014670:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8014674:	4b28      	ldr	r3, [pc, #160]	; (8014718 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 8014676:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801467a:	681b      	ldr	r3, [r3, #0]
 801467c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8014680:	920b      	str	r2, [sp, #44]	; 0x2c
 8014682:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8014686:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 801468a:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 801468e:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 8014692:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8014696:	b122      	cbz	r2, 80146a2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 8014698:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 801469c:	f1b8 0f00 	cmp.w	r8, #0
 80146a0:	d101      	bne.n	80146a6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 80146a2:	f8d3 8008 	ldr.w	r8, [r3, #8]
 80146a6:	f10d 091c 	add.w	r9, sp, #28
 80146aa:	4621      	mov	r1, r4
 80146ac:	4648      	mov	r0, r9
 80146ae:	f003 f88b 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80146b2:	6833      	ldr	r3, [r6, #0]
 80146b4:	2b00      	cmp	r3, #0
 80146b6:	d080      	beq.n	80145ba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 80146b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80146ba:	882b      	ldrh	r3, [r5, #0]
 80146bc:	428b      	cmp	r3, r1
 80146be:	d9ac      	bls.n	801461a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 80146c0:	6838      	ldr	r0, [r7, #0]
 80146c2:	f7f2 fb77 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80146c6:	6823      	ldr	r3, [r4, #0]
 80146c8:	4605      	mov	r5, r0
 80146ca:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80146cc:	4620      	mov	r0, r4
 80146ce:	4798      	blx	r3
 80146d0:	6823      	ldr	r3, [r4, #0]
 80146d2:	4606      	mov	r6, r0
 80146d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80146d8:	4620      	mov	r0, r4
 80146da:	4798      	blx	r3
 80146dc:	e9cd 6002 	strd	r6, r0, [sp, #8]
 80146e0:	ab09      	add	r3, sp, #36	; 0x24
 80146e2:	9300      	str	r3, [sp, #0]
 80146e4:	9501      	str	r5, [sp, #4]
 80146e6:	ab05      	add	r3, sp, #20
 80146e8:	e899 0006 	ldmia.w	r9, {r1, r2}
 80146ec:	4640      	mov	r0, r8
 80146ee:	f7f2 fb13 	bl	8006d18 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80146f2:	b00e      	add	sp, #56	; 0x38
 80146f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80146f8:	20014c80 	.word	0x20014c80
 80146fc:	20014c7c 	.word	0x20014c7c
 8014700:	08029068 	.word	0x08029068
 8014704:	0802c740 	.word	0x0802c740
 8014708:	080290f6 	.word	0x080290f6
 801470c:	20014c88 	.word	0x20014c88
 8014710:	0802911f 	.word	0x0802911f
 8014714:	20014c84 	.word	0x20014c84
 8014718:	20014c0c 	.word	0x20014c0c

0801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801471c:	b538      	push	{r3, r4, r5, lr}
 801471e:	4b0e      	ldr	r3, [pc, #56]	; (8014758 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8014720:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014722:	881b      	ldrh	r3, [r3, #0]
 8014724:	429a      	cmp	r2, r3
 8014726:	4604      	mov	r4, r0
 8014728:	d214      	bcs.n	8014754 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801472a:	6803      	ldr	r3, [r0, #0]
 801472c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801472e:	4798      	blx	r3
 8014730:	6823      	ldr	r3, [r4, #0]
 8014732:	4605      	mov	r5, r0
 8014734:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8014736:	4620      	mov	r0, r4
 8014738:	4798      	blx	r3
 801473a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801473e:	b22d      	sxth	r5, r5
 8014740:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014744:	4601      	mov	r1, r0
 8014746:	bf06      	itte	eq
 8014748:	4602      	moveq	r2, r0
 801474a:	4629      	moveq	r1, r5
 801474c:	462a      	movne	r2, r5
 801474e:	4620      	mov	r0, r4
 8014750:	f7ee f9ec 	bl	8002b2c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8014754:	bd38      	pop	{r3, r4, r5, pc}
 8014756:	bf00      	nop
 8014758:	20014c80 	.word	0x20014c80

0801475c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 801475c:	b530      	push	{r4, r5, lr}
 801475e:	888b      	ldrh	r3, [r1, #4]
 8014760:	8583      	strh	r3, [r0, #44]	; 0x2c
 8014762:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014766:	b085      	sub	sp, #20
 8014768:	4604      	mov	r4, r0
 801476a:	b923      	cbnz	r3, 8014776 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801476c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014770:	b90b      	cbnz	r3, 8014776 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014772:	f7ff ffd3 	bl	801471c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8014776:	6823      	ldr	r3, [r4, #0]
 8014778:	466d      	mov	r5, sp
 801477a:	4621      	mov	r1, r4
 801477c:	4628      	mov	r0, r5
 801477e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014782:	4798      	blx	r3
 8014784:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8014788:	343c      	adds	r4, #60	; 0x3c
 801478a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801478e:	b005      	add	sp, #20
 8014790:	bd30      	pop	{r4, r5, pc}

08014792 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8014792:	2300      	movs	r3, #0
 8014794:	8083      	strh	r3, [r0, #4]
 8014796:	80c3      	strh	r3, [r0, #6]
 8014798:	8003      	strh	r3, [r0, #0]
 801479a:	8043      	strh	r3, [r0, #2]
 801479c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80147a0:	2bff      	cmp	r3, #255	; 0xff
 80147a2:	bf01      	itttt	eq
 80147a4:	890b      	ldrheq	r3, [r1, #8]
 80147a6:	8083      	strheq	r3, [r0, #4]
 80147a8:	894b      	ldrheq	r3, [r1, #10]
 80147aa:	80c3      	strheq	r3, [r0, #6]
 80147ac:	4770      	bx	lr
	...

080147b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80147b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80147b2:	4604      	mov	r4, r0
 80147b4:	6808      	ldr	r0, [r1, #0]
 80147b6:	6849      	ldr	r1, [r1, #4]
 80147b8:	466b      	mov	r3, sp
 80147ba:	c303      	stmia	r3!, {r0, r1}
 80147bc:	6823      	ldr	r3, [r4, #0]
 80147be:	4669      	mov	r1, sp
 80147c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80147c2:	4620      	mov	r0, r4
 80147c4:	4798      	blx	r3
 80147c6:	4b08      	ldr	r3, [pc, #32]	; (80147e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80147c8:	681b      	ldr	r3, [r3, #0]
 80147ca:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80147ce:	b10a      	cbz	r2, 80147d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80147d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80147d2:	b900      	cbnz	r0, 80147d6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80147d4:	6898      	ldr	r0, [r3, #8]
 80147d6:	6803      	ldr	r3, [r0, #0]
 80147d8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80147da:	6a1d      	ldr	r5, [r3, #32]
 80147dc:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80147e0:	4669      	mov	r1, sp
 80147e2:	47a8      	blx	r5
 80147e4:	b003      	add	sp, #12
 80147e6:	bd30      	pop	{r4, r5, pc}
 80147e8:	20014c0c 	.word	0x20014c0c

080147ec <_ZN8touchgfx3BoxD1Ev>:
 80147ec:	4770      	bx	lr

080147ee <_ZN8touchgfx3BoxD0Ev>:
 80147ee:	b510      	push	{r4, lr}
 80147f0:	212c      	movs	r1, #44	; 0x2c
 80147f2:	4604      	mov	r4, r0
 80147f4:	f012 fe2d 	bl	8027452 <_ZdlPvj>
 80147f8:	4620      	mov	r0, r4
 80147fa:	bd10      	pop	{r4, pc}

080147fc <_ZNK8touchgfx3Box17invalidateContentEv>:
 80147fc:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8014800:	b12a      	cbz	r2, 801480e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8014802:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014806:	b112      	cbz	r2, 801480e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8014808:	6803      	ldr	r3, [r0, #0]
 801480a:	695b      	ldr	r3, [r3, #20]
 801480c:	4718      	bx	r3
 801480e:	4770      	bx	lr

08014810 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014810:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014814:	4d38      	ldr	r5, [pc, #224]	; (80148f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 8014816:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014818:	882b      	ldrh	r3, [r5, #0]
 801481a:	4293      	cmp	r3, r2
 801481c:	b08c      	sub	sp, #48	; 0x30
 801481e:	4604      	mov	r4, r0
 8014820:	4689      	mov	r9, r1
 8014822:	d965      	bls.n	80148f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 8014824:	4e35      	ldr	r6, [pc, #212]	; (80148fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 8014826:	6833      	ldr	r3, [r6, #0]
 8014828:	b92b      	cbnz	r3, 8014836 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 801482a:	4b35      	ldr	r3, [pc, #212]	; (8014900 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 801482c:	4a35      	ldr	r2, [pc, #212]	; (8014904 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 801482e:	21ae      	movs	r1, #174	; 0xae
 8014830:	4835      	ldr	r0, [pc, #212]	; (8014908 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 8014832:	f012 fe3d 	bl	80274b0 <__assert_func>
 8014836:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801483a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801483e:	4b33      	ldr	r3, [pc, #204]	; (801490c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 8014840:	681b      	ldr	r3, [r3, #0]
 8014842:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8014846:	2a00      	cmp	r2, #0
 8014848:	d052      	beq.n	80148f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 801484a:	784b      	ldrb	r3, [r1, #1]
 801484c:	9207      	str	r2, [sp, #28]
 801484e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8014852:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014856:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801485a:	4b2d      	ldr	r3, [pc, #180]	; (8014910 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 801485c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8014860:	681b      	ldr	r3, [r3, #0]
 8014862:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8014866:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801486a:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 801486e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8014872:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8014876:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014878:	f88d a020 	strb.w	sl, [sp, #32]
 801487c:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 8014880:	9009      	str	r0, [sp, #36]	; 0x24
 8014882:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8014886:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 801488a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 801488e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8014892:	b10a      	cbz	r2, 8014898 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 8014894:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8014896:	b907      	cbnz	r7, 801489a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 8014898:	689f      	ldr	r7, [r3, #8]
 801489a:	f10d 0814 	add.w	r8, sp, #20
 801489e:	4621      	mov	r1, r4
 80148a0:	4640      	mov	r0, r8
 80148a2:	f002 ff91 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80148a6:	6833      	ldr	r3, [r6, #0]
 80148a8:	2b00      	cmp	r3, #0
 80148aa:	d0be      	beq.n	801482a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 80148ac:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80148ae:	882b      	ldrh	r3, [r5, #0]
 80148b0:	428b      	cmp	r3, r1
 80148b2:	d803      	bhi.n	80148bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 80148b4:	4b17      	ldr	r3, [pc, #92]	; (8014914 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 80148b6:	4a13      	ldr	r2, [pc, #76]	; (8014904 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 80148b8:	21af      	movs	r1, #175	; 0xaf
 80148ba:	e7b9      	b.n	8014830 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 80148bc:	4b16      	ldr	r3, [pc, #88]	; (8014918 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 80148be:	6818      	ldr	r0, [r3, #0]
 80148c0:	f7f2 fa78 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 80148c4:	6823      	ldr	r3, [r4, #0]
 80148c6:	4605      	mov	r5, r0
 80148c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80148ca:	4620      	mov	r0, r4
 80148cc:	4798      	blx	r3
 80148ce:	6823      	ldr	r3, [r4, #0]
 80148d0:	4606      	mov	r6, r0
 80148d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80148d6:	4620      	mov	r0, r4
 80148d8:	4798      	blx	r3
 80148da:	e9cd 6002 	strd	r6, r0, [sp, #8]
 80148de:	ab07      	add	r3, sp, #28
 80148e0:	9300      	str	r3, [sp, #0]
 80148e2:	9501      	str	r5, [sp, #4]
 80148e4:	464b      	mov	r3, r9
 80148e6:	e898 0006 	ldmia.w	r8, {r1, r2}
 80148ea:	4638      	mov	r0, r7
 80148ec:	f7f2 fa14 	bl	8006d18 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80148f0:	b00c      	add	sp, #48	; 0x30
 80148f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80148f6:	bf00      	nop
 80148f8:	20014c80 	.word	0x20014c80
 80148fc:	20014c7c 	.word	0x20014c7c
 8014900:	08029068 	.word	0x08029068
 8014904:	0802c7d8 	.word	0x0802c7d8
 8014908:	080290f6 	.word	0x080290f6
 801490c:	20014c84 	.word	0x20014c84
 8014910:	20014c0c 	.word	0x20014c0c
 8014914:	0802911f 	.word	0x0802911f
 8014918:	20014c88 	.word	0x20014c88

0801491c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 801491c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014920:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8014924:	b0a0      	sub	sp, #128	; 0x80
 8014926:	4604      	mov	r4, r0
 8014928:	b193      	cbz	r3, 8014950 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801492a:	4b33      	ldr	r3, [pc, #204]	; (80149f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 801492c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801492e:	881b      	ldrh	r3, [r3, #0]
 8014930:	428b      	cmp	r3, r1
 8014932:	d90d      	bls.n	8014950 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8014934:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014938:	2b00      	cmp	r3, #0
 801493a:	dd09      	ble.n	8014950 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801493c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014940:	2b00      	cmp	r3, #0
 8014942:	dd05      	ble.n	8014950 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8014944:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8014948:	b12b      	cbz	r3, 8014956 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 801494a:	6803      	ldr	r3, [r0, #0]
 801494c:	695b      	ldr	r3, [r3, #20]
 801494e:	4798      	blx	r3
 8014950:	b020      	add	sp, #128	; 0x80
 8014952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014956:	4b29      	ldr	r3, [pc, #164]	; (80149fc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 8014958:	681b      	ldr	r3, [r3, #0]
 801495a:	b92b      	cbnz	r3, 8014968 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 801495c:	4b28      	ldr	r3, [pc, #160]	; (8014a00 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 801495e:	4a29      	ldr	r2, [pc, #164]	; (8014a04 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 8014960:	4829      	ldr	r0, [pc, #164]	; (8014a08 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 8014962:	21ae      	movs	r1, #174	; 0xae
 8014964:	f012 fda4 	bl	80274b0 <__assert_func>
 8014968:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801496c:	4b27      	ldr	r3, [pc, #156]	; (8014a0c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 801496e:	681b      	ldr	r3, [r3, #0]
 8014970:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014974:	4b26      	ldr	r3, [pc, #152]	; (8014a10 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 8014976:	6818      	ldr	r0, [r3, #0]
 8014978:	f7f2 fa1c 	bl	8006db4 <_ZNK8touchgfx5Texts7getTextEt>
 801497c:	4606      	mov	r6, r0
 801497e:	a807      	add	r0, sp, #28
 8014980:	f003 fbed 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8014984:	682b      	ldr	r3, [r5, #0]
 8014986:	4628      	mov	r0, r5
 8014988:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801498a:	4798      	blx	r3
 801498c:	682b      	ldr	r3, [r5, #0]
 801498e:	4607      	mov	r7, r0
 8014990:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014992:	4628      	mov	r0, r5
 8014994:	4798      	blx	r3
 8014996:	6823      	ldr	r3, [r4, #0]
 8014998:	4605      	mov	r5, r0
 801499a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801499c:	4620      	mov	r0, r4
 801499e:	4798      	blx	r3
 80149a0:	6823      	ldr	r3, [r4, #0]
 80149a2:	4680      	mov	r8, r0
 80149a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80149a8:	4620      	mov	r0, r4
 80149aa:	4798      	blx	r3
 80149ac:	462b      	mov	r3, r5
 80149ae:	e9cd 8000 	strd	r8, r0, [sp]
 80149b2:	463a      	mov	r2, r7
 80149b4:	a807      	add	r0, sp, #28
 80149b6:	4631      	mov	r1, r6
 80149b8:	f003 fc51 	bl	801825e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80149bc:	a807      	add	r0, sp, #28
 80149be:	f004 f843 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80149c2:	280a      	cmp	r0, #10
 80149c4:	d103      	bne.n	80149ce <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 80149c6:	6823      	ldr	r3, [r4, #0]
 80149c8:	4620      	mov	r0, r4
 80149ca:	695b      	ldr	r3, [r3, #20]
 80149cc:	e7bf      	b.n	801494e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 80149ce:	a807      	add	r0, sp, #28
 80149d0:	f004 f83a 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80149d4:	2800      	cmp	r0, #0
 80149d6:	d1f4      	bne.n	80149c2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 80149d8:	ad04      	add	r5, sp, #16
 80149da:	4621      	mov	r1, r4
 80149dc:	4628      	mov	r0, r5
 80149de:	f7ff fb77 	bl	80140d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80149e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80149e6:	6822      	ldr	r2, [r4, #0]
 80149e8:	ab02      	add	r3, sp, #8
 80149ea:	e883 0003 	stmia.w	r3, {r0, r1}
 80149ee:	6912      	ldr	r2, [r2, #16]
 80149f0:	4619      	mov	r1, r3
 80149f2:	4620      	mov	r0, r4
 80149f4:	4790      	blx	r2
 80149f6:	e7ab      	b.n	8014950 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 80149f8:	20014c80 	.word	0x20014c80
 80149fc:	20014c7c 	.word	0x20014c7c
 8014a00:	08029068 	.word	0x08029068
 8014a04:	0802c7d8 	.word	0x0802c7d8
 8014a08:	080290f6 	.word	0x080290f6
 8014a0c:	20014c84 	.word	0x20014c84
 8014a10:	20014c88 	.word	0x20014c88

08014a14 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8014a14:	4770      	bx	lr

08014a16 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8014a16:	b510      	push	{r4, lr}
 8014a18:	2134      	movs	r1, #52	; 0x34
 8014a1a:	4604      	mov	r4, r0
 8014a1c:	f012 fd19 	bl	8027452 <_ZdlPvj>
 8014a20:	4620      	mov	r0, r4
 8014a22:	bd10      	pop	{r4, pc}

08014a24 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8014a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a28:	4604      	mov	r4, r0
 8014a2a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8014a2c:	8962      	ldrh	r2, [r4, #10]
 8014a2e:	b218      	sxth	r0, r3
 8014a30:	460e      	mov	r6, r1
 8014a32:	005b      	lsls	r3, r3, #1
 8014a34:	8921      	ldrh	r1, [r4, #8]
 8014a36:	b29b      	uxth	r3, r3
 8014a38:	1ac9      	subs	r1, r1, r3
 8014a3a:	b08e      	sub	sp, #56	; 0x38
 8014a3c:	b209      	sxth	r1, r1
 8014a3e:	1ad3      	subs	r3, r2, r3
 8014a40:	b21b      	sxth	r3, r3
 8014a42:	2900      	cmp	r1, #0
 8014a44:	f8ad 0000 	strh.w	r0, [sp]
 8014a48:	f8ad 0002 	strh.w	r0, [sp, #2]
 8014a4c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014a50:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014a54:	dd5e      	ble.n	8014b14 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8014a56:	2b00      	cmp	r3, #0
 8014a58:	dd5c      	ble.n	8014b14 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8014a5a:	6830      	ldr	r0, [r6, #0]
 8014a5c:	6871      	ldr	r1, [r6, #4]
 8014a5e:	ab02      	add	r3, sp, #8
 8014a60:	c303      	stmia	r3!, {r0, r1}
 8014a62:	4669      	mov	r1, sp
 8014a64:	a802      	add	r0, sp, #8
 8014a66:	f7fa fe55 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8014a6a:	4620      	mov	r0, r4
 8014a6c:	a902      	add	r1, sp, #8
 8014a6e:	f7ff fe9f 	bl	80147b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8014a72:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8014a74:	2800      	cmp	r0, #0
 8014a76:	d05f      	beq.n	8014b38 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014a78:	8963      	ldrh	r3, [r4, #10]
 8014a7a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014a7e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014a82:	1a1f      	subs	r7, r3, r0
 8014a84:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8014a88:	b202      	sxth	r2, r0
 8014a8a:	2500      	movs	r5, #0
 8014a8c:	b21b      	sxth	r3, r3
 8014a8e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8014a92:	1a09      	subs	r1, r1, r0
 8014a94:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8014a98:	9506      	str	r5, [sp, #24]
 8014a9a:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014a9e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8014aa2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8014aa6:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8014aaa:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8014aae:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014ab2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014ab6:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8014aba:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014abe:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014ac2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014ac6:	af04      	add	r7, sp, #16
 8014ac8:	ab06      	add	r3, sp, #24
 8014aca:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014ace:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014ad2:	e887 0003 	stmia.w	r7, {r0, r1}
 8014ad6:	4631      	mov	r1, r6
 8014ad8:	4638      	mov	r0, r7
 8014ada:	f7fa fe1b 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8014ade:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	dd12      	ble.n	8014b0c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014ae6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014aea:	2b00      	cmp	r3, #0
 8014aec:	dd0e      	ble.n	8014b0c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014aee:	6823      	ldr	r3, [r4, #0]
 8014af0:	4639      	mov	r1, r7
 8014af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014af4:	4620      	mov	r0, r4
 8014af6:	4798      	blx	r3
 8014af8:	f7fb ff2c 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8014afc:	6803      	ldr	r3, [r0, #0]
 8014afe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b00:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8014b04:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014b08:	4639      	mov	r1, r7
 8014b0a:	47c0      	blx	r8
 8014b0c:	3501      	adds	r5, #1
 8014b0e:	2d04      	cmp	r5, #4
 8014b10:	d1da      	bne.n	8014ac8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8014b12:	e011      	b.n	8014b38 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014b14:	6830      	ldr	r0, [r6, #0]
 8014b16:	6871      	ldr	r1, [r6, #4]
 8014b18:	ab06      	add	r3, sp, #24
 8014b1a:	c303      	stmia	r3!, {r0, r1}
 8014b1c:	6823      	ldr	r3, [r4, #0]
 8014b1e:	a906      	add	r1, sp, #24
 8014b20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b22:	4620      	mov	r0, r4
 8014b24:	4798      	blx	r3
 8014b26:	f7fb ff15 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8014b2a:	6803      	ldr	r3, [r0, #0]
 8014b2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014b2e:	6a1d      	ldr	r5, [r3, #32]
 8014b30:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8014b34:	a906      	add	r1, sp, #24
 8014b36:	47a8      	blx	r5
 8014b38:	b00e      	add	sp, #56	; 0x38
 8014b3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014b3e <_ZN8touchgfx5ImageD1Ev>:
 8014b3e:	4770      	bx	lr

08014b40 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8014b40:	b570      	push	{r4, r5, r6, lr}
 8014b42:	880b      	ldrh	r3, [r1, #0]
 8014b44:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014b46:	4604      	mov	r4, r0
 8014b48:	4608      	mov	r0, r1
 8014b4a:	460d      	mov	r5, r1
 8014b4c:	f004 ff4a 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014b50:	4606      	mov	r6, r0
 8014b52:	4628      	mov	r0, r5
 8014b54:	f004 ff8a 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014b58:	6823      	ldr	r3, [r4, #0]
 8014b5a:	4605      	mov	r5, r0
 8014b5c:	b231      	sxth	r1, r6
 8014b5e:	4620      	mov	r0, r4
 8014b60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b62:	4798      	blx	r3
 8014b64:	6823      	ldr	r3, [r4, #0]
 8014b66:	b229      	sxth	r1, r5
 8014b68:	4620      	mov	r0, r4
 8014b6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014b70:	4718      	bx	r3

08014b72 <_ZN8touchgfx5ImageD0Ev>:
 8014b72:	b510      	push	{r4, lr}
 8014b74:	212c      	movs	r1, #44	; 0x2c
 8014b76:	4604      	mov	r4, r0
 8014b78:	f012 fc6b 	bl	8027452 <_ZdlPvj>
 8014b7c:	4620      	mov	r0, r4
 8014b7e:	bd10      	pop	{r4, pc}

08014b80 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8014b80:	b510      	push	{r4, lr}
 8014b82:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014b86:	2bff      	cmp	r3, #255	; 0xff
 8014b88:	4604      	mov	r4, r0
 8014b8a:	d006      	beq.n	8014b9a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8014b8c:	2300      	movs	r3, #0
 8014b8e:	8003      	strh	r3, [r0, #0]
 8014b90:	8043      	strh	r3, [r0, #2]
 8014b92:	8083      	strh	r3, [r0, #4]
 8014b94:	80c3      	strh	r3, [r0, #6]
 8014b96:	4620      	mov	r0, r4
 8014b98:	bd10      	pop	{r4, pc}
 8014b9a:	3126      	adds	r1, #38	; 0x26
 8014b9c:	f004 ffaa 	bl	8019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014ba0:	e7f9      	b.n	8014b96 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08014ba4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014ba8:	4604      	mov	r4, r0
 8014baa:	b088      	sub	sp, #32
 8014bac:	f854 3b26 	ldr.w	r3, [r4], #38
 8014bb0:	2500      	movs	r5, #0
 8014bb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014bb4:	460f      	mov	r7, r1
 8014bb6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8014bba:	a904      	add	r1, sp, #16
 8014bbc:	4606      	mov	r6, r0
 8014bbe:	4798      	blx	r3
 8014bc0:	4620      	mov	r0, r4
 8014bc2:	f004 ff0f 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014bc6:	4680      	mov	r8, r0
 8014bc8:	4620      	mov	r0, r4
 8014bca:	f004 ff4f 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014bce:	9506      	str	r5, [sp, #24]
 8014bd0:	ad06      	add	r5, sp, #24
 8014bd2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014bd6:	4639      	mov	r1, r7
 8014bd8:	4628      	mov	r0, r5
 8014bda:	f8ad 801c 	strh.w	r8, [sp, #28]
 8014bde:	f7fa fd99 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8014be2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014be6:	2b00      	cmp	r3, #0
 8014be8:	dd19      	ble.n	8014c1e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014bea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014bee:	2b00      	cmp	r3, #0
 8014bf0:	dd15      	ble.n	8014c1e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014bf2:	4b0c      	ldr	r3, [pc, #48]	; (8014c24 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014bf4:	681b      	ldr	r3, [r3, #0]
 8014bf6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8014bfa:	b10a      	cbz	r2, 8014c00 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8014bfc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014bfe:	b900      	cbnz	r0, 8014c02 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014c00:	6898      	ldr	r0, [r3, #8]
 8014c02:	6801      	ldr	r1, [r0, #0]
 8014c04:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014c08:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014c0c:	2701      	movs	r7, #1
 8014c0e:	9702      	str	r7, [sp, #8]
 8014c10:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8014c14:	e9cd 5600 	strd	r5, r6, [sp]
 8014c18:	688d      	ldr	r5, [r1, #8]
 8014c1a:	4621      	mov	r1, r4
 8014c1c:	47a8      	blx	r5
 8014c1e:	b008      	add	sp, #32
 8014c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014c24:	20014c0c 	.word	0x20014c0c

08014c28 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014c28:	4b02      	ldr	r3, [pc, #8]	; (8014c34 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014c2a:	6018      	str	r0, [r3, #0]
 8014c2c:	4b02      	ldr	r3, [pc, #8]	; (8014c38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014c2e:	6019      	str	r1, [r3, #0]
 8014c30:	4770      	bx	lr
 8014c32:	bf00      	nop
 8014c34:	20014c14 	.word	0x20014c14
 8014c38:	20014c28 	.word	0x20014c28

08014c3c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 8014c3c:	b538      	push	{r3, r4, r5, lr}
 8014c3e:	4c2b      	ldr	r4, [pc, #172]	; (8014cec <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 8014c40:	4b2b      	ldr	r3, [pc, #172]	; (8014cf0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 8014c42:	6821      	ldr	r1, [r4, #0]
 8014c44:	681a      	ldr	r2, [r3, #0]
 8014c46:	4d2b      	ldr	r5, [pc, #172]	; (8014cf4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 8014c48:	4281      	cmp	r1, r0
 8014c4a:	492b      	ldr	r1, [pc, #172]	; (8014cf8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 8014c4c:	d108      	bne.n	8014c60 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 8014c4e:	682b      	ldr	r3, [r5, #0]
 8014c50:	4293      	cmp	r3, r2
 8014c52:	d105      	bne.n	8014c60 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 8014c54:	6808      	ldr	r0, [r1, #0]
 8014c56:	280f      	cmp	r0, #15
 8014c58:	bf94      	ite	ls
 8014c5a:	2000      	movls	r0, #0
 8014c5c:	2001      	movhi	r0, #1
 8014c5e:	bd38      	pop	{r3, r4, r5, pc}
 8014c60:	4b26      	ldr	r3, [pc, #152]	; (8014cfc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 8014c62:	6020      	str	r0, [r4, #0]
 8014c64:	681b      	ldr	r3, [r3, #0]
 8014c66:	602a      	str	r2, [r5, #0]
 8014c68:	4298      	cmp	r0, r3
 8014c6a:	d905      	bls.n	8014c78 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 8014c6c:	4b24      	ldr	r3, [pc, #144]	; (8014d00 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8014c6e:	4a25      	ldr	r2, [pc, #148]	; (8014d04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8014c70:	2135      	movs	r1, #53	; 0x35
 8014c72:	4825      	ldr	r0, [pc, #148]	; (8014d08 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 8014c74:	f012 fc1c 	bl	80274b0 <__assert_func>
 8014c78:	f010 0403 	ands.w	r4, r0, #3
 8014c7c:	bf1f      	itttt	ne
 8014c7e:	f1c4 0504 	rsbne	r5, r4, #4
 8014c82:	3b04      	subne	r3, #4
 8014c84:	1952      	addne	r2, r2, r5
 8014c86:	191b      	addne	r3, r3, r4
 8014c88:	4402      	add	r2, r0
 8014c8a:	1a1b      	subs	r3, r3, r0
 8014c8c:	3001      	adds	r0, #1
 8014c8e:	f020 0401 	bic.w	r4, r0, #1
 8014c92:	4d1e      	ldr	r5, [pc, #120]	; (8014d0c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 8014c94:	42a3      	cmp	r3, r4
 8014c96:	602a      	str	r2, [r5, #0]
 8014c98:	d203      	bcs.n	8014ca2 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 8014c9a:	4b19      	ldr	r3, [pc, #100]	; (8014d00 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8014c9c:	4a19      	ldr	r2, [pc, #100]	; (8014d04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8014c9e:	2148      	movs	r1, #72	; 0x48
 8014ca0:	e7e7      	b.n	8014c72 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8014ca2:	f010 0002 	ands.w	r0, r0, #2
 8014ca6:	bf1f      	itttt	ne
 8014ca8:	f1c0 0504 	rsbne	r5, r0, #4
 8014cac:	1952      	addne	r2, r2, r5
 8014cae:	1f05      	subne	r5, r0, #4
 8014cb0:	195b      	addne	r3, r3, r5
 8014cb2:	1b1b      	subs	r3, r3, r4
 8014cb4:	4d16      	ldr	r5, [pc, #88]	; (8014d10 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 8014cb6:	4422      	add	r2, r4
 8014cb8:	429c      	cmp	r4, r3
 8014cba:	602a      	str	r2, [r5, #0]
 8014cbc:	d903      	bls.n	8014cc6 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 8014cbe:	4b10      	ldr	r3, [pc, #64]	; (8014d00 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8014cc0:	4a10      	ldr	r2, [pc, #64]	; (8014d04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8014cc2:	215b      	movs	r1, #91	; 0x5b
 8014cc4:	e7d5      	b.n	8014c72 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8014cc6:	b120      	cbz	r0, 8014cd2 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 8014cc8:	f1c0 0504 	rsb	r5, r0, #4
 8014ccc:	3804      	subs	r0, #4
 8014cce:	442a      	add	r2, r5
 8014cd0:	4403      	add	r3, r0
 8014cd2:	1b1b      	subs	r3, r3, r4
 8014cd4:	480f      	ldr	r0, [pc, #60]	; (8014d14 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 8014cd6:	600b      	str	r3, [r1, #0]
 8014cd8:	4422      	add	r2, r4
 8014cda:	2b0f      	cmp	r3, #15
 8014cdc:	6002      	str	r2, [r0, #0]
 8014cde:	d803      	bhi.n	8014ce8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 8014ce0:	4b0d      	ldr	r3, [pc, #52]	; (8014d18 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 8014ce2:	4a08      	ldr	r2, [pc, #32]	; (8014d04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8014ce4:	216e      	movs	r1, #110	; 0x6e
 8014ce6:	e7c4      	b.n	8014c72 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8014ce8:	2001      	movs	r0, #1
 8014cea:	e7b8      	b.n	8014c5e <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 8014cec:	20014c1c 	.word	0x20014c1c
 8014cf0:	20014c14 	.word	0x20014c14
 8014cf4:	20014c24 	.word	0x20014c24
 8014cf8:	20014c2c 	.word	0x20014c2c
 8014cfc:	20014c28 	.word	0x20014c28
 8014d00:	0802c8dc 	.word	0x0802c8dc
 8014d04:	0802c9a4 	.word	0x0802c9a4
 8014d08:	0802c915 	.word	0x0802c915
 8014d0c:	20014c30 	.word	0x20014c30
 8014d10:	20014c20 	.word	0x20014c20
 8014d14:	20014c18 	.word	0x20014c18
 8014d18:	0802c95f 	.word	0x0802c95f

08014d1c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 8014d1c:	4b04      	ldr	r3, [pc, #16]	; (8014d30 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 8014d1e:	6818      	ldr	r0, [r3, #0]
 8014d20:	b120      	cbz	r0, 8014d2c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 8014d22:	4b04      	ldr	r3, [pc, #16]	; (8014d34 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 8014d24:	6818      	ldr	r0, [r3, #0]
 8014d26:	3000      	adds	r0, #0
 8014d28:	bf18      	it	ne
 8014d2a:	2001      	movne	r0, #1
 8014d2c:	4770      	bx	lr
 8014d2e:	bf00      	nop
 8014d30:	20014c14 	.word	0x20014c14
 8014d34:	20014c28 	.word	0x20014c28

08014d38 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 8014d38:	4b01      	ldr	r3, [pc, #4]	; (8014d40 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 8014d3a:	6818      	ldr	r0, [r3, #0]
 8014d3c:	4770      	bx	lr
 8014d3e:	bf00      	nop
 8014d40:	20014c1c 	.word	0x20014c1c

08014d44 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 8014d44:	4b01      	ldr	r3, [pc, #4]	; (8014d4c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 8014d46:	6818      	ldr	r0, [r3, #0]
 8014d48:	4770      	bx	lr
 8014d4a:	bf00      	nop
 8014d4c:	20014c24 	.word	0x20014c24

08014d50 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 8014d50:	4b01      	ldr	r3, [pc, #4]	; (8014d58 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 8014d52:	6818      	ldr	r0, [r3, #0]
 8014d54:	4770      	bx	lr
 8014d56:	bf00      	nop
 8014d58:	20014c30 	.word	0x20014c30

08014d5c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 8014d5c:	4b01      	ldr	r3, [pc, #4]	; (8014d64 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 8014d5e:	6818      	ldr	r0, [r3, #0]
 8014d60:	4770      	bx	lr
 8014d62:	bf00      	nop
 8014d64:	20014c20 	.word	0x20014c20

08014d68 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014d68:	4b01      	ldr	r3, [pc, #4]	; (8014d70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014d6a:	6818      	ldr	r0, [r3, #0]
 8014d6c:	4770      	bx	lr
 8014d6e:	bf00      	nop
 8014d70:	20014c18 	.word	0x20014c18

08014d74 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014d74:	4b01      	ldr	r3, [pc, #4]	; (8014d7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014d76:	6818      	ldr	r0, [r3, #0]
 8014d78:	4770      	bx	lr
 8014d7a:	bf00      	nop
 8014d7c:	20014c2c 	.word	0x20014c2c

08014d80 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014d80:	b510      	push	{r4, lr}
 8014d82:	6803      	ldr	r3, [r0, #0]
 8014d84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014d86:	460c      	mov	r4, r1
 8014d88:	4798      	blx	r3
 8014d8a:	1b03      	subs	r3, r0, r4
 8014d8c:	4258      	negs	r0, r3
 8014d8e:	4158      	adcs	r0, r3
 8014d90:	bd10      	pop	{r4, pc}
	...

08014d94 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014d94:	4b01      	ldr	r3, [pc, #4]	; (8014d9c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014d96:	6019      	str	r1, [r3, #0]
 8014d98:	4770      	bx	lr
 8014d9a:	bf00      	nop
 8014d9c:	20014c34 	.word	0x20014c34

08014da0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014da4:	4696      	mov	lr, r2
 8014da6:	4605      	mov	r5, r0
 8014da8:	4614      	mov	r4, r2
 8014daa:	460e      	mov	r6, r1
 8014dac:	461f      	mov	r7, r3
 8014dae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014db2:	b097      	sub	sp, #92	; 0x5c
 8014db4:	f10d 0c1c 	add.w	ip, sp, #28
 8014db8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014dbc:	f8de 3000 	ldr.w	r3, [lr]
 8014dc0:	f8cc 3000 	str.w	r3, [ip]
 8014dc4:	f104 0e14 	add.w	lr, r4, #20
 8014dc8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014dcc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014dd0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014dd4:	f8de 3000 	ldr.w	r3, [lr]
 8014dd8:	f8cc 3000 	str.w	r3, [ip]
 8014ddc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014de0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014de4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014de8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014dec:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014df0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014df4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014df8:	f8de 3000 	ldr.w	r3, [lr]
 8014dfc:	f8cc 3000 	str.w	r3, [ip]
 8014e00:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014e02:	682b      	ldr	r3, [r5, #0]
 8014e04:	9201      	str	r2, [sp, #4]
 8014e06:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014e0a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014e0c:	9200      	str	r2, [sp, #0]
 8014e0e:	f8cd 8008 	str.w	r8, [sp, #8]
 8014e12:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014e16:	aa07      	add	r2, sp, #28
 8014e18:	463b      	mov	r3, r7
 8014e1a:	4631      	mov	r1, r6
 8014e1c:	4628      	mov	r0, r5
 8014e1e:	47d8      	blx	fp
 8014e20:	46a6      	mov	lr, r4
 8014e22:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014e26:	f10d 0c1c 	add.w	ip, sp, #28
 8014e2a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e2e:	f8de 3000 	ldr.w	r3, [lr]
 8014e32:	f8cc 3000 	str.w	r3, [ip]
 8014e36:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014e3a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014e3e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014e42:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e46:	343c      	adds	r4, #60	; 0x3c
 8014e48:	f8de 3000 	ldr.w	r3, [lr]
 8014e4c:	f8cc 3000 	str.w	r3, [ip]
 8014e50:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014e52:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014e56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e5a:	6823      	ldr	r3, [r4, #0]
 8014e5c:	f8cc 3000 	str.w	r3, [ip]
 8014e60:	682b      	ldr	r3, [r5, #0]
 8014e62:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014e66:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014e68:	9201      	str	r2, [sp, #4]
 8014e6a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014e6c:	9200      	str	r2, [sp, #0]
 8014e6e:	f8cd 8008 	str.w	r8, [sp, #8]
 8014e72:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014e74:	aa07      	add	r2, sp, #28
 8014e76:	463b      	mov	r3, r7
 8014e78:	4631      	mov	r1, r6
 8014e7a:	4628      	mov	r0, r5
 8014e7c:	47a0      	blx	r4
 8014e7e:	b017      	add	sp, #92	; 0x5c
 8014e80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e84 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e88:	b08d      	sub	sp, #52	; 0x34
 8014e8a:	4688      	mov	r8, r1
 8014e8c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014e8e:	f8d3 c000 	ldr.w	ip, [r3]
 8014e92:	680f      	ldr	r7, [r1, #0]
 8014e94:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014e98:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014e9c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014ea0:	edd3 6a07 	vldr	s13, [r3, #28]
 8014ea4:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014ea6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014eaa:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014eae:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014eb2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014eb6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014eba:	eba7 070c 	sub.w	r7, r7, ip
 8014ebe:	42bc      	cmp	r4, r7
 8014ec0:	bfa8      	it	ge
 8014ec2:	463c      	movge	r4, r7
 8014ec4:	ee07 4a90 	vmov	s15, r4
 8014ec8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014ecc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014ed0:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014ed4:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014ed8:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014edc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014ee0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014ee4:	eb09 0e0c 	add.w	lr, r9, ip
 8014ee8:	4571      	cmp	r1, lr
 8014eea:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014eee:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014ef2:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014ef6:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014efa:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014efe:	f340 808d 	ble.w	801501c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014f02:	eba1 060e 	sub.w	r6, r1, lr
 8014f06:	fb96 f5f4 	sdiv	r5, r6, r4
 8014f0a:	ee07 5a10 	vmov	s14, r5
 8014f0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014f12:	2d00      	cmp	r5, #0
 8014f14:	fb04 6615 	mls	r6, r4, r5, r6
 8014f18:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014f1c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014f20:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014f24:	dd13      	ble.n	8014f4e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014f26:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014f2a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014f2e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014f36:	bf18      	it	ne
 8014f38:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014f3c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014f40:	bf08      	it	eq
 8014f42:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014f46:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014f4a:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014f4e:	fb05 f204 	mul.w	r2, r5, r4
 8014f52:	1abf      	subs	r7, r7, r2
 8014f54:	4494      	add	ip, r2
 8014f56:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014f5a:	4411      	add	r1, r2
 8014f5c:	eb09 020c 	add.w	r2, r9, ip
 8014f60:	443a      	add	r2, r7
 8014f62:	b209      	sxth	r1, r1
 8014f64:	428a      	cmp	r2, r1
 8014f66:	bfc4      	itt	gt
 8014f68:	eba1 0209 	subgt.w	r2, r1, r9
 8014f6c:	eba2 070c 	subgt.w	r7, r2, ip
 8014f70:	2f00      	cmp	r7, #0
 8014f72:	dd50      	ble.n	8015016 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014f74:	fb97 f1f4 	sdiv	r1, r7, r4
 8014f78:	fb04 7211 	mls	r2, r4, r1, r7
 8014f7c:	b90a      	cbnz	r2, 8014f82 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014f7e:	3901      	subs	r1, #1
 8014f80:	4622      	mov	r2, r4
 8014f82:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014f86:	6840      	ldr	r0, [r0, #4]
 8014f88:	900b      	str	r0, [sp, #44]	; 0x2c
 8014f8a:	f8d0 a000 	ldr.w	sl, [r0]
 8014f8e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014f90:	9008      	str	r0, [sp, #32]
 8014f92:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014f96:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014f98:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014f9c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014fa0:	695b      	ldr	r3, [r3, #20]
 8014fa2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014fa4:	445b      	add	r3, fp
 8014fa6:	eef0 6a42 	vmov.f32	s13, s4
 8014faa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014fae:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014fb2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014fb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014fba:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014fbe:	9307      	str	r3, [sp, #28]
 8014fc0:	ee17 7a90 	vmov	r7, s15
 8014fc4:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014fc8:	eeb0 7a61 	vmov.f32	s14, s3
 8014fcc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014fd0:	ee16 3a90 	vmov	r3, s13
 8014fd4:	fb97 f7f4 	sdiv	r7, r7, r4
 8014fd8:	ee17 ca90 	vmov	ip, s15
 8014fdc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014fe0:	fb9c fcf4 	sdiv	ip, ip, r4
 8014fe4:	fb0c 3306 	mla	r3, ip, r6, r3
 8014fe8:	9302      	str	r3, [sp, #8]
 8014fea:	ee17 3a10 	vmov	r3, s14
 8014fee:	44b6      	add	lr, r6
 8014ff0:	fb04 e505 	mla	r5, r4, r5, lr
 8014ff4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014ff8:	fb07 3706 	mla	r7, r7, r6, r3
 8014ffc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015000:	e9cd 4700 	strd	r4, r7, [sp]
 8015004:	2900      	cmp	r1, #0
 8015006:	bfcc      	ite	gt
 8015008:	46a1      	movgt	r9, r4
 801500a:	4691      	movle	r9, r2
 801500c:	eba9 0306 	sub.w	r3, r9, r6
 8015010:	f8da 4008 	ldr.w	r4, [sl, #8]
 8015014:	47a0      	blx	r4
 8015016:	b00d      	add	sp, #52	; 0x34
 8015018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801501c:	2500      	movs	r5, #0
 801501e:	462e      	mov	r6, r5
 8015020:	e799      	b.n	8014f56 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08015024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015028:	b0db      	sub	sp, #364	; 0x16c
 801502a:	461d      	mov	r5, r3
 801502c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8015030:	930a      	str	r3, [sp, #40]	; 0x28
 8015032:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8015036:	930b      	str	r3, [sp, #44]	; 0x2c
 8015038:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801503c:	9310      	str	r3, [sp, #64]	; 0x40
 801503e:	6803      	ldr	r3, [r0, #0]
 8015040:	910f      	str	r1, [sp, #60]	; 0x3c
 8015042:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8015044:	9009      	str	r0, [sp, #36]	; 0x24
 8015046:	4614      	mov	r4, r2
 8015048:	4629      	mov	r1, r5
 801504a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801504e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8015052:	47b8      	blx	r7
 8015054:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015056:	6058      	str	r0, [r3, #4]
 8015058:	2800      	cmp	r0, #0
 801505a:	f000 83a1 	beq.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801505e:	682b      	ldr	r3, [r5, #0]
 8015060:	9314      	str	r3, [sp, #80]	; 0x50
 8015062:	686b      	ldr	r3, [r5, #4]
 8015064:	9315      	str	r3, [sp, #84]	; 0x54
 8015066:	4bc4      	ldr	r3, [pc, #784]	; (8015378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8015068:	ed94 7a02 	vldr	s14, [r4, #8]
 801506c:	7819      	ldrb	r1, [r3, #0]
 801506e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8015072:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8015076:	2900      	cmp	r1, #0
 8015078:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801507c:	bf16      	itet	ne
 801507e:	4619      	movne	r1, r3
 8015080:	4611      	moveq	r1, r2
 8015082:	4613      	movne	r3, r2
 8015084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015088:	9116      	str	r1, [sp, #88]	; 0x58
 801508a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801508e:	f240 8387 	bls.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015092:	ed94 7a07 	vldr	s14, [r4, #28]
 8015096:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801509a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801509e:	f240 837f 	bls.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150a2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80150a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80150aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80150ae:	f240 8377 	bls.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150b2:	6822      	ldr	r2, [r4, #0]
 80150b4:	4bb1      	ldr	r3, [pc, #708]	; (801537c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80150b6:	429a      	cmp	r2, r3
 80150b8:	f2c0 8372 	blt.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150bc:	49b0      	ldr	r1, [pc, #704]	; (8015380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80150be:	6963      	ldr	r3, [r4, #20]
 80150c0:	428a      	cmp	r2, r1
 80150c2:	f300 836d 	bgt.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150c6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80150ca:	48ae      	ldr	r0, [pc, #696]	; (8015384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80150cc:	33ff      	adds	r3, #255	; 0xff
 80150ce:	4283      	cmp	r3, r0
 80150d0:	f200 8366 	bhi.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80150d6:	4dac      	ldr	r5, [pc, #688]	; (8015388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80150d8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80150dc:	33ff      	adds	r3, #255	; 0xff
 80150de:	42ab      	cmp	r3, r5
 80150e0:	f200 835e 	bhi.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150e4:	6862      	ldr	r2, [r4, #4]
 80150e6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80150ea:	33ff      	adds	r3, #255	; 0xff
 80150ec:	4283      	cmp	r3, r0
 80150ee:	f200 8357 	bhi.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150f2:	69a1      	ldr	r1, [r4, #24]
 80150f4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80150f8:	33ff      	adds	r3, #255	; 0xff
 80150fa:	4283      	cmp	r3, r0
 80150fc:	f200 8350 	bhi.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015100:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8015102:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8015106:	30ff      	adds	r0, #255	; 0xff
 8015108:	42a8      	cmp	r0, r5
 801510a:	f200 8349 	bhi.w	80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801510e:	428a      	cmp	r2, r1
 8015110:	f280 8110 	bge.w	8015334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015114:	429a      	cmp	r2, r3
 8015116:	f300 8119 	bgt.w	801534c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801511a:	4299      	cmp	r1, r3
 801511c:	f280 811d 	bge.w	801535a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015120:	2502      	movs	r5, #2
 8015122:	2701      	movs	r7, #1
 8015124:	46a9      	mov	r9, r5
 8015126:	46b8      	mov	r8, r7
 8015128:	f04f 0a00 	mov.w	sl, #0
 801512c:	4621      	mov	r1, r4
 801512e:	a849      	add	r0, sp, #292	; 0x124
 8015130:	f003 fdd4 	bl	8018cdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015134:	4622      	mov	r2, r4
 8015136:	4653      	mov	r3, sl
 8015138:	a949      	add	r1, sp, #292	; 0x124
 801513a:	f8cd 9000 	str.w	r9, [sp]
 801513e:	a819      	add	r0, sp, #100	; 0x64
 8015140:	f003 fefc 	bl	8018f3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015144:	4622      	mov	r2, r4
 8015146:	4653      	mov	r3, sl
 8015148:	a949      	add	r1, sp, #292	; 0x124
 801514a:	f8cd 8000 	str.w	r8, [sp]
 801514e:	a829      	add	r0, sp, #164	; 0xa4
 8015150:	f003 fef4 	bl	8018f3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015154:	4643      	mov	r3, r8
 8015156:	4622      	mov	r2, r4
 8015158:	a949      	add	r1, sp, #292	; 0x124
 801515a:	f8cd 9000 	str.w	r9, [sp]
 801515e:	a839      	add	r0, sp, #228	; 0xe4
 8015160:	f003 feec 	bl	8018f3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015164:	42af      	cmp	r7, r5
 8015166:	bfb5      	itete	lt
 8015168:	2300      	movlt	r3, #0
 801516a:	2301      	movge	r3, #1
 801516c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801516e:	930e      	strge	r3, [sp, #56]	; 0x38
 8015170:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015172:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015176:	af12      	add	r7, sp, #72	; 0x48
 8015178:	bfb9      	ittee	lt
 801517a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801517c:	ac19      	addlt	r4, sp, #100	; 0x64
 801517e:	ad19      	addge	r5, sp, #100	; 0x64
 8015180:	ac29      	addge	r4, sp, #164	; 0xa4
 8015182:	e887 0003 	stmia.w	r7, {r0, r1}
 8015186:	b928      	cbnz	r0, 8015194 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015188:	4b80      	ldr	r3, [pc, #512]	; (801538c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801518a:	6818      	ldr	r0, [r3, #0]
 801518c:	6803      	ldr	r3, [r0, #0]
 801518e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015190:	4798      	blx	r3
 8015192:	6038      	str	r0, [r7, #0]
 8015194:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015196:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801519a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801519e:	930c      	str	r3, [sp, #48]	; 0x30
 80151a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80151a2:	6963      	ldr	r3, [r4, #20]
 80151a4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80151a6:	440b      	add	r3, r1
 80151a8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80151ac:	4408      	add	r0, r1
 80151ae:	b200      	sxth	r0, r0
 80151b0:	4283      	cmp	r3, r0
 80151b2:	900d      	str	r0, [sp, #52]	; 0x34
 80151b4:	f280 80dd 	bge.w	8015372 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80151b8:	428b      	cmp	r3, r1
 80151ba:	da08      	bge.n	80151ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80151bc:	2a00      	cmp	r2, #0
 80151be:	dd06      	ble.n	80151ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80151c0:	1acb      	subs	r3, r1, r3
 80151c2:	429a      	cmp	r2, r3
 80151c4:	f2c0 80e4 	blt.w	8015390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80151c8:	2b00      	cmp	r3, #0
 80151ca:	f300 80e2 	bgt.w	8015392 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80151ce:	6967      	ldr	r7, [r4, #20]
 80151d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80151d2:	443b      	add	r3, r7
 80151d4:	461f      	mov	r7, r3
 80151d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80151d8:	1bdf      	subs	r7, r3, r7
 80151da:	4297      	cmp	r7, r2
 80151dc:	bfa8      	it	ge
 80151de:	4617      	movge	r7, r2
 80151e0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80151e4:	2f00      	cmp	r7, #0
 80151e6:	f340 8166 	ble.w	80154b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80151ea:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80151ec:	6829      	ldr	r1, [r5, #0]
 80151ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151f2:	f9bb 3000 	ldrsh.w	r3, [fp]
 80151f6:	6820      	ldr	r0, [r4, #0]
 80151f8:	4411      	add	r1, r2
 80151fa:	4299      	cmp	r1, r3
 80151fc:	dd1a      	ble.n	8015234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80151fe:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015202:	440b      	add	r3, r1
 8015204:	4402      	add	r2, r0
 8015206:	b21b      	sxth	r3, r3
 8015208:	429a      	cmp	r2, r3
 801520a:	dc13      	bgt.n	8015234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801520c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801520e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015210:	681b      	ldr	r3, [r3, #0]
 8015212:	9206      	str	r2, [sp, #24]
 8015214:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015216:	9205      	str	r2, [sp, #20]
 8015218:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801521a:	9500      	str	r5, [sp, #0]
 801521c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015220:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015222:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015224:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015228:	a912      	add	r1, sp, #72	; 0x48
 801522a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801522e:	aa49      	add	r2, sp, #292	; 0x124
 8015230:	4623      	mov	r3, r4
 8015232:	47c8      	blx	r9
 8015234:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015238:	441a      	add	r2, r3
 801523a:	6963      	ldr	r3, [r4, #20]
 801523c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015240:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015244:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015248:	68a1      	ldr	r1, [r4, #8]
 801524a:	ed94 6a08 	vldr	s12, [r4, #32]
 801524e:	6022      	str	r2, [r4, #0]
 8015250:	3301      	adds	r3, #1
 8015252:	6163      	str	r3, [r4, #20]
 8015254:	69a3      	ldr	r3, [r4, #24]
 8015256:	ee37 7a27 	vadd.f32	s14, s14, s15
 801525a:	3b01      	subs	r3, #1
 801525c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015260:	61a3      	str	r3, [r4, #24]
 8015262:	6923      	ldr	r3, [r4, #16]
 8015264:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015268:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801526c:	edd4 6a07 	vldr	s13, [r4, #28]
 8015270:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015274:	440b      	add	r3, r1
 8015276:	68e1      	ldr	r1, [r4, #12]
 8015278:	6123      	str	r3, [r4, #16]
 801527a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801527e:	428b      	cmp	r3, r1
 8015280:	edc4 6a07 	vstr	s13, [r4, #28]
 8015284:	db15      	blt.n	80152b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8015286:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801528a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801528e:	3201      	adds	r2, #1
 8015290:	edc4 6a07 	vstr	s13, [r4, #28]
 8015294:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015298:	6022      	str	r2, [r4, #0]
 801529a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801529e:	1a5b      	subs	r3, r3, r1
 80152a0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80152a4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80152a8:	6123      	str	r3, [r4, #16]
 80152aa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80152ae:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80152b2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80152b6:	441a      	add	r2, r3
 80152b8:	696b      	ldr	r3, [r5, #20]
 80152ba:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80152be:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80152c2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80152c6:	68a9      	ldr	r1, [r5, #8]
 80152c8:	ed95 6a08 	vldr	s12, [r5, #32]
 80152cc:	602a      	str	r2, [r5, #0]
 80152ce:	3301      	adds	r3, #1
 80152d0:	616b      	str	r3, [r5, #20]
 80152d2:	69ab      	ldr	r3, [r5, #24]
 80152d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80152d8:	3b01      	subs	r3, #1
 80152da:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80152de:	61ab      	str	r3, [r5, #24]
 80152e0:	692b      	ldr	r3, [r5, #16]
 80152e2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80152e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80152ea:	edd5 6a07 	vldr	s13, [r5, #28]
 80152ee:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80152f2:	440b      	add	r3, r1
 80152f4:	68e9      	ldr	r1, [r5, #12]
 80152f6:	612b      	str	r3, [r5, #16]
 80152f8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80152fc:	428b      	cmp	r3, r1
 80152fe:	edc5 6a07 	vstr	s13, [r5, #28]
 8015302:	db15      	blt.n	8015330 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8015304:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015308:	ee76 6a26 	vadd.f32	s13, s12, s13
 801530c:	3201      	adds	r2, #1
 801530e:	edc5 6a07 	vstr	s13, [r5, #28]
 8015312:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015316:	602a      	str	r2, [r5, #0]
 8015318:	ee36 7a87 	vadd.f32	s14, s13, s14
 801531c:	1a5b      	subs	r3, r3, r1
 801531e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015322:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015326:	612b      	str	r3, [r5, #16]
 8015328:	ee77 7a27 	vadd.f32	s15, s14, s15
 801532c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015330:	3f01      	subs	r7, #1
 8015332:	e757      	b.n	80151e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015334:	4299      	cmp	r1, r3
 8015336:	dc13      	bgt.n	8015360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015338:	429a      	cmp	r2, r3
 801533a:	da14      	bge.n	8015366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801533c:	2502      	movs	r5, #2
 801533e:	2703      	movs	r7, #3
 8015340:	46a9      	mov	r9, r5
 8015342:	f04f 0800 	mov.w	r8, #0
 8015346:	f04f 0a01 	mov.w	sl, #1
 801534a:	e6ef      	b.n	801512c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801534c:	2501      	movs	r5, #1
 801534e:	2700      	movs	r7, #0
 8015350:	46a9      	mov	r9, r5
 8015352:	46b8      	mov	r8, r7
 8015354:	f04f 0a02 	mov.w	sl, #2
 8015358:	e6e8      	b.n	801512c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801535a:	2501      	movs	r5, #1
 801535c:	2702      	movs	r7, #2
 801535e:	e6e1      	b.n	8015124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015360:	2500      	movs	r5, #0
 8015362:	2701      	movs	r7, #1
 8015364:	e7f4      	b.n	8015350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8015366:	2702      	movs	r7, #2
 8015368:	2503      	movs	r5, #3
 801536a:	f04f 0900 	mov.w	r9, #0
 801536e:	46b8      	mov	r8, r7
 8015370:	e7e9      	b.n	8015346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8015372:	4613      	mov	r3, r2
 8015374:	e728      	b.n	80151c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8015376:	bf00      	nop
 8015378:	20014c04 	.word	0x20014c04
 801537c:	fffd8f01 	.word	0xfffd8f01
 8015380:	00027100 	.word	0x00027100
 8015384:	0004e1ff 	.word	0x0004e1ff
 8015388:	0004e1fe 	.word	0x0004e1fe
 801538c:	20014c0c 	.word	0x20014c0c
 8015390:	4613      	mov	r3, r2
 8015392:	992b      	ldr	r1, [sp, #172]	; 0xac
 8015394:	9111      	str	r1, [sp, #68]	; 0x44
 8015396:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801539a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801539e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80153a0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80153a4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80153a8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80153ac:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80153b0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80153b4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80153b8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80153bc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80153c0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80153c4:	469e      	mov	lr, r3
 80153c6:	469c      	mov	ip, r3
 80153c8:	f04f 0900 	mov.w	r9, #0
 80153cc:	f1bc 0f00 	cmp.w	ip, #0
 80153d0:	d147      	bne.n	8015462 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80153d2:	eb03 0c07 	add.w	ip, r3, r7
 80153d6:	1ad7      	subs	r7, r2, r3
 80153d8:	f1b9 0f00 	cmp.w	r9, #0
 80153dc:	d009      	beq.n	80153f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80153de:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80153e2:	9029      	str	r0, [sp, #164]	; 0xa4
 80153e4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80153e8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80153ec:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80153f0:	912d      	str	r1, [sp, #180]	; 0xb4
 80153f2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80153f4:	9111      	str	r1, [sp, #68]	; 0x44
 80153f6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80153fa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80153fe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015402:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015406:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801540a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801540e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015412:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015416:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801541a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801541e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015422:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015426:	f04f 0800 	mov.w	r8, #0
 801542a:	f1be 0f00 	cmp.w	lr, #0
 801542e:	d031      	beq.n	8015494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015430:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015432:	4431      	add	r1, r6
 8015434:	4549      	cmp	r1, r9
 8015436:	4450      	add	r0, sl
 8015438:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801543c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015440:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015444:	db08      	blt.n	8015458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8015446:	ee77 7a85 	vadd.f32	s15, s15, s10
 801544a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801544e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015452:	3001      	adds	r0, #1
 8015454:	eba1 0109 	sub.w	r1, r1, r9
 8015458:	f10e 3eff 	add.w	lr, lr, #4294967295
 801545c:	f04f 0801 	mov.w	r8, #1
 8015460:	e7e3      	b.n	801542a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8015462:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015464:	4431      	add	r1, r6
 8015466:	4541      	cmp	r1, r8
 8015468:	4450      	add	r0, sl
 801546a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801546e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015472:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015476:	db08      	blt.n	801548a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015478:	ee76 6a85 	vadd.f32	s13, s13, s10
 801547c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015480:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015484:	3001      	adds	r0, #1
 8015486:	eba1 0108 	sub.w	r1, r1, r8
 801548a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801548e:	f04f 0901 	mov.w	r9, #1
 8015492:	e79b      	b.n	80153cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8015494:	449c      	add	ip, r3
 8015496:	1aff      	subs	r7, r7, r3
 8015498:	f1b8 0f00 	cmp.w	r8, #0
 801549c:	d009      	beq.n	80154b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801549e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80154a2:	9019      	str	r0, [sp, #100]	; 0x64
 80154a4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80154a8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80154ac:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80154b0:	911d      	str	r1, [sp, #116]	; 0x74
 80154b2:	1ad2      	subs	r2, r2, r3
 80154b4:	e68b      	b.n	80151ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80154b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154b8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80154ba:	2b00      	cmp	r3, #0
 80154bc:	f000 80d1 	beq.w	8015662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80154c0:	ad19      	add	r5, sp, #100	; 0x64
 80154c2:	ac39      	add	r4, sp, #228	; 0xe4
 80154c4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80154c6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80154ca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80154ce:	930c      	str	r3, [sp, #48]	; 0x30
 80154d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80154d2:	6963      	ldr	r3, [r4, #20]
 80154d4:	440b      	add	r3, r1
 80154d6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80154da:	4408      	add	r0, r1
 80154dc:	b200      	sxth	r0, r0
 80154de:	4283      	cmp	r3, r0
 80154e0:	900d      	str	r0, [sp, #52]	; 0x34
 80154e2:	f280 80c1 	bge.w	8015668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80154e6:	428b      	cmp	r3, r1
 80154e8:	da08      	bge.n	80154fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80154ea:	2a00      	cmp	r2, #0
 80154ec:	dd06      	ble.n	80154fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80154ee:	1acb      	subs	r3, r1, r3
 80154f0:	429a      	cmp	r2, r3
 80154f2:	f2c0 80bb 	blt.w	801566c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80154f6:	2b00      	cmp	r3, #0
 80154f8:	f300 80b9 	bgt.w	801566e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80154fc:	6967      	ldr	r7, [r4, #20]
 80154fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015500:	443b      	add	r3, r7
 8015502:	461f      	mov	r7, r3
 8015504:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015506:	1bdf      	subs	r7, r3, r7
 8015508:	4297      	cmp	r7, r2
 801550a:	bfa8      	it	ge
 801550c:	4617      	movge	r7, r2
 801550e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015512:	2f00      	cmp	r7, #0
 8015514:	f340 813c 	ble.w	8015790 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015518:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801551a:	6829      	ldr	r1, [r5, #0]
 801551c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015520:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015524:	6820      	ldr	r0, [r4, #0]
 8015526:	4411      	add	r1, r2
 8015528:	4299      	cmp	r1, r3
 801552a:	dd1a      	ble.n	8015562 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801552c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015530:	440b      	add	r3, r1
 8015532:	4402      	add	r2, r0
 8015534:	b21b      	sxth	r3, r3
 8015536:	429a      	cmp	r2, r3
 8015538:	dc13      	bgt.n	8015562 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801553a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801553c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801553e:	681b      	ldr	r3, [r3, #0]
 8015540:	9206      	str	r2, [sp, #24]
 8015542:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015544:	9205      	str	r2, [sp, #20]
 8015546:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015548:	9500      	str	r5, [sp, #0]
 801554a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801554e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015550:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015552:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015556:	a912      	add	r1, sp, #72	; 0x48
 8015558:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801555c:	aa49      	add	r2, sp, #292	; 0x124
 801555e:	4623      	mov	r3, r4
 8015560:	47c8      	blx	r9
 8015562:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015566:	441a      	add	r2, r3
 8015568:	6963      	ldr	r3, [r4, #20]
 801556a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801556e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015572:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015576:	68a1      	ldr	r1, [r4, #8]
 8015578:	ed94 6a08 	vldr	s12, [r4, #32]
 801557c:	6022      	str	r2, [r4, #0]
 801557e:	3301      	adds	r3, #1
 8015580:	6163      	str	r3, [r4, #20]
 8015582:	69a3      	ldr	r3, [r4, #24]
 8015584:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015588:	3b01      	subs	r3, #1
 801558a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801558e:	61a3      	str	r3, [r4, #24]
 8015590:	6923      	ldr	r3, [r4, #16]
 8015592:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015596:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801559a:	edd4 6a07 	vldr	s13, [r4, #28]
 801559e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80155a2:	440b      	add	r3, r1
 80155a4:	68e1      	ldr	r1, [r4, #12]
 80155a6:	6123      	str	r3, [r4, #16]
 80155a8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80155ac:	428b      	cmp	r3, r1
 80155ae:	edc4 6a07 	vstr	s13, [r4, #28]
 80155b2:	db15      	blt.n	80155e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80155b4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80155b8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80155bc:	3201      	adds	r2, #1
 80155be:	edc4 6a07 	vstr	s13, [r4, #28]
 80155c2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80155c6:	6022      	str	r2, [r4, #0]
 80155c8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80155cc:	1a5b      	subs	r3, r3, r1
 80155ce:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80155d2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80155d6:	6123      	str	r3, [r4, #16]
 80155d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80155dc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80155e0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80155e4:	441a      	add	r2, r3
 80155e6:	696b      	ldr	r3, [r5, #20]
 80155e8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80155ec:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80155f0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80155f4:	68a9      	ldr	r1, [r5, #8]
 80155f6:	ed95 6a08 	vldr	s12, [r5, #32]
 80155fa:	602a      	str	r2, [r5, #0]
 80155fc:	3301      	adds	r3, #1
 80155fe:	616b      	str	r3, [r5, #20]
 8015600:	69ab      	ldr	r3, [r5, #24]
 8015602:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015606:	3b01      	subs	r3, #1
 8015608:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801560c:	61ab      	str	r3, [r5, #24]
 801560e:	692b      	ldr	r3, [r5, #16]
 8015610:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015614:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015618:	edd5 6a07 	vldr	s13, [r5, #28]
 801561c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015620:	440b      	add	r3, r1
 8015622:	68e9      	ldr	r1, [r5, #12]
 8015624:	612b      	str	r3, [r5, #16]
 8015626:	ee76 6a86 	vadd.f32	s13, s13, s12
 801562a:	428b      	cmp	r3, r1
 801562c:	edc5 6a07 	vstr	s13, [r5, #28]
 8015630:	db15      	blt.n	801565e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015632:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015636:	ee76 6a26 	vadd.f32	s13, s12, s13
 801563a:	3201      	adds	r2, #1
 801563c:	edc5 6a07 	vstr	s13, [r5, #28]
 8015640:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015644:	602a      	str	r2, [r5, #0]
 8015646:	ee36 7a87 	vadd.f32	s14, s13, s14
 801564a:	1a5b      	subs	r3, r3, r1
 801564c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015650:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015654:	612b      	str	r3, [r5, #16]
 8015656:	ee77 7a27 	vadd.f32	s15, s14, s15
 801565a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801565e:	3f01      	subs	r7, #1
 8015660:	e757      	b.n	8015512 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015662:	ad39      	add	r5, sp, #228	; 0xe4
 8015664:	ac19      	add	r4, sp, #100	; 0x64
 8015666:	e72d      	b.n	80154c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015668:	4613      	mov	r3, r2
 801566a:	e744      	b.n	80154f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801566c:	4613      	mov	r3, r2
 801566e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015672:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015674:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015678:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801567c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015680:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015684:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015688:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801568c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015690:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015692:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8015696:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801569a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801569e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80156a2:	960e      	str	r6, [sp, #56]	; 0x38
 80156a4:	469e      	mov	lr, r3
 80156a6:	461f      	mov	r7, r3
 80156a8:	f04f 0900 	mov.w	r9, #0
 80156ac:	2f00      	cmp	r7, #0
 80156ae:	d146      	bne.n	801573e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80156b0:	449c      	add	ip, r3
 80156b2:	1ad7      	subs	r7, r2, r3
 80156b4:	f1b9 0f00 	cmp.w	r9, #0
 80156b8:	d009      	beq.n	80156ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80156ba:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80156be:	9039      	str	r0, [sp, #228]	; 0xe4
 80156c0:	913d      	str	r1, [sp, #244]	; 0xf4
 80156c2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80156c6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80156ca:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80156ce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80156d0:	910e      	str	r1, [sp, #56]	; 0x38
 80156d2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80156d6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80156da:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80156de:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80156e2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80156e6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80156ea:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80156ee:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80156f2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80156f6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80156fa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80156fe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015702:	f04f 0800 	mov.w	r8, #0
 8015706:	f1be 0f00 	cmp.w	lr, #0
 801570a:	d030      	beq.n	801576e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801570c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801570e:	4431      	add	r1, r6
 8015710:	4549      	cmp	r1, r9
 8015712:	4450      	add	r0, sl
 8015714:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015718:	ee37 7a04 	vadd.f32	s14, s14, s8
 801571c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015720:	db08      	blt.n	8015734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015722:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015726:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801572a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801572e:	3001      	adds	r0, #1
 8015730:	eba1 0109 	sub.w	r1, r1, r9
 8015734:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015738:	f04f 0801 	mov.w	r8, #1
 801573c:	e7e3      	b.n	8015706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801573e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015740:	4431      	add	r1, r6
 8015742:	4541      	cmp	r1, r8
 8015744:	4450      	add	r0, sl
 8015746:	ee37 7a24 	vadd.f32	s14, s14, s9
 801574a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801574e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015752:	db08      	blt.n	8015766 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015754:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015758:	ee37 7a25 	vadd.f32	s14, s14, s11
 801575c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015760:	3001      	adds	r0, #1
 8015762:	eba1 0108 	sub.w	r1, r1, r8
 8015766:	3f01      	subs	r7, #1
 8015768:	f04f 0901 	mov.w	r9, #1
 801576c:	e79e      	b.n	80156ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801576e:	449c      	add	ip, r3
 8015770:	1aff      	subs	r7, r7, r3
 8015772:	f1b8 0f00 	cmp.w	r8, #0
 8015776:	d009      	beq.n	801578c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015778:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801577c:	9019      	str	r0, [sp, #100]	; 0x64
 801577e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015782:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015786:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801578a:	911d      	str	r1, [sp, #116]	; 0x74
 801578c:	1ad2      	subs	r2, r2, r3
 801578e:	e6b5      	b.n	80154fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015790:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015792:	681b      	ldr	r3, [r3, #0]
 8015794:	b923      	cbnz	r3, 80157a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015796:	4b04      	ldr	r3, [pc, #16]	; (80157a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015798:	6818      	ldr	r0, [r3, #0]
 801579a:	6803      	ldr	r3, [r0, #0]
 801579c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801579e:	4798      	blx	r3
 80157a0:	b05b      	add	sp, #364	; 0x16c
 80157a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157a6:	bf00      	nop
 80157a8:	20014c0c 	.word	0x20014c0c

080157ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 80157ac:	b570      	push	{r4, r5, r6, lr}
 80157ae:	4604      	mov	r4, r0
 80157b0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80157b4:	9804      	ldr	r0, [sp, #16]
 80157b6:	6061      	str	r1, [r4, #4]
 80157b8:	2500      	movs	r5, #0
 80157ba:	8025      	strh	r5, [r4, #0]
 80157bc:	7223      	strb	r3, [r4, #8]
 80157be:	7266      	strb	r6, [r4, #9]
 80157c0:	60e0      	str	r0, [r4, #12]
 80157c2:	8222      	strh	r2, [r4, #16]
 80157c4:	8265      	strh	r5, [r4, #18]
 80157c6:	82a5      	strh	r5, [r4, #20]
 80157c8:	82e5      	strh	r5, [r4, #22]
 80157ca:	8325      	strh	r5, [r4, #24]
 80157cc:	8365      	strh	r5, [r4, #26]
 80157ce:	83a5      	strh	r5, [r4, #28]
 80157d0:	77a5      	strb	r5, [r4, #30]
 80157d2:	b32e      	cbz	r6, 8015820 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80157d4:	6803      	ldr	r3, [r0, #0]
 80157d6:	695b      	ldr	r3, [r3, #20]
 80157d8:	4798      	blx	r3
 80157da:	4606      	mov	r6, r0
 80157dc:	b300      	cbz	r0, 8015820 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80157de:	68e0      	ldr	r0, [r4, #12]
 80157e0:	6803      	ldr	r3, [r0, #0]
 80157e2:	4631      	mov	r1, r6
 80157e4:	68db      	ldr	r3, [r3, #12]
 80157e6:	4798      	blx	r3
 80157e8:	4605      	mov	r5, r0
 80157ea:	b1c8      	cbz	r0, 8015820 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80157ec:	7b43      	ldrb	r3, [r0, #13]
 80157ee:	7a82      	ldrb	r2, [r0, #10]
 80157f0:	005b      	lsls	r3, r3, #1
 80157f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80157f6:	4313      	orrs	r3, r2
 80157f8:	83a3      	strh	r3, [r4, #28]
 80157fa:	7a63      	ldrb	r3, [r4, #9]
 80157fc:	2b04      	cmp	r3, #4
 80157fe:	d10f      	bne.n	8015820 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8015800:	68e0      	ldr	r0, [r4, #12]
 8015802:	6803      	ldr	r3, [r0, #0]
 8015804:	462a      	mov	r2, r5
 8015806:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015808:	4631      	mov	r1, r6
 801580a:	4798      	blx	r3
 801580c:	7b6b      	ldrb	r3, [r5, #13]
 801580e:	005b      	lsls	r3, r3, #1
 8015810:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015814:	7aab      	ldrb	r3, [r5, #10]
 8015816:	4313      	orrs	r3, r2
 8015818:	4418      	add	r0, r3
 801581a:	8ba3      	ldrh	r3, [r4, #28]
 801581c:	4418      	add	r0, r3
 801581e:	83a0      	strh	r0, [r4, #28]
 8015820:	4620      	mov	r0, r4
 8015822:	bd70      	pop	{r4, r5, r6, pc}

08015824 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015828:	2400      	movs	r4, #0
 801582a:	b085      	sub	sp, #20
 801582c:	4681      	mov	r9, r0
 801582e:	4688      	mov	r8, r1
 8015830:	4692      	mov	sl, r2
 8015832:	469b      	mov	fp, r3
 8015834:	4627      	mov	r7, r4
 8015836:	4625      	mov	r5, r4
 8015838:	4626      	mov	r6, r4
 801583a:	4554      	cmp	r4, sl
 801583c:	da2a      	bge.n	8015894 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801583e:	2300      	movs	r3, #0
 8015840:	9303      	str	r3, [sp, #12]
 8015842:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015846:	429d      	cmp	r5, r3
 8015848:	d004      	beq.n	8015854 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801584a:	f242 030b 	movw	r3, #8203	; 0x200b
 801584e:	429d      	cmp	r5, r3
 8015850:	bf18      	it	ne
 8015852:	462f      	movne	r7, r5
 8015854:	ab03      	add	r3, sp, #12
 8015856:	4642      	mov	r2, r8
 8015858:	4659      	mov	r1, fp
 801585a:	4648      	mov	r0, r9
 801585c:	f002 fffa 	bl	8018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015860:	4605      	mov	r5, r0
 8015862:	b1b8      	cbz	r0, 8015894 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015864:	280a      	cmp	r0, #10
 8015866:	d015      	beq.n	8015894 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015868:	9a03      	ldr	r2, [sp, #12]
 801586a:	b18a      	cbz	r2, 8015890 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801586c:	7b50      	ldrb	r0, [r2, #13]
 801586e:	7a93      	ldrb	r3, [r2, #10]
 8015870:	8895      	ldrh	r5, [r2, #4]
 8015872:	0040      	lsls	r0, r0, #1
 8015874:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015878:	4303      	orrs	r3, r0
 801587a:	9301      	str	r3, [sp, #4]
 801587c:	f8d8 3000 	ldr.w	r3, [r8]
 8015880:	4639      	mov	r1, r7
 8015882:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015884:	4640      	mov	r0, r8
 8015886:	4798      	blx	r3
 8015888:	9b01      	ldr	r3, [sp, #4]
 801588a:	4418      	add	r0, r3
 801588c:	4406      	add	r6, r0
 801588e:	b2b6      	uxth	r6, r6
 8015890:	3401      	adds	r4, #1
 8015892:	e7d2      	b.n	801583a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015894:	4630      	mov	r0, r6
 8015896:	b005      	add	sp, #20
 8015898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801589c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801589c:	2a02      	cmp	r2, #2
 801589e:	b530      	push	{r4, r5, lr}
 80158a0:	d011      	beq.n	80158c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80158a2:	2a03      	cmp	r2, #3
 80158a4:	d01c      	beq.n	80158e0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80158a6:	2a01      	cmp	r2, #1
 80158a8:	d10c      	bne.n	80158c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80158aa:	888b      	ldrh	r3, [r1, #4]
 80158ac:	8801      	ldrh	r1, [r0, #0]
 80158ae:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80158b2:	8844      	ldrh	r4, [r0, #2]
 80158b4:	8004      	strh	r4, [r0, #0]
 80158b6:	1a5b      	subs	r3, r3, r1
 80158b8:	1a9b      	subs	r3, r3, r2
 80158ba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80158be:	8043      	strh	r3, [r0, #2]
 80158c0:	8081      	strh	r1, [r0, #4]
 80158c2:	80c2      	strh	r2, [r0, #6]
 80158c4:	bd30      	pop	{r4, r5, pc}
 80158c6:	88cb      	ldrh	r3, [r1, #6]
 80158c8:	8842      	ldrh	r2, [r0, #2]
 80158ca:	1a9b      	subs	r3, r3, r2
 80158cc:	88c2      	ldrh	r2, [r0, #6]
 80158ce:	1a9b      	subs	r3, r3, r2
 80158d0:	888a      	ldrh	r2, [r1, #4]
 80158d2:	8801      	ldrh	r1, [r0, #0]
 80158d4:	8043      	strh	r3, [r0, #2]
 80158d6:	1a52      	subs	r2, r2, r1
 80158d8:	8881      	ldrh	r1, [r0, #4]
 80158da:	1a52      	subs	r2, r2, r1
 80158dc:	8002      	strh	r2, [r0, #0]
 80158de:	e7f1      	b.n	80158c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80158e0:	88cb      	ldrh	r3, [r1, #6]
 80158e2:	8841      	ldrh	r1, [r0, #2]
 80158e4:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80158e8:	f9b0 5000 	ldrsh.w	r5, [r0]
 80158ec:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80158f0:	8045      	strh	r5, [r0, #2]
 80158f2:	1a5b      	subs	r3, r3, r1
 80158f4:	1a9b      	subs	r3, r3, r2
 80158f6:	8003      	strh	r3, [r0, #0]
 80158f8:	8082      	strh	r2, [r0, #4]
 80158fa:	80c4      	strh	r4, [r0, #6]
 80158fc:	e7e2      	b.n	80158c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080158fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80158fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015902:	b09f      	sub	sp, #124	; 0x7c
 8015904:	9116      	str	r1, [sp, #88]	; 0x58
 8015906:	9317      	str	r3, [sp, #92]	; 0x5c
 8015908:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801590a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801590c:	8809      	ldrh	r1, [r1, #0]
 801590e:	889b      	ldrh	r3, [r3, #4]
 8015910:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015914:	9212      	str	r2, [sp, #72]	; 0x48
 8015916:	440b      	add	r3, r1
 8015918:	b21b      	sxth	r3, r3
 801591a:	9310      	str	r3, [sp, #64]	; 0x40
 801591c:	f8d8 3000 	ldr.w	r3, [r8]
 8015920:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015924:	7a59      	ldrb	r1, [r3, #9]
 8015926:	7a1b      	ldrb	r3, [r3, #8]
 8015928:	9011      	str	r0, [sp, #68]	; 0x44
 801592a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801592e:	9114      	str	r1, [sp, #80]	; 0x50
 8015930:	9315      	str	r3, [sp, #84]	; 0x54
 8015932:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8015936:	2a00      	cmp	r2, #0
 8015938:	d067      	beq.n	8015a0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 801593a:	f898 3010 	ldrb.w	r3, [r8, #16]
 801593e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015940:	2b04      	cmp	r3, #4
 8015942:	bf14      	ite	ne
 8015944:	2301      	movne	r3, #1
 8015946:	2302      	moveq	r3, #2
 8015948:	4413      	add	r3, r2
 801594a:	f04f 0900 	mov.w	r9, #0
 801594e:	930f      	str	r3, [sp, #60]	; 0x3c
 8015950:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015954:	464c      	mov	r4, r9
 8015956:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801595a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801595e:	4293      	cmp	r3, r2
 8015960:	f280 808c 	bge.w	8015a7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 8015964:	2300      	movs	r3, #0
 8015966:	931c      	str	r3, [sp, #112]	; 0x70
 8015968:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801596c:	429c      	cmp	r4, r3
 801596e:	d006      	beq.n	801597e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 8015970:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015972:	f242 020b 	movw	r2, #8203	; 0x200b
 8015976:	4294      	cmp	r4, r2
 8015978:	bf18      	it	ne
 801597a:	4623      	movne	r3, r4
 801597c:	930d      	str	r3, [sp, #52]	; 0x34
 801597e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015980:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015982:	f8d8 2000 	ldr.w	r2, [r8]
 8015986:	428b      	cmp	r3, r1
 8015988:	db41      	blt.n	8015a0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 801598a:	6813      	ldr	r3, [r2, #0]
 801598c:	4610      	mov	r0, r2
 801598e:	695b      	ldr	r3, [r3, #20]
 8015990:	4798      	blx	r3
 8015992:	4604      	mov	r4, r0
 8015994:	f8d8 0000 	ldr.w	r0, [r8]
 8015998:	6803      	ldr	r3, [r0, #0]
 801599a:	aa1d      	add	r2, sp, #116	; 0x74
 801599c:	689e      	ldr	r6, [r3, #8]
 801599e:	4621      	mov	r1, r4
 80159a0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80159a4:	47b0      	blx	r6
 80159a6:	901c      	str	r0, [sp, #112]	; 0x70
 80159a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80159ac:	429c      	cmp	r4, r3
 80159ae:	f000 80e9 	beq.w	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80159b2:	f242 030b 	movw	r3, #8203	; 0x200b
 80159b6:	429c      	cmp	r4, r3
 80159b8:	f000 80e4 	beq.w	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80159bc:	2c00      	cmp	r4, #0
 80159be:	f000 80f6 	beq.w	8015bae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 80159c2:	2c0a      	cmp	r4, #10
 80159c4:	d060      	beq.n	8015a88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 80159c6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80159c8:	b36a      	cbz	r2, 8015a26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 80159ca:	8894      	ldrh	r4, [r2, #4]
 80159cc:	f1bb 0f00 	cmp.w	fp, #0
 80159d0:	d03b      	beq.n	8015a4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 80159d2:	f892 900d 	ldrb.w	r9, [r2, #13]
 80159d6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80159da:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80159de:	f892 900a 	ldrb.w	r9, [r2, #10]
 80159e2:	f1bb 0f01 	cmp.w	fp, #1
 80159e6:	ea49 0903 	orr.w	r9, r9, r3
 80159ea:	d134      	bne.n	8015a56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 80159ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80159ee:	eba5 0509 	sub.w	r5, r5, r9
 80159f2:	2b00      	cmp	r3, #0
 80159f4:	d14f      	bne.n	8015a96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 80159f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80159f8:	eb09 0305 	add.w	r3, r9, r5
 80159fc:	4413      	add	r3, r2
 80159fe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015a00:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015a04:	4293      	cmp	r3, r2
 8015a06:	da51      	bge.n	8015aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8015a08:	e038      	b.n	8015a7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 8015a0a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015a0c:	e79d      	b.n	801594a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015a0e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015a12:	9301      	str	r3, [sp, #4]
 8015a14:	ab1d      	add	r3, sp, #116	; 0x74
 8015a16:	9300      	str	r3, [sp, #0]
 8015a18:	4659      	mov	r1, fp
 8015a1a:	ab1c      	add	r3, sp, #112	; 0x70
 8015a1c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015a1e:	f002 ff71 	bl	8018904 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015a22:	4604      	mov	r4, r0
 8015a24:	e7c0      	b.n	80159a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 8015a26:	f8d8 0000 	ldr.w	r0, [r8]
 8015a2a:	6803      	ldr	r3, [r0, #0]
 8015a2c:	691b      	ldr	r3, [r3, #16]
 8015a2e:	4798      	blx	r3
 8015a30:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015a34:	4298      	cmp	r0, r3
 8015a36:	f000 80a5 	beq.w	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8015a3a:	f242 030b 	movw	r3, #8203	; 0x200b
 8015a3e:	4298      	cmp	r0, r3
 8015a40:	f000 80a0 	beq.w	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8015a44:	f1bb 0f00 	cmp.w	fp, #0
 8015a48:	d100      	bne.n	8015a4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 8015a4a:	444d      	add	r5, r9
 8015a4c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015a4e:	2a00      	cmp	r2, #0
 8015a50:	d1bf      	bne.n	80159d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 8015a52:	4691      	mov	r9, r2
 8015a54:	e096      	b.n	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8015a56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a58:	2b00      	cmp	r3, #0
 8015a5a:	f000 80aa 	beq.w	8015bb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 8015a5e:	f1bb 0f00 	cmp.w	fp, #0
 8015a62:	d118      	bne.n	8015a96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 8015a64:	f8d8 0000 	ldr.w	r0, [r8]
 8015a68:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015a6a:	6803      	ldr	r3, [r0, #0]
 8015a6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015a6e:	4798      	blx	r3
 8015a70:	4405      	add	r5, r0
 8015a72:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015a74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015a76:	1aeb      	subs	r3, r5, r3
 8015a78:	4293      	cmp	r3, r2
 8015a7a:	dd17      	ble.n	8015aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8015a7c:	2c00      	cmp	r4, #0
 8015a7e:	f000 8096 	beq.w	8015bae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 8015a82:	2c0a      	cmp	r4, #10
 8015a84:	f040 8084 	bne.w	8015b90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8015a88:	240a      	movs	r4, #10
 8015a8a:	fab4 f084 	clz	r0, r4
 8015a8e:	0940      	lsrs	r0, r0, #5
 8015a90:	b01f      	add	sp, #124	; 0x7c
 8015a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a96:	f8d8 0000 	ldr.w	r0, [r8]
 8015a9a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015a9c:	6803      	ldr	r3, [r0, #0]
 8015a9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015aa0:	4798      	blx	r3
 8015aa2:	f1bb 0f01 	cmp.w	fp, #1
 8015aa6:	eba5 0500 	sub.w	r5, r5, r0
 8015aaa:	d0a4      	beq.n	80159f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 8015aac:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015aae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015ab0:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015ab4:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015ab8:	7b43      	ldrb	r3, [r0, #13]
 8015aba:	015b      	lsls	r3, r3, #5
 8015abc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015ac0:	7983      	ldrb	r3, [r0, #6]
 8015ac2:	4429      	add	r1, r5
 8015ac4:	4313      	orrs	r3, r2
 8015ac6:	440b      	add	r3, r1
 8015ac8:	42b3      	cmp	r3, r6
 8015aca:	db5b      	blt.n	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8015acc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ace:	4299      	cmp	r1, r3
 8015ad0:	da58      	bge.n	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8015ad2:	f8d8 0000 	ldr.w	r0, [r8]
 8015ad6:	6803      	ldr	r3, [r0, #0]
 8015ad8:	42ae      	cmp	r6, r5
 8015ada:	bfc8      	it	gt
 8015adc:	1b76      	subgt	r6, r6, r5
 8015ade:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ae0:	bfcc      	ite	gt
 8015ae2:	b2b6      	uxthgt	r6, r6
 8015ae4:	2600      	movle	r6, #0
 8015ae6:	4798      	blx	r3
 8015ae8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015aea:	7b5a      	ldrb	r2, [r3, #13]
 8015aec:	00d1      	lsls	r1, r2, #3
 8015aee:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8015af2:	7a19      	ldrb	r1, [r3, #8]
 8015af4:	4339      	orrs	r1, r7
 8015af6:	0657      	lsls	r7, r2, #25
 8015af8:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8015afa:	bf44      	itt	mi
 8015afc:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8015b00:	b209      	sxthmi	r1, r1
 8015b02:	19c7      	adds	r7, r0, r7
 8015b04:	1a7f      	subs	r7, r7, r1
 8015b06:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015b08:	b2bf      	uxth	r7, r7
 8015b0a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015b0e:	fa0f fa87 	sxth.w	sl, r7
 8015b12:	4551      	cmp	r1, sl
 8015b14:	dd3a      	ble.n	8015b8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015b16:	0112      	lsls	r2, r2, #4
 8015b18:	79d8      	ldrb	r0, [r3, #7]
 8015b1a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015b1e:	4302      	orrs	r2, r0
 8015b20:	4492      	add	sl, r2
 8015b22:	4551      	cmp	r1, sl
 8015b24:	dc2e      	bgt.n	8015b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8015b26:	1bcf      	subs	r7, r1, r7
 8015b28:	b2bf      	uxth	r7, r7
 8015b2a:	468a      	mov	sl, r1
 8015b2c:	9319      	str	r3, [sp, #100]	; 0x64
 8015b2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015b30:	f8d8 0000 	ldr.w	r0, [r8]
 8015b34:	681a      	ldr	r2, [r3, #0]
 8015b36:	6801      	ldr	r1, [r0, #0]
 8015b38:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015b3a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015b3c:	9313      	str	r3, [sp, #76]	; 0x4c
 8015b3e:	9218      	str	r2, [sp, #96]	; 0x60
 8015b40:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8015b42:	4788      	blx	r1
 8015b44:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015b48:	910b      	str	r1, [sp, #44]	; 0x2c
 8015b4a:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015b4e:	910a      	str	r1, [sp, #40]	; 0x28
 8015b50:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015b54:	9109      	str	r1, [sp, #36]	; 0x24
 8015b56:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015b58:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015b5c:	9305      	str	r3, [sp, #20]
 8015b5e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015b60:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015b62:	9206      	str	r2, [sp, #24]
 8015b64:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015b68:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8015b6c:	e9cd a601 	strd	sl, r6, [sp, #4]
 8015b70:	442e      	add	r6, r5
 8015b72:	b236      	sxth	r6, r6
 8015b74:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015b76:	9600      	str	r6, [sp, #0]
 8015b78:	681a      	ldr	r2, [r3, #0]
 8015b7a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015b7c:	685b      	ldr	r3, [r3, #4]
 8015b7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b80:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015b82:	47b0      	blx	r6
 8015b84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b86:	3301      	adds	r3, #1
 8015b88:	930e      	str	r3, [sp, #56]	; 0x38
 8015b8a:	e6e6      	b.n	801595a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015b8c:	2700      	movs	r7, #0
 8015b8e:	e7cd      	b.n	8015b2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 8015b90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015b92:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015b94:	3501      	adds	r5, #1
 8015b96:	429d      	cmp	r5, r3
 8015b98:	f6bf af77 	bge.w	8015a8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8015b9c:	4659      	mov	r1, fp
 8015b9e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015ba0:	f7f1 f876 	bl	8006c90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015ba4:	4604      	mov	r4, r0
 8015ba6:	b110      	cbz	r0, 8015bae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 8015ba8:	280a      	cmp	r0, #10
 8015baa:	d1f2      	bne.n	8015b92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8015bac:	e76c      	b.n	8015a88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 8015bae:	2400      	movs	r4, #0
 8015bb0:	e76b      	b.n	8015a8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8015bb2:	f1bb 0f00 	cmp.w	fp, #0
 8015bb6:	f43f af5c 	beq.w	8015a72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 8015bba:	e777      	b.n	8015aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08015bbc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015bbc:	b530      	push	{r4, r5, lr}
 8015bbe:	8a44      	ldrh	r4, [r0, #18]
 8015bc0:	8ac5      	ldrh	r5, [r0, #22]
 8015bc2:	82c3      	strh	r3, [r0, #22]
 8015bc4:	442c      	add	r4, r5
 8015bc6:	1ae4      	subs	r4, r4, r3
 8015bc8:	8244      	strh	r4, [r0, #18]
 8015bca:	8b03      	ldrh	r3, [r0, #24]
 8015bcc:	8a84      	ldrh	r4, [r0, #20]
 8015bce:	4422      	add	r2, r4
 8015bd0:	440c      	add	r4, r1
 8015bd2:	1a59      	subs	r1, r3, r1
 8015bd4:	8342      	strh	r2, [r0, #26]
 8015bd6:	8284      	strh	r4, [r0, #20]
 8015bd8:	8301      	strh	r1, [r0, #24]
 8015bda:	bd30      	pop	{r4, r5, pc}

08015bdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8015bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015be0:	7a43      	ldrb	r3, [r0, #9]
 8015be2:	1eda      	subs	r2, r3, #3
 8015be4:	b087      	sub	sp, #28
 8015be6:	4604      	mov	r4, r0
 8015be8:	b2d2      	uxtb	r2, r2
 8015bea:	460f      	mov	r7, r1
 8015bec:	2900      	cmp	r1, #0
 8015bee:	d036      	beq.n	8015c5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8015bf0:	2a01      	cmp	r2, #1
 8015bf2:	d932      	bls.n	8015c5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8015bf4:	1e58      	subs	r0, r3, #1
 8015bf6:	f1d0 0b00 	rsbs	fp, r0, #0
 8015bfa:	eb4b 0b00 	adc.w	fp, fp, r0
 8015bfe:	1e99      	subs	r1, r3, #2
 8015c00:	424b      	negs	r3, r1
 8015c02:	414b      	adcs	r3, r1
 8015c04:	9303      	str	r3, [sp, #12]
 8015c06:	2300      	movs	r3, #0
 8015c08:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8015c0c:	2500      	movs	r5, #0
 8015c0e:	8265      	strh	r5, [r4, #18]
 8015c10:	82a5      	strh	r5, [r4, #20]
 8015c12:	46a9      	mov	r9, r5
 8015c14:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8015c18:	2300      	movs	r3, #0
 8015c1a:	9305      	str	r3, [sp, #20]
 8015c1c:	8823      	ldrh	r3, [r4, #0]
 8015c1e:	2b20      	cmp	r3, #32
 8015c20:	d02b      	beq.n	8015c7a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8015c22:	eba3 020a 	sub.w	r2, r3, sl
 8015c26:	4256      	negs	r6, r2
 8015c28:	4156      	adcs	r6, r2
 8015c2a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015c2e:	4293      	cmp	r3, r2
 8015c30:	d004      	beq.n	8015c3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8015c32:	4553      	cmp	r3, sl
 8015c34:	bf16      	itet	ne
 8015c36:	4699      	movne	r9, r3
 8015c38:	2601      	moveq	r6, #1
 8015c3a:	2600      	movne	r6, #0
 8015c3c:	ab05      	add	r3, sp, #20
 8015c3e:	68e2      	ldr	r2, [r4, #12]
 8015c40:	7a21      	ldrb	r1, [r4, #8]
 8015c42:	6860      	ldr	r0, [r4, #4]
 8015c44:	f002 fe06 	bl	8018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c48:	8020      	strh	r0, [r4, #0]
 8015c4a:	b9c8      	cbnz	r0, 8015c80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8015c4c:	8b22      	ldrh	r2, [r4, #24]
 8015c4e:	2300      	movs	r3, #0
 8015c50:	4611      	mov	r1, r2
 8015c52:	4620      	mov	r0, r4
 8015c54:	f7ff ffb2 	bl	8015bbc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015c58:	e066      	b.n	8015d28 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8015c5a:	468b      	mov	fp, r1
 8015c5c:	e7cf      	b.n	8015bfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8015c5e:	3b01      	subs	r3, #1
 8015c60:	2a01      	cmp	r2, #1
 8015c62:	bf8c      	ite	hi
 8015c64:	2200      	movhi	r2, #0
 8015c66:	2201      	movls	r2, #1
 8015c68:	2b01      	cmp	r3, #1
 8015c6a:	bf8c      	ite	hi
 8015c6c:	2300      	movhi	r3, #0
 8015c6e:	2301      	movls	r3, #1
 8015c70:	9202      	str	r2, [sp, #8]
 8015c72:	9301      	str	r3, [sp, #4]
 8015c74:	9103      	str	r1, [sp, #12]
 8015c76:	468b      	mov	fp, r1
 8015c78:	e7c8      	b.n	8015c0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8015c7a:	4699      	mov	r9, r3
 8015c7c:	2601      	movs	r6, #1
 8015c7e:	e7dd      	b.n	8015c3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8015c80:	8ae3      	ldrh	r3, [r4, #22]
 8015c82:	280a      	cmp	r0, #10
 8015c84:	f103 0301 	add.w	r3, r3, #1
 8015c88:	82e3      	strh	r3, [r4, #22]
 8015c8a:	d0df      	beq.n	8015c4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8015c8c:	9a05      	ldr	r2, [sp, #20]
 8015c8e:	bb42      	cbnz	r2, 8015ce2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8015c90:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015c94:	4298      	cmp	r0, r3
 8015c96:	d001      	beq.n	8015c9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8015c98:	4550      	cmp	r0, sl
 8015c9a:	d1bd      	bne.n	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015c9c:	8823      	ldrh	r3, [r4, #0]
 8015c9e:	8b21      	ldrh	r1, [r4, #24]
 8015ca0:	2b20      	cmp	r3, #32
 8015ca2:	d001      	beq.n	8015ca8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8015ca4:	4553      	cmp	r3, sl
 8015ca6:	d131      	bne.n	8015d0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8015ca8:	2e00      	cmp	r6, #0
 8015caa:	bf0a      	itet	eq
 8015cac:	460d      	moveq	r5, r1
 8015cae:	4630      	movne	r0, r6
 8015cb0:	2001      	moveq	r0, #1
 8015cb2:	440a      	add	r2, r1
 8015cb4:	8aa3      	ldrh	r3, [r4, #20]
 8015cb6:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015cba:	b292      	uxth	r2, r2
 8015cbc:	8322      	strh	r2, [r4, #24]
 8015cbe:	4413      	add	r3, r2
 8015cc0:	2f00      	cmp	r7, #0
 8015cc2:	d03a      	beq.n	8015d3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8015cc4:	f1bb 0f00 	cmp.w	fp, #0
 8015cc8:	d102      	bne.n	8015cd0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8015cca:	9903      	ldr	r1, [sp, #12]
 8015ccc:	b301      	cbz	r1, 8015d10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8015cce:	b1f8      	cbz	r0, 8015d10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8015cd0:	8ba1      	ldrh	r1, [r4, #28]
 8015cd2:	4419      	add	r1, r3
 8015cd4:	458c      	cmp	ip, r1
 8015cd6:	da2a      	bge.n	8015d2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8015cd8:	8a61      	ldrh	r1, [r4, #18]
 8015cda:	b341      	cbz	r1, 8015d2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8015cdc:	4563      	cmp	r3, ip
 8015cde:	dd9b      	ble.n	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015ce0:	e01c      	b.n	8015d1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8015ce2:	8893      	ldrh	r3, [r2, #4]
 8015ce4:	8023      	strh	r3, [r4, #0]
 8015ce6:	f892 800d 	ldrb.w	r8, [r2, #13]
 8015cea:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015cee:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8015cf2:	f892 800a 	ldrb.w	r8, [r2, #10]
 8015cf6:	ea48 0800 	orr.w	r8, r8, r0
 8015cfa:	68e0      	ldr	r0, [r4, #12]
 8015cfc:	6803      	ldr	r3, [r0, #0]
 8015cfe:	4649      	mov	r1, r9
 8015d00:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015d02:	4798      	blx	r3
 8015d04:	eb08 0200 	add.w	r2, r8, r0
 8015d08:	b292      	uxth	r2, r2
 8015d0a:	e7c7      	b.n	8015c9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8015d0c:	2000      	movs	r0, #0
 8015d0e:	e7d0      	b.n	8015cb2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8015d10:	4563      	cmp	r3, ip
 8015d12:	dd81      	ble.n	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d14:	8a63      	ldrh	r3, [r4, #18]
 8015d16:	2b00      	cmp	r3, #0
 8015d18:	f43f af7e 	beq.w	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d1c:	2301      	movs	r3, #1
 8015d1e:	77a3      	strb	r3, [r4, #30]
 8015d20:	8ba2      	ldrh	r2, [r4, #28]
 8015d22:	8b63      	ldrh	r3, [r4, #26]
 8015d24:	4413      	add	r3, r2
 8015d26:	8363      	strh	r3, [r4, #26]
 8015d28:	b007      	add	sp, #28
 8015d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d2e:	2300      	movs	r3, #0
 8015d30:	4611      	mov	r1, r2
 8015d32:	4620      	mov	r0, r4
 8015d34:	f7ff ff42 	bl	8015bbc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015d38:	e76e      	b.n	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d3a:	4563      	cmp	r3, ip
 8015d3c:	dd14      	ble.n	8015d68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8015d3e:	9b02      	ldr	r3, [sp, #8]
 8015d40:	b113      	cbz	r3, 8015d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8015d42:	2301      	movs	r3, #1
 8015d44:	460a      	mov	r2, r1
 8015d46:	e783      	b.n	8015c50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8015d48:	9b01      	ldr	r3, [sp, #4]
 8015d4a:	2b00      	cmp	r3, #0
 8015d4c:	f43f af64 	beq.w	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d50:	2800      	cmp	r0, #0
 8015d52:	f47f af61 	bne.w	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d56:	b116      	cbz	r6, 8015d5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8015d58:	2301      	movs	r3, #1
 8015d5a:	462a      	mov	r2, r5
 8015d5c:	e779      	b.n	8015c52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8015d5e:	8a63      	ldrh	r3, [r4, #18]
 8015d60:	2b00      	cmp	r3, #0
 8015d62:	f43f af59 	beq.w	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d66:	e7df      	b.n	8015d28 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8015d68:	2800      	cmp	r0, #0
 8015d6a:	f47f af55 	bne.w	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d6e:	2e00      	cmp	r6, #0
 8015d70:	f43f af52 	beq.w	8015c18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8015d74:	2301      	movs	r3, #1
 8015d76:	462a      	mov	r2, r5
 8015d78:	e7db      	b.n	8015d32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08015d7a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015d7a:	b530      	push	{r4, r5, lr}
 8015d7c:	4605      	mov	r5, r0
 8015d7e:	b08b      	sub	sp, #44	; 0x2c
 8015d80:	b191      	cbz	r1, 8015da8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8015d82:	e9cd 3100 	strd	r3, r1, [sp]
 8015d86:	4613      	mov	r3, r2
 8015d88:	4601      	mov	r1, r0
 8015d8a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015d8e:	a802      	add	r0, sp, #8
 8015d90:	f7ff fd0c 	bl	80157ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8015d94:	2401      	movs	r4, #1
 8015d96:	2100      	movs	r1, #0
 8015d98:	a802      	add	r0, sp, #8
 8015d9a:	f7ff ff1f 	bl	8015bdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8015d9e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015da2:	b163      	cbz	r3, 8015dbe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015da4:	3401      	adds	r4, #1
 8015da6:	e7f6      	b.n	8015d96 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8015da8:	f002 fe4e 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015dac:	2401      	movs	r4, #1
 8015dae:	280a      	cmp	r0, #10
 8015db0:	4628      	mov	r0, r5
 8015db2:	bf08      	it	eq
 8015db4:	3401      	addeq	r4, #1
 8015db6:	f002 fe47 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015dba:	2800      	cmp	r0, #0
 8015dbc:	d1f7      	bne.n	8015dae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015dbe:	b2a0      	uxth	r0, r4
 8015dc0:	b00b      	add	sp, #44	; 0x2c
 8015dc2:	bd30      	pop	{r4, r5, pc}

08015dc4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dc8:	b0e5      	sub	sp, #404	; 0x194
 8015dca:	4689      	mov	r9, r1
 8015dcc:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8015dd0:	900a      	str	r0, [sp, #40]	; 0x28
 8015dd2:	461c      	mov	r4, r3
 8015dd4:	f1ba 0f00 	cmp.w	sl, #0
 8015dd8:	f000 80b4 	beq.w	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015ddc:	681b      	ldr	r3, [r3, #0]
 8015dde:	2b00      	cmp	r3, #0
 8015de0:	f000 80b0 	beq.w	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015de4:	7ba3      	ldrb	r3, [r4, #14]
 8015de6:	2b00      	cmp	r3, #0
 8015de8:	f000 80ac 	beq.w	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015dec:	6810      	ldr	r0, [r2, #0]
 8015dee:	6851      	ldr	r1, [r2, #4]
 8015df0:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8015df4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015df8:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8015dfc:	4643      	mov	r3, r8
 8015dfe:	c303      	stmia	r3!, {r0, r1}
 8015e00:	2500      	movs	r5, #0
 8015e02:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8015e06:	79a2      	ldrb	r2, [r4, #6]
 8015e08:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015e0c:	a90f      	add	r1, sp, #60	; 0x3c
 8015e0e:	4640      	mov	r0, r8
 8015e10:	950f      	str	r5, [sp, #60]	; 0x3c
 8015e12:	f7ff fd43 	bl	801589c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015e16:	a90f      	add	r1, sp, #60	; 0x3c
 8015e18:	4608      	mov	r0, r1
 8015e1a:	79a2      	ldrb	r2, [r4, #6]
 8015e1c:	af19      	add	r7, sp, #100	; 0x64
 8015e1e:	f7ff fd3d 	bl	801589c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015e22:	4638      	mov	r0, r7
 8015e24:	f002 f99b 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8015e28:	6820      	ldr	r0, [r4, #0]
 8015e2a:	6803      	ldr	r3, [r0, #0]
 8015e2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e2e:	4798      	blx	r3
 8015e30:	4606      	mov	r6, r0
 8015e32:	6820      	ldr	r0, [r4, #0]
 8015e34:	6803      	ldr	r3, [r0, #0]
 8015e36:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015e38:	4798      	blx	r3
 8015e3a:	4633      	mov	r3, r6
 8015e3c:	9000      	str	r0, [sp, #0]
 8015e3e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8015e40:	4651      	mov	r1, sl
 8015e42:	4638      	mov	r0, r7
 8015e44:	f002 f9f6 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015e48:	6820      	ldr	r0, [r4, #0]
 8015e4a:	7923      	ldrb	r3, [r4, #4]
 8015e4c:	9308      	str	r3, [sp, #32]
 8015e4e:	6803      	ldr	r3, [r0, #0]
 8015e50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015e52:	4798      	blx	r3
 8015e54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8015e58:	181e      	adds	r6, r3, r0
 8015e5a:	42ae      	cmp	r6, r5
 8015e5c:	dd06      	ble.n	8015e6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8015e5e:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8015e62:	4282      	cmp	r2, r0
 8015e64:	bfa4      	itt	ge
 8015e66:	189d      	addge	r5, r3, r2
 8015e68:	fb95 f5f6 	sdivge	r5, r5, r6
 8015e6c:	a832      	add	r0, sp, #200	; 0xc8
 8015e6e:	f002 f976 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8015e72:	7c23      	ldrb	r3, [r4, #16]
 8015e74:	b17b      	cbz	r3, 8015e96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8015e76:	6820      	ldr	r0, [r4, #0]
 8015e78:	6803      	ldr	r3, [r0, #0]
 8015e7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e7c:	4798      	blx	r3
 8015e7e:	4683      	mov	fp, r0
 8015e80:	6820      	ldr	r0, [r4, #0]
 8015e82:	6803      	ldr	r3, [r0, #0]
 8015e84:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015e86:	4798      	blx	r3
 8015e88:	465b      	mov	r3, fp
 8015e8a:	9000      	str	r0, [sp, #0]
 8015e8c:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8015e8e:	4651      	mov	r1, sl
 8015e90:	a832      	add	r0, sp, #200	; 0xc8
 8015e92:	f002 f9cf 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015e96:	7be1      	ldrb	r1, [r4, #15]
 8015e98:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015e9c:	7963      	ldrb	r3, [r4, #5]
 8015e9e:	1a52      	subs	r2, r2, r1
 8015ea0:	7c21      	ldrb	r1, [r4, #16]
 8015ea2:	9101      	str	r1, [sp, #4]
 8015ea4:	6821      	ldr	r1, [r4, #0]
 8015ea6:	9100      	str	r1, [sp, #0]
 8015ea8:	b292      	uxth	r2, r2
 8015eaa:	a932      	add	r1, sp, #200	; 0xc8
 8015eac:	a811      	add	r0, sp, #68	; 0x44
 8015eae:	f7ff fc7d 	bl	80157ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8015eb2:	7c23      	ldrb	r3, [r4, #16]
 8015eb4:	b9bb      	cbnz	r3, 8015ee6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8015eb6:	fa1f fa86 	uxth.w	sl, r6
 8015eba:	2d00      	cmp	r5, #0
 8015ebc:	dd45      	ble.n	8015f4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8015ebe:	4638      	mov	r0, r7
 8015ec0:	f002 fdc2 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015ec4:	2800      	cmp	r0, #0
 8015ec6:	d03d      	beq.n	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015ec8:	280a      	cmp	r0, #10
 8015eca:	d1f6      	bne.n	8015eba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8015ecc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8015ed0:	4453      	add	r3, sl
 8015ed2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015ed6:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8015eda:	eba3 030a 	sub.w	r3, r3, sl
 8015ede:	3d01      	subs	r5, #1
 8015ee0:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015ee4:	e7e9      	b.n	8015eba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8015ee6:	0073      	lsls	r3, r6, #1
 8015ee8:	9309      	str	r3, [sp, #36]	; 0x24
 8015eea:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8015eee:	fa1f fa86 	uxth.w	sl, r6
 8015ef2:	2d00      	cmp	r5, #0
 8015ef4:	dd29      	ble.n	8015f4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8015ef6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8015efa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015efc:	428b      	cmp	r3, r1
 8015efe:	bfd4      	ite	le
 8015f00:	2100      	movle	r1, #0
 8015f02:	2101      	movgt	r1, #1
 8015f04:	a811      	add	r0, sp, #68	; 0x44
 8015f06:	f7ff fe69 	bl	8015bdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8015f0a:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8015f0e:	3b01      	subs	r3, #1
 8015f10:	b29b      	uxth	r3, r3
 8015f12:	455b      	cmp	r3, fp
 8015f14:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f16:	d005      	beq.n	8015f24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8015f18:	7961      	ldrb	r1, [r4, #5]
 8015f1a:	4638      	mov	r0, r7
 8015f1c:	f7f0 feb8 	bl	8006c90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015f20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015f22:	e7f4      	b.n	8015f0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8015f24:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8015f28:	4453      	add	r3, sl
 8015f2a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015f2e:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8015f32:	eba3 030a 	sub.w	r3, r3, sl
 8015f36:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015f3a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8015f3e:	3d01      	subs	r5, #1
 8015f40:	2b00      	cmp	r3, #0
 8015f42:	d1d6      	bne.n	8015ef2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8015f44:	b065      	add	sp, #404	; 0x194
 8015f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f4a:	0075      	lsls	r5, r6, #1
 8015f4c:	f04f 0a00 	mov.w	sl, #0
 8015f50:	7c23      	ldrb	r3, [r4, #16]
 8015f52:	2b00      	cmp	r3, #0
 8015f54:	d066      	beq.n	8016024 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8015f56:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8015f5a:	428d      	cmp	r5, r1
 8015f5c:	bfd4      	ite	le
 8015f5e:	2100      	movle	r1, #0
 8015f60:	2101      	movgt	r1, #1
 8015f62:	a811      	add	r0, sp, #68	; 0x44
 8015f64:	f7ff fe3a 	bl	8015bdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8015f68:	9b08      	ldr	r3, [sp, #32]
 8015f6a:	2b00      	cmp	r3, #0
 8015f6c:	d055      	beq.n	801601a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015f6e:	f894 b010 	ldrb.w	fp, [r4, #16]
 8015f72:	2264      	movs	r2, #100	; 0x64
 8015f74:	4639      	mov	r1, r7
 8015f76:	a84b      	add	r0, sp, #300	; 0x12c
 8015f78:	f011 fc12 	bl	80277a0 <memcpy>
 8015f7c:	f1bb 0f00 	cmp.w	fp, #0
 8015f80:	d058      	beq.n	8016034 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8015f82:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015f86:	7922      	ldrb	r2, [r4, #4]
 8015f88:	2a01      	cmp	r2, #1
 8015f8a:	d13c      	bne.n	8016006 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8015f8c:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8015f90:	1ac0      	subs	r0, r0, r3
 8015f92:	2302      	movs	r3, #2
 8015f94:	fb90 f0f3 	sdiv	r0, r0, r3
 8015f98:	b200      	sxth	r0, r0
 8015f9a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8015f9e:	4418      	add	r0, r3
 8015fa0:	7c23      	ldrb	r3, [r4, #16]
 8015fa2:	b200      	sxth	r0, r0
 8015fa4:	2b00      	cmp	r3, #0
 8015fa6:	d03a      	beq.n	801601e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8015fa8:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8015fac:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8015fb0:	9000      	str	r0, [sp, #0]
 8015fb2:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015fb6:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8015fba:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015fbc:	e9cd a703 	strd	sl, r7, [sp, #12]
 8015fc0:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8015fc4:	464a      	mov	r2, r9
 8015fc6:	2100      	movs	r1, #0
 8015fc8:	f7ff fc99 	bl	80158fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015fcc:	2800      	cmp	r0, #0
 8015fce:	d1b9      	bne.n	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015fd0:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8015fd4:	b2b2      	uxth	r2, r6
 8015fd6:	4611      	mov	r1, r2
 8015fd8:	4413      	add	r3, r2
 8015fda:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8015fde:	1a52      	subs	r2, r2, r1
 8015fe0:	7c21      	ldrb	r1, [r4, #16]
 8015fe2:	b21b      	sxth	r3, r3
 8015fe4:	b212      	sxth	r2, r2
 8015fe6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8015fea:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015fee:	b109      	cbz	r1, 8015ff4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8015ff0:	42b2      	cmp	r2, r6
 8015ff2:	dba7      	blt.n	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8015ff4:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8015ff8:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8015ffc:	440a      	add	r2, r1
 8015ffe:	b212      	sxth	r2, r2
 8016000:	4293      	cmp	r3, r2
 8016002:	dda5      	ble.n	8015f50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8016004:	e79e      	b.n	8015f44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8016006:	2a02      	cmp	r2, #2
 8016008:	d105      	bne.n	8016016 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801600a:	7be2      	ldrb	r2, [r4, #15]
 801600c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8016010:	1a80      	subs	r0, r0, r2
 8016012:	1ac0      	subs	r0, r0, r3
 8016014:	e7c0      	b.n	8015f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8016016:	2000      	movs	r0, #0
 8016018:	e7bf      	b.n	8015f9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801601a:	7be0      	ldrb	r0, [r4, #15]
 801601c:	e7bd      	b.n	8015f9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801601e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016022:	e7c3      	b.n	8015fac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8016024:	9b08      	ldr	r3, [sp, #32]
 8016026:	2b00      	cmp	r3, #0
 8016028:	d0f7      	beq.n	801601a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801602a:	2264      	movs	r2, #100	; 0x64
 801602c:	4639      	mov	r1, r7
 801602e:	a84b      	add	r0, sp, #300	; 0x12c
 8016030:	f011 fbb6 	bl	80277a0 <memcpy>
 8016034:	2300      	movs	r3, #0
 8016036:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801603a:	6821      	ldr	r1, [r4, #0]
 801603c:	a84b      	add	r0, sp, #300	; 0x12c
 801603e:	f7ff fbf1 	bl	8015824 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016042:	b203      	sxth	r3, r0
 8016044:	e79f      	b.n	8015f86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08016046 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016046:	b510      	push	{r4, lr}
 8016048:	2b02      	cmp	r3, #2
 801604a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801604e:	d00b      	beq.n	8016068 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8016050:	2b03      	cmp	r3, #3
 8016052:	d00e      	beq.n	8016072 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8016054:	2b01      	cmp	r3, #1
 8016056:	d001      	beq.n	801605c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8016058:	1860      	adds	r0, r4, r1
 801605a:	bd10      	pop	{r4, pc}
 801605c:	8880      	ldrh	r0, [r0, #4]
 801605e:	4420      	add	r0, r4
 8016060:	b200      	sxth	r0, r0
 8016062:	1a80      	subs	r0, r0, r2
 8016064:	3801      	subs	r0, #1
 8016066:	e7f8      	b.n	801605a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8016068:	8880      	ldrh	r0, [r0, #4]
 801606a:	4420      	add	r0, r4
 801606c:	b200      	sxth	r0, r0
 801606e:	1a40      	subs	r0, r0, r1
 8016070:	e7f8      	b.n	8016064 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016072:	18a0      	adds	r0, r4, r2
 8016074:	e7f1      	b.n	801605a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08016076 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8016076:	b510      	push	{r4, lr}
 8016078:	2b02      	cmp	r3, #2
 801607a:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 801607e:	d006      	beq.n	801608e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8016080:	2b03      	cmp	r3, #3
 8016082:	d00a      	beq.n	801609a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016084:	2b01      	cmp	r3, #1
 8016086:	bf14      	ite	ne
 8016088:	18a0      	addne	r0, r4, r2
 801608a:	1860      	addeq	r0, r4, r1
 801608c:	bd10      	pop	{r4, pc}
 801608e:	88c0      	ldrh	r0, [r0, #6]
 8016090:	4420      	add	r0, r4
 8016092:	b200      	sxth	r0, r0
 8016094:	1a80      	subs	r0, r0, r2
 8016096:	3801      	subs	r0, #1
 8016098:	e7f8      	b.n	801608c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 801609a:	88c0      	ldrh	r0, [r0, #6]
 801609c:	4420      	add	r0, r4
 801609e:	b200      	sxth	r0, r0
 80160a0:	1a40      	subs	r0, r0, r1
 80160a2:	e7f8      	b.n	8016096 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

080160a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80160a4:	4b01      	ldr	r3, [pc, #4]	; (80160ac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80160a6:	2200      	movs	r2, #0
 80160a8:	601a      	str	r2, [r3, #0]
 80160aa:	4770      	bx	lr
 80160ac:	20014c34 	.word	0x20014c34

080160b0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80160b0:	4603      	mov	r3, r0
 80160b2:	b1c8      	cbz	r0, 80160e8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80160b4:	0c02      	lsrs	r2, r0, #16
 80160b6:	0412      	lsls	r2, r2, #16
 80160b8:	b9a2      	cbnz	r2, 80160e4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80160ba:	0403      	lsls	r3, r0, #16
 80160bc:	2010      	movs	r0, #16
 80160be:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80160c2:	bf04      	itt	eq
 80160c4:	021b      	lsleq	r3, r3, #8
 80160c6:	3008      	addeq	r0, #8
 80160c8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80160cc:	bf04      	itt	eq
 80160ce:	011b      	lsleq	r3, r3, #4
 80160d0:	3004      	addeq	r0, #4
 80160d2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80160d6:	bf04      	itt	eq
 80160d8:	009b      	lsleq	r3, r3, #2
 80160da:	3002      	addeq	r0, #2
 80160dc:	2b00      	cmp	r3, #0
 80160de:	db04      	blt.n	80160ea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80160e0:	3001      	adds	r0, #1
 80160e2:	4770      	bx	lr
 80160e4:	2000      	movs	r0, #0
 80160e6:	e7ea      	b.n	80160be <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80160e8:	2020      	movs	r0, #32
 80160ea:	4770      	bx	lr

080160ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80160ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160f0:	b087      	sub	sp, #28
 80160f2:	4681      	mov	r9, r0
 80160f4:	4698      	mov	r8, r3
 80160f6:	4610      	mov	r0, r2
 80160f8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80160fc:	460d      	mov	r5, r1
 80160fe:	b981      	cbnz	r1, 8016122 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8016100:	b14b      	cbz	r3, 8016116 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8016102:	460b      	mov	r3, r1
 8016104:	e9cd 4700 	strd	r4, r7, [sp]
 8016108:	464a      	mov	r2, r9
 801610a:	4641      	mov	r1, r8
 801610c:	f7ff ffee 	bl	80160ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016110:	b007      	add	sp, #28
 8016112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016116:	f04f 33ff 	mov.w	r3, #4294967295
 801611a:	603b      	str	r3, [r7, #0]
 801611c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016120:	e7f6      	b.n	8016110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8016122:	fa32 fa01 	lsrs.w	sl, r2, r1
 8016126:	d107      	bne.n	8016138 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8016128:	fb09 f602 	mul.w	r6, r9, r2
 801612c:	fbb6 f0f4 	udiv	r0, r6, r4
 8016130:	fb04 6610 	mls	r6, r4, r0, r6
 8016134:	603e      	str	r6, [r7, #0]
 8016136:	e7eb      	b.n	8016110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8016138:	2601      	movs	r6, #1
 801613a:	408e      	lsls	r6, r1
 801613c:	3e01      	subs	r6, #1
 801613e:	4016      	ands	r6, r2
 8016140:	fa09 fb01 	lsl.w	fp, r9, r1
 8016144:	4630      	mov	r0, r6
 8016146:	fbbb f3f4 	udiv	r3, fp, r4
 801614a:	9302      	str	r3, [sp, #8]
 801614c:	fb0a f303 	mul.w	r3, sl, r3
 8016150:	9303      	str	r3, [sp, #12]
 8016152:	f7ff ffad 	bl	80160b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016156:	464a      	mov	r2, r9
 8016158:	460b      	mov	r3, r1
 801615a:	e9cd 4700 	strd	r4, r7, [sp]
 801615e:	4601      	mov	r1, r0
 8016160:	4630      	mov	r0, r6
 8016162:	f7ff ffc3 	bl	80160ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016166:	9b02      	ldr	r3, [sp, #8]
 8016168:	fb04 bb13 	mls	fp, r4, r3, fp
 801616c:	4606      	mov	r6, r0
 801616e:	4658      	mov	r0, fp
 8016170:	eb05 0108 	add.w	r1, r5, r8
 8016174:	f7ff ff9c 	bl	80160b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016178:	ab05      	add	r3, sp, #20
 801617a:	e9cd 4300 	strd	r4, r3, [sp]
 801617e:	465a      	mov	r2, fp
 8016180:	4603      	mov	r3, r0
 8016182:	4650      	mov	r0, sl
 8016184:	f7ff ffb2 	bl	80160ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016188:	6839      	ldr	r1, [r7, #0]
 801618a:	9a05      	ldr	r2, [sp, #20]
 801618c:	9b03      	ldr	r3, [sp, #12]
 801618e:	4411      	add	r1, r2
 8016190:	fbb1 f2f4 	udiv	r2, r1, r4
 8016194:	18d3      	adds	r3, r2, r3
 8016196:	441e      	add	r6, r3
 8016198:	fb04 1412 	mls	r4, r4, r2, r1
 801619c:	4430      	add	r0, r6
 801619e:	603c      	str	r4, [r7, #0]
 80161a0:	e7b6      	b.n	8016110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

080161a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80161a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80161a6:	b085      	sub	sp, #20
 80161a8:	f1b0 0900 	subs.w	r9, r0, #0
 80161ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80161ae:	461d      	mov	r5, r3
 80161b0:	bfbf      	itttt	lt
 80161b2:	6823      	ldrlt	r3, [r4, #0]
 80161b4:	425b      	neglt	r3, r3
 80161b6:	f1c9 0900 	rsblt	r9, r9, #0
 80161ba:	6023      	strlt	r3, [r4, #0]
 80161bc:	bfb4      	ite	lt
 80161be:	f04f 36ff 	movlt.w	r6, #4294967295
 80161c2:	2601      	movge	r6, #1
 80161c4:	2a00      	cmp	r2, #0
 80161c6:	4617      	mov	r7, r2
 80161c8:	da04      	bge.n	80161d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80161ca:	6823      	ldr	r3, [r4, #0]
 80161cc:	425b      	negs	r3, r3
 80161ce:	4257      	negs	r7, r2
 80161d0:	4276      	negs	r6, r6
 80161d2:	6023      	str	r3, [r4, #0]
 80161d4:	2d00      	cmp	r5, #0
 80161d6:	4638      	mov	r0, r7
 80161d8:	bfba      	itte	lt
 80161da:	426d      	neglt	r5, r5
 80161dc:	f04f 38ff 	movlt.w	r8, #4294967295
 80161e0:	f04f 0801 	movge.w	r8, #1
 80161e4:	f7ff ff64 	bl	80160b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80161e8:	ab03      	add	r3, sp, #12
 80161ea:	e9cd 5300 	strd	r5, r3, [sp]
 80161ee:	463a      	mov	r2, r7
 80161f0:	4603      	mov	r3, r0
 80161f2:	4648      	mov	r0, r9
 80161f4:	f7ff ff7a 	bl	80160ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80161f8:	6823      	ldr	r3, [r4, #0]
 80161fa:	9a03      	ldr	r2, [sp, #12]
 80161fc:	4546      	cmp	r6, r8
 80161fe:	441a      	add	r2, r3
 8016200:	fb92 f3f5 	sdiv	r3, r2, r5
 8016204:	4418      	add	r0, r3
 8016206:	bf18      	it	ne
 8016208:	4240      	negne	r0, r0
 801620a:	fb05 2313 	mls	r3, r5, r3, r2
 801620e:	1c72      	adds	r2, r6, #1
 8016210:	6023      	str	r3, [r4, #0]
 8016212:	d105      	bne.n	8016220 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016214:	2b00      	cmp	r3, #0
 8016216:	f1c3 0200 	rsb	r2, r3, #0
 801621a:	db0b      	blt.n	8016234 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801621c:	6022      	str	r2, [r4, #0]
 801621e:	e006      	b.n	801622e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016220:	2e01      	cmp	r6, #1
 8016222:	d104      	bne.n	801622e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016224:	2b00      	cmp	r3, #0
 8016226:	da02      	bge.n	801622e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016228:	442b      	add	r3, r5
 801622a:	3801      	subs	r0, #1
 801622c:	6023      	str	r3, [r4, #0]
 801622e:	b005      	add	sp, #20
 8016230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016234:	3801      	subs	r0, #1
 8016236:	1b52      	subs	r2, r2, r5
 8016238:	e7f0      	b.n	801621c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0801623c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801623c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8016240:	4c1c      	ldr	r4, [pc, #112]	; (80162b4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8016242:	6807      	ldr	r7, [r0, #0]
 8016244:	69a3      	ldr	r3, [r4, #24]
 8016246:	4605      	mov	r5, r0
 8016248:	b92b      	cbnz	r3, 8016256 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801624a:	6840      	ldr	r0, [r0, #4]
 801624c:	e9c5 7000 	strd	r7, r0, [r5]
 8016250:	b004      	add	sp, #16
 8016252:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016256:	68a2      	ldr	r2, [r4, #8]
 8016258:	6820      	ldr	r0, [r4, #0]
 801625a:	ae04      	add	r6, sp, #16
 801625c:	f04f 0802 	mov.w	r8, #2
 8016260:	fb93 f1f8 	sdiv	r1, r3, r8
 8016264:	440a      	add	r2, r1
 8016266:	f846 2d04 	str.w	r2, [r6, #-4]!
 801626a:	69e1      	ldr	r1, [r4, #28]
 801626c:	9600      	str	r6, [sp, #0]
 801626e:	463a      	mov	r2, r7
 8016270:	f7ff ff97 	bl	80161a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016274:	69a3      	ldr	r3, [r4, #24]
 8016276:	686a      	ldr	r2, [r5, #4]
 8016278:	6a21      	ldr	r1, [r4, #32]
 801627a:	9600      	str	r6, [sp, #0]
 801627c:	4607      	mov	r7, r0
 801627e:	6860      	ldr	r0, [r4, #4]
 8016280:	f7ff ff8f 	bl	80161a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016284:	6962      	ldr	r2, [r4, #20]
 8016286:	69a3      	ldr	r3, [r4, #24]
 8016288:	fb93 f8f8 	sdiv	r8, r3, r8
 801628c:	4442      	add	r2, r8
 801628e:	9203      	str	r2, [sp, #12]
 8016290:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8016292:	682a      	ldr	r2, [r5, #0]
 8016294:	9600      	str	r6, [sp, #0]
 8016296:	4407      	add	r7, r0
 8016298:	68e0      	ldr	r0, [r4, #12]
 801629a:	f7ff ff82 	bl	80161a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801629e:	9600      	str	r6, [sp, #0]
 80162a0:	4680      	mov	r8, r0
 80162a2:	69a3      	ldr	r3, [r4, #24]
 80162a4:	686a      	ldr	r2, [r5, #4]
 80162a6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80162a8:	6920      	ldr	r0, [r4, #16]
 80162aa:	f7ff ff7a 	bl	80161a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80162ae:	4440      	add	r0, r8
 80162b0:	e7cc      	b.n	801624c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80162b2:	bf00      	nop
 80162b4:	20014c38 	.word	0x20014c38

080162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80162b8:	4b07      	ldr	r3, [pc, #28]	; (80162d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80162ba:	781b      	ldrb	r3, [r3, #0]
 80162bc:	2b01      	cmp	r3, #1
 80162be:	d109      	bne.n	80162d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80162c0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80162c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80162c8:	8003      	strh	r3, [r0, #0]
 80162ca:	4b04      	ldr	r3, [pc, #16]	; (80162dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80162cc:	881b      	ldrh	r3, [r3, #0]
 80162ce:	3b01      	subs	r3, #1
 80162d0:	1a9b      	subs	r3, r3, r2
 80162d2:	800b      	strh	r3, [r1, #0]
 80162d4:	4770      	bx	lr
 80162d6:	bf00      	nop
 80162d8:	20014c04 	.word	0x20014c04
 80162dc:	20014c00 	.word	0x20014c00

080162e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80162e0:	b510      	push	{r4, lr}
 80162e2:	4b07      	ldr	r3, [pc, #28]	; (8016300 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80162e4:	781b      	ldrb	r3, [r3, #0]
 80162e6:	2b01      	cmp	r3, #1
 80162e8:	d108      	bne.n	80162fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80162ea:	4b06      	ldr	r3, [pc, #24]	; (8016304 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80162ec:	880c      	ldrh	r4, [r1, #0]
 80162ee:	881b      	ldrh	r3, [r3, #0]
 80162f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80162f4:	3b01      	subs	r3, #1
 80162f6:	1b1b      	subs	r3, r3, r4
 80162f8:	8003      	strh	r3, [r0, #0]
 80162fa:	800a      	strh	r2, [r1, #0]
 80162fc:	bd10      	pop	{r4, pc}
 80162fe:	bf00      	nop
 8016300:	20014c04 	.word	0x20014c04
 8016304:	20014c00 	.word	0x20014c00

08016308 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016308:	b510      	push	{r4, lr}
 801630a:	4b0a      	ldr	r3, [pc, #40]	; (8016334 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801630c:	781b      	ldrb	r3, [r3, #0]
 801630e:	2b01      	cmp	r3, #1
 8016310:	d10e      	bne.n	8016330 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8016312:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016316:	8843      	ldrh	r3, [r0, #2]
 8016318:	f9b0 4000 	ldrsh.w	r4, [r0]
 801631c:	8044      	strh	r4, [r0, #2]
 801631e:	18ca      	adds	r2, r1, r3
 8016320:	4b05      	ldr	r3, [pc, #20]	; (8016338 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8016322:	881b      	ldrh	r3, [r3, #0]
 8016324:	1a9b      	subs	r3, r3, r2
 8016326:	8003      	strh	r3, [r0, #0]
 8016328:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801632c:	80c3      	strh	r3, [r0, #6]
 801632e:	8081      	strh	r1, [r0, #4]
 8016330:	bd10      	pop	{r4, pc}
 8016332:	bf00      	nop
 8016334:	20014c04 	.word	0x20014c04
 8016338:	20014c00 	.word	0x20014c00

0801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801633c:	4b08      	ldr	r3, [pc, #32]	; (8016360 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801633e:	781b      	ldrb	r3, [r3, #0]
 8016340:	2b01      	cmp	r3, #1
 8016342:	d10c      	bne.n	801635e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016344:	8803      	ldrh	r3, [r0, #0]
 8016346:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801634a:	8842      	ldrh	r2, [r0, #2]
 801634c:	8002      	strh	r2, [r0, #0]
 801634e:	185a      	adds	r2, r3, r1
 8016350:	4b04      	ldr	r3, [pc, #16]	; (8016364 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8016352:	881b      	ldrh	r3, [r3, #0]
 8016354:	1a9b      	subs	r3, r3, r2
 8016356:	8043      	strh	r3, [r0, #2]
 8016358:	88c3      	ldrh	r3, [r0, #6]
 801635a:	8083      	strh	r3, [r0, #4]
 801635c:	80c1      	strh	r1, [r0, #6]
 801635e:	4770      	bx	lr
 8016360:	20014c04 	.word	0x20014c04
 8016364:	20014c00 	.word	0x20014c00

08016368 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016368:	b510      	push	{r4, lr}
 801636a:	4b07      	ldr	r3, [pc, #28]	; (8016388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801636c:	781b      	ldrb	r3, [r3, #0]
 801636e:	2b01      	cmp	r3, #1
 8016370:	d108      	bne.n	8016384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8016372:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016376:	f9b0 4000 	ldrsh.w	r4, [r0]
 801637a:	8003      	strh	r3, [r0, #0]
 801637c:	8893      	ldrh	r3, [r2, #4]
 801637e:	3b01      	subs	r3, #1
 8016380:	1b1b      	subs	r3, r3, r4
 8016382:	800b      	strh	r3, [r1, #0]
 8016384:	bd10      	pop	{r4, pc}
 8016386:	bf00      	nop
 8016388:	20014c04 	.word	0x20014c04

0801638c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 801638c:	4b0b      	ldr	r3, [pc, #44]	; (80163bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801638e:	781b      	ldrb	r3, [r3, #0]
 8016390:	2b01      	cmp	r3, #1
 8016392:	d111      	bne.n	80163b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8016394:	680b      	ldr	r3, [r1, #0]
 8016396:	ed90 7a00 	vldr	s14, [r0]
 801639a:	6003      	str	r3, [r0, #0]
 801639c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80163a0:	eddf 6a07 	vldr	s13, [pc, #28]	; 80163c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80163a4:	ee07 3a90 	vmov	s15, r3
 80163a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80163ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80163b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80163b4:	edc1 7a00 	vstr	s15, [r1]
 80163b8:	4770      	bx	lr
 80163ba:	bf00      	nop
 80163bc:	20014c04 	.word	0x20014c04
 80163c0:	38d1b717 	.word	0x38d1b717

080163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80163c4:	b510      	push	{r4, lr}
 80163c6:	4b0a      	ldr	r3, [pc, #40]	; (80163f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80163c8:	781b      	ldrb	r3, [r3, #0]
 80163ca:	2b01      	cmp	r3, #1
 80163cc:	460a      	mov	r2, r1
 80163ce:	d10d      	bne.n	80163ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80163d0:	8881      	ldrh	r1, [r0, #4]
 80163d2:	8803      	ldrh	r3, [r0, #0]
 80163d4:	440b      	add	r3, r1
 80163d6:	4601      	mov	r1, r0
 80163d8:	3b01      	subs	r3, #1
 80163da:	f821 3b02 	strh.w	r3, [r1], #2
 80163de:	f7ff ffc3 	bl	8016368 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80163e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80163e6:	88c2      	ldrh	r2, [r0, #6]
 80163e8:	8082      	strh	r2, [r0, #4]
 80163ea:	80c3      	strh	r3, [r0, #6]
 80163ec:	bd10      	pop	{r4, pc}
 80163ee:	bf00      	nop
 80163f0:	20014c04 	.word	0x20014c04

080163f4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80163f4:	4b06      	ldr	r3, [pc, #24]	; (8016410 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80163f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80163fa:	4b06      	ldr	r3, [pc, #24]	; (8016414 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80163fc:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8016400:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016404:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8016408:	2100      	movs	r1, #0
 801640a:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 801640e:	4770      	bx	lr
 8016410:	20014c00 	.word	0x20014c00
 8016414:	20014c02 	.word	0x20014c02

08016418 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016418:	4b03      	ldr	r3, [pc, #12]	; (8016428 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801641a:	6818      	ldr	r0, [r3, #0]
 801641c:	b110      	cbz	r0, 8016424 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801641e:	6803      	ldr	r3, [r0, #0]
 8016420:	699b      	ldr	r3, [r3, #24]
 8016422:	4718      	bx	r3
 8016424:	4770      	bx	lr
 8016426:	bf00      	nop
 8016428:	20014c68 	.word	0x20014c68

0801642c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801642c:	4770      	bx	lr
	...

08016430 <_ZN8touchgfx11Application4drawEv>:
 8016430:	b507      	push	{r0, r1, r2, lr}
 8016432:	4b09      	ldr	r3, [pc, #36]	; (8016458 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016434:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016438:	4b08      	ldr	r3, [pc, #32]	; (801645c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801643a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801643e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016442:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016446:	6803      	ldr	r3, [r0, #0]
 8016448:	2100      	movs	r1, #0
 801644a:	9100      	str	r1, [sp, #0]
 801644c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801644e:	4669      	mov	r1, sp
 8016450:	4798      	blx	r3
 8016452:	b003      	add	sp, #12
 8016454:	f85d fb04 	ldr.w	pc, [sp], #4
 8016458:	20014c00 	.word	0x20014c00
 801645c:	20014c02 	.word	0x20014c02

08016460 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8016460:	4b03      	ldr	r3, [pc, #12]	; (8016470 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8016462:	6818      	ldr	r0, [r3, #0]
 8016464:	b110      	cbz	r0, 801646c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016466:	6803      	ldr	r3, [r0, #0]
 8016468:	69db      	ldr	r3, [r3, #28]
 801646a:	4718      	bx	r3
 801646c:	4770      	bx	lr
 801646e:	bf00      	nop
 8016470:	20014c68 	.word	0x20014c68

08016474 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016474:	4b03      	ldr	r3, [pc, #12]	; (8016484 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016476:	6818      	ldr	r0, [r3, #0]
 8016478:	b110      	cbz	r0, 8016480 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801647a:	6803      	ldr	r3, [r0, #0]
 801647c:	6a1b      	ldr	r3, [r3, #32]
 801647e:	4718      	bx	r3
 8016480:	4770      	bx	lr
 8016482:	bf00      	nop
 8016484:	20014c68 	.word	0x20014c68

08016488 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016488:	2300      	movs	r3, #0
 801648a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801648e:	4770      	bx	lr

08016490 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016490:	4b03      	ldr	r3, [pc, #12]	; (80164a0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016492:	6818      	ldr	r0, [r3, #0]
 8016494:	b110      	cbz	r0, 801649c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016496:	6803      	ldr	r3, [r0, #0]
 8016498:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801649a:	4718      	bx	r3
 801649c:	4770      	bx	lr
 801649e:	bf00      	nop
 80164a0:	20014c68 	.word	0x20014c68

080164a4 <_ZN8touchgfx11ApplicationD1Ev>:
 80164a4:	4770      	bx	lr

080164a6 <_ZN8touchgfx11ApplicationD0Ev>:
 80164a6:	b510      	push	{r4, lr}
 80164a8:	f44f 719c 	mov.w	r1, #312	; 0x138
 80164ac:	4604      	mov	r4, r0
 80164ae:	f010 ffd0 	bl	8027452 <_ZdlPvj>
 80164b2:	4620      	mov	r0, r4
 80164b4:	bd10      	pop	{r4, pc}
	...

080164b8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80164b8:	b570      	push	{r4, r5, r6, lr}
 80164ba:	4d38      	ldr	r5, [pc, #224]	; (801659c <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 80164bc:	4604      	mov	r4, r0
 80164be:	6828      	ldr	r0, [r5, #0]
 80164c0:	b140      	cbz	r0, 80164d4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80164c2:	7a03      	ldrb	r3, [r0, #8]
 80164c4:	b933      	cbnz	r3, 80164d4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80164c6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80164ca:	6803      	ldr	r3, [r0, #0]
 80164cc:	689b      	ldr	r3, [r3, #8]
 80164ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80164d2:	4718      	bx	r3
 80164d4:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 80164d8:	b97b      	cbnz	r3, 80164fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80164da:	b170      	cbz	r0, 80164fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80164dc:	7a03      	ldrb	r3, [r0, #8]
 80164de:	b163      	cbz	r3, 80164fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80164e0:	4b2f      	ldr	r3, [pc, #188]	; (80165a0 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80164e2:	6818      	ldr	r0, [r3, #0]
 80164e4:	b110      	cbz	r0, 80164ec <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80164e6:	6803      	ldr	r3, [r0, #0]
 80164e8:	691b      	ldr	r3, [r3, #16]
 80164ea:	4798      	blx	r3
 80164ec:	6828      	ldr	r0, [r5, #0]
 80164ee:	6803      	ldr	r3, [r0, #0]
 80164f0:	68db      	ldr	r3, [r3, #12]
 80164f2:	4798      	blx	r3
 80164f4:	2301      	movs	r3, #1
 80164f6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80164fa:	2500      	movs	r5, #0
 80164fc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8016500:	42a8      	cmp	r0, r5
 8016502:	dd0c      	ble.n	801651e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8016504:	1963      	adds	r3, r4, r5
 8016506:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801650a:	b132      	cbz	r2, 801651a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801650c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8016510:	4413      	add	r3, r2
 8016512:	6858      	ldr	r0, [r3, #4]
 8016514:	6803      	ldr	r3, [r0, #0]
 8016516:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016518:	4798      	blx	r3
 801651a:	3501      	adds	r5, #1
 801651c:	e7ee      	b.n	80164fc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801651e:	2300      	movs	r3, #0
 8016520:	461a      	mov	r2, r3
 8016522:	4298      	cmp	r0, r3
 8016524:	d10f      	bne.n	8016546 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 8016526:	1d25      	adds	r5, r4, #4
 8016528:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 801652c:	4291      	cmp	r1, r2
 801652e:	dd2d      	ble.n	801658c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 8016530:	1e48      	subs	r0, r1, #1
 8016532:	b280      	uxth	r0, r0
 8016534:	4288      	cmp	r0, r1
 8016536:	d31a      	bcc.n	801656e <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 8016538:	4b1a      	ldr	r3, [pc, #104]	; (80165a4 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 801653a:	4a1b      	ldr	r2, [pc, #108]	; (80165a8 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 801653c:	481b      	ldr	r0, [pc, #108]	; (80165ac <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 801653e:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8016542:	f010 ffb5 	bl	80274b0 <__assert_func>
 8016546:	18e1      	adds	r1, r4, r3
 8016548:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 801654c:	b16d      	cbz	r5, 801656a <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 801654e:	429a      	cmp	r2, r3
 8016550:	d00a      	beq.n	8016568 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 8016552:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8016556:	4431      	add	r1, r6
 8016558:	684e      	ldr	r6, [r1, #4]
 801655a:	b291      	uxth	r1, r2
 801655c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016560:	604e      	str	r6, [r1, #4]
 8016562:	18a1      	adds	r1, r4, r2
 8016564:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8016568:	3201      	adds	r2, #1
 801656a:	3301      	adds	r3, #1
 801656c:	e7d9      	b.n	8016522 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801656e:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 8016572:	3304      	adds	r3, #4
 8016574:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8016578:	428b      	cmp	r3, r1
 801657a:	d004      	beq.n	8016586 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 801657c:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8016580:	f843 6c04 	str.w	r6, [r3, #-4]
 8016584:	e7f8      	b.n	8016578 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 8016586:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 801658a:	e7cd      	b.n	8016528 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 801658c:	4b04      	ldr	r3, [pc, #16]	; (80165a0 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 801658e:	6818      	ldr	r0, [r3, #0]
 8016590:	b110      	cbz	r0, 8016598 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 8016592:	6803      	ldr	r3, [r0, #0]
 8016594:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016596:	e79a      	b.n	80164ce <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016598:	bd70      	pop	{r4, r5, r6, pc}
 801659a:	bf00      	nop
 801659c:	20014c6c 	.word	0x20014c6c
 80165a0:	20014c68 	.word	0x20014c68
 80165a4:	0802ca23 	.word	0x0802ca23
 80165a8:	0802cc85 	.word	0x0802cc85
 80165ac:	0802ca31 	.word	0x0802ca31

080165b0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80165b0:	b570      	push	{r4, r5, r6, lr}
 80165b2:	4606      	mov	r6, r0
 80165b4:	460c      	mov	r4, r1
 80165b6:	b929      	cbnz	r1, 80165c4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 80165b8:	4b0c      	ldr	r3, [pc, #48]	; (80165ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 80165ba:	4a0d      	ldr	r2, [pc, #52]	; (80165f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 80165bc:	480d      	ldr	r0, [pc, #52]	; (80165f4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 80165be:	215e      	movs	r1, #94	; 0x5e
 80165c0:	f010 ff76 	bl	80274b0 <__assert_func>
 80165c4:	4d0c      	ldr	r5, [pc, #48]	; (80165f8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 80165c6:	2300      	movs	r3, #0
 80165c8:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80165cc:	6828      	ldr	r0, [r5, #0]
 80165ce:	b110      	cbz	r0, 80165d6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 80165d0:	6803      	ldr	r3, [r0, #0]
 80165d2:	695b      	ldr	r3, [r3, #20]
 80165d4:	4798      	blx	r3
 80165d6:	602c      	str	r4, [r5, #0]
 80165d8:	6823      	ldr	r3, [r4, #0]
 80165da:	4620      	mov	r0, r4
 80165dc:	68db      	ldr	r3, [r3, #12]
 80165de:	4798      	blx	r3
 80165e0:	6833      	ldr	r3, [r6, #0]
 80165e2:	4630      	mov	r0, r6
 80165e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80165e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80165ea:	4718      	bx	r3
 80165ec:	0802c9ef 	.word	0x0802c9ef
 80165f0:	0802cb00 	.word	0x0802cb00
 80165f4:	0802c9f9 	.word	0x0802c9f9
 80165f8:	20014c68 	.word	0x20014c68

080165fc <_ZN8touchgfx4Rect10restrictToEss>:
 80165fc:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016600:	2b00      	cmp	r3, #0
 8016602:	b510      	push	{r4, lr}
 8016604:	da04      	bge.n	8016610 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016606:	8884      	ldrh	r4, [r0, #4]
 8016608:	4423      	add	r3, r4
 801660a:	8083      	strh	r3, [r0, #4]
 801660c:	2300      	movs	r3, #0
 801660e:	8003      	strh	r3, [r0, #0]
 8016610:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016614:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016618:	1b09      	subs	r1, r1, r4
 801661a:	428b      	cmp	r3, r1
 801661c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016620:	bfc8      	it	gt
 8016622:	8081      	strhgt	r1, [r0, #4]
 8016624:	2b00      	cmp	r3, #0
 8016626:	da04      	bge.n	8016632 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016628:	88c1      	ldrh	r1, [r0, #6]
 801662a:	440b      	add	r3, r1
 801662c:	80c3      	strh	r3, [r0, #6]
 801662e:	2300      	movs	r3, #0
 8016630:	8043      	strh	r3, [r0, #2]
 8016632:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016636:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801663a:	1a52      	subs	r2, r2, r1
 801663c:	4293      	cmp	r3, r2
 801663e:	bfc8      	it	gt
 8016640:	80c2      	strhgt	r2, [r0, #6]
 8016642:	bd10      	pop	{r4, pc}

08016644 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016644:	b510      	push	{r4, lr}
 8016646:	4b10      	ldr	r3, [pc, #64]	; (8016688 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016648:	f9b3 2000 	ldrsh.w	r2, [r3]
 801664c:	4b0f      	ldr	r3, [pc, #60]	; (801668c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801664e:	460c      	mov	r4, r1
 8016650:	4620      	mov	r0, r4
 8016652:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016656:	f7ff ffd1 	bl	80165fc <_ZN8touchgfx4Rect10restrictToEss>
 801665a:	4b0d      	ldr	r3, [pc, #52]	; (8016690 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801665c:	6818      	ldr	r0, [r3, #0]
 801665e:	b190      	cbz	r0, 8016686 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016660:	6803      	ldr	r3, [r0, #0]
 8016662:	4621      	mov	r1, r4
 8016664:	689b      	ldr	r3, [r3, #8]
 8016666:	4798      	blx	r3
 8016668:	4b0a      	ldr	r3, [pc, #40]	; (8016694 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801666a:	6818      	ldr	r0, [r3, #0]
 801666c:	b118      	cbz	r0, 8016676 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801666e:	6803      	ldr	r3, [r0, #0]
 8016670:	4621      	mov	r1, r4
 8016672:	689b      	ldr	r3, [r3, #8]
 8016674:	4798      	blx	r3
 8016676:	4b08      	ldr	r3, [pc, #32]	; (8016698 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016678:	6818      	ldr	r0, [r3, #0]
 801667a:	6803      	ldr	r3, [r0, #0]
 801667c:	4621      	mov	r1, r4
 801667e:	69db      	ldr	r3, [r3, #28]
 8016680:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016684:	4718      	bx	r3
 8016686:	bd10      	pop	{r4, pc}
 8016688:	20014c02 	.word	0x20014c02
 801668c:	20014c00 	.word	0x20014c00
 8016690:	20014c68 	.word	0x20014c68
 8016694:	20014c64 	.word	0x20014c64
 8016698:	20014c0c 	.word	0x20014c0c

0801669c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801669c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801669e:	4606      	mov	r6, r0
 80166a0:	4608      	mov	r0, r1
 80166a2:	460f      	mov	r7, r1
 80166a4:	f7f9 f879 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80166a8:	b9e8      	cbnz	r0, 80166e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80166aa:	f9b7 5000 	ldrsh.w	r5, [r7]
 80166ae:	f9b6 4000 	ldrsh.w	r4, [r6]
 80166b2:	42a5      	cmp	r5, r4
 80166b4:	db17      	blt.n	80166e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80166b6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80166ba:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80166be:	429a      	cmp	r2, r3
 80166c0:	db11      	blt.n	80166e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80166c2:	88b9      	ldrh	r1, [r7, #4]
 80166c4:	440d      	add	r5, r1
 80166c6:	88b1      	ldrh	r1, [r6, #4]
 80166c8:	440c      	add	r4, r1
 80166ca:	b22d      	sxth	r5, r5
 80166cc:	b224      	sxth	r4, r4
 80166ce:	42a5      	cmp	r5, r4
 80166d0:	dc09      	bgt.n	80166e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80166d2:	88f8      	ldrh	r0, [r7, #6]
 80166d4:	4410      	add	r0, r2
 80166d6:	88f2      	ldrh	r2, [r6, #6]
 80166d8:	4413      	add	r3, r2
 80166da:	b200      	sxth	r0, r0
 80166dc:	b21b      	sxth	r3, r3
 80166de:	4298      	cmp	r0, r3
 80166e0:	bfcc      	ite	gt
 80166e2:	2000      	movgt	r0, #0
 80166e4:	2001      	movle	r0, #1
 80166e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080166e8 <_ZN8touchgfx11Application11getInstanceEv>:
 80166e8:	4b01      	ldr	r3, [pc, #4]	; (80166f0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80166ea:	6818      	ldr	r0, [r3, #0]
 80166ec:	4770      	bx	lr
 80166ee:	bf00      	nop
 80166f0:	20014c78 	.word	0x20014c78

080166f4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 80166f4:	b570      	push	{r4, r5, r6, lr}
 80166f6:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 80166fa:	1d04      	adds	r4, r0, #4
 80166fc:	2200      	movs	r2, #0
 80166fe:	b295      	uxth	r5, r2
 8016700:	42ab      	cmp	r3, r5
 8016702:	d90f      	bls.n	8016724 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8016704:	f854 6b04 	ldr.w	r6, [r4], #4
 8016708:	428e      	cmp	r6, r1
 801670a:	4615      	mov	r5, r2
 801670c:	f102 0201 	add.w	r2, r2, #1
 8016710:	d1f5      	bne.n	80166fe <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 8016712:	4428      	add	r0, r5
 8016714:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8016718:	2bff      	cmp	r3, #255	; 0xff
 801671a:	d002      	beq.n	8016722 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 801671c:	3301      	adds	r3, #1
 801671e:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 8016722:	bd70      	pop	{r4, r5, r6, pc}
 8016724:	2b20      	cmp	r3, #32
 8016726:	d106      	bne.n	8016736 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 8016728:	4b08      	ldr	r3, [pc, #32]	; (801674c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 801672a:	4a09      	ldr	r2, [pc, #36]	; (8016750 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 801672c:	4809      	ldr	r0, [pc, #36]	; (8016754 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 801672e:	f240 2149 	movw	r1, #585	; 0x249
 8016732:	f010 febd 	bl	80274b0 <__assert_func>
 8016736:	18c2      	adds	r2, r0, r3
 8016738:	2401      	movs	r4, #1
 801673a:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 801673e:	191a      	adds	r2, r3, r4
 8016740:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 8016744:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8016748:	6041      	str	r1, [r0, #4]
 801674a:	e7ea      	b.n	8016722 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 801674c:	0802ca5a 	.word	0x0802ca5a
 8016750:	0802cb44 	.word	0x0802cb44
 8016754:	0802c9f9 	.word	0x0802c9f9

08016758 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 8016758:	b570      	push	{r4, r5, r6, lr}
 801675a:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 801675e:	1d04      	adds	r4, r0, #4
 8016760:	2300      	movs	r3, #0
 8016762:	b29a      	uxth	r2, r3
 8016764:	4296      	cmp	r6, r2
 8016766:	d90a      	bls.n	801677e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 8016768:	f854 2b04 	ldr.w	r2, [r4], #4
 801676c:	428a      	cmp	r2, r1
 801676e:	d107      	bne.n	8016780 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8016770:	18c5      	adds	r5, r0, r3
 8016772:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 8016776:	b11a      	cbz	r2, 8016780 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8016778:	3a01      	subs	r2, #1
 801677a:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 801677e:	bd70      	pop	{r4, r5, r6, pc}
 8016780:	3301      	adds	r3, #1
 8016782:	e7ee      	b.n	8016762 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8016784:	2300      	movs	r3, #0
 8016786:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801678a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801678e:	30a8      	adds	r0, #168	; 0xa8
 8016790:	f802 3b01 	strb.w	r3, [r2], #1
 8016794:	4282      	cmp	r2, r0
 8016796:	d1fb      	bne.n	8016790 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8016798:	4770      	bx	lr

0801679a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801679a:	4603      	mov	r3, r0
 801679c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80167a0:	2200      	movs	r2, #0
 80167a2:	801a      	strh	r2, [r3, #0]
 80167a4:	805a      	strh	r2, [r3, #2]
 80167a6:	809a      	strh	r2, [r3, #4]
 80167a8:	80da      	strh	r2, [r3, #6]
 80167aa:	3308      	adds	r3, #8
 80167ac:	428b      	cmp	r3, r1
 80167ae:	d1f8      	bne.n	80167a2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80167b0:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80167b4:	4770      	bx	lr
	...

080167b8 <_ZN8touchgfx11ApplicationC1Ev>:
 80167b8:	b570      	push	{r4, r5, r6, lr}
 80167ba:	4b19      	ldr	r3, [pc, #100]	; (8016820 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80167bc:	6003      	str	r3, [r0, #0]
 80167be:	2500      	movs	r5, #0
 80167c0:	4604      	mov	r4, r0
 80167c2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80167c6:	30a8      	adds	r0, #168	; 0xa8
 80167c8:	f7ff ffe7 	bl	801679a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80167cc:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80167d0:	f7ff ffe3 	bl	801679a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80167d4:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80167d8:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80167dc:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80167e0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80167e4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80167e8:	490e      	ldr	r1, [pc, #56]	; (8016824 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80167ea:	480f      	ldr	r0, [pc, #60]	; (8016828 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80167ec:	4e0f      	ldr	r6, [pc, #60]	; (801682c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80167ee:	f00f f905 	bl	80259fc <CRC_Lock>
 80167f2:	4b0f      	ldr	r3, [pc, #60]	; (8016830 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80167f4:	b158      	cbz	r0, 801680e <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80167f6:	801d      	strh	r5, [r3, #0]
 80167f8:	4a0e      	ldr	r2, [pc, #56]	; (8016834 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80167fa:	2300      	movs	r3, #0
 80167fc:	6013      	str	r3, [r2, #0]
 80167fe:	4a0e      	ldr	r2, [pc, #56]	; (8016838 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016800:	6033      	str	r3, [r6, #0]
 8016802:	4620      	mov	r0, r4
 8016804:	6013      	str	r3, [r2, #0]
 8016806:	f7ff ffbd 	bl	8016784 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801680a:	4620      	mov	r0, r4
 801680c:	bd70      	pop	{r4, r5, r6, pc}
 801680e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016812:	2002      	movs	r0, #2
 8016814:	801a      	strh	r2, [r3, #0]
 8016816:	6030      	str	r0, [r6, #0]
 8016818:	f001 faf4 	bl	8017e04 <_ZN8touchgfx6Screen4drawEv>
 801681c:	e7ec      	b.n	80167f8 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 801681e:	bf00      	nop
 8016820:	0802cabc 	.word	0x0802cabc
 8016824:	b5e8b5cd 	.word	0xb5e8b5cd
 8016828:	f407a5c2 	.word	0xf407a5c2
 801682c:	20014c68 	.word	0x20014c68
 8016830:	200000a8 	.word	0x200000a8
 8016834:	20014c78 	.word	0x20014c78
 8016838:	20014c6c 	.word	0x20014c6c

0801683c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801683c:	b510      	push	{r4, lr}
 801683e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016842:	428b      	cmp	r3, r1
 8016844:	d806      	bhi.n	8016854 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8016846:	4b0b      	ldr	r3, [pc, #44]	; (8016874 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8016848:	4a0b      	ldr	r2, [pc, #44]	; (8016878 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 801684a:	480c      	ldr	r0, [pc, #48]	; (801687c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 801684c:	f240 11dd 	movw	r1, #477	; 0x1dd
 8016850:	f010 fe2e 	bl	80274b0 <__assert_func>
 8016854:	3b01      	subs	r3, #1
 8016856:	b29b      	uxth	r3, r3
 8016858:	428b      	cmp	r3, r1
 801685a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801685e:	d908      	bls.n	8016872 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 8016860:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016864:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016868:	681a      	ldr	r2, [r3, #0]
 801686a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801686e:	685a      	ldr	r2, [r3, #4]
 8016870:	6062      	str	r2, [r4, #4]
 8016872:	bd10      	pop	{r4, pc}
 8016874:	0802ca23 	.word	0x0802ca23
 8016878:	0802cb89 	.word	0x0802cb89
 801687c:	0802ca31 	.word	0x0802ca31

08016880 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8016880:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016882:	466b      	mov	r3, sp
 8016884:	e883 0006 	stmia.w	r3, {r1, r2}
 8016888:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801688c:	2a07      	cmp	r2, #7
 801688e:	4604      	mov	r4, r0
 8016890:	d906      	bls.n	80168a0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 8016892:	4b09      	ldr	r3, [pc, #36]	; (80168b8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8016894:	4a09      	ldr	r2, [pc, #36]	; (80168bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8016896:	480a      	ldr	r0, [pc, #40]	; (80168c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8016898:	f240 11a3 	movw	r1, #419	; 0x1a3
 801689c:	f010 fe08 	bl	80274b0 <__assert_func>
 80168a0:	1c51      	adds	r1, r2, #1
 80168a2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80168a6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 80168aa:	cb03      	ldmia	r3!, {r0, r1}
 80168ac:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 80168b0:	6069      	str	r1, [r5, #4]
 80168b2:	b003      	add	sp, #12
 80168b4:	bd30      	pop	{r4, r5, pc}
 80168b6:	bf00      	nop
 80168b8:	0802ca82 	.word	0x0802ca82
 80168bc:	0802cc1f 	.word	0x0802cc1f
 80168c0:	0802ca31 	.word	0x0802ca31

080168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80168c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168c8:	4b94      	ldr	r3, [pc, #592]	; (8016b1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80168ca:	b08d      	sub	sp, #52	; 0x34
 80168cc:	ac08      	add	r4, sp, #32
 80168ce:	e884 0006 	stmia.w	r4, {r1, r2}
 80168d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80168d6:	4b92      	ldr	r3, [pc, #584]	; (8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80168d8:	4683      	mov	fp, r0
 80168da:	f9b3 1000 	ldrsh.w	r1, [r3]
 80168de:	4620      	mov	r0, r4
 80168e0:	f7ff fe8c 	bl	80165fc <_ZN8touchgfx4Rect10restrictToEss>
 80168e4:	4620      	mov	r0, r4
 80168e6:	f7f8 ff58 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80168ea:	2800      	cmp	r0, #0
 80168ec:	d16a      	bne.n	80169c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80168ee:	9402      	str	r4, [sp, #8]
 80168f0:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80168f4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80168f8:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80168fc:	2400      	movs	r4, #0
 80168fe:	9301      	str	r3, [sp, #4]
 8016900:	36a0      	adds	r6, #160	; 0xa0
 8016902:	42a5      	cmp	r5, r4
 8016904:	d00d      	beq.n	8016922 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8016906:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 801690a:	9802      	ldr	r0, [sp, #8]
 801690c:	f7ff fec6 	bl	801669c <_ZNK8touchgfx4Rect8includesERKS0_>
 8016910:	b128      	cbz	r0, 801691e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8016912:	1e69      	subs	r1, r5, #1
 8016914:	1b09      	subs	r1, r1, r4
 8016916:	b289      	uxth	r1, r1
 8016918:	9801      	ldr	r0, [sp, #4]
 801691a:	f7ff ff8f 	bl	801683c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801691e:	3401      	adds	r4, #1
 8016920:	e7ef      	b.n	8016902 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8016922:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8016926:	9703      	str	r7, [sp, #12]
 8016928:	1e7b      	subs	r3, r7, #1
 801692a:	9300      	str	r3, [sp, #0]
 801692c:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8016930:	2400      	movs	r4, #0
 8016932:	4655      	mov	r5, sl
 8016934:	9704      	str	r7, [sp, #16]
 8016936:	4626      	mov	r6, r4
 8016938:	9b04      	ldr	r3, [sp, #16]
 801693a:	2b00      	cmp	r3, #0
 801693c:	d078      	beq.n	8016a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 801693e:	9902      	ldr	r1, [sp, #8]
 8016940:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8016944:	f7fa ff9e 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016948:	b360      	cbz	r0, 80169a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801694a:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801694e:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8016952:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8016956:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801695a:	45e6      	cmp	lr, ip
 801695c:	db35      	blt.n	80169ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801695e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8016962:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8016966:	4472      	add	r2, lr
 8016968:	4463      	add	r3, ip
 801696a:	b212      	sxth	r2, r2
 801696c:	b21b      	sxth	r3, r3
 801696e:	429a      	cmp	r2, r3
 8016970:	dc2b      	bgt.n	80169ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016972:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8016976:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801697a:	fa1f f288 	uxth.w	r2, r8
 801697e:	4413      	add	r3, r2
 8016980:	b29b      	uxth	r3, r3
 8016982:	45c1      	cmp	r9, r8
 8016984:	fa0f fe83 	sxth.w	lr, r3
 8016988:	fa1f fc89 	uxth.w	ip, r9
 801698c:	db0f      	blt.n	80169ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801698e:	eba3 030c 	sub.w	r3, r3, ip
 8016992:	1ac9      	subs	r1, r1, r3
 8016994:	b209      	sxth	r1, r1
 8016996:	2900      	cmp	r1, #0
 8016998:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801699c:	dd12      	ble.n	80169c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801699e:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 80169a2:	4604      	mov	r4, r0
 80169a4:	9b04      	ldr	r3, [sp, #16]
 80169a6:	3b01      	subs	r3, #1
 80169a8:	9304      	str	r3, [sp, #16]
 80169aa:	3d08      	subs	r5, #8
 80169ac:	e7c4      	b.n	8016938 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 80169ae:	4461      	add	r1, ip
 80169b0:	b209      	sxth	r1, r1
 80169b2:	4571      	cmp	r1, lr
 80169b4:	dc3a      	bgt.n	8016a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80169b6:	eba2 020c 	sub.w	r2, r2, ip
 80169ba:	b212      	sxth	r2, r2
 80169bc:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80169c0:	2a00      	cmp	r2, #0
 80169c2:	dcee      	bgt.n	80169a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80169c4:	b00d      	add	sp, #52	; 0x34
 80169c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169ca:	45c1      	cmp	r9, r8
 80169cc:	db2e      	blt.n	8016a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80169ce:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80169d2:	4499      	add	r9, r3
 80169d4:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80169d8:	4498      	add	r8, r3
 80169da:	fa0f f989 	sxth.w	r9, r9
 80169de:	fa0f f888 	sxth.w	r8, r8
 80169e2:	45c1      	cmp	r9, r8
 80169e4:	dc22      	bgt.n	8016a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80169e6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80169ea:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80169ee:	fa1f f28c 	uxth.w	r2, ip
 80169f2:	4413      	add	r3, r2
 80169f4:	b29b      	uxth	r3, r3
 80169f6:	45e6      	cmp	lr, ip
 80169f8:	fa1f f88e 	uxth.w	r8, lr
 80169fc:	fa0f f983 	sxth.w	r9, r3
 8016a00:	db0a      	blt.n	8016a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 8016a02:	eba3 0308 	sub.w	r3, r3, r8
 8016a06:	1ac9      	subs	r1, r1, r3
 8016a08:	b209      	sxth	r1, r1
 8016a0a:	2900      	cmp	r1, #0
 8016a0c:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8016a10:	ddd8      	ble.n	80169c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016a12:	f8ad 9020 	strh.w	r9, [sp, #32]
 8016a16:	e7c4      	b.n	80169a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016a18:	4441      	add	r1, r8
 8016a1a:	b209      	sxth	r1, r1
 8016a1c:	4549      	cmp	r1, r9
 8016a1e:	dc05      	bgt.n	8016a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016a20:	eba2 0208 	sub.w	r2, r2, r8
 8016a24:	b212      	sxth	r2, r2
 8016a26:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8016a2a:	e7c9      	b.n	80169c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016a2c:	4606      	mov	r6, r0
 8016a2e:	e7b9      	b.n	80169a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016a30:	2c00      	cmp	r4, #0
 8016a32:	f47f af7d 	bne.w	8016930 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8016a36:	2e00      	cmp	r6, #0
 8016a38:	f000 81e1 	beq.w	8016dfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8016a3c:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8016a40:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8016a44:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8016a48:	b2b9      	uxth	r1, r7
 8016a4a:	9104      	str	r1, [sp, #16]
 8016a4c:	9804      	ldr	r0, [sp, #16]
 8016a4e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8016a52:	4401      	add	r1, r0
 8016a54:	b2b3      	uxth	r3, r6
 8016a56:	b289      	uxth	r1, r1
 8016a58:	441a      	add	r2, r3
 8016a5a:	9105      	str	r1, [sp, #20]
 8016a5c:	b292      	uxth	r2, r2
 8016a5e:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8016a62:	fa0f f882 	sxth.w	r8, r2
 8016a66:	4655      	mov	r5, sl
 8016a68:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8016a6c:	9b03      	ldr	r3, [sp, #12]
 8016a6e:	2b00      	cmp	r3, #0
 8016a70:	d058      	beq.n	8016b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8016a72:	9902      	ldr	r1, [sp, #8]
 8016a74:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8016a78:	f7fa ff04 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016a7c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8016a80:	b1d8      	cbz	r0, 8016aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8016a82:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8016a86:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8016a8a:	4576      	cmp	r6, lr
 8016a8c:	dc26      	bgt.n	8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8016a8e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8016a92:	44f4      	add	ip, lr
 8016a94:	fa0f fc8c 	sxth.w	ip, ip
 8016a98:	45e0      	cmp	r8, ip
 8016a9a:	db1f      	blt.n	8016adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8016a9c:	428f      	cmp	r7, r1
 8016a9e:	fa1f fc81 	uxth.w	ip, r1
 8016aa2:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8016aa6:	dc0f      	bgt.n	8016ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8016aa8:	9805      	ldr	r0, [sp, #20]
 8016aaa:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8016aae:	eba0 0c0c 	sub.w	ip, r0, ip
 8016ab2:	eba1 010c 	sub.w	r1, r1, ip
 8016ab6:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8016aba:	4620      	mov	r0, r4
 8016abc:	9903      	ldr	r1, [sp, #12]
 8016abe:	3901      	subs	r1, #1
 8016ac0:	9103      	str	r1, [sp, #12]
 8016ac2:	3d08      	subs	r5, #8
 8016ac4:	4604      	mov	r4, r0
 8016ac6:	e7cf      	b.n	8016a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8016ac8:	4461      	add	r1, ip
 8016aca:	b209      	sxth	r1, r1
 8016acc:	4549      	cmp	r1, r9
 8016ace:	dcf5      	bgt.n	8016abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016ad0:	9904      	ldr	r1, [sp, #16]
 8016ad2:	eba1 0c0c 	sub.w	ip, r1, ip
 8016ad6:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8016ada:	e7ee      	b.n	8016aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8016adc:	428f      	cmp	r7, r1
 8016ade:	dced      	bgt.n	8016abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016ae0:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8016ae4:	4461      	add	r1, ip
 8016ae6:	b209      	sxth	r1, r1
 8016ae8:	4589      	cmp	r9, r1
 8016aea:	dbe7      	blt.n	8016abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016aec:	4576      	cmp	r6, lr
 8016aee:	fa1f fc8e 	uxth.w	ip, lr
 8016af2:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8016af6:	dc08      	bgt.n	8016b0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8016af8:	eba2 0c0c 	sub.w	ip, r2, ip
 8016afc:	eba1 010c 	sub.w	r1, r1, ip
 8016b00:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8016b04:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8016b08:	e7d7      	b.n	8016aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8016b0a:	4461      	add	r1, ip
 8016b0c:	b209      	sxth	r1, r1
 8016b0e:	4588      	cmp	r8, r1
 8016b10:	dbd4      	blt.n	8016abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8016b12:	eba3 0c0c 	sub.w	ip, r3, ip
 8016b16:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8016b1a:	e7ce      	b.n	8016aba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8016b1c:	20014c02 	.word	0x20014c02
 8016b20:	20014c00 	.word	0x20014c00
 8016b24:	2c00      	cmp	r4, #0
 8016b26:	f000 816a 	beq.w	8016dfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8016b2a:	9b00      	ldr	r3, [sp, #0]
 8016b2c:	3301      	adds	r3, #1
 8016b2e:	f000 8166 	beq.w	8016dfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8016b32:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8016b36:	4621      	mov	r1, r4
 8016b38:	9802      	ldr	r0, [sp, #8]
 8016b3a:	f7ff fdaf 	bl	801669c <_ZNK8touchgfx4Rect8includesERKS0_>
 8016b3e:	b120      	cbz	r0, 8016b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8016b40:	f8bd 1000 	ldrh.w	r1, [sp]
 8016b44:	9801      	ldr	r0, [sp, #4]
 8016b46:	f7ff fe79 	bl	801683c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b4a:	9902      	ldr	r1, [sp, #8]
 8016b4c:	4620      	mov	r0, r4
 8016b4e:	f7fa fe99 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016b52:	2800      	cmp	r0, #0
 8016b54:	f000 809b 	beq.w	8016c8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8016b58:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8016b5c:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8016b60:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8016b64:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8016b68:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016b6c:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8016b70:	fa1f f288 	uxth.w	r2, r8
 8016b74:	19d5      	adds	r5, r2, r7
 8016b76:	fa1f f985 	uxth.w	r9, r5
 8016b7a:	fa0f f589 	sxth.w	r5, r9
 8016b7e:	b2a1      	uxth	r1, r4
 8016b80:	440b      	add	r3, r1
 8016b82:	9503      	str	r5, [sp, #12]
 8016b84:	45a0      	cmp	r8, r4
 8016b86:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8016b8a:	9507      	str	r5, [sp, #28]
 8016b8c:	b29b      	uxth	r3, r3
 8016b8e:	f340 809d 	ble.w	8016ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8016b92:	1a52      	subs	r2, r2, r1
 8016b94:	b292      	uxth	r2, r2
 8016b96:	4584      	cmp	ip, r0
 8016b98:	fa0f fe83 	sxth.w	lr, r3
 8016b9c:	b215      	sxth	r5, r2
 8016b9e:	dd2f      	ble.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 8016ba0:	9e00      	ldr	r6, [sp, #0]
 8016ba2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8016ba6:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8016baa:	9e03      	ldr	r6, [sp, #12]
 8016bac:	eba6 060e 	sub.w	r6, r6, lr
 8016bb0:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8016bb4:	fa1f fc8c 	uxth.w	ip, ip
 8016bb8:	b280      	uxth	r0, r0
 8016bba:	ebac 0300 	sub.w	r3, ip, r0
 8016bbe:	448c      	add	ip, r1
 8016bc0:	4470      	add	r0, lr
 8016bc2:	b29b      	uxth	r3, r3
 8016bc4:	fa0f fc8c 	sxth.w	ip, ip
 8016bc8:	b200      	sxth	r0, r0
 8016bca:	b21c      	sxth	r4, r3
 8016bcc:	ebac 0000 	sub.w	r0, ip, r0
 8016bd0:	4366      	muls	r6, r4
 8016bd2:	4368      	muls	r0, r5
 8016bd4:	4286      	cmp	r6, r0
 8016bd6:	db09      	blt.n	8016bec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8016bd8:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8016bdc:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8016be0:	4417      	add	r7, r2
 8016be2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016be6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8016bea:	e681      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016bec:	440b      	add	r3, r1
 8016bee:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8016bf2:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8016bf6:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8016bfa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016bfe:	e677      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c00:	9e03      	ldr	r6, [sp, #12]
 8016c02:	45b6      	cmp	lr, r6
 8016c04:	da28      	bge.n	8016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8016c06:	9b00      	ldr	r3, [sp, #0]
 8016c08:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8016c0c:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8016c10:	eb04 030c 	add.w	r3, r4, ip
 8016c14:	fa1f f883 	uxth.w	r8, r3
 8016c18:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8016c1c:	4403      	add	r3, r0
 8016c1e:	eba3 0308 	sub.w	r3, r3, r8
 8016c22:	b29b      	uxth	r3, r3
 8016c24:	fa0f f988 	sxth.w	r9, r8
 8016c28:	eba0 000c 	sub.w	r0, r0, ip
 8016c2c:	fa0f f883 	sxth.w	r8, r3
 8016c30:	eba6 060e 	sub.w	r6, r6, lr
 8016c34:	4368      	muls	r0, r5
 8016c36:	fb08 f606 	mul.w	r6, r8, r6
 8016c3a:	42b0      	cmp	r0, r6
 8016c3c:	dc06      	bgt.n	8016c4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016c3e:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8016c42:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8016c46:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8016c4a:	e7c9      	b.n	8016be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 8016c4c:	4423      	add	r3, r4
 8016c4e:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8016c52:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8016c56:	e64b      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016c58:	9807      	ldr	r0, [sp, #28]
 8016c5a:	eba3 0309 	sub.w	r3, r3, r9
 8016c5e:	b29b      	uxth	r3, r3
 8016c60:	2806      	cmp	r0, #6
 8016c62:	fa0f fc83 	sxth.w	ip, r3
 8016c66:	d818      	bhi.n	8016c9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8016c68:	4652      	mov	r2, sl
 8016c6a:	ab0a      	add	r3, sp, #40	; 0x28
 8016c6c:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8016c70:	6851      	ldr	r1, [r2, #4]
 8016c72:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8016c76:	c303      	stmia	r3!, {r0, r1}
 8016c78:	9b03      	ldr	r3, [sp, #12]
 8016c7a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8016c7e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8016c82:	ab0a      	add	r3, sp, #40	; 0x28
 8016c84:	e893 0006 	ldmia.w	r3, {r1, r2}
 8016c88:	9801      	ldr	r0, [sp, #4]
 8016c8a:	f7ff fdf9 	bl	8016880 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8016c8e:	9b00      	ldr	r3, [sp, #0]
 8016c90:	3b01      	subs	r3, #1
 8016c92:	9300      	str	r3, [sp, #0]
 8016c94:	f1aa 0a08 	sub.w	sl, sl, #8
 8016c98:	e747      	b.n	8016b2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8016c9a:	9800      	ldr	r0, [sp, #0]
 8016c9c:	45ac      	cmp	ip, r5
 8016c9e:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8016ca2:	db0c      	blt.n	8016cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 8016ca4:	4417      	add	r7, r2
 8016ca6:	b2bf      	uxth	r7, r7
 8016ca8:	4458      	add	r0, fp
 8016caa:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8016cae:	440f      	add	r7, r1
 8016cb0:	f8ad 4020 	strh.w	r4, [sp, #32]
 8016cb4:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8016cb8:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 8016cbc:	e618      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016cbe:	4458      	add	r0, fp
 8016cc0:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8016cc4:	443b      	add	r3, r7
 8016cc6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8016cca:	e611      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ccc:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8016cd0:	fa1f f18c 	uxth.w	r1, ip
 8016cd4:	eb01 0e05 	add.w	lr, r1, r5
 8016cd8:	b282      	uxth	r2, r0
 8016cda:	fa1f fe8e 	uxth.w	lr, lr
 8016cde:	9204      	str	r2, [sp, #16]
 8016ce0:	fa0f f28e 	sxth.w	r2, lr
 8016ce4:	9205      	str	r2, [sp, #20]
 8016ce6:	9e04      	ldr	r6, [sp, #16]
 8016ce8:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 8016cec:	4432      	add	r2, r6
 8016cee:	b292      	uxth	r2, r2
 8016cf0:	4584      	cmp	ip, r0
 8016cf2:	9206      	str	r2, [sp, #24]
 8016cf4:	da26      	bge.n	8016d44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 8016cf6:	eba3 0309 	sub.w	r3, r3, r9
 8016cfa:	eba2 020e 	sub.w	r2, r2, lr
 8016cfe:	b29b      	uxth	r3, r3
 8016d00:	b292      	uxth	r2, r2
 8016d02:	fa0f fa83 	sxth.w	sl, r3
 8016d06:	b211      	sxth	r1, r2
 8016d08:	eba0 000c 	sub.w	r0, r0, ip
 8016d0c:	eba4 0408 	sub.w	r4, r4, r8
 8016d10:	fb0a f000 	mul.w	r0, sl, r0
 8016d14:	434c      	muls	r4, r1
 8016d16:	42a0      	cmp	r0, r4
 8016d18:	9800      	ldr	r0, [sp, #0]
 8016d1a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8016d1e:	dc06      	bgt.n	8016d2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8016d20:	4458      	add	r0, fp
 8016d22:	9a05      	ldr	r2, [sp, #20]
 8016d24:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8016d28:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8016d2c:	e7ca      	b.n	8016cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8016d2e:	eb0b 0300 	add.w	r3, fp, r0
 8016d32:	9903      	ldr	r1, [sp, #12]
 8016d34:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8016d38:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8016d3c:	442a      	add	r2, r5
 8016d3e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8016d42:	e5d5      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d44:	9e04      	ldr	r6, [sp, #16]
 8016d46:	9a03      	ldr	r2, [sp, #12]
 8016d48:	1b89      	subs	r1, r1, r6
 8016d4a:	b21e      	sxth	r6, r3
 8016d4c:	b289      	uxth	r1, r1
 8016d4e:	4296      	cmp	r6, r2
 8016d50:	fa0f fc81 	sxth.w	ip, r1
 8016d54:	dd26      	ble.n	8016da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 8016d56:	eba3 0309 	sub.w	r3, r3, r9
 8016d5a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8016d5e:	9e05      	ldr	r6, [sp, #20]
 8016d60:	b29b      	uxth	r3, r3
 8016d62:	eba6 0902 	sub.w	r9, r6, r2
 8016d66:	b218      	sxth	r0, r3
 8016d68:	eba4 0408 	sub.w	r4, r4, r8
 8016d6c:	fb0c f404 	mul.w	r4, ip, r4
 8016d70:	fb00 f909 	mul.w	r9, r0, r9
 8016d74:	9a00      	ldr	r2, [sp, #0]
 8016d76:	454c      	cmp	r4, r9
 8016d78:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016d7c:	db03      	blt.n	8016d86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 8016d7e:	445a      	add	r2, fp
 8016d80:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8016d84:	e79e      	b.n	8016cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8016d86:	eb0b 0302 	add.w	r3, fp, r2
 8016d8a:	9a03      	ldr	r2, [sp, #12]
 8016d8c:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8016d90:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8016d94:	4429      	add	r1, r5
 8016d96:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8016d9a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016d9e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8016da2:	e5a5      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016da4:	9b06      	ldr	r3, [sp, #24]
 8016da6:	9c07      	ldr	r4, [sp, #28]
 8016da8:	eba3 020e 	sub.w	r2, r3, lr
 8016dac:	b292      	uxth	r2, r2
 8016dae:	2c06      	cmp	r4, #6
 8016db0:	b213      	sxth	r3, r2
 8016db2:	d80d      	bhi.n	8016dd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8016db4:	4651      	mov	r1, sl
 8016db6:	aa0a      	add	r2, sp, #40	; 0x28
 8016db8:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8016dbc:	6849      	ldr	r1, [r1, #4]
 8016dbe:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8016dc2:	9b05      	ldr	r3, [sp, #20]
 8016dc4:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8016dc8:	c203      	stmia	r2!, {r0, r1}
 8016dca:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8016dce:	e758      	b.n	8016c82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016dd0:	9c00      	ldr	r4, [sp, #0]
 8016dd2:	4563      	cmp	r3, ip
 8016dd4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016dd8:	db0d      	blt.n	8016df6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8016dda:	4429      	add	r1, r5
 8016ddc:	9a04      	ldr	r2, [sp, #16]
 8016dde:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016de2:	b289      	uxth	r1, r1
 8016de4:	445c      	add	r4, fp
 8016de6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8016dea:	4411      	add	r1, r2
 8016dec:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8016df0:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8016df4:	e57c      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016df6:	445c      	add	r4, fp
 8016df8:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8016dfc:	e79e      	b.n	8016d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 8016dfe:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8016e02:	2f07      	cmp	r7, #7
 8016e04:	d806      	bhi.n	8016e14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 8016e06:	ab08      	add	r3, sp, #32
 8016e08:	e893 0006 	ldmia.w	r3, {r1, r2}
 8016e0c:	9801      	ldr	r0, [sp, #4]
 8016e0e:	f7ff fd37 	bl	8016880 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8016e12:	e5d7      	b.n	80169c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016e14:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8016e18:	f107 39ff 	add.w	r9, r7, #4294967295
 8016e1c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8016e20:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8016e24:	f04f 35ff 	mov.w	r5, #4294967295
 8016e28:	2400      	movs	r4, #0
 8016e2a:	9304      	str	r3, [sp, #16]
 8016e2c:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8016e30:	9300      	str	r3, [sp, #0]
 8016e32:	f109 32ff 	add.w	r2, r9, #4294967295
 8016e36:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8016e3a:	9303      	str	r3, [sp, #12]
 8016e3c:	4690      	mov	r8, r2
 8016e3e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8016e42:	f1b8 3fff 	cmp.w	r8, #4294967295
 8016e46:	bf14      	ite	ne
 8016e48:	9904      	ldrne	r1, [sp, #16]
 8016e4a:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8016e4e:	6818      	ldr	r0, [r3, #0]
 8016e50:	9206      	str	r2, [sp, #24]
 8016e52:	bf18      	it	ne
 8016e54:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8016e58:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8016e5c:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016e60:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8016e64:	9305      	str	r3, [sp, #20]
 8016e66:	fb16 f601 	smulbb	r6, r6, r1
 8016e6a:	6859      	ldr	r1, [r3, #4]
 8016e6c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016e70:	4671      	mov	r1, lr
 8016e72:	a80a      	add	r0, sp, #40	; 0x28
 8016e74:	f7f8 ffeb 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016e78:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8016e7c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016e80:	9b03      	ldr	r3, [sp, #12]
 8016e82:	9a00      	ldr	r2, [sp, #0]
 8016e84:	fb11 f100 	smulbb	r1, r1, r0
 8016e88:	fb02 6603 	mla	r6, r2, r3, r6
 8016e8c:	1b8e      	subs	r6, r1, r6
 8016e8e:	2008      	movs	r0, #8
 8016e90:	fb91 f1f0 	sdiv	r1, r1, r0
 8016e94:	42b1      	cmp	r1, r6
 8016e96:	dc21      	bgt.n	8016edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8016e98:	4556      	cmp	r6, sl
 8016e9a:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8016e9e:	da03      	bge.n	8016ea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 8016ea0:	b1e6      	cbz	r6, 8016edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8016ea2:	46b2      	mov	sl, r6
 8016ea4:	4645      	mov	r5, r8
 8016ea6:	464c      	mov	r4, r9
 8016ea8:	f108 38ff 	add.w	r8, r8, #4294967295
 8016eac:	f118 0f02 	cmn.w	r8, #2
 8016eb0:	d1c7      	bne.n	8016e42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 8016eb2:	f1b2 3fff 	cmp.w	r2, #4294967295
 8016eb6:	f1a7 0708 	sub.w	r7, r7, #8
 8016eba:	4691      	mov	r9, r2
 8016ebc:	d1b6      	bne.n	8016e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 8016ebe:	9b01      	ldr	r3, [sp, #4]
 8016ec0:	b2a6      	uxth	r6, r4
 8016ec2:	00e4      	lsls	r4, r4, #3
 8016ec4:	1918      	adds	r0, r3, r4
 8016ec6:	1c6b      	adds	r3, r5, #1
 8016ec8:	d10b      	bne.n	8016ee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 8016eca:	4601      	mov	r1, r0
 8016ecc:	9802      	ldr	r0, [sp, #8]
 8016ece:	f7f8 ffbe 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016ed2:	4631      	mov	r1, r6
 8016ed4:	9801      	ldr	r0, [sp, #4]
 8016ed6:	f7ff fcb1 	bl	801683c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016eda:	e509      	b.n	80168f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016edc:	4645      	mov	r5, r8
 8016ede:	464c      	mov	r4, r9
 8016ee0:	e7ed      	b.n	8016ebe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 8016ee2:	9b01      	ldr	r3, [sp, #4]
 8016ee4:	00ed      	lsls	r5, r5, #3
 8016ee6:	1959      	adds	r1, r3, r5
 8016ee8:	f7f8 ffb1 	bl	800fe4e <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016eec:	9b02      	ldr	r3, [sp, #8]
 8016eee:	cb03      	ldmia	r3!, {r0, r1}
 8016ef0:	445d      	add	r5, fp
 8016ef2:	445c      	add	r4, fp
 8016ef4:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8016ef8:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8016efc:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8016f00:	9b02      	ldr	r3, [sp, #8]
 8016f02:	6861      	ldr	r1, [r4, #4]
 8016f04:	c303      	stmia	r3!, {r0, r1}
 8016f06:	e7e4      	b.n	8016ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

08016f08 <_ZN8touchgfx11Application10invalidateEv>:
 8016f08:	4b09      	ldr	r3, [pc, #36]	; (8016f30 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016f0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016f0e:	4b09      	ldr	r3, [pc, #36]	; (8016f34 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016f10:	b082      	sub	sp, #8
 8016f12:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016f16:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016f1a:	2100      	movs	r1, #0
 8016f1c:	9100      	str	r1, [sp, #0]
 8016f1e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016f22:	ab02      	add	r3, sp, #8
 8016f24:	e913 0006 	ldmdb	r3, {r1, r2}
 8016f28:	b002      	add	sp, #8
 8016f2a:	f7ff bccb 	b.w	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016f2e:	bf00      	nop
 8016f30:	20014c00 	.word	0x20014c00
 8016f34:	20014c02 	.word	0x20014c02

08016f38 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f3c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8016f40:	b09b      	sub	sp, #108	; 0x6c
 8016f42:	4604      	mov	r4, r0
 8016f44:	4630      	mov	r0, r6
 8016f46:	f7f8 fc28 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016f4a:	4605      	mov	r5, r0
 8016f4c:	b940      	cbnz	r0, 8016f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8016f4e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016f52:	4620      	mov	r0, r4
 8016f54:	f7ff fcb6 	bl	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016f58:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8016f5c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016f60:	4bc6      	ldr	r3, [pc, #792]	; (801727c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8016f62:	681b      	ldr	r3, [r3, #0]
 8016f64:	b33b      	cbz	r3, 8016fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8016f66:	4dc6      	ldr	r5, [pc, #792]	; (8017280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016f68:	4628      	mov	r0, r5
 8016f6a:	f7f8 fc16 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016f6e:	4606      	mov	r6, r0
 8016f70:	bb08      	cbnz	r0, 8016fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8016f72:	4628      	mov	r0, r5
 8016f74:	f7ff f9c8 	bl	8016308 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016f78:	6829      	ldr	r1, [r5, #0]
 8016f7a:	686a      	ldr	r2, [r5, #4]
 8016f7c:	4620      	mov	r0, r4
 8016f7e:	f7ff fca1 	bl	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016f82:	802e      	strh	r6, [r5, #0]
 8016f84:	806e      	strh	r6, [r5, #2]
 8016f86:	80ae      	strh	r6, [r5, #4]
 8016f88:	80ee      	strh	r6, [r5, #6]
 8016f8a:	4dbe      	ldr	r5, [pc, #760]	; (8017284 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016f8c:	a809      	add	r0, sp, #36	; 0x24
 8016f8e:	f7ff fc04 	bl	801679a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f92:	882f      	ldrh	r7, [r5, #0]
 8016f94:	463e      	mov	r6, r7
 8016f96:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8016f9a:	42b3      	cmp	r3, r6
 8016f9c:	d912      	bls.n	8016fc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 8016f9e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016fa2:	a809      	add	r0, sp, #36	; 0x24
 8016fa4:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8016fa8:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8016fac:	3601      	adds	r6, #1
 8016fae:	f7ff fc67 	bl	8016880 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8016fb2:	b2b6      	uxth	r6, r6
 8016fb4:	e7ef      	b.n	8016f96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 8016fb6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8016fba:	2b00      	cmp	r3, #0
 8016fbc:	d1e5      	bne.n	8016f8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 8016fbe:	b01b      	add	sp, #108	; 0x6c
 8016fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fc4:	463e      	mov	r6, r7
 8016fc6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8016fca:	42b3      	cmp	r3, r6
 8016fcc:	d90b      	bls.n	8016fe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8016fce:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016fd2:	4620      	mov	r0, r4
 8016fd4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8016fd8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8016fdc:	3601      	adds	r6, #1
 8016fde:	f7ff fc71 	bl	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8016fe2:	b2b6      	uxth	r6, r6
 8016fe4:	e7ef      	b.n	8016fc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 8016fe6:	4ea8      	ldr	r6, [pc, #672]	; (8017288 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016fe8:	6833      	ldr	r3, [r6, #0]
 8016fea:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016fee:	2b01      	cmp	r3, #1
 8016ff0:	f040 80d2 	bne.w	8017198 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 8016ff4:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8016ff8:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 8016ffc:	4639      	mov	r1, r7
 8016ffe:	33aa      	adds	r3, #170	; 0xaa
 8017000:	2700      	movs	r7, #0
 8017002:	458c      	cmp	ip, r1
 8017004:	f103 0308 	add.w	r3, r3, #8
 8017008:	dd0a      	ble.n	8017020 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 801700a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 801700e:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8017012:	4402      	add	r2, r0
 8017014:	b212      	sxth	r2, r2
 8017016:	4297      	cmp	r7, r2
 8017018:	bfb8      	it	lt
 801701a:	4617      	movlt	r7, r2
 801701c:	3101      	adds	r1, #1
 801701e:	e7f0      	b.n	8017002 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8017020:	4b9a      	ldr	r3, [pc, #616]	; (801728c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017022:	f8b3 9000 	ldrh.w	r9, [r3]
 8017026:	2300      	movs	r3, #0
 8017028:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801702c:	f1b9 0f0f 	cmp.w	r9, #15
 8017030:	bf8c      	ite	hi
 8017032:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 8017036:	f04f 0901 	movls.w	r9, #1
 801703a:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 801703e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8017042:	4440      	add	r0, r8
 8017044:	fa0f f880 	sxth.w	r8, r0
 8017048:	6830      	ldr	r0, [r6, #0]
 801704a:	4547      	cmp	r7, r8
 801704c:	6803      	ldr	r3, [r0, #0]
 801704e:	f340 8086 	ble.w	801715e <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 8017052:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017056:	4798      	blx	r3
 8017058:	eb08 0309 	add.w	r3, r8, r9
 801705c:	4298      	cmp	r0, r3
 801705e:	da08      	bge.n	8017072 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8017060:	4287      	cmp	r7, r0
 8017062:	dd06      	ble.n	8017072 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8017064:	4580      	cmp	r8, r0
 8017066:	dd70      	ble.n	801714a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8017068:	f1b8 0f00 	cmp.w	r8, #0
 801706c:	dd6d      	ble.n	801714a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 801706e:	4638      	mov	r0, r7
 8017070:	e004      	b.n	801707c <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 8017072:	4580      	cmp	r8, r0
 8017074:	dcfb      	bgt.n	801706e <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 8017076:	42b8      	cmp	r0, r7
 8017078:	bfa8      	it	ge
 801707a:	4638      	movge	r0, r7
 801707c:	4b84      	ldr	r3, [pc, #528]	; (8017290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801707e:	f8ad 8016 	strh.w	r8, [sp, #22]
 8017082:	eba0 0008 	sub.w	r0, r0, r8
 8017086:	f9b3 3000 	ldrsh.w	r3, [r3]
 801708a:	f8b5 8000 	ldrh.w	r8, [r5]
 801708e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017092:	2200      	movs	r2, #0
 8017094:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017098:	f8ad 001a 	strh.w	r0, [sp, #26]
 801709c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80170a0:	4543      	cmp	r3, r8
 80170a2:	d9ca      	bls.n	801703a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 80170a4:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 80170a8:	ab07      	add	r3, sp, #28
 80170aa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80170ae:	6851      	ldr	r1, [r2, #4]
 80170b0:	c303      	stmia	r3!, {r0, r1}
 80170b2:	a905      	add	r1, sp, #20
 80170b4:	a807      	add	r0, sp, #28
 80170b6:	f7fa fbe5 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80170ba:	2800      	cmp	r0, #0
 80170bc:	d04c      	beq.n	8017158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 80170be:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80170c2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80170c6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80170ca:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80170ce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80170d2:	4686      	mov	lr, r0
 80170d4:	4290      	cmp	r0, r2
 80170d6:	4450      	add	r0, sl
 80170d8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80170dc:	bfb8      	it	lt
 80170de:	4696      	movlt	lr, r2
 80170e0:	4452      	add	r2, sl
 80170e2:	b280      	uxth	r0, r0
 80170e4:	b292      	uxth	r2, r2
 80170e6:	4299      	cmp	r1, r3
 80170e8:	fa0f fb80 	sxth.w	fp, r0
 80170ec:	fa0f fa82 	sxth.w	sl, r2
 80170f0:	468c      	mov	ip, r1
 80170f2:	bfb8      	it	lt
 80170f4:	469c      	movlt	ip, r3
 80170f6:	45d3      	cmp	fp, sl
 80170f8:	bfb8      	it	lt
 80170fa:	4602      	movlt	r2, r0
 80170fc:	eba2 020e 	sub.w	r2, r2, lr
 8017100:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017104:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017108:	f8ad e01c 	strh.w	lr, [sp, #28]
 801710c:	4411      	add	r1, r2
 801710e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017112:	f8ad c01e 	strh.w	ip, [sp, #30]
 8017116:	4413      	add	r3, r2
 8017118:	b289      	uxth	r1, r1
 801711a:	b29b      	uxth	r3, r3
 801711c:	b208      	sxth	r0, r1
 801711e:	b21a      	sxth	r2, r3
 8017120:	4290      	cmp	r0, r2
 8017122:	bfb8      	it	lt
 8017124:	460b      	movlt	r3, r1
 8017126:	eba3 030c 	sub.w	r3, r3, ip
 801712a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801712e:	a807      	add	r0, sp, #28
 8017130:	f7f8 fb33 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8017134:	b920      	cbnz	r0, 8017140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 8017136:	6823      	ldr	r3, [r4, #0]
 8017138:	a907      	add	r1, sp, #28
 801713a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801713c:	4620      	mov	r0, r4
 801713e:	4798      	blx	r3
 8017140:	f108 0801 	add.w	r8, r8, #1
 8017144:	fa1f f888 	uxth.w	r8, r8
 8017148:	e7a8      	b.n	801709c <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 801714a:	6830      	ldr	r0, [r6, #0]
 801714c:	6803      	ldr	r3, [r0, #0]
 801714e:	2101      	movs	r1, #1
 8017150:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017154:	4798      	blx	r3
 8017156:	e770      	b.n	801703a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8017158:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801715c:	e7e7      	b.n	801712e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 801715e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017160:	4798      	blx	r3
 8017162:	4b4c      	ldr	r3, [pc, #304]	; (8017294 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017164:	781b      	ldrb	r3, [r3, #0]
 8017166:	2b00      	cmp	r3, #0
 8017168:	f43f af29 	beq.w	8016fbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 801716c:	2300      	movs	r3, #0
 801716e:	882d      	ldrh	r5, [r5, #0]
 8017170:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8017174:	34ea      	adds	r4, #234	; 0xea
 8017176:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801717a:	42ab      	cmp	r3, r5
 801717c:	f67f af1f 	bls.w	8016fbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8017180:	ab1a      	add	r3, sp, #104	; 0x68
 8017182:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017186:	3b44      	subs	r3, #68	; 0x44
 8017188:	e893 0006 	ldmia.w	r3, {r1, r2}
 801718c:	4620      	mov	r0, r4
 801718e:	3501      	adds	r5, #1
 8017190:	f7ff fb76 	bl	8016880 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8017194:	b2ad      	uxth	r5, r5
 8017196:	e7ee      	b.n	8017176 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017198:	2b02      	cmp	r3, #2
 801719a:	f040 8136 	bne.w	801740a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 801719e:	4b3e      	ldr	r3, [pc, #248]	; (8017298 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80171a0:	781b      	ldrb	r3, [r3, #0]
 80171a2:	2b01      	cmp	r3, #1
 80171a4:	d02c      	beq.n	8017200 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 80171a6:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 80171aa:	882a      	ldrh	r2, [r5, #0]
 80171ac:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 80171b0:	3201      	adds	r2, #1
 80171b2:	b292      	uxth	r2, r2
 80171b4:	2900      	cmp	r1, #0
 80171b6:	d0d4      	beq.n	8017162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80171b8:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 80171bc:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80171c0:	441f      	add	r7, r3
 80171c2:	b23f      	sxth	r7, r7
 80171c4:	4610      	mov	r0, r2
 80171c6:	f04f 0900 	mov.w	r9, #0
 80171ca:	b283      	uxth	r3, r0
 80171cc:	4299      	cmp	r1, r3
 80171ce:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 80171d2:	f240 80c5 	bls.w	8017360 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 80171d6:	44a0      	add	r8, r4
 80171d8:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 80171dc:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 80171e0:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 80171e4:	4573      	cmp	r3, lr
 80171e6:	4684      	mov	ip, r0
 80171e8:	f340 80a7 	ble.w	801733a <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 80171ec:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 80171f0:	4477      	add	r7, lr
 80171f2:	b23f      	sxth	r7, r7
 80171f4:	429f      	cmp	r7, r3
 80171f6:	bfa8      	it	ge
 80171f8:	461f      	movge	r7, r3
 80171fa:	3001      	adds	r0, #1
 80171fc:	46e1      	mov	r9, ip
 80171fe:	e7e4      	b.n	80171ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 8017200:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8017204:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8017208:	f1bb 0f00 	cmp.w	fp, #0
 801720c:	d0a9      	beq.n	8017162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 801720e:	882b      	ldrh	r3, [r5, #0]
 8017210:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8017214:	3301      	adds	r3, #1
 8017216:	b29b      	uxth	r3, r3
 8017218:	f04f 0800 	mov.w	r8, #0
 801721c:	b299      	uxth	r1, r3
 801721e:	458b      	cmp	fp, r1
 8017220:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8017224:	d93a      	bls.n	801729c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8017226:	4427      	add	r7, r4
 8017228:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 801722c:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 8017230:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 8017234:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8017238:	4408      	add	r0, r1
 801723a:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 801723e:	4471      	add	r1, lr
 8017240:	b200      	sxth	r0, r0
 8017242:	b209      	sxth	r1, r1
 8017244:	4288      	cmp	r0, r1
 8017246:	469c      	mov	ip, r3
 8017248:	da06      	bge.n	8017258 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 801724a:	4586      	cmp	lr, r0
 801724c:	4672      	mov	r2, lr
 801724e:	bfb8      	it	lt
 8017250:	4602      	movlt	r2, r0
 8017252:	3301      	adds	r3, #1
 8017254:	46e0      	mov	r8, ip
 8017256:	e7e1      	b.n	801721c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 8017258:	d10b      	bne.n	8017272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801725a:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 801725e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8017262:	458c      	cmp	ip, r1
 8017264:	bfb4      	ite	lt
 8017266:	469c      	movlt	ip, r3
 8017268:	46c4      	movge	ip, r8
 801726a:	4572      	cmp	r2, lr
 801726c:	bfb8      	it	lt
 801726e:	4672      	movlt	r2, lr
 8017270:	e7ef      	b.n	8017252 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8017272:	428a      	cmp	r2, r1
 8017274:	bfb8      	it	lt
 8017276:	460a      	movlt	r2, r1
 8017278:	46c4      	mov	ip, r8
 801727a:	e7ea      	b.n	8017252 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801727c:	20014c64 	.word	0x20014c64
 8017280:	20014c70 	.word	0x20014c70
 8017284:	200000a8 	.word	0x200000a8
 8017288:	20014c0c 	.word	0x20014c0c
 801728c:	20014c02 	.word	0x20014c02
 8017290:	20014c00 	.word	0x20014c00
 8017294:	20014c0a 	.word	0x20014c0a
 8017298:	20014c04 	.word	0x20014c04
 801729c:	19e1      	adds	r1, r4, r7
 801729e:	ab07      	add	r3, sp, #28
 80172a0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 80172a4:	6849      	ldr	r1, [r1, #4]
 80172a6:	c303      	stmia	r3!, {r0, r1}
 80172a8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80172ac:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80172b0:	2b13      	cmp	r3, #19
 80172b2:	bfd8      	it	le
 80172b4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80172b8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80172bc:	440b      	add	r3, r1
 80172be:	1a9b      	subs	r3, r3, r2
 80172c0:	a807      	add	r0, sp, #28
 80172c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80172c6:	f7ff f839 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172ca:	a807      	add	r0, sp, #28
 80172cc:	f7f8 fa65 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 80172d0:	2800      	cmp	r0, #0
 80172d2:	d197      	bne.n	8017204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 80172d4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80172d8:	6830      	ldr	r0, [r6, #0]
 80172da:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80172de:	f8d0 e000 	ldr.w	lr, [r0]
 80172e2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80172e6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80172ea:	f1bc 0f14 	cmp.w	ip, #20
 80172ee:	bfa8      	it	ge
 80172f0:	f04f 0c14 	movge.w	ip, #20
 80172f4:	fa1f fc8c 	uxth.w	ip, ip
 80172f8:	f8cd c000 	str.w	ip, [sp]
 80172fc:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8017300:	47d0      	blx	sl
 8017302:	4682      	mov	sl, r0
 8017304:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017308:	a807      	add	r0, sp, #28
 801730a:	f7fe fffd 	bl	8016308 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801730e:	6823      	ldr	r3, [r4, #0]
 8017310:	4427      	add	r7, r4
 8017312:	4620      	mov	r0, r4
 8017314:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017316:	a907      	add	r1, sp, #28
 8017318:	4798      	blx	r3
 801731a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 801731e:	eba0 000a 	sub.w	r0, r0, sl
 8017322:	b200      	sxth	r0, r0
 8017324:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 8017328:	2800      	cmp	r0, #0
 801732a:	f47f af6b 	bne.w	8017204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 801732e:	fa1f f188 	uxth.w	r1, r8
 8017332:	4648      	mov	r0, r9
 8017334:	f7ff fa82 	bl	801683c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017338:	e764      	b.n	8017204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 801733a:	d10c      	bne.n	8017356 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 801733c:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 8017340:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 8017344:	45e6      	cmp	lr, ip
 8017346:	bfb4      	ite	lt
 8017348:	4684      	movlt	ip, r0
 801734a:	46cc      	movge	ip, r9
 801734c:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 8017350:	4473      	add	r3, lr
 8017352:	b21b      	sxth	r3, r3
 8017354:	e74e      	b.n	80171f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 8017356:	4577      	cmp	r7, lr
 8017358:	bfa8      	it	ge
 801735a:	4677      	movge	r7, lr
 801735c:	46cc      	mov	ip, r9
 801735e:	e74c      	b.n	80171fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 8017360:	eb0a 0008 	add.w	r0, sl, r8
 8017364:	44a0      	add	r8, r4
 8017366:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801736a:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 801736e:	f1bb 0f13 	cmp.w	fp, #19
 8017372:	bfde      	ittt	le
 8017374:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 8017378:	445f      	addle	r7, fp
 801737a:	b23f      	sxthle	r7, r7
 801737c:	f7f8 fa0d 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8017380:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8017384:	2800      	cmp	r0, #0
 8017386:	f47f af15 	bne.w	80171b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 801738a:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 801738e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017392:	1abf      	subs	r7, r7, r2
 8017394:	2f14      	cmp	r7, #20
 8017396:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 801739a:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 801739e:	6830      	ldr	r0, [r6, #0]
 80173a0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80173a4:	f8ad 201e 	strh.w	r2, [sp, #30]
 80173a8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80173ac:	bfa8      	it	ge
 80173ae:	2714      	movge	r7, #20
 80173b0:	f8d0 c000 	ldr.w	ip, [r0]
 80173b4:	b2bf      	uxth	r7, r7
 80173b6:	fa1f fb8b 	uxth.w	fp, fp
 80173ba:	455f      	cmp	r7, fp
 80173bc:	bf94      	ite	ls
 80173be:	9700      	strls	r7, [sp, #0]
 80173c0:	f8cd b000 	strhi.w	fp, [sp]
 80173c4:	b292      	uxth	r2, r2
 80173c6:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 80173ca:	b29b      	uxth	r3, r3
 80173cc:	b289      	uxth	r1, r1
 80173ce:	47b8      	blx	r7
 80173d0:	6823      	ldr	r3, [r4, #0]
 80173d2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80173d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80173d8:	a907      	add	r1, sp, #28
 80173da:	4620      	mov	r0, r4
 80173dc:	4798      	blx	r3
 80173de:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80173e2:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80173e6:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 80173ea:	1a5b      	subs	r3, r3, r1
 80173ec:	440a      	add	r2, r1
 80173ee:	b21b      	sxth	r3, r3
 80173f0:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 80173f4:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 80173f8:	2b00      	cmp	r3, #0
 80173fa:	f47f aed6 	bne.w	80171aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 80173fe:	fa1f f189 	uxth.w	r1, r9
 8017402:	4650      	mov	r0, sl
 8017404:	f7ff fa1a 	bl	801683c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017408:	e6cf      	b.n	80171aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 801740a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801740e:	42bb      	cmp	r3, r7
 8017410:	f67f aea7 	bls.w	8017162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8017414:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017418:	ab07      	add	r3, sp, #28
 801741a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801741e:	6851      	ldr	r1, [r2, #4]
 8017420:	c303      	stmia	r3!, {r0, r1}
 8017422:	a807      	add	r0, sp, #28
 8017424:	f7f8 f9b9 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 8017428:	b920      	cbnz	r0, 8017434 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 801742a:	6823      	ldr	r3, [r4, #0]
 801742c:	a907      	add	r1, sp, #28
 801742e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017430:	4620      	mov	r0, r4
 8017432:	4798      	blx	r3
 8017434:	3701      	adds	r7, #1
 8017436:	b2bf      	uxth	r7, r7
 8017438:	e7e7      	b.n	801740a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 801743a:	bf00      	nop

0801743c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801743c:	4b03      	ldr	r3, [pc, #12]	; (801744c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801743e:	2200      	movs	r2, #0
 8017440:	801a      	strh	r2, [r3, #0]
 8017442:	805a      	strh	r2, [r3, #2]
 8017444:	809a      	strh	r2, [r3, #4]
 8017446:	80da      	strh	r2, [r3, #6]
 8017448:	4770      	bx	lr
 801744a:	bf00      	nop
 801744c:	20014c70 	.word	0x20014c70

08017450 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017454:	4606      	mov	r6, r0
 8017456:	b09d      	sub	sp, #116	; 0x74
 8017458:	a803      	add	r0, sp, #12
 801745a:	4614      	mov	r4, r2
 801745c:	468a      	mov	sl, r1
 801745e:	461d      	mov	r5, r3
 8017460:	f000 fe7d 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8017464:	6833      	ldr	r3, [r6, #0]
 8017466:	4630      	mov	r0, r6
 8017468:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801746a:	4798      	blx	r3
 801746c:	6833      	ldr	r3, [r6, #0]
 801746e:	4607      	mov	r7, r0
 8017470:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017472:	4630      	mov	r0, r6
 8017474:	4798      	blx	r3
 8017476:	462a      	mov	r2, r5
 8017478:	9000      	str	r0, [sp, #0]
 801747a:	4621      	mov	r1, r4
 801747c:	463b      	mov	r3, r7
 801747e:	a803      	add	r0, sp, #12
 8017480:	f000 fed8 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017484:	2500      	movs	r5, #0
 8017486:	462c      	mov	r4, r5
 8017488:	46a9      	mov	r9, r5
 801748a:	46a8      	mov	r8, r5
 801748c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017490:	2300      	movs	r3, #0
 8017492:	9302      	str	r3, [sp, #8]
 8017494:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017498:	429c      	cmp	r4, r3
 801749a:	d002      	beq.n	80174a2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801749c:	455c      	cmp	r4, fp
 801749e:	bf18      	it	ne
 80174a0:	4625      	movne	r5, r4
 80174a2:	ab02      	add	r3, sp, #8
 80174a4:	4632      	mov	r2, r6
 80174a6:	4651      	mov	r1, sl
 80174a8:	a803      	add	r0, sp, #12
 80174aa:	f001 f9d3 	bl	8018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80174ae:	4604      	mov	r4, r0
 80174b0:	b108      	cbz	r0, 80174b6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80174b2:	280a      	cmp	r0, #10
 80174b4:	d10a      	bne.n	80174cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80174b6:	45c1      	cmp	r9, r8
 80174b8:	bf38      	it	cc
 80174ba:	46c1      	movcc	r9, r8
 80174bc:	f04f 0800 	mov.w	r8, #0
 80174c0:	2c00      	cmp	r4, #0
 80174c2:	d1e5      	bne.n	8017490 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80174c4:	4648      	mov	r0, r9
 80174c6:	b01d      	add	sp, #116	; 0x74
 80174c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174cc:	9a02      	ldr	r2, [sp, #8]
 80174ce:	2a00      	cmp	r2, #0
 80174d0:	d0de      	beq.n	8017490 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80174d2:	7b57      	ldrb	r7, [r2, #13]
 80174d4:	6833      	ldr	r3, [r6, #0]
 80174d6:	8894      	ldrh	r4, [r2, #4]
 80174d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80174da:	007f      	lsls	r7, r7, #1
 80174dc:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80174e0:	7a97      	ldrb	r7, [r2, #10]
 80174e2:	4629      	mov	r1, r5
 80174e4:	4307      	orrs	r7, r0
 80174e6:	4630      	mov	r0, r6
 80174e8:	4798      	blx	r3
 80174ea:	4438      	add	r0, r7
 80174ec:	4480      	add	r8, r0
 80174ee:	fa1f f888 	uxth.w	r8, r8
 80174f2:	e7e5      	b.n	80174c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080174f4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80174f4:	b508      	push	{r3, lr}
 80174f6:	6803      	ldr	r3, [r0, #0]
 80174f8:	68db      	ldr	r3, [r3, #12]
 80174fa:	4798      	blx	r3
 80174fc:	b128      	cbz	r0, 801750a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80174fe:	7b43      	ldrb	r3, [r0, #13]
 8017500:	7a80      	ldrb	r0, [r0, #10]
 8017502:	005b      	lsls	r3, r3, #1
 8017504:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017508:	4318      	orrs	r0, r3
 801750a:	bd08      	pop	{r3, pc}

0801750c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801750c:	b40e      	push	{r1, r2, r3}
 801750e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017510:	b09e      	sub	sp, #120	; 0x78
 8017512:	ab23      	add	r3, sp, #140	; 0x8c
 8017514:	4605      	mov	r5, r0
 8017516:	f853 4b04 	ldr.w	r4, [r3], #4
 801751a:	9303      	str	r3, [sp, #12]
 801751c:	a805      	add	r0, sp, #20
 801751e:	f000 fe1e 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8017522:	682b      	ldr	r3, [r5, #0]
 8017524:	4628      	mov	r0, r5
 8017526:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017528:	4798      	blx	r3
 801752a:	682b      	ldr	r3, [r5, #0]
 801752c:	4606      	mov	r6, r0
 801752e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017530:	4628      	mov	r0, r5
 8017532:	4798      	blx	r3
 8017534:	4633      	mov	r3, r6
 8017536:	ae1e      	add	r6, sp, #120	; 0x78
 8017538:	4621      	mov	r1, r4
 801753a:	9000      	str	r0, [sp, #0]
 801753c:	9a03      	ldr	r2, [sp, #12]
 801753e:	2400      	movs	r4, #0
 8017540:	a805      	add	r0, sp, #20
 8017542:	f000 fe77 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017546:	f846 4d68 	str.w	r4, [r6, #-104]!
 801754a:	462a      	mov	r2, r5
 801754c:	4633      	mov	r3, r6
 801754e:	4621      	mov	r1, r4
 8017550:	a805      	add	r0, sp, #20
 8017552:	f001 f97f 	bl	8018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017556:	b1f0      	cbz	r0, 8017596 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017558:	280a      	cmp	r0, #10
 801755a:	d018      	beq.n	801758e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801755c:	9f04      	ldr	r7, [sp, #16]
 801755e:	b1b7      	cbz	r7, 801758e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017560:	7b78      	ldrb	r0, [r7, #13]
 8017562:	7a3b      	ldrb	r3, [r7, #8]
 8017564:	88aa      	ldrh	r2, [r5, #4]
 8017566:	00c1      	lsls	r1, r0, #3
 8017568:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801756c:	4319      	orrs	r1, r3
 801756e:	0643      	lsls	r3, r0, #25
 8017570:	bf44      	itt	mi
 8017572:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017576:	b219      	sxthmi	r1, r3
 8017578:	0100      	lsls	r0, r0, #4
 801757a:	79fb      	ldrb	r3, [r7, #7]
 801757c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017580:	4303      	orrs	r3, r0
 8017582:	4413      	add	r3, r2
 8017584:	1a5b      	subs	r3, r3, r1
 8017586:	b29b      	uxth	r3, r3
 8017588:	42a3      	cmp	r3, r4
 801758a:	bfc8      	it	gt
 801758c:	b21c      	sxthgt	r4, r3
 801758e:	4633      	mov	r3, r6
 8017590:	462a      	mov	r2, r5
 8017592:	2100      	movs	r1, #0
 8017594:	e7dc      	b.n	8017550 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017596:	b2a0      	uxth	r0, r4
 8017598:	b01e      	add	sp, #120	; 0x78
 801759a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801759e:	b003      	add	sp, #12
 80175a0:	4770      	bx	lr

080175a2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80175a2:	b40e      	push	{r1, r2, r3}
 80175a4:	b570      	push	{r4, r5, r6, lr}
 80175a6:	b09d      	sub	sp, #116	; 0x74
 80175a8:	ab21      	add	r3, sp, #132	; 0x84
 80175aa:	4604      	mov	r4, r0
 80175ac:	f853 5b04 	ldr.w	r5, [r3], #4
 80175b0:	9302      	str	r3, [sp, #8]
 80175b2:	a803      	add	r0, sp, #12
 80175b4:	f000 fdd3 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 80175b8:	6823      	ldr	r3, [r4, #0]
 80175ba:	4620      	mov	r0, r4
 80175bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80175be:	4798      	blx	r3
 80175c0:	6823      	ldr	r3, [r4, #0]
 80175c2:	4606      	mov	r6, r0
 80175c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80175c6:	4620      	mov	r0, r4
 80175c8:	4798      	blx	r3
 80175ca:	4633      	mov	r3, r6
 80175cc:	9000      	str	r0, [sp, #0]
 80175ce:	9a02      	ldr	r2, [sp, #8]
 80175d0:	4629      	mov	r1, r5
 80175d2:	a803      	add	r0, sp, #12
 80175d4:	f000 fe2e 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80175d8:	a803      	add	r0, sp, #12
 80175da:	f001 fa35 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80175de:	2401      	movs	r4, #1
 80175e0:	b2a3      	uxth	r3, r4
 80175e2:	b140      	cbz	r0, 80175f6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80175e4:	280a      	cmp	r0, #10
 80175e6:	bf08      	it	eq
 80175e8:	3301      	addeq	r3, #1
 80175ea:	a803      	add	r0, sp, #12
 80175ec:	bf08      	it	eq
 80175ee:	b21c      	sxtheq	r4, r3
 80175f0:	f001 fa2a 	bl	8018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80175f4:	e7f4      	b.n	80175e0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80175f6:	4618      	mov	r0, r3
 80175f8:	b01d      	add	sp, #116	; 0x74
 80175fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80175fe:	b003      	add	sp, #12
 8017600:	4770      	bx	lr

08017602 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017602:	b40e      	push	{r1, r2, r3}
 8017604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017606:	b09e      	sub	sp, #120	; 0x78
 8017608:	ab23      	add	r3, sp, #140	; 0x8c
 801760a:	4604      	mov	r4, r0
 801760c:	f853 5b04 	ldr.w	r5, [r3], #4
 8017610:	9303      	str	r3, [sp, #12]
 8017612:	a805      	add	r0, sp, #20
 8017614:	f000 fda3 	bl	801815e <_ZN8touchgfx12TextProviderC1Ev>
 8017618:	6823      	ldr	r3, [r4, #0]
 801761a:	4620      	mov	r0, r4
 801761c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801761e:	4798      	blx	r3
 8017620:	6823      	ldr	r3, [r4, #0]
 8017622:	4606      	mov	r6, r0
 8017624:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017626:	4620      	mov	r0, r4
 8017628:	4798      	blx	r3
 801762a:	4633      	mov	r3, r6
 801762c:	4629      	mov	r1, r5
 801762e:	9000      	str	r0, [sp, #0]
 8017630:	9a03      	ldr	r2, [sp, #12]
 8017632:	a805      	add	r0, sp, #20
 8017634:	ad1e      	add	r5, sp, #120	; 0x78
 8017636:	f000 fdfd 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801763a:	2100      	movs	r1, #0
 801763c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017640:	4622      	mov	r2, r4
 8017642:	462b      	mov	r3, r5
 8017644:	a805      	add	r0, sp, #20
 8017646:	f001 f905 	bl	8018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801764a:	26ff      	movs	r6, #255	; 0xff
 801764c:	b1d8      	cbz	r0, 8017686 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801764e:	280a      	cmp	r0, #10
 8017650:	d012      	beq.n	8017678 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8017652:	9804      	ldr	r0, [sp, #16]
 8017654:	b180      	cbz	r0, 8017678 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8017656:	7b47      	ldrb	r7, [r0, #13]
 8017658:	7922      	ldrb	r2, [r4, #4]
 801765a:	00fb      	lsls	r3, r7, #3
 801765c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017660:	7a03      	ldrb	r3, [r0, #8]
 8017662:	430b      	orrs	r3, r1
 8017664:	0679      	lsls	r1, r7, #25
 8017666:	bf44      	itt	mi
 8017668:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801766c:	b21b      	sxthmi	r3, r3
 801766e:	1ad3      	subs	r3, r2, r3
 8017670:	b2db      	uxtb	r3, r3
 8017672:	429e      	cmp	r6, r3
 8017674:	bf28      	it	cs
 8017676:	461e      	movcs	r6, r3
 8017678:	462b      	mov	r3, r5
 801767a:	4622      	mov	r2, r4
 801767c:	2100      	movs	r1, #0
 801767e:	a805      	add	r0, sp, #20
 8017680:	f001 f8e8 	bl	8018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017684:	e7e2      	b.n	801764c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8017686:	4630      	mov	r0, r6
 8017688:	b01e      	add	sp, #120	; 0x78
 801768a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801768e:	b003      	add	sp, #12
 8017690:	4770      	bx	lr

08017692 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017692:	b513      	push	{r0, r1, r4, lr}
 8017694:	6803      	ldr	r3, [r0, #0]
 8017696:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801769a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801769e:	f8ad 1004 	strh.w	r1, [sp, #4]
 80176a2:	2400      	movs	r4, #0
 80176a4:	9400      	str	r4, [sp, #0]
 80176a6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80176aa:	691b      	ldr	r3, [r3, #16]
 80176ac:	4669      	mov	r1, sp
 80176ae:	4798      	blx	r3
 80176b0:	b002      	add	sp, #8
 80176b2:	bd10      	pop	{r4, pc}

080176b4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80176b4:	b538      	push	{r3, r4, r5, lr}
 80176b6:	680b      	ldr	r3, [r1, #0]
 80176b8:	460c      	mov	r4, r1
 80176ba:	68db      	ldr	r3, [r3, #12]
 80176bc:	4605      	mov	r5, r0
 80176be:	4798      	blx	r3
 80176c0:	6823      	ldr	r3, [r4, #0]
 80176c2:	4620      	mov	r0, r4
 80176c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176c6:	4629      	mov	r1, r5
 80176c8:	4798      	blx	r3
 80176ca:	4628      	mov	r0, r5
 80176cc:	bd38      	pop	{r3, r4, r5, pc}

080176ce <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80176ce:	b410      	push	{r4}
 80176d0:	880a      	ldrh	r2, [r1, #0]
 80176d2:	8884      	ldrh	r4, [r0, #4]
 80176d4:	4422      	add	r2, r4
 80176d6:	800a      	strh	r2, [r1, #0]
 80176d8:	88c4      	ldrh	r4, [r0, #6]
 80176da:	884a      	ldrh	r2, [r1, #2]
 80176dc:	4422      	add	r2, r4
 80176de:	804a      	strh	r2, [r1, #2]
 80176e0:	6940      	ldr	r0, [r0, #20]
 80176e2:	b120      	cbz	r0, 80176ee <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80176e4:	6803      	ldr	r3, [r0, #0]
 80176e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80176ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176ec:	4718      	bx	r3
 80176ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80176f2:	4770      	bx	lr

080176f4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80176f4:	b570      	push	{r4, r5, r6, lr}
 80176f6:	8882      	ldrh	r2, [r0, #4]
 80176f8:	880b      	ldrh	r3, [r1, #0]
 80176fa:	4413      	add	r3, r2
 80176fc:	800b      	strh	r3, [r1, #0]
 80176fe:	88c2      	ldrh	r2, [r0, #6]
 8017700:	884b      	ldrh	r3, [r1, #2]
 8017702:	460c      	mov	r4, r1
 8017704:	4413      	add	r3, r2
 8017706:	804b      	strh	r3, [r1, #2]
 8017708:	4605      	mov	r5, r0
 801770a:	1d01      	adds	r1, r0, #4
 801770c:	4620      	mov	r0, r4
 801770e:	f7f8 f801 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8017712:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017716:	2b00      	cmp	r3, #0
 8017718:	dd0b      	ble.n	8017732 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801771a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801771e:	2b00      	cmp	r3, #0
 8017720:	dd07      	ble.n	8017732 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017722:	6968      	ldr	r0, [r5, #20]
 8017724:	b128      	cbz	r0, 8017732 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017726:	6803      	ldr	r3, [r0, #0]
 8017728:	4621      	mov	r1, r4
 801772a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801772c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017730:	4718      	bx	r3
 8017732:	bd70      	pop	{r4, r5, r6, pc}

08017734 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017734:	b570      	push	{r4, r5, r6, lr}
 8017736:	8882      	ldrh	r2, [r0, #4]
 8017738:	880b      	ldrh	r3, [r1, #0]
 801773a:	4413      	add	r3, r2
 801773c:	800b      	strh	r3, [r1, #0]
 801773e:	88c2      	ldrh	r2, [r0, #6]
 8017740:	884b      	ldrh	r3, [r1, #2]
 8017742:	460c      	mov	r4, r1
 8017744:	4413      	add	r3, r2
 8017746:	804b      	strh	r3, [r1, #2]
 8017748:	4605      	mov	r5, r0
 801774a:	1d01      	adds	r1, r0, #4
 801774c:	4620      	mov	r0, r4
 801774e:	f7f7 ffe1 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8017752:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017756:	2b00      	cmp	r3, #0
 8017758:	dd18      	ble.n	801778c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801775a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801775e:	2b00      	cmp	r3, #0
 8017760:	dd14      	ble.n	801778c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8017762:	6968      	ldr	r0, [r5, #20]
 8017764:	b128      	cbz	r0, 8017772 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017766:	6803      	ldr	r3, [r0, #0]
 8017768:	4621      	mov	r1, r4
 801776a:	691b      	ldr	r3, [r3, #16]
 801776c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017770:	4718      	bx	r3
 8017772:	4b07      	ldr	r3, [pc, #28]	; (8017790 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017774:	681b      	ldr	r3, [r3, #0]
 8017776:	3304      	adds	r3, #4
 8017778:	429d      	cmp	r5, r3
 801777a:	d107      	bne.n	801778c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801777c:	f7fe ffb4 	bl	80166e8 <_ZN8touchgfx11Application11getInstanceEv>
 8017780:	6821      	ldr	r1, [r4, #0]
 8017782:	6862      	ldr	r2, [r4, #4]
 8017784:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017788:	f7ff b89c 	b.w	80168c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801778c:	bd70      	pop	{r4, r5, r6, pc}
 801778e:	bf00      	nop
 8017790:	20014c68 	.word	0x20014c68

08017794 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017794:	b570      	push	{r4, r5, r6, lr}
 8017796:	4604      	mov	r4, r0
 8017798:	4616      	mov	r6, r2
 801779a:	460d      	mov	r5, r1
 801779c:	b901      	cbnz	r1, 80177a0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801779e:	b192      	cbz	r2, 80177c6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80177a0:	6823      	ldr	r3, [r4, #0]
 80177a2:	4620      	mov	r0, r4
 80177a4:	699b      	ldr	r3, [r3, #24]
 80177a6:	4798      	blx	r3
 80177a8:	88e2      	ldrh	r2, [r4, #6]
 80177aa:	88a1      	ldrh	r1, [r4, #4]
 80177ac:	4432      	add	r2, r6
 80177ae:	4429      	add	r1, r5
 80177b0:	4620      	mov	r0, r4
 80177b2:	b212      	sxth	r2, r2
 80177b4:	b209      	sxth	r1, r1
 80177b6:	f7eb f97e 	bl	8002ab6 <_ZN8touchgfx8Drawable5setXYEss>
 80177ba:	6823      	ldr	r3, [r4, #0]
 80177bc:	4620      	mov	r0, r4
 80177be:	699b      	ldr	r3, [r3, #24]
 80177c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80177c4:	4718      	bx	r3
 80177c6:	bd70      	pop	{r4, r5, r6, pc}

080177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80177c8:	b510      	push	{r4, lr}
 80177ca:	4604      	mov	r4, r0
 80177cc:	4608      	mov	r0, r1
 80177ce:	2300      	movs	r3, #0
 80177d0:	8023      	strh	r3, [r4, #0]
 80177d2:	8063      	strh	r3, [r4, #2]
 80177d4:	6803      	ldr	r3, [r0, #0]
 80177d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80177da:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80177de:	80a1      	strh	r1, [r4, #4]
 80177e0:	80e2      	strh	r2, [r4, #6]
 80177e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177e4:	4621      	mov	r1, r4
 80177e6:	4798      	blx	r3
 80177e8:	4620      	mov	r0, r4
 80177ea:	bd10      	pop	{r4, pc}

080177ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80177ec:	b530      	push	{r4, r5, lr}
 80177ee:	8083      	strh	r3, [r0, #4]
 80177f0:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80177f4:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80177f8:	7183      	strb	r3, [r0, #6]
 80177fa:	79c3      	ldrb	r3, [r0, #7]
 80177fc:	6101      	str	r1, [r0, #16]
 80177fe:	f365 0306 	bfi	r3, r5, #0, #7
 8017802:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8017806:	8282      	strh	r2, [r0, #20]
 8017808:	f365 13c7 	bfi	r3, r5, #7, #1
 801780c:	71c3      	strb	r3, [r0, #7]
 801780e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8017812:	7203      	strb	r3, [r0, #8]
 8017814:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8017818:	7243      	strb	r3, [r0, #9]
 801781a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801781e:	8143      	strh	r3, [r0, #10]
 8017820:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8017824:	8183      	strh	r3, [r0, #12]
 8017826:	4b01      	ldr	r3, [pc, #4]	; (801782c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8017828:	6003      	str	r3, [r0, #0]
 801782a:	bd30      	pop	{r4, r5, pc}
 801782c:	0802cd8c 	.word	0x0802cd8c

08017830 <_ZNK8touchgfx9ConstFont4findEt>:
 8017830:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017832:	6904      	ldr	r4, [r0, #16]
 8017834:	b3bc      	cbz	r4, 80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017836:	88a3      	ldrh	r3, [r4, #4]
 8017838:	8a82      	ldrh	r2, [r0, #20]
 801783a:	1acb      	subs	r3, r1, r3
 801783c:	f102 32ff 	add.w	r2, r2, #4294967295
 8017840:	d431      	bmi.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017842:	4293      	cmp	r3, r2
 8017844:	dd0c      	ble.n	8017860 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017846:	230e      	movs	r3, #14
 8017848:	fb03 4302 	mla	r3, r3, r2, r4
 801784c:	889b      	ldrh	r3, [r3, #4]
 801784e:	1a5b      	subs	r3, r3, r1
 8017850:	1ad3      	subs	r3, r2, r3
 8017852:	429a      	cmp	r2, r3
 8017854:	db27      	blt.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017856:	2b00      	cmp	r3, #0
 8017858:	bfbc      	itt	lt
 801785a:	2302      	movlt	r3, #2
 801785c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017860:	2500      	movs	r5, #0
 8017862:	260e      	movs	r6, #14
 8017864:	4295      	cmp	r5, r2
 8017866:	dc1e      	bgt.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017868:	fb06 4003 	mla	r0, r6, r3, r4
 801786c:	8887      	ldrh	r7, [r0, #4]
 801786e:	42b9      	cmp	r1, r7
 8017870:	d01a      	beq.n	80178a8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017872:	d20d      	bcs.n	8017890 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017874:	1e5a      	subs	r2, r3, #1
 8017876:	4295      	cmp	r5, r2
 8017878:	dc15      	bgt.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801787a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801787e:	1a5b      	subs	r3, r3, r1
 8017880:	1ad3      	subs	r3, r2, r3
 8017882:	429a      	cmp	r2, r3
 8017884:	db0f      	blt.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017886:	429d      	cmp	r5, r3
 8017888:	ddec      	ble.n	8017864 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801788a:	1953      	adds	r3, r2, r5
 801788c:	105b      	asrs	r3, r3, #1
 801788e:	e7e9      	b.n	8017864 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017890:	1c5d      	adds	r5, r3, #1
 8017892:	42aa      	cmp	r2, r5
 8017894:	db07      	blt.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017896:	8a43      	ldrh	r3, [r0, #18]
 8017898:	1acb      	subs	r3, r1, r3
 801789a:	442b      	add	r3, r5
 801789c:	429d      	cmp	r5, r3
 801789e:	dc02      	bgt.n	80178a6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80178a0:	429a      	cmp	r2, r3
 80178a2:	dadf      	bge.n	8017864 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80178a4:	e7f1      	b.n	801788a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80178a6:	2000      	movs	r0, #0
 80178a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080178aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80178aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80178ac:	4604      	mov	r4, r0
 80178ae:	4617      	mov	r7, r2
 80178b0:	461e      	mov	r6, r3
 80178b2:	b911      	cbnz	r1, 80178ba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80178b4:	2500      	movs	r5, #0
 80178b6:	4628      	mov	r0, r5
 80178b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80178ba:	290a      	cmp	r1, #10
 80178bc:	d0fa      	beq.n	80178b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80178be:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80178c2:	4291      	cmp	r1, r2
 80178c4:	d0f6      	beq.n	80178b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80178c6:	f242 020b 	movw	r2, #8203	; 0x200b
 80178ca:	4291      	cmp	r1, r2
 80178cc:	d0f2      	beq.n	80178b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80178ce:	f7ff ffaf 	bl	8017830 <_ZNK8touchgfx9ConstFont4findEt>
 80178d2:	4605      	mov	r5, r0
 80178d4:	b950      	cbnz	r0, 80178ec <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80178d6:	6823      	ldr	r3, [r4, #0]
 80178d8:	4620      	mov	r0, r4
 80178da:	691b      	ldr	r3, [r3, #16]
 80178dc:	4798      	blx	r3
 80178de:	4601      	mov	r1, r0
 80178e0:	4620      	mov	r0, r4
 80178e2:	f7ff ffa5 	bl	8017830 <_ZNK8touchgfx9ConstFont4findEt>
 80178e6:	4605      	mov	r5, r0
 80178e8:	2800      	cmp	r0, #0
 80178ea:	d0e3      	beq.n	80178b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80178ec:	6823      	ldr	r3, [r4, #0]
 80178ee:	4629      	mov	r1, r5
 80178f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80178f2:	4620      	mov	r0, r4
 80178f4:	4798      	blx	r3
 80178f6:	6038      	str	r0, [r7, #0]
 80178f8:	6823      	ldr	r3, [r4, #0]
 80178fa:	4620      	mov	r0, r4
 80178fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80178fe:	4798      	blx	r3
 8017900:	7030      	strb	r0, [r6, #0]
 8017902:	e7d8      	b.n	80178b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017904 <_ZN8touchgfx6memsetEPvhm>:
 8017904:	4402      	add	r2, r0
 8017906:	4290      	cmp	r0, r2
 8017908:	d002      	beq.n	8017910 <_ZN8touchgfx6memsetEPvhm+0xc>
 801790a:	f800 1b01 	strb.w	r1, [r0], #1
 801790e:	e7fa      	b.n	8017906 <_ZN8touchgfx6memsetEPvhm+0x2>
 8017910:	4770      	bx	lr

08017912 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017912:	b538      	push	{r3, r4, r5, lr}
 8017914:	4605      	mov	r5, r0
 8017916:	f002 fa0b 	bl	8019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801791a:	4604      	mov	r4, r0
 801791c:	4628      	mov	r0, r5
 801791e:	f002 f943 	bl	8019ba8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017922:	2800      	cmp	r0, #0
 8017924:	bf14      	ite	ne
 8017926:	2002      	movne	r0, #2
 8017928:	2000      	moveq	r0, #0
 801792a:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801792e:	b280      	uxth	r0, r0
 8017930:	bd38      	pop	{r3, r4, r5, pc}

08017932 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017932:	b538      	push	{r3, r4, r5, lr}
 8017934:	4605      	mov	r5, r0
 8017936:	f002 f9fb 	bl	8019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801793a:	4604      	mov	r4, r0
 801793c:	4628      	mov	r0, r5
 801793e:	f002 f933 	bl	8019ba8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017942:	2800      	cmp	r0, #0
 8017944:	bf14      	ite	ne
 8017946:	2002      	movne	r0, #2
 8017948:	2000      	moveq	r0, #0
 801794a:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801794e:	f040 0001 	orr.w	r0, r0, #1
 8017952:	b280      	uxth	r0, r0
 8017954:	bd38      	pop	{r3, r4, r5, pc}

08017956 <_ZN8touchgfx4clzuEm>:
 8017956:	4603      	mov	r3, r0
 8017958:	b1c8      	cbz	r0, 801798e <_ZN8touchgfx4clzuEm+0x38>
 801795a:	0c02      	lsrs	r2, r0, #16
 801795c:	0412      	lsls	r2, r2, #16
 801795e:	b9a2      	cbnz	r2, 801798a <_ZN8touchgfx4clzuEm+0x34>
 8017960:	0403      	lsls	r3, r0, #16
 8017962:	2010      	movs	r0, #16
 8017964:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017968:	bf04      	itt	eq
 801796a:	021b      	lsleq	r3, r3, #8
 801796c:	3008      	addeq	r0, #8
 801796e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017972:	bf04      	itt	eq
 8017974:	011b      	lsleq	r3, r3, #4
 8017976:	3004      	addeq	r0, #4
 8017978:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801797c:	bf04      	itt	eq
 801797e:	009b      	lsleq	r3, r3, #2
 8017980:	3002      	addeq	r0, #2
 8017982:	2b00      	cmp	r3, #0
 8017984:	db04      	blt.n	8017990 <_ZN8touchgfx4clzuEm+0x3a>
 8017986:	3001      	adds	r0, #1
 8017988:	4770      	bx	lr
 801798a:	2000      	movs	r0, #0
 801798c:	e7ea      	b.n	8017964 <_ZN8touchgfx4clzuEm+0xe>
 801798e:	2020      	movs	r0, #32
 8017990:	4770      	bx	lr

08017992 <_ZN8touchgfx7muldivuEmmmRm>:
 8017992:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017996:	4680      	mov	r8, r0
 8017998:	460f      	mov	r7, r1
 801799a:	4615      	mov	r5, r2
 801799c:	461e      	mov	r6, r3
 801799e:	f7ff ffda 	bl	8017956 <_ZN8touchgfx4clzuEm>
 80179a2:	b998      	cbnz	r0, 80179cc <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80179a4:	4608      	mov	r0, r1
 80179a6:	f7ff ffd6 	bl	8017956 <_ZN8touchgfx4clzuEm>
 80179aa:	2800      	cmp	r0, #0
 80179ac:	dd08      	ble.n	80179c0 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80179ae:	4633      	mov	r3, r6
 80179b0:	462a      	mov	r2, r5
 80179b2:	4641      	mov	r1, r8
 80179b4:	4638      	mov	r0, r7
 80179b6:	f7ff ffec 	bl	8017992 <_ZN8touchgfx7muldivuEmmmRm>
 80179ba:	b003      	add	sp, #12
 80179bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179c0:	f04f 33ff 	mov.w	r3, #4294967295
 80179c4:	6033      	str	r3, [r6, #0]
 80179c6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80179ca:	e7f6      	b.n	80179ba <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80179cc:	fa31 f900 	lsrs.w	r9, r1, r0
 80179d0:	fb01 f308 	mul.w	r3, r1, r8
 80179d4:	d105      	bne.n	80179e2 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80179d6:	fbb3 f0f5 	udiv	r0, r3, r5
 80179da:	fb05 3510 	mls	r5, r5, r0, r3
 80179de:	6035      	str	r5, [r6, #0]
 80179e0:	e7eb      	b.n	80179ba <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80179e2:	2301      	movs	r3, #1
 80179e4:	fa08 fb00 	lsl.w	fp, r8, r0
 80179e8:	fa03 f000 	lsl.w	r0, r3, r0
 80179ec:	3801      	subs	r0, #1
 80179ee:	462a      	mov	r2, r5
 80179f0:	4633      	mov	r3, r6
 80179f2:	4641      	mov	r1, r8
 80179f4:	4038      	ands	r0, r7
 80179f6:	f7ff ffcc 	bl	8017992 <_ZN8touchgfx7muldivuEmmmRm>
 80179fa:	fbbb faf5 	udiv	sl, fp, r5
 80179fe:	462a      	mov	r2, r5
 8017a00:	4607      	mov	r7, r0
 8017a02:	ab01      	add	r3, sp, #4
 8017a04:	fb05 b11a 	mls	r1, r5, sl, fp
 8017a08:	4648      	mov	r0, r9
 8017a0a:	f7ff ffc2 	bl	8017992 <_ZN8touchgfx7muldivuEmmmRm>
 8017a0e:	9b01      	ldr	r3, [sp, #4]
 8017a10:	6832      	ldr	r2, [r6, #0]
 8017a12:	fb09 f40a 	mul.w	r4, r9, sl
 8017a16:	441a      	add	r2, r3
 8017a18:	fbb2 f3f5 	udiv	r3, r2, r5
 8017a1c:	441c      	add	r4, r3
 8017a1e:	443c      	add	r4, r7
 8017a20:	4420      	add	r0, r4
 8017a22:	fb05 2513 	mls	r5, r5, r3, r2
 8017a26:	e7da      	b.n	80179de <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08017a28 <_ZN8touchgfx6muldivElllRl>:
 8017a28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017a2a:	2800      	cmp	r0, #0
 8017a2c:	bfba      	itte	lt
 8017a2e:	4240      	neglt	r0, r0
 8017a30:	f04f 34ff 	movlt.w	r4, #4294967295
 8017a34:	2401      	movge	r4, #1
 8017a36:	2900      	cmp	r1, #0
 8017a38:	bfbc      	itt	lt
 8017a3a:	4249      	neglt	r1, r1
 8017a3c:	4264      	neglt	r4, r4
 8017a3e:	2a00      	cmp	r2, #0
 8017a40:	bfb6      	itet	lt
 8017a42:	4265      	neglt	r5, r4
 8017a44:	4625      	movge	r5, r4
 8017a46:	4252      	neglt	r2, r2
 8017a48:	4288      	cmp	r0, r1
 8017a4a:	461e      	mov	r6, r3
 8017a4c:	bfc2      	ittt	gt
 8017a4e:	4603      	movgt	r3, r0
 8017a50:	4608      	movgt	r0, r1
 8017a52:	4619      	movgt	r1, r3
 8017a54:	ab01      	add	r3, sp, #4
 8017a56:	f7ff ff9c 	bl	8017992 <_ZN8touchgfx7muldivuEmmmRm>
 8017a5a:	9b01      	ldr	r3, [sp, #4]
 8017a5c:	4368      	muls	r0, r5
 8017a5e:	435c      	muls	r4, r3
 8017a60:	6034      	str	r4, [r6, #0]
 8017a62:	b002      	add	sp, #8
 8017a64:	bd70      	pop	{r4, r5, r6, pc}

08017a66 <_ZN8touchgfx6muldivElll>:
 8017a66:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017a68:	4606      	mov	r6, r0
 8017a6a:	ab01      	add	r3, sp, #4
 8017a6c:	460d      	mov	r5, r1
 8017a6e:	4614      	mov	r4, r2
 8017a70:	f7ff ffda 	bl	8017a28 <_ZN8touchgfx6muldivElllRl>
 8017a74:	2e00      	cmp	r6, #0
 8017a76:	db20      	blt.n	8017aba <_ZN8touchgfx6muldivElll+0x54>
 8017a78:	bf14      	ite	ne
 8017a7a:	2301      	movne	r3, #1
 8017a7c:	2300      	moveq	r3, #0
 8017a7e:	2d00      	cmp	r5, #0
 8017a80:	db1e      	blt.n	8017ac0 <_ZN8touchgfx6muldivElll+0x5a>
 8017a82:	bf14      	ite	ne
 8017a84:	2201      	movne	r2, #1
 8017a86:	2200      	moveq	r2, #0
 8017a88:	2c00      	cmp	r4, #0
 8017a8a:	fb03 f202 	mul.w	r2, r3, r2
 8017a8e:	db1a      	blt.n	8017ac6 <_ZN8touchgfx6muldivElll+0x60>
 8017a90:	bf14      	ite	ne
 8017a92:	2301      	movne	r3, #1
 8017a94:	2300      	moveq	r3, #0
 8017a96:	4353      	muls	r3, r2
 8017a98:	2b01      	cmp	r3, #1
 8017a9a:	d117      	bne.n	8017acc <_ZN8touchgfx6muldivElll+0x66>
 8017a9c:	9b01      	ldr	r3, [sp, #4]
 8017a9e:	2c00      	cmp	r4, #0
 8017aa0:	bfb8      	it	lt
 8017aa2:	4264      	neglt	r4, r4
 8017aa4:	2b00      	cmp	r3, #0
 8017aa6:	f104 0401 	add.w	r4, r4, #1
 8017aaa:	bfb8      	it	lt
 8017aac:	425b      	neglt	r3, r3
 8017aae:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017ab2:	db00      	blt.n	8017ab6 <_ZN8touchgfx6muldivElll+0x50>
 8017ab4:	3001      	adds	r0, #1
 8017ab6:	b002      	add	sp, #8
 8017ab8:	bd70      	pop	{r4, r5, r6, pc}
 8017aba:	f04f 33ff 	mov.w	r3, #4294967295
 8017abe:	e7de      	b.n	8017a7e <_ZN8touchgfx6muldivElll+0x18>
 8017ac0:	f04f 32ff 	mov.w	r2, #4294967295
 8017ac4:	e7e0      	b.n	8017a88 <_ZN8touchgfx6muldivElll+0x22>
 8017ac6:	f04f 33ff 	mov.w	r3, #4294967295
 8017aca:	e7e4      	b.n	8017a96 <_ZN8touchgfx6muldivElll+0x30>
 8017acc:	3301      	adds	r3, #1
 8017ace:	d1f2      	bne.n	8017ab6 <_ZN8touchgfx6muldivElll+0x50>
 8017ad0:	9b01      	ldr	r3, [sp, #4]
 8017ad2:	2c00      	cmp	r4, #0
 8017ad4:	bfb8      	it	lt
 8017ad6:	4264      	neglt	r4, r4
 8017ad8:	2b00      	cmp	r3, #0
 8017ada:	bfb8      	it	lt
 8017adc:	425b      	neglt	r3, r3
 8017ade:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017ae2:	bfc8      	it	gt
 8017ae4:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017ae8:	e7e5      	b.n	8017ab6 <_ZN8touchgfx6muldivElll+0x50>

08017aea <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017aea:	2002      	movs	r0, #2
 8017aec:	4770      	bx	lr

08017aee <_ZN8touchgfx6ScreenD1Ev>:
 8017aee:	4770      	bx	lr

08017af0 <_ZN8touchgfx12GestureEventD1Ev>:
 8017af0:	4770      	bx	lr

08017af2 <_ZN8touchgfx12GestureEventD0Ev>:
 8017af2:	b510      	push	{r4, lr}
 8017af4:	210c      	movs	r1, #12
 8017af6:	4604      	mov	r4, r0
 8017af8:	f00f fcab 	bl	8027452 <_ZdlPvj>
 8017afc:	4620      	mov	r0, r4
 8017afe:	bd10      	pop	{r4, pc}

08017b00 <_ZN8touchgfx6ScreenD0Ev>:
 8017b00:	b510      	push	{r4, lr}
 8017b02:	213c      	movs	r1, #60	; 0x3c
 8017b04:	4604      	mov	r4, r0
 8017b06:	f00f fca4 	bl	8027452 <_ZdlPvj>
 8017b0a:	4620      	mov	r0, r4
 8017b0c:	bd10      	pop	{r4, pc}
	...

08017b10 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017b10:	b530      	push	{r4, r5, lr}
 8017b12:	460d      	mov	r5, r1
 8017b14:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017b16:	b087      	sub	sp, #28
 8017b18:	4604      	mov	r4, r0
 8017b1a:	b301      	cbz	r1, 8017b5e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017b1c:	a801      	add	r0, sp, #4
 8017b1e:	f7ff fe53 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b22:	892a      	ldrh	r2, [r5, #8]
 8017b24:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017b28:	7928      	ldrb	r0, [r5, #4]
 8017b2a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017b2e:	f88d 0010 	strb.w	r0, [sp, #16]
 8017b32:	1ad2      	subs	r2, r2, r3
 8017b34:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017b36:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017b38:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017b3c:	441a      	add	r2, r3
 8017b3e:	896b      	ldrh	r3, [r5, #10]
 8017b40:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017b44:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017b48:	1b5b      	subs	r3, r3, r5
 8017b4a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017b4c:	442b      	add	r3, r5
 8017b4e:	4d05      	ldr	r5, [pc, #20]	; (8017b64 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017b50:	9503      	str	r5, [sp, #12]
 8017b52:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017b56:	6803      	ldr	r3, [r0, #0]
 8017b58:	a903      	add	r1, sp, #12
 8017b5a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017b5c:	4798      	blx	r3
 8017b5e:	b007      	add	sp, #28
 8017b60:	bd30      	pop	{r4, r5, pc}
 8017b62:	bf00      	nop
 8017b64:	0802cde4 	.word	0x0802cde4

08017b68 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017b6c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017b6e:	b08a      	sub	sp, #40	; 0x28
 8017b70:	4604      	mov	r4, r0
 8017b72:	460d      	mov	r5, r1
 8017b74:	b113      	cbz	r3, 8017b7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017b76:	790b      	ldrb	r3, [r1, #4]
 8017b78:	2b00      	cmp	r3, #0
 8017b7a:	d044      	beq.n	8017c06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017b7c:	f104 0804 	add.w	r8, r4, #4
 8017b80:	4641      	mov	r1, r8
 8017b82:	a803      	add	r0, sp, #12
 8017b84:	f7ff fe20 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b88:	792b      	ldrb	r3, [r5, #4]
 8017b8a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017b8e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017b92:	b983      	cbnz	r3, 8017bb6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017b94:	892a      	ldrh	r2, [r5, #8]
 8017b96:	88e9      	ldrh	r1, [r5, #6]
 8017b98:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017b9c:	1b92      	subs	r2, r2, r6
 8017b9e:	1bc9      	subs	r1, r1, r7
 8017ba0:	9301      	str	r3, [sp, #4]
 8017ba2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017ba6:	9300      	str	r3, [sp, #0]
 8017ba8:	b212      	sxth	r2, r2
 8017baa:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017bae:	b209      	sxth	r1, r1
 8017bb0:	4640      	mov	r0, r8
 8017bb2:	f7f7 fccb 	bl	800f54c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017bb6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017bb8:	b329      	cbz	r1, 8017c06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017bba:	a805      	add	r0, sp, #20
 8017bbc:	f7ff fe04 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017bc0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017bc4:	792b      	ldrb	r3, [r5, #4]
 8017bc6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017bc8:	f88d 3020 	strb.w	r3, [sp, #32]
 8017bcc:	1abf      	subs	r7, r7, r2
 8017bce:	88ea      	ldrh	r2, [r5, #6]
 8017bd0:	4417      	add	r7, r2
 8017bd2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017bd4:	4417      	add	r7, r2
 8017bd6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017bda:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017bde:	1ab6      	subs	r6, r6, r2
 8017be0:	892a      	ldrh	r2, [r5, #8]
 8017be2:	4416      	add	r6, r2
 8017be4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017be6:	4416      	add	r6, r2
 8017be8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017bec:	4a07      	ldr	r2, [pc, #28]	; (8017c0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017bee:	9207      	str	r2, [sp, #28]
 8017bf0:	2600      	movs	r6, #0
 8017bf2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017bf6:	6803      	ldr	r3, [r0, #0]
 8017bf8:	a907      	add	r1, sp, #28
 8017bfa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017bfc:	4798      	blx	r3
 8017bfe:	792b      	ldrb	r3, [r5, #4]
 8017c00:	b10b      	cbz	r3, 8017c06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017c02:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017c06:	b00a      	add	sp, #40	; 0x28
 8017c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017c0c:	0802b33c 	.word	0x0802b33c

08017c10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017c14:	460c      	mov	r4, r1
 8017c16:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017c18:	b088      	sub	sp, #32
 8017c1a:	4605      	mov	r5, r0
 8017c1c:	2900      	cmp	r1, #0
 8017c1e:	d06d      	beq.n	8017cfc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017c20:	4668      	mov	r0, sp
 8017c22:	f7ff fdd1 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017c26:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017c28:	88e3      	ldrh	r3, [r4, #6]
 8017c2a:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017c2e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017c32:	440b      	add	r3, r1
 8017c34:	b21b      	sxth	r3, r3
 8017c36:	4543      	cmp	r3, r8
 8017c38:	db31      	blt.n	8017c9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c3a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017c3e:	44c4      	add	ip, r8
 8017c40:	fa0f fc8c 	sxth.w	ip, ip
 8017c44:	4563      	cmp	r3, ip
 8017c46:	da2a      	bge.n	8017c9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c48:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017c4a:	8926      	ldrh	r6, [r4, #8]
 8017c4c:	4416      	add	r6, r2
 8017c4e:	b236      	sxth	r6, r6
 8017c50:	42be      	cmp	r6, r7
 8017c52:	db24      	blt.n	8017c9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c54:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017c58:	4438      	add	r0, r7
 8017c5a:	b200      	sxth	r0, r0
 8017c5c:	4286      	cmp	r6, r0
 8017c5e:	da1e      	bge.n	8017c9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c60:	8963      	ldrh	r3, [r4, #10]
 8017c62:	4419      	add	r1, r3
 8017c64:	b209      	sxth	r1, r1
 8017c66:	4541      	cmp	r1, r8
 8017c68:	db08      	blt.n	8017c7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017c6a:	4561      	cmp	r1, ip
 8017c6c:	da06      	bge.n	8017c7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017c6e:	89a3      	ldrh	r3, [r4, #12]
 8017c70:	441a      	add	r2, r3
 8017c72:	b212      	sxth	r2, r2
 8017c74:	42ba      	cmp	r2, r7
 8017c76:	db01      	blt.n	8017c7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017c78:	4282      	cmp	r2, r0
 8017c7a:	db10      	blt.n	8017c9e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017c7c:	4b21      	ldr	r3, [pc, #132]	; (8017d04 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017c7e:	9304      	str	r3, [sp, #16]
 8017c80:	2302      	movs	r3, #2
 8017c82:	f88d 3014 	strb.w	r3, [sp, #20]
 8017c86:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017c88:	2300      	movs	r3, #0
 8017c8a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017c8e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017c92:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017c96:	6803      	ldr	r3, [r0, #0]
 8017c98:	a904      	add	r1, sp, #16
 8017c9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017c9c:	4798      	blx	r3
 8017c9e:	1d29      	adds	r1, r5, #4
 8017ca0:	a802      	add	r0, sp, #8
 8017ca2:	f7ff fd91 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017ca6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017caa:	88e0      	ldrh	r0, [r4, #6]
 8017cac:	7921      	ldrb	r1, [r4, #4]
 8017cae:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017cb2:	8922      	ldrh	r2, [r4, #8]
 8017cb4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017cb6:	f88d 1014 	strb.w	r1, [sp, #20]
 8017cba:	eba3 0808 	sub.w	r8, r3, r8
 8017cbe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017cc2:	1bdf      	subs	r7, r3, r7
 8017cc4:	b2bb      	uxth	r3, r7
 8017cc6:	fa1f f888 	uxth.w	r8, r8
 8017cca:	8967      	ldrh	r7, [r4, #10]
 8017ccc:	89a4      	ldrh	r4, [r4, #12]
 8017cce:	4440      	add	r0, r8
 8017cd0:	4460      	add	r0, ip
 8017cd2:	441a      	add	r2, r3
 8017cd4:	44b8      	add	r8, r7
 8017cd6:	4423      	add	r3, r4
 8017cd8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017cdc:	4433      	add	r3, r6
 8017cde:	4432      	add	r2, r6
 8017ce0:	44e0      	add	r8, ip
 8017ce2:	4c09      	ldr	r4, [pc, #36]	; (8017d08 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017ce4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017ce6:	9404      	str	r4, [sp, #16]
 8017ce8:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017cec:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017cf0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017cf4:	6803      	ldr	r3, [r0, #0]
 8017cf6:	a904      	add	r1, sp, #16
 8017cf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017cfa:	4798      	blx	r3
 8017cfc:	b008      	add	sp, #32
 8017cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017d02:	bf00      	nop
 8017d04:	0802b33c 	.word	0x0802b33c
 8017d08:	0802b350 	.word	0x0802b350

08017d0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017d0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017d0e:	4604      	mov	r4, r0
 8017d10:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017d14:	3201      	adds	r2, #1
 8017d16:	d112      	bne.n	8017d3e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017d18:	6803      	ldr	r3, [r0, #0]
 8017d1a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017d1e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017d22:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017d26:	2500      	movs	r5, #0
 8017d28:	9500      	str	r5, [sp, #0]
 8017d2a:	466d      	mov	r5, sp
 8017d2c:	4629      	mov	r1, r5
 8017d2e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017d32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d34:	4798      	blx	r3
 8017d36:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017d3a:	e884 0003 	stmia.w	r4, {r0, r1}
 8017d3e:	4620      	mov	r0, r4
 8017d40:	b003      	add	sp, #12
 8017d42:	bd30      	pop	{r4, r5, pc}

08017d44 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017d44:	b513      	push	{r0, r1, r4, lr}
 8017d46:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017d4a:	3301      	adds	r3, #1
 8017d4c:	4604      	mov	r4, r0
 8017d4e:	d109      	bne.n	8017d64 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017d50:	4601      	mov	r1, r0
 8017d52:	4668      	mov	r0, sp
 8017d54:	f7ff fd38 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017d58:	f8bd 3000 	ldrh.w	r3, [sp]
 8017d5c:	8423      	strh	r3, [r4, #32]
 8017d5e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017d62:	8463      	strh	r3, [r4, #34]	; 0x22
 8017d64:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017d68:	b002      	add	sp, #8
 8017d6a:	bd10      	pop	{r4, pc}

08017d6c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017d6c:	b513      	push	{r0, r1, r4, lr}
 8017d6e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8017d72:	3301      	adds	r3, #1
 8017d74:	4604      	mov	r4, r0
 8017d76:	d109      	bne.n	8017d8c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017d78:	4601      	mov	r1, r0
 8017d7a:	4668      	mov	r0, sp
 8017d7c:	f7ff fd24 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017d80:	f8bd 3000 	ldrh.w	r3, [sp]
 8017d84:	8423      	strh	r3, [r4, #32]
 8017d86:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017d8a:	8463      	strh	r3, [r4, #34]	; 0x22
 8017d8c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017d90:	b002      	add	sp, #8
 8017d92:	bd10      	pop	{r4, pc}

08017d94 <_ZN8touchgfx6ScreenC1Ev>:
 8017d94:	b570      	push	{r4, r5, r6, lr}
 8017d96:	4605      	mov	r5, r0
 8017d98:	4b16      	ldr	r3, [pc, #88]	; (8017df4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017d9a:	f845 3b04 	str.w	r3, [r5], #4
 8017d9e:	2300      	movs	r3, #0
 8017da0:	8103      	strh	r3, [r0, #8]
 8017da2:	8143      	strh	r3, [r0, #10]
 8017da4:	8183      	strh	r3, [r0, #12]
 8017da6:	81c3      	strh	r3, [r0, #14]
 8017da8:	8203      	strh	r3, [r0, #16]
 8017daa:	8243      	strh	r3, [r0, #18]
 8017dac:	8283      	strh	r3, [r0, #20]
 8017dae:	82c3      	strh	r3, [r0, #22]
 8017db0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017db4:	6203      	str	r3, [r0, #32]
 8017db6:	8483      	strh	r3, [r0, #36]	; 0x24
 8017db8:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017dba:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017dbe:	4a0e      	ldr	r2, [pc, #56]	; (8017df8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017dc0:	6343      	str	r3, [r0, #52]	; 0x34
 8017dc2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017dc6:	4b0d      	ldr	r3, [pc, #52]	; (8017dfc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017dc8:	6042      	str	r2, [r0, #4]
 8017dca:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017dce:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8017dd0:	4a0b      	ldr	r2, [pc, #44]	; (8017e00 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017dd2:	4604      	mov	r4, r0
 8017dd4:	2101      	movs	r1, #1
 8017dd6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017dda:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017dde:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017de2:	4628      	mov	r0, r5
 8017de4:	4798      	blx	r3
 8017de6:	6863      	ldr	r3, [r4, #4]
 8017de8:	4628      	mov	r0, r5
 8017dea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017dec:	4631      	mov	r1, r6
 8017dee:	4798      	blx	r3
 8017df0:	4620      	mov	r0, r4
 8017df2:	bd70      	pop	{r4, r5, r6, pc}
 8017df4:	0802cdf8 	.word	0x0802cdf8
 8017df8:	0802b270 	.word	0x0802b270
 8017dfc:	20014c02 	.word	0x20014c02
 8017e00:	20014c00 	.word	0x20014c00

08017e04 <_ZN8touchgfx6Screen4drawEv>:
 8017e04:	b507      	push	{r0, r1, r2, lr}
 8017e06:	4b09      	ldr	r3, [pc, #36]	; (8017e2c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017e08:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017e0c:	4b08      	ldr	r3, [pc, #32]	; (8017e30 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017e0e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017e12:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017e16:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017e1a:	6803      	ldr	r3, [r0, #0]
 8017e1c:	2100      	movs	r1, #0
 8017e1e:	9100      	str	r1, [sp, #0]
 8017e20:	689b      	ldr	r3, [r3, #8]
 8017e22:	4669      	mov	r1, sp
 8017e24:	4798      	blx	r3
 8017e26:	b003      	add	sp, #12
 8017e28:	f85d fb04 	ldr.w	pc, [sp], #4
 8017e2c:	20014c00 	.word	0x20014c00
 8017e30:	20014c02 	.word	0x20014c02

08017e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e38:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017e3c:	2b00      	cmp	r3, #0
 8017e3e:	b089      	sub	sp, #36	; 0x24
 8017e40:	4680      	mov	r8, r0
 8017e42:	460c      	mov	r4, r1
 8017e44:	4615      	mov	r5, r2
 8017e46:	dd0e      	ble.n	8017e66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017e48:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017e4c:	2b00      	cmp	r3, #0
 8017e4e:	dd0a      	ble.n	8017e66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017e50:	4628      	mov	r0, r5
 8017e52:	f7ff ff5b 	bl	8017d0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017e56:	4621      	mov	r1, r4
 8017e58:	f7f9 fd14 	bl	8011884 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017e5c:	69eb      	ldr	r3, [r5, #28]
 8017e5e:	b928      	cbnz	r0, 8017e6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017e60:	461d      	mov	r5, r3
 8017e62:	2b00      	cmp	r3, #0
 8017e64:	d1f4      	bne.n	8017e50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017e66:	b009      	add	sp, #36	; 0x24
 8017e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e6c:	ae04      	add	r6, sp, #16
 8017e6e:	2b00      	cmp	r3, #0
 8017e70:	f000 80b5 	beq.w	8017fde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017e74:	682b      	ldr	r3, [r5, #0]
 8017e76:	4629      	mov	r1, r5
 8017e78:	68db      	ldr	r3, [r3, #12]
 8017e7a:	a802      	add	r0, sp, #8
 8017e7c:	4798      	blx	r3
 8017e7e:	4628      	mov	r0, r5
 8017e80:	f7ff ff60 	bl	8017d44 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017e84:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017e88:	4407      	add	r7, r0
 8017e8a:	4628      	mov	r0, r5
 8017e8c:	f7ff ff6e 	bl	8017d6c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017e90:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017e94:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017e98:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017e9c:	4418      	add	r0, r3
 8017e9e:	4621      	mov	r1, r4
 8017ea0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017ea4:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017ea8:	b23f      	sxth	r7, r7
 8017eaa:	4630      	mov	r0, r6
 8017eac:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017eb0:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017eb4:	f7f7 fc2e 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8017eb8:	4628      	mov	r0, r5
 8017eba:	f7ff ff27 	bl	8017d0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017ebe:	4602      	mov	r2, r0
 8017ec0:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017ec4:	ab06      	add	r3, sp, #24
 8017ec6:	e883 0003 	stmia.w	r3, {r0, r1}
 8017eca:	4611      	mov	r1, r2
 8017ecc:	4618      	mov	r0, r3
 8017ece:	f7f7 fc21 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8017ed2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017ed6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017eda:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017ede:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017ee2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017ee6:	4299      	cmp	r1, r3
 8017ee8:	d10b      	bne.n	8017f02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017eea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017eee:	4552      	cmp	r2, sl
 8017ef0:	d107      	bne.n	8017f02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017ef2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017ef6:	455a      	cmp	r2, fp
 8017ef8:	d103      	bne.n	8017f02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017efa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017efe:	454a      	cmp	r2, r9
 8017f00:	d06d      	beq.n	8017fde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017f02:	f1bb 0f00 	cmp.w	fp, #0
 8017f06:	dd65      	ble.n	8017fd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017f08:	f1b9 0f00 	cmp.w	r9, #0
 8017f0c:	dd62      	ble.n	8017fd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017f0e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017f12:	fa1f f08a 	uxth.w	r0, sl
 8017f16:	4552      	cmp	r2, sl
 8017f18:	9000      	str	r0, [sp, #0]
 8017f1a:	da12      	bge.n	8017f42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017f1c:	9301      	str	r3, [sp, #4]
 8017f1e:	9b00      	ldr	r3, [sp, #0]
 8017f20:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017f24:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017f28:	1a9a      	subs	r2, r3, r2
 8017f2a:	f8ad 1010 	strh.w	r1, [sp, #16]
 8017f2e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017f32:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017f36:	69ea      	ldr	r2, [r5, #28]
 8017f38:	4631      	mov	r1, r6
 8017f3a:	4640      	mov	r0, r8
 8017f3c:	f7ff ff7a 	bl	8017e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f40:	9b01      	ldr	r3, [sp, #4]
 8017f42:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017f46:	429a      	cmp	r2, r3
 8017f48:	b29f      	uxth	r7, r3
 8017f4a:	da0d      	bge.n	8017f68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017f4c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f50:	1aba      	subs	r2, r7, r2
 8017f52:	f8ad a012 	strh.w	sl, [sp, #18]
 8017f56:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017f5a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017f5e:	69ea      	ldr	r2, [r5, #28]
 8017f60:	4631      	mov	r1, r6
 8017f62:	4640      	mov	r0, r8
 8017f64:	f7ff ff66 	bl	8017e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f68:	8822      	ldrh	r2, [r4, #0]
 8017f6a:	88a3      	ldrh	r3, [r4, #4]
 8017f6c:	445f      	add	r7, fp
 8017f6e:	4413      	add	r3, r2
 8017f70:	b29b      	uxth	r3, r3
 8017f72:	b2bf      	uxth	r7, r7
 8017f74:	b23a      	sxth	r2, r7
 8017f76:	b219      	sxth	r1, r3
 8017f78:	4291      	cmp	r1, r2
 8017f7a:	dd0d      	ble.n	8017f98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017f7c:	1bdb      	subs	r3, r3, r7
 8017f7e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f82:	f8ad a012 	strh.w	sl, [sp, #18]
 8017f86:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017f8a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017f8e:	69ea      	ldr	r2, [r5, #28]
 8017f90:	4631      	mov	r1, r6
 8017f92:	4640      	mov	r0, r8
 8017f94:	f7ff ff4e 	bl	8017e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017f98:	88e2      	ldrh	r2, [r4, #6]
 8017f9a:	8863      	ldrh	r3, [r4, #2]
 8017f9c:	4413      	add	r3, r2
 8017f9e:	9a00      	ldr	r2, [sp, #0]
 8017fa0:	444a      	add	r2, r9
 8017fa2:	b29b      	uxth	r3, r3
 8017fa4:	fa1f f982 	uxth.w	r9, r2
 8017fa8:	fa0f f289 	sxth.w	r2, r9
 8017fac:	b219      	sxth	r1, r3
 8017fae:	428a      	cmp	r2, r1
 8017fb0:	da15      	bge.n	8017fde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017fb2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017fb6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017fba:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017fbe:	eba3 0309 	sub.w	r3, r3, r9
 8017fc2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017fc6:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017fca:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017fce:	69ea      	ldr	r2, [r5, #28]
 8017fd0:	4631      	mov	r1, r6
 8017fd2:	e001      	b.n	8017fd8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017fd4:	69ea      	ldr	r2, [r5, #28]
 8017fd6:	4621      	mov	r1, r4
 8017fd8:	4640      	mov	r0, r8
 8017fda:	f7ff ff2b 	bl	8017e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017fde:	4628      	mov	r0, r5
 8017fe0:	f7ff fe94 	bl	8017d0c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017fe4:	6861      	ldr	r1, [r4, #4]
 8017fe6:	4602      	mov	r2, r0
 8017fe8:	6820      	ldr	r0, [r4, #0]
 8017fea:	4633      	mov	r3, r6
 8017fec:	c303      	stmia	r3!, {r0, r1}
 8017fee:	4611      	mov	r1, r2
 8017ff0:	4630      	mov	r0, r6
 8017ff2:	f7f7 fb8f 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 8017ff6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017ffa:	2b00      	cmp	r3, #0
 8017ffc:	f77f af33 	ble.w	8017e66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018000:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018004:	2b00      	cmp	r3, #0
 8018006:	f77f af2e 	ble.w	8017e66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801800a:	4628      	mov	r0, r5
 801800c:	f7ff fe9a 	bl	8017d44 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018010:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018014:	1a18      	subs	r0, r3, r0
 8018016:	f8ad 0010 	strh.w	r0, [sp, #16]
 801801a:	4628      	mov	r0, r5
 801801c:	f7ff fea6 	bl	8017d6c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018020:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018024:	1a18      	subs	r0, r3, r0
 8018026:	f8ad 0012 	strh.w	r0, [sp, #18]
 801802a:	682b      	ldr	r3, [r5, #0]
 801802c:	4631      	mov	r1, r6
 801802e:	689b      	ldr	r3, [r3, #8]
 8018030:	4628      	mov	r0, r5
 8018032:	4798      	blx	r3
 8018034:	e717      	b.n	8017e66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018036 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018036:	b570      	push	{r4, r5, r6, lr}
 8018038:	460c      	mov	r4, r1
 801803a:	b086      	sub	sp, #24
 801803c:	1d06      	adds	r6, r0, #4
 801803e:	2300      	movs	r3, #0
 8018040:	4631      	mov	r1, r6
 8018042:	4605      	mov	r5, r0
 8018044:	a802      	add	r0, sp, #8
 8018046:	9301      	str	r3, [sp, #4]
 8018048:	f7ff fbbe 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801804c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018050:	8822      	ldrh	r2, [r4, #0]
 8018052:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018056:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801805a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801805e:	1ad2      	subs	r2, r2, r3
 8018060:	8863      	ldrh	r3, [r4, #2]
 8018062:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018066:	1a5b      	subs	r3, r3, r1
 8018068:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801806c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8018070:	aa01      	add	r2, sp, #4
 8018072:	a904      	add	r1, sp, #16
 8018074:	4630      	mov	r0, r6
 8018076:	f8ad 3012 	strh.w	r3, [sp, #18]
 801807a:	f7f7 fc23 	bl	800f8c4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801807e:	9a01      	ldr	r2, [sp, #4]
 8018080:	b11a      	cbz	r2, 801808a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8018082:	4621      	mov	r1, r4
 8018084:	4628      	mov	r0, r5
 8018086:	f7ff fed5 	bl	8017e34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801808a:	b006      	add	sp, #24
 801808c:	bd70      	pop	{r4, r5, r6, pc}

0801808e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801808e:	b530      	push	{r4, r5, lr}
 8018090:	4602      	mov	r2, r0
 8018092:	4604      	mov	r4, r0
 8018094:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8018098:	b085      	sub	sp, #20
 801809a:	460d      	mov	r5, r1
 801809c:	6851      	ldr	r1, [r2, #4]
 801809e:	466b      	mov	r3, sp
 80180a0:	c303      	stmia	r3!, {r0, r1}
 80180a2:	4629      	mov	r1, r5
 80180a4:	4668      	mov	r0, sp
 80180a6:	f7f7 fb35 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 80180aa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80180ae:	b12b      	cbz	r3, 80180bc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80180b0:	4669      	mov	r1, sp
 80180b2:	4620      	mov	r0, r4
 80180b4:	f7ff ffbf 	bl	8018036 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80180b8:	b005      	add	sp, #20
 80180ba:	bd30      	pop	{r4, r5, pc}
 80180bc:	3404      	adds	r4, #4
 80180be:	4621      	mov	r1, r4
 80180c0:	a802      	add	r0, sp, #8
 80180c2:	f7ff fb81 	bl	80177c8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80180c6:	f8bd 3000 	ldrh.w	r3, [sp]
 80180ca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80180ce:	1a9b      	subs	r3, r3, r2
 80180d0:	f8ad 3000 	strh.w	r3, [sp]
 80180d4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80180d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80180dc:	4669      	mov	r1, sp
 80180de:	1a9b      	subs	r3, r3, r2
 80180e0:	4620      	mov	r0, r4
 80180e2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80180e6:	f7f7 fbb4 	bl	800f852 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80180ea:	e7e5      	b.n	80180b8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080180ec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80180ec:	680a      	ldr	r2, [r1, #0]
 80180ee:	460b      	mov	r3, r1
 80180f0:	6992      	ldr	r2, [r2, #24]
 80180f2:	1d01      	adds	r1, r0, #4
 80180f4:	4618      	mov	r0, r3
 80180f6:	4710      	bx	r2

080180f8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80180f8:	4298      	cmp	r0, r3
 80180fa:	d200      	bcs.n	80180fe <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80180fc:	b913      	cbnz	r3, 8018104 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80180fe:	440a      	add	r2, r1
 8018100:	b210      	sxth	r0, r2
 8018102:	4770      	bx	lr
 8018104:	ee07 0a90 	vmov	s15, r0
 8018108:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801810c:	ee07 3a90 	vmov	s15, r3
 8018110:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018114:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018118:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801811c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018120:	ee07 2a90 	vmov	s15, r2
 8018124:	ee67 5a07 	vmul.f32	s11, s14, s14
 8018128:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801812c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018130:	ee07 1a90 	vmov	s15, r1
 8018134:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018138:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801813c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018140:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018144:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018148:	bfcc      	ite	gt
 801814a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801814e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018152:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018156:	ee17 3a90 	vmov	r3, s15
 801815a:	b218      	sxth	r0, r3
 801815c:	4770      	bx	lr

0801815e <_ZN8touchgfx12TextProviderC1Ev>:
 801815e:	b538      	push	{r3, r4, r5, lr}
 8018160:	2500      	movs	r5, #0
 8018162:	2302      	movs	r3, #2
 8018164:	4604      	mov	r4, r0
 8018166:	e9c0 5500 	strd	r5, r5, [r0]
 801816a:	7403      	strb	r3, [r0, #16]
 801816c:	6145      	str	r5, [r0, #20]
 801816e:	7605      	strb	r5, [r0, #24]
 8018170:	83c5      	strh	r5, [r0, #30]
 8018172:	8405      	strh	r5, [r0, #32]
 8018174:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018176:	8705      	strh	r5, [r0, #56]	; 0x38
 8018178:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801817a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801817e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018182:	220e      	movs	r2, #14
 8018184:	4629      	mov	r1, r5
 8018186:	304c      	adds	r0, #76	; 0x4c
 8018188:	f00f fb18 	bl	80277bc <memset>
 801818c:	2301      	movs	r3, #1
 801818e:	4620      	mov	r0, r4
 8018190:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018194:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018198:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801819c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80181a0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80181a4:	f7ee fdb6 	bl	8006d14 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80181a8:	4620      	mov	r0, r4
 80181aa:	bd38      	pop	{r3, r4, r5, pc}

080181ac <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80181ac:	b508      	push	{r3, lr}
 80181ae:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80181b0:	b92b      	cbnz	r3, 80181be <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 80181b2:	4b07      	ldr	r3, [pc, #28]	; (80181d0 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 80181b4:	4a07      	ldr	r2, [pc, #28]	; (80181d4 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 80181b6:	4808      	ldr	r0, [pc, #32]	; (80181d8 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 80181b8:	21c0      	movs	r1, #192	; 0xc0
 80181ba:	f00f f979 	bl	80274b0 <__assert_func>
 80181be:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80181c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181c4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80181c6:	fab0 f080 	clz	r0, r0
 80181ca:	0940      	lsrs	r0, r0, #5
 80181cc:	bd08      	pop	{r3, pc}
 80181ce:	bf00      	nop
 80181d0:	0802a3d0 	.word	0x0802a3d0
 80181d4:	0802d053 	.word	0x0802d053
 80181d8:	0802a4a2 	.word	0x0802a4a2

080181dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80181dc:	b530      	push	{r4, r5, lr}
 80181de:	2500      	movs	r5, #0
 80181e0:	2401      	movs	r4, #1
 80181e2:	6843      	ldr	r3, [r0, #4]
 80181e4:	b913      	cbnz	r3, 80181ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80181e6:	6803      	ldr	r3, [r0, #0]
 80181e8:	b313      	cbz	r3, 8018230 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80181ea:	6043      	str	r3, [r0, #4]
 80181ec:	7e03      	ldrb	r3, [r0, #24]
 80181ee:	b143      	cbz	r3, 8018202 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80181f0:	6943      	ldr	r3, [r0, #20]
 80181f2:	b12b      	cbz	r3, 8018200 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80181f4:	881a      	ldrh	r2, [r3, #0]
 80181f6:	b11a      	cbz	r2, 8018200 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80181f8:	1c9a      	adds	r2, r3, #2
 80181fa:	6142      	str	r2, [r0, #20]
 80181fc:	8818      	ldrh	r0, [r3, #0]
 80181fe:	bd30      	pop	{r4, r5, pc}
 8018200:	7605      	strb	r5, [r0, #24]
 8018202:	6843      	ldr	r3, [r0, #4]
 8018204:	8819      	ldrh	r1, [r3, #0]
 8018206:	b199      	cbz	r1, 8018230 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018208:	1c9a      	adds	r2, r3, #2
 801820a:	2902      	cmp	r1, #2
 801820c:	6042      	str	r2, [r0, #4]
 801820e:	d1f5      	bne.n	80181fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018210:	7c03      	ldrb	r3, [r0, #16]
 8018212:	2b01      	cmp	r3, #1
 8018214:	d8e5      	bhi.n	80181e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018216:	1c5a      	adds	r2, r3, #1
 8018218:	3302      	adds	r3, #2
 801821a:	7402      	strb	r2, [r0, #16]
 801821c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018220:	6143      	str	r3, [r0, #20]
 8018222:	2b00      	cmp	r3, #0
 8018224:	d0dd      	beq.n	80181e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018226:	881b      	ldrh	r3, [r3, #0]
 8018228:	2b00      	cmp	r3, #0
 801822a:	d0da      	beq.n	80181e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801822c:	7604      	strb	r4, [r0, #24]
 801822e:	e7d8      	b.n	80181e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018230:	2000      	movs	r0, #0
 8018232:	e7e4      	b.n	80181fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018234:	b430      	push	{r4, r5}
 8018236:	6001      	str	r1, [r0, #0]
 8018238:	2100      	movs	r1, #0
 801823a:	6041      	str	r1, [r0, #4]
 801823c:	6815      	ldr	r5, [r2, #0]
 801823e:	6085      	str	r5, [r0, #8]
 8018240:	6852      	ldr	r2, [r2, #4]
 8018242:	6443      	str	r3, [r0, #68]	; 0x44
 8018244:	9b02      	ldr	r3, [sp, #8]
 8018246:	60c2      	str	r2, [r0, #12]
 8018248:	7401      	strb	r1, [r0, #16]
 801824a:	6141      	str	r1, [r0, #20]
 801824c:	7601      	strb	r1, [r0, #24]
 801824e:	8701      	strh	r1, [r0, #56]	; 0x38
 8018250:	8401      	strh	r1, [r0, #32]
 8018252:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018256:	6483      	str	r3, [r0, #72]	; 0x48
 8018258:	bc30      	pop	{r4, r5}
 801825a:	f7ee bd5b 	b.w	8006d14 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801825e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801825e:	b408      	push	{r3}
 8018260:	b510      	push	{r4, lr}
 8018262:	b085      	sub	sp, #20
 8018264:	ac07      	add	r4, sp, #28
 8018266:	f854 3b04 	ldr.w	r3, [r4], #4
 801826a:	9300      	str	r3, [sp, #0]
 801826c:	4613      	mov	r3, r2
 801826e:	4622      	mov	r2, r4
 8018270:	9403      	str	r4, [sp, #12]
 8018272:	f7ff ffdf 	bl	8018234 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018276:	b005      	add	sp, #20
 8018278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801827c:	b001      	add	sp, #4
 801827e:	4770      	bx	lr

08018280 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018280:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018282:	4605      	mov	r5, r0
 8018284:	4608      	mov	r0, r1
 8018286:	b1e9      	cbz	r1, 80182c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018288:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801828c:	460b      	mov	r3, r1
 801828e:	f101 0708 	add.w	r7, r1, #8
 8018292:	4622      	mov	r2, r4
 8018294:	6818      	ldr	r0, [r3, #0]
 8018296:	6859      	ldr	r1, [r3, #4]
 8018298:	4626      	mov	r6, r4
 801829a:	c603      	stmia	r6!, {r0, r1}
 801829c:	3308      	adds	r3, #8
 801829e:	42bb      	cmp	r3, r7
 80182a0:	4634      	mov	r4, r6
 80182a2:	d1f7      	bne.n	8018294 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80182a4:	6818      	ldr	r0, [r3, #0]
 80182a6:	6030      	str	r0, [r6, #0]
 80182a8:	889b      	ldrh	r3, [r3, #4]
 80182aa:	80b3      	strh	r3, [r6, #4]
 80182ac:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80182b0:	015b      	lsls	r3, r3, #5
 80182b2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80182b6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80182ba:	430b      	orrs	r3, r1
 80182bc:	425b      	negs	r3, r3
 80182be:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80182c2:	4610      	mov	r0, r2
 80182c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080182c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80182c6:	b538      	push	{r3, r4, r5, lr}
 80182c8:	460c      	mov	r4, r1
 80182ca:	6811      	ldr	r1, [r2, #0]
 80182cc:	4610      	mov	r0, r2
 80182ce:	68cd      	ldr	r5, [r1, #12]
 80182d0:	4619      	mov	r1, r3
 80182d2:	47a8      	blx	r5
 80182d4:	2800      	cmp	r0, #0
 80182d6:	bf08      	it	eq
 80182d8:	4620      	moveq	r0, r4
 80182da:	bd38      	pop	{r3, r4, r5, pc}

080182dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80182dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80182de:	4604      	mov	r4, r0
 80182e0:	4615      	mov	r5, r2
 80182e2:	4608      	mov	r0, r1
 80182e4:	b93a      	cbnz	r2, 80182f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80182e6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80182ea:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80182ee:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80182f2:	4628      	mov	r0, r5
 80182f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80182f6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80182fa:	8893      	ldrh	r3, [r2, #4]
 80182fc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018300:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018304:	79ee      	ldrb	r6, [r5, #7]
 8018306:	4316      	orrs	r6, r2
 8018308:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 801830c:	189a      	adds	r2, r3, r2
 801830e:	b291      	uxth	r1, r2
 8018310:	291d      	cmp	r1, #29
 8018312:	b2b7      	uxth	r7, r6
 8018314:	f200 8083 	bhi.w	801841e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8018318:	2201      	movs	r2, #1
 801831a:	408a      	lsls	r2, r1
 801831c:	4978      	ldr	r1, [pc, #480]	; (8018500 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 801831e:	420a      	tst	r2, r1
 8018320:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018324:	d12d      	bne.n	8018382 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8018326:	f412 7f60 	tst.w	r2, #896	; 0x380
 801832a:	d078      	beq.n	801841e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 801832c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018330:	462b      	mov	r3, r5
 8018332:	f105 0e08 	add.w	lr, r5, #8
 8018336:	4615      	mov	r5, r2
 8018338:	6818      	ldr	r0, [r3, #0]
 801833a:	6859      	ldr	r1, [r3, #4]
 801833c:	4694      	mov	ip, r2
 801833e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018342:	3308      	adds	r3, #8
 8018344:	4573      	cmp	r3, lr
 8018346:	4662      	mov	r2, ip
 8018348:	d1f6      	bne.n	8018338 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 801834a:	6818      	ldr	r0, [r3, #0]
 801834c:	f8cc 0000 	str.w	r0, [ip]
 8018350:	889b      	ldrh	r3, [r3, #4]
 8018352:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018356:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801835a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801835e:	b2b3      	uxth	r3, r6
 8018360:	1aca      	subs	r2, r1, r3
 8018362:	b292      	uxth	r2, r2
 8018364:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018368:	10d2      	asrs	r2, r2, #3
 801836a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801836e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018372:	4302      	orrs	r2, r0
 8018374:	1bcf      	subs	r7, r1, r7
 8018376:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801837a:	1afb      	subs	r3, r7, r3
 801837c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018380:	e7b7      	b.n	80182f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018382:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018384:	b92b      	cbnz	r3, 8018392 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8018386:	4b5f      	ldr	r3, [pc, #380]	; (8018504 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8018388:	4a5f      	ldr	r2, [pc, #380]	; (8018508 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801838a:	4860      	ldr	r0, [pc, #384]	; (801850c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801838c:	21c0      	movs	r1, #192	; 0xc0
 801838e:	f00f f88f 	bl	80274b0 <__assert_func>
 8018392:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018394:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018398:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801839a:	f640 6333 	movw	r3, #3635	; 0xe33
 801839e:	4299      	cmp	r1, r3
 80183a0:	d110      	bne.n	80183c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 80183a2:	6803      	ldr	r3, [r0, #0]
 80183a4:	68db      	ldr	r3, [r3, #12]
 80183a6:	4798      	blx	r3
 80183a8:	7b41      	ldrb	r1, [r0, #13]
 80183aa:	00cb      	lsls	r3, r1, #3
 80183ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80183b0:	7a03      	ldrb	r3, [r0, #8]
 80183b2:	0648      	lsls	r0, r1, #25
 80183b4:	ea43 0302 	orr.w	r3, r3, r2
 80183b8:	bf44      	itt	mi
 80183ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80183be:	b21b      	sxthmi	r3, r3
 80183c0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80183c4:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80183c8:	443b      	add	r3, r7
 80183ca:	4433      	add	r3, r6
 80183cc:	b29b      	uxth	r3, r3
 80183ce:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80183d2:	462a      	mov	r2, r5
 80183d4:	f105 0c08 	add.w	ip, r5, #8
 80183d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80183dc:	4635      	mov	r5, r6
 80183de:	6810      	ldr	r0, [r2, #0]
 80183e0:	6851      	ldr	r1, [r2, #4]
 80183e2:	4637      	mov	r7, r6
 80183e4:	c703      	stmia	r7!, {r0, r1}
 80183e6:	3208      	adds	r2, #8
 80183e8:	4562      	cmp	r2, ip
 80183ea:	463e      	mov	r6, r7
 80183ec:	d1f7      	bne.n	80183de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80183ee:	6810      	ldr	r0, [r2, #0]
 80183f0:	6038      	str	r0, [r7, #0]
 80183f2:	8892      	ldrh	r2, [r2, #4]
 80183f4:	80ba      	strh	r2, [r7, #4]
 80183f6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80183fa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80183fe:	10db      	asrs	r3, r3, #3
 8018400:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018404:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018408:	4313      	orrs	r3, r2
 801840a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801840e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018412:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018416:	1a9b      	subs	r3, r3, r2
 8018418:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801841c:	e769      	b.n	80182f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801841e:	f023 0204 	bic.w	r2, r3, #4
 8018422:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018426:	428a      	cmp	r2, r1
 8018428:	d003      	beq.n	8018432 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 801842a:	f640 621d 	movw	r2, #3613	; 0xe1d
 801842e:	4293      	cmp	r3, r2
 8018430:	d120      	bne.n	8018474 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 8018432:	3b01      	subs	r3, #1
 8018434:	4602      	mov	r2, r0
 8018436:	b29b      	uxth	r3, r3
 8018438:	4629      	mov	r1, r5
 801843a:	4620      	mov	r0, r4
 801843c:	f7ff ff43 	bl	80182c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018440:	7b41      	ldrb	r1, [r0, #13]
 8018442:	00cb      	lsls	r3, r1, #3
 8018444:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018448:	7a03      	ldrb	r3, [r0, #8]
 801844a:	0649      	lsls	r1, r1, #25
 801844c:	ea43 0302 	orr.w	r3, r3, r2
 8018450:	bf44      	itt	mi
 8018452:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018456:	b21b      	sxthmi	r3, r3
 8018458:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801845c:	7b6b      	ldrb	r3, [r5, #13]
 801845e:	7aaa      	ldrb	r2, [r5, #10]
 8018460:	005b      	lsls	r3, r3, #1
 8018462:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018466:	4313      	orrs	r3, r2
 8018468:	115a      	asrs	r2, r3, #5
 801846a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801846e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018472:	e036      	b.n	80184e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8018474:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018478:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801847c:	7a2a      	ldrb	r2, [r5, #8]
 801847e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018482:	ea42 0201 	orr.w	r2, r2, r1
 8018486:	bf1c      	itt	ne
 8018488:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801848c:	b212      	sxthne	r2, r2
 801848e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018492:	f640 6109 	movw	r1, #3593	; 0xe09
 8018496:	f023 0210 	bic.w	r2, r3, #16
 801849a:	428a      	cmp	r2, r1
 801849c:	d003      	beq.n	80184a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801849e:	f640 6213 	movw	r2, #3603	; 0xe13
 80184a2:	4293      	cmp	r3, r2
 80184a4:	d12a      	bne.n	80184fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 80184a6:	7b6e      	ldrb	r6, [r5, #13]
 80184a8:	0076      	lsls	r6, r6, #1
 80184aa:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80184ae:	7aae      	ldrb	r6, [r5, #10]
 80184b0:	4316      	orrs	r6, r2
 80184b2:	f640 6213 	movw	r2, #3603	; 0xe13
 80184b6:	4293      	cmp	r3, r2
 80184b8:	bf18      	it	ne
 80184ba:	f103 33ff 	addne.w	r3, r3, #4294967295
 80184be:	4602      	mov	r2, r0
 80184c0:	bf14      	ite	ne
 80184c2:	b29b      	uxthne	r3, r3
 80184c4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80184c8:	4629      	mov	r1, r5
 80184ca:	4620      	mov	r0, r4
 80184cc:	f7ff fefb 	bl	80182c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80184d0:	7b43      	ldrb	r3, [r0, #13]
 80184d2:	7a82      	ldrb	r2, [r0, #10]
 80184d4:	005b      	lsls	r3, r3, #1
 80184d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80184da:	4313      	orrs	r3, r2
 80184dc:	1af6      	subs	r6, r6, r3
 80184de:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80184e2:	7b69      	ldrb	r1, [r5, #13]
 80184e4:	00cb      	lsls	r3, r1, #3
 80184e6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80184ea:	7a2b      	ldrb	r3, [r5, #8]
 80184ec:	4313      	orrs	r3, r2
 80184ee:	064a      	lsls	r2, r1, #25
 80184f0:	bf44      	itt	mi
 80184f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80184f6:	b21b      	sxthmi	r3, r3
 80184f8:	1bdb      	subs	r3, r3, r7
 80184fa:	e73f      	b.n	801837c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80184fc:	2300      	movs	r3, #0
 80184fe:	e7b6      	b.n	801846e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 8018500:	3fc00079 	.word	0x3fc00079
 8018504:	0802a3d0 	.word	0x0802a3d0
 8018508:	0802d053 	.word	0x0802d053
 801850c:	0802a4a2 	.word	0x0802a4a2

08018510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018510:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018514:	4604      	mov	r4, r0
 8018516:	b942      	cbnz	r2, 801852a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018518:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801851c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018520:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018524:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018528:	e046      	b.n	80185b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801852a:	7b51      	ldrb	r1, [r2, #13]
 801852c:	8893      	ldrh	r3, [r2, #4]
 801852e:	010f      	lsls	r7, r1, #4
 8018530:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8018534:	79d7      	ldrb	r7, [r2, #7]
 8018536:	4307      	orrs	r7, r0
 8018538:	2f04      	cmp	r7, #4
 801853a:	b2bd      	uxth	r5, r7
 801853c:	bfcc      	ite	gt
 801853e:	08bf      	lsrgt	r7, r7, #2
 8018540:	2701      	movle	r7, #1
 8018542:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018546:	f200 80ab 	bhi.w	80186a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 801854a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801854e:	4283      	cmp	r3, r0
 8018550:	d216      	bcs.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018552:	f240 605b 	movw	r0, #1627	; 0x65b
 8018556:	4283      	cmp	r3, r0
 8018558:	d859      	bhi.n	801860e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801855a:	f240 6057 	movw	r0, #1623	; 0x657
 801855e:	4283      	cmp	r3, r0
 8018560:	d20e      	bcs.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018562:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018566:	d24a      	bcs.n	80185fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8018568:	f240 604e 	movw	r0, #1614	; 0x64e
 801856c:	4283      	cmp	r3, r0
 801856e:	d207      	bcs.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018570:	f240 601a 	movw	r0, #1562	; 0x61a
 8018574:	4283      	cmp	r3, r0
 8018576:	d02a      	beq.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018578:	d821      	bhi.n	80185be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801857a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801857e:	d35b      	bcc.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018580:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018584:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018588:	f040 80d0 	bne.w	801872c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801858c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018590:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018594:	f040 80ca 	bne.w	801872c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8018598:	00cb      	lsls	r3, r1, #3
 801859a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801859e:	7a13      	ldrb	r3, [r2, #8]
 80185a0:	0649      	lsls	r1, r1, #25
 80185a2:	ea43 0300 	orr.w	r3, r3, r0
 80185a6:	bf44      	itt	mi
 80185a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80185ac:	b21b      	sxthmi	r3, r3
 80185ae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80185b2:	1b5d      	subs	r5, r3, r5
 80185b4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80185b8:	4610      	mov	r0, r2
 80185ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80185be:	f240 604b 	movw	r0, #1611	; 0x64b
 80185c2:	4283      	cmp	r3, r0
 80185c4:	d338      	bcc.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80185c6:	f240 604c 	movw	r0, #1612	; 0x64c
 80185ca:	4283      	cmp	r3, r0
 80185cc:	d9d8      	bls.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80185ce:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80185d2:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80185d6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80185da:	f040 80f1 	bne.w	80187c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 80185de:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80185e2:	f040 80ed 	bne.w	80187c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 80185e6:	00cb      	lsls	r3, r1, #3
 80185e8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80185ec:	7a13      	ldrb	r3, [r2, #8]
 80185ee:	064e      	lsls	r6, r1, #25
 80185f0:	ea43 0300 	orr.w	r3, r3, r0
 80185f4:	bf44      	itt	mi
 80185f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80185fa:	b21b      	sxthmi	r3, r3
 80185fc:	e7d9      	b.n	80185b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80185fe:	f240 6054 	movw	r0, #1620	; 0x654
 8018602:	4283      	cmp	r3, r0
 8018604:	d8e3      	bhi.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018606:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801860a:	d9e0      	bls.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801860c:	e7b8      	b.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801860e:	f240 6074 	movw	r0, #1652	; 0x674
 8018612:	4283      	cmp	r3, r0
 8018614:	d0b4      	beq.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018616:	d82d      	bhi.n	8018674 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 8018618:	f240 605e 	movw	r0, #1630	; 0x65e
 801861c:	4283      	cmp	r3, r0
 801861e:	d804      	bhi.n	801862a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8018620:	f240 605d 	movw	r0, #1629	; 0x65d
 8018624:	4283      	cmp	r3, r0
 8018626:	d3d2      	bcc.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018628:	e7aa      	b.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801862a:	f240 605f 	movw	r0, #1631	; 0x65f
 801862e:	4283      	cmp	r3, r0
 8018630:	d0cd      	beq.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018632:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018636:	d0a3      	beq.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018638:	00cb      	lsls	r3, r1, #3
 801863a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801863e:	7a13      	ldrb	r3, [r2, #8]
 8018640:	0649      	lsls	r1, r1, #25
 8018642:	ea43 0300 	orr.w	r3, r3, r0
 8018646:	bf44      	itt	mi
 8018648:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801864c:	b21b      	sxthmi	r3, r3
 801864e:	1b5d      	subs	r5, r3, r5
 8018650:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018654:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018658:	7b53      	ldrb	r3, [r2, #13]
 801865a:	015b      	lsls	r3, r3, #5
 801865c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018660:	7993      	ldrb	r3, [r2, #6]
 8018662:	430b      	orrs	r3, r1
 8018664:	005b      	lsls	r3, r3, #1
 8018666:	2105      	movs	r1, #5
 8018668:	fb93 f3f1 	sdiv	r3, r3, r1
 801866c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018670:	440b      	add	r3, r1
 8018672:	e757      	b.n	8018524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018674:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018678:	4283      	cmp	r3, r0
 801867a:	d809      	bhi.n	8018690 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801867c:	f240 60df 	movw	r0, #1759	; 0x6df
 8018680:	4283      	cmp	r3, r0
 8018682:	f4bf af7d 	bcs.w	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018686:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801868a:	2b05      	cmp	r3, #5
 801868c:	d8d4      	bhi.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801868e:	e777      	b.n	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018690:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018694:	4283      	cmp	r3, r0
 8018696:	d09a      	beq.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018698:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801869c:	4283      	cmp	r3, r0
 801869e:	e7ca      	b.n	8018636 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 80186a0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80186a4:	d22b      	bcs.n	80186fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 80186a6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80186aa:	4283      	cmp	r3, r0
 80186ac:	d28f      	bcs.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80186ae:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80186b2:	4283      	cmp	r3, r0
 80186b4:	d816      	bhi.n	80186e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 80186b6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80186ba:	4283      	cmp	r3, r0
 80186bc:	f4bf af60 	bcs.w	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80186c0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80186c4:	4283      	cmp	r3, r0
 80186c6:	d80a      	bhi.n	80186de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 80186c8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80186cc:	4283      	cmp	r3, r0
 80186ce:	f4bf af57 	bcs.w	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80186d2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80186d6:	4283      	cmp	r3, r0
 80186d8:	f43f af79 	beq.w	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80186dc:	e7ac      	b.n	8018638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80186de:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80186e2:	e7f8      	b.n	80186d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 80186e4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80186e8:	4283      	cmp	r3, r0
 80186ea:	d802      	bhi.n	80186f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 80186ec:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80186f0:	e798      	b.n	8018624 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 80186f2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80186f6:	4283      	cmp	r3, r0
 80186f8:	f47f af42 	bne.w	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80186fc:	e767      	b.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80186fe:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018702:	4283      	cmp	r3, r0
 8018704:	f43f af63 	beq.w	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018708:	d802      	bhi.n	8018710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 801870a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801870e:	e7f2      	b.n	80186f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8018710:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018714:	4283      	cmp	r3, r0
 8018716:	d805      	bhi.n	8018724 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 8018718:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801871c:	4283      	cmp	r3, r0
 801871e:	f4ff af2f 	bcc.w	8018580 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8018722:	e754      	b.n	80185ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8018724:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018728:	4283      	cmp	r3, r0
 801872a:	e7af      	b.n	801868c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 801872c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018730:	4617      	mov	r7, r2
 8018732:	f102 0808 	add.w	r8, r2, #8
 8018736:	4666      	mov	r6, ip
 8018738:	6838      	ldr	r0, [r7, #0]
 801873a:	6879      	ldr	r1, [r7, #4]
 801873c:	46e6      	mov	lr, ip
 801873e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018742:	3708      	adds	r7, #8
 8018744:	4547      	cmp	r7, r8
 8018746:	46f4      	mov	ip, lr
 8018748:	d1f6      	bne.n	8018738 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 801874a:	6838      	ldr	r0, [r7, #0]
 801874c:	f8ce 0000 	str.w	r0, [lr]
 8018750:	88b9      	ldrh	r1, [r7, #4]
 8018752:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018756:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801875a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801875e:	d009      	beq.n	8018774 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8018760:	7b51      	ldrb	r1, [r2, #13]
 8018762:	7992      	ldrb	r2, [r2, #6]
 8018764:	0149      	lsls	r1, r1, #5
 8018766:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801876a:	4311      	orrs	r1, r2
 801876c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018770:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018774:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018778:	d00d      	beq.n	8018796 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801877a:	442b      	add	r3, r5
 801877c:	b29b      	uxth	r3, r3
 801877e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018782:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018786:	10db      	asrs	r3, r3, #3
 8018788:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801878c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018790:	4313      	orrs	r3, r2
 8018792:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018796:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801879a:	00cb      	lsls	r3, r1, #3
 801879c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80187a0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80187a4:	064f      	lsls	r7, r1, #25
 80187a6:	ea43 0302 	orr.w	r3, r3, r2
 80187aa:	bf44      	itt	mi
 80187ac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80187b0:	b21b      	sxthmi	r3, r3
 80187b2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80187b6:	1b5d      	subs	r5, r3, r5
 80187b8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80187bc:	4632      	mov	r2, r6
 80187be:	e6fb      	b.n	80185b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80187c0:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 80187c4:	4694      	mov	ip, r2
 80187c6:	f102 0908 	add.w	r9, r2, #8
 80187ca:	4676      	mov	r6, lr
 80187cc:	f8dc 0000 	ldr.w	r0, [ip]
 80187d0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80187d4:	46f0      	mov	r8, lr
 80187d6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80187da:	f10c 0c08 	add.w	ip, ip, #8
 80187de:	45cc      	cmp	ip, r9
 80187e0:	46c6      	mov	lr, r8
 80187e2:	d1f3      	bne.n	80187cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 80187e4:	f8dc 0000 	ldr.w	r0, [ip]
 80187e8:	f8c8 0000 	str.w	r0, [r8]
 80187ec:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80187f0:	f8a8 1004 	strh.w	r1, [r8, #4]
 80187f4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80187f8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80187fc:	d009      	beq.n	8018812 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 80187fe:	7b51      	ldrb	r1, [r2, #13]
 8018800:	7992      	ldrb	r2, [r2, #6]
 8018802:	0149      	lsls	r1, r1, #5
 8018804:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018808:	4311      	orrs	r1, r2
 801880a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801880e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018812:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018816:	d00d      	beq.n	8018834 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8018818:	1bdb      	subs	r3, r3, r7
 801881a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801881e:	b29b      	uxth	r3, r3
 8018820:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018824:	10db      	asrs	r3, r3, #3
 8018826:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801882a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801882e:	4313      	orrs	r3, r2
 8018830:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018834:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018838:	00cb      	lsls	r3, r1, #3
 801883a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801883e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018842:	0648      	lsls	r0, r1, #25
 8018844:	ea43 0302 	orr.w	r3, r3, r2
 8018848:	bf44      	itt	mi
 801884a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801884e:	b21b      	sxthmi	r3, r3
 8018850:	e7b1      	b.n	80187b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08018854 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018858:	461e      	mov	r6, r3
 801885a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801885c:	4604      	mov	r4, r0
 801885e:	4617      	mov	r7, r2
 8018860:	b92b      	cbnz	r3, 801886e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8018862:	4b25      	ldr	r3, [pc, #148]	; (80188f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8018864:	4a25      	ldr	r2, [pc, #148]	; (80188fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8018866:	4826      	ldr	r0, [pc, #152]	; (8018900 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8018868:	21c0      	movs	r1, #192	; 0xc0
 801886a:	f00e fe21 	bl	80274b0 <__assert_func>
 801886e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018870:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018874:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018878:	f7ee fa0a 	bl	8006c90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801887c:	4605      	mov	r5, r0
 801887e:	b918      	cbnz	r0, 8018888 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8018880:	6030      	str	r0, [r6, #0]
 8018882:	4628      	mov	r0, r5
 8018884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018888:	683b      	ldr	r3, [r7, #0]
 801888a:	4601      	mov	r1, r0
 801888c:	68db      	ldr	r3, [r3, #12]
 801888e:	4638      	mov	r0, r7
 8018890:	4798      	blx	r3
 8018892:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018896:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801889a:	4602      	mov	r2, r0
 801889c:	6030      	str	r0, [r6, #0]
 801889e:	d213      	bcs.n	80188c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 80188a0:	4643      	mov	r3, r8
 80188a2:	4639      	mov	r1, r7
 80188a4:	4620      	mov	r0, r4
 80188a6:	f7ff fe33 	bl	8018510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80188aa:	6030      	str	r0, [r6, #0]
 80188ac:	6833      	ldr	r3, [r6, #0]
 80188ae:	b143      	cbz	r3, 80188c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 80188b0:	7b5a      	ldrb	r2, [r3, #13]
 80188b2:	7a9b      	ldrb	r3, [r3, #10]
 80188b4:	0052      	lsls	r2, r2, #1
 80188b6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80188ba:	4313      	orrs	r3, r2
 80188bc:	bf0c      	ite	eq
 80188be:	2301      	moveq	r3, #1
 80188c0:	2300      	movne	r3, #0
 80188c2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80188c6:	e7dc      	b.n	8018882 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 80188c8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80188cc:	b29b      	uxth	r3, r3
 80188ce:	2b7f      	cmp	r3, #127	; 0x7f
 80188d0:	d804      	bhi.n	80188dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 80188d2:	4639      	mov	r1, r7
 80188d4:	4620      	mov	r0, r4
 80188d6:	f7ff fd01 	bl	80182dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80188da:	e7e6      	b.n	80188aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80188dc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80188e0:	2b00      	cmp	r3, #0
 80188e2:	d0e3      	beq.n	80188ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80188e4:	f640 1302 	movw	r3, #2306	; 0x902
 80188e8:	429d      	cmp	r5, r3
 80188ea:	d1df      	bne.n	80188ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80188ec:	4601      	mov	r1, r0
 80188ee:	4620      	mov	r0, r4
 80188f0:	f7ff fcc6 	bl	8018280 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80188f4:	e7d9      	b.n	80188aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80188f6:	bf00      	nop
 80188f8:	0802a3d0 	.word	0x0802a3d0
 80188fc:	0802d053 	.word	0x0802d053
 8018900:	0802a4a2 	.word	0x0802a4a2

08018904 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018908:	461e      	mov	r6, r3
 801890a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801890c:	4604      	mov	r4, r0
 801890e:	4617      	mov	r7, r2
 8018910:	b92b      	cbnz	r3, 801891e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8018912:	4b26      	ldr	r3, [pc, #152]	; (80189ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8018914:	4a26      	ldr	r2, [pc, #152]	; (80189b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 8018916:	4827      	ldr	r0, [pc, #156]	; (80189b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 8018918:	21c0      	movs	r1, #192	; 0xc0
 801891a:	f00e fdc9 	bl	80274b0 <__assert_func>
 801891e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018920:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018924:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018928:	f7ee f9b2 	bl	8006c90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801892c:	4605      	mov	r5, r0
 801892e:	b918      	cbnz	r0, 8018938 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8018930:	6030      	str	r0, [r6, #0]
 8018932:	4628      	mov	r0, r5
 8018934:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018938:	683b      	ldr	r3, [r7, #0]
 801893a:	4601      	mov	r1, r0
 801893c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018940:	4638      	mov	r0, r7
 8018942:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018946:	47c8      	blx	r9
 8018948:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801894c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018950:	4602      	mov	r2, r0
 8018952:	6030      	str	r0, [r6, #0]
 8018954:	d213      	bcs.n	801897e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8018956:	4643      	mov	r3, r8
 8018958:	4639      	mov	r1, r7
 801895a:	4620      	mov	r0, r4
 801895c:	f7ff fdd8 	bl	8018510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018960:	6030      	str	r0, [r6, #0]
 8018962:	6833      	ldr	r3, [r6, #0]
 8018964:	b143      	cbz	r3, 8018978 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8018966:	7b5a      	ldrb	r2, [r3, #13]
 8018968:	7a9b      	ldrb	r3, [r3, #10]
 801896a:	0052      	lsls	r2, r2, #1
 801896c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018970:	4313      	orrs	r3, r2
 8018972:	bf0c      	ite	eq
 8018974:	2301      	moveq	r3, #1
 8018976:	2300      	movne	r3, #0
 8018978:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801897c:	e7d9      	b.n	8018932 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801897e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018982:	b29b      	uxth	r3, r3
 8018984:	2b7f      	cmp	r3, #127	; 0x7f
 8018986:	d804      	bhi.n	8018992 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8018988:	4639      	mov	r1, r7
 801898a:	4620      	mov	r0, r4
 801898c:	f7ff fca6 	bl	80182dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018990:	e7e6      	b.n	8018960 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8018992:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018996:	2b00      	cmp	r3, #0
 8018998:	d0e3      	beq.n	8018962 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801899a:	f640 1302 	movw	r3, #2306	; 0x902
 801899e:	429d      	cmp	r5, r3
 80189a0:	d1df      	bne.n	8018962 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 80189a2:	4601      	mov	r1, r0
 80189a4:	4620      	mov	r0, r4
 80189a6:	f7ff fc6b 	bl	8018280 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80189aa:	e7d9      	b.n	8018960 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 80189ac:	0802a3d0 	.word	0x0802a3d0
 80189b0:	0802d053 	.word	0x0802d053
 80189b4:	0802a4a2 	.word	0x0802a4a2

080189b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80189b8:	b510      	push	{r4, lr}
 80189ba:	4604      	mov	r4, r0
 80189bc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80189c0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80189c2:	b9d9      	cbnz	r1, 80189fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 80189c4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80189c6:	2b0a      	cmp	r3, #10
 80189c8:	d037      	beq.n	8018a3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 80189ca:	4620      	mov	r0, r4
 80189cc:	f7ff fc06 	bl	80181dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80189d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80189d2:	2b09      	cmp	r3, #9
 80189d4:	d906      	bls.n	80189e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 80189d6:	4b19      	ldr	r3, [pc, #100]	; (8018a3c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 80189d8:	4a19      	ldr	r2, [pc, #100]	; (8018a40 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 80189da:	481a      	ldr	r0, [pc, #104]	; (8018a44 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 80189dc:	f44f 7182 	mov.w	r1, #260	; 0x104
 80189e0:	f00e fd66 	bl	80274b0 <__assert_func>
 80189e4:	1c5a      	adds	r2, r3, #1
 80189e6:	8722      	strh	r2, [r4, #56]	; 0x38
 80189e8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80189ea:	4413      	add	r3, r2
 80189ec:	b29b      	uxth	r3, r3
 80189ee:	2b09      	cmp	r3, #9
 80189f0:	bf88      	it	hi
 80189f2:	3b0a      	subhi	r3, #10
 80189f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80189f8:	8458      	strh	r0, [r3, #34]	; 0x22
 80189fa:	e7e3      	b.n	80189c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 80189fc:	2b0a      	cmp	r3, #10
 80189fe:	d01c      	beq.n	8018a3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8018a00:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018a02:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018a06:	3901      	subs	r1, #1
 8018a08:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018a0a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018a0e:	1c51      	adds	r1, r2, #1
 8018a10:	b289      	uxth	r1, r1
 8018a12:	2901      	cmp	r1, #1
 8018a14:	bf8a      	itet	hi
 8018a16:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018a1a:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018a1c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018a1e:	2b09      	cmp	r3, #9
 8018a20:	d8d9      	bhi.n	80189d6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8018a22:	1c5a      	adds	r2, r3, #1
 8018a24:	8722      	strh	r2, [r4, #56]	; 0x38
 8018a26:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018a28:	4413      	add	r3, r2
 8018a2a:	b29b      	uxth	r3, r3
 8018a2c:	2b09      	cmp	r3, #9
 8018a2e:	bf88      	it	hi
 8018a30:	3b0a      	subhi	r3, #10
 8018a32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018a36:	8458      	strh	r0, [r3, #34]	; 0x22
 8018a38:	e7c0      	b.n	80189bc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018a3a:	bd10      	pop	{r4, pc}
 8018a3c:	0802ce24 	.word	0x0802ce24
 8018a40:	0802d1a9 	.word	0x0802d1a9
 8018a44:	0802a4a2 	.word	0x0802a4a2

08018a48 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018a48:	b538      	push	{r3, r4, r5, lr}
 8018a4a:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018a4c:	4604      	mov	r4, r0
 8018a4e:	b92a      	cbnz	r2, 8018a5c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8018a50:	4b13      	ldr	r3, [pc, #76]	; (8018aa0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8018a52:	4a14      	ldr	r2, [pc, #80]	; (8018aa4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8018a54:	4814      	ldr	r0, [pc, #80]	; (8018aa8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8018a56:	21d5      	movs	r1, #213	; 0xd5
 8018a58:	f00e fd2a 	bl	80274b0 <__assert_func>
 8018a5c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018a5e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8018a62:	3a01      	subs	r2, #1
 8018a64:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8018a66:	8702      	strh	r2, [r0, #56]	; 0x38
 8018a68:	1c5a      	adds	r2, r3, #1
 8018a6a:	b292      	uxth	r2, r2
 8018a6c:	2a09      	cmp	r2, #9
 8018a6e:	bf86      	itte	hi
 8018a70:	3b09      	subhi	r3, #9
 8018a72:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018a74:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018a76:	f7ff ff9f 	bl	80189b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018a7a:	8c23      	ldrh	r3, [r4, #32]
 8018a7c:	2b01      	cmp	r3, #1
 8018a7e:	bf9c      	itt	ls
 8018a80:	3301      	addls	r3, #1
 8018a82:	8423      	strhls	r3, [r4, #32]
 8018a84:	8be3      	ldrh	r3, [r4, #30]
 8018a86:	b90b      	cbnz	r3, 8018a8c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8018a88:	2302      	movs	r3, #2
 8018a8a:	83e3      	strh	r3, [r4, #30]
 8018a8c:	8be3      	ldrh	r3, [r4, #30]
 8018a8e:	3b01      	subs	r3, #1
 8018a90:	b29b      	uxth	r3, r3
 8018a92:	83e3      	strh	r3, [r4, #30]
 8018a94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018a98:	4628      	mov	r0, r5
 8018a9a:	8365      	strh	r5, [r4, #26]
 8018a9c:	bd38      	pop	{r3, r4, r5, pc}
 8018a9e:	bf00      	nop
 8018aa0:	0802a3d0 	.word	0x0802a3d0
 8018aa4:	0802d0fe 	.word	0x0802d0fe
 8018aa8:	0802a4a2 	.word	0x0802a4a2

08018aac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018aac:	b538      	push	{r3, r4, r5, lr}
 8018aae:	428a      	cmp	r2, r1
 8018ab0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018ab2:	d90c      	bls.n	8018ace <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8018ab4:	b92c      	cbnz	r4, 8018ac2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8018ab6:	4b1c      	ldr	r3, [pc, #112]	; (8018b28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8018ab8:	4a1c      	ldr	r2, [pc, #112]	; (8018b2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8018aba:	21e1      	movs	r1, #225	; 0xe1
 8018abc:	481c      	ldr	r0, [pc, #112]	; (8018b30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8018abe:	f00e fcf7 	bl	80274b0 <__assert_func>
 8018ac2:	3c01      	subs	r4, #1
 8018ac4:	8704      	strh	r4, [r0, #56]	; 0x38
 8018ac6:	4b1b      	ldr	r3, [pc, #108]	; (8018b34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8018ac8:	4a1b      	ldr	r2, [pc, #108]	; (8018b38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8018aca:	21c5      	movs	r1, #197	; 0xc5
 8018acc:	e7f6      	b.n	8018abc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8018ace:	428c      	cmp	r4, r1
 8018ad0:	d203      	bcs.n	8018ada <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8018ad2:	4b1a      	ldr	r3, [pc, #104]	; (8018b3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8018ad4:	4a1a      	ldr	r2, [pc, #104]	; (8018b40 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8018ad6:	21cb      	movs	r1, #203	; 0xcb
 8018ad8:	e7f0      	b.n	8018abc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8018ada:	1a64      	subs	r4, r4, r1
 8018adc:	8704      	strh	r4, [r0, #56]	; 0x38
 8018ade:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8018ae0:	4421      	add	r1, r4
 8018ae2:	b289      	uxth	r1, r1
 8018ae4:	2909      	cmp	r1, #9
 8018ae6:	bf88      	it	hi
 8018ae8:	390a      	subhi	r1, #10
 8018aea:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018aec:	250a      	movs	r5, #10
 8018aee:	b1ba      	cbz	r2, 8018b20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8018af0:	3a01      	subs	r2, #1
 8018af2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018af4:	b292      	uxth	r2, r2
 8018af6:	2909      	cmp	r1, #9
 8018af8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018afc:	d903      	bls.n	8018b06 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 8018afe:	4b11      	ldr	r3, [pc, #68]	; (8018b44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8018b00:	4a11      	ldr	r2, [pc, #68]	; (8018b48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8018b02:	21e6      	movs	r1, #230	; 0xe6
 8018b04:	e7da      	b.n	8018abc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8018b06:	3101      	adds	r1, #1
 8018b08:	8701      	strh	r1, [r0, #56]	; 0x38
 8018b0a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018b0c:	b901      	cbnz	r1, 8018b10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 8018b0e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018b10:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018b12:	3901      	subs	r1, #1
 8018b14:	b289      	uxth	r1, r1
 8018b16:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018b18:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018b1c:	844c      	strh	r4, [r1, #34]	; 0x22
 8018b1e:	e7e6      	b.n	8018aee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8018b20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8018b24:	f7ff bf48 	b.w	80189b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018b28:	0802a3d0 	.word	0x0802a3d0
 8018b2c:	0802ced7 	.word	0x0802ced7
 8018b30:	0802a4a2 	.word	0x0802a4a2
 8018b34:	0802a4ce 	.word	0x0802a4ce
 8018b38:	0802cf81 	.word	0x0802cf81
 8018b3c:	0802ce30 	.word	0x0802ce30
 8018b40:	0802d258 	.word	0x0802d258
 8018b44:	0802ce3c 	.word	0x0802ce3c
 8018b48:	0802ce4f 	.word	0x0802ce4f

08018b4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018b4c:	3a01      	subs	r2, #1
 8018b4e:	b570      	push	{r4, r5, r6, lr}
 8018b50:	b292      	uxth	r2, r2
 8018b52:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8018b56:	42b2      	cmp	r2, r6
 8018b58:	d019      	beq.n	8018b8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8018b5a:	8c04      	ldrh	r4, [r0, #32]
 8018b5c:	f831 5b02 	ldrh.w	r5, [r1], #2
 8018b60:	4294      	cmp	r4, r2
 8018b62:	d805      	bhi.n	8018b70 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8018b64:	4b19      	ldr	r3, [pc, #100]	; (8018bcc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8018b66:	4a1a      	ldr	r2, [pc, #104]	; (8018bd0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8018b68:	481a      	ldr	r0, [pc, #104]	; (8018bd4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8018b6a:	21c5      	movs	r1, #197	; 0xc5
 8018b6c:	f00e fca0 	bl	80274b0 <__assert_func>
 8018b70:	8bc4      	ldrh	r4, [r0, #30]
 8018b72:	4414      	add	r4, r2
 8018b74:	b2a4      	uxth	r4, r4
 8018b76:	2c01      	cmp	r4, #1
 8018b78:	bf88      	it	hi
 8018b7a:	3c02      	subhi	r4, #2
 8018b7c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018b80:	3a01      	subs	r2, #1
 8018b82:	8b64      	ldrh	r4, [r4, #26]
 8018b84:	42ac      	cmp	r4, r5
 8018b86:	b292      	uxth	r2, r2
 8018b88:	d0e5      	beq.n	8018b56 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8018b8a:	2000      	movs	r0, #0
 8018b8c:	bd70      	pop	{r4, r5, r6, pc}
 8018b8e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018b92:	2400      	movs	r4, #0
 8018b94:	4413      	add	r3, r2
 8018b96:	b2a2      	uxth	r2, r4
 8018b98:	429a      	cmp	r2, r3
 8018b9a:	da14      	bge.n	8018bc6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8018b9c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 8018b9e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018ba2:	4296      	cmp	r6, r2
 8018ba4:	d802      	bhi.n	8018bac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8018ba6:	4b09      	ldr	r3, [pc, #36]	; (8018bcc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8018ba8:	4a0b      	ldr	r2, [pc, #44]	; (8018bd8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8018baa:	e7dd      	b.n	8018b68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8018bac:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018bae:	4432      	add	r2, r6
 8018bb0:	b292      	uxth	r2, r2
 8018bb2:	2a09      	cmp	r2, #9
 8018bb4:	bf88      	it	hi
 8018bb6:	3a0a      	subhi	r2, #10
 8018bb8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018bbc:	3401      	adds	r4, #1
 8018bbe:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018bc0:	42aa      	cmp	r2, r5
 8018bc2:	d0e8      	beq.n	8018b96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8018bc4:	e7e1      	b.n	8018b8a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8018bc6:	2001      	movs	r0, #1
 8018bc8:	e7e0      	b.n	8018b8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8018bca:	bf00      	nop
 8018bcc:	0802a4ce 	.word	0x0802a4ce
 8018bd0:	0802d2dc 	.word	0x0802d2dc
 8018bd4:	0802a4a2 	.word	0x0802a4a2
 8018bd8:	0802cf81 	.word	0x0802cf81

08018bdc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018bdc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018be0:	4605      	mov	r5, r0
 8018be2:	4616      	mov	r6, r2
 8018be4:	1c8c      	adds	r4, r1, #2
 8018be6:	8809      	ldrh	r1, [r1, #0]
 8018be8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018bec:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018bf0:	42b3      	cmp	r3, r6
 8018bf2:	d124      	bne.n	8018c3e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018bf4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018bf8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018bfc:	f001 070f 	and.w	r7, r1, #15
 8018c00:	f8cd 8000 	str.w	r8, [sp]
 8018c04:	464b      	mov	r3, r9
 8018c06:	4652      	mov	r2, sl
 8018c08:	4621      	mov	r1, r4
 8018c0a:	4628      	mov	r0, r5
 8018c0c:	f7ff ff9e 	bl	8018b4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018c10:	4683      	mov	fp, r0
 8018c12:	b168      	cbz	r0, 8018c30 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018c14:	eb0a 0109 	add.w	r1, sl, r9
 8018c18:	4441      	add	r1, r8
 8018c1a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018c1e:	463a      	mov	r2, r7
 8018c20:	4649      	mov	r1, r9
 8018c22:	4628      	mov	r0, r5
 8018c24:	f7ff ff42 	bl	8018aac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018c28:	4658      	mov	r0, fp
 8018c2a:	b003      	add	sp, #12
 8018c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c30:	eb07 010a 	add.w	r1, r7, sl
 8018c34:	4449      	add	r1, r9
 8018c36:	4441      	add	r1, r8
 8018c38:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018c3c:	e7d2      	b.n	8018be4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018c3e:	f04f 0b00 	mov.w	fp, #0
 8018c42:	e7f1      	b.n	8018c28 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018c44 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018c44:	b570      	push	{r4, r5, r6, lr}
 8018c46:	8810      	ldrh	r0, [r2, #0]
 8018c48:	4298      	cmp	r0, r3
 8018c4a:	d817      	bhi.n	8018c7c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018c4c:	1e48      	subs	r0, r1, #1
 8018c4e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018c52:	4298      	cmp	r0, r3
 8018c54:	d312      	bcc.n	8018c7c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018c56:	2400      	movs	r4, #0
 8018c58:	428c      	cmp	r4, r1
 8018c5a:	d20f      	bcs.n	8018c7c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018c5c:	1860      	adds	r0, r4, r1
 8018c5e:	1040      	asrs	r0, r0, #1
 8018c60:	0085      	lsls	r5, r0, #2
 8018c62:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018c66:	42b3      	cmp	r3, r6
 8018c68:	d902      	bls.n	8018c70 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018c6a:	3001      	adds	r0, #1
 8018c6c:	b284      	uxth	r4, r0
 8018c6e:	e7f3      	b.n	8018c58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018c70:	d201      	bcs.n	8018c76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018c72:	b281      	uxth	r1, r0
 8018c74:	e7f0      	b.n	8018c58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018c76:	442a      	add	r2, r5
 8018c78:	8850      	ldrh	r0, [r2, #2]
 8018c7a:	bd70      	pop	{r4, r5, r6, pc}
 8018c7c:	2000      	movs	r0, #0
 8018c7e:	e7fc      	b.n	8018c7a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018c80 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018c80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c84:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018c86:	886f      	ldrh	r7, [r5, #2]
 8018c88:	4604      	mov	r4, r0
 8018c8a:	087f      	lsrs	r7, r7, #1
 8018c8c:	260b      	movs	r6, #11
 8018c8e:	3e01      	subs	r6, #1
 8018c90:	d01b      	beq.n	8018cca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8018c92:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018c94:	b92b      	cbnz	r3, 8018ca2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8018c96:	4b0e      	ldr	r3, [pc, #56]	; (8018cd0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8018c98:	4a0e      	ldr	r2, [pc, #56]	; (8018cd4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8018c9a:	480f      	ldr	r0, [pc, #60]	; (8018cd8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8018c9c:	21c0      	movs	r1, #192	; 0xc0
 8018c9e:	f00e fc07 	bl	80274b0 <__assert_func>
 8018ca2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018ca4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018ca8:	462a      	mov	r2, r5
 8018caa:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018cae:	4639      	mov	r1, r7
 8018cb0:	4643      	mov	r3, r8
 8018cb2:	4620      	mov	r0, r4
 8018cb4:	f7ff ffc6 	bl	8018c44 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018cb8:	b138      	cbz	r0, 8018cca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8018cba:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018cbe:	4642      	mov	r2, r8
 8018cc0:	4620      	mov	r0, r4
 8018cc2:	f7ff ff8b 	bl	8018bdc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018cc6:	2800      	cmp	r0, #0
 8018cc8:	d1e1      	bne.n	8018c8e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018cca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018cce:	bf00      	nop
 8018cd0:	0802a3d0 	.word	0x0802a3d0
 8018cd4:	0802d053 	.word	0x0802d053
 8018cd8:	0802a4a2 	.word	0x0802a4a2

08018cdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018cdc:	b570      	push	{r4, r5, r6, lr}
 8018cde:	694a      	ldr	r2, [r1, #20]
 8018ce0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018ce2:	684b      	ldr	r3, [r1, #4]
 8018ce4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018ce6:	1b54      	subs	r4, r2, r5
 8018ce8:	f000 8106 	beq.w	8018ef8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018cec:	1b9b      	subs	r3, r3, r6
 8018cee:	d003      	beq.n	8018cf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018cf0:	4363      	muls	r3, r4
 8018cf2:	2210      	movs	r2, #16
 8018cf4:	fb93 f3f2 	sdiv	r3, r3, r2
 8018cf8:	680c      	ldr	r4, [r1, #0]
 8018cfa:	698a      	ldr	r2, [r1, #24]
 8018cfc:	1b65      	subs	r5, r4, r5
 8018cfe:	f000 80fd 	beq.w	8018efc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018d02:	1b92      	subs	r2, r2, r6
 8018d04:	d003      	beq.n	8018d0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018d06:	436a      	muls	r2, r5
 8018d08:	2410      	movs	r4, #16
 8018d0a:	fb92 f2f4 	sdiv	r2, r2, r4
 8018d0e:	1a9b      	subs	r3, r3, r2
 8018d10:	ee07 3a90 	vmov	s15, r3
 8018d14:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018f38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018d1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018d20:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018d24:	460a      	mov	r2, r1
 8018d26:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018d2a:	4603      	mov	r3, r0
 8018d2c:	f100 040c 	add.w	r4, r0, #12
 8018d30:	eeb1 6a43 	vneg.f32	s12, s6
 8018d34:	edd2 7a02 	vldr	s15, [r2, #8]
 8018d38:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018d3c:	3214      	adds	r2, #20
 8018d3e:	ece3 6a01 	vstmia	r3!, {s13}
 8018d42:	ed52 7a02 	vldr	s15, [r2, #-8]
 8018d46:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018d4a:	429c      	cmp	r4, r3
 8018d4c:	edc3 7a02 	vstr	s15, [r3, #8]
 8018d50:	ed52 7a01 	vldr	s15, [r2, #-4]
 8018d54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018d58:	edc3 7a05 	vstr	s15, [r3, #20]
 8018d5c:	d1ea      	bne.n	8018d34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018d5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018d60:	698b      	ldr	r3, [r1, #24]
 8018d62:	edd0 4a02 	vldr	s9, [r0, #8]
 8018d66:	edd0 3a00 	vldr	s7, [r0]
 8018d6a:	edd0 6a01 	vldr	s13, [r0, #4]
 8018d6e:	ed90 5a05 	vldr	s10, [r0, #20]
 8018d72:	ed90 2a03 	vldr	s4, [r0, #12]
 8018d76:	edd0 5a04 	vldr	s11, [r0, #16]
 8018d7a:	ed90 1a07 	vldr	s2, [r0, #28]
 8018d7e:	edd0 2a06 	vldr	s5, [r0, #24]
 8018d82:	1a9b      	subs	r3, r3, r2
 8018d84:	ee07 3a90 	vmov	s15, r3
 8018d88:	684b      	ldr	r3, [r1, #4]
 8018d8a:	1a9b      	subs	r3, r3, r2
 8018d8c:	ee07 3a10 	vmov	s14, r3
 8018d90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018d94:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018d98:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018d9c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018da0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018da4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018da8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018dac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018db0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018db4:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018db8:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018dbc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018dc0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018dc2:	694a      	ldr	r2, [r1, #20]
 8018dc4:	1b13      	subs	r3, r2, r4
 8018dc6:	ee07 3a10 	vmov	s14, r3
 8018dca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018dce:	680b      	ldr	r3, [r1, #0]
 8018dd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018dd4:	1b1b      	subs	r3, r3, r4
 8018dd6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018dda:	ee07 3a10 	vmov	s14, r3
 8018dde:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018de2:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018de6:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018dea:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018dee:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8018df2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018df4:	698b      	ldr	r3, [r1, #24]
 8018df6:	1a9b      	subs	r3, r3, r2
 8018df8:	ee06 3a90 	vmov	s13, r3
 8018dfc:	684b      	ldr	r3, [r1, #4]
 8018dfe:	1a9b      	subs	r3, r3, r2
 8018e00:	ee07 3a10 	vmov	s14, r3
 8018e04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018e08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e0c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018e10:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018e14:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018e18:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018e1c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018e20:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018e24:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018e26:	694a      	ldr	r2, [r1, #20]
 8018e28:	1b13      	subs	r3, r2, r4
 8018e2a:	ee07 3a10 	vmov	s14, r3
 8018e2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e32:	680b      	ldr	r3, [r1, #0]
 8018e34:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018e38:	1b1b      	subs	r3, r3, r4
 8018e3a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018e3e:	ee07 3a10 	vmov	s14, r3
 8018e42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e46:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018e4a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018e4e:	edd0 5a08 	vldr	s11, [r0, #32]
 8018e52:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018e56:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018e5a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018e5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018e60:	698b      	ldr	r3, [r1, #24]
 8018e62:	1a9b      	subs	r3, r3, r2
 8018e64:	ee07 3a10 	vmov	s14, r3
 8018e68:	684b      	ldr	r3, [r1, #4]
 8018e6a:	1a9b      	subs	r3, r3, r2
 8018e6c:	ee01 3a90 	vmov	s3, r3
 8018e70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018e74:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018e78:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018e7c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018e80:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018e84:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018e88:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018e8c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018e90:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018e94:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018e96:	694a      	ldr	r2, [r1, #20]
 8018e98:	1b13      	subs	r3, r2, r4
 8018e9a:	ee03 3a10 	vmov	s6, r3
 8018e9e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018ea2:	680b      	ldr	r3, [r1, #0]
 8018ea4:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018ea8:	1b1b      	subs	r3, r3, r4
 8018eaa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018eae:	ee03 3a10 	vmov	s6, r3
 8018eb2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018eb6:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018eba:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018ebe:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018ec2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018ec6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018eca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018ece:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018ed2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ed6:	dd13      	ble.n	8018f00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018ed8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018edc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018ee0:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018ee2:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018ee6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018eea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018eee:	dd15      	ble.n	8018f1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018ef0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018ef4:	6403      	str	r3, [r0, #64]	; 0x40
 8018ef6:	bd70      	pop	{r4, r5, r6, pc}
 8018ef8:	4623      	mov	r3, r4
 8018efa:	e6fd      	b.n	8018cf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018efc:	462a      	mov	r2, r5
 8018efe:	e706      	b.n	8018d0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018f00:	d502      	bpl.n	8018f08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018f02:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018f06:	e7e9      	b.n	8018edc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018f08:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018f0c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018f10:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018f14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f18:	dade      	bge.n	8018ed8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018f1a:	e7f2      	b.n	8018f02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018f1c:	d502      	bpl.n	8018f24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018f1e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018f22:	e7e7      	b.n	8018ef4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018f24:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018f28:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018f2c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018f34:	dadc      	bge.n	8018ef0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018f36:	e7f2      	b.n	8018f1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018f38:	3d800000 	.word	0x3d800000

08018f3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018f3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018f40:	2714      	movs	r7, #20
 8018f42:	435f      	muls	r7, r3
 8018f44:	eb02 0c07 	add.w	ip, r2, r7
 8018f48:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018f4c:	f115 0e0f 	adds.w	lr, r5, #15
 8018f50:	d432      	bmi.n	8018fb8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 8018f52:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018f56:	9c08      	ldr	r4, [sp, #32]
 8018f58:	f8c0 e014 	str.w	lr, [r0, #20]
 8018f5c:	2614      	movs	r6, #20
 8018f5e:	4366      	muls	r6, r4
 8018f60:	eb02 0806 	add.w	r8, r2, r6
 8018f64:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018f68:	f115 040f 	adds.w	r4, r5, #15
 8018f6c:	d430      	bmi.n	8018fd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018f6e:	1124      	asrs	r4, r4, #4
 8018f70:	eba4 040e 	sub.w	r4, r4, lr
 8018f74:	6184      	str	r4, [r0, #24]
 8018f76:	2c00      	cmp	r4, #0
 8018f78:	f000 80a9 	beq.w	80190ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 8018f7c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018f80:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018f84:	5995      	ldr	r5, [r2, r6]
 8018f86:	eba4 0809 	sub.w	r8, r4, r9
 8018f8a:	59d4      	ldr	r4, [r2, r7]
 8018f8c:	eba5 0a04 	sub.w	sl, r5, r4
 8018f90:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018f94:	fb0e fe05 	mul.w	lr, lr, r5
 8018f98:	fb0a ee19 	mls	lr, sl, r9, lr
 8018f9c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018fa0:	fb08 e404 	mla	r4, r8, r4, lr
 8018fa4:	3c01      	subs	r4, #1
 8018fa6:	2e00      	cmp	r6, #0
 8018fa8:	4434      	add	r4, r6
 8018faa:	dc1d      	bgt.n	8018fe8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 8018fac:	4b5a      	ldr	r3, [pc, #360]	; (8019118 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 8018fae:	4a5b      	ldr	r2, [pc, #364]	; (801911c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 8018fb0:	485b      	ldr	r0, [pc, #364]	; (8019120 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 8018fb2:	21f7      	movs	r1, #247	; 0xf7
 8018fb4:	f00e fa7c 	bl	80274b0 <__assert_func>
 8018fb8:	f1c5 0501 	rsb	r5, r5, #1
 8018fbc:	f015 050f 	ands.w	r5, r5, #15
 8018fc0:	bf18      	it	ne
 8018fc2:	2501      	movne	r5, #1
 8018fc4:	2410      	movs	r4, #16
 8018fc6:	fb9e fef4 	sdiv	lr, lr, r4
 8018fca:	ebae 0e05 	sub.w	lr, lr, r5
 8018fce:	e7c2      	b.n	8018f56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 8018fd0:	f1c5 0501 	rsb	r5, r5, #1
 8018fd4:	f015 050f 	ands.w	r5, r5, #15
 8018fd8:	bf18      	it	ne
 8018fda:	2501      	movne	r5, #1
 8018fdc:	f04f 0910 	mov.w	r9, #16
 8018fe0:	fb94 f4f9 	sdiv	r4, r4, r9
 8018fe4:	1b64      	subs	r4, r4, r5
 8018fe6:	e7c3      	b.n	8018f70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 8018fe8:	2c00      	cmp	r4, #0
 8018fea:	db72      	blt.n	80190d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 8018fec:	fb94 fef6 	sdiv	lr, r4, r6
 8018ff0:	f8c0 e000 	str.w	lr, [r0]
 8018ff4:	fb06 441e 	mls	r4, r6, lr, r4
 8018ff8:	6104      	str	r4, [r0, #16]
 8018ffa:	2d00      	cmp	r5, #0
 8018ffc:	db7b      	blt.n	80190f6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 8018ffe:	fb95 f4f6 	sdiv	r4, r5, r6
 8019002:	6044      	str	r4, [r0, #4]
 8019004:	fb06 5514 	mls	r5, r6, r4, r5
 8019008:	6085      	str	r5, [r0, #8]
 801900a:	60c6      	str	r6, [r0, #12]
 801900c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8019010:	6945      	ldr	r5, [r0, #20]
 8019012:	59d2      	ldr	r2, [r2, r7]
 8019014:	eddf 6a43 	vldr	s13, [pc, #268]	; 8019124 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 8019018:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801901c:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8019020:	ee07 4a10 	vmov	s14, r4
 8019024:	6804      	ldr	r4, [r0, #0]
 8019026:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801902a:	ee07 2a90 	vmov	s15, r2
 801902e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019032:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019036:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801903a:	ee27 7a26 	vmul.f32	s14, s14, s13
 801903e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8019042:	edd3 6a00 	vldr	s13, [r3]
 8019046:	eee6 6a07 	vfma.f32	s13, s12, s14
 801904a:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801904e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8019052:	edc0 6a07 	vstr	s13, [r0, #28]
 8019056:	edd0 6a01 	vldr	s13, [r0, #4]
 801905a:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801905e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019062:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019066:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801906a:	ed80 6a08 	vstr	s12, [r0, #32]
 801906e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8019070:	6242      	str	r2, [r0, #36]	; 0x24
 8019072:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019076:	ed93 6a03 	vldr	s12, [r3, #12]
 801907a:	eea5 6a87 	vfma.f32	s12, s11, s14
 801907e:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019082:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019086:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801908a:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801908e:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8019092:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019096:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801909a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801909c:	6302      	str	r2, [r0, #48]	; 0x30
 801909e:	ed93 6a06 	vldr	s12, [r3, #24]
 80190a2:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80190a6:	eea5 6a87 	vfma.f32	s12, s11, s14
 80190aa:	eeb0 7a46 	vmov.f32	s14, s12
 80190ae:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80190b2:	eea6 7a27 	vfma.f32	s14, s12, s15
 80190b6:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80190ba:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80190be:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80190c2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80190c6:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80190ca:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80190cc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80190ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80190d2:	4264      	negs	r4, r4
 80190d4:	fb94 fef6 	sdiv	lr, r4, r6
 80190d8:	f1ce 0800 	rsb	r8, lr, #0
 80190dc:	fb06 441e 	mls	r4, r6, lr, r4
 80190e0:	f8c0 8000 	str.w	r8, [r0]
 80190e4:	6104      	str	r4, [r0, #16]
 80190e6:	2c00      	cmp	r4, #0
 80190e8:	d087      	beq.n	8018ffa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 80190ea:	ea6f 0e0e 	mvn.w	lr, lr
 80190ee:	f8c0 e000 	str.w	lr, [r0]
 80190f2:	1b34      	subs	r4, r6, r4
 80190f4:	e780      	b.n	8018ff8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 80190f6:	426d      	negs	r5, r5
 80190f8:	fb95 f4f6 	sdiv	r4, r5, r6
 80190fc:	f1c4 0e00 	rsb	lr, r4, #0
 8019100:	fb06 5514 	mls	r5, r6, r4, r5
 8019104:	f8c0 e004 	str.w	lr, [r0, #4]
 8019108:	6085      	str	r5, [r0, #8]
 801910a:	2d00      	cmp	r5, #0
 801910c:	f43f af7d 	beq.w	801900a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 8019110:	43e4      	mvns	r4, r4
 8019112:	6044      	str	r4, [r0, #4]
 8019114:	1b75      	subs	r5, r6, r5
 8019116:	e777      	b.n	8019008 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 8019118:	0802d3ad 	.word	0x0802d3ad
 801911c:	0802d3ec 	.word	0x0802d3ec
 8019120:	0802d3bd 	.word	0x0802d3bd
 8019124:	3d800000 	.word	0x3d800000

08019128 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019128:	4602      	mov	r2, r0
 801912a:	b148      	cbz	r0, 8019140 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801912c:	2300      	movs	r3, #0
 801912e:	b298      	uxth	r0, r3
 8019130:	3301      	adds	r3, #1
 8019132:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019136:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801913a:	2900      	cmp	r1, #0
 801913c:	d1f7      	bne.n	801912e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801913e:	4770      	bx	lr
 8019140:	4770      	bx	lr

08019142 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019142:	b530      	push	{r4, r5, lr}
 8019144:	4604      	mov	r4, r0
 8019146:	b159      	cbz	r1, 8019160 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019148:	b148      	cbz	r0, 801915e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801914a:	2300      	movs	r3, #0
 801914c:	b298      	uxth	r0, r3
 801914e:	4282      	cmp	r2, r0
 8019150:	d905      	bls.n	801915e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019152:	5ccd      	ldrb	r5, [r1, r3]
 8019154:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019158:	3301      	adds	r3, #1
 801915a:	2d00      	cmp	r5, #0
 801915c:	d1f6      	bne.n	801914c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801915e:	bd30      	pop	{r4, r5, pc}
 8019160:	4608      	mov	r0, r1
 8019162:	e7fc      	b.n	801915e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019164 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8019164:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019166:	b08b      	sub	sp, #44	; 0x2c
 8019168:	468c      	mov	ip, r1
 801916a:	2100      	movs	r1, #0
 801916c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019170:	ae01      	add	r6, sp, #4
 8019172:	211f      	movs	r1, #31
 8019174:	fbb0 f7f3 	udiv	r7, r0, r3
 8019178:	fb03 0517 	mls	r5, r3, r7, r0
 801917c:	b2ec      	uxtb	r4, r5
 801917e:	2d09      	cmp	r5, #9
 8019180:	bfd4      	ite	le
 8019182:	3430      	addle	r4, #48	; 0x30
 8019184:	3457      	addgt	r4, #87	; 0x57
 8019186:	b2e4      	uxtb	r4, r4
 8019188:	558c      	strb	r4, [r1, r6]
 801918a:	4638      	mov	r0, r7
 801918c:	1e4c      	subs	r4, r1, #1
 801918e:	b92f      	cbnz	r7, 801919c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8019190:	4431      	add	r1, r6
 8019192:	4660      	mov	r0, ip
 8019194:	f7ff ffd5 	bl	8019142 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019198:	b00b      	add	sp, #44	; 0x2c
 801919a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801919c:	4621      	mov	r1, r4
 801919e:	e7e9      	b.n	8019174 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

080191a0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80191a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80191a2:	4607      	mov	r7, r0
 80191a4:	b08b      	sub	sp, #44	; 0x2c
 80191a6:	4608      	mov	r0, r1
 80191a8:	b341      	cbz	r1, 80191fc <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80191aa:	1e99      	subs	r1, r3, #2
 80191ac:	2922      	cmp	r1, #34	; 0x22
 80191ae:	d825      	bhi.n	80191fc <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80191b0:	2100      	movs	r1, #0
 80191b2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80191b6:	463c      	mov	r4, r7
 80191b8:	261f      	movs	r6, #31
 80191ba:	f10d 0c04 	add.w	ip, sp, #4
 80191be:	fb94 fef3 	sdiv	lr, r4, r3
 80191c2:	fb03 441e 	mls	r4, r3, lr, r4
 80191c6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80191ca:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80191ce:	b2ec      	uxtb	r4, r5
 80191d0:	2d09      	cmp	r5, #9
 80191d2:	bfd4      	ite	le
 80191d4:	3430      	addle	r4, #48	; 0x30
 80191d6:	3457      	addgt	r4, #87	; 0x57
 80191d8:	b2e4      	uxtb	r4, r4
 80191da:	f80c 4006 	strb.w	r4, [ip, r6]
 80191de:	4674      	mov	r4, lr
 80191e0:	1e71      	subs	r1, r6, #1
 80191e2:	b96c      	cbnz	r4, 8019200 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80191e4:	2f00      	cmp	r7, #0
 80191e6:	da05      	bge.n	80191f4 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80191e8:	ab0a      	add	r3, sp, #40	; 0x28
 80191ea:	4419      	add	r1, r3
 80191ec:	232d      	movs	r3, #45	; 0x2d
 80191ee:	f801 3c24 	strb.w	r3, [r1, #-36]
 80191f2:	1eb1      	subs	r1, r6, #2
 80191f4:	3101      	adds	r1, #1
 80191f6:	4461      	add	r1, ip
 80191f8:	f7ff ffa3 	bl	8019142 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80191fc:	b00b      	add	sp, #44	; 0x2c
 80191fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019200:	460e      	mov	r6, r1
 8019202:	e7dc      	b.n	80191be <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08019204 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019208:	4691      	mov	r9, r2
 801920a:	b085      	sub	sp, #20
 801920c:	6802      	ldr	r2, [r0, #0]
 801920e:	9201      	str	r2, [sp, #4]
 8019210:	4688      	mov	r8, r1
 8019212:	4683      	mov	fp, r0
 8019214:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019218:	9103      	str	r1, [sp, #12]
 801921a:	4610      	mov	r0, r2
 801921c:	461c      	mov	r4, r3
 801921e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8019222:	9302      	str	r3, [sp, #8]
 8019224:	f7ff ff80 	bl	8019128 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019228:	f1b8 0f00 	cmp.w	r8, #0
 801922c:	bf0c      	ite	eq
 801922e:	4684      	moveq	ip, r0
 8019230:	f100 0c01 	addne.w	ip, r0, #1
 8019234:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019238:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801923c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801923e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019240:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019244:	9903      	ldr	r1, [sp, #12]
 8019246:	fa1f fc8c 	uxth.w	ip, ip
 801924a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801924e:	d041      	beq.n	80192d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019250:	d834      	bhi.n	80192bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019252:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019256:	d059      	beq.n	801930c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019258:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801925c:	d03a      	beq.n	80192d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801925e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8019262:	d034      	beq.n	80192ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019264:	2400      	movs	r4, #0
 8019266:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801926a:	3a01      	subs	r2, #1
 801926c:	b169      	cbz	r1, 801928a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801926e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019270:	458c      	cmp	ip, r1
 8019272:	da09      	bge.n	8019288 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019274:	eba1 010c 	sub.w	r1, r1, ip
 8019278:	b289      	uxth	r1, r1
 801927a:	b933      	cbnz	r3, 801928a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801927c:	2e00      	cmp	r6, #0
 801927e:	d051      	beq.n	8019324 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019280:	2800      	cmp	r0, #0
 8019282:	d04f      	beq.n	8019324 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019284:	440c      	add	r4, r1
 8019286:	b2a4      	uxth	r4, r4
 8019288:	2100      	movs	r1, #0
 801928a:	682b      	ldr	r3, [r5, #0]
 801928c:	4293      	cmp	r3, r2
 801928e:	da07      	bge.n	80192a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019290:	f1b8 0f00 	cmp.w	r8, #0
 8019294:	d004      	beq.n	80192a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019296:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801929a:	682b      	ldr	r3, [r5, #0]
 801929c:	3301      	adds	r3, #1
 801929e:	602b      	str	r3, [r5, #0]
 80192a0:	2730      	movs	r7, #48	; 0x30
 80192a2:	2c00      	cmp	r4, #0
 80192a4:	d04e      	beq.n	8019344 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80192a6:	682e      	ldr	r6, [r5, #0]
 80192a8:	3c01      	subs	r4, #1
 80192aa:	42b2      	cmp	r2, r6
 80192ac:	b2a4      	uxth	r4, r4
 80192ae:	dd49      	ble.n	8019344 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80192b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80192b4:	682b      	ldr	r3, [r5, #0]
 80192b6:	3301      	adds	r3, #1
 80192b8:	602b      	str	r3, [r5, #0]
 80192ba:	e7f2      	b.n	80192a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80192bc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80192c0:	d01d      	beq.n	80192fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80192c2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80192c6:	d002      	beq.n	80192ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80192c8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80192cc:	e7c9      	b.n	8019262 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80192ce:	4684      	mov	ip, r0
 80192d0:	f04f 0800 	mov.w	r8, #0
 80192d4:	2c00      	cmp	r4, #0
 80192d6:	d0c6      	beq.n	8019266 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80192d8:	b947      	cbnz	r7, 80192ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80192da:	2801      	cmp	r0, #1
 80192dc:	d106      	bne.n	80192ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80192de:	8814      	ldrh	r4, [r2, #0]
 80192e0:	2c30      	cmp	r4, #48	; 0x30
 80192e2:	bf02      	ittt	eq
 80192e4:	3202      	addeq	r2, #2
 80192e6:	f8cb 2000 	streq.w	r2, [fp]
 80192ea:	4638      	moveq	r0, r7
 80192ec:	45bc      	cmp	ip, r7
 80192ee:	da14      	bge.n	801931a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80192f0:	b2bf      	uxth	r7, r7
 80192f2:	eba7 040c 	sub.w	r4, r7, ip
 80192f6:	b2a4      	uxth	r4, r4
 80192f8:	46bc      	mov	ip, r7
 80192fa:	2600      	movs	r6, #0
 80192fc:	e7b3      	b.n	8019266 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80192fe:	4684      	mov	ip, r0
 8019300:	b16c      	cbz	r4, 801931e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019302:	42b8      	cmp	r0, r7
 8019304:	dd00      	ble.n	8019308 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019306:	b2b8      	uxth	r0, r7
 8019308:	2400      	movs	r4, #0
 801930a:	e003      	b.n	8019314 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801930c:	f04f 0c01 	mov.w	ip, #1
 8019310:	2400      	movs	r4, #0
 8019312:	4660      	mov	r0, ip
 8019314:	4626      	mov	r6, r4
 8019316:	46a0      	mov	r8, r4
 8019318:	e7a5      	b.n	8019266 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801931a:	2400      	movs	r4, #0
 801931c:	e7ed      	b.n	80192fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801931e:	4626      	mov	r6, r4
 8019320:	46a0      	mov	r8, r4
 8019322:	e7a0      	b.n	8019266 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019324:	2900      	cmp	r1, #0
 8019326:	d0b0      	beq.n	801928a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019328:	2720      	movs	r7, #32
 801932a:	682e      	ldr	r6, [r5, #0]
 801932c:	2900      	cmp	r1, #0
 801932e:	d0ac      	beq.n	801928a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019330:	3901      	subs	r1, #1
 8019332:	4296      	cmp	r6, r2
 8019334:	b289      	uxth	r1, r1
 8019336:	daa7      	bge.n	8019288 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019338:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801933c:	682b      	ldr	r3, [r5, #0]
 801933e:	3301      	adds	r3, #1
 8019340:	602b      	str	r3, [r5, #0]
 8019342:	e7f2      	b.n	801932a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019344:	b188      	cbz	r0, 801936a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019346:	682b      	ldr	r3, [r5, #0]
 8019348:	3801      	subs	r0, #1
 801934a:	429a      	cmp	r2, r3
 801934c:	b280      	uxth	r0, r0
 801934e:	dd0c      	ble.n	801936a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019350:	f8db 3000 	ldr.w	r3, [fp]
 8019354:	1c9c      	adds	r4, r3, #2
 8019356:	f8cb 4000 	str.w	r4, [fp]
 801935a:	881c      	ldrh	r4, [r3, #0]
 801935c:	682b      	ldr	r3, [r5, #0]
 801935e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019362:	682b      	ldr	r3, [r5, #0]
 8019364:	3301      	adds	r3, #1
 8019366:	602b      	str	r3, [r5, #0]
 8019368:	e7ec      	b.n	8019344 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801936a:	2620      	movs	r6, #32
 801936c:	b151      	cbz	r1, 8019384 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801936e:	6828      	ldr	r0, [r5, #0]
 8019370:	3901      	subs	r1, #1
 8019372:	4282      	cmp	r2, r0
 8019374:	b289      	uxth	r1, r1
 8019376:	dd05      	ble.n	8019384 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019378:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801937c:	682b      	ldr	r3, [r5, #0]
 801937e:	3301      	adds	r3, #1
 8019380:	602b      	str	r3, [r5, #0]
 8019382:	e7f3      	b.n	801936c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019384:	b005      	add	sp, #20
 8019386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801938a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801938a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801938e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019392:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019396:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801939a:	2400      	movs	r4, #0
 801939c:	8014      	strh	r4, [r2, #0]
 801939e:	701c      	strb	r4, [r3, #0]
 80193a0:	f888 4000 	strb.w	r4, [r8]
 80193a4:	f88c 4000 	strb.w	r4, [ip]
 80193a8:	f88e 4000 	strb.w	r4, [lr]
 80193ac:	703c      	strb	r4, [r7, #0]
 80193ae:	6804      	ldr	r4, [r0, #0]
 80193b0:	b1a4      	cbz	r4, 80193dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80193b2:	8824      	ldrh	r4, [r4, #0]
 80193b4:	f04f 0901 	mov.w	r9, #1
 80193b8:	b314      	cbz	r4, 8019400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80193ba:	2c2b      	cmp	r4, #43	; 0x2b
 80193bc:	d001      	beq.n	80193c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80193be:	2c20      	cmp	r4, #32
 80193c0:	d110      	bne.n	80193e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80193c2:	8014      	strh	r4, [r2, #0]
 80193c4:	6804      	ldr	r4, [r0, #0]
 80193c6:	b10c      	cbz	r4, 80193cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80193c8:	3402      	adds	r4, #2
 80193ca:	6004      	str	r4, [r0, #0]
 80193cc:	680c      	ldr	r4, [r1, #0]
 80193ce:	b10c      	cbz	r4, 80193d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80193d0:	3401      	adds	r4, #1
 80193d2:	600c      	str	r4, [r1, #0]
 80193d4:	6804      	ldr	r4, [r0, #0]
 80193d6:	b17c      	cbz	r4, 80193f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80193d8:	8824      	ldrh	r4, [r4, #0]
 80193da:	e7ed      	b.n	80193b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80193dc:	680c      	ldr	r4, [r1, #0]
 80193de:	b17c      	cbz	r4, 8019400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80193e0:	7824      	ldrb	r4, [r4, #0]
 80193e2:	e7e7      	b.n	80193b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80193e4:	2c2d      	cmp	r4, #45	; 0x2d
 80193e6:	d102      	bne.n	80193ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80193e8:	f883 9000 	strb.w	r9, [r3]
 80193ec:	e7ea      	b.n	80193c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80193ee:	2c23      	cmp	r4, #35	; 0x23
 80193f0:	d107      	bne.n	8019402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80193f2:	f888 9000 	strb.w	r9, [r8]
 80193f6:	e7e5      	b.n	80193c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80193f8:	680c      	ldr	r4, [r1, #0]
 80193fa:	b10c      	cbz	r4, 8019400 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80193fc:	7824      	ldrb	r4, [r4, #0]
 80193fe:	e7db      	b.n	80193b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019400:	2400      	movs	r4, #0
 8019402:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019406:	2b09      	cmp	r3, #9
 8019408:	d901      	bls.n	801940e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801940a:	2c2a      	cmp	r4, #42	; 0x2a
 801940c:	d122      	bne.n	8019454 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801940e:	2301      	movs	r3, #1
 8019410:	2c30      	cmp	r4, #48	; 0x30
 8019412:	f88e 3000 	strb.w	r3, [lr]
 8019416:	d10d      	bne.n	8019434 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019418:	f88c 3000 	strb.w	r3, [ip]
 801941c:	6803      	ldr	r3, [r0, #0]
 801941e:	b10b      	cbz	r3, 8019424 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019420:	3302      	adds	r3, #2
 8019422:	6003      	str	r3, [r0, #0]
 8019424:	680b      	ldr	r3, [r1, #0]
 8019426:	b10b      	cbz	r3, 801942c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019428:	3301      	adds	r3, #1
 801942a:	600b      	str	r3, [r1, #0]
 801942c:	6803      	ldr	r3, [r0, #0]
 801942e:	2b00      	cmp	r3, #0
 8019430:	d02f      	beq.n	8019492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019432:	881c      	ldrh	r4, [r3, #0]
 8019434:	2c2a      	cmp	r4, #42	; 0x2a
 8019436:	d135      	bne.n	80194a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019438:	f04f 33ff 	mov.w	r3, #4294967295
 801943c:	6033      	str	r3, [r6, #0]
 801943e:	6803      	ldr	r3, [r0, #0]
 8019440:	b10b      	cbz	r3, 8019446 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019442:	3302      	adds	r3, #2
 8019444:	6003      	str	r3, [r0, #0]
 8019446:	680b      	ldr	r3, [r1, #0]
 8019448:	b10b      	cbz	r3, 801944e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801944a:	3301      	adds	r3, #1
 801944c:	600b      	str	r3, [r1, #0]
 801944e:	6803      	ldr	r3, [r0, #0]
 8019450:	b31b      	cbz	r3, 801949a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019452:	881c      	ldrh	r4, [r3, #0]
 8019454:	2c2e      	cmp	r4, #46	; 0x2e
 8019456:	d11a      	bne.n	801948e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019458:	2301      	movs	r3, #1
 801945a:	703b      	strb	r3, [r7, #0]
 801945c:	6803      	ldr	r3, [r0, #0]
 801945e:	b10b      	cbz	r3, 8019464 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019460:	3302      	adds	r3, #2
 8019462:	6003      	str	r3, [r0, #0]
 8019464:	680b      	ldr	r3, [r1, #0]
 8019466:	b10b      	cbz	r3, 801946c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019468:	3301      	adds	r3, #1
 801946a:	600b      	str	r3, [r1, #0]
 801946c:	6803      	ldr	r3, [r0, #0]
 801946e:	2b00      	cmp	r3, #0
 8019470:	d036      	beq.n	80194e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019472:	881b      	ldrh	r3, [r3, #0]
 8019474:	2b2a      	cmp	r3, #42	; 0x2a
 8019476:	d137      	bne.n	80194e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019478:	f04f 33ff 	mov.w	r3, #4294967295
 801947c:	602b      	str	r3, [r5, #0]
 801947e:	6803      	ldr	r3, [r0, #0]
 8019480:	b10b      	cbz	r3, 8019486 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019482:	3302      	adds	r3, #2
 8019484:	6003      	str	r3, [r0, #0]
 8019486:	680b      	ldr	r3, [r1, #0]
 8019488:	b10b      	cbz	r3, 801948e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801948a:	3301      	adds	r3, #1
 801948c:	600b      	str	r3, [r1, #0]
 801948e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019492:	680c      	ldr	r4, [r1, #0]
 8019494:	b134      	cbz	r4, 80194a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019496:	7824      	ldrb	r4, [r4, #0]
 8019498:	e7cc      	b.n	8019434 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801949a:	680b      	ldr	r3, [r1, #0]
 801949c:	2b00      	cmp	r3, #0
 801949e:	d0f6      	beq.n	801948e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80194a0:	781c      	ldrb	r4, [r3, #0]
 80194a2:	e7d7      	b.n	8019454 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80194a4:	2300      	movs	r3, #0
 80194a6:	6033      	str	r3, [r6, #0]
 80194a8:	220a      	movs	r2, #10
 80194aa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80194ae:	fa1f f38c 	uxth.w	r3, ip
 80194b2:	2b09      	cmp	r3, #9
 80194b4:	d8ce      	bhi.n	8019454 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80194b6:	6833      	ldr	r3, [r6, #0]
 80194b8:	fb02 c303 	mla	r3, r2, r3, ip
 80194bc:	6033      	str	r3, [r6, #0]
 80194be:	6803      	ldr	r3, [r0, #0]
 80194c0:	b10b      	cbz	r3, 80194c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80194c2:	3302      	adds	r3, #2
 80194c4:	6003      	str	r3, [r0, #0]
 80194c6:	680b      	ldr	r3, [r1, #0]
 80194c8:	b10b      	cbz	r3, 80194ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80194ca:	3301      	adds	r3, #1
 80194cc:	600b      	str	r3, [r1, #0]
 80194ce:	6803      	ldr	r3, [r0, #0]
 80194d0:	b10b      	cbz	r3, 80194d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80194d2:	881c      	ldrh	r4, [r3, #0]
 80194d4:	e7e9      	b.n	80194aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80194d6:	680c      	ldr	r4, [r1, #0]
 80194d8:	2c00      	cmp	r4, #0
 80194da:	d0e6      	beq.n	80194aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80194dc:	7824      	ldrb	r4, [r4, #0]
 80194de:	e7e4      	b.n	80194aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80194e0:	680b      	ldr	r3, [r1, #0]
 80194e2:	b10b      	cbz	r3, 80194e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80194e4:	781b      	ldrb	r3, [r3, #0]
 80194e6:	e7c5      	b.n	8019474 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80194e8:	2200      	movs	r2, #0
 80194ea:	602a      	str	r2, [r5, #0]
 80194ec:	240a      	movs	r4, #10
 80194ee:	3b30      	subs	r3, #48	; 0x30
 80194f0:	b29e      	uxth	r6, r3
 80194f2:	2e09      	cmp	r6, #9
 80194f4:	682a      	ldr	r2, [r5, #0]
 80194f6:	d813      	bhi.n	8019520 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80194f8:	fb04 3302 	mla	r3, r4, r2, r3
 80194fc:	602b      	str	r3, [r5, #0]
 80194fe:	6803      	ldr	r3, [r0, #0]
 8019500:	b10b      	cbz	r3, 8019506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019502:	3302      	adds	r3, #2
 8019504:	6003      	str	r3, [r0, #0]
 8019506:	680b      	ldr	r3, [r1, #0]
 8019508:	b10b      	cbz	r3, 801950e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801950a:	3301      	adds	r3, #1
 801950c:	600b      	str	r3, [r1, #0]
 801950e:	6803      	ldr	r3, [r0, #0]
 8019510:	b10b      	cbz	r3, 8019516 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019512:	881b      	ldrh	r3, [r3, #0]
 8019514:	e7eb      	b.n	80194ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019516:	680b      	ldr	r3, [r1, #0]
 8019518:	2b00      	cmp	r3, #0
 801951a:	d0e8      	beq.n	80194ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801951c:	781b      	ldrb	r3, [r3, #0]
 801951e:	e7e6      	b.n	80194ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019520:	2a06      	cmp	r2, #6
 8019522:	bfa8      	it	ge
 8019524:	2206      	movge	r2, #6
 8019526:	602a      	str	r2, [r5, #0]
 8019528:	e7b1      	b.n	801948e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801952a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801952a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801952e:	b0a3      	sub	sp, #140	; 0x8c
 8019530:	2600      	movs	r6, #0
 8019532:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019536:	4607      	mov	r7, r0
 8019538:	4688      	mov	r8, r1
 801953a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801953e:	4631      	mov	r1, r6
 8019540:	2242      	movs	r2, #66	; 0x42
 8019542:	4648      	mov	r0, r9
 8019544:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019546:	960d      	str	r6, [sp, #52]	; 0x34
 8019548:	f00e f938 	bl	80277bc <memset>
 801954c:	b15f      	cbz	r7, 8019566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801954e:	f108 3aff 	add.w	sl, r8, #4294967295
 8019552:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019554:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019556:	b152      	cbz	r2, 801956e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019558:	8812      	ldrh	r2, [r2, #0]
 801955a:	b10a      	cbz	r2, 8019560 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801955c:	459a      	cmp	sl, r3
 801955e:	dc2e      	bgt.n	80195be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019560:	2200      	movs	r2, #0
 8019562:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019566:	4638      	mov	r0, r7
 8019568:	b023      	add	sp, #140	; 0x8c
 801956a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801956e:	9a08      	ldr	r2, [sp, #32]
 8019570:	2a00      	cmp	r2, #0
 8019572:	d0f5      	beq.n	8019560 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019574:	7812      	ldrb	r2, [r2, #0]
 8019576:	e7f0      	b.n	801955a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019578:	2d00      	cmp	r5, #0
 801957a:	d0ea      	beq.n	8019552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801957c:	782a      	ldrb	r2, [r5, #0]
 801957e:	b142      	cbz	r2, 8019592 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019580:	2a25      	cmp	r2, #37	; 0x25
 8019582:	d001      	beq.n	8019588 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019584:	459a      	cmp	sl, r3
 8019586:	dc08      	bgt.n	801959a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019588:	f1bb 0f00 	cmp.w	fp, #0
 801958c:	d121      	bne.n	80195d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801958e:	2d00      	cmp	r5, #0
 8019590:	d0df      	beq.n	8019552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019592:	782a      	ldrb	r2, [r5, #0]
 8019594:	f04f 0b00 	mov.w	fp, #0
 8019598:	e01d      	b.n	80195d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801959a:	f1bb 0f00 	cmp.w	fp, #0
 801959e:	d078      	beq.n	8019692 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80195a0:	f8bb 2000 	ldrh.w	r2, [fp]
 80195a4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80195a8:	f1bb 0f00 	cmp.w	fp, #0
 80195ac:	d002      	beq.n	80195b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80195ae:	f10b 0202 	add.w	r2, fp, #2
 80195b2:	9209      	str	r2, [sp, #36]	; 0x24
 80195b4:	b10d      	cbz	r5, 80195ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80195b6:	3501      	adds	r5, #1
 80195b8:	9508      	str	r5, [sp, #32]
 80195ba:	3301      	adds	r3, #1
 80195bc:	930d      	str	r3, [sp, #52]	; 0x34
 80195be:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80195c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80195c4:	f1bb 0f00 	cmp.w	fp, #0
 80195c8:	d0d6      	beq.n	8019578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80195ca:	f8bb 2000 	ldrh.w	r2, [fp]
 80195ce:	2a00      	cmp	r2, #0
 80195d0:	d1d6      	bne.n	8019580 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80195d2:	f8bb 2000 	ldrh.w	r2, [fp]
 80195d6:	2a00      	cmp	r2, #0
 80195d8:	d0bb      	beq.n	8019552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80195da:	459a      	cmp	sl, r3
 80195dc:	ddb9      	ble.n	8019552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80195de:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80195e2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80195e6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80195ea:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80195ee:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80195f2:	960e      	str	r6, [sp, #56]	; 0x38
 80195f4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80195f8:	960f      	str	r6, [sp, #60]	; 0x3c
 80195fa:	f1bb 0f00 	cmp.w	fp, #0
 80195fe:	d002      	beq.n	8019606 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019600:	f10b 0302 	add.w	r3, fp, #2
 8019604:	9309      	str	r3, [sp, #36]	; 0x24
 8019606:	b10d      	cbz	r5, 801960c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019608:	1c6b      	adds	r3, r5, #1
 801960a:	9308      	str	r3, [sp, #32]
 801960c:	ab0f      	add	r3, sp, #60	; 0x3c
 801960e:	9305      	str	r3, [sp, #20]
 8019610:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019614:	9304      	str	r3, [sp, #16]
 8019616:	ab0e      	add	r3, sp, #56	; 0x38
 8019618:	9303      	str	r3, [sp, #12]
 801961a:	ab0c      	add	r3, sp, #48	; 0x30
 801961c:	9302      	str	r3, [sp, #8]
 801961e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019622:	9301      	str	r3, [sp, #4]
 8019624:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019628:	9300      	str	r3, [sp, #0]
 801962a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801962e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019632:	a908      	add	r1, sp, #32
 8019634:	a809      	add	r0, sp, #36	; 0x24
 8019636:	f7ff fea8 	bl	801938a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801963a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801963c:	2b00      	cmp	r3, #0
 801963e:	bfbe      	ittt	lt
 8019640:	6823      	ldrlt	r3, [r4, #0]
 8019642:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019646:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019648:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801964a:	bfb8      	it	lt
 801964c:	3404      	addlt	r4, #4
 801964e:	2b00      	cmp	r3, #0
 8019650:	bfb8      	it	lt
 8019652:	6823      	ldrlt	r3, [r4, #0]
 8019654:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019658:	bfbe      	ittt	lt
 801965a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801965e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019660:	3404      	addlt	r4, #4
 8019662:	b1d9      	cbz	r1, 801969c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019664:	880b      	ldrh	r3, [r1, #0]
 8019666:	2b69      	cmp	r3, #105	; 0x69
 8019668:	d01f      	beq.n	80196aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801966a:	d82f      	bhi.n	80196cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801966c:	2b58      	cmp	r3, #88	; 0x58
 801966e:	d01c      	beq.n	80196aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019670:	d818      	bhi.n	80196a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019672:	2b25      	cmp	r3, #37	; 0x25
 8019674:	d034      	beq.n	80196e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019676:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801967a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801967c:	f1bb 0f00 	cmp.w	fp, #0
 8019680:	f000 80b8 	beq.w	80197f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019684:	f8bb 5000 	ldrh.w	r5, [fp]
 8019688:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801968c:	3301      	adds	r3, #1
 801968e:	930d      	str	r3, [sp, #52]	; 0x34
 8019690:	e029      	b.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019692:	b10d      	cbz	r5, 8019698 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019694:	782a      	ldrb	r2, [r5, #0]
 8019696:	e785      	b.n	80195a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019698:	462a      	mov	r2, r5
 801969a:	e783      	b.n	80195a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801969c:	2a00      	cmp	r2, #0
 801969e:	d0ea      	beq.n	8019676 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80196a0:	7813      	ldrb	r3, [r2, #0]
 80196a2:	e7e0      	b.n	8019666 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80196a4:	3b63      	subs	r3, #99	; 0x63
 80196a6:	2b01      	cmp	r3, #1
 80196a8:	d8e5      	bhi.n	8019676 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80196aa:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80196ae:	b329      	cbz	r1, 80196fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80196b0:	880b      	ldrh	r3, [r1, #0]
 80196b2:	2b69      	cmp	r3, #105	; 0x69
 80196b4:	d063      	beq.n	801977e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80196b6:	d825      	bhi.n	8019704 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80196b8:	2b63      	cmp	r3, #99	; 0x63
 80196ba:	d038      	beq.n	801972e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80196bc:	2b64      	cmp	r3, #100	; 0x64
 80196be:	d05e      	beq.n	801977e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80196c0:	2b58      	cmp	r3, #88	; 0x58
 80196c2:	d07b      	beq.n	80197bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80196c4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80196c8:	4625      	mov	r5, r4
 80196ca:	e036      	b.n	801973a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80196cc:	2b73      	cmp	r3, #115	; 0x73
 80196ce:	d0ec      	beq.n	80196aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80196d0:	d802      	bhi.n	80196d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80196d2:	2b6f      	cmp	r3, #111	; 0x6f
 80196d4:	d1cf      	bne.n	8019676 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80196d6:	e7e8      	b.n	80196aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80196d8:	2b75      	cmp	r3, #117	; 0x75
 80196da:	d0e6      	beq.n	80196aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80196dc:	2b78      	cmp	r3, #120	; 0x78
 80196de:	e7f9      	b.n	80196d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80196e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80196e2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80196e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196e8:	b10b      	cbz	r3, 80196ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80196ea:	3302      	adds	r3, #2
 80196ec:	9309      	str	r3, [sp, #36]	; 0x24
 80196ee:	9b08      	ldr	r3, [sp, #32]
 80196f0:	2b00      	cmp	r3, #0
 80196f2:	f43f af2e 	beq.w	8019552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196f6:	3301      	adds	r3, #1
 80196f8:	9308      	str	r3, [sp, #32]
 80196fa:	e72a      	b.n	8019552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80196fc:	2a00      	cmp	r2, #0
 80196fe:	d0e1      	beq.n	80196c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019700:	7813      	ldrb	r3, [r2, #0]
 8019702:	e7d6      	b.n	80196b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019704:	2b73      	cmp	r3, #115	; 0x73
 8019706:	d036      	beq.n	8019776 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019708:	d807      	bhi.n	801971a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801970a:	2b6f      	cmp	r3, #111	; 0x6f
 801970c:	d1da      	bne.n	80196c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801970e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019710:	1d25      	adds	r5, r4, #4
 8019712:	eba8 0202 	sub.w	r2, r8, r2
 8019716:	2308      	movs	r3, #8
 8019718:	e04a      	b.n	80197b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801971a:	2b75      	cmp	r3, #117	; 0x75
 801971c:	d043      	beq.n	80197a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801971e:	2b78      	cmp	r3, #120	; 0x78
 8019720:	d1d0      	bne.n	80196c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019722:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019724:	1d25      	adds	r5, r4, #4
 8019726:	eba8 0202 	sub.w	r2, r8, r2
 801972a:	2310      	movs	r3, #16
 801972c:	e040      	b.n	80197b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801972e:	7823      	ldrb	r3, [r4, #0]
 8019730:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019734:	1d25      	adds	r5, r4, #4
 8019736:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801973a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801973c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019740:	2b00      	cmp	r3, #0
 8019742:	d052      	beq.n	80197ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019744:	881a      	ldrh	r2, [r3, #0]
 8019746:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801974a:	a80d      	add	r0, sp, #52	; 0x34
 801974c:	9005      	str	r0, [sp, #20]
 801974e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019752:	9004      	str	r0, [sp, #16]
 8019754:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019756:	9003      	str	r0, [sp, #12]
 8019758:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801975c:	9002      	str	r0, [sp, #8]
 801975e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019760:	9001      	str	r0, [sp, #4]
 8019762:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019766:	9000      	str	r0, [sp, #0]
 8019768:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801976c:	a810      	add	r0, sp, #64	; 0x40
 801976e:	f7ff fd49 	bl	8019204 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019772:	462c      	mov	r4, r5
 8019774:	e7b7      	b.n	80196e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019776:	6823      	ldr	r3, [r4, #0]
 8019778:	1d25      	adds	r5, r4, #4
 801977a:	9310      	str	r3, [sp, #64]	; 0x40
 801977c:	e7dd      	b.n	801973a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801977e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019780:	6820      	ldr	r0, [r4, #0]
 8019782:	eba8 0202 	sub.w	r2, r8, r2
 8019786:	230a      	movs	r3, #10
 8019788:	b292      	uxth	r2, r2
 801978a:	4649      	mov	r1, r9
 801978c:	f7ff fd08 	bl	80191a0 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019790:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019794:	2b2d      	cmp	r3, #45	; 0x2d
 8019796:	f104 0504 	add.w	r5, r4, #4
 801979a:	d1ce      	bne.n	801973a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801979c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80197a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197a2:	3302      	adds	r3, #2
 80197a4:	e7e9      	b.n	801977a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80197a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80197a8:	1d25      	adds	r5, r4, #4
 80197aa:	eba8 0202 	sub.w	r2, r8, r2
 80197ae:	230a      	movs	r3, #10
 80197b0:	b292      	uxth	r2, r2
 80197b2:	4649      	mov	r1, r9
 80197b4:	6820      	ldr	r0, [r4, #0]
 80197b6:	f7ff fcd5 	bl	8019164 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80197ba:	e7be      	b.n	801973a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80197bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80197be:	6820      	ldr	r0, [r4, #0]
 80197c0:	eba8 0202 	sub.w	r2, r8, r2
 80197c4:	b292      	uxth	r2, r2
 80197c6:	2310      	movs	r3, #16
 80197c8:	4649      	mov	r1, r9
 80197ca:	f7ff fccb 	bl	8019164 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80197ce:	1d25      	adds	r5, r4, #4
 80197d0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80197d4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80197d8:	2b00      	cmp	r3, #0
 80197da:	d0ae      	beq.n	801973a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80197dc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80197e0:	2919      	cmp	r1, #25
 80197e2:	d8f7      	bhi.n	80197d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80197e4:	3b20      	subs	r3, #32
 80197e6:	8013      	strh	r3, [r2, #0]
 80197e8:	e7f4      	b.n	80197d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80197ea:	9a08      	ldr	r2, [sp, #32]
 80197ec:	2a00      	cmp	r2, #0
 80197ee:	d0aa      	beq.n	8019746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80197f0:	7812      	ldrb	r2, [r2, #0]
 80197f2:	e7a8      	b.n	8019746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80197f4:	2d00      	cmp	r5, #0
 80197f6:	f43f af47 	beq.w	8019688 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80197fa:	782d      	ldrb	r5, [r5, #0]
 80197fc:	e744      	b.n	8019688 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080197fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>:
 80197fe:	b507      	push	{r0, r1, r2, lr}
 8019800:	9300      	str	r3, [sp, #0]
 8019802:	2300      	movs	r3, #0
 8019804:	f7ff fe91 	bl	801952a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019808:	b003      	add	sp, #12
 801980a:	f85d fb04 	ldr.w	pc, [sp], #4

0801980e <_ZN8touchgfx7Unicode8snprintfEPttPKtz>:
 801980e:	b40c      	push	{r2, r3}
 8019810:	b507      	push	{r0, r1, r2, lr}
 8019812:	ab04      	add	r3, sp, #16
 8019814:	f853 2b04 	ldr.w	r2, [r3], #4
 8019818:	9301      	str	r3, [sp, #4]
 801981a:	f7ff fff0 	bl	80197fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>
 801981e:	b003      	add	sp, #12
 8019820:	f85d eb04 	ldr.w	lr, [sp], #4
 8019824:	b002      	add	sp, #8
 8019826:	4770      	bx	lr

08019828 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019828:	b507      	push	{r0, r1, r2, lr}
 801982a:	9300      	str	r3, [sp, #0]
 801982c:	4613      	mov	r3, r2
 801982e:	2200      	movs	r2, #0
 8019830:	f7ff fe7b 	bl	801952a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019834:	b003      	add	sp, #12
 8019836:	f85d fb04 	ldr.w	pc, [sp], #4

0801983a <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801983a:	b40c      	push	{r2, r3}
 801983c:	b507      	push	{r0, r1, r2, lr}
 801983e:	ab04      	add	r3, sp, #16
 8019840:	f853 2b04 	ldr.w	r2, [r3], #4
 8019844:	9301      	str	r3, [sp, #4]
 8019846:	f7ff ffef 	bl	8019828 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801984a:	b003      	add	sp, #12
 801984c:	f85d eb04 	ldr.w	lr, [sp], #4
 8019850:	b002      	add	sp, #8
 8019852:	4770      	bx	lr

08019854 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019854:	4b01      	ldr	r3, [pc, #4]	; (801985c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019856:	6018      	str	r0, [r3, #0]
 8019858:	4770      	bx	lr
 801985a:	bf00      	nop
 801985c:	20014c8c 	.word	0x20014c8c

08019860 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019860:	4b06      	ldr	r3, [pc, #24]	; (801987c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019862:	881a      	ldrh	r2, [r3, #0]
 8019864:	4282      	cmp	r2, r0
 8019866:	d807      	bhi.n	8019878 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019868:	4b05      	ldr	r3, [pc, #20]	; (8019880 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801986a:	881b      	ldrh	r3, [r3, #0]
 801986c:	4413      	add	r3, r2
 801986e:	4298      	cmp	r0, r3
 8019870:	bfac      	ite	ge
 8019872:	2000      	movge	r0, #0
 8019874:	2001      	movlt	r0, #1
 8019876:	4770      	bx	lr
 8019878:	2000      	movs	r0, #0
 801987a:	4770      	bx	lr
 801987c:	20014cac 	.word	0x20014cac
 8019880:	20014cb0 	.word	0x20014cb0

08019884 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019884:	b508      	push	{r3, lr}
 8019886:	4601      	mov	r1, r0
 8019888:	f7ff ffea 	bl	8019860 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801988c:	b118      	cbz	r0, 8019896 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801988e:	4b02      	ldr	r3, [pc, #8]	; (8019898 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019890:	681b      	ldr	r3, [r3, #0]
 8019892:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019896:	bd08      	pop	{r3, pc}
 8019898:	20014c90 	.word	0x20014c90

0801989c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801989c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801989e:	4c24      	ldr	r4, [pc, #144]	; (8019930 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80198a0:	6823      	ldr	r3, [r4, #0]
 80198a2:	2b00      	cmp	r3, #0
 80198a4:	d042      	beq.n	801992c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80198a6:	4a23      	ldr	r2, [pc, #140]	; (8019934 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80198a8:	4d23      	ldr	r5, [pc, #140]	; (8019938 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80198aa:	8811      	ldrh	r1, [r2, #0]
 80198ac:	f8b5 c000 	ldrh.w	ip, [r5]
 80198b0:	4822      	ldr	r0, [pc, #136]	; (801993c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80198b2:	4461      	add	r1, ip
 80198b4:	1c4a      	adds	r2, r1, #1
 80198b6:	f022 0201 	bic.w	r2, r2, #1
 80198ba:	008f      	lsls	r7, r1, #2
 80198bc:	0412      	lsls	r2, r2, #16
 80198be:	19de      	adds	r6, r3, r7
 80198c0:	0c12      	lsrs	r2, r2, #16
 80198c2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80198c6:	6006      	str	r6, [r0, #0]
 80198c8:	4e1d      	ldr	r6, [pc, #116]	; (8019940 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80198ca:	19da      	adds	r2, r3, r7
 80198cc:	6032      	str	r2, [r6, #0]
 80198ce:	220e      	movs	r2, #14
 80198d0:	fb02 f20c 	mul.w	r2, r2, ip
 80198d4:	3203      	adds	r2, #3
 80198d6:	f022 0203 	bic.w	r2, r2, #3
 80198da:	443a      	add	r2, r7
 80198dc:	4f19      	ldr	r7, [pc, #100]	; (8019944 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80198de:	4413      	add	r3, r2
 80198e0:	603b      	str	r3, [r7, #0]
 80198e2:	4f19      	ldr	r7, [pc, #100]	; (8019948 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80198e4:	2300      	movs	r3, #0
 80198e6:	803b      	strh	r3, [r7, #0]
 80198e8:	4f18      	ldr	r7, [pc, #96]	; (801994c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80198ea:	683f      	ldr	r7, [r7, #0]
 80198ec:	1aba      	subs	r2, r7, r2
 80198ee:	4f18      	ldr	r7, [pc, #96]	; (8019950 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80198f0:	603a      	str	r2, [r7, #0]
 80198f2:	4a18      	ldr	r2, [pc, #96]	; (8019954 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80198f4:	469c      	mov	ip, r3
 80198f6:	8013      	strh	r3, [r2, #0]
 80198f8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80198fc:	428b      	cmp	r3, r1
 80198fe:	d10d      	bne.n	801991c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019900:	882d      	ldrh	r5, [r5, #0]
 8019902:	6830      	ldr	r0, [r6, #0]
 8019904:	2300      	movs	r3, #0
 8019906:	240e      	movs	r4, #14
 8019908:	429d      	cmp	r5, r3
 801990a:	d90f      	bls.n	801992c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801990c:	fb04 0203 	mla	r2, r4, r3, r0
 8019910:	3301      	adds	r3, #1
 8019912:	7b11      	ldrb	r1, [r2, #12]
 8019914:	f36f 1145 	bfc	r1, #5, #1
 8019918:	7311      	strb	r1, [r2, #12]
 801991a:	e7f5      	b.n	8019908 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801991c:	6822      	ldr	r2, [r4, #0]
 801991e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019922:	6802      	ldr	r2, [r0, #0]
 8019924:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019928:	3301      	adds	r3, #1
 801992a:	e7e7      	b.n	80198fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801992c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801992e:	bf00      	nop
 8019930:	20014c90 	.word	0x20014c90
 8019934:	20014cac 	.word	0x20014cac
 8019938:	20014cb0 	.word	0x20014cb0
 801993c:	20014ca4 	.word	0x20014ca4
 8019940:	20014c94 	.word	0x20014c94
 8019944:	20014c9c 	.word	0x20014c9c
 8019948:	20014cae 	.word	0x20014cae
 801994c:	20014c98 	.word	0x20014c98
 8019950:	20014ca8 	.word	0x20014ca8
 8019954:	20014ca0 	.word	0x20014ca0

08019958 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019958:	b510      	push	{r4, lr}
 801995a:	4b10      	ldr	r3, [pc, #64]	; (801999c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 801995c:	681b      	ldr	r3, [r3, #0]
 801995e:	b9db      	cbnz	r3, 8019998 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8019960:	b1d1      	cbz	r1, 8019998 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8019962:	4b0f      	ldr	r3, [pc, #60]	; (80199a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8019964:	801a      	strh	r2, [r3, #0]
 8019966:	4b0f      	ldr	r3, [pc, #60]	; (80199a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8019968:	881b      	ldrh	r3, [r3, #0]
 801996a:	b292      	uxth	r2, r2
 801996c:	240e      	movs	r4, #14
 801996e:	4413      	add	r3, r2
 8019970:	4362      	muls	r2, r4
 8019972:	2406      	movs	r4, #6
 8019974:	fb04 2203 	mla	r2, r4, r3, r2
 8019978:	428a      	cmp	r2, r1
 801997a:	d305      	bcc.n	8019988 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 801997c:	4b0a      	ldr	r3, [pc, #40]	; (80199a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 801997e:	4a0b      	ldr	r2, [pc, #44]	; (80199ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8019980:	480b      	ldr	r0, [pc, #44]	; (80199b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8019982:	2134      	movs	r1, #52	; 0x34
 8019984:	f00d fd94 	bl	80274b0 <__assert_func>
 8019988:	4b0a      	ldr	r3, [pc, #40]	; (80199b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801998a:	6019      	str	r1, [r3, #0]
 801998c:	4b0a      	ldr	r3, [pc, #40]	; (80199b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801998e:	6018      	str	r0, [r3, #0]
 8019990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019994:	f7ff bf82 	b.w	801989c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019998:	bd10      	pop	{r4, pc}
 801999a:	bf00      	nop
 801999c:	20014c9c 	.word	0x20014c9c
 80199a0:	20014cb0 	.word	0x20014cb0
 80199a4:	20014cac 	.word	0x20014cac
 80199a8:	0802d48a 	.word	0x0802d48a
 80199ac:	0802d4e3 	.word	0x0802d4e3
 80199b0:	0802d465 	.word	0x0802d465
 80199b4:	20014c98 	.word	0x20014c98
 80199b8:	20014c90 	.word	0x20014c90

080199bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80199bc:	b470      	push	{r4, r5, r6}
 80199be:	4c07      	ldr	r4, [pc, #28]	; (80199dc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80199c0:	6826      	ldr	r6, [r4, #0]
 80199c2:	4605      	mov	r5, r0
 80199c4:	4610      	mov	r0, r2
 80199c6:	9a03      	ldr	r2, [sp, #12]
 80199c8:	b936      	cbnz	r6, 80199d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80199ca:	6025      	str	r5, [r4, #0]
 80199cc:	4c04      	ldr	r4, [pc, #16]	; (80199e0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80199ce:	8021      	strh	r1, [r4, #0]
 80199d0:	bc70      	pop	{r4, r5, r6}
 80199d2:	4619      	mov	r1, r3
 80199d4:	f7ff bfc0 	b.w	8019958 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80199d8:	bc70      	pop	{r4, r5, r6}
 80199da:	4770      	bx	lr
 80199dc:	20014cb4 	.word	0x20014cb4
 80199e0:	20014cac 	.word	0x20014cac

080199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80199e4:	b508      	push	{r3, lr}
 80199e6:	4b17      	ldr	r3, [pc, #92]	; (8019a44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80199e8:	6819      	ldr	r1, [r3, #0]
 80199ea:	b931      	cbnz	r1, 80199fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 80199ec:	4b16      	ldr	r3, [pc, #88]	; (8019a48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80199ee:	4a17      	ldr	r2, [pc, #92]	; (8019a4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 80199f0:	4817      	ldr	r0, [pc, #92]	; (8019a50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 80199f2:	f240 4184 	movw	r1, #1156	; 0x484
 80199f6:	f00d fd5b 	bl	80274b0 <__assert_func>
 80199fa:	4a16      	ldr	r2, [pc, #88]	; (8019a54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80199fc:	8803      	ldrh	r3, [r0, #0]
 80199fe:	8812      	ldrh	r2, [r2, #0]
 8019a00:	4293      	cmp	r3, r2
 8019a02:	d204      	bcs.n	8019a0e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8019a04:	2214      	movs	r2, #20
 8019a06:	fb02 1303 	mla	r3, r2, r3, r1
 8019a0a:	8918      	ldrh	r0, [r3, #8]
 8019a0c:	bd08      	pop	{r3, pc}
 8019a0e:	4912      	ldr	r1, [pc, #72]	; (8019a58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 8019a10:	8809      	ldrh	r1, [r1, #0]
 8019a12:	4411      	add	r1, r2
 8019a14:	428b      	cmp	r3, r1
 8019a16:	da06      	bge.n	8019a26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8019a18:	1a9b      	subs	r3, r3, r2
 8019a1a:	4a10      	ldr	r2, [pc, #64]	; (8019a5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 8019a1c:	6812      	ldr	r2, [r2, #0]
 8019a1e:	210e      	movs	r1, #14
 8019a20:	fb01 2303 	mla	r3, r1, r3, r2
 8019a24:	e7f1      	b.n	8019a0a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8019a26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019a2a:	4293      	cmp	r3, r2
 8019a2c:	d107      	bne.n	8019a3e <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 8019a2e:	4b0c      	ldr	r3, [pc, #48]	; (8019a60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 8019a30:	781b      	ldrb	r3, [r3, #0]
 8019a32:	b913      	cbnz	r3, 8019a3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 8019a34:	4b0b      	ldr	r3, [pc, #44]	; (8019a64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 8019a36:	8818      	ldrh	r0, [r3, #0]
 8019a38:	e7e8      	b.n	8019a0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8019a3a:	4b0b      	ldr	r3, [pc, #44]	; (8019a68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 8019a3c:	e7fb      	b.n	8019a36 <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 8019a3e:	2000      	movs	r0, #0
 8019a40:	e7e4      	b.n	8019a0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8019a42:	bf00      	nop
 8019a44:	20014cb4 	.word	0x20014cb4
 8019a48:	0802c52a 	.word	0x0802c52a
 8019a4c:	0802d590 	.word	0x0802d590
 8019a50:	0802d465 	.word	0x0802d465
 8019a54:	20014cac 	.word	0x20014cac
 8019a58:	20014cb0 	.word	0x20014cb0
 8019a5c:	20014c94 	.word	0x20014c94
 8019a60:	20014c04 	.word	0x20014c04
 8019a64:	20014c06 	.word	0x20014c06
 8019a68:	20014c08 	.word	0x20014c08

08019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019a6c:	b508      	push	{r3, lr}
 8019a6e:	4b17      	ldr	r3, [pc, #92]	; (8019acc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8019a70:	6819      	ldr	r1, [r3, #0]
 8019a72:	b931      	cbnz	r1, 8019a82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8019a74:	4b16      	ldr	r3, [pc, #88]	; (8019ad0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019a76:	4a17      	ldr	r2, [pc, #92]	; (8019ad4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8019a78:	4817      	ldr	r0, [pc, #92]	; (8019ad8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8019a7a:	f44f 6193 	mov.w	r1, #1176	; 0x498
 8019a7e:	f00d fd17 	bl	80274b0 <__assert_func>
 8019a82:	4a16      	ldr	r2, [pc, #88]	; (8019adc <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8019a84:	8803      	ldrh	r3, [r0, #0]
 8019a86:	8812      	ldrh	r2, [r2, #0]
 8019a88:	4293      	cmp	r3, r2
 8019a8a:	d204      	bcs.n	8019a96 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8019a8c:	2214      	movs	r2, #20
 8019a8e:	fb02 1303 	mla	r3, r2, r3, r1
 8019a92:	8958      	ldrh	r0, [r3, #10]
 8019a94:	bd08      	pop	{r3, pc}
 8019a96:	4912      	ldr	r1, [pc, #72]	; (8019ae0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 8019a98:	8809      	ldrh	r1, [r1, #0]
 8019a9a:	4411      	add	r1, r2
 8019a9c:	428b      	cmp	r3, r1
 8019a9e:	da06      	bge.n	8019aae <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8019aa0:	1a9b      	subs	r3, r3, r2
 8019aa2:	4a10      	ldr	r2, [pc, #64]	; (8019ae4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 8019aa4:	6812      	ldr	r2, [r2, #0]
 8019aa6:	210e      	movs	r1, #14
 8019aa8:	fb01 2303 	mla	r3, r1, r3, r2
 8019aac:	e7f1      	b.n	8019a92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8019aae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019ab2:	4293      	cmp	r3, r2
 8019ab4:	d107      	bne.n	8019ac6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 8019ab6:	4b0c      	ldr	r3, [pc, #48]	; (8019ae8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 8019ab8:	781b      	ldrb	r3, [r3, #0]
 8019aba:	b913      	cbnz	r3, 8019ac2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 8019abc:	4b0b      	ldr	r3, [pc, #44]	; (8019aec <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 8019abe:	8818      	ldrh	r0, [r3, #0]
 8019ac0:	e7e8      	b.n	8019a94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8019ac2:	4b0b      	ldr	r3, [pc, #44]	; (8019af0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 8019ac4:	e7fb      	b.n	8019abe <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 8019ac6:	2000      	movs	r0, #0
 8019ac8:	e7e4      	b.n	8019a94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8019aca:	bf00      	nop
 8019acc:	20014cb4 	.word	0x20014cb4
 8019ad0:	0802c52a 	.word	0x0802c52a
 8019ad4:	0802d5bc 	.word	0x0802d5bc
 8019ad8:	0802d465 	.word	0x0802d465
 8019adc:	20014cac 	.word	0x20014cac
 8019ae0:	20014cb0 	.word	0x20014cb0
 8019ae4:	20014c94 	.word	0x20014c94
 8019ae8:	20014c04 	.word	0x20014c04
 8019aec:	20014c08 	.word	0x20014c08
 8019af0:	20014c06 	.word	0x20014c06

08019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019af4:	b510      	push	{r4, lr}
 8019af6:	4b23      	ldr	r3, [pc, #140]	; (8019b84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019af8:	681c      	ldr	r4, [r3, #0]
 8019afa:	b934      	cbnz	r4, 8019b0a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8019afc:	4b22      	ldr	r3, [pc, #136]	; (8019b88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019afe:	4a23      	ldr	r2, [pc, #140]	; (8019b8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8019b00:	4823      	ldr	r0, [pc, #140]	; (8019b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8019b02:	f240 41ac 	movw	r1, #1196	; 0x4ac
 8019b06:	f00d fcd3 	bl	80274b0 <__assert_func>
 8019b0a:	4a22      	ldr	r2, [pc, #136]	; (8019b94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8019b0c:	880b      	ldrh	r3, [r1, #0]
 8019b0e:	8812      	ldrh	r2, [r2, #0]
 8019b10:	4293      	cmp	r3, r2
 8019b12:	d211      	bcs.n	8019b38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8019b14:	2214      	movs	r2, #20
 8019b16:	fb02 4303 	mla	r3, r2, r3, r4
 8019b1a:	8a1a      	ldrh	r2, [r3, #16]
 8019b1c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019b20:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019b24:	8a5b      	ldrh	r3, [r3, #18]
 8019b26:	8004      	strh	r4, [r0, #0]
 8019b28:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019b2c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019b30:	8041      	strh	r1, [r0, #2]
 8019b32:	8082      	strh	r2, [r0, #4]
 8019b34:	80c3      	strh	r3, [r0, #6]
 8019b36:	e00e      	b.n	8019b56 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8019b38:	4917      	ldr	r1, [pc, #92]	; (8019b98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8019b3a:	8809      	ldrh	r1, [r1, #0]
 8019b3c:	4411      	add	r1, r2
 8019b3e:	428b      	cmp	r3, r1
 8019b40:	da0a      	bge.n	8019b58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8019b42:	1a9b      	subs	r3, r3, r2
 8019b44:	4a15      	ldr	r2, [pc, #84]	; (8019b9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8019b46:	6812      	ldr	r2, [r2, #0]
 8019b48:	210e      	movs	r1, #14
 8019b4a:	fb01 2303 	mla	r3, r1, r3, r2
 8019b4e:	681a      	ldr	r2, [r3, #0]
 8019b50:	6002      	str	r2, [r0, #0]
 8019b52:	685a      	ldr	r2, [r3, #4]
 8019b54:	6042      	str	r2, [r0, #4]
 8019b56:	bd10      	pop	{r4, pc}
 8019b58:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019b5c:	4293      	cmp	r3, r2
 8019b5e:	d10b      	bne.n	8019b78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8019b60:	4b0f      	ldr	r3, [pc, #60]	; (8019ba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8019b62:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019b66:	4b0f      	ldr	r3, [pc, #60]	; (8019ba4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8019b68:	8081      	strh	r1, [r0, #4]
 8019b6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019b6e:	80c2      	strh	r2, [r0, #6]
 8019b70:	2300      	movs	r3, #0
 8019b72:	8003      	strh	r3, [r0, #0]
 8019b74:	8043      	strh	r3, [r0, #2]
 8019b76:	e7ee      	b.n	8019b56 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8019b78:	2300      	movs	r3, #0
 8019b7a:	8003      	strh	r3, [r0, #0]
 8019b7c:	8043      	strh	r3, [r0, #2]
 8019b7e:	8083      	strh	r3, [r0, #4]
 8019b80:	e7d8      	b.n	8019b34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8019b82:	bf00      	nop
 8019b84:	20014cb4 	.word	0x20014cb4
 8019b88:	0802c52a 	.word	0x0802c52a
 8019b8c:	0802d529 	.word	0x0802d529
 8019b90:	0802d465 	.word	0x0802d465
 8019b94:	20014cac 	.word	0x20014cac
 8019b98:	20014cb0 	.word	0x20014cb0
 8019b9c:	20014c94 	.word	0x20014c94
 8019ba0:	20014c00 	.word	0x20014c00
 8019ba4:	20014c02 	.word	0x20014c02

08019ba8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019ba8:	4b18      	ldr	r3, [pc, #96]	; (8019c0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019baa:	681b      	ldr	r3, [r3, #0]
 8019bac:	b34b      	cbz	r3, 8019c02 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8019bae:	4a18      	ldr	r2, [pc, #96]	; (8019c10 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019bb0:	8800      	ldrh	r0, [r0, #0]
 8019bb2:	8812      	ldrh	r2, [r2, #0]
 8019bb4:	4290      	cmp	r0, r2
 8019bb6:	d211      	bcs.n	8019bdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8019bb8:	2214      	movs	r2, #20
 8019bba:	fb02 3300 	mla	r3, r2, r0, r3
 8019bbe:	8a1a      	ldrh	r2, [r3, #16]
 8019bc0:	8919      	ldrh	r1, [r3, #8]
 8019bc2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019bc6:	428a      	cmp	r2, r1
 8019bc8:	db1d      	blt.n	8019c06 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8019bca:	8a58      	ldrh	r0, [r3, #18]
 8019bcc:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019bd0:	895b      	ldrh	r3, [r3, #10]
 8019bd2:	4298      	cmp	r0, r3
 8019bd4:	bfac      	ite	ge
 8019bd6:	2000      	movge	r0, #0
 8019bd8:	2001      	movlt	r0, #1
 8019bda:	4770      	bx	lr
 8019bdc:	4b0d      	ldr	r3, [pc, #52]	; (8019c14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019bde:	881b      	ldrh	r3, [r3, #0]
 8019be0:	4413      	add	r3, r2
 8019be2:	4298      	cmp	r0, r3
 8019be4:	da0d      	bge.n	8019c02 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8019be6:	4b0c      	ldr	r3, [pc, #48]	; (8019c18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8019be8:	681b      	ldr	r3, [r3, #0]
 8019bea:	1a80      	subs	r0, r0, r2
 8019bec:	220e      	movs	r2, #14
 8019bee:	fb02 3300 	mla	r3, r2, r0, r3
 8019bf2:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019bf6:	891a      	ldrh	r2, [r3, #8]
 8019bf8:	4291      	cmp	r1, r2
 8019bfa:	db04      	blt.n	8019c06 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8019bfc:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019c00:	e7e6      	b.n	8019bd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8019c02:	2000      	movs	r0, #0
 8019c04:	4770      	bx	lr
 8019c06:	2001      	movs	r0, #1
 8019c08:	4770      	bx	lr
 8019c0a:	bf00      	nop
 8019c0c:	20014cb4 	.word	0x20014cb4
 8019c10:	20014cac 	.word	0x20014cac
 8019c14:	20014cb0 	.word	0x20014cb0
 8019c18:	20014c94 	.word	0x20014c94

08019c1c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019c1c:	b508      	push	{r3, lr}
 8019c1e:	4b12      	ldr	r3, [pc, #72]	; (8019c68 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8019c20:	6819      	ldr	r1, [r3, #0]
 8019c22:	b931      	cbnz	r1, 8019c32 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8019c24:	4b11      	ldr	r3, [pc, #68]	; (8019c6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019c26:	4a12      	ldr	r2, [pc, #72]	; (8019c70 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019c28:	4812      	ldr	r0, [pc, #72]	; (8019c74 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019c2a:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8019c2e:	f00d fc3f 	bl	80274b0 <__assert_func>
 8019c32:	8803      	ldrh	r3, [r0, #0]
 8019c34:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8019c38:	4293      	cmp	r3, r2
 8019c3a:	d012      	beq.n	8019c62 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8019c3c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019c40:	4293      	cmp	r3, r2
 8019c42:	d103      	bne.n	8019c4c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8019c44:	4b0c      	ldr	r3, [pc, #48]	; (8019c78 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8019c46:	681b      	ldr	r3, [r3, #0]
 8019c48:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019c4a:	bd08      	pop	{r3, pc}
 8019c4c:	4a0b      	ldr	r2, [pc, #44]	; (8019c7c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8019c4e:	6812      	ldr	r2, [r2, #0]
 8019c50:	b11a      	cbz	r2, 8019c5a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8019c52:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019c56:	2800      	cmp	r0, #0
 8019c58:	d1f7      	bne.n	8019c4a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8019c5a:	2214      	movs	r2, #20
 8019c5c:	4353      	muls	r3, r2
 8019c5e:	58c8      	ldr	r0, [r1, r3]
 8019c60:	e7f3      	b.n	8019c4a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8019c62:	2000      	movs	r0, #0
 8019c64:	e7f1      	b.n	8019c4a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8019c66:	bf00      	nop
 8019c68:	20014cb4 	.word	0x20014cb4
 8019c6c:	0802c52a 	.word	0x0802c52a
 8019c70:	0802d55f 	.word	0x0802d55f
 8019c74:	0802d465 	.word	0x0802d465
 8019c78:	20014c0c 	.word	0x20014c0c
 8019c7c:	20014c90 	.word	0x20014c90

08019c80 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019c80:	8802      	ldrh	r2, [r0, #0]
 8019c82:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8019c86:	429a      	cmp	r2, r3
 8019c88:	d845      	bhi.n	8019d16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8019c8a:	4b24      	ldr	r3, [pc, #144]	; (8019d1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019c8c:	8818      	ldrh	r0, [r3, #0]
 8019c8e:	4282      	cmp	r2, r0
 8019c90:	d221      	bcs.n	8019cd6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8019c92:	4b23      	ldr	r3, [pc, #140]	; (8019d20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019c94:	6819      	ldr	r1, [r3, #0]
 8019c96:	2314      	movs	r3, #20
 8019c98:	fb03 1302 	mla	r3, r3, r2, r1
 8019c9c:	6858      	ldr	r0, [r3, #4]
 8019c9e:	2800      	cmp	r0, #0
 8019ca0:	d03a      	beq.n	8019d18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8019ca2:	4920      	ldr	r1, [pc, #128]	; (8019d24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019ca4:	6809      	ldr	r1, [r1, #0]
 8019ca6:	2900      	cmp	r1, #0
 8019ca8:	d036      	beq.n	8019d18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8019caa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019cae:	2900      	cmp	r1, #0
 8019cb0:	d032      	beq.n	8019d18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8019cb2:	891a      	ldrh	r2, [r3, #8]
 8019cb4:	8958      	ldrh	r0, [r3, #10]
 8019cb6:	4350      	muls	r0, r2
 8019cb8:	7c5a      	ldrb	r2, [r3, #17]
 8019cba:	7cdb      	ldrb	r3, [r3, #19]
 8019cbc:	0952      	lsrs	r2, r2, #5
 8019cbe:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019cc2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019cc6:	2b0b      	cmp	r3, #11
 8019cc8:	bf18      	it	ne
 8019cca:	0040      	lslne	r0, r0, #1
 8019ccc:	3003      	adds	r0, #3
 8019cce:	f020 0003 	bic.w	r0, r0, #3
 8019cd2:	4408      	add	r0, r1
 8019cd4:	4770      	bx	lr
 8019cd6:	4b14      	ldr	r3, [pc, #80]	; (8019d28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8019cd8:	881b      	ldrh	r3, [r3, #0]
 8019cda:	4403      	add	r3, r0
 8019cdc:	429a      	cmp	r2, r3
 8019cde:	da1a      	bge.n	8019d16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8019ce0:	4b12      	ldr	r3, [pc, #72]	; (8019d2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8019ce2:	681b      	ldr	r3, [r3, #0]
 8019ce4:	1a10      	subs	r0, r2, r0
 8019ce6:	210e      	movs	r1, #14
 8019ce8:	fb01 3000 	mla	r0, r1, r0, r3
 8019cec:	7b03      	ldrb	r3, [r0, #12]
 8019cee:	f003 031f 	and.w	r3, r3, #31
 8019cf2:	2b0b      	cmp	r3, #11
 8019cf4:	d10b      	bne.n	8019d0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019cf6:	8903      	ldrh	r3, [r0, #8]
 8019cf8:	8940      	ldrh	r0, [r0, #10]
 8019cfa:	4358      	muls	r0, r3
 8019cfc:	4b09      	ldr	r3, [pc, #36]	; (8019d24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019cfe:	6819      	ldr	r1, [r3, #0]
 8019d00:	3003      	adds	r0, #3
 8019d02:	f020 0303 	bic.w	r3, r0, #3
 8019d06:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019d0a:	4418      	add	r0, r3
 8019d0c:	4770      	bx	lr
 8019d0e:	2b0d      	cmp	r3, #13
 8019d10:	d101      	bne.n	8019d16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8019d12:	300d      	adds	r0, #13
 8019d14:	4770      	bx	lr
 8019d16:	2000      	movs	r0, #0
 8019d18:	4770      	bx	lr
 8019d1a:	bf00      	nop
 8019d1c:	20014cac 	.word	0x20014cac
 8019d20:	20014cb4 	.word	0x20014cb4
 8019d24:	20014c90 	.word	0x20014c90
 8019d28:	20014cb0 	.word	0x20014cb0
 8019d2c:	20014c94 	.word	0x20014c94

08019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019d30:	b510      	push	{r4, lr}
 8019d32:	4b17      	ldr	r3, [pc, #92]	; (8019d90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019d34:	6819      	ldr	r1, [r3, #0]
 8019d36:	8803      	ldrh	r3, [r0, #0]
 8019d38:	b1e9      	cbz	r1, 8019d76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8019d3a:	4a16      	ldr	r2, [pc, #88]	; (8019d94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019d3c:	8812      	ldrh	r2, [r2, #0]
 8019d3e:	429a      	cmp	r2, r3
 8019d40:	d90a      	bls.n	8019d58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8019d42:	2214      	movs	r2, #20
 8019d44:	fb02 1303 	mla	r3, r2, r3, r1
 8019d48:	7c58      	ldrb	r0, [r3, #17]
 8019d4a:	0942      	lsrs	r2, r0, #5
 8019d4c:	7cd8      	ldrb	r0, [r3, #19]
 8019d4e:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019d52:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019d56:	bd10      	pop	{r4, pc}
 8019d58:	490f      	ldr	r1, [pc, #60]	; (8019d98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8019d5a:	8809      	ldrh	r1, [r1, #0]
 8019d5c:	4411      	add	r1, r2
 8019d5e:	428b      	cmp	r3, r1
 8019d60:	da09      	bge.n	8019d76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8019d62:	1a9b      	subs	r3, r3, r2
 8019d64:	4a0d      	ldr	r2, [pc, #52]	; (8019d9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019d66:	6812      	ldr	r2, [r2, #0]
 8019d68:	210e      	movs	r1, #14
 8019d6a:	fb01 2303 	mla	r3, r1, r3, r2
 8019d6e:	7b18      	ldrb	r0, [r3, #12]
 8019d70:	f000 001f 	and.w	r0, r0, #31
 8019d74:	e7ef      	b.n	8019d56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019d76:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019d7a:	4293      	cmp	r3, r2
 8019d7c:	d106      	bne.n	8019d8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8019d7e:	f7f6 fde9 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8019d82:	6803      	ldr	r3, [r0, #0]
 8019d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019d88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019d8a:	4718      	bx	r3
 8019d8c:	2000      	movs	r0, #0
 8019d8e:	e7e2      	b.n	8019d56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019d90:	20014cb4 	.word	0x20014cb4
 8019d94:	20014cac 	.word	0x20014cac
 8019d98:	20014cb0 	.word	0x20014cb0
 8019d9c:	20014c94 	.word	0x20014c94

08019da0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019da0:	2010      	movs	r0, #16
 8019da2:	4770      	bx	lr

08019da4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019da4:	2000      	movs	r0, #0
 8019da6:	4770      	bx	lr

08019da8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019da8:	2bff      	cmp	r3, #255	; 0xff
 8019daa:	d050      	beq.n	8019e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019dac:	2a0b      	cmp	r2, #11
 8019dae:	d04a      	beq.n	8019e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019db0:	d80e      	bhi.n	8019dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019db2:	2a03      	cmp	r2, #3
 8019db4:	d03f      	beq.n	8019e36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019db6:	d804      	bhi.n	8019dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019db8:	2a01      	cmp	r2, #1
 8019dba:	d03e      	beq.n	8019e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019dbc:	d93f      	bls.n	8019e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019dbe:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019dc0:	4770      	bx	lr
 8019dc2:	2a09      	cmp	r2, #9
 8019dc4:	d03f      	beq.n	8019e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019dc6:	d83c      	bhi.n	8019e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019dc8:	2a08      	cmp	r2, #8
 8019dca:	d03a      	beq.n	8019e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019dcc:	2000      	movs	r0, #0
 8019dce:	4770      	bx	lr
 8019dd0:	2a2f      	cmp	r2, #47	; 0x2f
 8019dd2:	d024      	beq.n	8019e1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019dd4:	d80d      	bhi.n	8019df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019dd6:	2a2d      	cmp	r2, #45	; 0x2d
 8019dd8:	d014      	beq.n	8019e04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8019dda:	d826      	bhi.n	8019e2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019ddc:	2a2c      	cmp	r2, #44	; 0x2c
 8019dde:	d1f5      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019de0:	684b      	ldr	r3, [r1, #4]
 8019de2:	781b      	ldrb	r3, [r3, #0]
 8019de4:	2b01      	cmp	r3, #1
 8019de6:	d018      	beq.n	8019e1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019de8:	d323      	bcc.n	8019e32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8019dea:	2b02      	cmp	r3, #2
 8019dec:	d1ee      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019dee:	6880      	ldr	r0, [r0, #8]
 8019df0:	4770      	bx	lr
 8019df2:	2a31      	cmp	r2, #49	; 0x31
 8019df4:	d004      	beq.n	8019e00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019df6:	d328      	bcc.n	8019e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019df8:	2a32      	cmp	r2, #50	; 0x32
 8019dfa:	d026      	beq.n	8019e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019dfc:	2a33      	cmp	r2, #51	; 0x33
 8019dfe:	d1e5      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e00:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019e02:	4770      	bx	lr
 8019e04:	684b      	ldr	r3, [r1, #4]
 8019e06:	781b      	ldrb	r3, [r3, #0]
 8019e08:	2b01      	cmp	r3, #1
 8019e0a:	d004      	beq.n	8019e16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019e0c:	d30b      	bcc.n	8019e26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019e0e:	2b02      	cmp	r3, #2
 8019e10:	d1dc      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e12:	6900      	ldr	r0, [r0, #16]
 8019e14:	4770      	bx	lr
 8019e16:	6a00      	ldr	r0, [r0, #32]
 8019e18:	4770      	bx	lr
 8019e1a:	6980      	ldr	r0, [r0, #24]
 8019e1c:	4770      	bx	lr
 8019e1e:	684b      	ldr	r3, [r1, #4]
 8019e20:	781b      	ldrb	r3, [r3, #0]
 8019e22:	2b00      	cmp	r3, #0
 8019e24:	d1d2      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e26:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019e28:	4770      	bx	lr
 8019e2a:	684b      	ldr	r3, [r1, #4]
 8019e2c:	781b      	ldrb	r3, [r3, #0]
 8019e2e:	2b00      	cmp	r3, #0
 8019e30:	d1cc      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e32:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019e34:	4770      	bx	lr
 8019e36:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019e38:	4770      	bx	lr
 8019e3a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019e3c:	4770      	bx	lr
 8019e3e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019e40:	4770      	bx	lr
 8019e42:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019e44:	4770      	bx	lr
 8019e46:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019e48:	4770      	bx	lr
 8019e4a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019e4c:	4770      	bx	lr
 8019e4e:	2a0b      	cmp	r2, #11
 8019e50:	d049      	beq.n	8019ee6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019e52:	d80e      	bhi.n	8019e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019e54:	2a03      	cmp	r2, #3
 8019e56:	d040      	beq.n	8019eda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019e58:	d804      	bhi.n	8019e64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8019e5a:	2a01      	cmp	r2, #1
 8019e5c:	d03f      	beq.n	8019ede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019e5e:	d940      	bls.n	8019ee2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019e60:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019e62:	4770      	bx	lr
 8019e64:	2a09      	cmp	r2, #9
 8019e66:	d03e      	beq.n	8019ee6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019e68:	d801      	bhi.n	8019e6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8019e6a:	2a08      	cmp	r2, #8
 8019e6c:	d1ae      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e6e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019e70:	4770      	bx	lr
 8019e72:	2a2f      	cmp	r2, #47	; 0x2f
 8019e74:	d024      	beq.n	8019ec0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019e76:	d80d      	bhi.n	8019e94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019e78:	2a2d      	cmp	r2, #45	; 0x2d
 8019e7a:	d014      	beq.n	8019ea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019e7c:	d826      	bhi.n	8019ecc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019e7e:	2a2c      	cmp	r2, #44	; 0x2c
 8019e80:	d1a4      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e82:	684b      	ldr	r3, [r1, #4]
 8019e84:	781b      	ldrb	r3, [r3, #0]
 8019e86:	2b01      	cmp	r3, #1
 8019e88:	d018      	beq.n	8019ebc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019e8a:	d324      	bcc.n	8019ed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019e8c:	2b02      	cmp	r3, #2
 8019e8e:	d19d      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019e90:	68c0      	ldr	r0, [r0, #12]
 8019e92:	4770      	bx	lr
 8019e94:	2a31      	cmp	r2, #49	; 0x31
 8019e96:	d004      	beq.n	8019ea2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019e98:	d327      	bcc.n	8019eea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019e9a:	2a32      	cmp	r2, #50	; 0x32
 8019e9c:	d025      	beq.n	8019eea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019e9e:	2a33      	cmp	r2, #51	; 0x33
 8019ea0:	d194      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ea2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019ea4:	4770      	bx	lr
 8019ea6:	684b      	ldr	r3, [r1, #4]
 8019ea8:	781b      	ldrb	r3, [r3, #0]
 8019eaa:	2b01      	cmp	r3, #1
 8019eac:	d004      	beq.n	8019eb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019eae:	d30b      	bcc.n	8019ec8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019eb0:	2b02      	cmp	r3, #2
 8019eb2:	d18b      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019eb4:	6940      	ldr	r0, [r0, #20]
 8019eb6:	4770      	bx	lr
 8019eb8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019eba:	4770      	bx	lr
 8019ebc:	69c0      	ldr	r0, [r0, #28]
 8019ebe:	4770      	bx	lr
 8019ec0:	684b      	ldr	r3, [r1, #4]
 8019ec2:	781b      	ldrb	r3, [r3, #0]
 8019ec4:	2b00      	cmp	r3, #0
 8019ec6:	d181      	bne.n	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ec8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019eca:	4770      	bx	lr
 8019ecc:	684b      	ldr	r3, [r1, #4]
 8019ece:	781b      	ldrb	r3, [r3, #0]
 8019ed0:	2b00      	cmp	r3, #0
 8019ed2:	f47f af7b 	bne.w	8019dcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ed6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019ed8:	4770      	bx	lr
 8019eda:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019edc:	4770      	bx	lr
 8019ede:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019ee0:	4770      	bx	lr
 8019ee2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019ee4:	4770      	bx	lr
 8019ee6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019ee8:	4770      	bx	lr
 8019eea:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019eec:	4770      	bx	lr

08019eee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019eee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ef2:	b087      	sub	sp, #28
 8019ef4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019ef6:	9205      	str	r2, [sp, #20]
 8019ef8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019efc:	9202      	str	r2, [sp, #8]
 8019efe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019f02:	9101      	str	r1, [sp, #4]
 8019f04:	6841      	ldr	r1, [r0, #4]
 8019f06:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019f0a:	fb01 2404 	mla	r4, r1, r4, r2
 8019f0e:	6802      	ldr	r2, [r0, #0]
 8019f10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f14:	f8de 2000 	ldr.w	r2, [lr]
 8019f18:	9203      	str	r2, [sp, #12]
 8019f1a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019f1e:	3204      	adds	r2, #4
 8019f20:	9204      	str	r2, [sp, #16]
 8019f22:	9a02      	ldr	r2, [sp, #8]
 8019f24:	43d6      	mvns	r6, r2
 8019f26:	b2f6      	uxtb	r6, r6
 8019f28:	9a01      	ldr	r2, [sp, #4]
 8019f2a:	2a00      	cmp	r2, #0
 8019f2c:	dc03      	bgt.n	8019f36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019f2e:	9a05      	ldr	r2, [sp, #20]
 8019f30:	2a00      	cmp	r2, #0
 8019f32:	f340 8129 	ble.w	801a188 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019f36:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019f38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019f3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019f40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019f44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019f46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f4a:	2b00      	cmp	r3, #0
 8019f4c:	dd0e      	ble.n	8019f6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019f4e:	1408      	asrs	r0, r1, #16
 8019f50:	d405      	bmi.n	8019f5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f52:	4560      	cmp	r0, ip
 8019f54:	da03      	bge.n	8019f5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f56:	1410      	asrs	r0, r2, #16
 8019f58:	d401      	bmi.n	8019f5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f5a:	42b8      	cmp	r0, r7
 8019f5c:	db07      	blt.n	8019f6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019f5e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f60:	4401      	add	r1, r0
 8019f62:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f64:	3b01      	subs	r3, #1
 8019f66:	4402      	add	r2, r0
 8019f68:	3402      	adds	r4, #2
 8019f6a:	e7ee      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019f6c:	d071      	beq.n	801a052 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019f6e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019f70:	1e58      	subs	r0, r3, #1
 8019f72:	fb05 1500 	mla	r5, r5, r0, r1
 8019f76:	142d      	asrs	r5, r5, #16
 8019f78:	d45f      	bmi.n	801a03a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019f7a:	4565      	cmp	r5, ip
 8019f7c:	da5d      	bge.n	801a03a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019f7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019f80:	fb05 2000 	mla	r0, r5, r0, r2
 8019f84:	1400      	asrs	r0, r0, #16
 8019f86:	d458      	bmi.n	801a03a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019f88:	42b8      	cmp	r0, r7
 8019f8a:	da56      	bge.n	801a03a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019f8c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019f90:	4699      	mov	r9, r3
 8019f92:	46a2      	mov	sl, r4
 8019f94:	f1b9 0f00 	cmp.w	r9, #0
 8019f98:	dd57      	ble.n	801a04a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019f9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019f9e:	9803      	ldr	r0, [sp, #12]
 8019fa0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019fa4:	140d      	asrs	r5, r1, #16
 8019fa6:	fb07 000c 	mla	r0, r7, ip, r0
 8019faa:	f109 39ff 	add.w	r9, r9, #4294967295
 8019fae:	5d40      	ldrb	r0, [r0, r5]
 8019fb0:	9d04      	ldr	r5, [sp, #16]
 8019fb2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019fb6:	f8ba 5000 	ldrh.w	r5, [sl]
 8019fba:	122f      	asrs	r7, r5, #8
 8019fbc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019fc0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019fc4:	fb17 f706 	smulbb	r7, r7, r6
 8019fc8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019fcc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019fd0:	00ed      	lsls	r5, r5, #3
 8019fd2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019fd6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019fda:	10c7      	asrs	r7, r0, #3
 8019fdc:	b2ed      	uxtb	r5, r5
 8019fde:	00c0      	lsls	r0, r0, #3
 8019fe0:	fb18 f806 	smulbb	r8, r8, r6
 8019fe4:	fb15 f506 	smulbb	r5, r5, r6
 8019fe8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019fec:	b2c0      	uxtb	r0, r0
 8019fee:	fa1f fc8c 	uxth.w	ip, ip
 8019ff2:	fb07 870b 	mla	r7, r7, fp, r8
 8019ff6:	fb00 500b 	mla	r0, r0, fp, r5
 8019ffa:	b280      	uxth	r0, r0
 8019ffc:	b2bf      	uxth	r7, r7
 8019ffe:	f10c 0501 	add.w	r5, ip, #1
 801a002:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a006:	f107 0801 	add.w	r8, r7, #1
 801a00a:	1c45      	adds	r5, r0, #1
 801a00c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a010:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a014:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a016:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a01a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a01e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a022:	ea45 0c0c 	orr.w	ip, r5, ip
 801a026:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a02a:	4401      	add	r1, r0
 801a02c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a02e:	ea4c 0c08 	orr.w	ip, ip, r8
 801a032:	f82a cb02 	strh.w	ip, [sl], #2
 801a036:	4402      	add	r2, r0
 801a038:	e7ac      	b.n	8019f94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a03a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a03e:	f04f 0800 	mov.w	r8, #0
 801a042:	eb03 0008 	add.w	r0, r3, r8
 801a046:	2800      	cmp	r0, #0
 801a048:	dc41      	bgt.n	801a0ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a04a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a04e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a052:	9b01      	ldr	r3, [sp, #4]
 801a054:	2b00      	cmp	r3, #0
 801a056:	f340 8097 	ble.w	801a188 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a05a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a05e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a062:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a066:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a06c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a070:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a074:	eef0 6a62 	vmov.f32	s13, s5
 801a078:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a07c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a080:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a084:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a088:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a08c:	eef0 6a43 	vmov.f32	s13, s6
 801a090:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a094:	ee12 2a90 	vmov	r2, s5
 801a098:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a09c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0a0:	ee13 2a10 	vmov	r2, s6
 801a0a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a0a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0ac:	9314      	str	r3, [sp, #80]	; 0x50
 801a0ae:	9b01      	ldr	r3, [sp, #4]
 801a0b0:	9a05      	ldr	r2, [sp, #20]
 801a0b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0b6:	3b01      	subs	r3, #1
 801a0b8:	9301      	str	r3, [sp, #4]
 801a0ba:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a0be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0c0:	eeb0 3a67 	vmov.f32	s6, s15
 801a0c4:	bf08      	it	eq
 801a0c6:	4613      	moveq	r3, r2
 801a0c8:	eef0 2a47 	vmov.f32	s5, s14
 801a0cc:	e72c      	b.n	8019f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a0ce:	140f      	asrs	r7, r1, #16
 801a0d0:	d453      	bmi.n	801a17a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a0d2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a0d6:	42bd      	cmp	r5, r7
 801a0d8:	dd4f      	ble.n	801a17a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a0da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a0de:	d44c      	bmi.n	801a17a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a0e0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a0e4:	4560      	cmp	r0, ip
 801a0e6:	dd48      	ble.n	801a17a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a0e8:	9803      	ldr	r0, [sp, #12]
 801a0ea:	b22d      	sxth	r5, r5
 801a0ec:	fb0c 0505 	mla	r5, ip, r5, r0
 801a0f0:	5de8      	ldrb	r0, [r5, r7]
 801a0f2:	9d04      	ldr	r5, [sp, #16]
 801a0f4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a0f8:	f06f 0501 	mvn.w	r5, #1
 801a0fc:	fb05 fb08 	mul.w	fp, r5, r8
 801a100:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a104:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a108:	122f      	asrs	r7, r5, #8
 801a10a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a10e:	fb17 f706 	smulbb	r7, r7, r6
 801a112:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a116:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a11a:	00ed      	lsls	r5, r5, #3
 801a11c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a120:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a124:	10c7      	asrs	r7, r0, #3
 801a126:	b2ed      	uxtb	r5, r5
 801a128:	00c0      	lsls	r0, r0, #3
 801a12a:	fb19 f906 	smulbb	r9, r9, r6
 801a12e:	fb15 f506 	smulbb	r5, r5, r6
 801a132:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a136:	b2c0      	uxtb	r0, r0
 801a138:	fa1f fc8c 	uxth.w	ip, ip
 801a13c:	fb07 970a 	mla	r7, r7, sl, r9
 801a140:	fb00 500a 	mla	r0, r0, sl, r5
 801a144:	b2bf      	uxth	r7, r7
 801a146:	b280      	uxth	r0, r0
 801a148:	f10c 0501 	add.w	r5, ip, #1
 801a14c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a150:	f107 0901 	add.w	r9, r7, #1
 801a154:	1c45      	adds	r5, r0, #1
 801a156:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a15a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a15e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a162:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a166:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a16a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a16e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a172:	ea4c 0c09 	orr.w	ip, ip, r9
 801a176:	f824 c00b 	strh.w	ip, [r4, fp]
 801a17a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a17c:	4401      	add	r1, r0
 801a17e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a180:	f108 38ff 	add.w	r8, r8, #4294967295
 801a184:	4402      	add	r2, r0
 801a186:	e75c      	b.n	801a042 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a188:	b007      	add	sp, #28
 801a18a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a18e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a18e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a192:	b085      	sub	sp, #20
 801a194:	4693      	mov	fp, r2
 801a196:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a198:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a19a:	6870      	ldr	r0, [r6, #4]
 801a19c:	9100      	str	r1, [sp, #0]
 801a19e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a1a2:	fb00 2404 	mla	r4, r0, r4, r2
 801a1a6:	6832      	ldr	r2, [r6, #0]
 801a1a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a1ac:	682a      	ldr	r2, [r5, #0]
 801a1ae:	9201      	str	r2, [sp, #4]
 801a1b0:	686a      	ldr	r2, [r5, #4]
 801a1b2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a1b6:	3204      	adds	r2, #4
 801a1b8:	9202      	str	r2, [sp, #8]
 801a1ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a1be:	9a00      	ldr	r2, [sp, #0]
 801a1c0:	2a00      	cmp	r2, #0
 801a1c2:	dc03      	bgt.n	801a1cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a1c4:	f1bb 0f00 	cmp.w	fp, #0
 801a1c8:	f340 80a0 	ble.w	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a1cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a1ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a1d2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a1d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a1da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a1dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a1e0:	2b00      	cmp	r3, #0
 801a1e2:	dd0c      	ble.n	801a1fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a1e4:	1406      	asrs	r6, r0, #16
 801a1e6:	d405      	bmi.n	801a1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a1e8:	454e      	cmp	r6, r9
 801a1ea:	da03      	bge.n	801a1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a1ec:	1416      	asrs	r6, r2, #16
 801a1ee:	d401      	bmi.n	801a1f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a1f0:	4546      	cmp	r6, r8
 801a1f2:	db05      	blt.n	801a200 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1f4:	4470      	add	r0, lr
 801a1f6:	4462      	add	r2, ip
 801a1f8:	3b01      	subs	r3, #1
 801a1fa:	3402      	adds	r4, #2
 801a1fc:	e7f0      	b.n	801a1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a1fe:	d00f      	beq.n	801a220 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a200:	1e5e      	subs	r6, r3, #1
 801a202:	fb0e 0706 	mla	r7, lr, r6, r0
 801a206:	143f      	asrs	r7, r7, #16
 801a208:	d541      	bpl.n	801a28e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a20a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a20e:	4698      	mov	r8, r3
 801a210:	9603      	str	r6, [sp, #12]
 801a212:	f1b8 0f00 	cmp.w	r8, #0
 801a216:	dc59      	bgt.n	801a2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a218:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a21c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a220:	9b00      	ldr	r3, [sp, #0]
 801a222:	2b00      	cmp	r3, #0
 801a224:	dd72      	ble.n	801a30c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a226:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a22a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a22e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a232:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a234:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a238:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a23c:	eeb0 6a62 	vmov.f32	s12, s5
 801a240:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a244:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a248:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a24c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a250:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a254:	eeb0 6a43 	vmov.f32	s12, s6
 801a258:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a25c:	ee12 2a90 	vmov	r2, s5
 801a260:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a264:	fb92 fef3 	sdiv	lr, r2, r3
 801a268:	ee13 2a10 	vmov	r2, s6
 801a26c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a270:	9b00      	ldr	r3, [sp, #0]
 801a272:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a276:	3b01      	subs	r3, #1
 801a278:	9300      	str	r3, [sp, #0]
 801a27a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a27e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a280:	eeb0 3a67 	vmov.f32	s6, s15
 801a284:	bf08      	it	eq
 801a286:	465b      	moveq	r3, fp
 801a288:	eef0 2a47 	vmov.f32	s5, s14
 801a28c:	e797      	b.n	801a1be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a28e:	454f      	cmp	r7, r9
 801a290:	dabb      	bge.n	801a20a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a292:	fb0c 2606 	mla	r6, ip, r6, r2
 801a296:	1436      	asrs	r6, r6, #16
 801a298:	d4b7      	bmi.n	801a20a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a29a:	4546      	cmp	r6, r8
 801a29c:	dab5      	bge.n	801a20a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a29e:	461e      	mov	r6, r3
 801a2a0:	46a0      	mov	r8, r4
 801a2a2:	2e00      	cmp	r6, #0
 801a2a4:	ddb8      	ble.n	801a218 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a2a6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a2aa:	9901      	ldr	r1, [sp, #4]
 801a2ac:	1417      	asrs	r7, r2, #16
 801a2ae:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a2b2:	fb0a 1707 	mla	r7, sl, r7, r1
 801a2b6:	9902      	ldr	r1, [sp, #8]
 801a2b8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a2bc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a2c0:	f828 7b02 	strh.w	r7, [r8], #2
 801a2c4:	4470      	add	r0, lr
 801a2c6:	4462      	add	r2, ip
 801a2c8:	3e01      	subs	r6, #1
 801a2ca:	e7ea      	b.n	801a2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a2cc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a2d0:	d417      	bmi.n	801a302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a2d2:	68ae      	ldr	r6, [r5, #8]
 801a2d4:	454e      	cmp	r6, r9
 801a2d6:	dd14      	ble.n	801a302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a2d8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a2dc:	d411      	bmi.n	801a302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a2de:	68ef      	ldr	r7, [r5, #12]
 801a2e0:	4557      	cmp	r7, sl
 801a2e2:	dd0e      	ble.n	801a302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a2e4:	9f01      	ldr	r7, [sp, #4]
 801a2e6:	b236      	sxth	r6, r6
 801a2e8:	fb0a 7606 	mla	r6, sl, r6, r7
 801a2ec:	9f02      	ldr	r7, [sp, #8]
 801a2ee:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a2f2:	f06f 0101 	mvn.w	r1, #1
 801a2f6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a2fa:	fb01 f608 	mul.w	r6, r1, r8
 801a2fe:	9903      	ldr	r1, [sp, #12]
 801a300:	538f      	strh	r7, [r1, r6]
 801a302:	4470      	add	r0, lr
 801a304:	4462      	add	r2, ip
 801a306:	f108 38ff 	add.w	r8, r8, #4294967295
 801a30a:	e782      	b.n	801a212 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a30c:	b005      	add	sp, #20
 801a30e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a312 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a312:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a316:	b087      	sub	sp, #28
 801a318:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a31a:	9205      	str	r2, [sp, #20]
 801a31c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a320:	9203      	str	r2, [sp, #12]
 801a322:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a326:	9102      	str	r1, [sp, #8]
 801a328:	6861      	ldr	r1, [r4, #4]
 801a32a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a32e:	fb01 2000 	mla	r0, r1, r0, r2
 801a332:	6822      	ldr	r2, [r4, #0]
 801a334:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a338:	9200      	str	r2, [sp, #0]
 801a33a:	f8dc 2000 	ldr.w	r2, [ip]
 801a33e:	9204      	str	r2, [sp, #16]
 801a340:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a344:	3204      	adds	r2, #4
 801a346:	9201      	str	r2, [sp, #4]
 801a348:	9a03      	ldr	r2, [sp, #12]
 801a34a:	43d5      	mvns	r5, r2
 801a34c:	b2ed      	uxtb	r5, r5
 801a34e:	9a02      	ldr	r2, [sp, #8]
 801a350:	2a00      	cmp	r2, #0
 801a352:	dc03      	bgt.n	801a35c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a354:	9a05      	ldr	r2, [sp, #20]
 801a356:	2a00      	cmp	r2, #0
 801a358:	f340 812c 	ble.w	801a5b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a35c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a35e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a362:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a366:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a36a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a36c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a370:	2b00      	cmp	r3, #0
 801a372:	dd10      	ble.n	801a396 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a374:	140c      	asrs	r4, r1, #16
 801a376:	d405      	bmi.n	801a384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a378:	4574      	cmp	r4, lr
 801a37a:	da03      	bge.n	801a384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a37c:	1414      	asrs	r4, r2, #16
 801a37e:	d401      	bmi.n	801a384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a380:	42bc      	cmp	r4, r7
 801a382:	db09      	blt.n	801a398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a384:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a386:	9800      	ldr	r0, [sp, #0]
 801a388:	4421      	add	r1, r4
 801a38a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a38c:	3002      	adds	r0, #2
 801a38e:	4422      	add	r2, r4
 801a390:	3b01      	subs	r3, #1
 801a392:	9000      	str	r0, [sp, #0]
 801a394:	e7ec      	b.n	801a370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a396:	d071      	beq.n	801a47c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a398:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a39a:	1e5c      	subs	r4, r3, #1
 801a39c:	fb06 1604 	mla	r6, r6, r4, r1
 801a3a0:	1436      	asrs	r6, r6, #16
 801a3a2:	d45d      	bmi.n	801a460 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a3a4:	4576      	cmp	r6, lr
 801a3a6:	da5b      	bge.n	801a460 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a3a8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a3aa:	fb06 2404 	mla	r4, r6, r4, r2
 801a3ae:	1424      	asrs	r4, r4, #16
 801a3b0:	d456      	bmi.n	801a460 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a3b2:	42bc      	cmp	r4, r7
 801a3b4:	da54      	bge.n	801a460 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a3b6:	f8dd 9000 	ldr.w	r9, [sp]
 801a3ba:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a3be:	4698      	mov	r8, r3
 801a3c0:	f1b8 0f00 	cmp.w	r8, #0
 801a3c4:	dd54      	ble.n	801a470 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a3c6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a3ca:	9804      	ldr	r0, [sp, #16]
 801a3cc:	1414      	asrs	r4, r2, #16
 801a3ce:	fb07 0404 	mla	r4, r7, r4, r0
 801a3d2:	140e      	asrs	r6, r1, #16
 801a3d4:	9801      	ldr	r0, [sp, #4]
 801a3d6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a3da:	f8b9 4000 	ldrh.w	r4, [r9]
 801a3de:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a3e2:	eb00 0b0e 	add.w	fp, r0, lr
 801a3e6:	1227      	asrs	r7, r4, #8
 801a3e8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a3ec:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a3f0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a3f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a3f6:	fb16 f60a 	smulbb	r6, r6, sl
 801a3fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a3fe:	fb07 6705 	mla	r7, r7, r5, r6
 801a402:	10e6      	asrs	r6, r4, #3
 801a404:	00e4      	lsls	r4, r4, #3
 801a406:	b2e4      	uxtb	r4, r4
 801a408:	fb1b fb0a 	smulbb	fp, fp, sl
 801a40c:	fb14 f405 	smulbb	r4, r4, r5
 801a410:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a414:	b2bf      	uxth	r7, r7
 801a416:	fb06 b605 	mla	r6, r6, r5, fp
 801a41a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a41e:	b2b6      	uxth	r6, r6
 801a420:	fa1f fe8e 	uxth.w	lr, lr
 801a424:	1c7c      	adds	r4, r7, #1
 801a426:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a42a:	f106 0b01 	add.w	fp, r6, #1
 801a42e:	f10e 0401 	add.w	r4, lr, #1
 801a432:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a436:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a43a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a43e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a442:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a446:	4327      	orrs	r7, r4
 801a448:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a44c:	4401      	add	r1, r0
 801a44e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a450:	ea47 070b 	orr.w	r7, r7, fp
 801a454:	f829 7b02 	strh.w	r7, [r9], #2
 801a458:	4402      	add	r2, r0
 801a45a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a45e:	e7af      	b.n	801a3c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a460:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a464:	f04f 0e00 	mov.w	lr, #0
 801a468:	eb03 040e 	add.w	r4, r3, lr
 801a46c:	2c00      	cmp	r4, #0
 801a46e:	dc43      	bgt.n	801a4f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a470:	9a00      	ldr	r2, [sp, #0]
 801a472:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a476:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a47a:	9300      	str	r3, [sp, #0]
 801a47c:	9b02      	ldr	r3, [sp, #8]
 801a47e:	2b00      	cmp	r3, #0
 801a480:	f340 8098 	ble.w	801a5b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a484:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a488:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a48c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a490:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a492:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a496:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a49a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a49e:	eef0 6a62 	vmov.f32	s13, s5
 801a4a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a4ae:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a4b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a4b6:	eef0 6a43 	vmov.f32	s13, s6
 801a4ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a4be:	ee12 2a90 	vmov	r2, s5
 801a4c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4ca:	ee13 2a10 	vmov	r2, s6
 801a4ce:	9313      	str	r3, [sp, #76]	; 0x4c
 801a4d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4d6:	9314      	str	r3, [sp, #80]	; 0x50
 801a4d8:	9b02      	ldr	r3, [sp, #8]
 801a4da:	9a05      	ldr	r2, [sp, #20]
 801a4dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4e0:	3b01      	subs	r3, #1
 801a4e2:	9302      	str	r3, [sp, #8]
 801a4e4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a4e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4ea:	eeb0 3a67 	vmov.f32	s6, s15
 801a4ee:	bf08      	it	eq
 801a4f0:	4613      	moveq	r3, r2
 801a4f2:	eef0 2a47 	vmov.f32	s5, s14
 801a4f6:	e72a      	b.n	801a34e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a4f8:	140f      	asrs	r7, r1, #16
 801a4fa:	d454      	bmi.n	801a5a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a4fc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a500:	42be      	cmp	r6, r7
 801a502:	dd50      	ble.n	801a5a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a504:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a508:	d44d      	bmi.n	801a5a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a50a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a50e:	4544      	cmp	r4, r8
 801a510:	dd49      	ble.n	801a5a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a512:	9c04      	ldr	r4, [sp, #16]
 801a514:	b236      	sxth	r6, r6
 801a516:	fb08 4606 	mla	r6, r8, r6, r4
 801a51a:	f06f 0001 	mvn.w	r0, #1
 801a51e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a522:	9c01      	ldr	r4, [sp, #4]
 801a524:	fb00 fa0e 	mul.w	sl, r0, lr
 801a528:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a52c:	9800      	ldr	r0, [sp, #0]
 801a52e:	eb04 0b08 	add.w	fp, r4, r8
 801a532:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a536:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a53a:	9801      	ldr	r0, [sp, #4]
 801a53c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a540:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a544:	9800      	ldr	r0, [sp, #0]
 801a546:	1227      	asrs	r7, r4, #8
 801a548:	fb16 f609 	smulbb	r6, r6, r9
 801a54c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a550:	fb07 6705 	mla	r7, r7, r5, r6
 801a554:	10e6      	asrs	r6, r4, #3
 801a556:	00e4      	lsls	r4, r4, #3
 801a558:	b2e4      	uxtb	r4, r4
 801a55a:	fb1b fb09 	smulbb	fp, fp, r9
 801a55e:	fb14 f405 	smulbb	r4, r4, r5
 801a562:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a566:	b2bf      	uxth	r7, r7
 801a568:	fb06 b605 	mla	r6, r6, r5, fp
 801a56c:	fb08 4809 	mla	r8, r8, r9, r4
 801a570:	b2b6      	uxth	r6, r6
 801a572:	fa1f f888 	uxth.w	r8, r8
 801a576:	1c7c      	adds	r4, r7, #1
 801a578:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a57c:	f106 0b01 	add.w	fp, r6, #1
 801a580:	f108 0401 	add.w	r4, r8, #1
 801a584:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a588:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a58c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a590:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a594:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a598:	4327      	orrs	r7, r4
 801a59a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a59e:	ea47 070b 	orr.w	r7, r7, fp
 801a5a2:	f820 700a 	strh.w	r7, [r0, sl]
 801a5a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a5a8:	4401      	add	r1, r0
 801a5aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a5ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a5b0:	4402      	add	r2, r0
 801a5b2:	e759      	b.n	801a468 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a5b4:	b007      	add	sp, #28
 801a5b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a5bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5c0:	b085      	sub	sp, #20
 801a5c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a5c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a5c8:	9203      	str	r2, [sp, #12]
 801a5ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a5ce:	6870      	ldr	r0, [r6, #4]
 801a5d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a5d2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a5d6:	686f      	ldr	r7, [r5, #4]
 801a5d8:	9101      	str	r1, [sp, #4]
 801a5da:	fb00 2404 	mla	r4, r0, r4, r2
 801a5de:	6832      	ldr	r2, [r6, #0]
 801a5e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a5e4:	682a      	ldr	r2, [r5, #0]
 801a5e6:	9202      	str	r2, [sp, #8]
 801a5e8:	3704      	adds	r7, #4
 801a5ea:	9a01      	ldr	r2, [sp, #4]
 801a5ec:	2a00      	cmp	r2, #0
 801a5ee:	dc03      	bgt.n	801a5f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a5f0:	9a03      	ldr	r2, [sp, #12]
 801a5f2:	2a00      	cmp	r2, #0
 801a5f4:	f340 80cc 	ble.w	801a790 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a5f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a5fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a5fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a602:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a606:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a608:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a60c:	2b00      	cmp	r3, #0
 801a60e:	dd0d      	ble.n	801a62c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a610:	1406      	asrs	r6, r0, #16
 801a612:	d405      	bmi.n	801a620 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a614:	454e      	cmp	r6, r9
 801a616:	da03      	bge.n	801a620 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a618:	1416      	asrs	r6, r2, #16
 801a61a:	d401      	bmi.n	801a620 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a61c:	4546      	cmp	r6, r8
 801a61e:	db06      	blt.n	801a62e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a620:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a622:	4460      	add	r0, ip
 801a624:	4432      	add	r2, r6
 801a626:	3b01      	subs	r3, #1
 801a628:	3402      	adds	r4, #2
 801a62a:	e7ef      	b.n	801a60c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a62c:	d00f      	beq.n	801a64e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a62e:	1e5e      	subs	r6, r3, #1
 801a630:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a634:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a638:	d543      	bpl.n	801a6c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a63a:	4698      	mov	r8, r3
 801a63c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a640:	f1b8 0f00 	cmp.w	r8, #0
 801a644:	dc71      	bgt.n	801a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a646:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a64a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a64e:	9b01      	ldr	r3, [sp, #4]
 801a650:	2b00      	cmp	r3, #0
 801a652:	f340 809d 	ble.w	801a790 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a656:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a65a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a65e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a662:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a664:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a668:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a66c:	eeb0 6a62 	vmov.f32	s12, s5
 801a670:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a674:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a678:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a67c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a680:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a684:	eeb0 6a43 	vmov.f32	s12, s6
 801a688:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a68c:	ee12 2a90 	vmov	r2, s5
 801a690:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a694:	fb92 fcf3 	sdiv	ip, r2, r3
 801a698:	ee13 2a10 	vmov	r2, s6
 801a69c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6a0:	9312      	str	r3, [sp, #72]	; 0x48
 801a6a2:	9b01      	ldr	r3, [sp, #4]
 801a6a4:	9a03      	ldr	r2, [sp, #12]
 801a6a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6aa:	3b01      	subs	r3, #1
 801a6ac:	9301      	str	r3, [sp, #4]
 801a6ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a6b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6b4:	eeb0 3a67 	vmov.f32	s6, s15
 801a6b8:	bf08      	it	eq
 801a6ba:	4613      	moveq	r3, r2
 801a6bc:	eef0 2a47 	vmov.f32	s5, s14
 801a6c0:	e793      	b.n	801a5ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a6c2:	45ce      	cmp	lr, r9
 801a6c4:	dab9      	bge.n	801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a6c6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a6c8:	fb01 2606 	mla	r6, r1, r6, r2
 801a6cc:	1436      	asrs	r6, r6, #16
 801a6ce:	d4b4      	bmi.n	801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a6d0:	4546      	cmp	r6, r8
 801a6d2:	dab2      	bge.n	801a63a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a6d4:	4698      	mov	r8, r3
 801a6d6:	46a2      	mov	sl, r4
 801a6d8:	f1b8 0f00 	cmp.w	r8, #0
 801a6dc:	ddb3      	ble.n	801a646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a6de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a6e2:	9902      	ldr	r1, [sp, #8]
 801a6e4:	1416      	asrs	r6, r2, #16
 801a6e6:	fb09 1606 	mla	r6, r9, r6, r1
 801a6ea:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a6ee:	492a      	ldr	r1, [pc, #168]	; (801a798 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a6f0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a6f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a6f8:	eb07 0b0e 	add.w	fp, r7, lr
 801a6fc:	4460      	add	r0, ip
 801a6fe:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a702:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a706:	00f6      	lsls	r6, r6, #3
 801a708:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a70c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a710:	ea49 0606 	orr.w	r6, r9, r6
 801a714:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a718:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a71a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a71e:	f82a 6b02 	strh.w	r6, [sl], #2
 801a722:	440a      	add	r2, r1
 801a724:	f108 38ff 	add.w	r8, r8, #4294967295
 801a728:	e7d6      	b.n	801a6d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a72a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a72e:	d429      	bmi.n	801a784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a730:	68ae      	ldr	r6, [r5, #8]
 801a732:	454e      	cmp	r6, r9
 801a734:	dd26      	ble.n	801a784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a736:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a73a:	d423      	bmi.n	801a784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a73c:	68e9      	ldr	r1, [r5, #12]
 801a73e:	4559      	cmp	r1, fp
 801a740:	dd20      	ble.n	801a784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a742:	9902      	ldr	r1, [sp, #8]
 801a744:	fa0f fe86 	sxth.w	lr, r6
 801a748:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a74c:	f06f 0101 	mvn.w	r1, #1
 801a750:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a754:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a758:	eb07 060e 	add.w	r6, r7, lr
 801a75c:	fb01 f908 	mul.w	r9, r1, r8
 801a760:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a764:	7876      	ldrb	r6, [r6, #1]
 801a766:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a76a:	00f6      	lsls	r6, r6, #3
 801a76c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a770:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a774:	ea4b 0606 	orr.w	r6, fp, r6
 801a778:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a77c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a780:	f82a 6009 	strh.w	r6, [sl, r9]
 801a784:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a786:	4460      	add	r0, ip
 801a788:	440a      	add	r2, r1
 801a78a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a78e:	e757      	b.n	801a640 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a790:	b005      	add	sp, #20
 801a792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a796:	bf00      	nop
 801a798:	fffff800 	.word	0xfffff800

0801a79c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7a0:	b087      	sub	sp, #28
 801a7a2:	468b      	mov	fp, r1
 801a7a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a7a6:	9204      	str	r2, [sp, #16]
 801a7a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a7ac:	9205      	str	r2, [sp, #20]
 801a7ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a7b2:	6841      	ldr	r1, [r0, #4]
 801a7b4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a7b8:	fb01 2404 	mla	r4, r1, r4, r2
 801a7bc:	6802      	ldr	r2, [r0, #0]
 801a7be:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a7c2:	f8dc 2000 	ldr.w	r2, [ip]
 801a7c6:	9201      	str	r2, [sp, #4]
 801a7c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a7cc:	3204      	adds	r2, #4
 801a7ce:	9202      	str	r2, [sp, #8]
 801a7d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a7d4:	f1bb 0f00 	cmp.w	fp, #0
 801a7d8:	dc03      	bgt.n	801a7e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a7da:	9a04      	ldr	r2, [sp, #16]
 801a7dc:	2a00      	cmp	r2, #0
 801a7de:	f340 8138 	ble.w	801aa52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a7e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a7e4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a7e8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a7ec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a7f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a7f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a7f6:	2b00      	cmp	r3, #0
 801a7f8:	dd0e      	ble.n	801a818 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a7fa:	1402      	asrs	r2, r0, #16
 801a7fc:	d405      	bmi.n	801a80a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a7fe:	42ba      	cmp	r2, r7
 801a800:	da03      	bge.n	801a80a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a802:	140a      	asrs	r2, r1, #16
 801a804:	d401      	bmi.n	801a80a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a806:	42b2      	cmp	r2, r6
 801a808:	db07      	blt.n	801a81a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a80a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a80c:	4410      	add	r0, r2
 801a80e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a810:	3b01      	subs	r3, #1
 801a812:	4411      	add	r1, r2
 801a814:	3402      	adds	r4, #2
 801a816:	e7ee      	b.n	801a7f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a818:	d019      	beq.n	801a84e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a81a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a81c:	1e5a      	subs	r2, r3, #1
 801a81e:	fb05 0502 	mla	r5, r5, r2, r0
 801a822:	142d      	asrs	r5, r5, #16
 801a824:	d409      	bmi.n	801a83a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a826:	42bd      	cmp	r5, r7
 801a828:	da07      	bge.n	801a83a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a82a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a82c:	fb05 1202 	mla	r2, r5, r2, r1
 801a830:	1412      	asrs	r2, r2, #16
 801a832:	d402      	bmi.n	801a83a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a834:	42b2      	cmp	r2, r6
 801a836:	f2c0 80ac 	blt.w	801a992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a83a:	f04f 0e00 	mov.w	lr, #0
 801a83e:	eb03 020e 	add.w	r2, r3, lr
 801a842:	2a00      	cmp	r2, #0
 801a844:	dc3e      	bgt.n	801a8c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a846:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a84a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a84e:	f1bb 0f00 	cmp.w	fp, #0
 801a852:	f340 80fe 	ble.w	801aa52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a856:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a85a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a85e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a862:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a864:	f1bb 0b01 	subs.w	fp, fp, #1
 801a868:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a86c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a870:	eeb0 6a62 	vmov.f32	s12, s5
 801a874:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a878:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a87c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a880:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a884:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a888:	eeb0 6a43 	vmov.f32	s12, s6
 801a88c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a890:	ee12 2a90 	vmov	r2, s5
 801a894:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a898:	fb92 f3f3 	sdiv	r3, r2, r3
 801a89c:	ee13 2a10 	vmov	r2, s6
 801a8a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a8a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8ac:	9a04      	ldr	r2, [sp, #16]
 801a8ae:	9314      	str	r3, [sp, #80]	; 0x50
 801a8b0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a8b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8b6:	eeb0 3a67 	vmov.f32	s6, s15
 801a8ba:	bf08      	it	eq
 801a8bc:	4613      	moveq	r3, r2
 801a8be:	eef0 2a47 	vmov.f32	s5, s14
 801a8c2:	e787      	b.n	801a7d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a8c4:	1406      	asrs	r6, r0, #16
 801a8c6:	d45d      	bmi.n	801a984 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a8c8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a8cc:	42b5      	cmp	r5, r6
 801a8ce:	dd59      	ble.n	801a984 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a8d0:	140f      	asrs	r7, r1, #16
 801a8d2:	d457      	bmi.n	801a984 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a8d4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a8d8:	42ba      	cmp	r2, r7
 801a8da:	dd53      	ble.n	801a984 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a8dc:	9a01      	ldr	r2, [sp, #4]
 801a8de:	b22d      	sxth	r5, r5
 801a8e0:	fb07 2505 	mla	r5, r7, r5, r2
 801a8e4:	5daa      	ldrb	r2, [r5, r6]
 801a8e6:	9d02      	ldr	r5, [sp, #8]
 801a8e8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a8ec:	0e2e      	lsrs	r6, r5, #24
 801a8ee:	d049      	beq.n	801a984 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a8f0:	f06f 0201 	mvn.w	r2, #1
 801a8f4:	fb02 f20e 	mul.w	r2, r2, lr
 801a8f8:	9203      	str	r2, [sp, #12]
 801a8fa:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a8fe:	9a05      	ldr	r2, [sp, #20]
 801a900:	4356      	muls	r6, r2
 801a902:	1c72      	adds	r2, r6, #1
 801a904:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a908:	1212      	asrs	r2, r2, #8
 801a90a:	fa1f f982 	uxth.w	r9, r2
 801a90e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a912:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a916:	43d2      	mvns	r2, r2
 801a918:	b2d2      	uxtb	r2, r2
 801a91a:	fb16 f609 	smulbb	r6, r6, r9
 801a91e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a922:	fb07 6702 	mla	r7, r7, r2, r6
 801a926:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a92a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a92e:	b2ed      	uxtb	r5, r5
 801a930:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a934:	fa5f f888 	uxtb.w	r8, r8
 801a938:	fb15 f509 	smulbb	r5, r5, r9
 801a93c:	fb08 5502 	mla	r5, r8, r2, r5
 801a940:	b2bf      	uxth	r7, r7
 801a942:	fb1a fa09 	smulbb	sl, sl, r9
 801a946:	b2ad      	uxth	r5, r5
 801a948:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a94c:	fb06 a602 	mla	r6, r6, r2, sl
 801a950:	1c7a      	adds	r2, r7, #1
 801a952:	f105 0a01 	add.w	sl, r5, #1
 801a956:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a95a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a95e:	b2b6      	uxth	r6, r6
 801a960:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a964:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a968:	ea4a 0707 	orr.w	r7, sl, r7
 801a96c:	f106 0a01 	add.w	sl, r6, #1
 801a970:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a974:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a978:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a97c:	9a03      	ldr	r2, [sp, #12]
 801a97e:	ea47 070a 	orr.w	r7, r7, sl
 801a982:	52a7      	strh	r7, [r4, r2]
 801a984:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a986:	4410      	add	r0, r2
 801a988:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a98a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a98e:	4411      	add	r1, r2
 801a990:	e755      	b.n	801a83e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a992:	f04f 0800 	mov.w	r8, #0
 801a996:	eba3 0208 	sub.w	r2, r3, r8
 801a99a:	2a00      	cmp	r2, #0
 801a99c:	f77f af53 	ble.w	801a846 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a9a0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a9a4:	9f01      	ldr	r7, [sp, #4]
 801a9a6:	140a      	asrs	r2, r1, #16
 801a9a8:	1405      	asrs	r5, r0, #16
 801a9aa:	fb06 7202 	mla	r2, r6, r2, r7
 801a9ae:	5d52      	ldrb	r2, [r2, r5]
 801a9b0:	9d02      	ldr	r5, [sp, #8]
 801a9b2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a9b6:	0e2e      	lsrs	r6, r5, #24
 801a9b8:	d044      	beq.n	801aa44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a9ba:	9a05      	ldr	r2, [sp, #20]
 801a9bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a9c0:	4356      	muls	r6, r2
 801a9c2:	1c72      	adds	r2, r6, #1
 801a9c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a9c8:	1212      	asrs	r2, r2, #8
 801a9ca:	fa1f f982 	uxth.w	r9, r2
 801a9ce:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a9d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a9d6:	43d2      	mvns	r2, r2
 801a9d8:	b2d2      	uxtb	r2, r2
 801a9da:	fb16 f609 	smulbb	r6, r6, r9
 801a9de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a9e2:	fb07 6702 	mla	r7, r7, r2, r6
 801a9e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a9ea:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a9ee:	b2ed      	uxtb	r5, r5
 801a9f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a9f4:	fa5f fe8e 	uxtb.w	lr, lr
 801a9f8:	fb15 f509 	smulbb	r5, r5, r9
 801a9fc:	fb0e 5502 	mla	r5, lr, r2, r5
 801aa00:	b2bf      	uxth	r7, r7
 801aa02:	fb1a fa09 	smulbb	sl, sl, r9
 801aa06:	b2ad      	uxth	r5, r5
 801aa08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa0c:	fb06 a602 	mla	r6, r6, r2, sl
 801aa10:	1c7a      	adds	r2, r7, #1
 801aa12:	f105 0a01 	add.w	sl, r5, #1
 801aa16:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801aa1a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aa1e:	b2b6      	uxth	r6, r6
 801aa20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa24:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aa28:	ea4a 0707 	orr.w	r7, sl, r7
 801aa2c:	f106 0a01 	add.w	sl, r6, #1
 801aa30:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aa34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa38:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa3c:	ea47 070a 	orr.w	r7, r7, sl
 801aa40:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801aa44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa46:	4410      	add	r0, r2
 801aa48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa4a:	f108 0801 	add.w	r8, r8, #1
 801aa4e:	4411      	add	r1, r2
 801aa50:	e7a1      	b.n	801a996 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801aa52:	b007      	add	sp, #28
 801aa54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa5c:	b085      	sub	sp, #20
 801aa5e:	468b      	mov	fp, r1
 801aa60:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aa62:	9203      	str	r2, [sp, #12]
 801aa64:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801aa68:	6841      	ldr	r1, [r0, #4]
 801aa6a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801aa6e:	fb01 2404 	mla	r4, r1, r4, r2
 801aa72:	6802      	ldr	r2, [r0, #0]
 801aa74:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa78:	f8de 2000 	ldr.w	r2, [lr]
 801aa7c:	9200      	str	r2, [sp, #0]
 801aa7e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aa82:	3204      	adds	r2, #4
 801aa84:	9201      	str	r2, [sp, #4]
 801aa86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa8a:	f1bb 0f00 	cmp.w	fp, #0
 801aa8e:	dc03      	bgt.n	801aa98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aa90:	9a03      	ldr	r2, [sp, #12]
 801aa92:	2a00      	cmp	r2, #0
 801aa94:	f340 8153 	ble.w	801ad3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801aa98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aa9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aa9e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801aaa2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aaa6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aaa8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aaac:	2b00      	cmp	r3, #0
 801aaae:	dd0e      	ble.n	801aace <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aab0:	1408      	asrs	r0, r1, #16
 801aab2:	d405      	bmi.n	801aac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aab4:	42b8      	cmp	r0, r7
 801aab6:	da03      	bge.n	801aac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aab8:	1410      	asrs	r0, r2, #16
 801aaba:	d401      	bmi.n	801aac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aabc:	42b0      	cmp	r0, r6
 801aabe:	db07      	blt.n	801aad0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aac0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aac2:	4401      	add	r1, r0
 801aac4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aac6:	3b01      	subs	r3, #1
 801aac8:	4402      	add	r2, r0
 801aaca:	3402      	adds	r4, #2
 801aacc:	e7ee      	b.n	801aaac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801aace:	d017      	beq.n	801ab00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aad0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aad2:	1e58      	subs	r0, r3, #1
 801aad4:	fb05 1500 	mla	r5, r5, r0, r1
 801aad8:	142d      	asrs	r5, r5, #16
 801aada:	d409      	bmi.n	801aaf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aadc:	42bd      	cmp	r5, r7
 801aade:	da07      	bge.n	801aaf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aae0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aae2:	fb05 2000 	mla	r0, r5, r0, r2
 801aae6:	1400      	asrs	r0, r0, #16
 801aae8:	d402      	bmi.n	801aaf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aaea:	42b0      	cmp	r0, r6
 801aaec:	f2c0 80bc 	blt.w	801ac68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801aaf0:	2600      	movs	r6, #0
 801aaf2:	1998      	adds	r0, r3, r6
 801aaf4:	2800      	cmp	r0, #0
 801aaf6:	dc3e      	bgt.n	801ab76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801aaf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aafc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab00:	f1bb 0f00 	cmp.w	fp, #0
 801ab04:	f340 811b 	ble.w	801ad3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801ab08:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab10:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ab14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab16:	f1bb 0b01 	subs.w	fp, fp, #1
 801ab1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab22:	eeb0 6a62 	vmov.f32	s12, s5
 801ab26:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ab32:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ab36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ab3a:	eeb0 6a43 	vmov.f32	s12, s6
 801ab3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ab42:	ee12 2a90 	vmov	r2, s5
 801ab46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ab4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab4e:	ee13 2a10 	vmov	r2, s6
 801ab52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab56:	9311      	str	r3, [sp, #68]	; 0x44
 801ab58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab5e:	9a03      	ldr	r2, [sp, #12]
 801ab60:	9312      	str	r3, [sp, #72]	; 0x48
 801ab62:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ab66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab68:	eeb0 3a67 	vmov.f32	s6, s15
 801ab6c:	bf08      	it	eq
 801ab6e:	4613      	moveq	r3, r2
 801ab70:	eef0 2a47 	vmov.f32	s5, s14
 801ab74:	e789      	b.n	801aa8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ab76:	140f      	asrs	r7, r1, #16
 801ab78:	d426      	bmi.n	801abc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ab7a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ab7e:	42bd      	cmp	r5, r7
 801ab80:	dd22      	ble.n	801abc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ab82:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ab86:	d41f      	bmi.n	801abc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ab88:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ab8c:	4560      	cmp	r0, ip
 801ab8e:	dd1b      	ble.n	801abc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ab90:	9800      	ldr	r0, [sp, #0]
 801ab92:	b22d      	sxth	r5, r5
 801ab94:	fb0c 0505 	mla	r5, ip, r5, r0
 801ab98:	5de8      	ldrb	r0, [r5, r7]
 801ab9a:	9d01      	ldr	r5, [sp, #4]
 801ab9c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801aba0:	0e07      	lsrs	r7, r0, #24
 801aba2:	2fff      	cmp	r7, #255	; 0xff
 801aba4:	d116      	bne.n	801abd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aba6:	f06f 0501 	mvn.w	r5, #1
 801abaa:	fb05 f706 	mul.w	r7, r5, r6
 801abae:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801abb2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801abb6:	0945      	lsrs	r5, r0, #5
 801abb8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801abbc:	ea4c 0505 	orr.w	r5, ip, r5
 801abc0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801abc4:	4305      	orrs	r5, r0
 801abc6:	53e5      	strh	r5, [r4, r7]
 801abc8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801abca:	4401      	add	r1, r0
 801abcc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801abce:	3e01      	subs	r6, #1
 801abd0:	4402      	add	r2, r0
 801abd2:	e78e      	b.n	801aaf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801abd4:	b2fd      	uxtb	r5, r7
 801abd6:	2f00      	cmp	r7, #0
 801abd8:	d0f6      	beq.n	801abc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801abda:	f06f 0701 	mvn.w	r7, #1
 801abde:	4377      	muls	r7, r6
 801abe0:	fa1f f985 	uxth.w	r9, r5
 801abe4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801abe8:	9702      	str	r7, [sp, #8]
 801abea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801abee:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801abf2:	43ed      	mvns	r5, r5
 801abf4:	b2ed      	uxtb	r5, r5
 801abf6:	fb17 f709 	smulbb	r7, r7, r9
 801abfa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abfe:	fb0c 7c05 	mla	ip, ip, r5, r7
 801ac02:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ac06:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801ac0a:	b2c0      	uxtb	r0, r0
 801ac0c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ac10:	fa5f f888 	uxtb.w	r8, r8
 801ac14:	fb10 f009 	smulbb	r0, r0, r9
 801ac18:	fb08 0005 	mla	r0, r8, r5, r0
 801ac1c:	b280      	uxth	r0, r0
 801ac1e:	fa1f fc8c 	uxth.w	ip, ip
 801ac22:	fb1a fa09 	smulbb	sl, sl, r9
 801ac26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac2a:	fb07 a705 	mla	r7, r7, r5, sl
 801ac2e:	f100 0a01 	add.w	sl, r0, #1
 801ac32:	f10c 0501 	add.w	r5, ip, #1
 801ac36:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ac3a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ac3e:	b2bf      	uxth	r7, r7
 801ac40:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac48:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac4c:	f107 0a01 	add.w	sl, r7, #1
 801ac50:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ac54:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac58:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac5c:	9802      	ldr	r0, [sp, #8]
 801ac5e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ac62:	f824 c000 	strh.w	ip, [r4, r0]
 801ac66:	e7af      	b.n	801abc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ac68:	f04f 0800 	mov.w	r8, #0
 801ac6c:	eba3 0008 	sub.w	r0, r3, r8
 801ac70:	2800      	cmp	r0, #0
 801ac72:	f77f af41 	ble.w	801aaf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ac76:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ac7a:	9f00      	ldr	r7, [sp, #0]
 801ac7c:	1410      	asrs	r0, r2, #16
 801ac7e:	140d      	asrs	r5, r1, #16
 801ac80:	fb06 7000 	mla	r0, r6, r0, r7
 801ac84:	5d40      	ldrb	r0, [r0, r5]
 801ac86:	9d01      	ldr	r5, [sp, #4]
 801ac88:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ac8c:	0e2e      	lsrs	r6, r5, #24
 801ac8e:	2eff      	cmp	r6, #255	; 0xff
 801ac90:	d112      	bne.n	801acb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801ac92:	482c      	ldr	r0, [pc, #176]	; (801ad44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801ac94:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ac98:	0968      	lsrs	r0, r5, #5
 801ac9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ac9e:	4330      	orrs	r0, r6
 801aca0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aca4:	4328      	orrs	r0, r5
 801aca6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801acaa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801acac:	4401      	add	r1, r0
 801acae:	9812      	ldr	r0, [sp, #72]	; 0x48
 801acb0:	f108 0801 	add.w	r8, r8, #1
 801acb4:	4402      	add	r2, r0
 801acb6:	e7d9      	b.n	801ac6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801acb8:	b2f0      	uxtb	r0, r6
 801acba:	2e00      	cmp	r6, #0
 801acbc:	d0f5      	beq.n	801acaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801acbe:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801acc2:	fa1f f980 	uxth.w	r9, r0
 801acc6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801acca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801acce:	43c0      	mvns	r0, r0
 801acd0:	b2c0      	uxtb	r0, r0
 801acd2:	fb16 f609 	smulbb	r6, r6, r9
 801acd6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801acda:	fb07 6700 	mla	r7, r7, r0, r6
 801acde:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ace2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ace6:	b2ed      	uxtb	r5, r5
 801ace8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801acec:	fa5f fc8c 	uxtb.w	ip, ip
 801acf0:	fb15 f509 	smulbb	r5, r5, r9
 801acf4:	fb0c 5500 	mla	r5, ip, r0, r5
 801acf8:	b2bf      	uxth	r7, r7
 801acfa:	fb1a fa09 	smulbb	sl, sl, r9
 801acfe:	b2ad      	uxth	r5, r5
 801ad00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad04:	fb06 a600 	mla	r6, r6, r0, sl
 801ad08:	1c78      	adds	r0, r7, #1
 801ad0a:	f105 0a01 	add.w	sl, r5, #1
 801ad0e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801ad12:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad16:	b2b6      	uxth	r6, r6
 801ad18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ad20:	ea4a 0707 	orr.w	r7, sl, r7
 801ad24:	f106 0a01 	add.w	sl, r6, #1
 801ad28:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ad2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad34:	ea47 070a 	orr.w	r7, r7, sl
 801ad38:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801ad3c:	e7b5      	b.n	801acaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ad3e:	b005      	add	sp, #20
 801ad40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad44:	fffff800 	.word	0xfffff800

0801ad48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad4c:	b087      	sub	sp, #28
 801ad4e:	468b      	mov	fp, r1
 801ad50:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ad52:	9204      	str	r2, [sp, #16]
 801ad54:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ad58:	9205      	str	r2, [sp, #20]
 801ad5a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801ad5e:	6861      	ldr	r1, [r4, #4]
 801ad60:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801ad64:	fb01 2000 	mla	r0, r1, r0, r2
 801ad68:	6822      	ldr	r2, [r4, #0]
 801ad6a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ad6e:	f8de 2000 	ldr.w	r2, [lr]
 801ad72:	9201      	str	r2, [sp, #4]
 801ad74:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ad78:	9202      	str	r2, [sp, #8]
 801ad7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ad7e:	f1bb 0f00 	cmp.w	fp, #0
 801ad82:	dc03      	bgt.n	801ad8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801ad84:	9a04      	ldr	r2, [sp, #16]
 801ad86:	2a00      	cmp	r2, #0
 801ad88:	f340 8142 	ble.w	801b010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ad8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ad8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ad92:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801ad96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ad9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ad9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ada0:	2b00      	cmp	r3, #0
 801ada2:	dd0e      	ble.n	801adc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ada4:	140c      	asrs	r4, r1, #16
 801ada6:	d405      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ada8:	42bc      	cmp	r4, r7
 801adaa:	da03      	bge.n	801adb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801adac:	1414      	asrs	r4, r2, #16
 801adae:	d401      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801adb0:	42b4      	cmp	r4, r6
 801adb2:	db07      	blt.n	801adc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801adb6:	4421      	add	r1, r4
 801adb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801adba:	3b01      	subs	r3, #1
 801adbc:	4422      	add	r2, r4
 801adbe:	3002      	adds	r0, #2
 801adc0:	e7ee      	b.n	801ada0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801adc2:	d019      	beq.n	801adf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801adc4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801adc6:	1e5c      	subs	r4, r3, #1
 801adc8:	fb05 1504 	mla	r5, r5, r4, r1
 801adcc:	142d      	asrs	r5, r5, #16
 801adce:	d409      	bmi.n	801ade4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801add0:	42bd      	cmp	r5, r7
 801add2:	da07      	bge.n	801ade4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801add4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801add6:	fb05 2404 	mla	r4, r5, r4, r2
 801adda:	1424      	asrs	r4, r4, #16
 801addc:	d402      	bmi.n	801ade4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801adde:	42b4      	cmp	r4, r6
 801ade0:	f2c0 80b1 	blt.w	801af46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801ade4:	f04f 0800 	mov.w	r8, #0
 801ade8:	eb03 0408 	add.w	r4, r3, r8
 801adec:	2c00      	cmp	r4, #0
 801adee:	dc3e      	bgt.n	801ae6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801adf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801adf4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801adf8:	f1bb 0f00 	cmp.w	fp, #0
 801adfc:	f340 8108 	ble.w	801b010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ae00:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ae0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae0e:	f1bb 0b01 	subs.w	fp, fp, #1
 801ae12:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae1a:	eeb0 6a62 	vmov.f32	s12, s5
 801ae1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae26:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae2a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ae2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae32:	eeb0 6a43 	vmov.f32	s12, s6
 801ae36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae3a:	ee12 2a90 	vmov	r2, s5
 801ae3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae42:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae46:	ee13 2a10 	vmov	r2, s6
 801ae4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae4e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ae50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae52:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae56:	9a04      	ldr	r2, [sp, #16]
 801ae58:	9314      	str	r3, [sp, #80]	; 0x50
 801ae5a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ae5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae60:	eeb0 3a67 	vmov.f32	s6, s15
 801ae64:	bf08      	it	eq
 801ae66:	4613      	moveq	r3, r2
 801ae68:	eef0 2a47 	vmov.f32	s5, s14
 801ae6c:	e787      	b.n	801ad7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801ae6e:	140e      	asrs	r6, r1, #16
 801ae70:	d462      	bmi.n	801af38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ae72:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ae76:	42b5      	cmp	r5, r6
 801ae78:	dd5e      	ble.n	801af38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ae7a:	1417      	asrs	r7, r2, #16
 801ae7c:	d45c      	bmi.n	801af38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ae7e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801ae82:	42bc      	cmp	r4, r7
 801ae84:	dd58      	ble.n	801af38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ae86:	b22d      	sxth	r5, r5
 801ae88:	fb07 6505 	mla	r5, r7, r5, r6
 801ae8c:	9c02      	ldr	r4, [sp, #8]
 801ae8e:	5d66      	ldrb	r6, [r4, r5]
 801ae90:	2e00      	cmp	r6, #0
 801ae92:	d051      	beq.n	801af38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ae94:	9c01      	ldr	r4, [sp, #4]
 801ae96:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ae9a:	f06f 0401 	mvn.w	r4, #1
 801ae9e:	fb04 f408 	mul.w	r4, r4, r8
 801aea2:	9403      	str	r4, [sp, #12]
 801aea4:	5b05      	ldrh	r5, [r0, r4]
 801aea6:	9c05      	ldr	r4, [sp, #20]
 801aea8:	4366      	muls	r6, r4
 801aeaa:	1c74      	adds	r4, r6, #1
 801aeac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801aeb0:	1224      	asrs	r4, r4, #8
 801aeb2:	b2a7      	uxth	r7, r4
 801aeb4:	122e      	asrs	r6, r5, #8
 801aeb6:	43e4      	mvns	r4, r4
 801aeb8:	b2e4      	uxtb	r4, r4
 801aeba:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801aebe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aec2:	fb16 f604 	smulbb	r6, r6, r4
 801aec6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aeca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aece:	00ed      	lsls	r5, r5, #3
 801aed0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aed4:	b2ed      	uxtb	r5, r5
 801aed6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801aeda:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801aede:	fb15 f504 	smulbb	r5, r5, r4
 801aee2:	fa5f f989 	uxtb.w	r9, r9
 801aee6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aeea:	fb09 5507 	mla	r5, r9, r7, r5
 801aeee:	fb1a fa04 	smulbb	sl, sl, r4
 801aef2:	fa1f fc8c 	uxth.w	ip, ip
 801aef6:	b2ad      	uxth	r5, r5
 801aef8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aefc:	fb06 a607 	mla	r6, r6, r7, sl
 801af00:	f10c 0401 	add.w	r4, ip, #1
 801af04:	f105 0a01 	add.w	sl, r5, #1
 801af08:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801af0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af10:	b2b6      	uxth	r6, r6
 801af12:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af1a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801af1e:	f106 0a01 	add.w	sl, r6, #1
 801af22:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af2a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af2e:	9c03      	ldr	r4, [sp, #12]
 801af30:	ea4c 0c0a 	orr.w	ip, ip, sl
 801af34:	f820 c004 	strh.w	ip, [r0, r4]
 801af38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af3a:	4421      	add	r1, r4
 801af3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801af3e:	f108 38ff 	add.w	r8, r8, #4294967295
 801af42:	4422      	add	r2, r4
 801af44:	e750      	b.n	801ade8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801af46:	f04f 0900 	mov.w	r9, #0
 801af4a:	eba3 0409 	sub.w	r4, r3, r9
 801af4e:	2c00      	cmp	r4, #0
 801af50:	f77f af4e 	ble.w	801adf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801af54:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801af58:	140d      	asrs	r5, r1, #16
 801af5a:	1414      	asrs	r4, r2, #16
 801af5c:	fb06 5404 	mla	r4, r6, r4, r5
 801af60:	9d02      	ldr	r5, [sp, #8]
 801af62:	5d2e      	ldrb	r6, [r5, r4]
 801af64:	2e00      	cmp	r6, #0
 801af66:	d04c      	beq.n	801b002 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801af68:	9d01      	ldr	r5, [sp, #4]
 801af6a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801af6e:	9c05      	ldr	r4, [sp, #20]
 801af70:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801af74:	4366      	muls	r6, r4
 801af76:	1c74      	adds	r4, r6, #1
 801af78:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801af7c:	1224      	asrs	r4, r4, #8
 801af7e:	b2a7      	uxth	r7, r4
 801af80:	122e      	asrs	r6, r5, #8
 801af82:	43e4      	mvns	r4, r4
 801af84:	b2e4      	uxtb	r4, r4
 801af86:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801af8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af8e:	fb16 f604 	smulbb	r6, r6, r4
 801af92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801af96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af9a:	00ed      	lsls	r5, r5, #3
 801af9c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801afa0:	b2ed      	uxtb	r5, r5
 801afa2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801afa6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801afaa:	fb15 f504 	smulbb	r5, r5, r4
 801afae:	fa5f f888 	uxtb.w	r8, r8
 801afb2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801afb6:	fb08 5507 	mla	r5, r8, r7, r5
 801afba:	fb1a fa04 	smulbb	sl, sl, r4
 801afbe:	fa1f fc8c 	uxth.w	ip, ip
 801afc2:	b2ad      	uxth	r5, r5
 801afc4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801afc8:	fb06 a607 	mla	r6, r6, r7, sl
 801afcc:	f10c 0401 	add.w	r4, ip, #1
 801afd0:	f105 0a01 	add.w	sl, r5, #1
 801afd4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801afd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801afdc:	b2b6      	uxth	r6, r6
 801afde:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801afe2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801afe6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801afea:	f106 0a01 	add.w	sl, r6, #1
 801afee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aff2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aff6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801affa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801affe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b002:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b004:	4421      	add	r1, r4
 801b006:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b008:	f109 0901 	add.w	r9, r9, #1
 801b00c:	4422      	add	r2, r4
 801b00e:	e79c      	b.n	801af4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b010:	b007      	add	sp, #28
 801b012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b016 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b016:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b01a:	b085      	sub	sp, #20
 801b01c:	468b      	mov	fp, r1
 801b01e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b020:	9203      	str	r2, [sp, #12]
 801b022:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801b026:	6861      	ldr	r1, [r4, #4]
 801b028:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b02c:	fb01 2000 	mla	r0, r1, r0, r2
 801b030:	6822      	ldr	r2, [r4, #0]
 801b032:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b036:	f8d8 2000 	ldr.w	r2, [r8]
 801b03a:	9200      	str	r2, [sp, #0]
 801b03c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b040:	9201      	str	r2, [sp, #4]
 801b042:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b046:	f1bb 0f00 	cmp.w	fp, #0
 801b04a:	dc03      	bgt.n	801b054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b04c:	9a03      	ldr	r2, [sp, #12]
 801b04e:	2a00      	cmp	r2, #0
 801b050:	f340 8146 	ble.w	801b2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b054:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b056:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b05a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b05e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b062:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b064:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b068:	2b00      	cmp	r3, #0
 801b06a:	dd0e      	ble.n	801b08a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b06c:	140c      	asrs	r4, r1, #16
 801b06e:	d405      	bmi.n	801b07c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b070:	42bc      	cmp	r4, r7
 801b072:	da03      	bge.n	801b07c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b074:	1414      	asrs	r4, r2, #16
 801b076:	d401      	bmi.n	801b07c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b078:	42b4      	cmp	r4, r6
 801b07a:	db07      	blt.n	801b08c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b07c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b07e:	4421      	add	r1, r4
 801b080:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b082:	3b01      	subs	r3, #1
 801b084:	4422      	add	r2, r4
 801b086:	3002      	adds	r0, #2
 801b088:	e7ee      	b.n	801b068 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b08a:	d017      	beq.n	801b0bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b08c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b08e:	1e5c      	subs	r4, r3, #1
 801b090:	fb05 1504 	mla	r5, r5, r4, r1
 801b094:	142d      	asrs	r5, r5, #16
 801b096:	d409      	bmi.n	801b0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b098:	42bd      	cmp	r5, r7
 801b09a:	da07      	bge.n	801b0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b09c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b09e:	fb05 2404 	mla	r4, r5, r4, r2
 801b0a2:	1424      	asrs	r4, r4, #16
 801b0a4:	d402      	bmi.n	801b0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b0a6:	42b4      	cmp	r4, r6
 801b0a8:	f2c0 80b3 	blt.w	801b212 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b0ac:	2600      	movs	r6, #0
 801b0ae:	199c      	adds	r4, r3, r6
 801b0b0:	2c00      	cmp	r4, #0
 801b0b2:	dc3e      	bgt.n	801b132 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b0b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b0bc:	f1bb 0f00 	cmp.w	fp, #0
 801b0c0:	f340 810e 	ble.w	801b2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b0c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b0d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0d2:	f1bb 0b01 	subs.w	fp, fp, #1
 801b0d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b0da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0de:	eeb0 6a62 	vmov.f32	s12, s5
 801b0e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b0e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b0ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b0ee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b0f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0f6:	eeb0 6a43 	vmov.f32	s12, s6
 801b0fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0fe:	ee12 2a90 	vmov	r2, s5
 801b102:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b106:	fb92 f3f3 	sdiv	r3, r2, r3
 801b10a:	ee13 2a10 	vmov	r2, s6
 801b10e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b112:	9311      	str	r3, [sp, #68]	; 0x44
 801b114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b116:	fb92 f3f3 	sdiv	r3, r2, r3
 801b11a:	9a03      	ldr	r2, [sp, #12]
 801b11c:	9312      	str	r3, [sp, #72]	; 0x48
 801b11e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b124:	eeb0 3a67 	vmov.f32	s6, s15
 801b128:	bf08      	it	eq
 801b12a:	4613      	moveq	r3, r2
 801b12c:	eef0 2a47 	vmov.f32	s5, s14
 801b130:	e789      	b.n	801b046 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b132:	140f      	asrs	r7, r1, #16
 801b134:	d418      	bmi.n	801b168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b136:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b13a:	42bd      	cmp	r5, r7
 801b13c:	dd14      	ble.n	801b168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b13e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b142:	d411      	bmi.n	801b168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b144:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b148:	4564      	cmp	r4, ip
 801b14a:	dd0d      	ble.n	801b168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b14c:	b22d      	sxth	r5, r5
 801b14e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b152:	9c01      	ldr	r4, [sp, #4]
 801b154:	5d64      	ldrb	r4, [r4, r5]
 801b156:	2cff      	cmp	r4, #255	; 0xff
 801b158:	d10c      	bne.n	801b174 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b15a:	9c00      	ldr	r4, [sp, #0]
 801b15c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b160:	f06f 0401 	mvn.w	r4, #1
 801b164:	4374      	muls	r4, r6
 801b166:	5305      	strh	r5, [r0, r4]
 801b168:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b16a:	4421      	add	r1, r4
 801b16c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b16e:	3e01      	subs	r6, #1
 801b170:	4422      	add	r2, r4
 801b172:	e79c      	b.n	801b0ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b174:	2c00      	cmp	r4, #0
 801b176:	d0f7      	beq.n	801b168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b178:	9f00      	ldr	r7, [sp, #0]
 801b17a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b17e:	f06f 0501 	mvn.w	r5, #1
 801b182:	4375      	muls	r5, r6
 801b184:	9502      	str	r5, [sp, #8]
 801b186:	5b45      	ldrh	r5, [r0, r5]
 801b188:	fa1f fc84 	uxth.w	ip, r4
 801b18c:	122f      	asrs	r7, r5, #8
 801b18e:	43e4      	mvns	r4, r4
 801b190:	b2e4      	uxtb	r4, r4
 801b192:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b196:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b19a:	fb17 f704 	smulbb	r7, r7, r4
 801b19e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b1a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b1a6:	00ed      	lsls	r5, r5, #3
 801b1a8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b1ac:	b2ed      	uxtb	r5, r5
 801b1ae:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b1b2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b1b6:	fb15 f504 	smulbb	r5, r5, r4
 801b1ba:	fa5f f989 	uxtb.w	r9, r9
 801b1be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b1c2:	fb09 550c 	mla	r5, r9, ip, r5
 801b1c6:	fb1a fa04 	smulbb	sl, sl, r4
 801b1ca:	fa1f fe8e 	uxth.w	lr, lr
 801b1ce:	b2ad      	uxth	r5, r5
 801b1d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b1d4:	fb07 a70c 	mla	r7, r7, ip, sl
 801b1d8:	f10e 0401 	add.w	r4, lr, #1
 801b1dc:	f105 0a01 	add.w	sl, r5, #1
 801b1e0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b1e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b1e8:	b2bf      	uxth	r7, r7
 801b1ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b1ee:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b1f2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b1f6:	f107 0a01 	add.w	sl, r7, #1
 801b1fa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b1fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b202:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b206:	9c02      	ldr	r4, [sp, #8]
 801b208:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b20c:	f820 e004 	strh.w	lr, [r0, r4]
 801b210:	e7aa      	b.n	801b168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b212:	f04f 0900 	mov.w	r9, #0
 801b216:	eba3 0409 	sub.w	r4, r3, r9
 801b21a:	2c00      	cmp	r4, #0
 801b21c:	f77f af4a 	ble.w	801b0b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b220:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b224:	1414      	asrs	r4, r2, #16
 801b226:	140d      	asrs	r5, r1, #16
 801b228:	fb06 5504 	mla	r5, r6, r4, r5
 801b22c:	9c01      	ldr	r4, [sp, #4]
 801b22e:	5d64      	ldrb	r4, [r4, r5]
 801b230:	2cff      	cmp	r4, #255	; 0xff
 801b232:	d10b      	bne.n	801b24c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b234:	9c00      	ldr	r4, [sp, #0]
 801b236:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b23a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b23e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b240:	4421      	add	r1, r4
 801b242:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b244:	f109 0901 	add.w	r9, r9, #1
 801b248:	4422      	add	r2, r4
 801b24a:	e7e4      	b.n	801b216 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b24c:	2c00      	cmp	r4, #0
 801b24e:	d0f6      	beq.n	801b23e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b250:	9e00      	ldr	r6, [sp, #0]
 801b252:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b256:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b25a:	b2a7      	uxth	r7, r4
 801b25c:	122e      	asrs	r6, r5, #8
 801b25e:	43e4      	mvns	r4, r4
 801b260:	b2e4      	uxtb	r4, r4
 801b262:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b266:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b26a:	fb16 f604 	smulbb	r6, r6, r4
 801b26e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b272:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b276:	00ed      	lsls	r5, r5, #3
 801b278:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b27c:	b2ed      	uxtb	r5, r5
 801b27e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b282:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b286:	fb15 f504 	smulbb	r5, r5, r4
 801b28a:	fa5f fe8e 	uxtb.w	lr, lr
 801b28e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b292:	fb0e 5507 	mla	r5, lr, r7, r5
 801b296:	fb1a fa04 	smulbb	sl, sl, r4
 801b29a:	fa1f fc8c 	uxth.w	ip, ip
 801b29e:	b2ad      	uxth	r5, r5
 801b2a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b2a4:	fb06 a607 	mla	r6, r6, r7, sl
 801b2a8:	f10c 0401 	add.w	r4, ip, #1
 801b2ac:	f105 0a01 	add.w	sl, r5, #1
 801b2b0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b2b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b2b8:	b2b6      	uxth	r6, r6
 801b2ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b2be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b2c2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b2c6:	f106 0a01 	add.w	sl, r6, #1
 801b2ca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b2ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b2d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b2d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b2da:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b2de:	e7ae      	b.n	801b23e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b2e0:	b005      	add	sp, #20
 801b2e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2ea:	b085      	sub	sp, #20
 801b2ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b2ee:	9203      	str	r2, [sp, #12]
 801b2f0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b2f4:	9201      	str	r2, [sp, #4]
 801b2f6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b2fa:	9100      	str	r1, [sp, #0]
 801b2fc:	6841      	ldr	r1, [r0, #4]
 801b2fe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b302:	fb01 2404 	mla	r4, r1, r4, r2
 801b306:	6802      	ldr	r2, [r0, #0]
 801b308:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b30c:	f8de 2000 	ldr.w	r2, [lr]
 801b310:	9202      	str	r2, [sp, #8]
 801b312:	9a01      	ldr	r2, [sp, #4]
 801b314:	43d6      	mvns	r6, r2
 801b316:	b2f6      	uxtb	r6, r6
 801b318:	9a00      	ldr	r2, [sp, #0]
 801b31a:	2a00      	cmp	r2, #0
 801b31c:	dc03      	bgt.n	801b326 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b31e:	9a03      	ldr	r2, [sp, #12]
 801b320:	2a00      	cmp	r2, #0
 801b322:	f340 8124 	ble.w	801b56e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b326:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b328:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b32c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b330:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b334:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b336:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b33a:	2b00      	cmp	r3, #0
 801b33c:	dd0e      	ble.n	801b35c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b33e:	1408      	asrs	r0, r1, #16
 801b340:	d405      	bmi.n	801b34e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b342:	4560      	cmp	r0, ip
 801b344:	da03      	bge.n	801b34e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b346:	1410      	asrs	r0, r2, #16
 801b348:	d401      	bmi.n	801b34e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b34a:	42b8      	cmp	r0, r7
 801b34c:	db07      	blt.n	801b35e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b34e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b350:	4401      	add	r1, r0
 801b352:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b354:	3b01      	subs	r3, #1
 801b356:	4402      	add	r2, r0
 801b358:	3402      	adds	r4, #2
 801b35a:	e7ee      	b.n	801b33a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b35c:	d06e      	beq.n	801b43c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b35e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b360:	1e58      	subs	r0, r3, #1
 801b362:	fb05 1500 	mla	r5, r5, r0, r1
 801b366:	142d      	asrs	r5, r5, #16
 801b368:	d45c      	bmi.n	801b424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b36a:	4565      	cmp	r5, ip
 801b36c:	da5a      	bge.n	801b424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b36e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b370:	fb05 2000 	mla	r0, r5, r0, r2
 801b374:	1400      	asrs	r0, r0, #16
 801b376:	d455      	bmi.n	801b424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b378:	42b8      	cmp	r0, r7
 801b37a:	da53      	bge.n	801b424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b37c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b380:	4699      	mov	r9, r3
 801b382:	46a2      	mov	sl, r4
 801b384:	f1b9 0f00 	cmp.w	r9, #0
 801b388:	dd54      	ble.n	801b434 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b38a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b38e:	140d      	asrs	r5, r1, #16
 801b390:	1410      	asrs	r0, r2, #16
 801b392:	fb07 5000 	mla	r0, r7, r0, r5
 801b396:	9d02      	ldr	r5, [sp, #8]
 801b398:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b39c:	f8ba 5000 	ldrh.w	r5, [sl]
 801b3a0:	122f      	asrs	r7, r5, #8
 801b3a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b3a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b3aa:	fb17 f706 	smulbb	r7, r7, r6
 801b3ae:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b3b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b3b6:	00ed      	lsls	r5, r5, #3
 801b3b8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b3bc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b3c0:	10c7      	asrs	r7, r0, #3
 801b3c2:	b2ed      	uxtb	r5, r5
 801b3c4:	00c0      	lsls	r0, r0, #3
 801b3c6:	fb18 f806 	smulbb	r8, r8, r6
 801b3ca:	fb15 f506 	smulbb	r5, r5, r6
 801b3ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b3d2:	b2c0      	uxtb	r0, r0
 801b3d4:	fa1f fc8c 	uxth.w	ip, ip
 801b3d8:	fb07 870b 	mla	r7, r7, fp, r8
 801b3dc:	fb00 500b 	mla	r0, r0, fp, r5
 801b3e0:	b280      	uxth	r0, r0
 801b3e2:	b2bf      	uxth	r7, r7
 801b3e4:	f10c 0501 	add.w	r5, ip, #1
 801b3e8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b3ec:	f107 0801 	add.w	r8, r7, #1
 801b3f0:	1c45      	adds	r5, r0, #1
 801b3f2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b3f6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b3fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b3fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b400:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b404:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b408:	ea45 0c0c 	orr.w	ip, r5, ip
 801b40c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b410:	4401      	add	r1, r0
 801b412:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b414:	ea4c 0c08 	orr.w	ip, ip, r8
 801b418:	f82a cb02 	strh.w	ip, [sl], #2
 801b41c:	4402      	add	r2, r0
 801b41e:	f109 39ff 	add.w	r9, r9, #4294967295
 801b422:	e7af      	b.n	801b384 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b424:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b428:	f04f 0800 	mov.w	r8, #0
 801b42c:	eb03 0008 	add.w	r0, r3, r8
 801b430:	2800      	cmp	r0, #0
 801b432:	dc41      	bgt.n	801b4b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b434:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b438:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b43c:	9b00      	ldr	r3, [sp, #0]
 801b43e:	2b00      	cmp	r3, #0
 801b440:	f340 8095 	ble.w	801b56e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b444:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b448:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b44c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b452:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b456:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b45a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b45e:	eef0 6a62 	vmov.f32	s13, s5
 801b462:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b466:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b46a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b46e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b472:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b476:	eef0 6a43 	vmov.f32	s13, s6
 801b47a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b47e:	ee12 2a90 	vmov	r2, s5
 801b482:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b486:	fb92 f3f3 	sdiv	r3, r2, r3
 801b48a:	ee13 2a10 	vmov	r2, s6
 801b48e:	9311      	str	r3, [sp, #68]	; 0x44
 801b490:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b492:	fb92 f3f3 	sdiv	r3, r2, r3
 801b496:	9312      	str	r3, [sp, #72]	; 0x48
 801b498:	9b00      	ldr	r3, [sp, #0]
 801b49a:	9a03      	ldr	r2, [sp, #12]
 801b49c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4a0:	3b01      	subs	r3, #1
 801b4a2:	9300      	str	r3, [sp, #0]
 801b4a4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b4a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b4aa:	eeb0 3a67 	vmov.f32	s6, s15
 801b4ae:	bf08      	it	eq
 801b4b0:	4613      	moveq	r3, r2
 801b4b2:	eef0 2a47 	vmov.f32	s5, s14
 801b4b6:	e72f      	b.n	801b318 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b4b8:	140f      	asrs	r7, r1, #16
 801b4ba:	d451      	bmi.n	801b560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b4bc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b4c0:	42bd      	cmp	r5, r7
 801b4c2:	dd4d      	ble.n	801b560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b4c4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b4c8:	d44a      	bmi.n	801b560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b4ca:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b4ce:	4560      	cmp	r0, ip
 801b4d0:	dd46      	ble.n	801b560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b4d2:	b22d      	sxth	r5, r5
 801b4d4:	fb0c 7505 	mla	r5, ip, r5, r7
 801b4d8:	9802      	ldr	r0, [sp, #8]
 801b4da:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b4de:	f06f 0501 	mvn.w	r5, #1
 801b4e2:	fb05 fb08 	mul.w	fp, r5, r8
 801b4e6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b4ea:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b4ee:	122f      	asrs	r7, r5, #8
 801b4f0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b4f4:	fb17 f706 	smulbb	r7, r7, r6
 801b4f8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b4fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b500:	00ed      	lsls	r5, r5, #3
 801b502:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b506:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b50a:	10c7      	asrs	r7, r0, #3
 801b50c:	b2ed      	uxtb	r5, r5
 801b50e:	00c0      	lsls	r0, r0, #3
 801b510:	fb19 f906 	smulbb	r9, r9, r6
 801b514:	fb15 f506 	smulbb	r5, r5, r6
 801b518:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b51c:	b2c0      	uxtb	r0, r0
 801b51e:	fa1f fc8c 	uxth.w	ip, ip
 801b522:	fb07 970a 	mla	r7, r7, sl, r9
 801b526:	fb00 500a 	mla	r0, r0, sl, r5
 801b52a:	b2bf      	uxth	r7, r7
 801b52c:	b280      	uxth	r0, r0
 801b52e:	f10c 0501 	add.w	r5, ip, #1
 801b532:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b536:	f107 0901 	add.w	r9, r7, #1
 801b53a:	1c45      	adds	r5, r0, #1
 801b53c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b540:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b544:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b548:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b54c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b550:	ea45 0c0c 	orr.w	ip, r5, ip
 801b554:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b558:	ea4c 0c09 	orr.w	ip, ip, r9
 801b55c:	f824 c00b 	strh.w	ip, [r4, fp]
 801b560:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b562:	4401      	add	r1, r0
 801b564:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b566:	f108 38ff 	add.w	r8, r8, #4294967295
 801b56a:	4402      	add	r2, r0
 801b56c:	e75e      	b.n	801b42c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b56e:	b005      	add	sp, #20
 801b570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b574 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b578:	b085      	sub	sp, #20
 801b57a:	4693      	mov	fp, r2
 801b57c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b57e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b580:	6870      	ldr	r0, [r6, #4]
 801b582:	9101      	str	r1, [sp, #4]
 801b584:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b588:	fb00 2404 	mla	r4, r0, r4, r2
 801b58c:	6832      	ldr	r2, [r6, #0]
 801b58e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b592:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b596:	682a      	ldr	r2, [r5, #0]
 801b598:	9202      	str	r2, [sp, #8]
 801b59a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b59e:	9a01      	ldr	r2, [sp, #4]
 801b5a0:	2a00      	cmp	r2, #0
 801b5a2:	dc03      	bgt.n	801b5ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b5a4:	f1bb 0f00 	cmp.w	fp, #0
 801b5a8:	f340 809a 	ble.w	801b6e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b5ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b5b2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b5b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b5ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5c0:	2b00      	cmp	r3, #0
 801b5c2:	dd0c      	ble.n	801b5de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b5c4:	1406      	asrs	r6, r0, #16
 801b5c6:	d405      	bmi.n	801b5d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5c8:	454e      	cmp	r6, r9
 801b5ca:	da03      	bge.n	801b5d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5cc:	1416      	asrs	r6, r2, #16
 801b5ce:	d401      	bmi.n	801b5d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b5d0:	4546      	cmp	r6, r8
 801b5d2:	db05      	blt.n	801b5e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b5d4:	4470      	add	r0, lr
 801b5d6:	4462      	add	r2, ip
 801b5d8:	3b01      	subs	r3, #1
 801b5da:	3402      	adds	r4, #2
 801b5dc:	e7f0      	b.n	801b5c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b5de:	d00f      	beq.n	801b600 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b5e0:	1e5e      	subs	r6, r3, #1
 801b5e2:	fb0e 0706 	mla	r7, lr, r6, r0
 801b5e6:	143f      	asrs	r7, r7, #16
 801b5e8:	d541      	bpl.n	801b66e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b5ea:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b5ee:	4698      	mov	r8, r3
 801b5f0:	9603      	str	r6, [sp, #12]
 801b5f2:	f1b8 0f00 	cmp.w	r8, #0
 801b5f6:	dc56      	bgt.n	801b6a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b5f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b5fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b600:	9b01      	ldr	r3, [sp, #4]
 801b602:	2b00      	cmp	r3, #0
 801b604:	dd6c      	ble.n	801b6e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b606:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b60a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b60e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b612:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b614:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b618:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b61c:	eeb0 6a62 	vmov.f32	s12, s5
 801b620:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b624:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b628:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b62c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b630:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b634:	eeb0 6a43 	vmov.f32	s12, s6
 801b638:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b63c:	ee12 2a90 	vmov	r2, s5
 801b640:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b644:	fb92 fef3 	sdiv	lr, r2, r3
 801b648:	ee13 2a10 	vmov	r2, s6
 801b64c:	fb92 fcf3 	sdiv	ip, r2, r3
 801b650:	9b01      	ldr	r3, [sp, #4]
 801b652:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b656:	3b01      	subs	r3, #1
 801b658:	9301      	str	r3, [sp, #4]
 801b65a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b65e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b660:	eeb0 3a67 	vmov.f32	s6, s15
 801b664:	bf08      	it	eq
 801b666:	465b      	moveq	r3, fp
 801b668:	eef0 2a47 	vmov.f32	s5, s14
 801b66c:	e797      	b.n	801b59e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b66e:	454f      	cmp	r7, r9
 801b670:	dabb      	bge.n	801b5ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b672:	fb0c 2606 	mla	r6, ip, r6, r2
 801b676:	1436      	asrs	r6, r6, #16
 801b678:	d4b7      	bmi.n	801b5ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b67a:	4546      	cmp	r6, r8
 801b67c:	dab5      	bge.n	801b5ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b67e:	461e      	mov	r6, r3
 801b680:	46a0      	mov	r8, r4
 801b682:	2e00      	cmp	r6, #0
 801b684:	ddb8      	ble.n	801b5f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b686:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b68a:	9902      	ldr	r1, [sp, #8]
 801b68c:	1417      	asrs	r7, r2, #16
 801b68e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b692:	fb0a 9707 	mla	r7, sl, r7, r9
 801b696:	4470      	add	r0, lr
 801b698:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b69c:	f828 7b02 	strh.w	r7, [r8], #2
 801b6a0:	4462      	add	r2, ip
 801b6a2:	3e01      	subs	r6, #1
 801b6a4:	e7ed      	b.n	801b682 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b6a6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b6aa:	d414      	bmi.n	801b6d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b6ac:	68ae      	ldr	r6, [r5, #8]
 801b6ae:	454e      	cmp	r6, r9
 801b6b0:	dd11      	ble.n	801b6d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b6b2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b6b6:	d40e      	bmi.n	801b6d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b6b8:	68ef      	ldr	r7, [r5, #12]
 801b6ba:	4557      	cmp	r7, sl
 801b6bc:	dd0b      	ble.n	801b6d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b6be:	b236      	sxth	r6, r6
 801b6c0:	fb0a 9606 	mla	r6, sl, r6, r9
 801b6c4:	9f02      	ldr	r7, [sp, #8]
 801b6c6:	f06f 0101 	mvn.w	r1, #1
 801b6ca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b6ce:	fb01 f608 	mul.w	r6, r1, r8
 801b6d2:	9903      	ldr	r1, [sp, #12]
 801b6d4:	538f      	strh	r7, [r1, r6]
 801b6d6:	4470      	add	r0, lr
 801b6d8:	4462      	add	r2, ip
 801b6da:	f108 38ff 	add.w	r8, r8, #4294967295
 801b6de:	e788      	b.n	801b5f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b6e0:	b005      	add	sp, #20
 801b6e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b6e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6ea:	b087      	sub	sp, #28
 801b6ec:	468b      	mov	fp, r1
 801b6ee:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b6f0:	9203      	str	r2, [sp, #12]
 801b6f2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b6f6:	9204      	str	r2, [sp, #16]
 801b6f8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b6fc:	6841      	ldr	r1, [r0, #4]
 801b6fe:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b702:	fb01 2505 	mla	r5, r1, r5, r2
 801b706:	6802      	ldr	r2, [r0, #0]
 801b708:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b70c:	f8d9 2000 	ldr.w	r2, [r9]
 801b710:	9201      	str	r2, [sp, #4]
 801b712:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b716:	f1bb 0f00 	cmp.w	fp, #0
 801b71a:	dc03      	bgt.n	801b724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b71c:	9a03      	ldr	r2, [sp, #12]
 801b71e:	2a00      	cmp	r2, #0
 801b720:	f340 8159 	ble.w	801b9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b724:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b726:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b72a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b72e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b732:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b734:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b738:	2b00      	cmp	r3, #0
 801b73a:	dd0e      	ble.n	801b75a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b73c:	1402      	asrs	r2, r0, #16
 801b73e:	d405      	bmi.n	801b74c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b740:	42ba      	cmp	r2, r7
 801b742:	da03      	bge.n	801b74c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b744:	140a      	asrs	r2, r1, #16
 801b746:	d401      	bmi.n	801b74c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b748:	42b2      	cmp	r2, r6
 801b74a:	db07      	blt.n	801b75c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b74c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b74e:	4410      	add	r0, r2
 801b750:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b752:	3b01      	subs	r3, #1
 801b754:	4411      	add	r1, r2
 801b756:	3502      	adds	r5, #2
 801b758:	e7ee      	b.n	801b738 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b75a:	d017      	beq.n	801b78c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b75c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b75e:	1e5a      	subs	r2, r3, #1
 801b760:	fb04 0402 	mla	r4, r4, r2, r0
 801b764:	1424      	asrs	r4, r4, #16
 801b766:	d409      	bmi.n	801b77c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b768:	42bc      	cmp	r4, r7
 801b76a:	da07      	bge.n	801b77c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b76c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b76e:	fb04 1202 	mla	r2, r4, r2, r1
 801b772:	1412      	asrs	r2, r2, #16
 801b774:	d402      	bmi.n	801b77c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b776:	42b2      	cmp	r2, r6
 801b778:	f2c0 80bf 	blt.w	801b8fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b77c:	2700      	movs	r7, #0
 801b77e:	19da      	adds	r2, r3, r7
 801b780:	2a00      	cmp	r2, #0
 801b782:	dc3e      	bgt.n	801b802 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b784:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b788:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b78c:	f1bb 0f00 	cmp.w	fp, #0
 801b790:	f340 8121 	ble.w	801b9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b794:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b798:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b79c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b7a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b7a2:	f1bb 0b01 	subs.w	fp, fp, #1
 801b7a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7ae:	eeb0 6a62 	vmov.f32	s12, s5
 801b7b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7be:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b7c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7c6:	eeb0 6a43 	vmov.f32	s12, s6
 801b7ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7ce:	ee12 2a90 	vmov	r2, s5
 801b7d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7da:	ee13 2a10 	vmov	r2, s6
 801b7de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801b7e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b7e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7ea:	9a03      	ldr	r2, [sp, #12]
 801b7ec:	9314      	str	r3, [sp, #80]	; 0x50
 801b7ee:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b7f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b7f4:	eeb0 3a67 	vmov.f32	s6, s15
 801b7f8:	bf08      	it	eq
 801b7fa:	4613      	moveq	r3, r2
 801b7fc:	eef0 2a47 	vmov.f32	s5, s14
 801b800:	e789      	b.n	801b716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b802:	1406      	asrs	r6, r0, #16
 801b804:	d42d      	bmi.n	801b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b806:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b80a:	42b4      	cmp	r4, r6
 801b80c:	dd29      	ble.n	801b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b80e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b812:	d426      	bmi.n	801b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b814:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b818:	4562      	cmp	r2, ip
 801b81a:	dd22      	ble.n	801b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b81c:	b224      	sxth	r4, r4
 801b81e:	9a01      	ldr	r2, [sp, #4]
 801b820:	fb0c 6404 	mla	r4, ip, r4, r6
 801b824:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b828:	0e22      	lsrs	r2, r4, #24
 801b82a:	d01a      	beq.n	801b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b82c:	9e04      	ldr	r6, [sp, #16]
 801b82e:	4372      	muls	r2, r6
 801b830:	1c56      	adds	r6, r2, #1
 801b832:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b836:	1212      	asrs	r2, r2, #8
 801b838:	0a26      	lsrs	r6, r4, #8
 801b83a:	2aff      	cmp	r2, #255	; 0xff
 801b83c:	9605      	str	r6, [sp, #20]
 801b83e:	d116      	bne.n	801b86e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b840:	f06f 0201 	mvn.w	r2, #1
 801b844:	fb02 fc07 	mul.w	ip, r2, r7
 801b848:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b84c:	0962      	lsrs	r2, r4, #5
 801b84e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b852:	f026 0607 	bic.w	r6, r6, #7
 801b856:	4316      	orrs	r6, r2
 801b858:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b85c:	4326      	orrs	r6, r4
 801b85e:	f825 600c 	strh.w	r6, [r5, ip]
 801b862:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b864:	4410      	add	r0, r2
 801b866:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b868:	3f01      	subs	r7, #1
 801b86a:	4411      	add	r1, r2
 801b86c:	e787      	b.n	801b77e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b86e:	f06f 0601 	mvn.w	r6, #1
 801b872:	437e      	muls	r6, r7
 801b874:	fa1f fa82 	uxth.w	sl, r2
 801b878:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b87c:	9602      	str	r6, [sp, #8]
 801b87e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b882:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b886:	43d2      	mvns	r2, r2
 801b888:	b2d2      	uxtb	r2, r2
 801b88a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b88e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b892:	fb0e ce02 	mla	lr, lr, r2, ip
 801b896:	b2e4      	uxtb	r4, r4
 801b898:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b89c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b8a0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b8a4:	fa5f f888 	uxtb.w	r8, r8
 801b8a8:	fb14 f40a 	smulbb	r4, r4, sl
 801b8ac:	fb08 4402 	mla	r4, r8, r2, r4
 801b8b0:	fa1f fe8e 	uxth.w	lr, lr
 801b8b4:	fb16 f60a 	smulbb	r6, r6, sl
 801b8b8:	b2a4      	uxth	r4, r4
 801b8ba:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b8be:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b8c2:	f10e 0201 	add.w	r2, lr, #1
 801b8c6:	1c66      	adds	r6, r4, #1
 801b8c8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b8cc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b8d0:	fa1f fc8c 	uxth.w	ip, ip
 801b8d4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b8d8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b8dc:	ea46 0e0e 	orr.w	lr, r6, lr
 801b8e0:	f10c 0601 	add.w	r6, ip, #1
 801b8e4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b8e8:	0976      	lsrs	r6, r6, #5
 801b8ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b8ee:	9a02      	ldr	r2, [sp, #8]
 801b8f0:	ea4e 0e06 	orr.w	lr, lr, r6
 801b8f4:	f825 e002 	strh.w	lr, [r5, r2]
 801b8f8:	e7b3      	b.n	801b862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b8fa:	f04f 0800 	mov.w	r8, #0
 801b8fe:	eba3 0208 	sub.w	r2, r3, r8
 801b902:	2a00      	cmp	r2, #0
 801b904:	f77f af3e 	ble.w	801b784 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b908:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b90c:	1404      	asrs	r4, r0, #16
 801b90e:	140a      	asrs	r2, r1, #16
 801b910:	fb06 4202 	mla	r2, r6, r2, r4
 801b914:	9c01      	ldr	r4, [sp, #4]
 801b916:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b91a:	0e22      	lsrs	r2, r4, #24
 801b91c:	d016      	beq.n	801b94c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b91e:	9e04      	ldr	r6, [sp, #16]
 801b920:	4372      	muls	r2, r6
 801b922:	1c56      	adds	r6, r2, #1
 801b924:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b928:	1212      	asrs	r2, r2, #8
 801b92a:	2aff      	cmp	r2, #255	; 0xff
 801b92c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b930:	d113      	bne.n	801b95a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b932:	0962      	lsrs	r2, r4, #5
 801b934:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b938:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b93c:	f026 0607 	bic.w	r6, r6, #7
 801b940:	4316      	orrs	r6, r2
 801b942:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b946:	4326      	orrs	r6, r4
 801b948:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b94c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b94e:	4410      	add	r0, r2
 801b950:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b952:	f108 0801 	add.w	r8, r8, #1
 801b956:	4411      	add	r1, r2
 801b958:	e7d1      	b.n	801b8fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b95a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b95e:	fa1f fa82 	uxth.w	sl, r2
 801b962:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b966:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b96a:	43d2      	mvns	r2, r2
 801b96c:	b2d2      	uxtb	r2, r2
 801b96e:	fb17 f70a 	smulbb	r7, r7, sl
 801b972:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b976:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b97a:	b2e4      	uxtb	r4, r4
 801b97c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b980:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b984:	fa5f fe8e 	uxtb.w	lr, lr
 801b988:	fb14 f40a 	smulbb	r4, r4, sl
 801b98c:	fb0e 4402 	mla	r4, lr, r2, r4
 801b990:	b2f6      	uxtb	r6, r6
 801b992:	fa1f fc8c 	uxth.w	ip, ip
 801b996:	fb16 f60a 	smulbb	r6, r6, sl
 801b99a:	b2a4      	uxth	r4, r4
 801b99c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b9a0:	fb07 6702 	mla	r7, r7, r2, r6
 801b9a4:	f10c 0201 	add.w	r2, ip, #1
 801b9a8:	1c66      	adds	r6, r4, #1
 801b9aa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b9ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b9b2:	b2bf      	uxth	r7, r7
 801b9b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b9b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b9bc:	ea46 0c0c 	orr.w	ip, r6, ip
 801b9c0:	1c7e      	adds	r6, r7, #1
 801b9c2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b9c6:	0976      	lsrs	r6, r6, #5
 801b9c8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b9cc:	ea4c 0c06 	orr.w	ip, ip, r6
 801b9d0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b9d4:	e7ba      	b.n	801b94c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b9d6:	b007      	add	sp, #28
 801b9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9e0:	b085      	sub	sp, #20
 801b9e2:	468b      	mov	fp, r1
 801b9e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b9e6:	9203      	str	r2, [sp, #12]
 801b9e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b9ec:	6841      	ldr	r1, [r0, #4]
 801b9ee:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b9f2:	fb01 2404 	mla	r4, r1, r4, r2
 801b9f6:	6802      	ldr	r2, [r0, #0]
 801b9f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b9fc:	f8d8 2000 	ldr.w	r2, [r8]
 801ba00:	9201      	str	r2, [sp, #4]
 801ba02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ba06:	f1bb 0f00 	cmp.w	fp, #0
 801ba0a:	dc03      	bgt.n	801ba14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ba0c:	9a03      	ldr	r2, [sp, #12]
 801ba0e:	2a00      	cmp	r2, #0
 801ba10:	f340 814f 	ble.w	801bcb2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ba14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba16:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ba1a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ba1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ba22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ba24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ba28:	2b00      	cmp	r3, #0
 801ba2a:	dd0e      	ble.n	801ba4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ba2c:	1408      	asrs	r0, r1, #16
 801ba2e:	d405      	bmi.n	801ba3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ba30:	42b8      	cmp	r0, r7
 801ba32:	da03      	bge.n	801ba3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ba34:	1410      	asrs	r0, r2, #16
 801ba36:	d401      	bmi.n	801ba3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ba38:	42b0      	cmp	r0, r6
 801ba3a:	db07      	blt.n	801ba4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ba3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ba3e:	4401      	add	r1, r0
 801ba40:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ba42:	3b01      	subs	r3, #1
 801ba44:	4402      	add	r2, r0
 801ba46:	3402      	adds	r4, #2
 801ba48:	e7ee      	b.n	801ba28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ba4a:	d017      	beq.n	801ba7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ba4e:	1e58      	subs	r0, r3, #1
 801ba50:	fb05 1500 	mla	r5, r5, r0, r1
 801ba54:	142d      	asrs	r5, r5, #16
 801ba56:	d409      	bmi.n	801ba6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba58:	42bd      	cmp	r5, r7
 801ba5a:	da07      	bge.n	801ba6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ba5e:	fb05 2000 	mla	r0, r5, r0, r2
 801ba62:	1400      	asrs	r0, r0, #16
 801ba64:	d402      	bmi.n	801ba6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ba66:	42b0      	cmp	r0, r6
 801ba68:	f2c0 80ba 	blt.w	801bbe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ba6c:	2600      	movs	r6, #0
 801ba6e:	1998      	adds	r0, r3, r6
 801ba70:	2800      	cmp	r0, #0
 801ba72:	dc3e      	bgt.n	801baf2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ba74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ba7c:	f1bb 0f00 	cmp.w	fp, #0
 801ba80:	f340 8117 	ble.w	801bcb2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ba84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ba92:	f1bb 0b01 	subs.w	fp, fp, #1
 801ba96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba9e:	eeb0 6a62 	vmov.f32	s12, s5
 801baa2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801baa6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801baaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801baae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bab2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bab6:	eeb0 6a43 	vmov.f32	s12, s6
 801baba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801babe:	ee12 2a90 	vmov	r2, s5
 801bac2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bac6:	fb92 f3f3 	sdiv	r3, r2, r3
 801baca:	ee13 2a10 	vmov	r2, s6
 801bace:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bad2:	9311      	str	r3, [sp, #68]	; 0x44
 801bad4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bad6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bada:	9a03      	ldr	r2, [sp, #12]
 801badc:	9312      	str	r3, [sp, #72]	; 0x48
 801bade:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bae2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bae4:	eeb0 3a67 	vmov.f32	s6, s15
 801bae8:	bf08      	it	eq
 801baea:	4613      	moveq	r3, r2
 801baec:	eef0 2a47 	vmov.f32	s5, s14
 801baf0:	e789      	b.n	801ba06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801baf2:	140f      	asrs	r7, r1, #16
 801baf4:	d424      	bmi.n	801bb40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801baf6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bafa:	42bd      	cmp	r5, r7
 801bafc:	dd20      	ble.n	801bb40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bafe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bb02:	d41d      	bmi.n	801bb40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bb04:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801bb08:	4560      	cmp	r0, ip
 801bb0a:	dd19      	ble.n	801bb40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bb0c:	b22d      	sxth	r5, r5
 801bb0e:	fb0c 7505 	mla	r5, ip, r5, r7
 801bb12:	9801      	ldr	r0, [sp, #4]
 801bb14:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801bb18:	0e07      	lsrs	r7, r0, #24
 801bb1a:	2fff      	cmp	r7, #255	; 0xff
 801bb1c:	d116      	bne.n	801bb4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801bb1e:	f06f 0501 	mvn.w	r5, #1
 801bb22:	fb05 f706 	mul.w	r7, r5, r6
 801bb26:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801bb2a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801bb2e:	0945      	lsrs	r5, r0, #5
 801bb30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb34:	ea4c 0505 	orr.w	r5, ip, r5
 801bb38:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bb3c:	4305      	orrs	r5, r0
 801bb3e:	53e5      	strh	r5, [r4, r7]
 801bb40:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bb42:	4401      	add	r1, r0
 801bb44:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bb46:	3e01      	subs	r6, #1
 801bb48:	4402      	add	r2, r0
 801bb4a:	e790      	b.n	801ba6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bb4c:	b2fd      	uxtb	r5, r7
 801bb4e:	2f00      	cmp	r7, #0
 801bb50:	d0f6      	beq.n	801bb40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bb52:	f06f 0701 	mvn.w	r7, #1
 801bb56:	4377      	muls	r7, r6
 801bb58:	fa1f f985 	uxth.w	r9, r5
 801bb5c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801bb60:	9702      	str	r7, [sp, #8]
 801bb62:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bb66:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801bb6a:	43ed      	mvns	r5, r5
 801bb6c:	b2ed      	uxtb	r5, r5
 801bb6e:	fb17 f709 	smulbb	r7, r7, r9
 801bb72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bb76:	fb0c 7c05 	mla	ip, ip, r5, r7
 801bb7a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801bb7e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bb82:	b2c0      	uxtb	r0, r0
 801bb84:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bb88:	fa5f fe8e 	uxtb.w	lr, lr
 801bb8c:	fb10 f009 	smulbb	r0, r0, r9
 801bb90:	fb0e 0005 	mla	r0, lr, r5, r0
 801bb94:	b280      	uxth	r0, r0
 801bb96:	fa1f fc8c 	uxth.w	ip, ip
 801bb9a:	fb1a fa09 	smulbb	sl, sl, r9
 801bb9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bba2:	fb07 a705 	mla	r7, r7, r5, sl
 801bba6:	f100 0a01 	add.w	sl, r0, #1
 801bbaa:	f10c 0501 	add.w	r5, ip, #1
 801bbae:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801bbb2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bbb6:	b2bf      	uxth	r7, r7
 801bbb8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bbbc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bbc0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bbc4:	f107 0a01 	add.w	sl, r7, #1
 801bbc8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bbcc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bbd0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bbd4:	9802      	ldr	r0, [sp, #8]
 801bbd6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bbda:	f824 c000 	strh.w	ip, [r4, r0]
 801bbde:	e7af      	b.n	801bb40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bbe0:	f04f 0e00 	mov.w	lr, #0
 801bbe4:	eba3 000e 	sub.w	r0, r3, lr
 801bbe8:	2800      	cmp	r0, #0
 801bbea:	f77f af43 	ble.w	801ba74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bbee:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801bbf2:	140d      	asrs	r5, r1, #16
 801bbf4:	1410      	asrs	r0, r2, #16
 801bbf6:	fb06 5000 	mla	r0, r6, r0, r5
 801bbfa:	9d01      	ldr	r5, [sp, #4]
 801bbfc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801bc00:	0e2e      	lsrs	r6, r5, #24
 801bc02:	2eff      	cmp	r6, #255	; 0xff
 801bc04:	d112      	bne.n	801bc2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801bc06:	482c      	ldr	r0, [pc, #176]	; (801bcb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801bc08:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801bc0c:	0968      	lsrs	r0, r5, #5
 801bc0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bc12:	4330      	orrs	r0, r6
 801bc14:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bc18:	4328      	orrs	r0, r5
 801bc1a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801bc1e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bc20:	4401      	add	r1, r0
 801bc22:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bc24:	f10e 0e01 	add.w	lr, lr, #1
 801bc28:	4402      	add	r2, r0
 801bc2a:	e7db      	b.n	801bbe4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801bc2c:	b2f0      	uxtb	r0, r6
 801bc2e:	2e00      	cmp	r6, #0
 801bc30:	d0f5      	beq.n	801bc1e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bc32:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bc36:	fa1f f980 	uxth.w	r9, r0
 801bc3a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bc3e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bc42:	43c0      	mvns	r0, r0
 801bc44:	b2c0      	uxtb	r0, r0
 801bc46:	fb16 f609 	smulbb	r6, r6, r9
 801bc4a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc4e:	fb07 6700 	mla	r7, r7, r0, r6
 801bc52:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801bc56:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bc5a:	b2ed      	uxtb	r5, r5
 801bc5c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bc60:	fa5f fc8c 	uxtb.w	ip, ip
 801bc64:	fb15 f509 	smulbb	r5, r5, r9
 801bc68:	fb0c 5500 	mla	r5, ip, r0, r5
 801bc6c:	b2bf      	uxth	r7, r7
 801bc6e:	fb1a fa09 	smulbb	sl, sl, r9
 801bc72:	b2ad      	uxth	r5, r5
 801bc74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bc78:	fb06 a600 	mla	r6, r6, r0, sl
 801bc7c:	1c78      	adds	r0, r7, #1
 801bc7e:	f105 0a01 	add.w	sl, r5, #1
 801bc82:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801bc86:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bc8a:	b2b6      	uxth	r6, r6
 801bc8c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bc90:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bc94:	ea4a 0707 	orr.w	r7, sl, r7
 801bc98:	f106 0a01 	add.w	sl, r6, #1
 801bc9c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bca0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bca4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bca8:	ea47 070a 	orr.w	r7, r7, sl
 801bcac:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801bcb0:	e7b5      	b.n	801bc1e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801bcb2:	b005      	add	sp, #20
 801bcb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcb8:	fffff800 	.word	0xfffff800

0801bcbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bcbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcc0:	b087      	sub	sp, #28
 801bcc2:	468b      	mov	fp, r1
 801bcc4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bcc6:	9203      	str	r2, [sp, #12]
 801bcc8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bccc:	9204      	str	r2, [sp, #16]
 801bcce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bcd2:	6841      	ldr	r1, [r0, #4]
 801bcd4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801bcd8:	fb01 2404 	mla	r4, r1, r4, r2
 801bcdc:	6802      	ldr	r2, [r0, #0]
 801bcde:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bce2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bce6:	3201      	adds	r2, #1
 801bce8:	f022 0201 	bic.w	r2, r2, #1
 801bcec:	9200      	str	r2, [sp, #0]
 801bcee:	f8d9 2000 	ldr.w	r2, [r9]
 801bcf2:	9201      	str	r2, [sp, #4]
 801bcf4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bcf8:	f1bb 0f00 	cmp.w	fp, #0
 801bcfc:	dc03      	bgt.n	801bd06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bcfe:	9a03      	ldr	r2, [sp, #12]
 801bd00:	2a00      	cmp	r2, #0
 801bd02:	f340 8169 	ble.w	801bfd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bd06:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bd08:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bd0c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bd10:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bd14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bd16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bd1a:	2b00      	cmp	r3, #0
 801bd1c:	dd0e      	ble.n	801bd3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bd1e:	1402      	asrs	r2, r0, #16
 801bd20:	d405      	bmi.n	801bd2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bd22:	42ba      	cmp	r2, r7
 801bd24:	da03      	bge.n	801bd2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bd26:	140a      	asrs	r2, r1, #16
 801bd28:	d401      	bmi.n	801bd2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bd2a:	42b2      	cmp	r2, r6
 801bd2c:	db07      	blt.n	801bd3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bd2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd30:	4410      	add	r0, r2
 801bd32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd34:	3b01      	subs	r3, #1
 801bd36:	4411      	add	r1, r2
 801bd38:	3402      	adds	r4, #2
 801bd3a:	e7ee      	b.n	801bd1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bd3c:	d017      	beq.n	801bd6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bd3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bd40:	1e5a      	subs	r2, r3, #1
 801bd42:	fb05 0502 	mla	r5, r5, r2, r0
 801bd46:	142d      	asrs	r5, r5, #16
 801bd48:	d409      	bmi.n	801bd5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bd4a:	42bd      	cmp	r5, r7
 801bd4c:	da07      	bge.n	801bd5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bd4e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bd50:	fb05 1202 	mla	r2, r5, r2, r1
 801bd54:	1412      	asrs	r2, r2, #16
 801bd56:	d402      	bmi.n	801bd5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bd58:	42b2      	cmp	r2, r6
 801bd5a:	f2c0 80c7 	blt.w	801beec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801bd5e:	2700      	movs	r7, #0
 801bd60:	19da      	adds	r2, r3, r7
 801bd62:	2a00      	cmp	r2, #0
 801bd64:	dc3e      	bgt.n	801bde4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bd66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd6a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd6e:	f1bb 0f00 	cmp.w	fp, #0
 801bd72:	f340 8131 	ble.w	801bfd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bd76:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd7e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd84:	f1bb 0b01 	subs.w	fp, fp, #1
 801bd88:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd90:	eeb0 6a62 	vmov.f32	s12, s5
 801bd94:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd9c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bda0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bda4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bda8:	eeb0 6a43 	vmov.f32	s12, s6
 801bdac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bdb0:	ee12 2a90 	vmov	r2, s5
 801bdb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bdb8:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdbc:	ee13 2a10 	vmov	r2, s6
 801bdc0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bdc4:	9313      	str	r3, [sp, #76]	; 0x4c
 801bdc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bdc8:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdcc:	9a03      	ldr	r2, [sp, #12]
 801bdce:	9314      	str	r3, [sp, #80]	; 0x50
 801bdd0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bdd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bdd6:	eeb0 3a67 	vmov.f32	s6, s15
 801bdda:	bf08      	it	eq
 801bddc:	4613      	moveq	r3, r2
 801bdde:	eef0 2a47 	vmov.f32	s5, s14
 801bde2:	e789      	b.n	801bcf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bde4:	1405      	asrs	r5, r0, #16
 801bde6:	d435      	bmi.n	801be54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bde8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801bdec:	42aa      	cmp	r2, r5
 801bdee:	dd31      	ble.n	801be54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdf0:	140e      	asrs	r6, r1, #16
 801bdf2:	d42f      	bmi.n	801be54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdf4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801bdf8:	42b2      	cmp	r2, r6
 801bdfa:	dd2b      	ble.n	801be54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdfc:	9a00      	ldr	r2, [sp, #0]
 801bdfe:	fb06 5502 	mla	r5, r6, r2, r5
 801be02:	086a      	lsrs	r2, r5, #1
 801be04:	9e01      	ldr	r6, [sp, #4]
 801be06:	5cb2      	ldrb	r2, [r6, r2]
 801be08:	07ee      	lsls	r6, r5, #31
 801be0a:	bf54      	ite	pl
 801be0c:	f002 020f 	andpl.w	r2, r2, #15
 801be10:	1112      	asrmi	r2, r2, #4
 801be12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801be16:	b2d2      	uxtb	r2, r2
 801be18:	b1e2      	cbz	r2, 801be54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be1a:	9d04      	ldr	r5, [sp, #16]
 801be1c:	436a      	muls	r2, r5
 801be1e:	1c55      	adds	r5, r2, #1
 801be20:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801be24:	4d6e      	ldr	r5, [pc, #440]	; (801bfe0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801be26:	682d      	ldr	r5, [r5, #0]
 801be28:	1212      	asrs	r2, r2, #8
 801be2a:	0a2e      	lsrs	r6, r5, #8
 801be2c:	2aff      	cmp	r2, #255	; 0xff
 801be2e:	9605      	str	r6, [sp, #20]
 801be30:	d116      	bne.n	801be60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801be32:	f06f 0201 	mvn.w	r2, #1
 801be36:	fb02 fc07 	mul.w	ip, r2, r7
 801be3a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801be3e:	096a      	lsrs	r2, r5, #5
 801be40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801be44:	f026 0607 	bic.w	r6, r6, #7
 801be48:	4316      	orrs	r6, r2
 801be4a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801be4e:	432e      	orrs	r6, r5
 801be50:	f824 600c 	strh.w	r6, [r4, ip]
 801be54:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801be56:	4410      	add	r0, r2
 801be58:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be5a:	3f01      	subs	r7, #1
 801be5c:	4411      	add	r1, r2
 801be5e:	e77f      	b.n	801bd60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801be60:	f06f 0601 	mvn.w	r6, #1
 801be64:	437e      	muls	r6, r7
 801be66:	fa1f fa82 	uxth.w	sl, r2
 801be6a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801be6e:	9602      	str	r6, [sp, #8]
 801be70:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801be74:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801be78:	43d2      	mvns	r2, r2
 801be7a:	b2d2      	uxtb	r2, r2
 801be7c:	fb1c fc0a 	smulbb	ip, ip, sl
 801be80:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801be84:	fb0e ce02 	mla	lr, lr, r2, ip
 801be88:	b2ed      	uxtb	r5, r5
 801be8a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801be8e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801be92:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801be96:	fa5f f888 	uxtb.w	r8, r8
 801be9a:	fb15 f50a 	smulbb	r5, r5, sl
 801be9e:	fb08 5502 	mla	r5, r8, r2, r5
 801bea2:	fa1f fe8e 	uxth.w	lr, lr
 801bea6:	fb16 f60a 	smulbb	r6, r6, sl
 801beaa:	b2ad      	uxth	r5, r5
 801beac:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801beb0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801beb4:	f10e 0201 	add.w	r2, lr, #1
 801beb8:	1c6e      	adds	r6, r5, #1
 801beba:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bebe:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801bec2:	fa1f fc8c 	uxth.w	ip, ip
 801bec6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801beca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bece:	ea46 0e0e 	orr.w	lr, r6, lr
 801bed2:	f10c 0601 	add.w	r6, ip, #1
 801bed6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801beda:	0976      	lsrs	r6, r6, #5
 801bedc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bee0:	9a02      	ldr	r2, [sp, #8]
 801bee2:	ea4e 0e06 	orr.w	lr, lr, r6
 801bee6:	f824 e002 	strh.w	lr, [r4, r2]
 801beea:	e7b3      	b.n	801be54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801beec:	f04f 0800 	mov.w	r8, #0
 801bef0:	eba3 0208 	sub.w	r2, r3, r8
 801bef4:	2a00      	cmp	r2, #0
 801bef6:	f77f af36 	ble.w	801bd66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801befa:	9e00      	ldr	r6, [sp, #0]
 801befc:	1402      	asrs	r2, r0, #16
 801befe:	140d      	asrs	r5, r1, #16
 801bf00:	fb06 2505 	mla	r5, r6, r5, r2
 801bf04:	086a      	lsrs	r2, r5, #1
 801bf06:	9e01      	ldr	r6, [sp, #4]
 801bf08:	5cb2      	ldrb	r2, [r6, r2]
 801bf0a:	07ed      	lsls	r5, r5, #31
 801bf0c:	bf54      	ite	pl
 801bf0e:	f002 020f 	andpl.w	r2, r2, #15
 801bf12:	1112      	asrmi	r2, r2, #4
 801bf14:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bf18:	b2d2      	uxtb	r2, r2
 801bf1a:	b1c2      	cbz	r2, 801bf4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bf1c:	9d04      	ldr	r5, [sp, #16]
 801bf1e:	436a      	muls	r2, r5
 801bf20:	1c55      	adds	r5, r2, #1
 801bf22:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bf26:	4d2e      	ldr	r5, [pc, #184]	; (801bfe0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bf28:	1212      	asrs	r2, r2, #8
 801bf2a:	682e      	ldr	r6, [r5, #0]
 801bf2c:	2aff      	cmp	r2, #255	; 0xff
 801bf2e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bf32:	d113      	bne.n	801bf5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bf34:	0972      	lsrs	r2, r6, #5
 801bf36:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bf3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf3e:	f025 0507 	bic.w	r5, r5, #7
 801bf42:	4315      	orrs	r5, r2
 801bf44:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bf48:	4335      	orrs	r5, r6
 801bf4a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bf4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bf50:	4410      	add	r0, r2
 801bf52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf54:	f108 0801 	add.w	r8, r8, #1
 801bf58:	4411      	add	r1, r2
 801bf5a:	e7c9      	b.n	801bef0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bf5c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bf60:	fa1f fa82 	uxth.w	sl, r2
 801bf64:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bf68:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bf6c:	43d2      	mvns	r2, r2
 801bf6e:	b2d2      	uxtb	r2, r2
 801bf70:	fb17 f70a 	smulbb	r7, r7, sl
 801bf74:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bf78:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bf7c:	b2f6      	uxtb	r6, r6
 801bf7e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bf82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bf86:	fa5f fe8e 	uxtb.w	lr, lr
 801bf8a:	fb16 f60a 	smulbb	r6, r6, sl
 801bf8e:	fb0e 6602 	mla	r6, lr, r2, r6
 801bf92:	b2ed      	uxtb	r5, r5
 801bf94:	fa1f fc8c 	uxth.w	ip, ip
 801bf98:	fb15 f50a 	smulbb	r5, r5, sl
 801bf9c:	b2b6      	uxth	r6, r6
 801bf9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bfa2:	fb07 5702 	mla	r7, r7, r2, r5
 801bfa6:	f10c 0201 	add.w	r2, ip, #1
 801bfaa:	1c75      	adds	r5, r6, #1
 801bfac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bfb0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bfb4:	b2bf      	uxth	r7, r7
 801bfb6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bfba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bfbe:	ea45 0c0c 	orr.w	ip, r5, ip
 801bfc2:	1c7d      	adds	r5, r7, #1
 801bfc4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bfc8:	096d      	lsrs	r5, r5, #5
 801bfca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bfce:	ea4c 0c05 	orr.w	ip, ip, r5
 801bfd2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bfd6:	e7ba      	b.n	801bf4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bfd8:	b007      	add	sp, #28
 801bfda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfde:	bf00      	nop
 801bfe0:	20014c34 	.word	0x20014c34

0801bfe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bfe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfe8:	b087      	sub	sp, #28
 801bfea:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c2f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bfee:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bff0:	9205      	str	r2, [sp, #20]
 801bff2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bff6:	9101      	str	r1, [sp, #4]
 801bff8:	6841      	ldr	r1, [r0, #4]
 801bffa:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bffe:	fb01 2404 	mla	r4, r1, r4, r2
 801c002:	6802      	ldr	r2, [r0, #0]
 801c004:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c008:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c00c:	3201      	adds	r2, #1
 801c00e:	f022 0201 	bic.w	r2, r2, #1
 801c012:	9202      	str	r2, [sp, #8]
 801c014:	f8db 2000 	ldr.w	r2, [fp]
 801c018:	9203      	str	r2, [sp, #12]
 801c01a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c01e:	9a01      	ldr	r2, [sp, #4]
 801c020:	2a00      	cmp	r2, #0
 801c022:	dc03      	bgt.n	801c02c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c024:	9a05      	ldr	r2, [sp, #20]
 801c026:	2a00      	cmp	r2, #0
 801c028:	f340 8162 	ble.w	801c2f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c02c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c02e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c032:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c036:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c03a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c03c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c040:	2b00      	cmp	r3, #0
 801c042:	dd0e      	ble.n	801c062 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c044:	1402      	asrs	r2, r0, #16
 801c046:	d405      	bmi.n	801c054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c048:	42ba      	cmp	r2, r7
 801c04a:	da03      	bge.n	801c054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c04c:	140a      	asrs	r2, r1, #16
 801c04e:	d401      	bmi.n	801c054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c050:	42b2      	cmp	r2, r6
 801c052:	db07      	blt.n	801c064 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c054:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c056:	4410      	add	r0, r2
 801c058:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c05a:	3b01      	subs	r3, #1
 801c05c:	4411      	add	r1, r2
 801c05e:	3402      	adds	r4, #2
 801c060:	e7ee      	b.n	801c040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c062:	d017      	beq.n	801c094 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c064:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c066:	1e5a      	subs	r2, r3, #1
 801c068:	fb05 0502 	mla	r5, r5, r2, r0
 801c06c:	142d      	asrs	r5, r5, #16
 801c06e:	d409      	bmi.n	801c084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c070:	42bd      	cmp	r5, r7
 801c072:	da07      	bge.n	801c084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c074:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c076:	fb05 1202 	mla	r2, r5, r2, r1
 801c07a:	1412      	asrs	r2, r2, #16
 801c07c:	d402      	bmi.n	801c084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c07e:	42b2      	cmp	r2, r6
 801c080:	f2c0 80c3 	blt.w	801c20a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c084:	2500      	movs	r5, #0
 801c086:	195a      	adds	r2, r3, r5
 801c088:	2a00      	cmp	r2, #0
 801c08a:	dc3f      	bgt.n	801c10c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c08c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c090:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c094:	9b01      	ldr	r3, [sp, #4]
 801c096:	2b00      	cmp	r3, #0
 801c098:	f340 812a 	ble.w	801c2f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c09c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c0a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c0a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c0a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c0aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c0ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c0b2:	eeb0 6a62 	vmov.f32	s12, s5
 801c0b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c0ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c0be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c0c2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c0c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c0ca:	eeb0 6a43 	vmov.f32	s12, s6
 801c0ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c0d2:	ee12 2a90 	vmov	r2, s5
 801c0d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c0da:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0de:	ee13 2a10 	vmov	r2, s6
 801c0e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c0e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c0e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0ea:	9314      	str	r3, [sp, #80]	; 0x50
 801c0ec:	9b01      	ldr	r3, [sp, #4]
 801c0ee:	9a05      	ldr	r2, [sp, #20]
 801c0f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c0f4:	3b01      	subs	r3, #1
 801c0f6:	9301      	str	r3, [sp, #4]
 801c0f8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c0fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c0fe:	eeb0 3a67 	vmov.f32	s6, s15
 801c102:	bf08      	it	eq
 801c104:	4613      	moveq	r3, r2
 801c106:	eef0 2a47 	vmov.f32	s5, s14
 801c10a:	e788      	b.n	801c01e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c10c:	1406      	asrs	r6, r0, #16
 801c10e:	d42c      	bmi.n	801c16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c110:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c114:	42b2      	cmp	r2, r6
 801c116:	dd28      	ble.n	801c16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c118:	140f      	asrs	r7, r1, #16
 801c11a:	d426      	bmi.n	801c16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c11c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c120:	42ba      	cmp	r2, r7
 801c122:	dd22      	ble.n	801c16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c124:	9a02      	ldr	r2, [sp, #8]
 801c126:	fb07 6602 	mla	r6, r7, r2, r6
 801c12a:	0872      	lsrs	r2, r6, #1
 801c12c:	9f03      	ldr	r7, [sp, #12]
 801c12e:	5cba      	ldrb	r2, [r7, r2]
 801c130:	07f6      	lsls	r6, r6, #31
 801c132:	bf54      	ite	pl
 801c134:	f002 020f 	andpl.w	r2, r2, #15
 801c138:	1112      	asrmi	r2, r2, #4
 801c13a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c13e:	b2d2      	uxtb	r2, r2
 801c140:	2aff      	cmp	r2, #255	; 0xff
 801c142:	d118      	bne.n	801c176 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c144:	f8d8 2000 	ldr.w	r2, [r8]
 801c148:	f06f 0601 	mvn.w	r6, #1
 801c14c:	fb06 f705 	mul.w	r7, r6, r5
 801c150:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801c154:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c158:	0956      	lsrs	r6, r2, #5
 801c15a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c15e:	ea4c 0606 	orr.w	r6, ip, r6
 801c162:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c166:	4316      	orrs	r6, r2
 801c168:	53e6      	strh	r6, [r4, r7]
 801c16a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c16c:	4410      	add	r0, r2
 801c16e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c170:	3d01      	subs	r5, #1
 801c172:	4411      	add	r1, r2
 801c174:	e787      	b.n	801c086 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c176:	2a00      	cmp	r2, #0
 801c178:	d0f7      	beq.n	801c16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c17a:	f06f 0601 	mvn.w	r6, #1
 801c17e:	436e      	muls	r6, r5
 801c180:	f8d8 c000 	ldr.w	ip, [r8]
 801c184:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c188:	9604      	str	r6, [sp, #16]
 801c18a:	fa1f f982 	uxth.w	r9, r2
 801c18e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c192:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c196:	43d2      	mvns	r2, r2
 801c198:	b2d2      	uxtb	r2, r2
 801c19a:	fb16 f609 	smulbb	r6, r6, r9
 801c19e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c1a2:	fb07 6702 	mla	r7, r7, r2, r6
 801c1a6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c1aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c1ae:	fa5f fc8c 	uxtb.w	ip, ip
 801c1b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c1b6:	fa5f fe8e 	uxtb.w	lr, lr
 801c1ba:	fb1c fc09 	smulbb	ip, ip, r9
 801c1be:	fb0e cc02 	mla	ip, lr, r2, ip
 801c1c2:	b2bf      	uxth	r7, r7
 801c1c4:	fb1a fa09 	smulbb	sl, sl, r9
 801c1c8:	fa1f fc8c 	uxth.w	ip, ip
 801c1cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c1d0:	fb06 a602 	mla	r6, r6, r2, sl
 801c1d4:	1c7a      	adds	r2, r7, #1
 801c1d6:	f10c 0a01 	add.w	sl, ip, #1
 801c1da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c1de:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c1e2:	b2b6      	uxth	r6, r6
 801c1e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c1e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c1ec:	ea4a 0707 	orr.w	r7, sl, r7
 801c1f0:	f106 0a01 	add.w	sl, r6, #1
 801c1f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c1f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c1fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c200:	9a04      	ldr	r2, [sp, #16]
 801c202:	ea47 070a 	orr.w	r7, r7, sl
 801c206:	52a7      	strh	r7, [r4, r2]
 801c208:	e7af      	b.n	801c16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c20a:	f04f 0e00 	mov.w	lr, #0
 801c20e:	eba3 020e 	sub.w	r2, r3, lr
 801c212:	2a00      	cmp	r2, #0
 801c214:	f77f af3a 	ble.w	801c08c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c218:	9e02      	ldr	r6, [sp, #8]
 801c21a:	1402      	asrs	r2, r0, #16
 801c21c:	140d      	asrs	r5, r1, #16
 801c21e:	fb06 2505 	mla	r5, r6, r5, r2
 801c222:	086a      	lsrs	r2, r5, #1
 801c224:	9e03      	ldr	r6, [sp, #12]
 801c226:	5cb2      	ldrb	r2, [r6, r2]
 801c228:	07ed      	lsls	r5, r5, #31
 801c22a:	bf54      	ite	pl
 801c22c:	f002 020f 	andpl.w	r2, r2, #15
 801c230:	1112      	asrmi	r2, r2, #4
 801c232:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c236:	b2d2      	uxtb	r2, r2
 801c238:	2aff      	cmp	r2, #255	; 0xff
 801c23a:	d115      	bne.n	801c268 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c23c:	f8d8 5000 	ldr.w	r5, [r8]
 801c240:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c244:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c248:	096a      	lsrs	r2, r5, #5
 801c24a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c24e:	4332      	orrs	r2, r6
 801c250:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c254:	432a      	orrs	r2, r5
 801c256:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c25a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c25c:	4410      	add	r0, r2
 801c25e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c260:	f10e 0e01 	add.w	lr, lr, #1
 801c264:	4411      	add	r1, r2
 801c266:	e7d2      	b.n	801c20e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c268:	2a00      	cmp	r2, #0
 801c26a:	d0f6      	beq.n	801c25a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c26c:	f8d8 7000 	ldr.w	r7, [r8]
 801c270:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c274:	fa1f f982 	uxth.w	r9, r2
 801c278:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c27c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c280:	43d2      	mvns	r2, r2
 801c282:	b2d2      	uxtb	r2, r2
 801c284:	fb15 f509 	smulbb	r5, r5, r9
 801c288:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c28c:	fb06 5602 	mla	r6, r6, r2, r5
 801c290:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c294:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c298:	b2ff      	uxtb	r7, r7
 801c29a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c29e:	fa5f fc8c 	uxtb.w	ip, ip
 801c2a2:	fb17 f709 	smulbb	r7, r7, r9
 801c2a6:	fb0c 7702 	mla	r7, ip, r2, r7
 801c2aa:	b2b6      	uxth	r6, r6
 801c2ac:	fb1a fa09 	smulbb	sl, sl, r9
 801c2b0:	b2bf      	uxth	r7, r7
 801c2b2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c2b6:	fb05 a502 	mla	r5, r5, r2, sl
 801c2ba:	1c72      	adds	r2, r6, #1
 801c2bc:	f107 0a01 	add.w	sl, r7, #1
 801c2c0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c2c4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c2c8:	b2ad      	uxth	r5, r5
 801c2ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c2ce:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c2d2:	ea4a 0606 	orr.w	r6, sl, r6
 801c2d6:	f105 0a01 	add.w	sl, r5, #1
 801c2da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c2de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c2e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c2e6:	ea46 060a 	orr.w	r6, r6, sl
 801c2ea:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c2ee:	e7b4      	b.n	801c25a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c2f0:	b007      	add	sp, #28
 801c2f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2f6:	bf00      	nop
 801c2f8:	20014c34 	.word	0x20014c34

0801c2fc <_ZN8touchgfx8LCD16bppD1Ev>:
 801c2fc:	4770      	bx	lr

0801c2fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c2fe:	4770      	bx	lr

0801c300 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c300:	4770      	bx	lr

0801c302 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c302:	4770      	bx	lr

0801c304 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c304:	4770      	bx	lr

0801c306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c306:	4770      	bx	lr

0801c308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c308:	4770      	bx	lr

0801c30a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c30a:	4770      	bx	lr

0801c30c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c30c:	4770      	bx	lr

0801c30e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c30e:	4770      	bx	lr

0801c310 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c310:	4770      	bx	lr

0801c312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c312:	4770      	bx	lr

0801c314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c314:	4770      	bx	lr

0801c316 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c316:	4770      	bx	lr

0801c318 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c318:	4770      	bx	lr

0801c31a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c31a:	4770      	bx	lr

0801c31c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c31c:	4770      	bx	lr

0801c31e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c31e:	4770      	bx	lr

0801c320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c320:	4770      	bx	lr

0801c322 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c322:	4770      	bx	lr

0801c324 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c324:	4770      	bx	lr

0801c326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c326:	4770      	bx	lr

0801c328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c328:	4770      	bx	lr

0801c32a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c32a:	4770      	bx	lr

0801c32c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c32c:	4770      	bx	lr

0801c32e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c32e:	4770      	bx	lr

0801c330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c330:	4770      	bx	lr

0801c332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c332:	4770      	bx	lr

0801c334 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c334:	4770      	bx	lr
	...

0801c338 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c338:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c33c:	4692      	mov	sl, r2
 801c33e:	4a22      	ldr	r2, [pc, #136]	; (801c3c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 801c340:	6812      	ldr	r2, [r2, #0]
 801c342:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801c346:	2a02      	cmp	r2, #2
 801c348:	b088      	sub	sp, #32
 801c34a:	4605      	mov	r5, r0
 801c34c:	4689      	mov	r9, r1
 801c34e:	d106      	bne.n	801c35e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801c350:	4b1e      	ldr	r3, [pc, #120]	; (801c3cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 801c352:	4a1f      	ldr	r2, [pc, #124]	; (801c3d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801c354:	f44f 7158 	mov.w	r1, #864	; 0x360
 801c358:	481e      	ldr	r0, [pc, #120]	; (801c3d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801c35a:	f00b f8a9 	bl	80274b0 <__assert_func>
 801c35e:	ac08      	add	r4, sp, #32
 801c360:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c364:	4620      	mov	r0, r4
 801c366:	f7fd fce3 	bl	8019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c36a:	682b      	ldr	r3, [r5, #0]
 801c36c:	4606      	mov	r6, r0
 801c36e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c370:	4628      	mov	r0, r5
 801c372:	4798      	blx	r3
 801c374:	4286      	cmp	r6, r0
 801c376:	d004      	beq.n	801c382 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801c378:	4b17      	ldr	r3, [pc, #92]	; (801c3d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801c37a:	4a15      	ldr	r2, [pc, #84]	; (801c3d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801c37c:	f240 3162 	movw	r1, #866	; 0x362
 801c380:	e7ea      	b.n	801c358 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801c382:	4620      	mov	r0, r4
 801c384:	f7fd fc4a 	bl	8019c1c <_ZNK8touchgfx6Bitmap7getDataEv>
 801c388:	4606      	mov	r6, r0
 801c38a:	b920      	cbnz	r0, 801c396 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801c38c:	4b13      	ldr	r3, [pc, #76]	; (801c3dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 801c38e:	4a10      	ldr	r2, [pc, #64]	; (801c3d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801c390:	f44f 7159 	mov.w	r1, #868	; 0x364
 801c394:	e7e0      	b.n	801c358 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801c396:	682b      	ldr	r3, [r5, #0]
 801c398:	4620      	mov	r0, r4
 801c39a:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801c39e:	f7fd fb21 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c3a2:	4607      	mov	r7, r0
 801c3a4:	4620      	mov	r0, r4
 801c3a6:	f7fd fb61 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c3aa:	b23f      	sxth	r7, r7
 801c3ac:	b200      	sxth	r0, r0
 801c3ae:	9002      	str	r0, [sp, #8]
 801c3b0:	e9cd 6700 	strd	r6, r7, [sp]
 801c3b4:	a806      	add	r0, sp, #24
 801c3b6:	4653      	mov	r3, sl
 801c3b8:	464a      	mov	r2, r9
 801c3ba:	4629      	mov	r1, r5
 801c3bc:	47c0      	blx	r8
 801c3be:	4630      	mov	r0, r6
 801c3c0:	b008      	add	sp, #32
 801c3c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c3c6:	bf00      	nop
 801c3c8:	20014c0c 	.word	0x20014c0c
 801c3cc:	0802d786 	.word	0x0802d786
 801c3d0:	0802e083 	.word	0x0802e083
 801c3d4:	0802d838 	.word	0x0802d838
 801c3d8:	0802d86a 	.word	0x0802d86a
 801c3dc:	0802d8bf 	.word	0x0802d8bf

0801c3e0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c3e0:	b508      	push	{r3, lr}
 801c3e2:	4b06      	ldr	r3, [pc, #24]	; (801c3fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801c3e4:	8818      	ldrh	r0, [r3, #0]
 801c3e6:	b928      	cbnz	r0, 801c3f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801c3e8:	4b05      	ldr	r3, [pc, #20]	; (801c400 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801c3ea:	4a06      	ldr	r2, [pc, #24]	; (801c404 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801c3ec:	4806      	ldr	r0, [pc, #24]	; (801c408 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801c3ee:	2153      	movs	r1, #83	; 0x53
 801c3f0:	f00b f85e 	bl	80274b0 <__assert_func>
 801c3f4:	0040      	lsls	r0, r0, #1
 801c3f6:	b280      	uxth	r0, r0
 801c3f8:	bd08      	pop	{r3, pc}
 801c3fa:	bf00      	nop
 801c3fc:	20014c06 	.word	0x20014c06
 801c400:	0802d92e 	.word	0x0802d92e
 801c404:	0802df40 	.word	0x0802df40
 801c408:	0802d970 	.word	0x0802d970

0801c40c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c40c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c410:	2300      	movs	r3, #0
 801c412:	9300      	str	r3, [sp, #0]
 801c414:	4b3d      	ldr	r3, [pc, #244]	; (801c50c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c416:	781b      	ldrb	r3, [r3, #0]
 801c418:	2b00      	cmp	r3, #0
 801c41a:	d137      	bne.n	801c48c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c41c:	4a3c      	ldr	r2, [pc, #240]	; (801c510 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c41e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c422:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c426:	2b00      	cmp	r3, #0
 801c428:	d132      	bne.n	801c490 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c42a:	4b3a      	ldr	r3, [pc, #232]	; (801c514 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c42c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c430:	6808      	ldr	r0, [r1, #0]
 801c432:	6849      	ldr	r1, [r1, #4]
 801c434:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c438:	ac02      	add	r4, sp, #8
 801c43a:	ab02      	add	r3, sp, #8
 801c43c:	c303      	stmia	r3!, {r0, r1}
 801c43e:	4669      	mov	r1, sp
 801c440:	4620      	mov	r0, r4
 801c442:	f7f9 ffbf 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c446:	4668      	mov	r0, sp
 801c448:	f7f9 ff78 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c44c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c450:	f8bd 2000 	ldrh.w	r2, [sp]
 801c454:	4d30      	ldr	r5, [pc, #192]	; (801c518 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c456:	4413      	add	r3, r2
 801c458:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c45c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c460:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c464:	6828      	ldr	r0, [r5, #0]
 801c466:	4413      	add	r3, r2
 801c468:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c46c:	6803      	ldr	r3, [r0, #0]
 801c46e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c470:	4798      	blx	r3
 801c472:	f010 0f01 	tst.w	r0, #1
 801c476:	462f      	mov	r7, r5
 801c478:	d00c      	beq.n	801c494 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c47a:	6828      	ldr	r0, [r5, #0]
 801c47c:	6803      	ldr	r3, [r0, #0]
 801c47e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c482:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c484:	4798      	blx	r3
 801c486:	b004      	add	sp, #16
 801c488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c48c:	4a21      	ldr	r2, [pc, #132]	; (801c514 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c48e:	e7c6      	b.n	801c41e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c490:	4b1f      	ldr	r3, [pc, #124]	; (801c510 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c492:	e7cb      	b.n	801c42c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c494:	6838      	ldr	r0, [r7, #0]
 801c496:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c49a:	6803      	ldr	r3, [r0, #0]
 801c49c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c4a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c4a2:	4798      	blx	r3
 801c4a4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c4a8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c4ac:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c4b0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c4b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c4b8:	6838      	ldr	r0, [r7, #0]
 801c4ba:	6803      	ldr	r3, [r0, #0]
 801c4bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c4be:	4798      	blx	r3
 801c4c0:	4a13      	ldr	r2, [pc, #76]	; (801c510 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c4c2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c4c6:	8813      	ldrh	r3, [r2, #0]
 801c4c8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c4cc:	fb03 1404 	mla	r4, r3, r4, r1
 801c4d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c4d4:	435d      	muls	r5, r3
 801c4d6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c4da:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c4de:	4691      	mov	r9, r2
 801c4e0:	6838      	ldr	r0, [r7, #0]
 801c4e2:	42ac      	cmp	r4, r5
 801c4e4:	6803      	ldr	r3, [r0, #0]
 801c4e6:	d20e      	bcs.n	801c506 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c4e8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c4ec:	4632      	mov	r2, r6
 801c4ee:	4643      	mov	r3, r8
 801c4f0:	4621      	mov	r1, r4
 801c4f2:	47d0      	blx	sl
 801c4f4:	f8b9 3000 	ldrh.w	r3, [r9]
 801c4f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c4fc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c500:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c504:	e7ec      	b.n	801c4e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c508:	4798      	blx	r3
 801c50a:	e7bc      	b.n	801c486 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c50c:	20014c04 	.word	0x20014c04
 801c510:	20014c06 	.word	0x20014c06
 801c514:	20014c08 	.word	0x20014c08
 801c518:	20014c0c 	.word	0x20014c0c

0801c51c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c51c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c520:	b08b      	sub	sp, #44	; 0x2c
 801c522:	460f      	mov	r7, r1
 801c524:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c528:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c52c:	4616      	mov	r6, r2
 801c52e:	f1bb 0f00 	cmp.w	fp, #0
 801c532:	d049      	beq.n	801c5c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801c534:	6810      	ldr	r0, [r2, #0]
 801c536:	6851      	ldr	r1, [r2, #4]
 801c538:	ad06      	add	r5, sp, #24
 801c53a:	c503      	stmia	r5!, {r0, r1}
 801c53c:	6818      	ldr	r0, [r3, #0]
 801c53e:	6859      	ldr	r1, [r3, #4]
 801c540:	ad08      	add	r5, sp, #32
 801c542:	c503      	stmia	r5!, {r0, r1}
 801c544:	a806      	add	r0, sp, #24
 801c546:	f7f9 fef9 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c54a:	4631      	mov	r1, r6
 801c54c:	a808      	add	r0, sp, #32
 801c54e:	f7f9 ff39 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c552:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c556:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c55a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c55e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c562:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c566:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c56a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c56e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c572:	4f5f      	ldr	r7, [pc, #380]	; (801c6f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c574:	440a      	add	r2, r1
 801c576:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c57a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c57e:	6838      	ldr	r0, [r7, #0]
 801c580:	4413      	add	r3, r2
 801c582:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c586:	6803      	ldr	r3, [r0, #0]
 801c588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c58a:	4798      	blx	r3
 801c58c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c590:	46b9      	mov	r9, r7
 801c592:	d01c      	beq.n	801c5ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801c594:	f010 0f04 	tst.w	r0, #4
 801c598:	d01d      	beq.n	801c5d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c59a:	f8d9 0000 	ldr.w	r0, [r9]
 801c59e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c5a2:	6801      	ldr	r1, [r0, #0]
 801c5a4:	f8cd b00c 	str.w	fp, [sp, #12]
 801c5a8:	2700      	movs	r7, #0
 801c5aa:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c5ae:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c5b2:	9402      	str	r4, [sp, #8]
 801c5b4:	b2ad      	uxth	r5, r5
 801c5b6:	fa1f f488 	uxth.w	r4, r8
 801c5ba:	9501      	str	r5, [sp, #4]
 801c5bc:	9400      	str	r4, [sp, #0]
 801c5be:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c5c0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c5c4:	4631      	mov	r1, r6
 801c5c6:	47a0      	blx	r4
 801c5c8:	b00b      	add	sp, #44	; 0x2c
 801c5ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5ce:	b914      	cbnz	r4, 801c5d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c5d0:	f010 0f01 	tst.w	r0, #1
 801c5d4:	e7e0      	b.n	801c598 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801c5d6:	f8d9 0000 	ldr.w	r0, [r9]
 801c5da:	6803      	ldr	r3, [r0, #0]
 801c5dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c5de:	4798      	blx	r3
 801c5e0:	4b44      	ldr	r3, [pc, #272]	; (801c6f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c5e2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c5e6:	881a      	ldrh	r2, [r3, #0]
 801c5e8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c5ec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c5f0:	fb02 1404 	mla	r4, r2, r4, r1
 801c5f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c5f8:	469a      	mov	sl, r3
 801c5fa:	fb05 f502 	mul.w	r5, r5, r2
 801c5fe:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c602:	d059      	beq.n	801c6b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c604:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c608:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c60c:	fa1f f28b 	uxth.w	r2, fp
 801c610:	fa1f f989 	uxth.w	r9, r9
 801c614:	469e      	mov	lr, r3
 801c616:	42ac      	cmp	r4, r5
 801c618:	d264      	bcs.n	801c6e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c61a:	eb04 0a07 	add.w	sl, r4, r7
 801c61e:	4554      	cmp	r4, sl
 801c620:	d23d      	bcs.n	801c69e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c622:	8821      	ldrh	r1, [r4, #0]
 801c624:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c628:	1208      	asrs	r0, r1, #8
 801c62a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c62e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c632:	fb10 f009 	smulbb	r0, r0, r9
 801c636:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c63a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c63e:	00c9      	lsls	r1, r1, #3
 801c640:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c644:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c648:	10d8      	asrs	r0, r3, #3
 801c64a:	b2c9      	uxtb	r1, r1
 801c64c:	00db      	lsls	r3, r3, #3
 801c64e:	fa1f fc8c 	uxth.w	ip, ip
 801c652:	fb1b fb09 	smulbb	fp, fp, r9
 801c656:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c65a:	b2db      	uxtb	r3, r3
 801c65c:	fb11 f109 	smulbb	r1, r1, r9
 801c660:	fb00 b002 	mla	r0, r0, r2, fp
 801c664:	fb03 1302 	mla	r3, r3, r2, r1
 801c668:	f10c 0b01 	add.w	fp, ip, #1
 801c66c:	b29b      	uxth	r3, r3
 801c66e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c672:	b280      	uxth	r0, r0
 801c674:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c678:	f103 0c01 	add.w	ip, r3, #1
 801c67c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c680:	1c43      	adds	r3, r0, #1
 801c682:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c686:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c68a:	0940      	lsrs	r0, r0, #5
 801c68c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c690:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c694:	ea4c 0c00 	orr.w	ip, ip, r0
 801c698:	f824 cb02 	strh.w	ip, [r4], #2
 801c69c:	e7bf      	b.n	801c61e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c69e:	f8be 3000 	ldrh.w	r3, [lr]
 801c6a2:	eba3 0308 	sub.w	r3, r3, r8
 801c6a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c6aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c6ae:	eba3 0308 	sub.w	r3, r3, r8
 801c6b2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c6b6:	e7ae      	b.n	801c616 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c6b8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c6bc:	f8d9 0000 	ldr.w	r0, [r9]
 801c6c0:	42ac      	cmp	r4, r5
 801c6c2:	6803      	ldr	r3, [r0, #0]
 801c6c4:	d20e      	bcs.n	801c6e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c6c6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c6ca:	4632      	mov	r2, r6
 801c6cc:	463b      	mov	r3, r7
 801c6ce:	4621      	mov	r1, r4
 801c6d0:	47c0      	blx	r8
 801c6d2:	f8ba 3000 	ldrh.w	r3, [sl]
 801c6d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c6da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c6de:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c6e2:	e7eb      	b.n	801c6bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c6e4:	4b02      	ldr	r3, [pc, #8]	; (801c6f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c6e6:	6818      	ldr	r0, [r3, #0]
 801c6e8:	6803      	ldr	r3, [r0, #0]
 801c6ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c6ec:	4798      	blx	r3
 801c6ee:	e76b      	b.n	801c5c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801c6f0:	20014c0c 	.word	0x20014c0c
 801c6f4:	20014c06 	.word	0x20014c06

0801c6f8 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c6f8:	b510      	push	{r4, lr}
 801c6fa:	2178      	movs	r1, #120	; 0x78
 801c6fc:	4604      	mov	r4, r0
 801c6fe:	f00a fea8 	bl	8027452 <_ZdlPvj>
 801c702:	4620      	mov	r0, r4
 801c704:	bd10      	pop	{r4, pc}

0801c706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c706:	b510      	push	{r4, lr}
 801c708:	2104      	movs	r1, #4
 801c70a:	4604      	mov	r4, r0
 801c70c:	f00a fea1 	bl	8027452 <_ZdlPvj>
 801c710:	4620      	mov	r0, r4
 801c712:	bd10      	pop	{r4, pc}

0801c714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c714:	b510      	push	{r4, lr}
 801c716:	2104      	movs	r1, #4
 801c718:	4604      	mov	r4, r0
 801c71a:	f00a fe9a 	bl	8027452 <_ZdlPvj>
 801c71e:	4620      	mov	r0, r4
 801c720:	bd10      	pop	{r4, pc}

0801c722 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c722:	b510      	push	{r4, lr}
 801c724:	2104      	movs	r1, #4
 801c726:	4604      	mov	r4, r0
 801c728:	f00a fe93 	bl	8027452 <_ZdlPvj>
 801c72c:	4620      	mov	r0, r4
 801c72e:	bd10      	pop	{r4, pc}

0801c730 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c730:	b510      	push	{r4, lr}
 801c732:	2104      	movs	r1, #4
 801c734:	4604      	mov	r4, r0
 801c736:	f00a fe8c 	bl	8027452 <_ZdlPvj>
 801c73a:	4620      	mov	r0, r4
 801c73c:	bd10      	pop	{r4, pc}

0801c73e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c73e:	b510      	push	{r4, lr}
 801c740:	2104      	movs	r1, #4
 801c742:	4604      	mov	r4, r0
 801c744:	f00a fe85 	bl	8027452 <_ZdlPvj>
 801c748:	4620      	mov	r0, r4
 801c74a:	bd10      	pop	{r4, pc}

0801c74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c74c:	b510      	push	{r4, lr}
 801c74e:	2104      	movs	r1, #4
 801c750:	4604      	mov	r4, r0
 801c752:	f00a fe7e 	bl	8027452 <_ZdlPvj>
 801c756:	4620      	mov	r0, r4
 801c758:	bd10      	pop	{r4, pc}

0801c75a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c75a:	b510      	push	{r4, lr}
 801c75c:	2104      	movs	r1, #4
 801c75e:	4604      	mov	r4, r0
 801c760:	f00a fe77 	bl	8027452 <_ZdlPvj>
 801c764:	4620      	mov	r0, r4
 801c766:	bd10      	pop	{r4, pc}

0801c768 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c768:	b510      	push	{r4, lr}
 801c76a:	2104      	movs	r1, #4
 801c76c:	4604      	mov	r4, r0
 801c76e:	f00a fe70 	bl	8027452 <_ZdlPvj>
 801c772:	4620      	mov	r0, r4
 801c774:	bd10      	pop	{r4, pc}

0801c776 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c776:	b510      	push	{r4, lr}
 801c778:	2104      	movs	r1, #4
 801c77a:	4604      	mov	r4, r0
 801c77c:	f00a fe69 	bl	8027452 <_ZdlPvj>
 801c780:	4620      	mov	r0, r4
 801c782:	bd10      	pop	{r4, pc}

0801c784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c784:	b510      	push	{r4, lr}
 801c786:	2104      	movs	r1, #4
 801c788:	4604      	mov	r4, r0
 801c78a:	f00a fe62 	bl	8027452 <_ZdlPvj>
 801c78e:	4620      	mov	r0, r4
 801c790:	bd10      	pop	{r4, pc}

0801c792 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c792:	b510      	push	{r4, lr}
 801c794:	2104      	movs	r1, #4
 801c796:	4604      	mov	r4, r0
 801c798:	f00a fe5b 	bl	8027452 <_ZdlPvj>
 801c79c:	4620      	mov	r0, r4
 801c79e:	bd10      	pop	{r4, pc}

0801c7a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c7a0:	b510      	push	{r4, lr}
 801c7a2:	2104      	movs	r1, #4
 801c7a4:	4604      	mov	r4, r0
 801c7a6:	f00a fe54 	bl	8027452 <_ZdlPvj>
 801c7aa:	4620      	mov	r0, r4
 801c7ac:	bd10      	pop	{r4, pc}

0801c7ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c7ae:	b510      	push	{r4, lr}
 801c7b0:	2104      	movs	r1, #4
 801c7b2:	4604      	mov	r4, r0
 801c7b4:	f00a fe4d 	bl	8027452 <_ZdlPvj>
 801c7b8:	4620      	mov	r0, r4
 801c7ba:	bd10      	pop	{r4, pc}

0801c7bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c7bc:	b510      	push	{r4, lr}
 801c7be:	2104      	movs	r1, #4
 801c7c0:	4604      	mov	r4, r0
 801c7c2:	f00a fe46 	bl	8027452 <_ZdlPvj>
 801c7c6:	4620      	mov	r0, r4
 801c7c8:	bd10      	pop	{r4, pc}

0801c7ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c7ca:	b510      	push	{r4, lr}
 801c7cc:	2104      	movs	r1, #4
 801c7ce:	4604      	mov	r4, r0
 801c7d0:	f00a fe3f 	bl	8027452 <_ZdlPvj>
 801c7d4:	4620      	mov	r0, r4
 801c7d6:	bd10      	pop	{r4, pc}

0801c7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c7d8:	b510      	push	{r4, lr}
 801c7da:	2104      	movs	r1, #4
 801c7dc:	4604      	mov	r4, r0
 801c7de:	f00a fe38 	bl	8027452 <_ZdlPvj>
 801c7e2:	4620      	mov	r0, r4
 801c7e4:	bd10      	pop	{r4, pc}

0801c7e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c7e6:	b510      	push	{r4, lr}
 801c7e8:	2104      	movs	r1, #4
 801c7ea:	4604      	mov	r4, r0
 801c7ec:	f00a fe31 	bl	8027452 <_ZdlPvj>
 801c7f0:	4620      	mov	r0, r4
 801c7f2:	bd10      	pop	{r4, pc}

0801c7f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c7f4:	b510      	push	{r4, lr}
 801c7f6:	2104      	movs	r1, #4
 801c7f8:	4604      	mov	r4, r0
 801c7fa:	f00a fe2a 	bl	8027452 <_ZdlPvj>
 801c7fe:	4620      	mov	r0, r4
 801c800:	bd10      	pop	{r4, pc}

0801c802 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c802:	b510      	push	{r4, lr}
 801c804:	2104      	movs	r1, #4
 801c806:	4604      	mov	r4, r0
 801c808:	f00a fe23 	bl	8027452 <_ZdlPvj>
 801c80c:	4620      	mov	r0, r4
 801c80e:	bd10      	pop	{r4, pc}

0801c810 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c810:	b510      	push	{r4, lr}
 801c812:	2104      	movs	r1, #4
 801c814:	4604      	mov	r4, r0
 801c816:	f00a fe1c 	bl	8027452 <_ZdlPvj>
 801c81a:	4620      	mov	r0, r4
 801c81c:	bd10      	pop	{r4, pc}

0801c81e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c81e:	b510      	push	{r4, lr}
 801c820:	2104      	movs	r1, #4
 801c822:	4604      	mov	r4, r0
 801c824:	f00a fe15 	bl	8027452 <_ZdlPvj>
 801c828:	4620      	mov	r0, r4
 801c82a:	bd10      	pop	{r4, pc}

0801c82c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c82c:	b510      	push	{r4, lr}
 801c82e:	2104      	movs	r1, #4
 801c830:	4604      	mov	r4, r0
 801c832:	f00a fe0e 	bl	8027452 <_ZdlPvj>
 801c836:	4620      	mov	r0, r4
 801c838:	bd10      	pop	{r4, pc}

0801c83a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c83a:	b510      	push	{r4, lr}
 801c83c:	2104      	movs	r1, #4
 801c83e:	4604      	mov	r4, r0
 801c840:	f00a fe07 	bl	8027452 <_ZdlPvj>
 801c844:	4620      	mov	r0, r4
 801c846:	bd10      	pop	{r4, pc}

0801c848 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c848:	b510      	push	{r4, lr}
 801c84a:	2104      	movs	r1, #4
 801c84c:	4604      	mov	r4, r0
 801c84e:	f00a fe00 	bl	8027452 <_ZdlPvj>
 801c852:	4620      	mov	r0, r4
 801c854:	bd10      	pop	{r4, pc}

0801c856 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c856:	b510      	push	{r4, lr}
 801c858:	2104      	movs	r1, #4
 801c85a:	4604      	mov	r4, r0
 801c85c:	f00a fdf9 	bl	8027452 <_ZdlPvj>
 801c860:	4620      	mov	r0, r4
 801c862:	bd10      	pop	{r4, pc}

0801c864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c864:	b510      	push	{r4, lr}
 801c866:	2104      	movs	r1, #4
 801c868:	4604      	mov	r4, r0
 801c86a:	f00a fdf2 	bl	8027452 <_ZdlPvj>
 801c86e:	4620      	mov	r0, r4
 801c870:	bd10      	pop	{r4, pc}

0801c872 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c872:	b510      	push	{r4, lr}
 801c874:	2104      	movs	r1, #4
 801c876:	4604      	mov	r4, r0
 801c878:	f00a fdeb 	bl	8027452 <_ZdlPvj>
 801c87c:	4620      	mov	r0, r4
 801c87e:	bd10      	pop	{r4, pc}

0801c880 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c880:	b510      	push	{r4, lr}
 801c882:	2104      	movs	r1, #4
 801c884:	4604      	mov	r4, r0
 801c886:	f00a fde4 	bl	8027452 <_ZdlPvj>
 801c88a:	4620      	mov	r0, r4
 801c88c:	bd10      	pop	{r4, pc}
	...

0801c890 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c890:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c892:	4606      	mov	r6, r0
 801c894:	b087      	sub	sp, #28
 801c896:	460c      	mov	r4, r1
 801c898:	4617      	mov	r7, r2
 801c89a:	461d      	mov	r5, r3
 801c89c:	b333      	cbz	r3, 801c8ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c89e:	4608      	mov	r0, r1
 801c8a0:	f7f2 ff7b 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 801c8a4:	bb10      	cbnz	r0, 801c8ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c8a6:	6820      	ldr	r0, [r4, #0]
 801c8a8:	6861      	ldr	r1, [r4, #4]
 801c8aa:	4c1c      	ldr	r4, [pc, #112]	; (801c91c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c8ac:	ab04      	add	r3, sp, #16
 801c8ae:	c303      	stmia	r3!, {r0, r1}
 801c8b0:	a804      	add	r0, sp, #16
 801c8b2:	f7f9 fd43 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8b6:	6820      	ldr	r0, [r4, #0]
 801c8b8:	6803      	ldr	r3, [r0, #0]
 801c8ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c8bc:	4798      	blx	r3
 801c8be:	2dff      	cmp	r5, #255	; 0xff
 801c8c0:	d016      	beq.n	801c8f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c8c2:	f010 0f08 	tst.w	r0, #8
 801c8c6:	6820      	ldr	r0, [r4, #0]
 801c8c8:	d015      	beq.n	801c8f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c8ca:	2400      	movs	r4, #0
 801c8cc:	6801      	ldr	r1, [r0, #0]
 801c8ce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c8d2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c8d6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c8da:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c8de:	9401      	str	r4, [sp, #4]
 801c8e0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c8e4:	9400      	str	r4, [sp, #0]
 801c8e6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c8e8:	4639      	mov	r1, r7
 801c8ea:	47a0      	blx	r4
 801c8ec:	b007      	add	sp, #28
 801c8ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c8f0:	f010 0f02 	tst.w	r0, #2
 801c8f4:	e7e7      	b.n	801c8c6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c8f6:	6803      	ldr	r3, [r0, #0]
 801c8f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c8fa:	4798      	blx	r3
 801c8fc:	4b08      	ldr	r3, [pc, #32]	; (801c920 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c8fe:	881a      	ldrh	r2, [r3, #0]
 801c900:	6833      	ldr	r3, [r6, #0]
 801c902:	e9cd 7500 	strd	r7, r5, [sp]
 801c906:	4601      	mov	r1, r0
 801c908:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c90a:	4630      	mov	r0, r6
 801c90c:	ab04      	add	r3, sp, #16
 801c90e:	47a8      	blx	r5
 801c910:	6820      	ldr	r0, [r4, #0]
 801c912:	6803      	ldr	r3, [r0, #0]
 801c914:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c916:	4798      	blx	r3
 801c918:	e7e8      	b.n	801c8ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c91a:	bf00      	nop
 801c91c:	20014c0c 	.word	0x20014c0c
 801c920:	20014c06 	.word	0x20014c06

0801c924 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c928:	4690      	mov	r8, r2
 801c92a:	4a8d      	ldr	r2, [pc, #564]	; (801cb60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 801c92c:	6812      	ldr	r2, [r2, #0]
 801c92e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801c932:	b091      	sub	sp, #68	; 0x44
 801c934:	2a02      	cmp	r2, #2
 801c936:	4606      	mov	r6, r0
 801c938:	460d      	mov	r5, r1
 801c93a:	461c      	mov	r4, r3
 801c93c:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 801c940:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c944:	d106      	bne.n	801c954 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 801c946:	4b87      	ldr	r3, [pc, #540]	; (801cb64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 801c948:	4a87      	ldr	r2, [pc, #540]	; (801cb68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801c94a:	f240 316b 	movw	r1, #875	; 0x36b
 801c94e:	4887      	ldr	r0, [pc, #540]	; (801cb6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 801c950:	f00a fdae 	bl	80274b0 <__assert_func>
 801c954:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801c956:	b923      	cbnz	r3, 801c962 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 801c958:	4b85      	ldr	r3, [pc, #532]	; (801cb70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801c95a:	4a83      	ldr	r2, [pc, #524]	; (801cb68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801c95c:	f44f 715b 	mov.w	r1, #876	; 0x36c
 801c960:	e7f5      	b.n	801c94e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 801c962:	f9b4 1000 	ldrsh.w	r1, [r4]
 801c966:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c96a:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 801c96e:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 801c972:	4621      	mov	r1, r4
 801c974:	4648      	mov	r0, r9
 801c976:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c97a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 801c97e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c982:	f7f2 fec7 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 801c986:	4641      	mov	r1, r8
 801c988:	4648      	mov	r0, r9
 801c98a:	f7f2 fec3 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 801c98e:	4a79      	ldr	r2, [pc, #484]	; (801cb74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 801c990:	f8b2 c000 	ldrh.w	ip, [r2]
 801c994:	4a78      	ldr	r2, [pc, #480]	; (801cb78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 801c996:	8810      	ldrh	r0, [r2, #0]
 801c998:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c99c:	2a00      	cmp	r2, #0
 801c99e:	fa0f f18c 	sxth.w	r1, ip
 801c9a2:	fa0f fe80 	sxth.w	lr, r0
 801c9a6:	da07      	bge.n	801c9b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 801c9a8:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 801c9ac:	4442      	add	r2, r8
 801c9ae:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801c9b2:	2200      	movs	r2, #0
 801c9b4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c9b8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c9bc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c9c0:	1a89      	subs	r1, r1, r2
 801c9c2:	4588      	cmp	r8, r1
 801c9c4:	bfc4      	itt	gt
 801c9c6:	ebac 0102 	subgt.w	r1, ip, r2
 801c9ca:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 801c9ce:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801c9d2:	2900      	cmp	r1, #0
 801c9d4:	da07      	bge.n	801c9e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 801c9d6:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 801c9da:	4441      	add	r1, r8
 801c9dc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801c9e0:	2100      	movs	r1, #0
 801c9e2:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 801c9e6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c9ea:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 801c9ee:	ebae 0e0a 	sub.w	lr, lr, sl
 801c9f2:	4571      	cmp	r1, lr
 801c9f4:	bfc4      	itt	gt
 801c9f6:	eba0 010a 	subgt.w	r1, r0, sl
 801c9fa:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 801c9fe:	495f      	ldr	r1, [pc, #380]	; (801cb7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 801ca00:	7809      	ldrb	r1, [r1, #0]
 801ca02:	b9a9      	cbnz	r1, 801ca30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 801ca04:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ca08:	45e0      	cmp	r8, ip
 801ca0a:	bf14      	ite	ne
 801ca0c:	2300      	movne	r3, #0
 801ca0e:	2301      	moveq	r3, #1
 801ca10:	4648      	mov	r0, r9
 801ca12:	9202      	str	r2, [sp, #8]
 801ca14:	9305      	str	r3, [sp, #20]
 801ca16:	f7f2 fec0 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 801ca1a:	9a02      	ldr	r2, [sp, #8]
 801ca1c:	b160      	cbz	r0, 801ca38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 801ca1e:	2300      	movs	r3, #0
 801ca20:	8033      	strh	r3, [r6, #0]
 801ca22:	8073      	strh	r3, [r6, #2]
 801ca24:	80b3      	strh	r3, [r6, #4]
 801ca26:	4630      	mov	r0, r6
 801ca28:	80f3      	strh	r3, [r6, #6]
 801ca2a:	b011      	add	sp, #68	; 0x44
 801ca2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca30:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 801ca34:	4580      	cmp	r8, r0
 801ca36:	e7e8      	b.n	801ca0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 801ca38:	8821      	ldrh	r1, [r4, #0]
 801ca3a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801ca3e:	9304      	str	r3, [sp, #16]
 801ca40:	1a52      	subs	r2, r2, r1
 801ca42:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801ca46:	9306      	str	r3, [sp, #24]
 801ca48:	b213      	sxth	r3, r2
 801ca4a:	9302      	str	r3, [sp, #8]
 801ca4c:	8863      	ldrh	r3, [r4, #2]
 801ca4e:	900e      	str	r0, [sp, #56]	; 0x38
 801ca50:	ebaa 0a03 	sub.w	sl, sl, r3
 801ca54:	fa0f f38a 	sxth.w	r3, sl
 801ca58:	9303      	str	r3, [sp, #12]
 801ca5a:	9b02      	ldr	r3, [sp, #8]
 801ca5c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801ca60:	9b03      	ldr	r3, [sp, #12]
 801ca62:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ca66:	9b04      	ldr	r3, [sp, #16]
 801ca68:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801ca6c:	a90e      	add	r1, sp, #56	; 0x38
 801ca6e:	9b06      	ldr	r3, [sp, #24]
 801ca70:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801ca74:	a80c      	add	r0, sp, #48	; 0x30
 801ca76:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801ca7a:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 801ca7e:	f7f9 fca1 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca82:	4648      	mov	r0, r9
 801ca84:	f7f9 fc5a 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca88:	a80e      	add	r0, sp, #56	; 0x38
 801ca8a:	f7f9 fc57 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca8e:	4b3c      	ldr	r3, [pc, #240]	; (801cb80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 801ca90:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 801ca94:	881b      	ldrh	r3, [r3, #0]
 801ca96:	9307      	str	r3, [sp, #28]
 801ca98:	682b      	ldr	r3, [r5, #0]
 801ca9a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 801cb60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801ca9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801caa0:	4628      	mov	r0, r5
 801caa2:	4798      	blx	r3
 801caa4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801caa8:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801caac:	4682      	mov	sl, r0
 801caae:	fb17 2303 	smlabb	r3, r7, r3, r2
 801cab2:	f8d8 0000 	ldr.w	r0, [r8]
 801cab6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801cab8:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 801cabc:	6803      	ldr	r3, [r0, #0]
 801cabe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cac0:	4798      	blx	r3
 801cac2:	9009      	str	r0, [sp, #36]	; 0x24
 801cac4:	f8d8 0000 	ldr.w	r0, [r8]
 801cac8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cacc:	6802      	ldr	r2, [r0, #0]
 801cace:	9308      	str	r3, [sp, #32]
 801cad0:	6b92      	ldr	r2, [r2, #56]	; 0x38
 801cad2:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 801cad6:	4790      	blx	r2
 801cad8:	f010 0f01 	tst.w	r0, #1
 801cadc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cade:	d011      	beq.n	801cb04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 801cae0:	f8d8 0000 	ldr.w	r0, [r8]
 801cae4:	6803      	ldr	r3, [r0, #0]
 801cae6:	f8cd b000 	str.w	fp, [sp]
 801caea:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 801caec:	e899 0006 	ldmia.w	r9, {r1, r2}
 801caf0:	4623      	mov	r3, r4
 801caf2:	47a8      	blx	r5
 801caf4:	9b02      	ldr	r3, [sp, #8]
 801caf6:	8033      	strh	r3, [r6, #0]
 801caf8:	9b03      	ldr	r3, [sp, #12]
 801cafa:	8073      	strh	r3, [r6, #2]
 801cafc:	9b04      	ldr	r3, [sp, #16]
 801cafe:	80b3      	strh	r3, [r6, #4]
 801cb00:	9b06      	ldr	r3, [sp, #24]
 801cb02:	e790      	b.n	801ca26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 801cb04:	9a08      	ldr	r2, [sp, #32]
 801cb06:	fb0a f505 	mul.w	r5, sl, r5
 801cb0a:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 801cb0e:	9a05      	ldr	r2, [sp, #20]
 801cb10:	441d      	add	r5, r3
 801cb12:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801cb16:	b162      	cbz	r2, 801cb32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801cb18:	9a07      	ldr	r2, [sp, #28]
 801cb1a:	4297      	cmp	r7, r2
 801cb1c:	d109      	bne.n	801cb32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801cb1e:	f8d8 0000 	ldr.w	r0, [r8]
 801cb22:	6802      	ldr	r2, [r0, #0]
 801cb24:	fb03 f30a 	mul.w	r3, r3, sl
 801cb28:	6b57      	ldr	r7, [r2, #52]	; 0x34
 801cb2a:	4621      	mov	r1, r4
 801cb2c:	462a      	mov	r2, r5
 801cb2e:	47b8      	blx	r7
 801cb30:	e7e0      	b.n	801caf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 801cb32:	437b      	muls	r3, r7
 801cb34:	f8df b028 	ldr.w	fp, [pc, #40]	; 801cb60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801cb38:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 801cb3c:	007f      	lsls	r7, r7, #1
 801cb3e:	4544      	cmp	r4, r8
 801cb40:	d2d8      	bcs.n	801caf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 801cb42:	f8db 0000 	ldr.w	r0, [fp]
 801cb46:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cb4a:	6802      	ldr	r2, [r0, #0]
 801cb4c:	4621      	mov	r1, r4
 801cb4e:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 801cb52:	005b      	lsls	r3, r3, #1
 801cb54:	462a      	mov	r2, r5
 801cb56:	47c8      	blx	r9
 801cb58:	4455      	add	r5, sl
 801cb5a:	443c      	add	r4, r7
 801cb5c:	e7ef      	b.n	801cb3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 801cb5e:	bf00      	nop
 801cb60:	20014c0c 	.word	0x20014c0c
 801cb64:	0802d786 	.word	0x0802d786
 801cb68:	0802dff0 	.word	0x0802dff0
 801cb6c:	0802d838 	.word	0x0802d838
 801cb70:	0802d738 	.word	0x0802d738
 801cb74:	20014c00 	.word	0x20014c00
 801cb78:	20014c02 	.word	0x20014c02
 801cb7c:	20014c04 	.word	0x20014c04
 801cb80:	20014c06 	.word	0x20014c06

0801cb84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cb84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cb88:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cb8c:	9e08      	ldr	r6, [sp, #32]
 801cb8e:	4688      	mov	r8, r1
 801cb90:	4614      	mov	r4, r2
 801cb92:	461d      	mov	r5, r3
 801cb94:	2f00      	cmp	r7, #0
 801cb96:	f000 80b3 	beq.w	801cd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801cb9a:	4618      	mov	r0, r3
 801cb9c:	f7f2 fdfd 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 801cba0:	2800      	cmp	r0, #0
 801cba2:	f040 80ad 	bne.w	801cd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801cba6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cbaa:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cbae:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801cbb2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801cbb6:	fb04 1303 	mla	r3, r4, r3, r1
 801cbba:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801cbbe:	4365      	muls	r5, r4
 801cbc0:	2fff      	cmp	r7, #255	; 0xff
 801cbc2:	eba4 0200 	sub.w	r2, r4, r0
 801cbc6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cbca:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cbce:	d04b      	beq.n	801cc68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801cbd0:	b2bc      	uxth	r4, r7
 801cbd2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cbd6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cbda:	fa5f f788 	uxtb.w	r7, r8
 801cbde:	b2f3      	uxtb	r3, r6
 801cbe0:	0040      	lsls	r0, r0, #1
 801cbe2:	fb0e fe04 	mul.w	lr, lr, r4
 801cbe6:	4367      	muls	r7, r4
 801cbe8:	4363      	muls	r3, r4
 801cbea:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cbee:	fa1f fc8c 	uxth.w	ip, ip
 801cbf2:	42a9      	cmp	r1, r5
 801cbf4:	f080 8084 	bcs.w	801cd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801cbf8:	eb01 0900 	add.w	r9, r1, r0
 801cbfc:	4549      	cmp	r1, r9
 801cbfe:	d231      	bcs.n	801cc64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801cc00:	880a      	ldrh	r2, [r1, #0]
 801cc02:	1214      	asrs	r4, r2, #8
 801cc04:	10d6      	asrs	r6, r2, #3
 801cc06:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cc0a:	00d2      	lsls	r2, r2, #3
 801cc0c:	b2d2      	uxtb	r2, r2
 801cc0e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cc12:	fb14 f40c 	smulbb	r4, r4, ip
 801cc16:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc1a:	4474      	add	r4, lr
 801cc1c:	fb12 f20c 	smulbb	r2, r2, ip
 801cc20:	b2a4      	uxth	r4, r4
 801cc22:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc26:	441a      	add	r2, r3
 801cc28:	b292      	uxth	r2, r2
 801cc2a:	f104 0a01 	add.w	sl, r4, #1
 801cc2e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cc32:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cc36:	fb16 f60c 	smulbb	r6, r6, ip
 801cc3a:	f102 0a01 	add.w	sl, r2, #1
 801cc3e:	443e      	add	r6, r7
 801cc40:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801cc44:	b2b6      	uxth	r6, r6
 801cc46:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cc4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc4e:	4322      	orrs	r2, r4
 801cc50:	1c74      	adds	r4, r6, #1
 801cc52:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801cc56:	0976      	lsrs	r6, r6, #5
 801cc58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cc5c:	4332      	orrs	r2, r6
 801cc5e:	f821 2b02 	strh.w	r2, [r1], #2
 801cc62:	e7cb      	b.n	801cbfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801cc64:	4441      	add	r1, r8
 801cc66:	e7c4      	b.n	801cbf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801cc68:	4f26      	ldr	r7, [pc, #152]	; (801cd04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 801cc6a:	0973      	lsrs	r3, r6, #5
 801cc6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc70:	ea08 0707 	and.w	r7, r8, r7
 801cc74:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cc78:	433b      	orrs	r3, r7
 801cc7a:	4333      	orrs	r3, r6
 801cc7c:	07e6      	lsls	r6, r4, #31
 801cc7e:	b29b      	uxth	r3, r3
 801cc80:	d50b      	bpl.n	801cc9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 801cc82:	0040      	lsls	r0, r0, #1
 801cc84:	0052      	lsls	r2, r2, #1
 801cc86:	42a9      	cmp	r1, r5
 801cc88:	d23a      	bcs.n	801cd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801cc8a:	180c      	adds	r4, r1, r0
 801cc8c:	42a1      	cmp	r1, r4
 801cc8e:	d202      	bcs.n	801cc96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 801cc90:	f821 3b02 	strh.w	r3, [r1], #2
 801cc94:	e7fa      	b.n	801cc8c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 801cc96:	4411      	add	r1, r2
 801cc98:	e7f5      	b.n	801cc86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 801cc9a:	078f      	lsls	r7, r1, #30
 801cc9c:	d008      	beq.n	801ccb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 801cc9e:	0066      	lsls	r6, r4, #1
 801cca0:	460a      	mov	r2, r1
 801cca2:	42aa      	cmp	r2, r5
 801cca4:	d202      	bcs.n	801ccac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 801cca6:	8013      	strh	r3, [r2, #0]
 801cca8:	4432      	add	r2, r6
 801ccaa:	e7fa      	b.n	801cca2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801ccac:	3102      	adds	r1, #2
 801ccae:	3801      	subs	r0, #1
 801ccb0:	07c6      	lsls	r6, r0, #31
 801ccb2:	d50b      	bpl.n	801cccc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801ccb4:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801ccb8:	3a01      	subs	r2, #1
 801ccba:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ccbe:	0066      	lsls	r6, r4, #1
 801ccc0:	42aa      	cmp	r2, r5
 801ccc2:	d202      	bcs.n	801ccca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ccc4:	8013      	strh	r3, [r2, #0]
 801ccc6:	4432      	add	r2, r6
 801ccc8:	e7fa      	b.n	801ccc0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 801ccca:	3801      	subs	r0, #1
 801cccc:	b1c0      	cbz	r0, 801cd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801ccce:	1040      	asrs	r0, r0, #1
 801ccd0:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801ccd4:	0080      	lsls	r0, r0, #2
 801ccd6:	0064      	lsls	r4, r4, #1
 801ccd8:	42a9      	cmp	r1, r5
 801ccda:	d211      	bcs.n	801cd00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801ccdc:	078a      	lsls	r2, r1, #30
 801ccde:	d006      	beq.n	801ccee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 801cce0:	4b09      	ldr	r3, [pc, #36]	; (801cd08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 801cce2:	4a0a      	ldr	r2, [pc, #40]	; (801cd0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 801cce4:	480a      	ldr	r0, [pc, #40]	; (801cd10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801cce6:	f240 4137 	movw	r1, #1079	; 0x437
 801ccea:	f00a fbe1 	bl	80274b0 <__assert_func>
 801ccee:	180e      	adds	r6, r1, r0
 801ccf0:	460a      	mov	r2, r1
 801ccf2:	42b2      	cmp	r2, r6
 801ccf4:	d202      	bcs.n	801ccfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 801ccf6:	f842 3b04 	str.w	r3, [r2], #4
 801ccfa:	e7fa      	b.n	801ccf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 801ccfc:	4421      	add	r1, r4
 801ccfe:	e7eb      	b.n	801ccd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 801cd00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cd04:	00fff800 	.word	0x00fff800
 801cd08:	0802d5e9 	.word	0x0802d5e9
 801cd0c:	0802dc3c 	.word	0x0802dc3c
 801cd10:	0802d838 	.word	0x0802d838

0801cd14 <_ZN8touchgfx8LCD16bppC1Ev>:
 801cd14:	2200      	movs	r2, #0
 801cd16:	4910      	ldr	r1, [pc, #64]	; (801cd58 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801cd18:	6042      	str	r2, [r0, #4]
 801cd1a:	6001      	str	r1, [r0, #0]
 801cd1c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801cd20:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801cd24:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801cd28:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801cd2c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cd30:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cd34:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cd38:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cd3c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cd40:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cd44:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cd48:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cd4c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cd50:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cd54:	4770      	bx	lr
 801cd56:	bf00      	nop
 801cd58:	0802dbec 	.word	0x0802dbec

0801cd5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cd5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd60:	460d      	mov	r5, r1
 801cd62:	b08d      	sub	sp, #52	; 0x34
 801cd64:	4604      	mov	r4, r0
 801cd66:	6808      	ldr	r0, [r1, #0]
 801cd68:	6849      	ldr	r1, [r1, #4]
 801cd6a:	4699      	mov	r9, r3
 801cd6c:	ab08      	add	r3, sp, #32
 801cd6e:	c303      	stmia	r3!, {r0, r1}
 801cd70:	6810      	ldr	r0, [r2, #0]
 801cd72:	6851      	ldr	r1, [r2, #4]
 801cd74:	ab0a      	add	r3, sp, #40	; 0x28
 801cd76:	c303      	stmia	r3!, {r0, r1}
 801cd78:	a808      	add	r0, sp, #32
 801cd7a:	f7f9 fadf 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd7e:	4629      	mov	r1, r5
 801cd80:	a80a      	add	r0, sp, #40	; 0x28
 801cd82:	f7f9 fb1f 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd86:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801cd8a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801cd8e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801cd92:	4d63      	ldr	r5, [pc, #396]	; (801cf20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cd94:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801cd98:	6828      	ldr	r0, [r5, #0]
 801cd9a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cd9e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cda2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cda6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801cdaa:	440a      	add	r2, r1
 801cdac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cdb0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801cdb4:	4413      	add	r3, r2
 801cdb6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801cdba:	6803      	ldr	r3, [r0, #0]
 801cdbc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cdbe:	4798      	blx	r3
 801cdc0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cdc4:	d119      	bne.n	801cdfa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801cdc6:	f010 0f20 	tst.w	r0, #32
 801cdca:	6828      	ldr	r0, [r5, #0]
 801cdcc:	d018      	beq.n	801ce00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801cdce:	2500      	movs	r5, #0
 801cdd0:	6801      	ldr	r1, [r0, #0]
 801cdd2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cdd6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801cdda:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801cdde:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cde2:	9502      	str	r5, [sp, #8]
 801cde4:	b2b6      	uxth	r6, r6
 801cde6:	fa1f f588 	uxth.w	r5, r8
 801cdea:	9601      	str	r6, [sp, #4]
 801cdec:	9500      	str	r5, [sp, #0]
 801cdee:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cdf0:	4621      	mov	r1, r4
 801cdf2:	47a8      	blx	r5
 801cdf4:	b00d      	add	sp, #52	; 0x34
 801cdf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdfa:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cdfe:	e7e4      	b.n	801cdca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ce00:	6803      	ldr	r3, [r0, #0]
 801ce02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce04:	4798      	blx	r3
 801ce06:	4947      	ldr	r1, [pc, #284]	; (801cf24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ce08:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ce0c:	880b      	ldrh	r3, [r1, #0]
 801ce0e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ce12:	fb03 5202 	mla	r2, r3, r2, r5
 801ce16:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ce1a:	4373      	muls	r3, r6
 801ce1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ce20:	9307      	str	r3, [sp, #28]
 801ce22:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ce26:	9306      	str	r3, [sp, #24]
 801ce28:	468a      	mov	sl, r1
 801ce2a:	9b07      	ldr	r3, [sp, #28]
 801ce2c:	4298      	cmp	r0, r3
 801ce2e:	d270      	bcs.n	801cf12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ce30:	9b06      	ldr	r3, [sp, #24]
 801ce32:	4621      	mov	r1, r4
 801ce34:	eb00 0b03 	add.w	fp, r0, r3
 801ce38:	4558      	cmp	r0, fp
 801ce3a:	d25d      	bcs.n	801cef8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ce3c:	f851 4b04 	ldr.w	r4, [r1], #4
 801ce40:	0e23      	lsrs	r3, r4, #24
 801ce42:	d014      	beq.n	801ce6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ce44:	2bff      	cmp	r3, #255	; 0xff
 801ce46:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ce4a:	d112      	bne.n	801ce72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ce4c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ce50:	d10f      	bne.n	801ce72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ce52:	0963      	lsrs	r3, r4, #5
 801ce54:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ce58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce5c:	f02c 0c07 	bic.w	ip, ip, #7
 801ce60:	ea43 0c0c 	orr.w	ip, r3, ip
 801ce64:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ce68:	ea4c 0404 	orr.w	r4, ip, r4
 801ce6c:	8004      	strh	r4, [r0, #0]
 801ce6e:	3002      	adds	r0, #2
 801ce70:	e7e2      	b.n	801ce38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ce72:	fb09 f303 	mul.w	r3, r9, r3
 801ce76:	8807      	ldrh	r7, [r0, #0]
 801ce78:	1c5a      	adds	r2, r3, #1
 801ce7a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ce7e:	1212      	asrs	r2, r2, #8
 801ce80:	123e      	asrs	r6, r7, #8
 801ce82:	b293      	uxth	r3, r2
 801ce84:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ce88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ce8c:	43d2      	mvns	r2, r2
 801ce8e:	b2d2      	uxtb	r2, r2
 801ce90:	10fd      	asrs	r5, r7, #3
 801ce92:	fb1e fe03 	smulbb	lr, lr, r3
 801ce96:	00ff      	lsls	r7, r7, #3
 801ce98:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ce9c:	fb06 e602 	mla	r6, r6, r2, lr
 801cea0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cea4:	b2ff      	uxtb	r7, r7
 801cea6:	fa5f fc8c 	uxtb.w	ip, ip
 801ceaa:	b2e4      	uxtb	r4, r4
 801ceac:	b2b6      	uxth	r6, r6
 801ceae:	fb1c fc03 	smulbb	ip, ip, r3
 801ceb2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ceb6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ceba:	fb14 f403 	smulbb	r4, r4, r3
 801cebe:	fb05 c502 	mla	r5, r5, r2, ip
 801cec2:	f106 0e01 	add.w	lr, r6, #1
 801cec6:	fb07 4702 	mla	r7, r7, r2, r4
 801ceca:	b2ad      	uxth	r5, r5
 801cecc:	b2bf      	uxth	r7, r7
 801cece:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ced2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ced6:	f105 0c01 	add.w	ip, r5, #1
 801ceda:	1c7e      	adds	r6, r7, #1
 801cedc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cee0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cee4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cee8:	096d      	lsrs	r5, r5, #5
 801ceea:	ea46 060e 	orr.w	r6, r6, lr
 801ceee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cef2:	432e      	orrs	r6, r5
 801cef4:	8006      	strh	r6, [r0, #0]
 801cef6:	e7ba      	b.n	801ce6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cef8:	f8ba 3000 	ldrh.w	r3, [sl]
 801cefc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cf00:	eba3 0308 	sub.w	r3, r3, r8
 801cf04:	eba4 0408 	sub.w	r4, r4, r8
 801cf08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cf0c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cf10:	e78b      	b.n	801ce2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cf12:	4b03      	ldr	r3, [pc, #12]	; (801cf20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cf14:	6818      	ldr	r0, [r3, #0]
 801cf16:	6803      	ldr	r3, [r0, #0]
 801cf18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf1a:	4798      	blx	r3
 801cf1c:	e76a      	b.n	801cdf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cf1e:	bf00      	nop
 801cf20:	20014c0c 	.word	0x20014c0c
 801cf24:	20014c06 	.word	0x20014c06

0801cf28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cf28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cf2c:	460c      	mov	r4, r1
 801cf2e:	b085      	sub	sp, #20
 801cf30:	6810      	ldr	r0, [r2, #0]
 801cf32:	6851      	ldr	r1, [r2, #4]
 801cf34:	466d      	mov	r5, sp
 801cf36:	c503      	stmia	r5!, {r0, r1}
 801cf38:	6818      	ldr	r0, [r3, #0]
 801cf3a:	6859      	ldr	r1, [r3, #4]
 801cf3c:	4616      	mov	r6, r2
 801cf3e:	c503      	stmia	r5!, {r0, r1}
 801cf40:	4668      	mov	r0, sp
 801cf42:	f7f9 f9fb 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf46:	4631      	mov	r1, r6
 801cf48:	a802      	add	r0, sp, #8
 801cf4a:	f7f9 fa3b 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf4e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cf52:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cf56:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cf5a:	4d28      	ldr	r5, [pc, #160]	; (801cffc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cf5c:	4e28      	ldr	r6, [pc, #160]	; (801d000 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cf5e:	6828      	ldr	r0, [r5, #0]
 801cf60:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cf64:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cf68:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf6c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cf70:	f8bd 1000 	ldrh.w	r1, [sp]
 801cf74:	440a      	add	r2, r1
 801cf76:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cf7a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cf7e:	4413      	add	r3, r2
 801cf80:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cf84:	6803      	ldr	r3, [r0, #0]
 801cf86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf88:	4798      	blx	r3
 801cf8a:	8833      	ldrh	r3, [r6, #0]
 801cf8c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cf90:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cf94:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801d004 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cf98:	fb03 1202 	mla	r2, r3, r2, r1
 801cf9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cfa0:	fb08 f303 	mul.w	r3, r8, r3
 801cfa4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cfa8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cfac:	4298      	cmp	r0, r3
 801cfae:	d21d      	bcs.n	801cfec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cfb0:	eb00 080c 	add.w	r8, r0, ip
 801cfb4:	4540      	cmp	r0, r8
 801cfb6:	d20f      	bcs.n	801cfd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cfb8:	f854 1b04 	ldr.w	r1, [r4], #4
 801cfbc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cfc0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cfc4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cfc8:	ea42 0209 	orr.w	r2, r2, r9
 801cfcc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cfd0:	430a      	orrs	r2, r1
 801cfd2:	f820 2b02 	strh.w	r2, [r0], #2
 801cfd6:	e7ed      	b.n	801cfb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cfd8:	8832      	ldrh	r2, [r6, #0]
 801cfda:	1bd2      	subs	r2, r2, r7
 801cfdc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cfe0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cfe4:	1bd2      	subs	r2, r2, r7
 801cfe6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cfea:	e7df      	b.n	801cfac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cfec:	6828      	ldr	r0, [r5, #0]
 801cfee:	6803      	ldr	r3, [r0, #0]
 801cff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cff2:	4798      	blx	r3
 801cff4:	b005      	add	sp, #20
 801cff6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cffa:	bf00      	nop
 801cffc:	20014c0c 	.word	0x20014c0c
 801d000:	20014c06 	.word	0x20014c06
 801d004:	fffff800 	.word	0xfffff800

0801d008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d008:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d00c:	460e      	mov	r6, r1
 801d00e:	b08e      	sub	sp, #56	; 0x38
 801d010:	4604      	mov	r4, r0
 801d012:	6808      	ldr	r0, [r1, #0]
 801d014:	6849      	ldr	r1, [r1, #4]
 801d016:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d1f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d01a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d1f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d01e:	461d      	mov	r5, r3
 801d020:	ab0a      	add	r3, sp, #40	; 0x28
 801d022:	c303      	stmia	r3!, {r0, r1}
 801d024:	6810      	ldr	r0, [r2, #0]
 801d026:	6851      	ldr	r1, [r2, #4]
 801d028:	ab0c      	add	r3, sp, #48	; 0x30
 801d02a:	c303      	stmia	r3!, {r0, r1}
 801d02c:	a80a      	add	r0, sp, #40	; 0x28
 801d02e:	f7f9 f985 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d032:	4631      	mov	r1, r6
 801d034:	a80c      	add	r0, sp, #48	; 0x30
 801d036:	f7f9 f9c5 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d03a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d03e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801d042:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d046:	f8d8 0000 	ldr.w	r0, [r8]
 801d04a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801d04e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d052:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d056:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d05a:	440c      	add	r4, r1
 801d05c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801d060:	440a      	add	r2, r1
 801d062:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d066:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801d06a:	4413      	add	r3, r2
 801d06c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d070:	6803      	ldr	r3, [r0, #0]
 801d072:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d074:	4798      	blx	r3
 801d076:	2dff      	cmp	r5, #255	; 0xff
 801d078:	d124      	bne.n	801d0c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d07a:	f010 0f01 	tst.w	r0, #1
 801d07e:	f8d8 0000 	ldr.w	r0, [r8]
 801d082:	d022      	beq.n	801d0ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d084:	2100      	movs	r1, #0
 801d086:	f8d0 c000 	ldr.w	ip, [r0]
 801d08a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801d08e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801d092:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d096:	f04f 0e01 	mov.w	lr, #1
 801d09a:	f8cd e018 	str.w	lr, [sp, #24]
 801d09e:	f8b9 e000 	ldrh.w	lr, [r9]
 801d0a2:	9503      	str	r5, [sp, #12]
 801d0a4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d0a8:	b2b6      	uxth	r6, r6
 801d0aa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d0ae:	9102      	str	r1, [sp, #8]
 801d0b0:	b2bf      	uxth	r7, r7
 801d0b2:	9601      	str	r6, [sp, #4]
 801d0b4:	9700      	str	r7, [sp, #0]
 801d0b6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801d0ba:	4621      	mov	r1, r4
 801d0bc:	47a8      	blx	r5
 801d0be:	b00e      	add	sp, #56	; 0x38
 801d0c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d0c4:	f010 0f04 	tst.w	r0, #4
 801d0c8:	e7d9      	b.n	801d07e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d0ca:	6803      	ldr	r3, [r0, #0]
 801d0cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d0ce:	4798      	blx	r3
 801d0d0:	f8b9 3000 	ldrh.w	r3, [r9]
 801d0d4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d0d8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d0dc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d0e0:	fb03 1202 	mla	r2, r3, r2, r1
 801d0e4:	ebac 0c07 	sub.w	ip, ip, r7
 801d0e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d0ec:	435e      	muls	r6, r3
 801d0ee:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d0f2:	2dff      	cmp	r5, #255	; 0xff
 801d0f4:	eba3 0707 	sub.w	r7, r3, r7
 801d0f8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d0fc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d100:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d104:	d049      	beq.n	801d19a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d106:	43eb      	mvns	r3, r5
 801d108:	fa1f f985 	uxth.w	r9, r5
 801d10c:	b2db      	uxtb	r3, r3
 801d10e:	42b0      	cmp	r0, r6
 801d110:	d266      	bcs.n	801d1e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d112:	eb00 0a0e 	add.w	sl, r0, lr
 801d116:	4550      	cmp	r0, sl
 801d118:	4621      	mov	r1, r4
 801d11a:	f104 0403 	add.w	r4, r4, #3
 801d11e:	d25b      	bcs.n	801d1d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d120:	8802      	ldrh	r2, [r0, #0]
 801d122:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d126:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d12a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d12e:	fb11 f109 	smulbb	r1, r1, r9
 801d132:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d136:	10d5      	asrs	r5, r2, #3
 801d138:	fb08 1803 	mla	r8, r8, r3, r1
 801d13c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d140:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d144:	fb11 f109 	smulbb	r1, r1, r9
 801d148:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d14c:	fb05 1503 	mla	r5, r5, r3, r1
 801d150:	00d2      	lsls	r2, r2, #3
 801d152:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d156:	b2d2      	uxtb	r2, r2
 801d158:	fb11 f109 	smulbb	r1, r1, r9
 801d15c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d160:	fa1f f888 	uxth.w	r8, r8
 801d164:	fb02 1203 	mla	r2, r2, r3, r1
 801d168:	b292      	uxth	r2, r2
 801d16a:	f108 0101 	add.w	r1, r8, #1
 801d16e:	b2ad      	uxth	r5, r5
 801d170:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d174:	1c51      	adds	r1, r2, #1
 801d176:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d17a:	1c69      	adds	r1, r5, #1
 801d17c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d180:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d184:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d188:	096d      	lsrs	r5, r5, #5
 801d18a:	ea42 0208 	orr.w	r2, r2, r8
 801d18e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d192:	432a      	orrs	r2, r5
 801d194:	f820 2b02 	strh.w	r2, [r0], #2
 801d198:	e7bd      	b.n	801d116 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d19a:	4a14      	ldr	r2, [pc, #80]	; (801d1ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d19c:	42b0      	cmp	r0, r6
 801d19e:	d21f      	bcs.n	801d1e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d1a0:	eb00 050e 	add.w	r5, r0, lr
 801d1a4:	42a8      	cmp	r0, r5
 801d1a6:	4621      	mov	r1, r4
 801d1a8:	f104 0403 	add.w	r4, r4, #3
 801d1ac:	d210      	bcs.n	801d1d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d1ae:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d1b2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d1b6:	00db      	lsls	r3, r3, #3
 801d1b8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d1bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d1c0:	430b      	orrs	r3, r1
 801d1c2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d1c6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d1ca:	f820 3b02 	strh.w	r3, [r0], #2
 801d1ce:	e7e9      	b.n	801d1a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d1d0:	4438      	add	r0, r7
 801d1d2:	eb01 040c 	add.w	r4, r1, ip
 801d1d6:	e7e1      	b.n	801d19c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d1d8:	4438      	add	r0, r7
 801d1da:	eb01 040c 	add.w	r4, r1, ip
 801d1de:	e796      	b.n	801d10e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d1e0:	4b03      	ldr	r3, [pc, #12]	; (801d1f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d1e2:	6818      	ldr	r0, [r3, #0]
 801d1e4:	6803      	ldr	r3, [r0, #0]
 801d1e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1e8:	4798      	blx	r3
 801d1ea:	e768      	b.n	801d0be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d1ec:	fffff800 	.word	0xfffff800
 801d1f0:	20014c0c 	.word	0x20014c0c
 801d1f4:	20014c06 	.word	0x20014c06

0801d1f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d1f8:	b570      	push	{r4, r5, r6, lr}
 801d1fa:	9c04      	ldr	r4, [sp, #16]
 801d1fc:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801d200:	4605      	mov	r5, r0
 801d202:	4608      	mov	r0, r1
 801d204:	4619      	mov	r1, r3
 801d206:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d20a:	2a0d      	cmp	r2, #13
 801d20c:	d825      	bhi.n	801d25a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801d20e:	e8df f002 	tbb	[pc, r2]
 801d212:	1807      	.short	0x1807
 801d214:	1d1d1d13 	.word	0x1d1d1d13
 801d218:	1d1d1d1d 	.word	0x1d1d1d1d
 801d21c:	1d1d1d1d 	.word	0x1d1d1d1d
 801d220:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801d224:	682a      	ldr	r2, [r5, #0]
 801d226:	68d6      	ldr	r6, [r2, #12]
 801d228:	4623      	mov	r3, r4
 801d22a:	460a      	mov	r2, r1
 801d22c:	46b4      	mov	ip, r6
 801d22e:	4601      	mov	r1, r0
 801d230:	4628      	mov	r0, r5
 801d232:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d236:	4760      	bx	ip
 801d238:	4622      	mov	r2, r4
 801d23a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d23e:	f7ff bd8d 	b.w	801cd5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d242:	4622      	mov	r2, r4
 801d244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d248:	f7ff bede 	b.w	801d008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d24c:	4b03      	ldr	r3, [pc, #12]	; (801d25c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801d24e:	4a04      	ldr	r2, [pc, #16]	; (801d260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801d250:	4804      	ldr	r0, [pc, #16]	; (801d264 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801d252:	f240 3159 	movw	r1, #857	; 0x359
 801d256:	f00a f92b 	bl	80274b0 <__assert_func>
 801d25a:	bd70      	pop	{r4, r5, r6, pc}
 801d25c:	0802d8fd 	.word	0x0802d8fd
 801d260:	0802e109 	.word	0x0802e109
 801d264:	0802d838 	.word	0x0802d838

0801d268 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d26c:	b093      	sub	sp, #76	; 0x4c
 801d26e:	880e      	ldrh	r6, [r1, #0]
 801d270:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d274:	4681      	mov	r9, r0
 801d276:	4688      	mov	r8, r1
 801d278:	4615      	mov	r5, r2
 801d27a:	b136      	cbz	r6, 801d28a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801d27c:	4b70      	ldr	r3, [pc, #448]	; (801d440 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801d27e:	4a71      	ldr	r2, [pc, #452]	; (801d444 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801d280:	4871      	ldr	r0, [pc, #452]	; (801d448 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801d282:	f44f 71c3 	mov.w	r1, #390	; 0x186
 801d286:	f00a f913 	bl	80274b0 <__assert_func>
 801d28a:	6810      	ldr	r0, [r2, #0]
 801d28c:	6851      	ldr	r1, [r2, #4]
 801d28e:	4f6f      	ldr	r7, [pc, #444]	; (801d44c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801d290:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801d450 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801d294:	ac0e      	add	r4, sp, #56	; 0x38
 801d296:	c403      	stmia	r4!, {r0, r1}
 801d298:	6818      	ldr	r0, [r3, #0]
 801d29a:	6859      	ldr	r1, [r3, #4]
 801d29c:	ac10      	add	r4, sp, #64	; 0x40
 801d29e:	c403      	stmia	r4!, {r0, r1}
 801d2a0:	a80e      	add	r0, sp, #56	; 0x38
 801d2a2:	f7f9 f84b 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d2a6:	4629      	mov	r1, r5
 801d2a8:	a810      	add	r0, sp, #64	; 0x40
 801d2aa:	f7f9 f88b 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d2ae:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d2b2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d2b6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d2ba:	6838      	ldr	r0, [r7, #0]
 801d2bc:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d2c0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d2c4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d2c8:	4489      	add	r9, r1
 801d2ca:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d2ce:	440a      	add	r2, r1
 801d2d0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d2d4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d2d8:	4413      	add	r3, r2
 801d2da:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d2de:	6803      	ldr	r3, [r0, #0]
 801d2e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d2e2:	4798      	blx	r3
 801d2e4:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d2e8:	6838      	ldr	r0, [r7, #0]
 801d2ea:	d01d      	beq.n	801d328 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801d2ec:	6802      	ldr	r2, [r0, #0]
 801d2ee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d2f2:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801d2f6:	210b      	movs	r1, #11
 801d2f8:	9107      	str	r1, [sp, #28]
 801d2fa:	f8bb 1000 	ldrh.w	r1, [fp]
 801d2fe:	9106      	str	r1, [sp, #24]
 801d300:	2101      	movs	r1, #1
 801d302:	e9cd a104 	strd	sl, r1, [sp, #16]
 801d306:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d30a:	9103      	str	r1, [sp, #12]
 801d30c:	b2a4      	uxth	r4, r4
 801d30e:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801d312:	9100      	str	r1, [sp, #0]
 801d314:	b2ad      	uxth	r5, r5
 801d316:	9502      	str	r5, [sp, #8]
 801d318:	9401      	str	r4, [sp, #4]
 801d31a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801d31c:	4649      	mov	r1, r9
 801d31e:	4642      	mov	r2, r8
 801d320:	47a0      	blx	r4
 801d322:	b013      	add	sp, #76	; 0x4c
 801d324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d328:	6803      	ldr	r3, [r0, #0]
 801d32a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d32c:	4798      	blx	r3
 801d32e:	f8bb 3000 	ldrh.w	r3, [fp]
 801d332:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d336:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d33a:	fb03 1202 	mla	r2, r3, r2, r1
 801d33e:	435d      	muls	r5, r3
 801d340:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d344:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d348:	920c      	str	r2, [sp, #48]	; 0x30
 801d34a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d34e:	1b12      	subs	r2, r2, r4
 801d350:	920d      	str	r2, [sp, #52]	; 0x34
 801d352:	0062      	lsls	r2, r4, #1
 801d354:	1b1c      	subs	r4, r3, r4
 801d356:	0063      	lsls	r3, r4, #1
 801d358:	920a      	str	r2, [sp, #40]	; 0x28
 801d35a:	930b      	str	r3, [sp, #44]	; 0x2c
 801d35c:	f04f 0e04 	mov.w	lr, #4
 801d360:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d362:	4298      	cmp	r0, r3
 801d364:	d266      	bcs.n	801d434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801d366:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d368:	eb00 0b03 	add.w	fp, r0, r3
 801d36c:	4558      	cmp	r0, fp
 801d36e:	d25c      	bcs.n	801d42a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 801d370:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d374:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d378:	f858 2003 	ldr.w	r2, [r8, r3]
 801d37c:	0e11      	lsrs	r1, r2, #24
 801d37e:	d012      	beq.n	801d3a6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801d380:	29ff      	cmp	r1, #255	; 0xff
 801d382:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d386:	d110      	bne.n	801d3aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801d388:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d38c:	d10d      	bne.n	801d3aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801d38e:	0953      	lsrs	r3, r2, #5
 801d390:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d394:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d398:	f027 0707 	bic.w	r7, r7, #7
 801d39c:	431f      	orrs	r7, r3
 801d39e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d3a2:	433a      	orrs	r2, r7
 801d3a4:	8002      	strh	r2, [r0, #0]
 801d3a6:	3002      	adds	r0, #2
 801d3a8:	e7e0      	b.n	801d36c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801d3aa:	fb0a f101 	mul.w	r1, sl, r1
 801d3ae:	8806      	ldrh	r6, [r0, #0]
 801d3b0:	1c4b      	adds	r3, r1, #1
 801d3b2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d3b6:	1235      	asrs	r5, r6, #8
 801d3b8:	10f4      	asrs	r4, r6, #3
 801d3ba:	121b      	asrs	r3, r3, #8
 801d3bc:	00f6      	lsls	r6, r6, #3
 801d3be:	b299      	uxth	r1, r3
 801d3c0:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d3c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d3c8:	b2f6      	uxtb	r6, r6
 801d3ca:	43db      	mvns	r3, r3
 801d3cc:	b2d2      	uxtb	r2, r2
 801d3ce:	b2db      	uxtb	r3, r3
 801d3d0:	fb1c fc01 	smulbb	ip, ip, r1
 801d3d4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d3d8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d3dc:	fb12 f201 	smulbb	r2, r2, r1
 801d3e0:	fb05 c503 	mla	r5, r5, r3, ip
 801d3e4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d3e8:	b2ff      	uxtb	r7, r7
 801d3ea:	fb06 2203 	mla	r2, r6, r3, r2
 801d3ee:	b2ad      	uxth	r5, r5
 801d3f0:	fb17 f701 	smulbb	r7, r7, r1
 801d3f4:	b292      	uxth	r2, r2
 801d3f6:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d3fa:	fb04 7403 	mla	r4, r4, r3, r7
 801d3fe:	f105 0c01 	add.w	ip, r5, #1
 801d402:	1c57      	adds	r7, r2, #1
 801d404:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d408:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d40c:	b2a4      	uxth	r4, r4
 801d40e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d412:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d416:	433d      	orrs	r5, r7
 801d418:	1c67      	adds	r7, r4, #1
 801d41a:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d41e:	0964      	lsrs	r4, r4, #5
 801d420:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d424:	4325      	orrs	r5, r4
 801d426:	8005      	strh	r5, [r0, #0]
 801d428:	e7bd      	b.n	801d3a6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801d42a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d42c:	4418      	add	r0, r3
 801d42e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d430:	4499      	add	r9, r3
 801d432:	e795      	b.n	801d360 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d434:	4b05      	ldr	r3, [pc, #20]	; (801d44c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801d436:	6818      	ldr	r0, [r3, #0]
 801d438:	6803      	ldr	r3, [r0, #0]
 801d43a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d43c:	4798      	blx	r3
 801d43e:	e770      	b.n	801d322 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801d440:	0802d6e8 	.word	0x0802d6e8
 801d444:	0802de47 	.word	0x0802de47
 801d448:	0802d838 	.word	0x0802d838
 801d44c:	20014c0c 	.word	0x20014c0c
 801d450:	20014c06 	.word	0x20014c06

0801d454 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d458:	4614      	mov	r4, r2
 801d45a:	880a      	ldrh	r2, [r1, #0]
 801d45c:	b087      	sub	sp, #28
 801d45e:	2a02      	cmp	r2, #2
 801d460:	4680      	mov	r8, r0
 801d462:	460d      	mov	r5, r1
 801d464:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d468:	d006      	beq.n	801d478 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801d46a:	4b63      	ldr	r3, [pc, #396]	; (801d5f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801d46c:	4a63      	ldr	r2, [pc, #396]	; (801d5fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801d46e:	4864      	ldr	r0, [pc, #400]	; (801d600 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 801d470:	f240 11dd 	movw	r1, #477	; 0x1dd
 801d474:	f00a f81c 	bl	80274b0 <__assert_func>
 801d478:	2e00      	cmp	r6, #0
 801d47a:	f000 80b9 	beq.w	801d5f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801d47e:	6820      	ldr	r0, [r4, #0]
 801d480:	6861      	ldr	r1, [r4, #4]
 801d482:	af02      	add	r7, sp, #8
 801d484:	c703      	stmia	r7!, {r0, r1}
 801d486:	6818      	ldr	r0, [r3, #0]
 801d488:	6859      	ldr	r1, [r3, #4]
 801d48a:	af04      	add	r7, sp, #16
 801d48c:	c703      	stmia	r7!, {r0, r1}
 801d48e:	a802      	add	r0, sp, #8
 801d490:	f7f8 ff54 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d494:	4621      	mov	r1, r4
 801d496:	a804      	add	r0, sp, #16
 801d498:	f7f8 ff94 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d49c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4a0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4a4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d4a8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d4ac:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d4b0:	eb08 0401 	add.w	r4, r8, r1
 801d4b4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d4b8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d4bc:	440a      	add	r2, r1
 801d4be:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d4c2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d4c6:	4413      	add	r3, r2
 801d4c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d4cc:	4b4d      	ldr	r3, [pc, #308]	; (801d604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801d4ce:	6818      	ldr	r0, [r3, #0]
 801d4d0:	6803      	ldr	r3, [r0, #0]
 801d4d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d4d4:	4798      	blx	r3
 801d4d6:	4b4c      	ldr	r3, [pc, #304]	; (801d608 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801d4d8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d4dc:	881a      	ldrh	r2, [r3, #0]
 801d4de:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d4e2:	2eff      	cmp	r6, #255	; 0xff
 801d4e4:	fb02 c101 	mla	r1, r2, r1, ip
 801d4e8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d4ec:	fb02 f207 	mul.w	r2, r2, r7
 801d4f0:	f105 0104 	add.w	r1, r5, #4
 801d4f4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d4f8:	461d      	mov	r5, r3
 801d4fa:	d05a      	beq.n	801d5b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 801d4fc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d500:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d504:	b2b6      	uxth	r6, r6
 801d506:	fa1f fe8e 	uxth.w	lr, lr
 801d50a:	9301      	str	r3, [sp, #4]
 801d50c:	4282      	cmp	r2, r0
 801d50e:	d96a      	bls.n	801d5e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801d510:	eb00 0b0a 	add.w	fp, r0, sl
 801d514:	4583      	cmp	fp, r0
 801d516:	d940      	bls.n	801d59a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801d518:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d51c:	8805      	ldrh	r5, [r0, #0]
 801d51e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d522:	122f      	asrs	r7, r5, #8
 801d524:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d528:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d52c:	fb17 f70e 	smulbb	r7, r7, lr
 801d530:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d534:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d538:	00ed      	lsls	r5, r5, #3
 801d53a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d53e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d542:	10df      	asrs	r7, r3, #3
 801d544:	b2ed      	uxtb	r5, r5
 801d546:	00db      	lsls	r3, r3, #3
 801d548:	fa1f fc8c 	uxth.w	ip, ip
 801d54c:	fb19 f90e 	smulbb	r9, r9, lr
 801d550:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d554:	b2db      	uxtb	r3, r3
 801d556:	fb15 f50e 	smulbb	r5, r5, lr
 801d55a:	fb07 9706 	mla	r7, r7, r6, r9
 801d55e:	fb03 5306 	mla	r3, r3, r6, r5
 801d562:	f10c 0901 	add.w	r9, ip, #1
 801d566:	b29b      	uxth	r3, r3
 801d568:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d56c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d570:	f103 0c01 	add.w	ip, r3, #1
 801d574:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d578:	b2bf      	uxth	r7, r7
 801d57a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d57e:	ea4c 0c09 	orr.w	ip, ip, r9
 801d582:	f107 0901 	add.w	r9, r7, #1
 801d586:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d58a:	097f      	lsrs	r7, r7, #5
 801d58c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d590:	ea4c 0c07 	orr.w	ip, ip, r7
 801d594:	f820 cb02 	strh.w	ip, [r0], #2
 801d598:	e7bc      	b.n	801d514 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801d59a:	9b01      	ldr	r3, [sp, #4]
 801d59c:	881b      	ldrh	r3, [r3, #0]
 801d59e:	eba3 0308 	sub.w	r3, r3, r8
 801d5a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d5aa:	eba3 0308 	sub.w	r3, r3, r8
 801d5ae:	441c      	add	r4, r3
 801d5b0:	e7ac      	b.n	801d50c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801d5b2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d5b6:	4282      	cmp	r2, r0
 801d5b8:	d915      	bls.n	801d5e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801d5ba:	eb00 060a 	add.w	r6, r0, sl
 801d5be:	4286      	cmp	r6, r0
 801d5c0:	d906      	bls.n	801d5d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801d5c2:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d5c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d5ca:	f820 3b02 	strh.w	r3, [r0], #2
 801d5ce:	e7f6      	b.n	801d5be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 801d5d0:	882b      	ldrh	r3, [r5, #0]
 801d5d2:	eba3 0308 	sub.w	r3, r3, r8
 801d5d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d5de:	eba3 0308 	sub.w	r3, r3, r8
 801d5e2:	441c      	add	r4, r3
 801d5e4:	e7e7      	b.n	801d5b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801d5e6:	4b07      	ldr	r3, [pc, #28]	; (801d604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801d5e8:	6818      	ldr	r0, [r3, #0]
 801d5ea:	6803      	ldr	r3, [r0, #0]
 801d5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5ee:	4798      	blx	r3
 801d5f0:	b007      	add	sp, #28
 801d5f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5f6:	bf00      	nop
 801d5f8:	0802d618 	.word	0x0802d618
 801d5fc:	0802dcb1 	.word	0x0802dcb1
 801d600:	0802d838 	.word	0x0802d838
 801d604:	20014c0c 	.word	0x20014c0c
 801d608:	20014c06 	.word	0x20014c06

0801d60c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d610:	f8b1 9000 	ldrh.w	r9, [r1]
 801d614:	b091      	sub	sp, #68	; 0x44
 801d616:	f1b9 0f01 	cmp.w	r9, #1
 801d61a:	4604      	mov	r4, r0
 801d61c:	460f      	mov	r7, r1
 801d61e:	4690      	mov	r8, r2
 801d620:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d624:	d006      	beq.n	801d634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801d626:	4b84      	ldr	r3, [pc, #528]	; (801d838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801d628:	4a84      	ldr	r2, [pc, #528]	; (801d83c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801d62a:	4885      	ldr	r0, [pc, #532]	; (801d840 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801d62c:	f240 212b 	movw	r1, #555	; 0x22b
 801d630:	f009 ff3e 	bl	80274b0 <__assert_func>
 801d634:	2d00      	cmp	r5, #0
 801d636:	d04f      	beq.n	801d6d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801d638:	6810      	ldr	r0, [r2, #0]
 801d63a:	6851      	ldr	r1, [r2, #4]
 801d63c:	f8df b208 	ldr.w	fp, [pc, #520]	; 801d848 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801d640:	ae0c      	add	r6, sp, #48	; 0x30
 801d642:	c603      	stmia	r6!, {r0, r1}
 801d644:	6818      	ldr	r0, [r3, #0]
 801d646:	6859      	ldr	r1, [r3, #4]
 801d648:	ae0e      	add	r6, sp, #56	; 0x38
 801d64a:	c603      	stmia	r6!, {r0, r1}
 801d64c:	a80c      	add	r0, sp, #48	; 0x30
 801d64e:	f7f8 fe75 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d652:	4641      	mov	r1, r8
 801d654:	a80e      	add	r0, sp, #56	; 0x38
 801d656:	f7f8 feb5 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d65a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d65e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d662:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d666:	f8db 0000 	ldr.w	r0, [fp]
 801d66a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d66e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d672:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d84c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801d676:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d67a:	440c      	add	r4, r1
 801d67c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d680:	440a      	add	r2, r1
 801d682:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d686:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d68a:	4413      	add	r3, r2
 801d68c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d690:	6803      	ldr	r3, [r0, #0]
 801d692:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d694:	4798      	blx	r3
 801d696:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d69a:	f8db 0000 	ldr.w	r0, [fp]
 801d69e:	d01e      	beq.n	801d6de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 801d6a0:	2200      	movs	r2, #0
 801d6a2:	6801      	ldr	r1, [r0, #0]
 801d6a4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d6a8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d6ac:	220b      	movs	r2, #11
 801d6ae:	9207      	str	r2, [sp, #28]
 801d6b0:	f8b8 2000 	ldrh.w	r2, [r8]
 801d6b4:	9504      	str	r5, [sp, #16]
 801d6b6:	e9cd 9205 	strd	r9, r2, [sp, #20]
 801d6ba:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d6be:	9203      	str	r2, [sp, #12]
 801d6c0:	fa1f f28a 	uxth.w	r2, sl
 801d6c4:	9202      	str	r2, [sp, #8]
 801d6c6:	b2b6      	uxth	r6, r6
 801d6c8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d6cc:	9200      	str	r2, [sp, #0]
 801d6ce:	9601      	str	r6, [sp, #4]
 801d6d0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d6d2:	463a      	mov	r2, r7
 801d6d4:	4621      	mov	r1, r4
 801d6d6:	47a8      	blx	r5
 801d6d8:	b011      	add	sp, #68	; 0x44
 801d6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6de:	6803      	ldr	r3, [r0, #0]
 801d6e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d6e2:	4798      	blx	r3
 801d6e4:	f8b8 2000 	ldrh.w	r2, [r8]
 801d6e8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d6ec:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d6f0:	2dff      	cmp	r5, #255	; 0xff
 801d6f2:	fb02 1303 	mla	r3, r2, r3, r1
 801d6f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6fa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d6fe:	fb0a fa02 	mul.w	sl, sl, r2
 801d702:	d062      	beq.n	801d7ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 801d704:	ea6f 0c05 	mvn.w	ip, r5
 801d708:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d70c:	930a      	str	r3, [sp, #40]	; 0x28
 801d70e:	b2ad      	uxth	r5, r5
 801d710:	fa5f fc8c 	uxtb.w	ip, ip
 801d714:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d718:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d71a:	4298      	cmp	r0, r3
 801d71c:	f080 8085 	bcs.w	801d82a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801d720:	eb00 0b09 	add.w	fp, r0, r9
 801d724:	4558      	cmp	r0, fp
 801d726:	d246      	bcs.n	801d7b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d728:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d72c:	2303      	movs	r3, #3
 801d72e:	2204      	movs	r2, #4
 801d730:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d734:	eb07 0a0e 	add.w	sl, r7, lr
 801d738:	8803      	ldrh	r3, [r0, #0]
 801d73a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d73e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d742:	1219      	asrs	r1, r3, #8
 801d744:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d748:	fb18 f805 	smulbb	r8, r8, r5
 801d74c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d750:	10da      	asrs	r2, r3, #3
 801d752:	fb01 810c 	mla	r1, r1, ip, r8
 801d756:	00db      	lsls	r3, r3, #3
 801d758:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d75c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d760:	b2db      	uxtb	r3, r3
 801d762:	fb18 f805 	smulbb	r8, r8, r5
 801d766:	fb1e fe05 	smulbb	lr, lr, r5
 801d76a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d76e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d772:	b289      	uxth	r1, r1
 801d774:	fb02 820c 	mla	r2, r2, ip, r8
 801d778:	fb03 e30c 	mla	r3, r3, ip, lr
 801d77c:	b292      	uxth	r2, r2
 801d77e:	b29b      	uxth	r3, r3
 801d780:	f101 0801 	add.w	r8, r1, #1
 801d784:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d788:	f103 0e01 	add.w	lr, r3, #1
 801d78c:	f102 0801 	add.w	r8, r2, #1
 801d790:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d794:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d798:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d79c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d7a0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d7a4:	ea4e 0101 	orr.w	r1, lr, r1
 801d7a8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d7ac:	ea41 0108 	orr.w	r1, r1, r8
 801d7b0:	f820 1b02 	strh.w	r1, [r0], #2
 801d7b4:	e7b6      	b.n	801d724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801d7b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d7b8:	881b      	ldrh	r3, [r3, #0]
 801d7ba:	1b9b      	subs	r3, r3, r6
 801d7bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d7c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d7c4:	1b9b      	subs	r3, r3, r6
 801d7c6:	441c      	add	r4, r3
 801d7c8:	e7a6      	b.n	801d718 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801d7ca:	491e      	ldr	r1, [pc, #120]	; (801d844 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801d7cc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d7d0:	2203      	movs	r2, #3
 801d7d2:	2504      	movs	r5, #4
 801d7d4:	4550      	cmp	r0, sl
 801d7d6:	d228      	bcs.n	801d82a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801d7d8:	eb00 0c09 	add.w	ip, r0, r9
 801d7dc:	4560      	cmp	r0, ip
 801d7de:	4623      	mov	r3, r4
 801d7e0:	d219      	bcs.n	801d816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d7e2:	f893 e000 	ldrb.w	lr, [r3]
 801d7e6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d7ea:	eb07 0b0e 	add.w	fp, r7, lr
 801d7ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d7f2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d7f6:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d7fa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d7fe:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d802:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d806:	ea43 030b 	orr.w	r3, r3, fp
 801d80a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d80e:	3401      	adds	r4, #1
 801d810:	f820 3b02 	strh.w	r3, [r0], #2
 801d814:	e7e2      	b.n	801d7dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801d816:	f8b8 3000 	ldrh.w	r3, [r8]
 801d81a:	1b9b      	subs	r3, r3, r6
 801d81c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d820:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d824:	1b9b      	subs	r3, r3, r6
 801d826:	441c      	add	r4, r3
 801d828:	e7d4      	b.n	801d7d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801d82a:	4b07      	ldr	r3, [pc, #28]	; (801d848 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801d82c:	6818      	ldr	r0, [r3, #0]
 801d82e:	6803      	ldr	r3, [r0, #0]
 801d830:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d832:	4798      	blx	r3
 801d834:	e750      	b.n	801d6d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801d836:	bf00      	nop
 801d838:	0802d666 	.word	0x0802d666
 801d83c:	0802dd3a 	.word	0x0802dd3a
 801d840:	0802d838 	.word	0x0802d838
 801d844:	fffff800 	.word	0xfffff800
 801d848:	20014c0c 	.word	0x20014c0c
 801d84c:	20014c06 	.word	0x20014c06

0801d850 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d850:	b430      	push	{r4, r5}
 801d852:	780d      	ldrb	r5, [r1, #0]
 801d854:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801d858:	2d01      	cmp	r5, #1
 801d85a:	d00a      	beq.n	801d872 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801d85c:	d305      	bcc.n	801d86a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801d85e:	2d02      	cmp	r5, #2
 801d860:	d10b      	bne.n	801d87a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801d862:	9402      	str	r4, [sp, #8]
 801d864:	bc30      	pop	{r4, r5}
 801d866:	f7ff bdf5 	b.w	801d454 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d86a:	9402      	str	r4, [sp, #8]
 801d86c:	bc30      	pop	{r4, r5}
 801d86e:	f7ff bcfb 	b.w	801d268 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d872:	9402      	str	r4, [sp, #8]
 801d874:	bc30      	pop	{r4, r5}
 801d876:	f7ff bec9 	b.w	801d60c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d87a:	bc30      	pop	{r4, r5}
 801d87c:	4770      	bx	lr
	...

0801d880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d884:	4604      	mov	r4, r0
 801d886:	b087      	sub	sp, #28
 801d888:	6810      	ldr	r0, [r2, #0]
 801d88a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d88e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801dac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d892:	460e      	mov	r6, r1
 801d894:	6851      	ldr	r1, [r2, #4]
 801d896:	ad02      	add	r5, sp, #8
 801d898:	c503      	stmia	r5!, {r0, r1}
 801d89a:	6818      	ldr	r0, [r3, #0]
 801d89c:	6859      	ldr	r1, [r3, #4]
 801d89e:	ad04      	add	r5, sp, #16
 801d8a0:	4617      	mov	r7, r2
 801d8a2:	c503      	stmia	r5!, {r0, r1}
 801d8a4:	a802      	add	r0, sp, #8
 801d8a6:	f7f8 fd49 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d8aa:	4639      	mov	r1, r7
 801d8ac:	a804      	add	r0, sp, #16
 801d8ae:	f7f8 fd89 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d8b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d8b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d8ba:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d8be:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d8c2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d8c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d8ca:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d8ce:	440e      	add	r6, r1
 801d8d0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d8d4:	440a      	add	r2, r1
 801d8d6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d8da:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d8de:	4413      	add	r3, r2
 801d8e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d8e4:	4b77      	ldr	r3, [pc, #476]	; (801dac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d8e6:	6818      	ldr	r0, [r3, #0]
 801d8e8:	6803      	ldr	r3, [r0, #0]
 801d8ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d8ec:	4798      	blx	r3
 801d8ee:	f8b9 b000 	ldrh.w	fp, [r9]
 801d8f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d8f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d8fa:	fb0b 2303 	mla	r3, fp, r3, r2
 801d8fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d902:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d906:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d90a:	fb05 f50b 	mul.w	r5, r5, fp
 801d90e:	9300      	str	r3, [sp, #0]
 801d910:	d069      	beq.n	801d9e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d912:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d916:	4558      	cmp	r0, fp
 801d918:	f080 80cc 	bcs.w	801dab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d91c:	9b00      	ldr	r3, [sp, #0]
 801d91e:	18c3      	adds	r3, r0, r3
 801d920:	9301      	str	r3, [sp, #4]
 801d922:	4631      	mov	r1, r6
 801d924:	9b01      	ldr	r3, [sp, #4]
 801d926:	4298      	cmp	r0, r3
 801d928:	d24f      	bcs.n	801d9ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d92a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d92e:	2a00      	cmp	r2, #0
 801d930:	d048      	beq.n	801d9c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d932:	fb0a f202 	mul.w	r2, sl, r2
 801d936:	1c53      	adds	r3, r2, #1
 801d938:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d93c:	121b      	asrs	r3, r3, #8
 801d93e:	d041      	beq.n	801d9c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d940:	8802      	ldrh	r2, [r0, #0]
 801d942:	f8b4 c000 	ldrh.w	ip, [r4]
 801d946:	b29e      	uxth	r6, r3
 801d948:	1215      	asrs	r5, r2, #8
 801d94a:	43db      	mvns	r3, r3
 801d94c:	b2db      	uxtb	r3, r3
 801d94e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d952:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d956:	fb15 f503 	smulbb	r5, r5, r3
 801d95a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d95e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d962:	00d2      	lsls	r2, r2, #3
 801d964:	fb07 5706 	mla	r7, r7, r6, r5
 801d968:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d96c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d970:	b2d2      	uxtb	r2, r2
 801d972:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d976:	b2bf      	uxth	r7, r7
 801d978:	fb1e fe03 	smulbb	lr, lr, r3
 801d97c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d980:	fa5f fc8c 	uxtb.w	ip, ip
 801d984:	fb12 f203 	smulbb	r2, r2, r3
 801d988:	fb05 e506 	mla	r5, r5, r6, lr
 801d98c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d990:	f107 0e01 	add.w	lr, r7, #1
 801d994:	fa1f fc8c 	uxth.w	ip, ip
 801d998:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d99c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d9a0:	f10c 0701 	add.w	r7, ip, #1
 801d9a4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d9a8:	b2ad      	uxth	r5, r5
 801d9aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d9ae:	ea47 070e 	orr.w	r7, r7, lr
 801d9b2:	f105 0e01 	add.w	lr, r5, #1
 801d9b6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d9ba:	096d      	lsrs	r5, r5, #5
 801d9bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d9c0:	432f      	orrs	r7, r5
 801d9c2:	8007      	strh	r7, [r0, #0]
 801d9c4:	3002      	adds	r0, #2
 801d9c6:	3402      	adds	r4, #2
 801d9c8:	e7ac      	b.n	801d924 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d9ca:	f8b9 3000 	ldrh.w	r3, [r9]
 801d9ce:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d9d2:	eba3 0308 	sub.w	r3, r3, r8
 801d9d6:	eba6 0608 	sub.w	r6, r6, r8
 801d9da:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d9de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9e2:	440e      	add	r6, r1
 801d9e4:	e797      	b.n	801d916 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d9e6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d9ea:	42a8      	cmp	r0, r5
 801d9ec:	d262      	bcs.n	801dab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d9ee:	9b00      	ldr	r3, [sp, #0]
 801d9f0:	4631      	mov	r1, r6
 801d9f2:	eb00 0b03 	add.w	fp, r0, r3
 801d9f6:	4558      	cmp	r0, fp
 801d9f8:	d24e      	bcs.n	801da98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d9fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d9fe:	b12b      	cbz	r3, 801da0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801da00:	2bff      	cmp	r3, #255	; 0xff
 801da02:	f8b4 e000 	ldrh.w	lr, [r4]
 801da06:	d104      	bne.n	801da12 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801da08:	f8a0 e000 	strh.w	lr, [r0]
 801da0c:	3002      	adds	r0, #2
 801da0e:	3402      	adds	r4, #2
 801da10:	e7f1      	b.n	801d9f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801da12:	8802      	ldrh	r2, [r0, #0]
 801da14:	b29f      	uxth	r7, r3
 801da16:	1216      	asrs	r6, r2, #8
 801da18:	43db      	mvns	r3, r3
 801da1a:	b2db      	uxtb	r3, r3
 801da1c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801da20:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da24:	fb16 f603 	smulbb	r6, r6, r3
 801da28:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801da2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da30:	00d2      	lsls	r2, r2, #3
 801da32:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da36:	b2d2      	uxtb	r2, r2
 801da38:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801da3c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801da40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801da44:	fb1a fa03 	smulbb	sl, sl, r3
 801da48:	fa1f fc8c 	uxth.w	ip, ip
 801da4c:	fb12 f303 	smulbb	r3, r2, r3
 801da50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da54:	fa5f fe8e 	uxtb.w	lr, lr
 801da58:	fb06 a607 	mla	r6, r6, r7, sl
 801da5c:	f10c 0201 	add.w	r2, ip, #1
 801da60:	fb0e 3307 	mla	r3, lr, r7, r3
 801da64:	b2b6      	uxth	r6, r6
 801da66:	b29b      	uxth	r3, r3
 801da68:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801da6c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801da70:	f106 0a01 	add.w	sl, r6, #1
 801da74:	f103 0c01 	add.w	ip, r3, #1
 801da78:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801da7c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801da80:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801da84:	0976      	lsrs	r6, r6, #5
 801da86:	ea4c 0c02 	orr.w	ip, ip, r2
 801da8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801da8e:	ea4c 0c06 	orr.w	ip, ip, r6
 801da92:	f8a0 c000 	strh.w	ip, [r0]
 801da96:	e7b9      	b.n	801da0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801da98:	f8b9 3000 	ldrh.w	r3, [r9]
 801da9c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801daa0:	eba3 0308 	sub.w	r3, r3, r8
 801daa4:	eba6 0608 	sub.w	r6, r6, r8
 801daa8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801daac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dab0:	440e      	add	r6, r1
 801dab2:	e79a      	b.n	801d9ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801dab4:	4b03      	ldr	r3, [pc, #12]	; (801dac4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dab6:	6818      	ldr	r0, [r3, #0]
 801dab8:	6803      	ldr	r3, [r0, #0]
 801daba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dabc:	4798      	blx	r3
 801dabe:	b007      	add	sp, #28
 801dac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dac4:	20014c0c 	.word	0x20014c0c
 801dac8:	20014c06 	.word	0x20014c06

0801dacc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801dacc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dad0:	b089      	sub	sp, #36	; 0x24
 801dad2:	4682      	mov	sl, r0
 801dad4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801dad8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dada:	460f      	mov	r7, r1
 801dadc:	4691      	mov	r9, r2
 801dade:	4698      	mov	r8, r3
 801dae0:	2e00      	cmp	r6, #0
 801dae2:	d03d      	beq.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dae4:	4608      	mov	r0, r1
 801dae6:	f7fb ff7d 	bl	80199e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801daea:	4605      	mov	r5, r0
 801daec:	4638      	mov	r0, r7
 801daee:	f7fb ffbd 	bl	8019a6c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801daf2:	f8ad 000e 	strh.w	r0, [sp, #14]
 801daf6:	4638      	mov	r0, r7
 801daf8:	f8ad 9008 	strh.w	r9, [sp, #8]
 801dafc:	f8ad 500c 	strh.w	r5, [sp, #12]
 801db00:	f8ad 800a 	strh.w	r8, [sp, #10]
 801db04:	f7fc f88a 	bl	8019c1c <_ZNK8touchgfx6Bitmap7getDataEv>
 801db08:	4605      	mov	r5, r0
 801db0a:	4638      	mov	r0, r7
 801db0c:	f7fc f8b8 	bl	8019c80 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801db10:	4681      	mov	r9, r0
 801db12:	4638      	mov	r0, r7
 801db14:	f7fc f90c 	bl	8019d30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801db18:	280b      	cmp	r0, #11
 801db1a:	f200 816f 	bhi.w	801ddfc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 801db1e:	e8df f010 	tbh	[pc, r0, lsl #1]
 801db22:	00c3      	.short	0x00c3
 801db24:	000c00b4 	.word	0x000c00b4
 801db28:	016d016d 	.word	0x016d016d
 801db2c:	016d016d 	.word	0x016d016d
 801db30:	016d016d 	.word	0x016d016d
 801db34:	016d016d 	.word	0x016d016d
 801db38:	00bb      	.short	0x00bb
 801db3a:	4bb3      	ldr	r3, [pc, #716]	; (801de08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 801db3c:	6818      	ldr	r0, [r3, #0]
 801db3e:	6803      	ldr	r3, [r0, #0]
 801db40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801db42:	4798      	blx	r3
 801db44:	2eff      	cmp	r6, #255	; 0xff
 801db46:	d121      	bne.n	801db8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801db48:	0683      	lsls	r3, r0, #26
 801db4a:	d41f      	bmi.n	801db8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801db4c:	4638      	mov	r0, r7
 801db4e:	f7fc f82b 	bl	8019ba8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801db52:	b940      	cbnz	r0, 801db66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801db54:	4623      	mov	r3, r4
 801db56:	aa02      	add	r2, sp, #8
 801db58:	4629      	mov	r1, r5
 801db5a:	4650      	mov	r0, sl
 801db5c:	f7ff f9e4 	bl	801cf28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801db60:	b009      	add	sp, #36	; 0x24
 801db62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db66:	f10d 0818 	add.w	r8, sp, #24
 801db6a:	4639      	mov	r1, r7
 801db6c:	4640      	mov	r0, r8
 801db6e:	f7fb ffc1 	bl	8019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801db72:	e898 0003 	ldmia.w	r8, {r0, r1}
 801db76:	af04      	add	r7, sp, #16
 801db78:	e887 0003 	stmia.w	r7, {r0, r1}
 801db7c:	4638      	mov	r0, r7
 801db7e:	4621      	mov	r1, r4
 801db80:	f7f1 fdc8 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 801db84:	4638      	mov	r0, r7
 801db86:	f7f1 fe08 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 801db8a:	b130      	cbz	r0, 801db9a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 801db8c:	4633      	mov	r3, r6
 801db8e:	4622      	mov	r2, r4
 801db90:	a902      	add	r1, sp, #8
 801db92:	4628      	mov	r0, r5
 801db94:	f7ff f8e2 	bl	801cd5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db98:	e7e2      	b.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801db9a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801db9e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dba2:	4293      	cmp	r3, r2
 801dba4:	dd12      	ble.n	801dbcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 801dba6:	1a9b      	subs	r3, r3, r2
 801dba8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dbac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dbb0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dbb4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dbb8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dbbc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dbc0:	4642      	mov	r2, r8
 801dbc2:	4633      	mov	r3, r6
 801dbc4:	a902      	add	r1, sp, #8
 801dbc6:	4628      	mov	r0, r5
 801dbc8:	f7ff f8c8 	bl	801cd5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dbcc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dbd0:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dbd4:	4293      	cmp	r3, r2
 801dbd6:	dd12      	ble.n	801dbfe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 801dbd8:	1a9b      	subs	r3, r3, r2
 801dbda:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dbde:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dbe2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dbe6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dbea:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dbee:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dbf2:	23ff      	movs	r3, #255	; 0xff
 801dbf4:	4642      	mov	r2, r8
 801dbf6:	a902      	add	r1, sp, #8
 801dbf8:	4628      	mov	r0, r5
 801dbfa:	f7ff f8af 	bl	801cd5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dbfe:	463b      	mov	r3, r7
 801dc00:	aa02      	add	r2, sp, #8
 801dc02:	4629      	mov	r1, r5
 801dc04:	4650      	mov	r0, sl
 801dc06:	f7ff f98f 	bl	801cf28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801dc0a:	88a2      	ldrh	r2, [r4, #4]
 801dc0c:	8823      	ldrh	r3, [r4, #0]
 801dc0e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dc12:	4413      	add	r3, r2
 801dc14:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dc18:	440a      	add	r2, r1
 801dc1a:	b29b      	uxth	r3, r3
 801dc1c:	b292      	uxth	r2, r2
 801dc1e:	b211      	sxth	r1, r2
 801dc20:	b218      	sxth	r0, r3
 801dc22:	4288      	cmp	r0, r1
 801dc24:	dd12      	ble.n	801dc4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 801dc26:	1a9b      	subs	r3, r3, r2
 801dc28:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dc2c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801dc30:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dc34:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dc38:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dc3c:	23ff      	movs	r3, #255	; 0xff
 801dc3e:	4642      	mov	r2, r8
 801dc40:	a902      	add	r1, sp, #8
 801dc42:	4628      	mov	r0, r5
 801dc44:	f8ad 601a 	strh.w	r6, [sp, #26]
 801dc48:	f7ff f888 	bl	801cd5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dc4c:	88e2      	ldrh	r2, [r4, #6]
 801dc4e:	8863      	ldrh	r3, [r4, #2]
 801dc50:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dc54:	4413      	add	r3, r2
 801dc56:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dc5a:	440a      	add	r2, r1
 801dc5c:	b29b      	uxth	r3, r3
 801dc5e:	b292      	uxth	r2, r2
 801dc60:	b211      	sxth	r1, r2
 801dc62:	b218      	sxth	r0, r3
 801dc64:	4288      	cmp	r0, r1
 801dc66:	f77f af7b 	ble.w	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc6a:	1a9b      	subs	r3, r3, r2
 801dc6c:	f9b4 6000 	ldrsh.w	r6, [r4]
 801dc70:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dc74:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dc78:	f8ad 6018 	strh.w	r6, [sp, #24]
 801dc7c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dc80:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dc84:	23ff      	movs	r3, #255	; 0xff
 801dc86:	4642      	mov	r2, r8
 801dc88:	e782      	b.n	801db90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 801dc8a:	4633      	mov	r3, r6
 801dc8c:	4622      	mov	r2, r4
 801dc8e:	a902      	add	r1, sp, #8
 801dc90:	4628      	mov	r0, r5
 801dc92:	f7ff f9b9 	bl	801d008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801dc96:	e763      	b.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc98:	9600      	str	r6, [sp, #0]
 801dc9a:	4623      	mov	r3, r4
 801dc9c:	aa02      	add	r2, sp, #8
 801dc9e:	4649      	mov	r1, r9
 801dca0:	4628      	mov	r0, r5
 801dca2:	f7ff fdd5 	bl	801d850 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801dca6:	e75b      	b.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dca8:	4638      	mov	r0, r7
 801dcaa:	f7fb ff7d 	bl	8019ba8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801dcae:	b950      	cbnz	r0, 801dcc6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 801dcb0:	e9cd 6000 	strd	r6, r0, [sp]
 801dcb4:	f8da 3000 	ldr.w	r3, [sl]
 801dcb8:	aa02      	add	r2, sp, #8
 801dcba:	68de      	ldr	r6, [r3, #12]
 801dcbc:	4629      	mov	r1, r5
 801dcbe:	4623      	mov	r3, r4
 801dcc0:	4650      	mov	r0, sl
 801dcc2:	47b0      	blx	r6
 801dcc4:	e74c      	b.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dcc6:	f10d 0818 	add.w	r8, sp, #24
 801dcca:	4639      	mov	r1, r7
 801dccc:	4640      	mov	r0, r8
 801dcce:	f7fb ff11 	bl	8019af4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dcd2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dcd6:	af04      	add	r7, sp, #16
 801dcd8:	e887 0003 	stmia.w	r7, {r0, r1}
 801dcdc:	4638      	mov	r0, r7
 801dcde:	4621      	mov	r1, r4
 801dce0:	f7f1 fd18 	bl	800f714 <_ZN8touchgfx4RectaNERKS0_>
 801dce4:	4638      	mov	r0, r7
 801dce6:	f7f1 fd58 	bl	800f79a <_ZNK8touchgfx4Rect7isEmptyEv>
 801dcea:	b138      	cbz	r0, 801dcfc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801dcec:	9600      	str	r6, [sp, #0]
 801dcee:	4623      	mov	r3, r4
 801dcf0:	aa02      	add	r2, sp, #8
 801dcf2:	4649      	mov	r1, r9
 801dcf4:	4628      	mov	r0, r5
 801dcf6:	f7ff fdc3 	bl	801d880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dcfa:	e731      	b.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dcfc:	e9cd 6000 	strd	r6, r0, [sp]
 801dd00:	f8da 3000 	ldr.w	r3, [sl]
 801dd04:	aa02      	add	r2, sp, #8
 801dd06:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801dd0a:	4629      	mov	r1, r5
 801dd0c:	463b      	mov	r3, r7
 801dd0e:	4650      	mov	r0, sl
 801dd10:	47d8      	blx	fp
 801dd12:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd16:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dd1a:	4293      	cmp	r3, r2
 801dd1c:	dd13      	ble.n	801dd46 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 801dd1e:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dd22:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dd26:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dd2a:	1a9b      	subs	r3, r3, r2
 801dd2c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dd30:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dd34:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dd38:	9600      	str	r6, [sp, #0]
 801dd3a:	4643      	mov	r3, r8
 801dd3c:	aa02      	add	r2, sp, #8
 801dd3e:	4649      	mov	r1, r9
 801dd40:	4628      	mov	r0, r5
 801dd42:	f7ff fd9d 	bl	801d880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dd46:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dd4a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dd4e:	4293      	cmp	r3, r2
 801dd50:	dd13      	ble.n	801dd7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 801dd52:	1a9b      	subs	r3, r3, r2
 801dd54:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dd58:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dd5c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dd60:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dd64:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dd68:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dd6c:	9600      	str	r6, [sp, #0]
 801dd6e:	4643      	mov	r3, r8
 801dd70:	aa02      	add	r2, sp, #8
 801dd72:	4649      	mov	r1, r9
 801dd74:	4628      	mov	r0, r5
 801dd76:	f7ff fd83 	bl	801d880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dd7a:	88a2      	ldrh	r2, [r4, #4]
 801dd7c:	8823      	ldrh	r3, [r4, #0]
 801dd7e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dd82:	4413      	add	r3, r2
 801dd84:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dd88:	440a      	add	r2, r1
 801dd8a:	b29b      	uxth	r3, r3
 801dd8c:	b292      	uxth	r2, r2
 801dd8e:	b211      	sxth	r1, r2
 801dd90:	b218      	sxth	r0, r3
 801dd92:	4288      	cmp	r0, r1
 801dd94:	dd13      	ble.n	801ddbe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 801dd96:	1a9b      	subs	r3, r3, r2
 801dd98:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dd9c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801dda0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dda4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dda8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ddac:	9600      	str	r6, [sp, #0]
 801ddae:	4643      	mov	r3, r8
 801ddb0:	aa02      	add	r2, sp, #8
 801ddb2:	4649      	mov	r1, r9
 801ddb4:	4628      	mov	r0, r5
 801ddb6:	f8ad 701a 	strh.w	r7, [sp, #26]
 801ddba:	f7ff fd61 	bl	801d880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ddbe:	88e2      	ldrh	r2, [r4, #6]
 801ddc0:	8863      	ldrh	r3, [r4, #2]
 801ddc2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ddc6:	4413      	add	r3, r2
 801ddc8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ddcc:	440a      	add	r2, r1
 801ddce:	b29b      	uxth	r3, r3
 801ddd0:	b292      	uxth	r2, r2
 801ddd2:	b211      	sxth	r1, r2
 801ddd4:	b218      	sxth	r0, r3
 801ddd6:	4288      	cmp	r0, r1
 801ddd8:	f77f aec2 	ble.w	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dddc:	f9b4 7000 	ldrsh.w	r7, [r4]
 801dde0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dde4:	f8ad 7018 	strh.w	r7, [sp, #24]
 801dde8:	1a9b      	subs	r3, r3, r2
 801ddea:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ddee:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ddf2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ddf6:	9600      	str	r6, [sp, #0]
 801ddf8:	4643      	mov	r3, r8
 801ddfa:	e779      	b.n	801dcf0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ddfc:	4b03      	ldr	r3, [pc, #12]	; (801de0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 801ddfe:	4a04      	ldr	r2, [pc, #16]	; (801de10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 801de00:	4804      	ldr	r0, [pc, #16]	; (801de14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 801de02:	21b0      	movs	r1, #176	; 0xb0
 801de04:	f009 fb54 	bl	80274b0 <__assert_func>
 801de08:	20014c0c 	.word	0x20014c0c
 801de0c:	0802d6b4 	.word	0x0802d6b4
 801de10:	0802ddc3 	.word	0x0802ddc3
 801de14:	0802d838 	.word	0x0802d838

0801de18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801de18:	b508      	push	{r3, lr}
 801de1a:	b180      	cbz	r0, 801de3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801de1c:	2902      	cmp	r1, #2
 801de1e:	d014      	beq.n	801de4a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801de20:	2903      	cmp	r1, #3
 801de22:	d01d      	beq.n	801de60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801de24:	2901      	cmp	r1, #1
 801de26:	d101      	bne.n	801de2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801de28:	2001      	movs	r0, #1
 801de2a:	bd08      	pop	{r3, pc}
 801de2c:	4b0e      	ldr	r3, [pc, #56]	; (801de68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801de2e:	8818      	ldrh	r0, [r3, #0]
 801de30:	b990      	cbnz	r0, 801de58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801de32:	4b0e      	ldr	r3, [pc, #56]	; (801de6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801de34:	4a0e      	ldr	r2, [pc, #56]	; (801de70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801de36:	480f      	ldr	r0, [pc, #60]	; (801de74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801de38:	2153      	movs	r1, #83	; 0x53
 801de3a:	f009 fb39 	bl	80274b0 <__assert_func>
 801de3e:	2902      	cmp	r1, #2
 801de40:	d00e      	beq.n	801de60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801de42:	2903      	cmp	r1, #3
 801de44:	d0f2      	beq.n	801de2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801de46:	2901      	cmp	r1, #1
 801de48:	d1ee      	bne.n	801de28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801de4a:	4b07      	ldr	r3, [pc, #28]	; (801de68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801de4c:	8818      	ldrh	r0, [r3, #0]
 801de4e:	2800      	cmp	r0, #0
 801de50:	d0ef      	beq.n	801de32 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801de52:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801de56:	e7e8      	b.n	801de2a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801de58:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801de5c:	4240      	negs	r0, r0
 801de5e:	e7e4      	b.n	801de2a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801de60:	f04f 30ff 	mov.w	r0, #4294967295
 801de64:	e7e1      	b.n	801de2a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801de66:	bf00      	nop
 801de68:	20014c06 	.word	0x20014c06
 801de6c:	0802d92e 	.word	0x0802d92e
 801de70:	0802df40 	.word	0x0802df40
 801de74:	0802d970 	.word	0x0802d970

0801de78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801de78:	b508      	push	{r3, lr}
 801de7a:	b180      	cbz	r0, 801de9e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801de7c:	2902      	cmp	r1, #2
 801de7e:	d014      	beq.n	801deaa <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 801de80:	2903      	cmp	r1, #3
 801de82:	d018      	beq.n	801deb6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801de84:	2901      	cmp	r1, #1
 801de86:	d001      	beq.n	801de8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801de88:	2001      	movs	r0, #1
 801de8a:	e013      	b.n	801deb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801de8c:	4b0e      	ldr	r3, [pc, #56]	; (801dec8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801de8e:	8818      	ldrh	r0, [r3, #0]
 801de90:	b970      	cbnz	r0, 801deb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801de92:	4b0e      	ldr	r3, [pc, #56]	; (801decc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801de94:	4a0e      	ldr	r2, [pc, #56]	; (801ded0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801de96:	480f      	ldr	r0, [pc, #60]	; (801ded4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801de98:	2153      	movs	r1, #83	; 0x53
 801de9a:	f009 fb09 	bl	80274b0 <__assert_func>
 801de9e:	2902      	cmp	r1, #2
 801dea0:	d009      	beq.n	801deb6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801dea2:	2903      	cmp	r1, #3
 801dea4:	d0f0      	beq.n	801de88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801dea6:	2901      	cmp	r1, #1
 801dea8:	d1f0      	bne.n	801de8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801deaa:	f04f 30ff 	mov.w	r0, #4294967295
 801deae:	e001      	b.n	801deb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801deb0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801deb4:	bd08      	pop	{r3, pc}
 801deb6:	4b04      	ldr	r3, [pc, #16]	; (801dec8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801deb8:	8818      	ldrh	r0, [r3, #0]
 801deba:	2800      	cmp	r0, #0
 801debc:	d0e9      	beq.n	801de92 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801debe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dec2:	4240      	negs	r0, r0
 801dec4:	e7f6      	b.n	801deb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801dec6:	bf00      	nop
 801dec8:	20014c06 	.word	0x20014c06
 801decc:	0802d92e 	.word	0x0802d92e
 801ded0:	0802df40 	.word	0x0802df40
 801ded4:	0802d970 	.word	0x0802d970

0801ded8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ded8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dedc:	b099      	sub	sp, #100	; 0x64
 801dede:	910b      	str	r1, [sp, #44]	; 0x2c
 801dee0:	a914      	add	r1, sp, #80	; 0x50
 801dee2:	e881 000c 	stmia.w	r1, {r2, r3}
 801dee6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801deea:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801deee:	930a      	str	r3, [sp, #40]	; 0x28
 801def0:	f891 900d 	ldrb.w	r9, [r1, #13]
 801def4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801def8:	9311      	str	r3, [sp, #68]	; 0x44
 801defa:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801defe:	930c      	str	r3, [sp, #48]	; 0x30
 801df00:	7988      	ldrb	r0, [r1, #6]
 801df02:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 801df06:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801df0a:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801df0e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801df12:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801df16:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801df1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801df1e:	4303      	orrs	r3, r0
 801df20:	9309      	str	r3, [sp, #36]	; 0x24
 801df22:	f000 81a1 	beq.w	801e268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801df26:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801df2a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801df2e:	f891 9007 	ldrb.w	r9, [r1, #7]
 801df32:	ea59 0903 	orrs.w	r9, r9, r3
 801df36:	f000 8197 	beq.w	801e268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801df3a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801df3e:	b29b      	uxth	r3, r3
 801df40:	2e00      	cmp	r6, #0
 801df42:	f000 813a 	beq.w	801e1ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801df46:	1af6      	subs	r6, r6, r3
 801df48:	b2b6      	uxth	r6, r6
 801df4a:	0433      	lsls	r3, r6, #16
 801df4c:	d502      	bpl.n	801df54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801df4e:	1bad      	subs	r5, r5, r6
 801df50:	b22d      	sxth	r5, r5
 801df52:	2600      	movs	r6, #0
 801df54:	f9b2 1000 	ldrsh.w	r1, [r2]
 801df58:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801df5c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801df60:	428d      	cmp	r5, r1
 801df62:	b28b      	uxth	r3, r1
 801df64:	bfbf      	itttt	lt
 801df66:	18f6      	addlt	r6, r6, r3
 801df68:	1b75      	sublt	r5, r6, r5
 801df6a:	b2ae      	uxthlt	r6, r5
 801df6c:	460d      	movlt	r5, r1
 801df6e:	8891      	ldrh	r1, [r2, #4]
 801df70:	440b      	add	r3, r1
 801df72:	b21b      	sxth	r3, r3
 801df74:	9310      	str	r3, [sp, #64]	; 0x40
 801df76:	88d3      	ldrh	r3, [r2, #6]
 801df78:	8852      	ldrh	r2, [r2, #2]
 801df7a:	4413      	add	r3, r2
 801df7c:	b21b      	sxth	r3, r3
 801df7e:	930f      	str	r3, [sp, #60]	; 0x3c
 801df80:	4bbc      	ldr	r3, [pc, #752]	; (801e274 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801df82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801df84:	f893 b000 	ldrb.w	fp, [r3]
 801df88:	f10b 3cff 	add.w	ip, fp, #4294967295
 801df8c:	f1dc 0300 	rsbs	r3, ip, #0
 801df90:	eb43 030c 	adc.w	r3, r3, ip
 801df94:	930e      	str	r3, [sp, #56]	; 0x38
 801df96:	4629      	mov	r1, r5
 801df98:	4653      	mov	r3, sl
 801df9a:	a814      	add	r0, sp, #80	; 0x50
 801df9c:	f7f8 f853 	bl	8016046 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dfa0:	4629      	mov	r1, r5
 801dfa2:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801dfa6:	4653      	mov	r3, sl
 801dfa8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dfaa:	a814      	add	r0, sp, #80	; 0x50
 801dfac:	f7f8 f863 	bl	8016076 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dfb0:	a918      	add	r1, sp, #96	; 0x60
 801dfb2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dfb6:	a817      	add	r0, sp, #92	; 0x5c
 801dfb8:	f7f8 f97e 	bl	80162b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dfbc:	f1ba 0f00 	cmp.w	sl, #0
 801dfc0:	f040 80fe 	bne.w	801e1c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 801dfc4:	f1bb 0f01 	cmp.w	fp, #1
 801dfc8:	f040 8102 	bne.w	801e1d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 801dfcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dfce:	b153      	cbz	r3, 801dfe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801dfd0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dfd2:	2408      	movs	r4, #8
 801dfd4:	fb94 f3f8 	sdiv	r3, r4, r8
 801dfd8:	1e5c      	subs	r4, r3, #1
 801dfda:	4414      	add	r4, r2
 801dfdc:	fb94 f4f3 	sdiv	r4, r4, r3
 801dfe0:	fb14 f403 	smulbb	r4, r4, r3
 801dfe4:	b2a4      	uxth	r4, r4
 801dfe6:	b906      	cbnz	r6, 801dfea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801dfe8:	b16f      	cbz	r7, 801e006 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 801dfea:	fb07 6304 	mla	r3, r7, r4, r6
 801dfee:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dff0:	fb08 f303 	mul.w	r3, r8, r3
 801dff4:	463a      	mov	r2, r7
 801dff6:	f003 0707 	and.w	r7, r3, #7
 801dffa:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801dffe:	9328      	str	r3, [sp, #160]	; 0xa0
 801e000:	eba9 0302 	sub.w	r3, r9, r2
 801e004:	930d      	str	r3, [sp, #52]	; 0x34
 801e006:	4651      	mov	r1, sl
 801e008:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e00a:	f7ff ff05 	bl	801de18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e00e:	4651      	mov	r1, sl
 801e010:	4681      	mov	r9, r0
 801e012:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e014:	f7ff ff30 	bl	801de78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e018:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e01a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e01c:	eba3 0a02 	sub.w	sl, r3, r2
 801e020:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e022:	459a      	cmp	sl, r3
 801e024:	bfa8      	it	ge
 801e026:	469a      	movge	sl, r3
 801e028:	f1ba 0f00 	cmp.w	sl, #0
 801e02c:	4683      	mov	fp, r0
 801e02e:	f340 811b 	ble.w	801e268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801e032:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e034:	1bad      	subs	r5, r5, r6
 801e036:	1b5d      	subs	r5, r3, r5
 801e038:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e03a:	429d      	cmp	r5, r3
 801e03c:	bfd4      	ite	le
 801e03e:	ebc6 0605 	rsble	r6, r6, r5
 801e042:	ebc6 0603 	rsbgt	r6, r6, r3
 801e046:	2e00      	cmp	r6, #0
 801e048:	f340 810e 	ble.w	801e268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801e04c:	1ba4      	subs	r4, r4, r6
 801e04e:	fb08 f304 	mul.w	r3, r8, r4
 801e052:	930f      	str	r3, [sp, #60]	; 0x3c
 801e054:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e056:	2b00      	cmp	r3, #0
 801e058:	f040 8114 	bne.w	801e284 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e05c:	4b86      	ldr	r3, [pc, #536]	; (801e278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e05e:	6818      	ldr	r0, [r3, #0]
 801e060:	6803      	ldr	r3, [r0, #0]
 801e062:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e064:	4798      	blx	r3
 801e066:	2301      	movs	r3, #1
 801e068:	fa03 f308 	lsl.w	r3, r3, r8
 801e06c:	4a83      	ldr	r2, [pc, #524]	; (801e27c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e06e:	3b01      	subs	r3, #1
 801e070:	b2db      	uxtb	r3, r3
 801e072:	8811      	ldrh	r1, [r2, #0]
 801e074:	930e      	str	r3, [sp, #56]	; 0x38
 801e076:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801e07a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801e07e:	fb01 2303 	mla	r3, r1, r3, r2
 801e082:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e086:	930a      	str	r3, [sp, #40]	; 0x28
 801e088:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e08a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e08e:	9313      	str	r3, [sp, #76]	; 0x4c
 801e090:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e092:	0a19      	lsrs	r1, r3, #8
 801e094:	b2cb      	uxtb	r3, r1
 801e096:	9312      	str	r3, [sp, #72]	; 0x48
 801e098:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e09a:	b2db      	uxtb	r3, r3
 801e09c:	9311      	str	r3, [sp, #68]	; 0x44
 801e09e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e0a0:	095a      	lsrs	r2, r3, #5
 801e0a2:	4b77      	ldr	r3, [pc, #476]	; (801e280 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e0a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e0a8:	400b      	ands	r3, r1
 801e0aa:	4313      	orrs	r3, r2
 801e0ac:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e0ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e0b2:	4313      	orrs	r3, r2
 801e0b4:	b29b      	uxth	r3, r3
 801e0b6:	9310      	str	r3, [sp, #64]	; 0x40
 801e0b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e0ba:	781a      	ldrb	r2, [r3, #0]
 801e0bc:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e0c0:	413a      	asrs	r2, r7
 801e0c2:	fb06 b919 	mls	r9, r6, r9, fp
 801e0c6:	fb03 fb06 	mul.w	fp, r3, r6
 801e0ca:	b2d2      	uxtb	r2, r2
 801e0cc:	930d      	str	r3, [sp, #52]	; 0x34
 801e0ce:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e0d2:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e0d6:	f0c0 80ea 	bcc.w	801e2ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 801e0da:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801e0de:	46b6      	mov	lr, r6
 801e0e0:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e0e4:	f0c0 80d2 	bcc.w	801e28c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801e0e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e0ea:	4013      	ands	r3, r2
 801e0ec:	d055      	beq.n	801e19a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 801e0ee:	20ff      	movs	r0, #255	; 0xff
 801e0f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e0f2:	fb90 f1f1 	sdiv	r1, r0, r1
 801e0f6:	434b      	muls	r3, r1
 801e0f8:	2bfe      	cmp	r3, #254	; 0xfe
 801e0fa:	dd03      	ble.n	801e104 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 801e0fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e0fe:	4281      	cmp	r1, r0
 801e100:	f000 80c2 	beq.w	801e288 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e104:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e106:	f8bc 4000 	ldrh.w	r4, [ip]
 801e10a:	fb11 f303 	smulbb	r3, r1, r3
 801e10e:	b29b      	uxth	r3, r3
 801e110:	1c59      	adds	r1, r3, #1
 801e112:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e116:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e11a:	b29d      	uxth	r5, r3
 801e11c:	43db      	mvns	r3, r3
 801e11e:	b2db      	uxtb	r3, r3
 801e120:	9309      	str	r3, [sp, #36]	; 0x24
 801e122:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e124:	1220      	asrs	r0, r4, #8
 801e126:	fb13 f905 	smulbb	r9, r3, r5
 801e12a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e12e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e130:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e134:	fb00 9003 	mla	r0, r0, r3, r9
 801e138:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e13a:	10e1      	asrs	r1, r4, #3
 801e13c:	fb13 f905 	smulbb	r9, r3, r5
 801e140:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e144:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e146:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e14a:	fb01 9103 	mla	r1, r1, r3, r9
 801e14e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e150:	00e4      	lsls	r4, r4, #3
 801e152:	fb13 f505 	smulbb	r5, r3, r5
 801e156:	b2e4      	uxtb	r4, r4
 801e158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e15a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e15e:	fb04 5403 	mla	r4, r4, r3, r5
 801e162:	b280      	uxth	r0, r0
 801e164:	b2a4      	uxth	r4, r4
 801e166:	1c43      	adds	r3, r0, #1
 801e168:	f104 0901 	add.w	r9, r4, #1
 801e16c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e170:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e174:	b289      	uxth	r1, r1
 801e176:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e17a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e17e:	ea49 0000 	orr.w	r0, r9, r0
 801e182:	f101 0901 	add.w	r9, r1, #1
 801e186:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e18a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e18e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e192:	ea40 0009 	orr.w	r0, r0, r9
 801e196:	f8ac 0000 	strh.w	r0, [ip]
 801e19a:	4447      	add	r7, r8
 801e19c:	b2bf      	uxth	r7, r7
 801e19e:	2f07      	cmp	r7, #7
 801e1a0:	bf81      	itttt	hi
 801e1a2:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e1a4:	785a      	ldrbhi	r2, [r3, #1]
 801e1a6:	3301      	addhi	r3, #1
 801e1a8:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e1aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e1ac:	bf9a      	itte	ls
 801e1ae:	fa42 f208 	asrls.w	r2, r2, r8
 801e1b2:	b2d2      	uxtbls	r2, r2
 801e1b4:	2700      	movhi	r7, #0
 801e1b6:	449c      	add	ip, r3
 801e1b8:	e792      	b.n	801e0e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801e1ba:	441d      	add	r5, r3
 801e1bc:	b22d      	sxth	r5, r5
 801e1be:	e6c9      	b.n	801df54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801e1c0:	f1ba 0f01 	cmp.w	sl, #1
 801e1c4:	f47f af02 	bne.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e1c8:	f1bb 0f01 	cmp.w	fp, #1
 801e1cc:	f47f aefe 	bne.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e1d0:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801e278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e1d4:	f8db 0000 	ldr.w	r0, [fp]
 801e1d8:	6803      	ldr	r3, [r0, #0]
 801e1da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e1dc:	4798      	blx	r3
 801e1de:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e1e2:	465a      	mov	r2, fp
 801e1e4:	d006      	beq.n	801e1f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801e1e6:	f1b8 0f04 	cmp.w	r8, #4
 801e1ea:	d140      	bne.n	801e26e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e1ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e1ee:	3300      	adds	r3, #0
 801e1f0:	bf18      	it	ne
 801e1f2:	2301      	movne	r3, #1
 801e1f4:	0580      	lsls	r0, r0, #22
 801e1f6:	d563      	bpl.n	801e2c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801e1f8:	f1b8 0f08 	cmp.w	r8, #8
 801e1fc:	d160      	bne.n	801e2c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801e1fe:	2b00      	cmp	r3, #0
 801e200:	bf0c      	ite	eq
 801e202:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e206:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e20a:	2e00      	cmp	r6, #0
 801e20c:	f47f aede 	bne.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e210:	2f00      	cmp	r7, #0
 801e212:	f47f aedb 	bne.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e216:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e218:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e21a:	18eb      	adds	r3, r5, r3
 801e21c:	4283      	cmp	r3, r0
 801e21e:	f73f aed5 	bgt.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e222:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e224:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e226:	444b      	add	r3, r9
 801e228:	4283      	cmp	r3, r0
 801e22a:	f73f aecf 	bgt.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e22e:	6810      	ldr	r0, [r2, #0]
 801e230:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e234:	6805      	ldr	r5, [r0, #0]
 801e236:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e23a:	f1b8 0f08 	cmp.w	r8, #8
 801e23e:	f04f 0600 	mov.w	r6, #0
 801e242:	bf18      	it	ne
 801e244:	3401      	addne	r4, #1
 801e246:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801e24a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e24c:	9104      	str	r1, [sp, #16]
 801e24e:	bf18      	it	ne
 801e250:	f024 0401 	bicne.w	r4, r4, #1
 801e254:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e256:	bf18      	it	ne
 801e258:	b2a4      	uxthne	r4, r4
 801e25a:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801e25e:	e9cd 4900 	strd	r4, r9, [sp]
 801e262:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e264:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801e266:	47a0      	blx	r4
 801e268:	b019      	add	sp, #100	; 0x64
 801e26a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e26e:	2300      	movs	r3, #0
 801e270:	e7c0      	b.n	801e1f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801e272:	bf00      	nop
 801e274:	20014c04 	.word	0x20014c04
 801e278:	20014c0c 	.word	0x20014c0c
 801e27c:	20014c06 	.word	0x20014c06
 801e280:	00fff800 	.word	0x00fff800
 801e284:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e286:	e6ee      	b.n	801e066 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801e288:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e28a:	e784      	b.n	801e196 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801e28c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e28e:	b153      	cbz	r3, 801e2a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 801e290:	441f      	add	r7, r3
 801e292:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e294:	b2bf      	uxth	r7, r7
 801e296:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801e29a:	f007 0707 	and.w	r7, r7, #7
 801e29e:	781a      	ldrb	r2, [r3, #0]
 801e2a0:	9328      	str	r3, [sp, #160]	; 0xa0
 801e2a2:	413a      	asrs	r2, r7
 801e2a4:	b2d2      	uxtb	r2, r2
 801e2a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2a8:	445b      	add	r3, fp
 801e2aa:	930a      	str	r3, [sp, #40]	; 0x28
 801e2ac:	e711      	b.n	801e0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801e2ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2b0:	2b00      	cmp	r3, #0
 801e2b2:	d1d9      	bne.n	801e268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801e2b4:	4b05      	ldr	r3, [pc, #20]	; (801e2cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801e2b6:	6818      	ldr	r0, [r3, #0]
 801e2b8:	6803      	ldr	r3, [r0, #0]
 801e2ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e2bc:	4798      	blx	r3
 801e2be:	e7d3      	b.n	801e268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801e2c0:	2b00      	cmp	r3, #0
 801e2c2:	f43f ae83 	beq.w	801dfcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801e2c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e2ca:	e79e      	b.n	801e20a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 801e2cc:	20014c0c 	.word	0x20014c0c

0801e2d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e2d0:	b538      	push	{r3, r4, r5, lr}
 801e2d2:	4c15      	ldr	r4, [pc, #84]	; (801e328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e2d4:	7823      	ldrb	r3, [r4, #0]
 801e2d6:	f3bf 8f5b 	dmb	ish
 801e2da:	07da      	lsls	r2, r3, #31
 801e2dc:	4605      	mov	r5, r0
 801e2de:	d40b      	bmi.n	801e2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e2e0:	4620      	mov	r0, r4
 801e2e2:	f009 f8b8 	bl	8027456 <__cxa_guard_acquire>
 801e2e6:	b138      	cbz	r0, 801e2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e2e8:	4620      	mov	r0, r4
 801e2ea:	f009 f8c0 	bl	802746e <__cxa_guard_release>
 801e2ee:	4a0f      	ldr	r2, [pc, #60]	; (801e32c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e2f0:	490f      	ldr	r1, [pc, #60]	; (801e330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e2f2:	4810      	ldr	r0, [pc, #64]	; (801e334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e2f4:	f009 f8a8 	bl	8027448 <__aeabi_atexit>
 801e2f8:	4c0f      	ldr	r4, [pc, #60]	; (801e338 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e2fa:	7823      	ldrb	r3, [r4, #0]
 801e2fc:	f3bf 8f5b 	dmb	ish
 801e300:	07db      	lsls	r3, r3, #31
 801e302:	d40b      	bmi.n	801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e304:	4620      	mov	r0, r4
 801e306:	f009 f8a6 	bl	8027456 <__cxa_guard_acquire>
 801e30a:	b138      	cbz	r0, 801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e30c:	4620      	mov	r0, r4
 801e30e:	f009 f8ae 	bl	802746e <__cxa_guard_release>
 801e312:	4a06      	ldr	r2, [pc, #24]	; (801e32c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e314:	4909      	ldr	r1, [pc, #36]	; (801e33c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e316:	480a      	ldr	r0, [pc, #40]	; (801e340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e318:	f009 f896 	bl	8027448 <__aeabi_atexit>
 801e31c:	4b05      	ldr	r3, [pc, #20]	; (801e334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e31e:	612b      	str	r3, [r5, #16]
 801e320:	4b07      	ldr	r3, [pc, #28]	; (801e340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e322:	616b      	str	r3, [r5, #20]
 801e324:	bd38      	pop	{r3, r4, r5, pc}
 801e326:	bf00      	nop
 801e328:	20014cf8 	.word	0x20014cf8
 801e32c:	20000000 	.word	0x20000000
 801e330:	0801c331 	.word	0x0801c331
 801e334:	200000ec 	.word	0x200000ec
 801e338:	20014cfc 	.word	0x20014cfc
 801e33c:	0801c32f 	.word	0x0801c32f
 801e340:	200000f0 	.word	0x200000f0

0801e344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e344:	b538      	push	{r3, r4, r5, lr}
 801e346:	4c15      	ldr	r4, [pc, #84]	; (801e39c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e348:	7823      	ldrb	r3, [r4, #0]
 801e34a:	f3bf 8f5b 	dmb	ish
 801e34e:	07da      	lsls	r2, r3, #31
 801e350:	4605      	mov	r5, r0
 801e352:	d40b      	bmi.n	801e36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e354:	4620      	mov	r0, r4
 801e356:	f009 f87e 	bl	8027456 <__cxa_guard_acquire>
 801e35a:	b138      	cbz	r0, 801e36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e35c:	4620      	mov	r0, r4
 801e35e:	f009 f886 	bl	802746e <__cxa_guard_release>
 801e362:	4a0f      	ldr	r2, [pc, #60]	; (801e3a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e364:	490f      	ldr	r1, [pc, #60]	; (801e3a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e366:	4810      	ldr	r0, [pc, #64]	; (801e3a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e368:	f009 f86e 	bl	8027448 <__aeabi_atexit>
 801e36c:	4c0f      	ldr	r4, [pc, #60]	; (801e3ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e36e:	7823      	ldrb	r3, [r4, #0]
 801e370:	f3bf 8f5b 	dmb	ish
 801e374:	07db      	lsls	r3, r3, #31
 801e376:	d40b      	bmi.n	801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e378:	4620      	mov	r0, r4
 801e37a:	f009 f86c 	bl	8027456 <__cxa_guard_acquire>
 801e37e:	b138      	cbz	r0, 801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e380:	4620      	mov	r0, r4
 801e382:	f009 f874 	bl	802746e <__cxa_guard_release>
 801e386:	4a06      	ldr	r2, [pc, #24]	; (801e3a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e388:	4909      	ldr	r1, [pc, #36]	; (801e3b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e38a:	480a      	ldr	r0, [pc, #40]	; (801e3b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e38c:	f009 f85c 	bl	8027448 <__aeabi_atexit>
 801e390:	4b05      	ldr	r3, [pc, #20]	; (801e3a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e392:	60ab      	str	r3, [r5, #8]
 801e394:	4b07      	ldr	r3, [pc, #28]	; (801e3b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e396:	60eb      	str	r3, [r5, #12]
 801e398:	bd38      	pop	{r3, r4, r5, pc}
 801e39a:	bf00      	nop
 801e39c:	20014cd0 	.word	0x20014cd0
 801e3a0:	20000000 	.word	0x20000000
 801e3a4:	0801c335 	.word	0x0801c335
 801e3a8:	200000c4 	.word	0x200000c4
 801e3ac:	20014cd4 	.word	0x20014cd4
 801e3b0:	0801c333 	.word	0x0801c333
 801e3b4:	200000c8 	.word	0x200000c8

0801e3b8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e3b8:	b510      	push	{r4, lr}
 801e3ba:	4604      	mov	r4, r0
 801e3bc:	f7ff ff88 	bl	801e2d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e3c0:	4620      	mov	r0, r4
 801e3c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3c6:	f7ff bfbd 	b.w	801e344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e3cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e3cc:	b538      	push	{r3, r4, r5, lr}
 801e3ce:	4c15      	ldr	r4, [pc, #84]	; (801e424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e3d0:	7823      	ldrb	r3, [r4, #0]
 801e3d2:	f3bf 8f5b 	dmb	ish
 801e3d6:	07da      	lsls	r2, r3, #31
 801e3d8:	4605      	mov	r5, r0
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f009 f83a 	bl	8027456 <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f009 f842 	bl	802746e <__cxa_guard_release>
 801e3ea:	4a0f      	ldr	r2, [pc, #60]	; (801e428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e3ec:	490f      	ldr	r1, [pc, #60]	; (801e42c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e3ee:	4810      	ldr	r0, [pc, #64]	; (801e430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e3f0:	f009 f82a 	bl	8027448 <__aeabi_atexit>
 801e3f4:	4c0f      	ldr	r4, [pc, #60]	; (801e434 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e3f6:	7823      	ldrb	r3, [r4, #0]
 801e3f8:	f3bf 8f5b 	dmb	ish
 801e3fc:	07db      	lsls	r3, r3, #31
 801e3fe:	d40b      	bmi.n	801e418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e400:	4620      	mov	r0, r4
 801e402:	f009 f828 	bl	8027456 <__cxa_guard_acquire>
 801e406:	b138      	cbz	r0, 801e418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e408:	4620      	mov	r0, r4
 801e40a:	f009 f830 	bl	802746e <__cxa_guard_release>
 801e40e:	4a06      	ldr	r2, [pc, #24]	; (801e428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e410:	4909      	ldr	r1, [pc, #36]	; (801e438 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e412:	480a      	ldr	r0, [pc, #40]	; (801e43c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e414:	f009 f818 	bl	8027448 <__aeabi_atexit>
 801e418:	4b05      	ldr	r3, [pc, #20]	; (801e430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e41a:	622b      	str	r3, [r5, #32]
 801e41c:	4b07      	ldr	r3, [pc, #28]	; (801e43c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e41e:	626b      	str	r3, [r5, #36]	; 0x24
 801e420:	bd38      	pop	{r3, r4, r5, pc}
 801e422:	bf00      	nop
 801e424:	20014d00 	.word	0x20014d00
 801e428:	20000000 	.word	0x20000000
 801e42c:	0801c329 	.word	0x0801c329
 801e430:	200000f4 	.word	0x200000f4
 801e434:	20014d04 	.word	0x20014d04
 801e438:	0801c327 	.word	0x0801c327
 801e43c:	200000f8 	.word	0x200000f8

0801e440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e440:	b538      	push	{r3, r4, r5, lr}
 801e442:	4c15      	ldr	r4, [pc, #84]	; (801e498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e444:	7823      	ldrb	r3, [r4, #0]
 801e446:	f3bf 8f5b 	dmb	ish
 801e44a:	07da      	lsls	r2, r3, #31
 801e44c:	4605      	mov	r5, r0
 801e44e:	d40b      	bmi.n	801e468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e450:	4620      	mov	r0, r4
 801e452:	f009 f800 	bl	8027456 <__cxa_guard_acquire>
 801e456:	b138      	cbz	r0, 801e468 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e458:	4620      	mov	r0, r4
 801e45a:	f009 f808 	bl	802746e <__cxa_guard_release>
 801e45e:	4a0f      	ldr	r2, [pc, #60]	; (801e49c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e460:	490f      	ldr	r1, [pc, #60]	; (801e4a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e462:	4810      	ldr	r0, [pc, #64]	; (801e4a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e464:	f008 fff0 	bl	8027448 <__aeabi_atexit>
 801e468:	4c0f      	ldr	r4, [pc, #60]	; (801e4a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e46a:	7823      	ldrb	r3, [r4, #0]
 801e46c:	f3bf 8f5b 	dmb	ish
 801e470:	07db      	lsls	r3, r3, #31
 801e472:	d40b      	bmi.n	801e48c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e474:	4620      	mov	r0, r4
 801e476:	f008 ffee 	bl	8027456 <__cxa_guard_acquire>
 801e47a:	b138      	cbz	r0, 801e48c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e47c:	4620      	mov	r0, r4
 801e47e:	f008 fff6 	bl	802746e <__cxa_guard_release>
 801e482:	4a06      	ldr	r2, [pc, #24]	; (801e49c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e484:	4909      	ldr	r1, [pc, #36]	; (801e4ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e486:	480a      	ldr	r0, [pc, #40]	; (801e4b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e488:	f008 ffde 	bl	8027448 <__aeabi_atexit>
 801e48c:	4b05      	ldr	r3, [pc, #20]	; (801e4a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e48e:	61ab      	str	r3, [r5, #24]
 801e490:	4b07      	ldr	r3, [pc, #28]	; (801e4b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e492:	61eb      	str	r3, [r5, #28]
 801e494:	bd38      	pop	{r3, r4, r5, pc}
 801e496:	bf00      	nop
 801e498:	20014cd8 	.word	0x20014cd8
 801e49c:	20000000 	.word	0x20000000
 801e4a0:	0801c32d 	.word	0x0801c32d
 801e4a4:	200000cc 	.word	0x200000cc
 801e4a8:	20014cdc 	.word	0x20014cdc
 801e4ac:	0801c32b 	.word	0x0801c32b
 801e4b0:	200000d0 	.word	0x200000d0

0801e4b4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e4b4:	b510      	push	{r4, lr}
 801e4b6:	4604      	mov	r4, r0
 801e4b8:	f7ff ff88 	bl	801e3cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e4bc:	4620      	mov	r0, r4
 801e4be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4c2:	f7ff bfbd 	b.w	801e440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e4c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e4c8:	b538      	push	{r3, r4, r5, lr}
 801e4ca:	4c15      	ldr	r4, [pc, #84]	; (801e520 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e4cc:	7823      	ldrb	r3, [r4, #0]
 801e4ce:	f3bf 8f5b 	dmb	ish
 801e4d2:	07da      	lsls	r2, r3, #31
 801e4d4:	4605      	mov	r5, r0
 801e4d6:	d40b      	bmi.n	801e4f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	f008 ffbc 	bl	8027456 <__cxa_guard_acquire>
 801e4de:	b138      	cbz	r0, 801e4f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e4e0:	4620      	mov	r0, r4
 801e4e2:	f008 ffc4 	bl	802746e <__cxa_guard_release>
 801e4e6:	4a0f      	ldr	r2, [pc, #60]	; (801e524 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e4e8:	490f      	ldr	r1, [pc, #60]	; (801e528 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e4ea:	4810      	ldr	r0, [pc, #64]	; (801e52c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e4ec:	f008 ffac 	bl	8027448 <__aeabi_atexit>
 801e4f0:	4c0f      	ldr	r4, [pc, #60]	; (801e530 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e4f2:	7823      	ldrb	r3, [r4, #0]
 801e4f4:	f3bf 8f5b 	dmb	ish
 801e4f8:	07db      	lsls	r3, r3, #31
 801e4fa:	d40b      	bmi.n	801e514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e4fc:	4620      	mov	r0, r4
 801e4fe:	f008 ffaa 	bl	8027456 <__cxa_guard_acquire>
 801e502:	b138      	cbz	r0, 801e514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e504:	4620      	mov	r0, r4
 801e506:	f008 ffb2 	bl	802746e <__cxa_guard_release>
 801e50a:	4a06      	ldr	r2, [pc, #24]	; (801e524 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e50c:	4909      	ldr	r1, [pc, #36]	; (801e534 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e50e:	480a      	ldr	r0, [pc, #40]	; (801e538 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e510:	f008 ff9a 	bl	8027448 <__aeabi_atexit>
 801e514:	4b05      	ldr	r3, [pc, #20]	; (801e52c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e516:	632b      	str	r3, [r5, #48]	; 0x30
 801e518:	4b07      	ldr	r3, [pc, #28]	; (801e538 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e51a:	636b      	str	r3, [r5, #52]	; 0x34
 801e51c:	bd38      	pop	{r3, r4, r5, pc}
 801e51e:	bf00      	nop
 801e520:	20014d10 	.word	0x20014d10
 801e524:	20000000 	.word	0x20000000
 801e528:	0801c321 	.word	0x0801c321
 801e52c:	20000104 	.word	0x20000104
 801e530:	20014d14 	.word	0x20014d14
 801e534:	0801c31f 	.word	0x0801c31f
 801e538:	20000108 	.word	0x20000108

0801e53c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e53c:	b538      	push	{r3, r4, r5, lr}
 801e53e:	4c15      	ldr	r4, [pc, #84]	; (801e594 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e540:	7823      	ldrb	r3, [r4, #0]
 801e542:	f3bf 8f5b 	dmb	ish
 801e546:	07da      	lsls	r2, r3, #31
 801e548:	4605      	mov	r5, r0
 801e54a:	d40b      	bmi.n	801e564 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e54c:	4620      	mov	r0, r4
 801e54e:	f008 ff82 	bl	8027456 <__cxa_guard_acquire>
 801e552:	b138      	cbz	r0, 801e564 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e554:	4620      	mov	r0, r4
 801e556:	f008 ff8a 	bl	802746e <__cxa_guard_release>
 801e55a:	4a0f      	ldr	r2, [pc, #60]	; (801e598 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e55c:	490f      	ldr	r1, [pc, #60]	; (801e59c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e55e:	4810      	ldr	r0, [pc, #64]	; (801e5a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e560:	f008 ff72 	bl	8027448 <__aeabi_atexit>
 801e564:	4c0f      	ldr	r4, [pc, #60]	; (801e5a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e566:	7823      	ldrb	r3, [r4, #0]
 801e568:	f3bf 8f5b 	dmb	ish
 801e56c:	07db      	lsls	r3, r3, #31
 801e56e:	d40b      	bmi.n	801e588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e570:	4620      	mov	r0, r4
 801e572:	f008 ff70 	bl	8027456 <__cxa_guard_acquire>
 801e576:	b138      	cbz	r0, 801e588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e578:	4620      	mov	r0, r4
 801e57a:	f008 ff78 	bl	802746e <__cxa_guard_release>
 801e57e:	4a06      	ldr	r2, [pc, #24]	; (801e598 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e580:	4909      	ldr	r1, [pc, #36]	; (801e5a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e582:	480a      	ldr	r0, [pc, #40]	; (801e5ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e584:	f008 ff60 	bl	8027448 <__aeabi_atexit>
 801e588:	4b05      	ldr	r3, [pc, #20]	; (801e5a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e58a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e58c:	4b07      	ldr	r3, [pc, #28]	; (801e5ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e58e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e590:	bd38      	pop	{r3, r4, r5, pc}
 801e592:	bf00      	nop
 801e594:	20014ce0 	.word	0x20014ce0
 801e598:	20000000 	.word	0x20000000
 801e59c:	0801c325 	.word	0x0801c325
 801e5a0:	200000d4 	.word	0x200000d4
 801e5a4:	20014ce4 	.word	0x20014ce4
 801e5a8:	0801c323 	.word	0x0801c323
 801e5ac:	200000d8 	.word	0x200000d8

0801e5b0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e5b0:	b510      	push	{r4, lr}
 801e5b2:	4604      	mov	r4, r0
 801e5b4:	f7ff ff88 	bl	801e4c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e5b8:	4620      	mov	r0, r4
 801e5ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e5be:	f7ff bfbd 	b.w	801e53c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e5c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e5c4:	b538      	push	{r3, r4, r5, lr}
 801e5c6:	4c15      	ldr	r4, [pc, #84]	; (801e61c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e5c8:	7823      	ldrb	r3, [r4, #0]
 801e5ca:	f3bf 8f5b 	dmb	ish
 801e5ce:	07da      	lsls	r2, r3, #31
 801e5d0:	4605      	mov	r5, r0
 801e5d2:	d40b      	bmi.n	801e5ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e5d4:	4620      	mov	r0, r4
 801e5d6:	f008 ff3e 	bl	8027456 <__cxa_guard_acquire>
 801e5da:	b138      	cbz	r0, 801e5ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e5dc:	4620      	mov	r0, r4
 801e5de:	f008 ff46 	bl	802746e <__cxa_guard_release>
 801e5e2:	4a0f      	ldr	r2, [pc, #60]	; (801e620 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e5e4:	490f      	ldr	r1, [pc, #60]	; (801e624 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e5e6:	4810      	ldr	r0, [pc, #64]	; (801e628 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e5e8:	f008 ff2e 	bl	8027448 <__aeabi_atexit>
 801e5ec:	4c0f      	ldr	r4, [pc, #60]	; (801e62c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e5ee:	7823      	ldrb	r3, [r4, #0]
 801e5f0:	f3bf 8f5b 	dmb	ish
 801e5f4:	07db      	lsls	r3, r3, #31
 801e5f6:	d40b      	bmi.n	801e610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e5f8:	4620      	mov	r0, r4
 801e5fa:	f008 ff2c 	bl	8027456 <__cxa_guard_acquire>
 801e5fe:	b138      	cbz	r0, 801e610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e600:	4620      	mov	r0, r4
 801e602:	f008 ff34 	bl	802746e <__cxa_guard_release>
 801e606:	4a06      	ldr	r2, [pc, #24]	; (801e620 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e608:	4909      	ldr	r1, [pc, #36]	; (801e630 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e60a:	480a      	ldr	r0, [pc, #40]	; (801e634 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e60c:	f008 ff1c 	bl	8027448 <__aeabi_atexit>
 801e610:	4b05      	ldr	r3, [pc, #20]	; (801e628 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e612:	652b      	str	r3, [r5, #80]	; 0x50
 801e614:	4b07      	ldr	r3, [pc, #28]	; (801e634 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e616:	656b      	str	r3, [r5, #84]	; 0x54
 801e618:	bd38      	pop	{r3, r4, r5, pc}
 801e61a:	bf00      	nop
 801e61c:	20014d18 	.word	0x20014d18
 801e620:	20000000 	.word	0x20000000
 801e624:	0801c311 	.word	0x0801c311
 801e628:	2000010c 	.word	0x2000010c
 801e62c:	20014d1c 	.word	0x20014d1c
 801e630:	0801c30f 	.word	0x0801c30f
 801e634:	20000110 	.word	0x20000110

0801e638 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e638:	b538      	push	{r3, r4, r5, lr}
 801e63a:	4c15      	ldr	r4, [pc, #84]	; (801e690 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e63c:	7823      	ldrb	r3, [r4, #0]
 801e63e:	f3bf 8f5b 	dmb	ish
 801e642:	07da      	lsls	r2, r3, #31
 801e644:	4605      	mov	r5, r0
 801e646:	d40b      	bmi.n	801e660 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e648:	4620      	mov	r0, r4
 801e64a:	f008 ff04 	bl	8027456 <__cxa_guard_acquire>
 801e64e:	b138      	cbz	r0, 801e660 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e650:	4620      	mov	r0, r4
 801e652:	f008 ff0c 	bl	802746e <__cxa_guard_release>
 801e656:	4a0f      	ldr	r2, [pc, #60]	; (801e694 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e658:	490f      	ldr	r1, [pc, #60]	; (801e698 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e65a:	4810      	ldr	r0, [pc, #64]	; (801e69c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e65c:	f008 fef4 	bl	8027448 <__aeabi_atexit>
 801e660:	4c0f      	ldr	r4, [pc, #60]	; (801e6a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e662:	7823      	ldrb	r3, [r4, #0]
 801e664:	f3bf 8f5b 	dmb	ish
 801e668:	07db      	lsls	r3, r3, #31
 801e66a:	d40b      	bmi.n	801e684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e66c:	4620      	mov	r0, r4
 801e66e:	f008 fef2 	bl	8027456 <__cxa_guard_acquire>
 801e672:	b138      	cbz	r0, 801e684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e674:	4620      	mov	r0, r4
 801e676:	f008 fefa 	bl	802746e <__cxa_guard_release>
 801e67a:	4a06      	ldr	r2, [pc, #24]	; (801e694 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e67c:	4909      	ldr	r1, [pc, #36]	; (801e6a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e67e:	480a      	ldr	r0, [pc, #40]	; (801e6a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e680:	f008 fee2 	bl	8027448 <__aeabi_atexit>
 801e684:	4b05      	ldr	r3, [pc, #20]	; (801e69c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e686:	64ab      	str	r3, [r5, #72]	; 0x48
 801e688:	4b07      	ldr	r3, [pc, #28]	; (801e6a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e68a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e68c:	bd38      	pop	{r3, r4, r5, pc}
 801e68e:	bf00      	nop
 801e690:	20014d20 	.word	0x20014d20
 801e694:	20000000 	.word	0x20000000
 801e698:	0801c315 	.word	0x0801c315
 801e69c:	20000114 	.word	0x20000114
 801e6a0:	20014d24 	.word	0x20014d24
 801e6a4:	0801c313 	.word	0x0801c313
 801e6a8:	20000118 	.word	0x20000118

0801e6ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e6ac:	b538      	push	{r3, r4, r5, lr}
 801e6ae:	4c15      	ldr	r4, [pc, #84]	; (801e704 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e6b0:	7823      	ldrb	r3, [r4, #0]
 801e6b2:	f3bf 8f5b 	dmb	ish
 801e6b6:	07da      	lsls	r2, r3, #31
 801e6b8:	4605      	mov	r5, r0
 801e6ba:	d40b      	bmi.n	801e6d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e6bc:	4620      	mov	r0, r4
 801e6be:	f008 feca 	bl	8027456 <__cxa_guard_acquire>
 801e6c2:	b138      	cbz	r0, 801e6d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e6c4:	4620      	mov	r0, r4
 801e6c6:	f008 fed2 	bl	802746e <__cxa_guard_release>
 801e6ca:	4a0f      	ldr	r2, [pc, #60]	; (801e708 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e6cc:	490f      	ldr	r1, [pc, #60]	; (801e70c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e6ce:	4810      	ldr	r0, [pc, #64]	; (801e710 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e6d0:	f008 feba 	bl	8027448 <__aeabi_atexit>
 801e6d4:	4c0f      	ldr	r4, [pc, #60]	; (801e714 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e6d6:	7823      	ldrb	r3, [r4, #0]
 801e6d8:	f3bf 8f5b 	dmb	ish
 801e6dc:	07db      	lsls	r3, r3, #31
 801e6de:	d40b      	bmi.n	801e6f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e6e0:	4620      	mov	r0, r4
 801e6e2:	f008 feb8 	bl	8027456 <__cxa_guard_acquire>
 801e6e6:	b138      	cbz	r0, 801e6f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e6e8:	4620      	mov	r0, r4
 801e6ea:	f008 fec0 	bl	802746e <__cxa_guard_release>
 801e6ee:	4a06      	ldr	r2, [pc, #24]	; (801e708 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e6f0:	4909      	ldr	r1, [pc, #36]	; (801e718 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e6f2:	480a      	ldr	r0, [pc, #40]	; (801e71c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e6f4:	f008 fea8 	bl	8027448 <__aeabi_atexit>
 801e6f8:	4b05      	ldr	r3, [pc, #20]	; (801e710 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e6fa:	642b      	str	r3, [r5, #64]	; 0x40
 801e6fc:	4b07      	ldr	r3, [pc, #28]	; (801e71c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e6fe:	646b      	str	r3, [r5, #68]	; 0x44
 801e700:	bd38      	pop	{r3, r4, r5, pc}
 801e702:	bf00      	nop
 801e704:	20014ce8 	.word	0x20014ce8
 801e708:	20000000 	.word	0x20000000
 801e70c:	0801c319 	.word	0x0801c319
 801e710:	200000dc 	.word	0x200000dc
 801e714:	20014cec 	.word	0x20014cec
 801e718:	0801c317 	.word	0x0801c317
 801e71c:	200000e0 	.word	0x200000e0

0801e720 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e720:	b538      	push	{r3, r4, r5, lr}
 801e722:	4c15      	ldr	r4, [pc, #84]	; (801e778 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e724:	7823      	ldrb	r3, [r4, #0]
 801e726:	f3bf 8f5b 	dmb	ish
 801e72a:	07da      	lsls	r2, r3, #31
 801e72c:	4605      	mov	r5, r0
 801e72e:	d40b      	bmi.n	801e748 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e730:	4620      	mov	r0, r4
 801e732:	f008 fe90 	bl	8027456 <__cxa_guard_acquire>
 801e736:	b138      	cbz	r0, 801e748 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e738:	4620      	mov	r0, r4
 801e73a:	f008 fe98 	bl	802746e <__cxa_guard_release>
 801e73e:	4a0f      	ldr	r2, [pc, #60]	; (801e77c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e740:	490f      	ldr	r1, [pc, #60]	; (801e780 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e742:	4810      	ldr	r0, [pc, #64]	; (801e784 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e744:	f008 fe80 	bl	8027448 <__aeabi_atexit>
 801e748:	4c0f      	ldr	r4, [pc, #60]	; (801e788 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e74a:	7823      	ldrb	r3, [r4, #0]
 801e74c:	f3bf 8f5b 	dmb	ish
 801e750:	07db      	lsls	r3, r3, #31
 801e752:	d40b      	bmi.n	801e76c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e754:	4620      	mov	r0, r4
 801e756:	f008 fe7e 	bl	8027456 <__cxa_guard_acquire>
 801e75a:	b138      	cbz	r0, 801e76c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e75c:	4620      	mov	r0, r4
 801e75e:	f008 fe86 	bl	802746e <__cxa_guard_release>
 801e762:	4a06      	ldr	r2, [pc, #24]	; (801e77c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e764:	4909      	ldr	r1, [pc, #36]	; (801e78c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e766:	480a      	ldr	r0, [pc, #40]	; (801e790 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e768:	f008 fe6e 	bl	8027448 <__aeabi_atexit>
 801e76c:	4b05      	ldr	r3, [pc, #20]	; (801e784 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e76e:	63ab      	str	r3, [r5, #56]	; 0x38
 801e770:	4b07      	ldr	r3, [pc, #28]	; (801e790 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e772:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e774:	bd38      	pop	{r3, r4, r5, pc}
 801e776:	bf00      	nop
 801e778:	20014d08 	.word	0x20014d08
 801e77c:	20000000 	.word	0x20000000
 801e780:	0801c31d 	.word	0x0801c31d
 801e784:	200000fc 	.word	0x200000fc
 801e788:	20014d0c 	.word	0x20014d0c
 801e78c:	0801c31b 	.word	0x0801c31b
 801e790:	20000100 	.word	0x20000100

0801e794 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e794:	b510      	push	{r4, lr}
 801e796:	4604      	mov	r4, r0
 801e798:	f7ff ff14 	bl	801e5c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e79c:	4620      	mov	r0, r4
 801e79e:	f7ff ff85 	bl	801e6ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e7a2:	4620      	mov	r0, r4
 801e7a4:	f7ff ff48 	bl	801e638 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e7a8:	4620      	mov	r0, r4
 801e7aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e7ae:	f7ff bfb7 	b.w	801e720 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e7b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e7b4:	b538      	push	{r3, r4, r5, lr}
 801e7b6:	4c15      	ldr	r4, [pc, #84]	; (801e80c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e7b8:	7823      	ldrb	r3, [r4, #0]
 801e7ba:	f3bf 8f5b 	dmb	ish
 801e7be:	07da      	lsls	r2, r3, #31
 801e7c0:	4605      	mov	r5, r0
 801e7c2:	d40b      	bmi.n	801e7dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e7c4:	4620      	mov	r0, r4
 801e7c6:	f008 fe46 	bl	8027456 <__cxa_guard_acquire>
 801e7ca:	b138      	cbz	r0, 801e7dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e7cc:	4620      	mov	r0, r4
 801e7ce:	f008 fe4e 	bl	802746e <__cxa_guard_release>
 801e7d2:	4a0f      	ldr	r2, [pc, #60]	; (801e810 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e7d4:	490f      	ldr	r1, [pc, #60]	; (801e814 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e7d6:	4810      	ldr	r0, [pc, #64]	; (801e818 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e7d8:	f008 fe36 	bl	8027448 <__aeabi_atexit>
 801e7dc:	4c0f      	ldr	r4, [pc, #60]	; (801e81c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e7de:	7823      	ldrb	r3, [r4, #0]
 801e7e0:	f3bf 8f5b 	dmb	ish
 801e7e4:	07db      	lsls	r3, r3, #31
 801e7e6:	d40b      	bmi.n	801e800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e7e8:	4620      	mov	r0, r4
 801e7ea:	f008 fe34 	bl	8027456 <__cxa_guard_acquire>
 801e7ee:	b138      	cbz	r0, 801e800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e7f0:	4620      	mov	r0, r4
 801e7f2:	f008 fe3c 	bl	802746e <__cxa_guard_release>
 801e7f6:	4a06      	ldr	r2, [pc, #24]	; (801e810 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e7f8:	4909      	ldr	r1, [pc, #36]	; (801e820 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e7fa:	480a      	ldr	r0, [pc, #40]	; (801e824 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e7fc:	f008 fe24 	bl	8027448 <__aeabi_atexit>
 801e800:	4b05      	ldr	r3, [pc, #20]	; (801e818 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e802:	662b      	str	r3, [r5, #96]	; 0x60
 801e804:	4b07      	ldr	r3, [pc, #28]	; (801e824 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e806:	666b      	str	r3, [r5, #100]	; 0x64
 801e808:	bd38      	pop	{r3, r4, r5, pc}
 801e80a:	bf00      	nop
 801e80c:	20014cf0 	.word	0x20014cf0
 801e810:	20000000 	.word	0x20000000
 801e814:	0801c309 	.word	0x0801c309
 801e818:	200000e4 	.word	0x200000e4
 801e81c:	20014cf4 	.word	0x20014cf4
 801e820:	0801c307 	.word	0x0801c307
 801e824:	200000e8 	.word	0x200000e8

0801e828 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e828:	b538      	push	{r3, r4, r5, lr}
 801e82a:	4c15      	ldr	r4, [pc, #84]	; (801e880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e82c:	7823      	ldrb	r3, [r4, #0]
 801e82e:	f3bf 8f5b 	dmb	ish
 801e832:	07da      	lsls	r2, r3, #31
 801e834:	4605      	mov	r5, r0
 801e836:	d40b      	bmi.n	801e850 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e838:	4620      	mov	r0, r4
 801e83a:	f008 fe0c 	bl	8027456 <__cxa_guard_acquire>
 801e83e:	b138      	cbz	r0, 801e850 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e840:	4620      	mov	r0, r4
 801e842:	f008 fe14 	bl	802746e <__cxa_guard_release>
 801e846:	4a0f      	ldr	r2, [pc, #60]	; (801e884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e848:	490f      	ldr	r1, [pc, #60]	; (801e888 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e84a:	4810      	ldr	r0, [pc, #64]	; (801e88c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e84c:	f008 fdfc 	bl	8027448 <__aeabi_atexit>
 801e850:	4c0f      	ldr	r4, [pc, #60]	; (801e890 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e852:	7823      	ldrb	r3, [r4, #0]
 801e854:	f3bf 8f5b 	dmb	ish
 801e858:	07db      	lsls	r3, r3, #31
 801e85a:	d40b      	bmi.n	801e874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e85c:	4620      	mov	r0, r4
 801e85e:	f008 fdfa 	bl	8027456 <__cxa_guard_acquire>
 801e862:	b138      	cbz	r0, 801e874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e864:	4620      	mov	r0, r4
 801e866:	f008 fe02 	bl	802746e <__cxa_guard_release>
 801e86a:	4a06      	ldr	r2, [pc, #24]	; (801e884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e86c:	4909      	ldr	r1, [pc, #36]	; (801e894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e86e:	480a      	ldr	r0, [pc, #40]	; (801e898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e870:	f008 fdea 	bl	8027448 <__aeabi_atexit>
 801e874:	4b05      	ldr	r3, [pc, #20]	; (801e88c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e876:	65ab      	str	r3, [r5, #88]	; 0x58
 801e878:	4b07      	ldr	r3, [pc, #28]	; (801e898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e87a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e87c:	bd38      	pop	{r3, r4, r5, pc}
 801e87e:	bf00      	nop
 801e880:	20014cc8 	.word	0x20014cc8
 801e884:	20000000 	.word	0x20000000
 801e888:	0801c30d 	.word	0x0801c30d
 801e88c:	200000bc 	.word	0x200000bc
 801e890:	20014ccc 	.word	0x20014ccc
 801e894:	0801c30b 	.word	0x0801c30b
 801e898:	200000c0 	.word	0x200000c0

0801e89c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e89c:	b510      	push	{r4, lr}
 801e89e:	4604      	mov	r4, r0
 801e8a0:	f7ff ff88 	bl	801e7b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e8a4:	4620      	mov	r0, r4
 801e8a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e8aa:	f7ff bfbd 	b.w	801e828 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e8b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e8b0:	b538      	push	{r3, r4, r5, lr}
 801e8b2:	4c15      	ldr	r4, [pc, #84]	; (801e908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e8b4:	7823      	ldrb	r3, [r4, #0]
 801e8b6:	f3bf 8f5b 	dmb	ish
 801e8ba:	07da      	lsls	r2, r3, #31
 801e8bc:	4605      	mov	r5, r0
 801e8be:	d40b      	bmi.n	801e8d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e8c0:	4620      	mov	r0, r4
 801e8c2:	f008 fdc8 	bl	8027456 <__cxa_guard_acquire>
 801e8c6:	b138      	cbz	r0, 801e8d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e8c8:	4620      	mov	r0, r4
 801e8ca:	f008 fdd0 	bl	802746e <__cxa_guard_release>
 801e8ce:	4a0f      	ldr	r2, [pc, #60]	; (801e90c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e8d0:	490f      	ldr	r1, [pc, #60]	; (801e910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e8d2:	4810      	ldr	r0, [pc, #64]	; (801e914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e8d4:	f008 fdb8 	bl	8027448 <__aeabi_atexit>
 801e8d8:	4c0f      	ldr	r4, [pc, #60]	; (801e918 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e8da:	7823      	ldrb	r3, [r4, #0]
 801e8dc:	f3bf 8f5b 	dmb	ish
 801e8e0:	07db      	lsls	r3, r3, #31
 801e8e2:	d40b      	bmi.n	801e8fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e8e4:	4620      	mov	r0, r4
 801e8e6:	f008 fdb6 	bl	8027456 <__cxa_guard_acquire>
 801e8ea:	b138      	cbz	r0, 801e8fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e8ec:	4620      	mov	r0, r4
 801e8ee:	f008 fdbe 	bl	802746e <__cxa_guard_release>
 801e8f2:	4a06      	ldr	r2, [pc, #24]	; (801e90c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e8f4:	4909      	ldr	r1, [pc, #36]	; (801e91c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e8f6:	480a      	ldr	r0, [pc, #40]	; (801e920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e8f8:	f008 fda6 	bl	8027448 <__aeabi_atexit>
 801e8fc:	4b05      	ldr	r3, [pc, #20]	; (801e914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e8fe:	672b      	str	r3, [r5, #112]	; 0x70
 801e900:	4b07      	ldr	r3, [pc, #28]	; (801e920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e902:	676b      	str	r3, [r5, #116]	; 0x74
 801e904:	bd38      	pop	{r3, r4, r5, pc}
 801e906:	bf00      	nop
 801e908:	20014cc0 	.word	0x20014cc0
 801e90c:	20000000 	.word	0x20000000
 801e910:	0801c301 	.word	0x0801c301
 801e914:	200000b4 	.word	0x200000b4
 801e918:	20014cc4 	.word	0x20014cc4
 801e91c:	0801c2ff 	.word	0x0801c2ff
 801e920:	200000b8 	.word	0x200000b8

0801e924 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e924:	b538      	push	{r3, r4, r5, lr}
 801e926:	4c15      	ldr	r4, [pc, #84]	; (801e97c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e928:	7823      	ldrb	r3, [r4, #0]
 801e92a:	f3bf 8f5b 	dmb	ish
 801e92e:	07da      	lsls	r2, r3, #31
 801e930:	4605      	mov	r5, r0
 801e932:	d40b      	bmi.n	801e94c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e934:	4620      	mov	r0, r4
 801e936:	f008 fd8e 	bl	8027456 <__cxa_guard_acquire>
 801e93a:	b138      	cbz	r0, 801e94c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e93c:	4620      	mov	r0, r4
 801e93e:	f008 fd96 	bl	802746e <__cxa_guard_release>
 801e942:	4a0f      	ldr	r2, [pc, #60]	; (801e980 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e944:	490f      	ldr	r1, [pc, #60]	; (801e984 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e946:	4810      	ldr	r0, [pc, #64]	; (801e988 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e948:	f008 fd7e 	bl	8027448 <__aeabi_atexit>
 801e94c:	4c0f      	ldr	r4, [pc, #60]	; (801e98c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e94e:	7823      	ldrb	r3, [r4, #0]
 801e950:	f3bf 8f5b 	dmb	ish
 801e954:	07db      	lsls	r3, r3, #31
 801e956:	d40b      	bmi.n	801e970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e958:	4620      	mov	r0, r4
 801e95a:	f008 fd7c 	bl	8027456 <__cxa_guard_acquire>
 801e95e:	b138      	cbz	r0, 801e970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e960:	4620      	mov	r0, r4
 801e962:	f008 fd84 	bl	802746e <__cxa_guard_release>
 801e966:	4a06      	ldr	r2, [pc, #24]	; (801e980 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e968:	4909      	ldr	r1, [pc, #36]	; (801e990 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e96a:	480a      	ldr	r0, [pc, #40]	; (801e994 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e96c:	f008 fd6c 	bl	8027448 <__aeabi_atexit>
 801e970:	4b05      	ldr	r3, [pc, #20]	; (801e988 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e972:	66ab      	str	r3, [r5, #104]	; 0x68
 801e974:	4b07      	ldr	r3, [pc, #28]	; (801e994 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e976:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e978:	bd38      	pop	{r3, r4, r5, pc}
 801e97a:	bf00      	nop
 801e97c:	20014cb8 	.word	0x20014cb8
 801e980:	20000000 	.word	0x20000000
 801e984:	0801c305 	.word	0x0801c305
 801e988:	200000ac 	.word	0x200000ac
 801e98c:	20014cbc 	.word	0x20014cbc
 801e990:	0801c303 	.word	0x0801c303
 801e994:	200000b0 	.word	0x200000b0

0801e998 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e998:	b510      	push	{r4, lr}
 801e99a:	4604      	mov	r4, r0
 801e99c:	f7ff ff88 	bl	801e8b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e9a0:	4620      	mov	r0, r4
 801e9a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e9a6:	f7ff bfbd 	b.w	801e924 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e9aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e9aa:	b510      	push	{r4, lr}
 801e9ac:	4604      	mov	r4, r0
 801e9ae:	f7ff fff3 	bl	801e998 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e9b2:	4620      	mov	r0, r4
 801e9b4:	f7ff ff72 	bl	801e89c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e9b8:	4620      	mov	r0, r4
 801e9ba:	f7ff fdf9 	bl	801e5b0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e9be:	4620      	mov	r0, r4
 801e9c0:	f7ff fcfa 	bl	801e3b8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e9c4:	4620      	mov	r0, r4
 801e9c6:	f7ff fd75 	bl	801e4b4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e9ca:	4620      	mov	r0, r4
 801e9cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e9d0:	f7ff bee0 	b.w	801e794 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e9d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e9d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9d8:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801e9dc:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801e9e0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801e9e4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801e9e8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801e9ec:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 801e9f0:	8808      	ldrh	r0, [r1, #0]
 801e9f2:	fb0e 4708 	mla	r7, lr, r8, r4
 801e9f6:	f1be 0f00 	cmp.w	lr, #0
 801e9fa:	eb02 0a07 	add.w	sl, r2, r7
 801e9fe:	db37      	blt.n	801ea70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801ea00:	45f3      	cmp	fp, lr
 801ea02:	dd35      	ble.n	801ea70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801ea04:	2c00      	cmp	r4, #0
 801ea06:	db31      	blt.n	801ea6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801ea08:	45a0      	cmp	r8, r4
 801ea0a:	dd2f      	ble.n	801ea6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801ea0c:	5dd2      	ldrb	r2, [r2, r7]
 801ea0e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801ea12:	1c62      	adds	r2, r4, #1
 801ea14:	d42f      	bmi.n	801ea76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801ea16:	4590      	cmp	r8, r2
 801ea18:	dd2d      	ble.n	801ea76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801ea1a:	b366      	cbz	r6, 801ea76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801ea1c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ea20:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ea24:	f11e 0e01 	adds.w	lr, lr, #1
 801ea28:	d429      	bmi.n	801ea7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801ea2a:	45f3      	cmp	fp, lr
 801ea2c:	dd27      	ble.n	801ea7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801ea2e:	f1bc 0f00 	cmp.w	ip, #0
 801ea32:	f000 80a1 	beq.w	801eb78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 801ea36:	2c00      	cmp	r4, #0
 801ea38:	db1f      	blt.n	801ea7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ea3a:	45a0      	cmp	r8, r4
 801ea3c:	dd1d      	ble.n	801ea7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ea3e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801ea42:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801ea46:	3401      	adds	r4, #1
 801ea48:	d41c      	bmi.n	801ea84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801ea4a:	45a0      	cmp	r8, r4
 801ea4c:	dd1a      	ble.n	801ea84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801ea4e:	b1de      	cbz	r6, 801ea88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 801ea50:	44d0      	add	r8, sl
 801ea52:	f898 2001 	ldrb.w	r2, [r8, #1]
 801ea56:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ea5a:	2e0f      	cmp	r6, #15
 801ea5c:	d915      	bls.n	801ea8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801ea5e:	4b49      	ldr	r3, [pc, #292]	; (801eb84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 801ea60:	4a49      	ldr	r2, [pc, #292]	; (801eb88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801ea62:	484a      	ldr	r0, [pc, #296]	; (801eb8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801ea64:	f240 11db 	movw	r1, #475	; 0x1db
 801ea68:	f008 fd22 	bl	80274b0 <__assert_func>
 801ea6c:	4681      	mov	r9, r0
 801ea6e:	e7d0      	b.n	801ea12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 801ea70:	4607      	mov	r7, r0
 801ea72:	4681      	mov	r9, r0
 801ea74:	e7d6      	b.n	801ea24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801ea76:	4607      	mov	r7, r0
 801ea78:	e7d4      	b.n	801ea24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801ea7a:	4686      	mov	lr, r0
 801ea7c:	e7e3      	b.n	801ea46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801ea7e:	4603      	mov	r3, r0
 801ea80:	4686      	mov	lr, r0
 801ea82:	e7ea      	b.n	801ea5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801ea84:	4603      	mov	r3, r0
 801ea86:	e7e8      	b.n	801ea5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801ea88:	4603      	mov	r3, r0
 801ea8a:	f1bc 0f0f 	cmp.w	ip, #15
 801ea8e:	d8e6      	bhi.n	801ea5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801ea90:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801ea94:	fb16 f80c 	smulbb	r8, r6, ip
 801ea98:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea9c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801eaa0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801eaa4:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801eaa8:	ea44 0909 	orr.w	r9, r4, r9
 801eaac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eab0:	f1cc 0410 	rsb	r4, ip, #16
 801eab4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801eab8:	1ba4      	subs	r4, r4, r6
 801eaba:	041a      	lsls	r2, r3, #16
 801eabc:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801eac0:	ea4a 0707 	orr.w	r7, sl, r7
 801eac4:	4377      	muls	r7, r6
 801eac6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eaca:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801eace:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ead2:	fb04 7409 	mla	r4, r4, r9, r7
 801ead6:	4313      	orrs	r3, r2
 801ead8:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801eadc:	fb08 4303 	mla	r3, r8, r3, r4
 801eae0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eae4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801eae8:	4322      	orrs	r2, r4
 801eaea:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801eaee:	fb0c 3202 	mla	r2, ip, r2, r3
 801eaf2:	0d53      	lsrs	r3, r2, #21
 801eaf4:	0952      	lsrs	r2, r2, #5
 801eaf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eafa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eafe:	431a      	orrs	r2, r3
 801eb00:	b293      	uxth	r3, r2
 801eb02:	b2af      	uxth	r7, r5
 801eb04:	1202      	asrs	r2, r0, #8
 801eb06:	43ed      	mvns	r5, r5
 801eb08:	b2ed      	uxtb	r5, r5
 801eb0a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eb0e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801eb12:	fb12 f205 	smulbb	r2, r2, r5
 801eb16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801eb1a:	fb0c 2c07 	mla	ip, ip, r7, r2
 801eb1e:	00dc      	lsls	r4, r3, #3
 801eb20:	10da      	asrs	r2, r3, #3
 801eb22:	10c6      	asrs	r6, r0, #3
 801eb24:	00c3      	lsls	r3, r0, #3
 801eb26:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eb2a:	b2db      	uxtb	r3, r3
 801eb2c:	fb16 f605 	smulbb	r6, r6, r5
 801eb30:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eb34:	b2e4      	uxtb	r4, r4
 801eb36:	fb13 f305 	smulbb	r3, r3, r5
 801eb3a:	fa1f fc8c 	uxth.w	ip, ip
 801eb3e:	fb02 6207 	mla	r2, r2, r7, r6
 801eb42:	fb04 3307 	mla	r3, r4, r7, r3
 801eb46:	b296      	uxth	r6, r2
 801eb48:	b29a      	uxth	r2, r3
 801eb4a:	f10c 0301 	add.w	r3, ip, #1
 801eb4e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801eb52:	1c53      	adds	r3, r2, #1
 801eb54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eb58:	1c72      	adds	r2, r6, #1
 801eb5a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801eb5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801eb62:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eb66:	0952      	lsrs	r2, r2, #5
 801eb68:	ea43 030c 	orr.w	r3, r3, ip
 801eb6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb70:	4313      	orrs	r3, r2
 801eb72:	800b      	strh	r3, [r1, #0]
 801eb74:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb78:	2e0f      	cmp	r6, #15
 801eb7a:	f63f af70 	bhi.w	801ea5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801eb7e:	4603      	mov	r3, r0
 801eb80:	4686      	mov	lr, r0
 801eb82:	e785      	b.n	801ea90 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801eb84:	0802d9a3 	.word	0x0802d9a3
 801eb88:	0802df7b 	.word	0x0802df7b
 801eb8c:	0802d970 	.word	0x0802d970

0801eb90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb94:	ed2d 8b08 	vpush	{d8-d11}
 801eb98:	b099      	sub	sp, #100	; 0x64
 801eb9a:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801eb9e:	9215      	str	r2, [sp, #84]	; 0x54
 801eba0:	9309      	str	r3, [sp, #36]	; 0x24
 801eba2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801eba4:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801eba8:	930d      	str	r3, [sp, #52]	; 0x34
 801ebaa:	910c      	str	r1, [sp, #48]	; 0x30
 801ebac:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801ebb0:	9016      	str	r0, [sp, #88]	; 0x58
 801ebb2:	6850      	ldr	r0, [r2, #4]
 801ebb4:	6812      	ldr	r2, [r2, #0]
 801ebb6:	fb00 1303 	mla	r3, r0, r3, r1
 801ebba:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ebbe:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ebc0:	681b      	ldr	r3, [r3, #0]
 801ebc2:	930b      	str	r3, [sp, #44]	; 0x2c
 801ebc4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ebc6:	685e      	ldr	r6, [r3, #4]
 801ebc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ebca:	43db      	mvns	r3, r3
 801ebcc:	b2db      	uxtb	r3, r3
 801ebce:	eeb0 aa40 	vmov.f32	s20, s0
 801ebd2:	eef0 9a60 	vmov.f32	s19, s1
 801ebd6:	eeb0 9a41 	vmov.f32	s18, s2
 801ebda:	eeb0 8a62 	vmov.f32	s16, s5
 801ebde:	eef0 8a43 	vmov.f32	s17, s6
 801ebe2:	eef0 ba44 	vmov.f32	s23, s8
 801ebe6:	eeb0 ba64 	vmov.f32	s22, s9
 801ebea:	eef0 aa45 	vmov.f32	s21, s10
 801ebee:	3604      	adds	r6, #4
 801ebf0:	930a      	str	r3, [sp, #40]	; 0x28
 801ebf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ebf4:	2b00      	cmp	r3, #0
 801ebf6:	dc03      	bgt.n	801ec00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ebf8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801ebfa:	2b00      	cmp	r3, #0
 801ebfc:	f340 8225 	ble.w	801f04a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801ec00:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ec02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec0a:	1e48      	subs	r0, r1, #1
 801ec0c:	1e57      	subs	r7, r2, #1
 801ec0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec10:	2b00      	cmp	r3, #0
 801ec12:	f340 80e3 	ble.w	801eddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 801ec16:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ec1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ec1e:	d406      	bmi.n	801ec2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ec20:	4584      	cmp	ip, r0
 801ec22:	da04      	bge.n	801ec2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ec24:	2b00      	cmp	r3, #0
 801ec26:	db02      	blt.n	801ec2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ec28:	42bb      	cmp	r3, r7
 801ec2a:	f2c0 80d8 	blt.w	801edde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801ec2e:	f11c 0c01 	adds.w	ip, ip, #1
 801ec32:	f100 80c9 	bmi.w	801edc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ec36:	4561      	cmp	r1, ip
 801ec38:	f2c0 80c6 	blt.w	801edc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ec3c:	3301      	adds	r3, #1
 801ec3e:	f100 80c3 	bmi.w	801edc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ec42:	429a      	cmp	r2, r3
 801ec44:	f2c0 80c0 	blt.w	801edc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ec48:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ec4c:	4647      	mov	r7, r8
 801ec4e:	f1bb 0f00 	cmp.w	fp, #0
 801ec52:	f340 80e3 	ble.w	801ee1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ec56:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801ec58:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ec5a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ec5e:	689b      	ldr	r3, [r3, #8]
 801ec60:	ea5f 422a 	movs.w	r2, sl, asr #16
 801ec64:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ec68:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801ec6c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ec70:	f100 8121 	bmi.w	801eeb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801ec74:	f103 39ff 	add.w	r9, r3, #4294967295
 801ec78:	454a      	cmp	r2, r9
 801ec7a:	f280 811c 	bge.w	801eeb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801ec7e:	f1bc 0f00 	cmp.w	ip, #0
 801ec82:	f2c0 8118 	blt.w	801eeb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801ec86:	f10e 39ff 	add.w	r9, lr, #4294967295
 801ec8a:	45cc      	cmp	ip, r9
 801ec8c:	f280 8113 	bge.w	801eeb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801ec90:	b21b      	sxth	r3, r3
 801ec92:	fb0c 2203 	mla	r2, ip, r3, r2
 801ec96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ec98:	eb04 0902 	add.w	r9, r4, r2
 801ec9c:	5ca2      	ldrb	r2, [r4, r2]
 801ec9e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801eca2:	2800      	cmp	r0, #0
 801eca4:	f000 80fe 	beq.w	801eea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801eca8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ecac:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ecb0:	9211      	str	r2, [sp, #68]	; 0x44
 801ecb2:	b151      	cbz	r1, 801ecca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801ecb4:	eb09 0203 	add.w	r2, r9, r3
 801ecb8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ecbc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ecc0:	930f      	str	r3, [sp, #60]	; 0x3c
 801ecc2:	7853      	ldrb	r3, [r2, #1]
 801ecc4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ecc8:	9312      	str	r3, [sp, #72]	; 0x48
 801ecca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801eccc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ecce:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ecd2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ecd6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ecda:	ea4c 0c03 	orr.w	ip, ip, r3
 801ecde:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ece0:	041b      	lsls	r3, r3, #16
 801ece2:	fb10 f201 	smulbb	r2, r0, r1
 801ece6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ecea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ecee:	10d2      	asrs	r2, r2, #3
 801ecf0:	4323      	orrs	r3, r4
 801ecf2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ecf6:	4353      	muls	r3, r2
 801ecf8:	fb09 330c 	mla	r3, r9, ip, r3
 801ecfc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ed00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ed04:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ed08:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ed0c:	f1c1 0c10 	rsb	ip, r1, #16
 801ed10:	ebac 0c00 	sub.w	ip, ip, r0
 801ed14:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ed18:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ed1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ed1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ed20:	0418      	lsls	r0, r3, #16
 801ed22:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ed26:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ed2a:	4318      	orrs	r0, r3
 801ed2c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ed30:	fb02 c200 	mla	r2, r2, r0, ip
 801ed34:	0d53      	lsrs	r3, r2, #21
 801ed36:	0952      	lsrs	r2, r2, #5
 801ed38:	8838      	ldrh	r0, [r7, #0]
 801ed3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ed42:	431a      	orrs	r2, r3
 801ed44:	b292      	uxth	r2, r2
 801ed46:	1201      	asrs	r1, r0, #8
 801ed48:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ed4c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ed50:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ed54:	fb11 f104 	smulbb	r1, r1, r4
 801ed58:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ed5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ed60:	00c0      	lsls	r0, r0, #3
 801ed62:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ed66:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ed6a:	10d1      	asrs	r1, r2, #3
 801ed6c:	b2c0      	uxtb	r0, r0
 801ed6e:	00d2      	lsls	r2, r2, #3
 801ed70:	b2d2      	uxtb	r2, r2
 801ed72:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ed76:	fb1e fe04 	smulbb	lr, lr, r4
 801ed7a:	fb10 f004 	smulbb	r0, r0, r4
 801ed7e:	fa1f fc8c 	uxth.w	ip, ip
 801ed82:	fb01 e103 	mla	r1, r1, r3, lr
 801ed86:	fb02 0303 	mla	r3, r2, r3, r0
 801ed8a:	b29a      	uxth	r2, r3
 801ed8c:	f10c 0301 	add.w	r3, ip, #1
 801ed90:	b289      	uxth	r1, r1
 801ed92:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ed96:	1c53      	adds	r3, r2, #1
 801ed98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed9c:	1c4a      	adds	r2, r1, #1
 801ed9e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801eda2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801eda6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801edaa:	0949      	lsrs	r1, r1, #5
 801edac:	ea43 030c 	orr.w	r3, r3, ip
 801edb0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801edb4:	430b      	orrs	r3, r1
 801edb6:	803b      	strh	r3, [r7, #0]
 801edb8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801edba:	449a      	add	sl, r3
 801edbc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801edbe:	3702      	adds	r7, #2
 801edc0:	441d      	add	r5, r3
 801edc2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801edc6:	e742      	b.n	801ec4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801edc8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801edca:	449a      	add	sl, r3
 801edcc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801edce:	441d      	add	r5, r3
 801edd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801edd2:	3b01      	subs	r3, #1
 801edd4:	9309      	str	r3, [sp, #36]	; 0x24
 801edd6:	f108 0802 	add.w	r8, r8, #2
 801edda:	e718      	b.n	801ec0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801eddc:	d023      	beq.n	801ee26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801edde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ede0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801ede2:	3b01      	subs	r3, #1
 801ede4:	fb00 a003 	mla	r0, r0, r3, sl
 801ede8:	1400      	asrs	r0, r0, #16
 801edea:	f53f af2d 	bmi.w	801ec48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801edee:	3901      	subs	r1, #1
 801edf0:	4288      	cmp	r0, r1
 801edf2:	f6bf af29 	bge.w	801ec48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801edf6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801edf8:	fb01 5303 	mla	r3, r1, r3, r5
 801edfc:	141b      	asrs	r3, r3, #16
 801edfe:	f53f af23 	bmi.w	801ec48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801ee02:	3a01      	subs	r2, #1
 801ee04:	4293      	cmp	r3, r2
 801ee06:	f6bf af1f 	bge.w	801ec48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801ee0a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ee0e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ee12:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ee16:	f1be 0f00 	cmp.w	lr, #0
 801ee1a:	dc6c      	bgt.n	801eef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 801ee1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee1e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ee22:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ee26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee28:	2b00      	cmp	r3, #0
 801ee2a:	f340 810e 	ble.w	801f04a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801ee2e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ee32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ee36:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ee3a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee3c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ee40:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ee44:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ee48:	eef0 6a48 	vmov.f32	s13, s16
 801ee4c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ee50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee54:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ee58:	ee16 aa90 	vmov	sl, s13
 801ee5c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ee60:	eef0 6a68 	vmov.f32	s13, s17
 801ee64:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ee68:	ee18 2a10 	vmov	r2, s16
 801ee6c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ee70:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee74:	ee18 2a90 	vmov	r2, s17
 801ee78:	932d      	str	r3, [sp, #180]	; 0xb4
 801ee7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee80:	932e      	str	r3, [sp, #184]	; 0xb8
 801ee82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee84:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ee86:	3b01      	subs	r3, #1
 801ee88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee8c:	930c      	str	r3, [sp, #48]	; 0x30
 801ee8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee90:	bf08      	it	eq
 801ee92:	4613      	moveq	r3, r2
 801ee94:	ee16 5a90 	vmov	r5, s13
 801ee98:	9309      	str	r3, [sp, #36]	; 0x24
 801ee9a:	eef0 8a67 	vmov.f32	s17, s15
 801ee9e:	eeb0 8a47 	vmov.f32	s16, s14
 801eea2:	e6a6      	b.n	801ebf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801eea4:	2900      	cmp	r1, #0
 801eea6:	f43f af10 	beq.w	801ecca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801eeaa:	f819 3003 	ldrb.w	r3, [r9, r3]
 801eeae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eeb2:	930f      	str	r3, [sp, #60]	; 0x3c
 801eeb4:	e709      	b.n	801ecca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801eeb6:	f112 0901 	adds.w	r9, r2, #1
 801eeba:	f53f af7d 	bmi.w	801edb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eebe:	454b      	cmp	r3, r9
 801eec0:	f6ff af7a 	blt.w	801edb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eec4:	f11c 0901 	adds.w	r9, ip, #1
 801eec8:	f53f af76 	bmi.w	801edb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eecc:	45ce      	cmp	lr, r9
 801eece:	f6ff af73 	blt.w	801edb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eed2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801eed4:	9202      	str	r2, [sp, #8]
 801eed6:	b21b      	sxth	r3, r3
 801eed8:	fa0f f28e 	sxth.w	r2, lr
 801eedc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801eee0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801eee4:	9201      	str	r2, [sp, #4]
 801eee6:	9300      	str	r3, [sp, #0]
 801eee8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eeea:	9816      	ldr	r0, [sp, #88]	; 0x58
 801eeec:	4633      	mov	r3, r6
 801eeee:	4639      	mov	r1, r7
 801eef0:	f7ff fd70 	bl	801e9d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801eef4:	e760      	b.n	801edb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eef6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801eef8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eefa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801eefe:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ef02:	1429      	asrs	r1, r5, #16
 801ef04:	fb03 2101 	mla	r1, r3, r1, r2
 801ef08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ef0a:	440a      	add	r2, r1
 801ef0c:	5c61      	ldrb	r1, [r4, r1]
 801ef0e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ef12:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ef16:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ef1a:	f1bc 0f00 	cmp.w	ip, #0
 801ef1e:	f000 808c 	beq.w	801f03a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ef22:	7857      	ldrb	r7, [r2, #1]
 801ef24:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ef28:	9413      	str	r4, [sp, #76]	; 0x4c
 801ef2a:	b140      	cbz	r0, 801ef3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ef2c:	18d7      	adds	r7, r2, r3
 801ef2e:	5cd3      	ldrb	r3, [r2, r3]
 801ef30:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ef34:	9310      	str	r3, [sp, #64]	; 0x40
 801ef36:	787b      	ldrb	r3, [r7, #1]
 801ef38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ef3c:	9314      	str	r3, [sp, #80]	; 0x50
 801ef3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ef40:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ef42:	fb1c f200 	smulbb	r2, ip, r0
 801ef46:	041f      	lsls	r7, r3, #16
 801ef48:	10d2      	asrs	r2, r2, #3
 801ef4a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef4e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ef52:	431f      	orrs	r7, r3
 801ef54:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ef58:	9317      	str	r3, [sp, #92]	; 0x5c
 801ef5a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ef5c:	041b      	lsls	r3, r3, #16
 801ef5e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ef62:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef66:	ea43 030b 	orr.w	r3, r3, fp
 801ef6a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ef6c:	4353      	muls	r3, r2
 801ef6e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ef72:	fb04 3707 	mla	r7, r4, r7, r3
 801ef76:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ef7a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ef7e:	ea43 0b01 	orr.w	fp, r3, r1
 801ef82:	f1c0 0110 	rsb	r1, r0, #16
 801ef86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef88:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef8a:	eba1 0c0c 	sub.w	ip, r1, ip
 801ef8e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef92:	fb0c 770b 	mla	r7, ip, fp, r7
 801ef96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef9a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ef9e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801efa2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801efa6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801efaa:	fb02 770c 	mla	r7, r2, ip, r7
 801efae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801efb0:	0d79      	lsrs	r1, r7, #21
 801efb2:	097f      	lsrs	r7, r7, #5
 801efb4:	8812      	ldrh	r2, [r2, #0]
 801efb6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801efba:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801efbe:	430f      	orrs	r7, r1
 801efc0:	b2bb      	uxth	r3, r7
 801efc2:	1211      	asrs	r1, r2, #8
 801efc4:	1218      	asrs	r0, r3, #8
 801efc6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801efca:	fb11 f104 	smulbb	r1, r1, r4
 801efce:	10d7      	asrs	r7, r2, #3
 801efd0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801efd4:	00d2      	lsls	r2, r2, #3
 801efd6:	fb00 1009 	mla	r0, r0, r9, r1
 801efda:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801efde:	10d9      	asrs	r1, r3, #3
 801efe0:	b2d2      	uxtb	r2, r2
 801efe2:	00db      	lsls	r3, r3, #3
 801efe4:	fb17 f704 	smulbb	r7, r7, r4
 801efe8:	fb12 f204 	smulbb	r2, r2, r4
 801efec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eff0:	b2db      	uxtb	r3, r3
 801eff2:	b280      	uxth	r0, r0
 801eff4:	fb01 7109 	mla	r1, r1, r9, r7
 801eff8:	fb03 2309 	mla	r3, r3, r9, r2
 801effc:	b29b      	uxth	r3, r3
 801effe:	b289      	uxth	r1, r1
 801f000:	1c42      	adds	r2, r0, #1
 801f002:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f006:	1c4f      	adds	r7, r1, #1
 801f008:	1c5a      	adds	r2, r3, #1
 801f00a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f00e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f012:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f016:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f01a:	0949      	lsrs	r1, r1, #5
 801f01c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f01e:	4310      	orrs	r0, r2
 801f020:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f024:	4308      	orrs	r0, r1
 801f026:	f823 0b02 	strh.w	r0, [r3], #2
 801f02a:	930e      	str	r3, [sp, #56]	; 0x38
 801f02c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801f02e:	449a      	add	sl, r3
 801f030:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f032:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f036:	441d      	add	r5, r3
 801f038:	e6ed      	b.n	801ee16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801f03a:	2800      	cmp	r0, #0
 801f03c:	f43f af7f 	beq.w	801ef3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f040:	5cd3      	ldrb	r3, [r2, r3]
 801f042:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f046:	9310      	str	r3, [sp, #64]	; 0x40
 801f048:	e779      	b.n	801ef3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f04a:	b019      	add	sp, #100	; 0x64
 801f04c:	ecbd 8b08 	vpop	{d8-d11}
 801f050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f058:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801f05c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f060:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f064:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 801f068:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f06c:	8808      	ldrh	r0, [r1, #0]
 801f06e:	fb06 570e 	mla	r7, r6, lr, r5
 801f072:	2e00      	cmp	r6, #0
 801f074:	eb02 0807 	add.w	r8, r2, r7
 801f078:	db38      	blt.n	801f0ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801f07a:	45b1      	cmp	r9, r6
 801f07c:	dd36      	ble.n	801f0ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801f07e:	2d00      	cmp	r5, #0
 801f080:	db32      	blt.n	801f0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801f082:	45ae      	cmp	lr, r5
 801f084:	dd30      	ble.n	801f0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801f086:	5dd2      	ldrb	r2, [r2, r7]
 801f088:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f08c:	1c6a      	adds	r2, r5, #1
 801f08e:	d430      	bmi.n	801f0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801f090:	4596      	cmp	lr, r2
 801f092:	dd2e      	ble.n	801f0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801f094:	b36c      	cbz	r4, 801f0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801f096:	f898 2001 	ldrb.w	r2, [r8, #1]
 801f09a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f09e:	3601      	adds	r6, #1
 801f0a0:	d42b      	bmi.n	801f0fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801f0a2:	45b1      	cmp	r9, r6
 801f0a4:	dd29      	ble.n	801f0fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801f0a6:	f1bc 0f00 	cmp.w	ip, #0
 801f0aa:	d028      	beq.n	801f0fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801f0ac:	2d00      	cmp	r5, #0
 801f0ae:	db22      	blt.n	801f0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801f0b0:	45ae      	cmp	lr, r5
 801f0b2:	dd20      	ble.n	801f0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801f0b4:	f818 600e 	ldrb.w	r6, [r8, lr]
 801f0b8:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801f0bc:	3501      	adds	r5, #1
 801f0be:	d407      	bmi.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801f0c0:	45ae      	cmp	lr, r5
 801f0c2:	dd05      	ble.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801f0c4:	b134      	cbz	r4, 801f0d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f0c6:	44c6      	add	lr, r8
 801f0c8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f0cc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f0d0:	2c0f      	cmp	r4, #15
 801f0d2:	d802      	bhi.n	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801f0d4:	f1bc 0f0f 	cmp.w	ip, #15
 801f0d8:	d914      	bls.n	801f104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801f0da:	4b26      	ldr	r3, [pc, #152]	; (801f174 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801f0dc:	4a26      	ldr	r2, [pc, #152]	; (801f178 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801f0de:	4827      	ldr	r0, [pc, #156]	; (801f17c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801f0e0:	f240 11db 	movw	r1, #475	; 0x1db
 801f0e4:	f008 f9e4 	bl	80274b0 <__assert_func>
 801f0e8:	4607      	mov	r7, r0
 801f0ea:	e7cf      	b.n	801f08c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801f0ec:	4602      	mov	r2, r0
 801f0ee:	4607      	mov	r7, r0
 801f0f0:	e7d5      	b.n	801f09e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801f0f2:	4602      	mov	r2, r0
 801f0f4:	e7d3      	b.n	801f09e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801f0f6:	4606      	mov	r6, r0
 801f0f8:	e7e0      	b.n	801f0bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801f0fa:	4606      	mov	r6, r0
 801f0fc:	e7e8      	b.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801f0fe:	2c0f      	cmp	r4, #15
 801f100:	d8eb      	bhi.n	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801f102:	4606      	mov	r6, r0
 801f104:	043d      	lsls	r5, r7, #16
 801f106:	fb14 f30c 	smulbb	r3, r4, ip
 801f10a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801f10e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801f112:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f116:	10db      	asrs	r3, r3, #3
 801f118:	432f      	orrs	r7, r5
 801f11a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f11e:	f1cc 0510 	rsb	r5, ip, #16
 801f122:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f126:	1b2d      	subs	r5, r5, r4
 801f128:	ea4e 0202 	orr.w	r2, lr, r2
 801f12c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801f130:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801f134:	4354      	muls	r4, r2
 801f136:	fb05 4507 	mla	r5, r5, r7, r4
 801f13a:	0404      	lsls	r4, r0, #16
 801f13c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f140:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f144:	4320      	orrs	r0, r4
 801f146:	fb03 5400 	mla	r4, r3, r0, r5
 801f14a:	0430      	lsls	r0, r6, #16
 801f14c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f150:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801f154:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f158:	4330      	orrs	r0, r6
 801f15a:	fb03 4000 	mla	r0, r3, r0, r4
 801f15e:	0d43      	lsrs	r3, r0, #21
 801f160:	0940      	lsrs	r0, r0, #5
 801f162:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f166:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f16a:	4318      	orrs	r0, r3
 801f16c:	8008      	strh	r0, [r1, #0]
 801f16e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f172:	bf00      	nop
 801f174:	0802d9a3 	.word	0x0802d9a3
 801f178:	0802df7b 	.word	0x0802df7b
 801f17c:	0802d970 	.word	0x0802d970

0801f180 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f184:	ed2d 8b0a 	vpush	{d8-d12}
 801f188:	b093      	sub	sp, #76	; 0x4c
 801f18a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801f18e:	920f      	str	r2, [sp, #60]	; 0x3c
 801f190:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801f192:	9108      	str	r1, [sp, #32]
 801f194:	9306      	str	r3, [sp, #24]
 801f196:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801f19a:	9010      	str	r0, [sp, #64]	; 0x40
 801f19c:	6850      	ldr	r0, [r2, #4]
 801f19e:	6812      	ldr	r2, [r2, #0]
 801f1a0:	fb00 1303 	mla	r3, r0, r3, r1
 801f1a4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f1a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f1aa:	681b      	ldr	r3, [r3, #0]
 801f1ac:	9307      	str	r3, [sp, #28]
 801f1ae:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f1b0:	685f      	ldr	r7, [r3, #4]
 801f1b2:	eeb0 aa40 	vmov.f32	s20, s0
 801f1b6:	eef0 9a60 	vmov.f32	s19, s1
 801f1ba:	eeb0 9a41 	vmov.f32	s18, s2
 801f1be:	eeb0 8a62 	vmov.f32	s16, s5
 801f1c2:	eef0 8a43 	vmov.f32	s17, s6
 801f1c6:	eeb0 ca44 	vmov.f32	s24, s8
 801f1ca:	eef0 ba64 	vmov.f32	s23, s9
 801f1ce:	eeb0 ba45 	vmov.f32	s22, s10
 801f1d2:	3704      	adds	r7, #4
 801f1d4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801f1d8:	9b08      	ldr	r3, [sp, #32]
 801f1da:	2b00      	cmp	r3, #0
 801f1dc:	dc03      	bgt.n	801f1e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f1de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f1e0:	2b00      	cmp	r3, #0
 801f1e2:	f340 81b2 	ble.w	801f54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801f1e6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f1e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1f0:	1e48      	subs	r0, r1, #1
 801f1f2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f1f6:	9b06      	ldr	r3, [sp, #24]
 801f1f8:	2b00      	cmp	r3, #0
 801f1fa:	f340 80a9 	ble.w	801f350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801f1fe:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f202:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f206:	d406      	bmi.n	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f208:	4586      	cmp	lr, r0
 801f20a:	da04      	bge.n	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f20c:	2b00      	cmp	r3, #0
 801f20e:	db02      	blt.n	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f210:	4563      	cmp	r3, ip
 801f212:	f2c0 809e 	blt.w	801f352 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f216:	f11e 0e01 	adds.w	lr, lr, #1
 801f21a:	f100 808f 	bmi.w	801f33c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801f21e:	4571      	cmp	r1, lr
 801f220:	f2c0 808c 	blt.w	801f33c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801f224:	3301      	adds	r3, #1
 801f226:	f100 8089 	bmi.w	801f33c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801f22a:	429a      	cmp	r2, r3
 801f22c:	f2c0 8086 	blt.w	801f33c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801f230:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f234:	46c8      	mov	r8, r9
 801f236:	f1bb 0f00 	cmp.w	fp, #0
 801f23a:	f340 80a6 	ble.w	801f38a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801f23e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801f240:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f242:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f246:	689b      	ldr	r3, [r3, #8]
 801f248:	1422      	asrs	r2, r4, #16
 801f24a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f24e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f252:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f256:	f100 80e3 	bmi.w	801f420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801f25a:	f103 3aff 	add.w	sl, r3, #4294967295
 801f25e:	4552      	cmp	r2, sl
 801f260:	f280 80de 	bge.w	801f420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801f264:	f1bc 0f00 	cmp.w	ip, #0
 801f268:	f2c0 80da 	blt.w	801f420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801f26c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f270:	45d4      	cmp	ip, sl
 801f272:	f280 80d5 	bge.w	801f420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801f276:	b21b      	sxth	r3, r3
 801f278:	fb0c 2203 	mla	r2, ip, r3, r2
 801f27c:	9d07      	ldr	r5, [sp, #28]
 801f27e:	eb05 0a02 	add.w	sl, r5, r2
 801f282:	5caa      	ldrb	r2, [r5, r2]
 801f284:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f288:	2800      	cmp	r0, #0
 801f28a:	f000 80c0 	beq.w	801f40e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801f28e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f292:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f296:	920b      	str	r2, [sp, #44]	; 0x2c
 801f298:	b151      	cbz	r1, 801f2b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801f29a:	eb0a 0203 	add.w	r2, sl, r3
 801f29e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f2a2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f2a6:	9309      	str	r3, [sp, #36]	; 0x24
 801f2a8:	7853      	ldrb	r3, [r2, #1]
 801f2aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f2ae:	930c      	str	r3, [sp, #48]	; 0x30
 801f2b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f2b4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f2b8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f2bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f2c0:	ea4c 0c03 	orr.w	ip, ip, r3
 801f2c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f2c6:	041b      	lsls	r3, r3, #16
 801f2c8:	fb10 f201 	smulbb	r2, r0, r1
 801f2cc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f2d0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f2d4:	10d2      	asrs	r2, r2, #3
 801f2d6:	432b      	orrs	r3, r5
 801f2d8:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f2dc:	4353      	muls	r3, r2
 801f2de:	fb0a 330c 	mla	r3, sl, ip, r3
 801f2e2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f2e6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f2ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f2ee:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f2f2:	f1c1 0c10 	rsb	ip, r1, #16
 801f2f6:	ebac 0c00 	sub.w	ip, ip, r0
 801f2fa:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f2fe:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f302:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f304:	0418      	lsls	r0, r3, #16
 801f306:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f30a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f30e:	4318      	orrs	r0, r3
 801f310:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f314:	fb02 c200 	mla	r2, r2, r0, ip
 801f318:	0d53      	lsrs	r3, r2, #21
 801f31a:	0952      	lsrs	r2, r2, #5
 801f31c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f320:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f324:	431a      	orrs	r2, r3
 801f326:	f8a8 2000 	strh.w	r2, [r8]
 801f32a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f32c:	441c      	add	r4, r3
 801f32e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f330:	f108 0802 	add.w	r8, r8, #2
 801f334:	441e      	add	r6, r3
 801f336:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f33a:	e77c      	b.n	801f236 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f33c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f33e:	441c      	add	r4, r3
 801f340:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f342:	441e      	add	r6, r3
 801f344:	9b06      	ldr	r3, [sp, #24]
 801f346:	3b01      	subs	r3, #1
 801f348:	9306      	str	r3, [sp, #24]
 801f34a:	f109 0902 	add.w	r9, r9, #2
 801f34e:	e752      	b.n	801f1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f350:	d020      	beq.n	801f394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f352:	9b06      	ldr	r3, [sp, #24]
 801f354:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801f356:	3b01      	subs	r3, #1
 801f358:	fb00 4003 	mla	r0, r0, r3, r4
 801f35c:	1400      	asrs	r0, r0, #16
 801f35e:	f53f af67 	bmi.w	801f230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801f362:	3901      	subs	r1, #1
 801f364:	4288      	cmp	r0, r1
 801f366:	f6bf af63 	bge.w	801f230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801f36a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f36c:	fb01 6303 	mla	r3, r1, r3, r6
 801f370:	141b      	asrs	r3, r3, #16
 801f372:	f53f af5d 	bmi.w	801f230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801f376:	3a01      	subs	r2, #1
 801f378:	4293      	cmp	r3, r2
 801f37a:	f6bf af59 	bge.w	801f230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801f37e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f382:	46ca      	mov	sl, r9
 801f384:	f1b8 0f00 	cmp.w	r8, #0
 801f388:	dc67      	bgt.n	801f45a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f38a:	9b06      	ldr	r3, [sp, #24]
 801f38c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f390:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f394:	9b08      	ldr	r3, [sp, #32]
 801f396:	2b00      	cmp	r3, #0
 801f398:	f340 80d7 	ble.w	801f54a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801f39c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801f3a0:	ee79 9aab 	vadd.f32	s19, s19, s23
 801f3a4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801f3a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f3aa:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801f3ae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801f3b2:	eef0 6a48 	vmov.f32	s13, s16
 801f3b6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f3ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3be:	ee37 8a48 	vsub.f32	s16, s14, s16
 801f3c2:	ee16 4a90 	vmov	r4, s13
 801f3c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801f3ca:	eef0 6a68 	vmov.f32	s13, s17
 801f3ce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f3d2:	ee18 2a10 	vmov	r2, s16
 801f3d6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801f3da:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3de:	ee18 2a90 	vmov	r2, s17
 801f3e2:	9329      	str	r3, [sp, #164]	; 0xa4
 801f3e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f3e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3ea:	932a      	str	r3, [sp, #168]	; 0xa8
 801f3ec:	9b08      	ldr	r3, [sp, #32]
 801f3ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f3f0:	3b01      	subs	r3, #1
 801f3f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3f6:	9308      	str	r3, [sp, #32]
 801f3f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f3fa:	bf08      	it	eq
 801f3fc:	4613      	moveq	r3, r2
 801f3fe:	ee16 6a90 	vmov	r6, s13
 801f402:	9306      	str	r3, [sp, #24]
 801f404:	eef0 8a67 	vmov.f32	s17, s15
 801f408:	eeb0 8a47 	vmov.f32	s16, s14
 801f40c:	e6e4      	b.n	801f1d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f40e:	2900      	cmp	r1, #0
 801f410:	f43f af4e 	beq.w	801f2b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801f414:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f418:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f41c:	9309      	str	r3, [sp, #36]	; 0x24
 801f41e:	e747      	b.n	801f2b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801f420:	f112 0a01 	adds.w	sl, r2, #1
 801f424:	d481      	bmi.n	801f32a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f426:	4553      	cmp	r3, sl
 801f428:	f6ff af7f 	blt.w	801f32a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f42c:	f11c 0a01 	adds.w	sl, ip, #1
 801f430:	f53f af7b 	bmi.w	801f32a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f434:	45d6      	cmp	lr, sl
 801f436:	f6ff af78 	blt.w	801f32a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f43a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f43e:	b21b      	sxth	r3, r3
 801f440:	fa0f f28e 	sxth.w	r2, lr
 801f444:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f448:	9201      	str	r2, [sp, #4]
 801f44a:	9300      	str	r3, [sp, #0]
 801f44c:	9a07      	ldr	r2, [sp, #28]
 801f44e:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f450:	463b      	mov	r3, r7
 801f452:	4641      	mov	r1, r8
 801f454:	f7ff fdfe 	bl	801f054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f458:	e767      	b.n	801f32a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801f45a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f45c:	9d07      	ldr	r5, [sp, #28]
 801f45e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f462:	1422      	asrs	r2, r4, #16
 801f464:	1431      	asrs	r1, r6, #16
 801f466:	fb03 2101 	mla	r1, r3, r1, r2
 801f46a:	9a07      	ldr	r2, [sp, #28]
 801f46c:	440a      	add	r2, r1
 801f46e:	5c69      	ldrb	r1, [r5, r1]
 801f470:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f474:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f478:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f47c:	f1be 0f00 	cmp.w	lr, #0
 801f480:	d05c      	beq.n	801f53c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801f482:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f486:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f48a:	950d      	str	r5, [sp, #52]	; 0x34
 801f48c:	b150      	cbz	r0, 801f4a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801f48e:	eb02 0c03 	add.w	ip, r2, r3
 801f492:	5cd3      	ldrb	r3, [r2, r3]
 801f494:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f498:	930a      	str	r3, [sp, #40]	; 0x28
 801f49a:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f49e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f4a2:	930e      	str	r3, [sp, #56]	; 0x38
 801f4a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4a6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f4a8:	fb1e f200 	smulbb	r2, lr, r0
 801f4ac:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f4b0:	10d2      	asrs	r2, r2, #3
 801f4b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f4b6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f4ba:	ea4c 0c03 	orr.w	ip, ip, r3
 801f4be:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f4c2:	9311      	str	r3, [sp, #68]	; 0x44
 801f4c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f4c6:	041b      	lsls	r3, r3, #16
 801f4c8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f4cc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f4d0:	ea43 030b 	orr.w	r3, r3, fp
 801f4d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f4d6:	4353      	muls	r3, r2
 801f4d8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f4dc:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f4e0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f4e4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f4e8:	ea43 0b01 	orr.w	fp, r3, r1
 801f4ec:	f1c0 0110 	rsb	r1, r0, #16
 801f4f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4f2:	eba1 0e0e 	sub.w	lr, r1, lr
 801f4f6:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f4fa:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f4fe:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f502:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f506:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f50a:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f50e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f512:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f516:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f51a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f51e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f522:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f526:	ea43 0c0c 	orr.w	ip, r3, ip
 801f52a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f52c:	f82a cb02 	strh.w	ip, [sl], #2
 801f530:	441c      	add	r4, r3
 801f532:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f534:	f108 38ff 	add.w	r8, r8, #4294967295
 801f538:	441e      	add	r6, r3
 801f53a:	e723      	b.n	801f384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f53c:	2800      	cmp	r0, #0
 801f53e:	d0b1      	beq.n	801f4a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801f540:	5cd3      	ldrb	r3, [r2, r3]
 801f542:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f546:	930a      	str	r3, [sp, #40]	; 0x28
 801f548:	e7ac      	b.n	801f4a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801f54a:	b013      	add	sp, #76	; 0x4c
 801f54c:	ecbd 8b0a 	vpop	{d8-d12}
 801f550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f558:	468b      	mov	fp, r1
 801f55a:	8809      	ldrh	r1, [r1, #0]
 801f55c:	b089      	sub	sp, #36	; 0x24
 801f55e:	10cd      	asrs	r5, r1, #3
 801f560:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801f564:	ea4f 2921 	mov.w	r9, r1, asr #8
 801f568:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f56c:	00c9      	lsls	r1, r1, #3
 801f56e:	9500      	str	r5, [sp, #0]
 801f570:	b2c9      	uxtb	r1, r1
 801f572:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801f576:	9101      	str	r1, [sp, #4]
 801f578:	9900      	ldr	r1, [sp, #0]
 801f57a:	9202      	str	r2, [sp, #8]
 801f57c:	fb04 650e 	mla	r5, r4, lr, r6
 801f580:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801f584:	eb02 0805 	add.w	r8, r2, r5
 801f588:	0209      	lsls	r1, r1, #8
 801f58a:	9a01      	ldr	r2, [sp, #4]
 801f58c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 801f590:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801f594:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801f598:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801f59c:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 801f5a0:	4311      	orrs	r1, r2
 801f5a2:	2c00      	cmp	r4, #0
 801f5a4:	9107      	str	r1, [sp, #28]
 801f5a6:	db43      	blt.n	801f630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801f5a8:	45a2      	cmp	sl, r4
 801f5aa:	dd41      	ble.n	801f630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801f5ac:	2e00      	cmp	r6, #0
 801f5ae:	db3d      	blt.n	801f62c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801f5b0:	45b6      	cmp	lr, r6
 801f5b2:	dd3b      	ble.n	801f62c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801f5b4:	9a02      	ldr	r2, [sp, #8]
 801f5b6:	5d55      	ldrb	r5, [r2, r5]
 801f5b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f5bc:	441d      	add	r5, r3
 801f5be:	1c72      	adds	r2, r6, #1
 801f5c0:	d439      	bmi.n	801f636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801f5c2:	4596      	cmp	lr, r2
 801f5c4:	dd37      	ble.n	801f636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801f5c6:	2f00      	cmp	r7, #0
 801f5c8:	d035      	beq.n	801f636 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801f5ca:	f898 1001 	ldrb.w	r1, [r8, #1]
 801f5ce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801f5d2:	4419      	add	r1, r3
 801f5d4:	3401      	adds	r4, #1
 801f5d6:	d432      	bmi.n	801f63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801f5d8:	45a2      	cmp	sl, r4
 801f5da:	dd30      	ble.n	801f63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801f5dc:	b378      	cbz	r0, 801f63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801f5de:	2e00      	cmp	r6, #0
 801f5e0:	db2b      	blt.n	801f63a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801f5e2:	45b6      	cmp	lr, r6
 801f5e4:	dd29      	ble.n	801f63a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801f5e6:	f818 400e 	ldrb.w	r4, [r8, lr]
 801f5ea:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f5ee:	441c      	add	r4, r3
 801f5f0:	3601      	adds	r6, #1
 801f5f2:	d427      	bmi.n	801f644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801f5f4:	45b6      	cmp	lr, r6
 801f5f6:	dd25      	ble.n	801f644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801f5f8:	b327      	cbz	r7, 801f644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801f5fa:	44c6      	add	lr, r8
 801f5fc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f600:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f604:	4413      	add	r3, r2
 801f606:	782a      	ldrb	r2, [r5, #0]
 801f608:	9202      	str	r2, [sp, #8]
 801f60a:	780a      	ldrb	r2, [r1, #0]
 801f60c:	9203      	str	r2, [sp, #12]
 801f60e:	7822      	ldrb	r2, [r4, #0]
 801f610:	9204      	str	r2, [sp, #16]
 801f612:	2f0f      	cmp	r7, #15
 801f614:	781a      	ldrb	r2, [r3, #0]
 801f616:	9205      	str	r2, [sp, #20]
 801f618:	d801      	bhi.n	801f61e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801f61a:	280f      	cmp	r0, #15
 801f61c:	d914      	bls.n	801f648 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801f61e:	4b3f      	ldr	r3, [pc, #252]	; (801f71c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801f620:	4a3f      	ldr	r2, [pc, #252]	; (801f720 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801f622:	4840      	ldr	r0, [pc, #256]	; (801f724 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801f624:	f240 11f9 	movw	r1, #505	; 0x1f9
 801f628:	f007 ff42 	bl	80274b0 <__assert_func>
 801f62c:	ad07      	add	r5, sp, #28
 801f62e:	e7c6      	b.n	801f5be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801f630:	a907      	add	r1, sp, #28
 801f632:	460d      	mov	r5, r1
 801f634:	e7ce      	b.n	801f5d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801f636:	a907      	add	r1, sp, #28
 801f638:	e7cc      	b.n	801f5d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801f63a:	ac07      	add	r4, sp, #28
 801f63c:	e7d8      	b.n	801f5f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801f63e:	ab07      	add	r3, sp, #28
 801f640:	461c      	mov	r4, r3
 801f642:	e7e0      	b.n	801f606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801f644:	ab07      	add	r3, sp, #28
 801f646:	e7de      	b.n	801f606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801f648:	b2ba      	uxth	r2, r7
 801f64a:	b280      	uxth	r0, r0
 801f64c:	fb02 fa00 	mul.w	sl, r2, r0
 801f650:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801f654:	0112      	lsls	r2, r2, #4
 801f656:	b280      	uxth	r0, r0
 801f658:	f891 8002 	ldrb.w	r8, [r1, #2]
 801f65c:	7849      	ldrb	r1, [r1, #1]
 801f65e:	78ae      	ldrb	r6, [r5, #2]
 801f660:	786d      	ldrb	r5, [r5, #1]
 801f662:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801f666:	eba2 020a 	sub.w	r2, r2, sl
 801f66a:	b292      	uxth	r2, r2
 801f66c:	ebae 0e00 	sub.w	lr, lr, r0
 801f670:	fa1f fe8e 	uxth.w	lr, lr
 801f674:	4351      	muls	r1, r2
 801f676:	fb02 f808 	mul.w	r8, r2, r8
 801f67a:	fb0e 8806 	mla	r8, lr, r6, r8
 801f67e:	fb0e 1505 	mla	r5, lr, r5, r1
 801f682:	78a6      	ldrb	r6, [r4, #2]
 801f684:	7861      	ldrb	r1, [r4, #1]
 801f686:	fa1f f78c 	uxth.w	r7, ip
 801f68a:	fb00 8806 	mla	r8, r0, r6, r8
 801f68e:	fb00 5501 	mla	r5, r0, r1, r5
 801f692:	789e      	ldrb	r6, [r3, #2]
 801f694:	7859      	ldrb	r1, [r3, #1]
 801f696:	9b00      	ldr	r3, [sp, #0]
 801f698:	ea6f 0c0c 	mvn.w	ip, ip
 801f69c:	fa5f fc8c 	uxtb.w	ip, ip
 801f6a0:	fb0a 5101 	mla	r1, sl, r1, r5
 801f6a4:	fb13 f50c 	smulbb	r5, r3, ip
 801f6a8:	9b03      	ldr	r3, [sp, #12]
 801f6aa:	435a      	muls	r2, r3
 801f6ac:	9b02      	ldr	r3, [sp, #8]
 801f6ae:	fb0e 2203 	mla	r2, lr, r3, r2
 801f6b2:	9b04      	ldr	r3, [sp, #16]
 801f6b4:	fb00 2003 	mla	r0, r0, r3, r2
 801f6b8:	9b05      	ldr	r3, [sp, #20]
 801f6ba:	fb0a 8606 	mla	r6, sl, r6, r8
 801f6be:	fb19 f90c 	smulbb	r9, r9, ip
 801f6c2:	fb0a 0a03 	mla	sl, sl, r3, r0
 801f6c6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f6ca:	9b01      	ldr	r3, [sp, #4]
 801f6cc:	fb06 9607 	mla	r6, r6, r7, r9
 801f6d0:	b2b6      	uxth	r6, r6
 801f6d2:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801f6d6:	fb13 fc0c 	smulbb	ip, r3, ip
 801f6da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f6de:	fb01 5107 	mla	r1, r1, r7, r5
 801f6e2:	f106 0901 	add.w	r9, r6, #1
 801f6e6:	fb0a c707 	mla	r7, sl, r7, ip
 801f6ea:	b2bf      	uxth	r7, r7
 801f6ec:	b289      	uxth	r1, r1
 801f6ee:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801f6f2:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801f6f6:	1c4d      	adds	r5, r1, #1
 801f6f8:	1c7e      	adds	r6, r7, #1
 801f6fa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801f6fe:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801f702:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801f706:	0949      	lsrs	r1, r1, #5
 801f708:	ea46 0609 	orr.w	r6, r6, r9
 801f70c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f710:	430e      	orrs	r6, r1
 801f712:	f8ab 6000 	strh.w	r6, [fp]
 801f716:	b009      	add	sp, #36	; 0x24
 801f718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f71c:	0802d9a3 	.word	0x0802d9a3
 801f720:	0802ded2 	.word	0x0802ded2
 801f724:	0802d970 	.word	0x0802d970

0801f728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f72c:	ed2d 8b08 	vpush	{d8-d11}
 801f730:	b095      	sub	sp, #84	; 0x54
 801f732:	eeb0 aa40 	vmov.f32	s20, s0
 801f736:	9212      	str	r2, [sp, #72]	; 0x48
 801f738:	9309      	str	r3, [sp, #36]	; 0x24
 801f73a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801f73c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801f740:	930f      	str	r3, [sp, #60]	; 0x3c
 801f742:	910e      	str	r1, [sp, #56]	; 0x38
 801f744:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801f748:	9013      	str	r0, [sp, #76]	; 0x4c
 801f74a:	6850      	ldr	r0, [r2, #4]
 801f74c:	6812      	ldr	r2, [r2, #0]
 801f74e:	fb00 1303 	mla	r3, r0, r3, r1
 801f752:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f756:	930a      	str	r3, [sp, #40]	; 0x28
 801f758:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f75a:	681b      	ldr	r3, [r3, #0]
 801f75c:	930d      	str	r3, [sp, #52]	; 0x34
 801f75e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f760:	685c      	ldr	r4, [r3, #4]
 801f762:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f764:	43db      	mvns	r3, r3
 801f766:	b2db      	uxtb	r3, r3
 801f768:	eef0 9a60 	vmov.f32	s19, s1
 801f76c:	eeb0 9a41 	vmov.f32	s18, s2
 801f770:	eeb0 8a62 	vmov.f32	s16, s5
 801f774:	eef0 8a43 	vmov.f32	s17, s6
 801f778:	eef0 ba44 	vmov.f32	s23, s8
 801f77c:	eeb0 ba64 	vmov.f32	s22, s9
 801f780:	eef0 aa45 	vmov.f32	s21, s10
 801f784:	3404      	adds	r4, #4
 801f786:	930b      	str	r3, [sp, #44]	; 0x2c
 801f788:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f78a:	2b00      	cmp	r3, #0
 801f78c:	dc03      	bgt.n	801f796 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f78e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f790:	2b00      	cmp	r3, #0
 801f792:	f340 8255 	ble.w	801fc40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801f796:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f798:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f79c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f7a0:	1e48      	subs	r0, r1, #1
 801f7a2:	1e55      	subs	r5, r2, #1
 801f7a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7a6:	2b00      	cmp	r3, #0
 801f7a8:	f340 80f9 	ble.w	801f99e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f7ac:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801f7ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f7b0:	1436      	asrs	r6, r6, #16
 801f7b2:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f7b6:	d406      	bmi.n	801f7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f7b8:	4286      	cmp	r6, r0
 801f7ba:	da04      	bge.n	801f7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f7bc:	2b00      	cmp	r3, #0
 801f7be:	db02      	blt.n	801f7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f7c0:	42ab      	cmp	r3, r5
 801f7c2:	f2c0 80ed 	blt.w	801f9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f7c6:	3601      	adds	r6, #1
 801f7c8:	f100 80da 	bmi.w	801f980 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f7cc:	42b1      	cmp	r1, r6
 801f7ce:	f2c0 80d7 	blt.w	801f980 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f7d2:	3301      	adds	r3, #1
 801f7d4:	f100 80d4 	bmi.w	801f980 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f7d8:	429a      	cmp	r2, r3
 801f7da:	f2c0 80d1 	blt.w	801f980 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801f7de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7e0:	9311      	str	r3, [sp, #68]	; 0x44
 801f7e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7e4:	930c      	str	r3, [sp, #48]	; 0x30
 801f7e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f7e8:	2b00      	cmp	r3, #0
 801f7ea:	f340 80fa 	ble.w	801f9e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801f7ee:	982e      	ldr	r0, [sp, #184]	; 0xb8
 801f7f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f7f2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801f7f4:	68c6      	ldr	r6, [r0, #12]
 801f7f6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f7f8:	141d      	asrs	r5, r3, #16
 801f7fa:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f7fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f800:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801f802:	1400      	asrs	r0, r0, #16
 801f804:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f808:	6892      	ldr	r2, [r2, #8]
 801f80a:	f100 813e 	bmi.w	801fa8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f80e:	1e57      	subs	r7, r2, #1
 801f810:	42b8      	cmp	r0, r7
 801f812:	f280 813a 	bge.w	801fa8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f816:	2d00      	cmp	r5, #0
 801f818:	f2c0 8137 	blt.w	801fa8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f81c:	1e77      	subs	r7, r6, #1
 801f81e:	42bd      	cmp	r5, r7
 801f820:	f280 8133 	bge.w	801fa8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f824:	b212      	sxth	r2, r2
 801f826:	fb05 0002 	mla	r0, r5, r2, r0
 801f82a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f82c:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f830:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f834:	182e      	adds	r6, r5, r0
 801f836:	eb04 050a 	add.w	r5, r4, sl
 801f83a:	2b00      	cmp	r3, #0
 801f83c:	f000 8117 	beq.w	801fa6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801f840:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f844:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f848:	44a4      	add	ip, r4
 801f84a:	2900      	cmp	r1, #0
 801f84c:	f000 8117 	beq.w	801fa7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f850:	18b0      	adds	r0, r6, r2
 801f852:	5cb2      	ldrb	r2, [r6, r2]
 801f854:	7840      	ldrb	r0, [r0, #1]
 801f856:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f85a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f85e:	4422      	add	r2, r4
 801f860:	4420      	add	r0, r4
 801f862:	b29b      	uxth	r3, r3
 801f864:	b289      	uxth	r1, r1
 801f866:	fb03 f901 	mul.w	r9, r3, r1
 801f86a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f86e:	011b      	lsls	r3, r3, #4
 801f870:	b289      	uxth	r1, r1
 801f872:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f876:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f87a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f87c:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f880:	f8b6 e000 	ldrh.w	lr, [r6]
 801f884:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f888:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f88c:	eba3 0309 	sub.w	r3, r3, r9
 801f890:	b29b      	uxth	r3, r3
 801f892:	eba8 0801 	sub.w	r8, r8, r1
 801f896:	fa1f f888 	uxth.w	r8, r8
 801f89a:	435f      	muls	r7, r3
 801f89c:	fb08 770b 	mla	r7, r8, fp, r7
 801f8a0:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f8a4:	9310      	str	r3, [sp, #64]	; 0x40
 801f8a6:	fb01 770b 	mla	r7, r1, fp, r7
 801f8aa:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f8ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8b0:	fb09 770b 	mla	r7, r9, fp, r7
 801f8b4:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f8b8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f8bc:	fb1b fb03 	smulbb	fp, fp, r3
 801f8c0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f8c4:	fb07 b706 	mla	r7, r7, r6, fp
 801f8c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f8ca:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f8ce:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f8d2:	f89c c000 	ldrb.w	ip, [ip]
 801f8d6:	435d      	muls	r5, r3
 801f8d8:	fb08 550b 	mla	r5, r8, fp, r5
 801f8dc:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f8e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8e2:	fb01 550b 	mla	r5, r1, fp, r5
 801f8e6:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f8ea:	fb09 550b 	mla	r5, r9, fp, r5
 801f8ee:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f8f2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f8f6:	fb1b fb03 	smulbb	fp, fp, r3
 801f8fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f8fc:	fb03 f30c 	mul.w	r3, r3, ip
 801f900:	f892 c000 	ldrb.w	ip, [r2]
 801f904:	fb08 330a 	mla	r3, r8, sl, r3
 801f908:	fb01 330c 	mla	r3, r1, ip, r3
 801f90c:	f890 c000 	ldrb.w	ip, [r0]
 801f910:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f914:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f918:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f91a:	fa5f fe8e 	uxtb.w	lr, lr
 801f91e:	b2bf      	uxth	r7, r7
 801f920:	fb1e fe03 	smulbb	lr, lr, r3
 801f924:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f928:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f92c:	fb05 b506 	mla	r5, r5, r6, fp
 801f930:	1c7b      	adds	r3, r7, #1
 801f932:	fb0c e606 	mla	r6, ip, r6, lr
 801f936:	b2ad      	uxth	r5, r5
 801f938:	b2b6      	uxth	r6, r6
 801f93a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f93e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f942:	f105 0b01 	add.w	fp, r5, #1
 801f946:	1c77      	adds	r7, r6, #1
 801f948:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f94c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f950:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f954:	096d      	lsrs	r5, r5, #5
 801f956:	431f      	orrs	r7, r3
 801f958:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f95c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f95e:	433d      	orrs	r5, r7
 801f960:	801d      	strh	r5, [r3, #0]
 801f962:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f964:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f966:	3302      	adds	r3, #2
 801f968:	930c      	str	r3, [sp, #48]	; 0x30
 801f96a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f96c:	4413      	add	r3, r2
 801f96e:	9327      	str	r3, [sp, #156]	; 0x9c
 801f970:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f972:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f974:	4413      	add	r3, r2
 801f976:	9328      	str	r3, [sp, #160]	; 0xa0
 801f978:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f97a:	3b01      	subs	r3, #1
 801f97c:	9311      	str	r3, [sp, #68]	; 0x44
 801f97e:	e732      	b.n	801f7e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801f980:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f982:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801f984:	4433      	add	r3, r6
 801f986:	9327      	str	r3, [sp, #156]	; 0x9c
 801f988:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801f98a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f98c:	4433      	add	r3, r6
 801f98e:	9328      	str	r3, [sp, #160]	; 0xa0
 801f990:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f992:	3b01      	subs	r3, #1
 801f994:	9309      	str	r3, [sp, #36]	; 0x24
 801f996:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f998:	3302      	adds	r3, #2
 801f99a:	930a      	str	r3, [sp, #40]	; 0x28
 801f99c:	e702      	b.n	801f7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f99e:	d027      	beq.n	801f9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801f9a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9a2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801f9a4:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801f9a6:	3b01      	subs	r3, #1
 801f9a8:	fb00 5003 	mla	r0, r0, r3, r5
 801f9ac:	1400      	asrs	r0, r0, #16
 801f9ae:	f53f af16 	bmi.w	801f7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f9b2:	3901      	subs	r1, #1
 801f9b4:	4288      	cmp	r0, r1
 801f9b6:	f6bf af12 	bge.w	801f7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f9ba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f9bc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f9be:	fb01 0303 	mla	r3, r1, r3, r0
 801f9c2:	141b      	asrs	r3, r3, #16
 801f9c4:	f53f af0b 	bmi.w	801f7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f9c8:	3a01      	subs	r2, #1
 801f9ca:	4293      	cmp	r3, r2
 801f9cc:	f6bf af07 	bge.w	801f7de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f9d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9d2:	9311      	str	r3, [sp, #68]	; 0x44
 801f9d4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f9d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f9da:	930c      	str	r3, [sp, #48]	; 0x30
 801f9dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f9de:	2b00      	cmp	r3, #0
 801f9e0:	dc70      	bgt.n	801fac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801f9e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f9e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f9ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f9ee:	930a      	str	r3, [sp, #40]	; 0x28
 801f9f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f9f2:	2b00      	cmp	r3, #0
 801f9f4:	f340 8124 	ble.w	801fc40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801f9f8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801f9fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fa00:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801fa04:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa06:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801fa0a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801fa0e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801fa12:	eef0 6a48 	vmov.f32	s13, s16
 801fa16:	ee69 7a27 	vmul.f32	s15, s18, s15
 801fa1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa1e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801fa22:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801fa26:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801fa2a:	eef0 6a68 	vmov.f32	s13, s17
 801fa2e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801fa32:	ee18 2a10 	vmov	r2, s16
 801fa36:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801fa3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa3e:	ee18 2a90 	vmov	r2, s17
 801fa42:	9329      	str	r3, [sp, #164]	; 0xa4
 801fa44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa46:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa4a:	932a      	str	r3, [sp, #168]	; 0xa8
 801fa4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fa4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fa50:	3b01      	subs	r3, #1
 801fa52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa56:	930e      	str	r3, [sp, #56]	; 0x38
 801fa58:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa5a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801fa5e:	bf08      	it	eq
 801fa60:	4613      	moveq	r3, r2
 801fa62:	9309      	str	r3, [sp, #36]	; 0x24
 801fa64:	eef0 8a67 	vmov.f32	s17, s15
 801fa68:	eeb0 8a47 	vmov.f32	s16, s14
 801fa6c:	e68c      	b.n	801f788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801fa6e:	b149      	cbz	r1, 801fa84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 801fa70:	5cb2      	ldrb	r2, [r6, r2]
 801fa72:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa76:	4422      	add	r2, r4
 801fa78:	4628      	mov	r0, r5
 801fa7a:	46ac      	mov	ip, r5
 801fa7c:	e6f1      	b.n	801f862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801fa7e:	4628      	mov	r0, r5
 801fa80:	462a      	mov	r2, r5
 801fa82:	e6ee      	b.n	801f862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801fa84:	4628      	mov	r0, r5
 801fa86:	462a      	mov	r2, r5
 801fa88:	e7f7      	b.n	801fa7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801fa8a:	1c47      	adds	r7, r0, #1
 801fa8c:	f53f af69 	bmi.w	801f962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801fa90:	42ba      	cmp	r2, r7
 801fa92:	f6ff af66 	blt.w	801f962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801fa96:	1c6f      	adds	r7, r5, #1
 801fa98:	f53f af63 	bmi.w	801f962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801fa9c:	42be      	cmp	r6, r7
 801fa9e:	f6ff af60 	blt.w	801f962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801faa2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801faa4:	9002      	str	r0, [sp, #8]
 801faa6:	b236      	sxth	r6, r6
 801faa8:	b212      	sxth	r2, r2
 801faaa:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801faae:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801fab2:	9200      	str	r2, [sp, #0]
 801fab4:	9601      	str	r6, [sp, #4]
 801fab6:	4623      	mov	r3, r4
 801fab8:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801fabc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fabe:	f7ff fd49 	bl	801f554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801fac2:	e74e      	b.n	801f962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801fac4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801fac6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801fac8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801faca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801facc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fad0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801fad2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fad6:	142d      	asrs	r5, r5, #16
 801fad8:	1400      	asrs	r0, r0, #16
 801fada:	fb02 5000 	mla	r0, r2, r0, r5
 801fade:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fae0:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fae4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fae8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801faec:	182e      	adds	r6, r5, r0
 801faee:	eb04 0509 	add.w	r5, r4, r9
 801faf2:	2b00      	cmp	r3, #0
 801faf4:	f000 8096 	beq.w	801fc24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801faf8:	7877      	ldrb	r7, [r6, #1]
 801fafa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fafe:	4427      	add	r7, r4
 801fb00:	2900      	cmp	r1, #0
 801fb02:	f000 8097 	beq.w	801fc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 801fb06:	18b0      	adds	r0, r6, r2
 801fb08:	5cb2      	ldrb	r2, [r6, r2]
 801fb0a:	7840      	ldrb	r0, [r0, #1]
 801fb0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb10:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb14:	4422      	add	r2, r4
 801fb16:	4420      	add	r0, r4
 801fb18:	b29b      	uxth	r3, r3
 801fb1a:	b289      	uxth	r1, r1
 801fb1c:	fb03 f801 	mul.w	r8, r3, r1
 801fb20:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fb22:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fb26:	f8b6 c000 	ldrh.w	ip, [r6]
 801fb2a:	78be      	ldrb	r6, [r7, #2]
 801fb2c:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fb30:	011b      	lsls	r3, r3, #4
 801fb32:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fb36:	b289      	uxth	r1, r1
 801fb38:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fb3c:	eba3 0308 	sub.w	r3, r3, r8
 801fb40:	b29b      	uxth	r3, r3
 801fb42:	ebae 0e01 	sub.w	lr, lr, r1
 801fb46:	fa1f fe8e 	uxth.w	lr, lr
 801fb4a:	435e      	muls	r6, r3
 801fb4c:	fb0e 660b 	mla	r6, lr, fp, r6
 801fb50:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fb54:	9310      	str	r3, [sp, #64]	; 0x40
 801fb56:	fb01 660b 	mla	r6, r1, fp, r6
 801fb5a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fb5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb60:	fb08 660b 	mla	r6, r8, fp, r6
 801fb64:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fb68:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fb6c:	fb1b fb03 	smulbb	fp, fp, r3
 801fb70:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fb74:	fb06 b60a 	mla	r6, r6, sl, fp
 801fb78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb7a:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fb7e:	787d      	ldrb	r5, [r7, #1]
 801fb80:	783f      	ldrb	r7, [r7, #0]
 801fb82:	435d      	muls	r5, r3
 801fb84:	fb0e 550b 	mla	r5, lr, fp, r5
 801fb88:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fb8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb8e:	fb01 550b 	mla	r5, r1, fp, r5
 801fb92:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fb96:	fb08 550b 	mla	r5, r8, fp, r5
 801fb9a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fb9e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fba2:	fb1b fb03 	smulbb	fp, fp, r3
 801fba6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fba8:	437b      	muls	r3, r7
 801fbaa:	7817      	ldrb	r7, [r2, #0]
 801fbac:	fb0e 3309 	mla	r3, lr, r9, r3
 801fbb0:	fb01 3307 	mla	r3, r1, r7, r3
 801fbb4:	7807      	ldrb	r7, [r0, #0]
 801fbb6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fbba:	fb08 3707 	mla	r7, r8, r7, r3
 801fbbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fbc0:	fa5f fc8c 	uxtb.w	ip, ip
 801fbc4:	fb1c fc03 	smulbb	ip, ip, r3
 801fbc8:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fbcc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fbd0:	fb05 b50a 	mla	r5, r5, sl, fp
 801fbd4:	fb07 c70a 	mla	r7, r7, sl, ip
 801fbd8:	b2b6      	uxth	r6, r6
 801fbda:	b2ad      	uxth	r5, r5
 801fbdc:	b2bf      	uxth	r7, r7
 801fbde:	1c73      	adds	r3, r6, #1
 801fbe0:	1c7a      	adds	r2, r7, #1
 801fbe2:	f105 0b01 	add.w	fp, r5, #1
 801fbe6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fbea:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fbee:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fbf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fbf6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fbfa:	096d      	lsrs	r5, r5, #5
 801fbfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fbfe:	4316      	orrs	r6, r2
 801fc00:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fc04:	432e      	orrs	r6, r5
 801fc06:	f823 6b02 	strh.w	r6, [r3], #2
 801fc0a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801fc0c:	930c      	str	r3, [sp, #48]	; 0x30
 801fc0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fc10:	4413      	add	r3, r2
 801fc12:	9327      	str	r3, [sp, #156]	; 0x9c
 801fc14:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fc16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fc18:	4413      	add	r3, r2
 801fc1a:	9328      	str	r3, [sp, #160]	; 0xa0
 801fc1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fc1e:	3b01      	subs	r3, #1
 801fc20:	9311      	str	r3, [sp, #68]	; 0x44
 801fc22:	e6db      	b.n	801f9dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801fc24:	b149      	cbz	r1, 801fc3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801fc26:	5cb2      	ldrb	r2, [r6, r2]
 801fc28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc2c:	4422      	add	r2, r4
 801fc2e:	4628      	mov	r0, r5
 801fc30:	462f      	mov	r7, r5
 801fc32:	e771      	b.n	801fb18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801fc34:	4628      	mov	r0, r5
 801fc36:	462a      	mov	r2, r5
 801fc38:	e76e      	b.n	801fb18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801fc3a:	4628      	mov	r0, r5
 801fc3c:	462a      	mov	r2, r5
 801fc3e:	e7f7      	b.n	801fc30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801fc40:	b015      	add	sp, #84	; 0x54
 801fc42:	ecbd 8b08 	vpop	{d8-d11}
 801fc46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801fc4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fc4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc50:	880e      	ldrh	r6, [r1, #0]
 801fc52:	b085      	sub	sp, #20
 801fc54:	0230      	lsls	r0, r6, #8
 801fc56:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801fc5a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801fc5e:	0170      	lsls	r0, r6, #5
 801fc60:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fc64:	9101      	str	r1, [sp, #4]
 801fc66:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801fc6a:	00f6      	lsls	r6, r6, #3
 801fc6c:	ea4b 0000 	orr.w	r0, fp, r0
 801fc70:	b2f6      	uxtb	r6, r6
 801fc72:	4691      	mov	r9, r2
 801fc74:	fb05 7a0c 	mla	sl, r5, ip, r7
 801fc78:	4306      	orrs	r6, r0
 801fc7a:	2d00      	cmp	r5, #0
 801fc7c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fc80:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801fc84:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801fc88:	9603      	str	r6, [sp, #12]
 801fc8a:	eb09 0e0a 	add.w	lr, r9, sl
 801fc8e:	db42      	blt.n	801fd16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801fc90:	45a8      	cmp	r8, r5
 801fc92:	dd40      	ble.n	801fd16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801fc94:	2f00      	cmp	r7, #0
 801fc96:	db3c      	blt.n	801fd12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801fc98:	45bc      	cmp	ip, r7
 801fc9a:	dd3a      	ble.n	801fd12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801fc9c:	f819 600a 	ldrb.w	r6, [r9, sl]
 801fca0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fca4:	441e      	add	r6, r3
 801fca6:	1c78      	adds	r0, r7, #1
 801fca8:	d438      	bmi.n	801fd1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801fcaa:	4584      	cmp	ip, r0
 801fcac:	dd36      	ble.n	801fd1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801fcae:	b3aa      	cbz	r2, 801fd1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801fcb0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fcb4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fcb8:	4418      	add	r0, r3
 801fcba:	3501      	adds	r5, #1
 801fcbc:	d432      	bmi.n	801fd24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801fcbe:	45a8      	cmp	r8, r5
 801fcc0:	dd30      	ble.n	801fd24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801fcc2:	b37c      	cbz	r4, 801fd24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801fcc4:	2f00      	cmp	r7, #0
 801fcc6:	db2b      	blt.n	801fd20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801fcc8:	45bc      	cmp	ip, r7
 801fcca:	dd29      	ble.n	801fd20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801fccc:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801fcd0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fcd4:	441d      	add	r5, r3
 801fcd6:	3701      	adds	r7, #1
 801fcd8:	d427      	bmi.n	801fd2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801fcda:	45bc      	cmp	ip, r7
 801fcdc:	dd25      	ble.n	801fd2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801fcde:	b322      	cbz	r2, 801fd2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801fce0:	44f4      	add	ip, lr
 801fce2:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801fce6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fcea:	443b      	add	r3, r7
 801fcec:	781f      	ldrb	r7, [r3, #0]
 801fcee:	f896 9000 	ldrb.w	r9, [r6]
 801fcf2:	f890 a000 	ldrb.w	sl, [r0]
 801fcf6:	f895 8000 	ldrb.w	r8, [r5]
 801fcfa:	2a0f      	cmp	r2, #15
 801fcfc:	4639      	mov	r1, r7
 801fcfe:	d801      	bhi.n	801fd04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 801fd00:	2c0f      	cmp	r4, #15
 801fd02:	d914      	bls.n	801fd2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 801fd04:	4b2c      	ldr	r3, [pc, #176]	; (801fdb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801fd06:	4a2d      	ldr	r2, [pc, #180]	; (801fdbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 801fd08:	482d      	ldr	r0, [pc, #180]	; (801fdc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 801fd0a:	f240 11f9 	movw	r1, #505	; 0x1f9
 801fd0e:	f007 fbcf 	bl	80274b0 <__assert_func>
 801fd12:	ae03      	add	r6, sp, #12
 801fd14:	e7c7      	b.n	801fca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 801fd16:	a803      	add	r0, sp, #12
 801fd18:	4606      	mov	r6, r0
 801fd1a:	e7ce      	b.n	801fcba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fd1c:	a803      	add	r0, sp, #12
 801fd1e:	e7cc      	b.n	801fcba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fd20:	ad03      	add	r5, sp, #12
 801fd22:	e7d8      	b.n	801fcd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 801fd24:	ab03      	add	r3, sp, #12
 801fd26:	461d      	mov	r5, r3
 801fd28:	e7e0      	b.n	801fcec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801fd2a:	ab03      	add	r3, sp, #12
 801fd2c:	e7de      	b.n	801fcec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801fd2e:	b292      	uxth	r2, r2
 801fd30:	b2a4      	uxth	r4, r4
 801fd32:	fb02 fe04 	mul.w	lr, r2, r4
 801fd36:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 801fd3a:	0112      	lsls	r2, r2, #4
 801fd3c:	b2a4      	uxth	r4, r4
 801fd3e:	f890 c002 	ldrb.w	ip, [r0, #2]
 801fd42:	f896 b002 	ldrb.w	fp, [r6, #2]
 801fd46:	7840      	ldrb	r0, [r0, #1]
 801fd48:	7876      	ldrb	r6, [r6, #1]
 801fd4a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801fd4e:	eba2 020e 	sub.w	r2, r2, lr
 801fd52:	b292      	uxth	r2, r2
 801fd54:	1b3f      	subs	r7, r7, r4
 801fd56:	b2bf      	uxth	r7, r7
 801fd58:	fb02 fc0c 	mul.w	ip, r2, ip
 801fd5c:	fb07 cc0b 	mla	ip, r7, fp, ip
 801fd60:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fd64:	fb04 cc0b 	mla	ip, r4, fp, ip
 801fd68:	f893 b002 	ldrb.w	fp, [r3, #2]
 801fd6c:	785b      	ldrb	r3, [r3, #1]
 801fd6e:	fb0e cc0b 	mla	ip, lr, fp, ip
 801fd72:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801fd76:	fb02 fc0a 	mul.w	ip, r2, sl
 801fd7a:	4342      	muls	r2, r0
 801fd7c:	7868      	ldrb	r0, [r5, #1]
 801fd7e:	fb07 cc09 	mla	ip, r7, r9, ip
 801fd82:	fb07 2206 	mla	r2, r7, r6, r2
 801fd86:	fb04 cc08 	mla	ip, r4, r8, ip
 801fd8a:	fb04 2400 	mla	r4, r4, r0, r2
 801fd8e:	fb0e cc01 	mla	ip, lr, r1, ip
 801fd92:	fb0e 4e03 	mla	lr, lr, r3, r4
 801fd96:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fd9a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801fd9e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fda2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801fda6:	9b01      	ldr	r3, [sp, #4]
 801fda8:	ea4c 0c0e 	orr.w	ip, ip, lr
 801fdac:	f8a3 c000 	strh.w	ip, [r3]
 801fdb0:	b005      	add	sp, #20
 801fdb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fdb6:	bf00      	nop
 801fdb8:	0802d9a3 	.word	0x0802d9a3
 801fdbc:	0802ded2 	.word	0x0802ded2
 801fdc0:	0802d970 	.word	0x0802d970

0801fdc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fdc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fdc8:	ed2d 8b08 	vpush	{d8-d11}
 801fdcc:	b08f      	sub	sp, #60	; 0x3c
 801fdce:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801fdd2:	920c      	str	r2, [sp, #48]	; 0x30
 801fdd4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801fdd6:	910a      	str	r1, [sp, #40]	; 0x28
 801fdd8:	9306      	str	r3, [sp, #24]
 801fdda:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801fdde:	900d      	str	r0, [sp, #52]	; 0x34
 801fde0:	6850      	ldr	r0, [r2, #4]
 801fde2:	6812      	ldr	r2, [r2, #0]
 801fde4:	fb00 1303 	mla	r3, r0, r3, r1
 801fde8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fdec:	9307      	str	r3, [sp, #28]
 801fdee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fdf0:	681b      	ldr	r3, [r3, #0]
 801fdf2:	9308      	str	r3, [sp, #32]
 801fdf4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fdf6:	685c      	ldr	r4, [r3, #4]
 801fdf8:	eeb0 aa40 	vmov.f32	s20, s0
 801fdfc:	eef0 9a60 	vmov.f32	s19, s1
 801fe00:	eeb0 9a41 	vmov.f32	s18, s2
 801fe04:	eeb0 8a62 	vmov.f32	s16, s5
 801fe08:	eef0 8a43 	vmov.f32	s17, s6
 801fe0c:	eef0 ba44 	vmov.f32	s23, s8
 801fe10:	eeb0 ba64 	vmov.f32	s22, s9
 801fe14:	eef0 aa45 	vmov.f32	s21, s10
 801fe18:	3404      	adds	r4, #4
 801fe1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fe1c:	2b00      	cmp	r3, #0
 801fe1e:	dc03      	bgt.n	801fe28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801fe20:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe22:	2b00      	cmp	r3, #0
 801fe24:	f340 81d6 	ble.w	80201d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801fe28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fe2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fe2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fe32:	1e48      	subs	r0, r1, #1
 801fe34:	1e56      	subs	r6, r2, #1
 801fe36:	9b06      	ldr	r3, [sp, #24]
 801fe38:	2b00      	cmp	r3, #0
 801fe3a:	f340 80b7 	ble.w	801ffac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801fe3e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fe42:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fe46:	d406      	bmi.n	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe48:	4287      	cmp	r7, r0
 801fe4a:	da04      	bge.n	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe4c:	2b00      	cmp	r3, #0
 801fe4e:	db02      	blt.n	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fe50:	42b3      	cmp	r3, r6
 801fe52:	f2c0 80ac 	blt.w	801ffae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fe56:	3701      	adds	r7, #1
 801fe58:	f100 809d 	bmi.w	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fe5c:	42b9      	cmp	r1, r7
 801fe5e:	f2c0 809a 	blt.w	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fe62:	3301      	adds	r3, #1
 801fe64:	f100 8097 	bmi.w	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fe68:	429a      	cmp	r2, r3
 801fe6a:	f2c0 8094 	blt.w	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fe6e:	9b06      	ldr	r3, [sp, #24]
 801fe70:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe72:	9b07      	ldr	r3, [sp, #28]
 801fe74:	9309      	str	r3, [sp, #36]	; 0x24
 801fe76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe78:	2b00      	cmp	r3, #0
 801fe7a:	f340 80b5 	ble.w	801ffe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801fe7e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801fe80:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801fe82:	68c7      	ldr	r7, [r0, #12]
 801fe84:	6892      	ldr	r2, [r2, #8]
 801fe86:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fe8a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fe8e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fe92:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fe96:	f100 80fb 	bmi.w	8020090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801fe9a:	f102 3cff 	add.w	ip, r2, #4294967295
 801fe9e:	4560      	cmp	r0, ip
 801fea0:	f280 80f6 	bge.w	8020090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801fea4:	2e00      	cmp	r6, #0
 801fea6:	f2c0 80f3 	blt.w	8020090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801feaa:	f107 3cff 	add.w	ip, r7, #4294967295
 801feae:	4566      	cmp	r6, ip
 801feb0:	f280 80ee 	bge.w	8020090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801feb4:	b212      	sxth	r2, r2
 801feb6:	fb06 0002 	mla	r0, r6, r2, r0
 801feba:	9e08      	ldr	r6, [sp, #32]
 801febc:	1837      	adds	r7, r6, r0
 801febe:	5c30      	ldrb	r0, [r6, r0]
 801fec0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fec4:	eb04 0c08 	add.w	ip, r4, r8
 801fec8:	2b00      	cmp	r3, #0
 801feca:	f000 80d3 	beq.w	8020074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801fece:	787e      	ldrb	r6, [r7, #1]
 801fed0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fed4:	4426      	add	r6, r4
 801fed6:	2900      	cmp	r1, #0
 801fed8:	f000 80d4 	beq.w	8020084 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 801fedc:	18b8      	adds	r0, r7, r2
 801fede:	5cba      	ldrb	r2, [r7, r2]
 801fee0:	7840      	ldrb	r0, [r0, #1]
 801fee2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fee6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801feea:	4422      	add	r2, r4
 801feec:	4420      	add	r0, r4
 801feee:	b29b      	uxth	r3, r3
 801fef0:	b289      	uxth	r1, r1
 801fef2:	fb03 f901 	mul.w	r9, r3, r1
 801fef6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fefa:	011b      	lsls	r3, r3, #4
 801fefc:	b289      	uxth	r1, r1
 801fefe:	78b7      	ldrb	r7, [r6, #2]
 801ff00:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ff04:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ff08:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ff0c:	eba3 0309 	sub.w	r3, r3, r9
 801ff10:	b29b      	uxth	r3, r3
 801ff12:	ebae 0e01 	sub.w	lr, lr, r1
 801ff16:	fa1f fe8e 	uxth.w	lr, lr
 801ff1a:	435f      	muls	r7, r3
 801ff1c:	fb0e 770a 	mla	r7, lr, sl, r7
 801ff20:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ff24:	fb01 770a 	mla	r7, r1, sl, r7
 801ff28:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ff2c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ff30:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ff34:	f896 8000 	ldrb.w	r8, [r6]
 801ff38:	7876      	ldrb	r6, [r6, #1]
 801ff3a:	fb03 f808 	mul.w	r8, r3, r8
 801ff3e:	fb0e 8807 	mla	r8, lr, r7, r8
 801ff42:	7817      	ldrb	r7, [r2, #0]
 801ff44:	fb01 8807 	mla	r8, r1, r7, r8
 801ff48:	7807      	ldrb	r7, [r0, #0]
 801ff4a:	fb09 8707 	mla	r7, r9, r7, r8
 801ff4e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ff52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ff56:	ea47 070a 	orr.w	r7, r7, sl
 801ff5a:	4373      	muls	r3, r6
 801ff5c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ff60:	fb0e 330c 	mla	r3, lr, ip, r3
 801ff64:	fb01 310a 	mla	r1, r1, sl, r3
 801ff68:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ff6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff6e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801ff72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ff76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ff7a:	ea47 070a 	orr.w	r7, r7, sl
 801ff7e:	801f      	strh	r7, [r3, #0]
 801ff80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff82:	3302      	adds	r3, #2
 801ff84:	9309      	str	r3, [sp, #36]	; 0x24
 801ff86:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ff88:	449b      	add	fp, r3
 801ff8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff8c:	441d      	add	r5, r3
 801ff8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff90:	3b01      	subs	r3, #1
 801ff92:	930b      	str	r3, [sp, #44]	; 0x2c
 801ff94:	e76f      	b.n	801fe76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ff96:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ff98:	449b      	add	fp, r3
 801ff9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff9c:	441d      	add	r5, r3
 801ff9e:	9b06      	ldr	r3, [sp, #24]
 801ffa0:	3b01      	subs	r3, #1
 801ffa2:	9306      	str	r3, [sp, #24]
 801ffa4:	9b07      	ldr	r3, [sp, #28]
 801ffa6:	3302      	adds	r3, #2
 801ffa8:	9307      	str	r3, [sp, #28]
 801ffaa:	e744      	b.n	801fe36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ffac:	d023      	beq.n	801fff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801ffae:	9b06      	ldr	r3, [sp, #24]
 801ffb0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ffb2:	3b01      	subs	r3, #1
 801ffb4:	fb00 b003 	mla	r0, r0, r3, fp
 801ffb8:	1400      	asrs	r0, r0, #16
 801ffba:	f53f af58 	bmi.w	801fe6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ffbe:	3901      	subs	r1, #1
 801ffc0:	4288      	cmp	r0, r1
 801ffc2:	f6bf af54 	bge.w	801fe6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ffc6:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ffc8:	fb01 5303 	mla	r3, r1, r3, r5
 801ffcc:	141b      	asrs	r3, r3, #16
 801ffce:	f53f af4e 	bmi.w	801fe6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ffd2:	3a01      	subs	r2, #1
 801ffd4:	4293      	cmp	r3, r2
 801ffd6:	f6bf af4a 	bge.w	801fe6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ffda:	9b06      	ldr	r3, [sp, #24]
 801ffdc:	9309      	str	r3, [sp, #36]	; 0x24
 801ffde:	9b07      	ldr	r3, [sp, #28]
 801ffe0:	930b      	str	r3, [sp, #44]	; 0x2c
 801ffe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ffe4:	2b00      	cmp	r3, #0
 801ffe6:	dc70      	bgt.n	80200ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ffe8:	9b06      	ldr	r3, [sp, #24]
 801ffea:	9a07      	ldr	r2, [sp, #28]
 801ffec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fff0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fff4:	9307      	str	r3, [sp, #28]
 801fff6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fff8:	2b00      	cmp	r3, #0
 801fffa:	f340 80eb 	ble.w	80201d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801fffe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8020002:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020006:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802000a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802000c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8020010:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8020014:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8020018:	eef0 6a48 	vmov.f32	s13, s16
 802001c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020020:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020024:	ee37 8a48 	vsub.f32	s16, s14, s16
 8020028:	ee16 ba90 	vmov	fp, s13
 802002c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8020030:	eef0 6a68 	vmov.f32	s13, s17
 8020034:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8020038:	ee18 2a10 	vmov	r2, s16
 802003c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020040:	fb92 f3f3 	sdiv	r3, r2, r3
 8020044:	ee18 2a90 	vmov	r2, s17
 8020048:	9323      	str	r3, [sp, #140]	; 0x8c
 802004a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802004c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020050:	9324      	str	r3, [sp, #144]	; 0x90
 8020052:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020054:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020056:	3b01      	subs	r3, #1
 8020058:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802005c:	930a      	str	r3, [sp, #40]	; 0x28
 802005e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020060:	bf08      	it	eq
 8020062:	4613      	moveq	r3, r2
 8020064:	ee16 5a90 	vmov	r5, s13
 8020068:	9306      	str	r3, [sp, #24]
 802006a:	eef0 8a67 	vmov.f32	s17, s15
 802006e:	eeb0 8a47 	vmov.f32	s16, s14
 8020072:	e6d2      	b.n	801fe1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8020074:	b149      	cbz	r1, 802008a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8020076:	5cba      	ldrb	r2, [r7, r2]
 8020078:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802007c:	4422      	add	r2, r4
 802007e:	4660      	mov	r0, ip
 8020080:	4666      	mov	r6, ip
 8020082:	e734      	b.n	801feee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8020084:	4660      	mov	r0, ip
 8020086:	4662      	mov	r2, ip
 8020088:	e731      	b.n	801feee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 802008a:	4660      	mov	r0, ip
 802008c:	4662      	mov	r2, ip
 802008e:	e7f7      	b.n	8020080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8020090:	f110 0c01 	adds.w	ip, r0, #1
 8020094:	f53f af74 	bmi.w	801ff80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8020098:	4562      	cmp	r2, ip
 802009a:	f6ff af71 	blt.w	801ff80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 802009e:	f116 0c01 	adds.w	ip, r6, #1
 80200a2:	f53f af6d 	bmi.w	801ff80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80200a6:	4567      	cmp	r7, ip
 80200a8:	f6ff af6a 	blt.w	801ff80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80200ac:	b23f      	sxth	r7, r7
 80200ae:	b212      	sxth	r2, r2
 80200b0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80200b4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80200b8:	9200      	str	r2, [sp, #0]
 80200ba:	9701      	str	r7, [sp, #4]
 80200bc:	4623      	mov	r3, r4
 80200be:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80200c2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80200c4:	f7ff fdc2 	bl	801fc4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80200c8:	e75a      	b.n	801ff80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80200ca:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80200cc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80200d0:	ea4f 462b 	mov.w	r6, fp, asr #16
 80200d4:	1428      	asrs	r0, r5, #16
 80200d6:	fb02 6000 	mla	r0, r2, r0, r6
 80200da:	9e08      	ldr	r6, [sp, #32]
 80200dc:	f816 8000 	ldrb.w	r8, [r6, r0]
 80200e0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80200e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80200e8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80200ec:	1837      	adds	r7, r6, r0
 80200ee:	eb04 0c08 	add.w	ip, r4, r8
 80200f2:	2b00      	cmp	r3, #0
 80200f4:	d060      	beq.n	80201b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80200f6:	787e      	ldrb	r6, [r7, #1]
 80200f8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80200fc:	4426      	add	r6, r4
 80200fe:	2900      	cmp	r1, #0
 8020100:	d062      	beq.n	80201c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8020102:	18b8      	adds	r0, r7, r2
 8020104:	5cba      	ldrb	r2, [r7, r2]
 8020106:	7840      	ldrb	r0, [r0, #1]
 8020108:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802010c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020110:	4422      	add	r2, r4
 8020112:	4420      	add	r0, r4
 8020114:	b29b      	uxth	r3, r3
 8020116:	b289      	uxth	r1, r1
 8020118:	fb03 f901 	mul.w	r9, r3, r1
 802011c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020120:	011b      	lsls	r3, r3, #4
 8020122:	b289      	uxth	r1, r1
 8020124:	78b7      	ldrb	r7, [r6, #2]
 8020126:	f89c a002 	ldrb.w	sl, [ip, #2]
 802012a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802012e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020132:	eba3 0309 	sub.w	r3, r3, r9
 8020136:	b29b      	uxth	r3, r3
 8020138:	ebae 0e01 	sub.w	lr, lr, r1
 802013c:	fa1f fe8e 	uxth.w	lr, lr
 8020140:	435f      	muls	r7, r3
 8020142:	fb0e 770a 	mla	r7, lr, sl, r7
 8020146:	f892 a002 	ldrb.w	sl, [r2, #2]
 802014a:	fb01 770a 	mla	r7, r1, sl, r7
 802014e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020152:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020156:	f814 7008 	ldrb.w	r7, [r4, r8]
 802015a:	f896 8000 	ldrb.w	r8, [r6]
 802015e:	7876      	ldrb	r6, [r6, #1]
 8020160:	fb03 f808 	mul.w	r8, r3, r8
 8020164:	fb0e 8807 	mla	r8, lr, r7, r8
 8020168:	7817      	ldrb	r7, [r2, #0]
 802016a:	fb01 8807 	mla	r8, r1, r7, r8
 802016e:	7807      	ldrb	r7, [r0, #0]
 8020170:	fb09 8707 	mla	r7, r9, r7, r8
 8020174:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020178:	4373      	muls	r3, r6
 802017a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802017e:	7856      	ldrb	r6, [r2, #1]
 8020180:	ea47 070a 	orr.w	r7, r7, sl
 8020184:	fb0e 330c 	mla	r3, lr, ip, r3
 8020188:	f890 a001 	ldrb.w	sl, [r0, #1]
 802018c:	fb01 3306 	mla	r3, r1, r6, r3
 8020190:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020194:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020198:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802019a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802019e:	ea47 070a 	orr.w	r7, r7, sl
 80201a2:	f823 7b02 	strh.w	r7, [r3], #2
 80201a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80201a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80201aa:	449b      	add	fp, r3
 80201ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80201ae:	441d      	add	r5, r3
 80201b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80201b2:	3b01      	subs	r3, #1
 80201b4:	9309      	str	r3, [sp, #36]	; 0x24
 80201b6:	e714      	b.n	801ffe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80201b8:	b149      	cbz	r1, 80201ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80201ba:	5cba      	ldrb	r2, [r7, r2]
 80201bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80201c0:	4422      	add	r2, r4
 80201c2:	4660      	mov	r0, ip
 80201c4:	4666      	mov	r6, ip
 80201c6:	e7a5      	b.n	8020114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80201c8:	4660      	mov	r0, ip
 80201ca:	4662      	mov	r2, ip
 80201cc:	e7a2      	b.n	8020114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80201ce:	4660      	mov	r0, ip
 80201d0:	4662      	mov	r2, ip
 80201d2:	e7f7      	b.n	80201c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 80201d4:	b00f      	add	sp, #60	; 0x3c
 80201d6:	ecbd 8b08 	vpop	{d8-d11}
 80201da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080201e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80201e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201e4:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 80201e8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80201ec:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80201f0:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80201f4:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 80201f8:	fb04 560c 	mla	r6, r4, ip, r5
 80201fc:	2c00      	cmp	r4, #0
 80201fe:	eb02 0e06 	add.w	lr, r2, r6
 8020202:	db3d      	blt.n	8020280 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8020204:	45a0      	cmp	r8, r4
 8020206:	dd3b      	ble.n	8020280 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8020208:	2d00      	cmp	r5, #0
 802020a:	db37      	blt.n	802027c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 802020c:	45ac      	cmp	ip, r5
 802020e:	dd35      	ble.n	802027c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8020210:	5d92      	ldrb	r2, [r2, r6]
 8020212:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020216:	1c6e      	adds	r6, r5, #1
 8020218:	d435      	bmi.n	8020286 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 802021a:	45b4      	cmp	ip, r6
 802021c:	dd33      	ble.n	8020286 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 802021e:	b3a0      	cbz	r0, 802028a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8020220:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8020224:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8020228:	3401      	adds	r4, #1
 802022a:	d432      	bmi.n	8020292 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 802022c:	45a0      	cmp	r8, r4
 802022e:	dd30      	ble.n	8020292 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8020230:	b397      	cbz	r7, 8020298 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8020232:	2d00      	cmp	r5, #0
 8020234:	db2b      	blt.n	802028e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8020236:	45ac      	cmp	ip, r5
 8020238:	dd29      	ble.n	802028e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 802023a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 802023e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8020242:	3501      	adds	r5, #1
 8020244:	d42b      	bmi.n	802029e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8020246:	45ac      	cmp	ip, r5
 8020248:	dd29      	ble.n	802029e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 802024a:	b350      	cbz	r0, 80202a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 802024c:	44f4      	add	ip, lr
 802024e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020252:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8020256:	280f      	cmp	r0, #15
 8020258:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 802025c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8020260:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020264:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8020268:	d801      	bhi.n	802026e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 802026a:	2f0f      	cmp	r7, #15
 802026c:	d91b      	bls.n	80202a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 802026e:	4b8d      	ldr	r3, [pc, #564]	; (80204a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8020270:	4a8d      	ldr	r2, [pc, #564]	; (80204a8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8020272:	488e      	ldr	r0, [pc, #568]	; (80204ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8020274:	f240 11f9 	movw	r1, #505	; 0x1f9
 8020278:	f007 f91a 	bl	80274b0 <__assert_func>
 802027c:	2200      	movs	r2, #0
 802027e:	e7ca      	b.n	8020216 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8020280:	2600      	movs	r6, #0
 8020282:	4632      	mov	r2, r6
 8020284:	e7d0      	b.n	8020228 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8020286:	2600      	movs	r6, #0
 8020288:	e7ce      	b.n	8020228 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 802028a:	4606      	mov	r6, r0
 802028c:	e7cc      	b.n	8020228 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 802028e:	2400      	movs	r4, #0
 8020290:	e7d7      	b.n	8020242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 8020292:	2300      	movs	r3, #0
 8020294:	461c      	mov	r4, r3
 8020296:	e7de      	b.n	8020256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8020298:	463b      	mov	r3, r7
 802029a:	463c      	mov	r4, r7
 802029c:	e7db      	b.n	8020256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 802029e:	2300      	movs	r3, #0
 80202a0:	e7d9      	b.n	8020256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80202a2:	4603      	mov	r3, r0
 80202a4:	e7d7      	b.n	8020256 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80202a6:	b280      	uxth	r0, r0
 80202a8:	b2bf      	uxth	r7, r7
 80202aa:	fb07 fe00 	mul.w	lr, r7, r0
 80202ae:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80202b2:	0100      	lsls	r0, r0, #4
 80202b4:	eba0 0c0e 	sub.w	ip, r0, lr
 80202b8:	b2bf      	uxth	r7, r7
 80202ba:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80202be:	fa1f fc8c 	uxth.w	ip, ip
 80202c2:	1bed      	subs	r5, r5, r7
 80202c4:	b2ad      	uxth	r5, r5
 80202c6:	fb0a f00c 	mul.w	r0, sl, ip
 80202ca:	fb0b 0005 	mla	r0, fp, r5, r0
 80202ce:	fb07 0009 	mla	r0, r7, r9, r0
 80202d2:	fb0e 0008 	mla	r0, lr, r8, r0
 80202d6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80202da:	9001      	str	r0, [sp, #4]
 80202dc:	2800      	cmp	r0, #0
 80202de:	f000 80de 	beq.w	802049e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 80202e2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80202e6:	d018      	beq.n	802031a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80202e8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80202ec:	fb0b f000 	mul.w	r0, fp, r0
 80202f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80202f4:	fb0b fb02 	mul.w	fp, fp, r2
 80202f8:	0a02      	lsrs	r2, r0, #8
 80202fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80202fe:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8020302:	4402      	add	r2, r0
 8020304:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8020308:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802030c:	0a12      	lsrs	r2, r2, #8
 802030e:	0a00      	lsrs	r0, r0, #8
 8020310:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020314:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020318:	4302      	orrs	r2, r0
 802031a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802031e:	d01a      	beq.n	8020356 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8020320:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8020324:	fb0a f000 	mul.w	r0, sl, r0
 8020328:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802032c:	fb0a fa06 	mul.w	sl, sl, r6
 8020330:	0a06      	lsrs	r6, r0, #8
 8020332:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8020336:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802033a:	4406      	add	r6, r0
 802033c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8020340:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8020344:	0a36      	lsrs	r6, r6, #8
 8020346:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802034a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802034e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020352:	ea46 060a 	orr.w	r6, r6, sl
 8020356:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802035a:	d01b      	beq.n	8020394 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 802035c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8020360:	fb09 fa0a 	mul.w	sl, r9, sl
 8020364:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020368:	fb09 f004 	mul.w	r0, r9, r4
 802036c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8020370:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020374:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020378:	f500 7980 	add.w	r9, r0, #256	; 0x100
 802037c:	4454      	add	r4, sl
 802037e:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8020382:	0a24      	lsrs	r4, r4, #8
 8020384:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020388:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802038c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020390:	ea44 0409 	orr.w	r4, r4, r9
 8020394:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020398:	d01b      	beq.n	80203d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 802039a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 802039e:	fb08 f909 	mul.w	r9, r8, r9
 80203a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80203a6:	fb08 f003 	mul.w	r0, r8, r3
 80203aa:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80203ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80203b2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80203b6:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80203ba:	444b      	add	r3, r9
 80203bc:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80203c0:	0a1b      	lsrs	r3, r3, #8
 80203c2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80203c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80203ca:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80203ce:	ea43 0308 	orr.w	r3, r3, r8
 80203d2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80203d6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80203da:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80203de:	fb0c f808 	mul.w	r8, ip, r8
 80203e2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80203e6:	fb0c f606 	mul.w	r6, ip, r6
 80203ea:	fb05 8909 	mla	r9, r5, r9, r8
 80203ee:	fb05 6502 	mla	r5, r5, r2, r6
 80203f2:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80203f6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80203fa:	9a01      	ldr	r2, [sp, #4]
 80203fc:	8808      	ldrh	r0, [r1, #0]
 80203fe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020402:	fb07 9908 	mla	r9, r7, r8, r9
 8020406:	fb07 5704 	mla	r7, r7, r4, r5
 802040a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 802040e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020412:	b2b6      	uxth	r6, r6
 8020414:	fb0e 9808 	mla	r8, lr, r8, r9
 8020418:	fb0e 7e03 	mla	lr, lr, r3, r7
 802041c:	4372      	muls	r2, r6
 802041e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020422:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020426:	1c53      	adds	r3, r2, #1
 8020428:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 802042c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8020430:	ea48 0e0e 	orr.w	lr, r8, lr
 8020434:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020438:	1205      	asrs	r5, r0, #8
 802043a:	ea4f 421e 	mov.w	r2, lr, lsr #16
 802043e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020442:	b2db      	uxtb	r3, r3
 8020444:	fb12 f206 	smulbb	r2, r2, r6
 8020448:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802044c:	fb05 2503 	mla	r5, r5, r3, r2
 8020450:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8020454:	10c2      	asrs	r2, r0, #3
 8020456:	fa5f fe8e 	uxtb.w	lr, lr
 802045a:	00c0      	lsls	r0, r0, #3
 802045c:	fb14 f406 	smulbb	r4, r4, r6
 8020460:	b2c0      	uxtb	r0, r0
 8020462:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020466:	fb1e fe06 	smulbb	lr, lr, r6
 802046a:	fb02 4203 	mla	r2, r2, r3, r4
 802046e:	b2ad      	uxth	r5, r5
 8020470:	fb00 e303 	mla	r3, r0, r3, lr
 8020474:	b298      	uxth	r0, r3
 8020476:	b294      	uxth	r4, r2
 8020478:	1c6b      	adds	r3, r5, #1
 802047a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802047e:	1c62      	adds	r2, r4, #1
 8020480:	1c43      	adds	r3, r0, #1
 8020482:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020486:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802048a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802048e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020492:	0952      	lsrs	r2, r2, #5
 8020494:	432b      	orrs	r3, r5
 8020496:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802049a:	4313      	orrs	r3, r2
 802049c:	800b      	strh	r3, [r1, #0]
 802049e:	b003      	add	sp, #12
 80204a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80204a4:	0802d9a3 	.word	0x0802d9a3
 80204a8:	0802ded2 	.word	0x0802ded2
 80204ac:	0802d970 	.word	0x0802d970

080204b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80204b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204b4:	ed2d 8b08 	vpush	{d8-d11}
 80204b8:	b09f      	sub	sp, #124	; 0x7c
 80204ba:	eeb0 aa40 	vmov.f32	s20, s0
 80204be:	921b      	str	r2, [sp, #108]	; 0x6c
 80204c0:	9309      	str	r3, [sp, #36]	; 0x24
 80204c2:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80204c4:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80204c8:	931c      	str	r3, [sp, #112]	; 0x70
 80204ca:	9119      	str	r1, [sp, #100]	; 0x64
 80204cc:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80204d0:	901d      	str	r0, [sp, #116]	; 0x74
 80204d2:	6850      	ldr	r0, [r2, #4]
 80204d4:	6812      	ldr	r2, [r2, #0]
 80204d6:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80204d8:	fb00 1303 	mla	r3, r0, r3, r1
 80204dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80204e0:	930c      	str	r3, [sp, #48]	; 0x30
 80204e2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80204e4:	681b      	ldr	r3, [r3, #0]
 80204e6:	9312      	str	r3, [sp, #72]	; 0x48
 80204e8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80204ea:	685e      	ldr	r6, [r3, #4]
 80204ec:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80204f0:	930d      	str	r3, [sp, #52]	; 0x34
 80204f2:	eef0 9a60 	vmov.f32	s19, s1
 80204f6:	eeb0 9a41 	vmov.f32	s18, s2
 80204fa:	eeb0 8a62 	vmov.f32	s16, s5
 80204fe:	eef0 8a43 	vmov.f32	s17, s6
 8020502:	eef0 ba44 	vmov.f32	s23, s8
 8020506:	eeb0 ba64 	vmov.f32	s22, s9
 802050a:	eef0 aa45 	vmov.f32	s21, s10
 802050e:	3604      	adds	r6, #4
 8020510:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020512:	2b00      	cmp	r3, #0
 8020514:	dc03      	bgt.n	802051e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020516:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020518:	2b00      	cmp	r3, #0
 802051a:	f340 8388 	ble.w	8020c2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802051e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8020520:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020524:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020528:	1e48      	subs	r0, r1, #1
 802052a:	1e57      	subs	r7, r2, #1
 802052c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802052e:	2b00      	cmp	r3, #0
 8020530:	f340 8195 	ble.w	802085e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8020534:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020536:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802053a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802053e:	d406      	bmi.n	802054e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020540:	4584      	cmp	ip, r0
 8020542:	da04      	bge.n	802054e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020544:	2b00      	cmp	r3, #0
 8020546:	db02      	blt.n	802054e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020548:	42bb      	cmp	r3, r7
 802054a:	f2c0 8189 	blt.w	8020860 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 802054e:	f11c 0c01 	adds.w	ip, ip, #1
 8020552:	f100 8177 	bmi.w	8020844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8020556:	4561      	cmp	r1, ip
 8020558:	f2c0 8174 	blt.w	8020844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802055c:	3301      	adds	r3, #1
 802055e:	f100 8171 	bmi.w	8020844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8020562:	429a      	cmp	r2, r3
 8020564:	f2c0 816e 	blt.w	8020844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8020568:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802056a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802056c:	931a      	str	r3, [sp, #104]	; 0x68
 802056e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020570:	2b00      	cmp	r3, #0
 8020572:	f340 8193 	ble.w	802089c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020576:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020578:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802057c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 802057e:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020582:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020584:	141b      	asrs	r3, r3, #16
 8020586:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802058a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802058e:	f100 81d6 	bmi.w	802093e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020592:	f100 38ff 	add.w	r8, r0, #4294967295
 8020596:	4543      	cmp	r3, r8
 8020598:	f280 81d1 	bge.w	802093e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802059c:	f1bc 0f00 	cmp.w	ip, #0
 80205a0:	f2c0 81cd 	blt.w	802093e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80205a4:	f10e 38ff 	add.w	r8, lr, #4294967295
 80205a8:	45c4      	cmp	ip, r8
 80205aa:	f280 81c8 	bge.w	802093e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80205ae:	b200      	sxth	r0, r0
 80205b0:	fb0c 3300 	mla	r3, ip, r0, r3
 80205b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80205b6:	eb04 0803 	add.w	r8, r4, r3
 80205ba:	5ce3      	ldrb	r3, [r4, r3]
 80205bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80205c0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80205c4:	2a00      	cmp	r2, #0
 80205c6:	f000 81af 	beq.w	8020928 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80205ca:	f898 c001 	ldrb.w	ip, [r8, #1]
 80205ce:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80205d2:	940e      	str	r4, [sp, #56]	; 0x38
 80205d4:	0e24      	lsrs	r4, r4, #24
 80205d6:	9415      	str	r4, [sp, #84]	; 0x54
 80205d8:	b179      	cbz	r1, 80205fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80205da:	eb08 0c00 	add.w	ip, r8, r0
 80205de:	f818 0000 	ldrb.w	r0, [r8, r0]
 80205e2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80205e6:	900a      	str	r0, [sp, #40]	; 0x28
 80205e8:	0e00      	lsrs	r0, r0, #24
 80205ea:	9013      	str	r0, [sp, #76]	; 0x4c
 80205ec:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80205f0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80205f4:	900f      	str	r0, [sp, #60]	; 0x3c
 80205f6:	0e00      	lsrs	r0, r0, #24
 80205f8:	9016      	str	r0, [sp, #88]	; 0x58
 80205fa:	b292      	uxth	r2, r2
 80205fc:	b289      	uxth	r1, r1
 80205fe:	fb02 f901 	mul.w	r9, r2, r1
 8020602:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020606:	0112      	lsls	r2, r2, #4
 8020608:	eba2 0809 	sub.w	r8, r2, r9
 802060c:	b289      	uxth	r1, r1
 802060e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020612:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020614:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020616:	fa1f f888 	uxth.w	r8, r8
 802061a:	1a52      	subs	r2, r2, r1
 802061c:	b292      	uxth	r2, r2
 802061e:	fb08 f000 	mul.w	r0, r8, r0
 8020622:	fb02 000e 	mla	r0, r2, lr, r0
 8020626:	fb01 0004 	mla	r0, r1, r4, r0
 802062a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802062c:	fb09 0004 	mla	r0, r9, r4, r0
 8020630:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020634:	2800      	cmp	r0, #0
 8020636:	f000 80fa 	beq.w	802082e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802063a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802063e:	d01b      	beq.n	8020678 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020640:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020644:	fb0e fa0a 	mul.w	sl, lr, sl
 8020648:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802064c:	fb0e fe03 	mul.w	lr, lr, r3
 8020650:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020654:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020658:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802065c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020660:	4453      	add	r3, sl
 8020662:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020666:	0a1b      	lsrs	r3, r3, #8
 8020668:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802066c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020670:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020674:	ea43 030c 	orr.w	r3, r3, ip
 8020678:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802067a:	2cff      	cmp	r4, #255	; 0xff
 802067c:	d021      	beq.n	80206c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802067e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020680:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020684:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020686:	fb04 fb0b 	mul.w	fp, r4, fp
 802068a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802068c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020690:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020692:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020696:	fb04 fa0a 	mul.w	sl, r4, sl
 802069a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802069e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80206a2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80206a6:	44de      	add	lr, fp
 80206a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80206ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80206b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80206b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80206b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80206bc:	ea4e 040a 	orr.w	r4, lr, sl
 80206c0:	940e      	str	r4, [sp, #56]	; 0x38
 80206c2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80206c4:	2cff      	cmp	r4, #255	; 0xff
 80206c6:	d021      	beq.n	802070c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80206c8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80206ca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80206ce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80206d0:	fb04 fb0b 	mul.w	fp, r4, fp
 80206d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80206d6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80206da:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80206dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80206e0:	fb04 fa0a 	mul.w	sl, r4, sl
 80206e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80206e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80206ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80206f0:	44de      	add	lr, fp
 80206f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80206f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80206fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80206fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020702:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020706:	ea4e 040a 	orr.w	r4, lr, sl
 802070a:	940a      	str	r4, [sp, #40]	; 0x28
 802070c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802070e:	2cff      	cmp	r4, #255	; 0xff
 8020710:	d021      	beq.n	8020756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8020712:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020714:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020718:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802071a:	fb04 fb0b 	mul.w	fp, r4, fp
 802071e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020720:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020724:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020726:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802072a:	fb04 fa0a 	mul.w	sl, r4, sl
 802072e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020732:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020736:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802073a:	44de      	add	lr, fp
 802073c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020740:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020744:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020748:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802074c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020750:	ea4e 040a 	orr.w	r4, lr, sl
 8020754:	940f      	str	r4, [sp, #60]	; 0x3c
 8020756:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020758:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802075c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802075e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020762:	fb08 fc0c 	mul.w	ip, r8, ip
 8020766:	fb02 cc0e 	mla	ip, r2, lr, ip
 802076a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802076e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020770:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020774:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020778:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802077a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802077e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020782:	fb08 f80e 	mul.w	r8, r8, lr
 8020786:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802078a:	fb02 8303 	mla	r3, r2, r3, r8
 802078e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020790:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020792:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020796:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020798:	fb01 330a 	mla	r3, r1, sl, r3
 802079c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80207a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80207a2:	fb09 3901 	mla	r9, r9, r1, r3
 80207a6:	4342      	muls	r2, r0
 80207a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80207b0:	883b      	ldrh	r3, [r7, #0]
 80207b2:	1c50      	adds	r0, r2, #1
 80207b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207b8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80207bc:	ea4c 0c09 	orr.w	ip, ip, r9
 80207c0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80207c4:	1219      	asrs	r1, r3, #8
 80207c6:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80207ca:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80207ce:	b2c0      	uxtb	r0, r0
 80207d0:	fb12 f204 	smulbb	r2, r2, r4
 80207d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80207d8:	fb01 2100 	mla	r1, r1, r0, r2
 80207dc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80207e0:	10da      	asrs	r2, r3, #3
 80207e2:	fa5f fc8c 	uxtb.w	ip, ip
 80207e6:	00db      	lsls	r3, r3, #3
 80207e8:	fb1c fc04 	smulbb	ip, ip, r4
 80207ec:	b2db      	uxtb	r3, r3
 80207ee:	b289      	uxth	r1, r1
 80207f0:	fb03 c300 	mla	r3, r3, r0, ip
 80207f4:	fa1f fc83 	uxth.w	ip, r3
 80207f8:	1c4b      	adds	r3, r1, #1
 80207fa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80207fe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020802:	fb1e fe04 	smulbb	lr, lr, r4
 8020806:	f10c 0301 	add.w	r3, ip, #1
 802080a:	fb02 e200 	mla	r2, r2, r0, lr
 802080e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020812:	b292      	uxth	r2, r2
 8020814:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020818:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802081c:	430b      	orrs	r3, r1
 802081e:	1c51      	adds	r1, r2, #1
 8020820:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020824:	0952      	lsrs	r2, r2, #5
 8020826:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802082a:	4313      	orrs	r3, r2
 802082c:	803b      	strh	r3, [r7, #0]
 802082e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8020830:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8020832:	441a      	add	r2, r3
 8020834:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020836:	9231      	str	r2, [sp, #196]	; 0xc4
 8020838:	441d      	add	r5, r3
 802083a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802083c:	3b01      	subs	r3, #1
 802083e:	3702      	adds	r7, #2
 8020840:	931a      	str	r3, [sp, #104]	; 0x68
 8020842:	e694      	b.n	802056e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8020844:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8020846:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020848:	441c      	add	r4, r3
 802084a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802084c:	9431      	str	r4, [sp, #196]	; 0xc4
 802084e:	441d      	add	r5, r3
 8020850:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020852:	3b01      	subs	r3, #1
 8020854:	9309      	str	r3, [sp, #36]	; 0x24
 8020856:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020858:	3302      	adds	r3, #2
 802085a:	930c      	str	r3, [sp, #48]	; 0x30
 802085c:	e666      	b.n	802052c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802085e:	d024      	beq.n	80208aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8020860:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020862:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8020864:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020866:	3b01      	subs	r3, #1
 8020868:	fb00 4003 	mla	r0, r0, r3, r4
 802086c:	1400      	asrs	r0, r0, #16
 802086e:	f53f ae7b 	bmi.w	8020568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020872:	3901      	subs	r1, #1
 8020874:	4288      	cmp	r0, r1
 8020876:	f6bf ae77 	bge.w	8020568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802087a:	9934      	ldr	r1, [sp, #208]	; 0xd0
 802087c:	fb01 5303 	mla	r3, r1, r3, r5
 8020880:	141b      	asrs	r3, r3, #16
 8020882:	f53f ae71 	bmi.w	8020568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8020886:	3a01      	subs	r2, #1
 8020888:	4293      	cmp	r3, r2
 802088a:	f6bf ae6d 	bge.w	8020568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802088e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020892:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020896:	f1bb 0f00 	cmp.w	fp, #0
 802089a:	dc70      	bgt.n	802097e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 802089c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802089e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80208a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80208a4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80208a8:	930c      	str	r3, [sp, #48]	; 0x30
 80208aa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80208ac:	2b00      	cmp	r3, #0
 80208ae:	f340 81be 	ble.w	8020c2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80208b2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80208b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80208ba:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80208be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80208c0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80208c4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80208c8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80208cc:	eef0 6a48 	vmov.f32	s13, s16
 80208d0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80208d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80208d8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80208dc:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80208e0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80208e4:	eef0 6a68 	vmov.f32	s13, s17
 80208e8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80208ec:	ee18 2a10 	vmov	r2, s16
 80208f0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80208f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80208f8:	ee18 2a90 	vmov	r2, s17
 80208fc:	9333      	str	r3, [sp, #204]	; 0xcc
 80208fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020900:	fb92 f3f3 	sdiv	r3, r2, r3
 8020904:	9334      	str	r3, [sp, #208]	; 0xd0
 8020906:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020908:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802090a:	3b01      	subs	r3, #1
 802090c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020910:	9319      	str	r3, [sp, #100]	; 0x64
 8020912:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020914:	bf08      	it	eq
 8020916:	4613      	moveq	r3, r2
 8020918:	ee16 5a90 	vmov	r5, s13
 802091c:	9309      	str	r3, [sp, #36]	; 0x24
 802091e:	eef0 8a67 	vmov.f32	s17, s15
 8020922:	eeb0 8a47 	vmov.f32	s16, s14
 8020926:	e5f3      	b.n	8020510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020928:	2900      	cmp	r1, #0
 802092a:	f43f ae66 	beq.w	80205fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802092e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020932:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020936:	900a      	str	r0, [sp, #40]	; 0x28
 8020938:	0e00      	lsrs	r0, r0, #24
 802093a:	9013      	str	r0, [sp, #76]	; 0x4c
 802093c:	e65d      	b.n	80205fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802093e:	f113 0801 	adds.w	r8, r3, #1
 8020942:	f53f af74 	bmi.w	802082e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020946:	4540      	cmp	r0, r8
 8020948:	f6ff af71 	blt.w	802082e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802094c:	f11c 0801 	adds.w	r8, ip, #1
 8020950:	f53f af6d 	bmi.w	802082e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020954:	45c6      	cmp	lr, r8
 8020956:	f6ff af6a 	blt.w	802082e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802095a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802095c:	9302      	str	r3, [sp, #8]
 802095e:	b200      	sxth	r0, r0
 8020960:	fa0f f38e 	sxth.w	r3, lr
 8020964:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020968:	e9cd c203 	strd	ip, r2, [sp, #12]
 802096c:	9301      	str	r3, [sp, #4]
 802096e:	9000      	str	r0, [sp, #0]
 8020970:	4633      	mov	r3, r6
 8020972:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020974:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020976:	4639      	mov	r1, r7
 8020978:	f7ff fc32 	bl	80201e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802097c:	e757      	b.n	802082e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802097e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8020980:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8020982:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020986:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8020988:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802098c:	1427      	asrs	r7, r4, #16
 802098e:	142b      	asrs	r3, r5, #16
 8020990:	fb01 7303 	mla	r3, r1, r3, r7
 8020994:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020996:	18e7      	adds	r7, r4, r3
 8020998:	5ce3      	ldrb	r3, [r4, r3]
 802099a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802099e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80209a2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80209a6:	2a00      	cmp	r2, #0
 80209a8:	f000 8137 	beq.w	8020c1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80209ac:	f897 e001 	ldrb.w	lr, [r7, #1]
 80209b0:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80209b4:	9410      	str	r4, [sp, #64]	; 0x40
 80209b6:	0e24      	lsrs	r4, r4, #24
 80209b8:	9417      	str	r4, [sp, #92]	; 0x5c
 80209ba:	b170      	cbz	r0, 80209da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80209bc:	eb07 0e01 	add.w	lr, r7, r1
 80209c0:	5c79      	ldrb	r1, [r7, r1]
 80209c2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80209c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80209c8:	0e09      	lsrs	r1, r1, #24
 80209ca:	9114      	str	r1, [sp, #80]	; 0x50
 80209cc:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80209d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80209d4:	9111      	str	r1, [sp, #68]	; 0x44
 80209d6:	0e09      	lsrs	r1, r1, #24
 80209d8:	9118      	str	r1, [sp, #96]	; 0x60
 80209da:	b292      	uxth	r2, r2
 80209dc:	b280      	uxth	r0, r0
 80209de:	fb02 f800 	mul.w	r8, r2, r0
 80209e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80209e6:	0112      	lsls	r2, r2, #4
 80209e8:	eba2 0e08 	sub.w	lr, r2, r8
 80209ec:	b280      	uxth	r0, r0
 80209ee:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80209f2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80209f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80209f6:	fa1f fe8e 	uxth.w	lr, lr
 80209fa:	1a12      	subs	r2, r2, r0
 80209fc:	b292      	uxth	r2, r2
 80209fe:	fb0e f101 	mul.w	r1, lr, r1
 8020a02:	fb02 110c 	mla	r1, r2, ip, r1
 8020a06:	fb00 1104 	mla	r1, r0, r4, r1
 8020a0a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020a0c:	fb08 1104 	mla	r1, r8, r4, r1
 8020a10:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020a14:	2900      	cmp	r1, #0
 8020a16:	f000 80f5 	beq.w	8020c04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8020a1a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020a1e:	d019      	beq.n	8020a54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8020a20:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020a24:	fb0c fa0a 	mul.w	sl, ip, sl
 8020a28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a2c:	fb0c fc03 	mul.w	ip, ip, r3
 8020a30:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020a34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020a38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020a3c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020a40:	4453      	add	r3, sl
 8020a42:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020a46:	0a1b      	lsrs	r3, r3, #8
 8020a48:	0a3f      	lsrs	r7, r7, #8
 8020a4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020a4e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020a52:	433b      	orrs	r3, r7
 8020a54:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020a56:	2cff      	cmp	r4, #255	; 0xff
 8020a58:	d020      	beq.n	8020a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8020a5a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a5c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020a60:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020a62:	4367      	muls	r7, r4
 8020a64:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a66:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020a6a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020a6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020a70:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a74:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020a78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020a7c:	44bc      	add	ip, r7
 8020a7e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020a82:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020a86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020a92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a96:	ea4c 040a 	orr.w	r4, ip, sl
 8020a9a:	9410      	str	r4, [sp, #64]	; 0x40
 8020a9c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020a9e:	2cff      	cmp	r4, #255	; 0xff
 8020aa0:	d020      	beq.n	8020ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8020aa2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020aa4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020aa8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020aaa:	4367      	muls	r7, r4
 8020aac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020aae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ab2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ab4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ab8:	fb04 fa0a 	mul.w	sl, r4, sl
 8020abc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ac0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ac4:	44bc      	add	ip, r7
 8020ac6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020aca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ace:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ad2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ad6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ada:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ade:	ea4c 040a 	orr.w	r4, ip, sl
 8020ae2:	940b      	str	r4, [sp, #44]	; 0x2c
 8020ae4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020ae6:	2cff      	cmp	r4, #255	; 0xff
 8020ae8:	d020      	beq.n	8020b2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8020aea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020aec:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020af0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020af2:	4367      	muls	r7, r4
 8020af4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020af6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020afa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b00:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020b08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b0c:	44bc      	add	ip, r7
 8020b0e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020b12:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b26:	ea4c 040a 	orr.w	r4, ip, sl
 8020b2a:	9411      	str	r4, [sp, #68]	; 0x44
 8020b2c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b2e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020b32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020b34:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020b38:	fb0e f707 	mul.w	r7, lr, r7
 8020b3c:	fb02 770c 	mla	r7, r2, ip, r7
 8020b40:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020b44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020b46:	fb00 770c 	mla	r7, r0, ip, r7
 8020b4a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020b4e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b50:	fb08 770c 	mla	r7, r8, ip, r7
 8020b54:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020b58:	fb0e fe0c 	mul.w	lr, lr, ip
 8020b5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b60:	fb02 e303 	mla	r3, r2, r3, lr
 8020b64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020b66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020b68:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020b6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020b6e:	fb00 330a 	mla	r3, r0, sl, r3
 8020b72:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020b76:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020b7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020b7c:	f8b9 0000 	ldrh.w	r0, [r9]
 8020b80:	434b      	muls	r3, r1
 8020b82:	0a3f      	lsrs	r7, r7, #8
 8020b84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020b8c:	1c59      	adds	r1, r3, #1
 8020b8e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020b92:	ea47 070c 	orr.w	r7, r7, ip
 8020b96:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020b9a:	1202      	asrs	r2, r0, #8
 8020b9c:	0c3b      	lsrs	r3, r7, #16
 8020b9e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020ba2:	b2c9      	uxtb	r1, r1
 8020ba4:	fb13 f304 	smulbb	r3, r3, r4
 8020ba8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020bac:	fb02 3201 	mla	r2, r2, r1, r3
 8020bb0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020bb4:	10c3      	asrs	r3, r0, #3
 8020bb6:	b2ff      	uxtb	r7, r7
 8020bb8:	00c0      	lsls	r0, r0, #3
 8020bba:	b292      	uxth	r2, r2
 8020bbc:	fb1c fc04 	smulbb	ip, ip, r4
 8020bc0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020bc4:	b2c0      	uxtb	r0, r0
 8020bc6:	fb17 f704 	smulbb	r7, r7, r4
 8020bca:	fb03 c301 	mla	r3, r3, r1, ip
 8020bce:	fb00 7001 	mla	r0, r0, r1, r7
 8020bd2:	f102 0c01 	add.w	ip, r2, #1
 8020bd6:	b280      	uxth	r0, r0
 8020bd8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020bdc:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020be0:	1c42      	adds	r2, r0, #1
 8020be2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020be6:	b29b      	uxth	r3, r3
 8020be8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020bec:	ea42 020c 	orr.w	r2, r2, ip
 8020bf0:	f103 0c01 	add.w	ip, r3, #1
 8020bf4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020bf8:	095b      	lsrs	r3, r3, #5
 8020bfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020bfe:	431a      	orrs	r2, r3
 8020c00:	f8a9 2000 	strh.w	r2, [r9]
 8020c04:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8020c06:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8020c08:	441a      	add	r2, r3
 8020c0a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020c0c:	9231      	str	r2, [sp, #196]	; 0xc4
 8020c0e:	f109 0902 	add.w	r9, r9, #2
 8020c12:	441d      	add	r5, r3
 8020c14:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c18:	e63d      	b.n	8020896 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020c1a:	2800      	cmp	r0, #0
 8020c1c:	f43f aedd 	beq.w	80209da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8020c20:	5c79      	ldrb	r1, [r7, r1]
 8020c22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c26:	910b      	str	r1, [sp, #44]	; 0x2c
 8020c28:	0e09      	lsrs	r1, r1, #24
 8020c2a:	9114      	str	r1, [sp, #80]	; 0x50
 8020c2c:	e6d5      	b.n	80209da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8020c2e:	b01f      	add	sp, #124	; 0x7c
 8020c30:	ecbd 8b08 	vpop	{d8-d11}
 8020c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020c38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c3c:	880e      	ldrh	r6, [r1, #0]
 8020c3e:	b085      	sub	sp, #20
 8020c40:	ea4f 2826 	mov.w	r8, r6, asr #8
 8020c44:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8020c48:	4691      	mov	r9, r2
 8020c4a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020c4e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8020c52:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8020c56:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8020c5a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8020c5e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8020c62:	9200      	str	r2, [sp, #0]
 8020c64:	00f6      	lsls	r6, r6, #3
 8020c66:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8020c6a:	9201      	str	r2, [sp, #4]
 8020c6c:	2c00      	cmp	r4, #0
 8020c6e:	b2f2      	uxtb	r2, r6
 8020c70:	fb04 560c 	mla	r6, r4, ip, r5
 8020c74:	9202      	str	r2, [sp, #8]
 8020c76:	eb09 0806 	add.w	r8, r9, r6
 8020c7a:	db3f      	blt.n	8020cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8020c7c:	45a6      	cmp	lr, r4
 8020c7e:	dd3d      	ble.n	8020cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8020c80:	2d00      	cmp	r5, #0
 8020c82:	db39      	blt.n	8020cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8020c84:	45ac      	cmp	ip, r5
 8020c86:	dd37      	ble.n	8020cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8020c88:	f819 2006 	ldrb.w	r2, [r9, r6]
 8020c8c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020c90:	1c6e      	adds	r6, r5, #1
 8020c92:	d436      	bmi.n	8020d02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8020c94:	45b4      	cmp	ip, r6
 8020c96:	dd34      	ble.n	8020d02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8020c98:	b3a8      	cbz	r0, 8020d06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8020c9a:	f898 6001 	ldrb.w	r6, [r8, #1]
 8020c9e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8020ca2:	3401      	adds	r4, #1
 8020ca4:	d433      	bmi.n	8020d0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8020ca6:	45a6      	cmp	lr, r4
 8020ca8:	dd31      	ble.n	8020d0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8020caa:	b39f      	cbz	r7, 8020d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8020cac:	2d00      	cmp	r5, #0
 8020cae:	eb08 0e0c 	add.w	lr, r8, ip
 8020cb2:	db2a      	blt.n	8020d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8020cb4:	45ac      	cmp	ip, r5
 8020cb6:	dd28      	ble.n	8020d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8020cb8:	f818 400c 	ldrb.w	r4, [r8, ip]
 8020cbc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8020cc0:	3501      	adds	r5, #1
 8020cc2:	d42a      	bmi.n	8020d1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8020cc4:	45ac      	cmp	ip, r5
 8020cc6:	dd28      	ble.n	8020d1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8020cc8:	b348      	cbz	r0, 8020d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8020cca:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8020cce:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8020cd2:	280f      	cmp	r0, #15
 8020cd4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8020cd8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8020cdc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020ce0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8020ce4:	d801      	bhi.n	8020cea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8020ce6:	2f0f      	cmp	r7, #15
 8020ce8:	d91b      	bls.n	8020d22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8020cea:	4b7d      	ldr	r3, [pc, #500]	; (8020ee0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8020cec:	4a7d      	ldr	r2, [pc, #500]	; (8020ee4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8020cee:	487e      	ldr	r0, [pc, #504]	; (8020ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8020cf0:	f240 11f9 	movw	r1, #505	; 0x1f9
 8020cf4:	f006 fbdc 	bl	80274b0 <__assert_func>
 8020cf8:	2200      	movs	r2, #0
 8020cfa:	e7c9      	b.n	8020c90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8020cfc:	2600      	movs	r6, #0
 8020cfe:	4632      	mov	r2, r6
 8020d00:	e7cf      	b.n	8020ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8020d02:	2600      	movs	r6, #0
 8020d04:	e7cd      	b.n	8020ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8020d06:	4606      	mov	r6, r0
 8020d08:	e7cb      	b.n	8020ca2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8020d0a:	2400      	movs	r4, #0
 8020d0c:	e7d8      	b.n	8020cc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8020d0e:	2300      	movs	r3, #0
 8020d10:	461c      	mov	r4, r3
 8020d12:	e7de      	b.n	8020cd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8020d14:	463b      	mov	r3, r7
 8020d16:	463c      	mov	r4, r7
 8020d18:	e7db      	b.n	8020cd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8020d1a:	2300      	movs	r3, #0
 8020d1c:	e7d9      	b.n	8020cd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8020d1e:	4603      	mov	r3, r0
 8020d20:	e7d7      	b.n	8020cd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8020d22:	b280      	uxth	r0, r0
 8020d24:	b2bf      	uxth	r7, r7
 8020d26:	fb00 fe07 	mul.w	lr, r0, r7
 8020d2a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8020d2e:	0100      	lsls	r0, r0, #4
 8020d30:	eba0 0c0e 	sub.w	ip, r0, lr
 8020d34:	b2bf      	uxth	r7, r7
 8020d36:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8020d3a:	fa1f fc8c 	uxth.w	ip, ip
 8020d3e:	1bed      	subs	r5, r5, r7
 8020d40:	b2ad      	uxth	r5, r5
 8020d42:	fb0c f00a 	mul.w	r0, ip, sl
 8020d46:	fb05 000b 	mla	r0, r5, fp, r0
 8020d4a:	fb07 0009 	mla	r0, r7, r9, r0
 8020d4e:	fb0e 0008 	mla	r0, lr, r8, r0
 8020d52:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020d56:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8020d5a:	9003      	str	r0, [sp, #12]
 8020d5c:	d018      	beq.n	8020d90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8020d5e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8020d62:	fb0b f000 	mul.w	r0, fp, r0
 8020d66:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020d6a:	fb0b fb02 	mul.w	fp, fp, r2
 8020d6e:	0a02      	lsrs	r2, r0, #8
 8020d70:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020d74:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8020d78:	4402      	add	r2, r0
 8020d7a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8020d7e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020d82:	0a12      	lsrs	r2, r2, #8
 8020d84:	0a00      	lsrs	r0, r0, #8
 8020d86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020d8a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020d8e:	4302      	orrs	r2, r0
 8020d90:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020d94:	d019      	beq.n	8020dca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8020d96:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8020d9a:	fb0a fb0b 	mul.w	fp, sl, fp
 8020d9e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020da2:	fb0a fa06 	mul.w	sl, sl, r6
 8020da6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8020daa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8020dae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020db2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8020db6:	445e      	add	r6, fp
 8020db8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020dbc:	0a36      	lsrs	r6, r6, #8
 8020dbe:	0a00      	lsrs	r0, r0, #8
 8020dc0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8020dc4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020dc8:	4306      	orrs	r6, r0
 8020dca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020dce:	d019      	beq.n	8020e04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8020dd0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8020dd4:	fb09 fa0a 	mul.w	sl, r9, sl
 8020dd8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020ddc:	fb09 f904 	mul.w	r9, r9, r4
 8020de0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8020de4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020de8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020dec:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8020df0:	4454      	add	r4, sl
 8020df2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8020df6:	0a24      	lsrs	r4, r4, #8
 8020df8:	0a00      	lsrs	r0, r0, #8
 8020dfa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020dfe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020e02:	4304      	orrs	r4, r0
 8020e04:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020e08:	d019      	beq.n	8020e3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8020e0a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8020e0e:	fb08 f909 	mul.w	r9, r8, r9
 8020e12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e16:	fb08 f803 	mul.w	r8, r8, r3
 8020e1a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8020e1e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e22:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8020e26:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8020e2a:	444b      	add	r3, r9
 8020e2c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020e30:	0a1b      	lsrs	r3, r3, #8
 8020e32:	0a00      	lsrs	r0, r0, #8
 8020e34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e38:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020e3c:	4303      	orrs	r3, r0
 8020e3e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8020e42:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8020e46:	fb0c f808 	mul.w	r8, ip, r8
 8020e4a:	fb05 8800 	mla	r8, r5, r0, r8
 8020e4e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8020e52:	fb07 8800 	mla	r8, r7, r0, r8
 8020e56:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8020e5a:	fb0e 8000 	mla	r0, lr, r0, r8
 8020e5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020e62:	fb0c f606 	mul.w	r6, ip, r6
 8020e66:	0a00      	lsrs	r0, r0, #8
 8020e68:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020e6c:	fb05 6202 	mla	r2, r5, r2, r6
 8020e70:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8020e74:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8020e78:	fb07 2700 	mla	r7, r7, r0, r2
 8020e7c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020e80:	9b03      	ldr	r3, [sp, #12]
 8020e82:	9d00      	ldr	r5, [sp, #0]
 8020e84:	9a02      	ldr	r2, [sp, #8]
 8020e86:	fb0e 7000 	mla	r0, lr, r0, r7
 8020e8a:	43dc      	mvns	r4, r3
 8020e8c:	9b01      	ldr	r3, [sp, #4]
 8020e8e:	b2e4      	uxtb	r4, r4
 8020e90:	0a00      	lsrs	r0, r0, #8
 8020e92:	4363      	muls	r3, r4
 8020e94:	4365      	muls	r5, r4
 8020e96:	4362      	muls	r2, r4
 8020e98:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020e9c:	ea48 0000 	orr.w	r0, r8, r0
 8020ea0:	4614      	mov	r4, r2
 8020ea2:	1c5e      	adds	r6, r3, #1
 8020ea4:	1c6a      	adds	r2, r5, #1
 8020ea6:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8020eaa:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8020eae:	0a03      	lsrs	r3, r0, #8
 8020eb0:	0c02      	lsrs	r2, r0, #16
 8020eb2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8020eb6:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8020eba:	00db      	lsls	r3, r3, #3
 8020ebc:	0212      	lsls	r2, r2, #8
 8020ebe:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020ec2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ec6:	4313      	orrs	r3, r2
 8020ec8:	1c62      	adds	r2, r4, #1
 8020eca:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020ece:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8020ed2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8020ed6:	4318      	orrs	r0, r3
 8020ed8:	8008      	strh	r0, [r1, #0]
 8020eda:	b005      	add	sp, #20
 8020edc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ee0:	0802d9a3 	.word	0x0802d9a3
 8020ee4:	0802ded2 	.word	0x0802ded2
 8020ee8:	0802d970 	.word	0x0802d970

08020eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ef0:	ed2d 8b08 	vpush	{d8-d11}
 8020ef4:	b09b      	sub	sp, #108	; 0x6c
 8020ef6:	eeb0 aa40 	vmov.f32	s20, s0
 8020efa:	9218      	str	r2, [sp, #96]	; 0x60
 8020efc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8020efe:	9116      	str	r1, [sp, #88]	; 0x58
 8020f00:	9307      	str	r3, [sp, #28]
 8020f02:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8020f06:	9019      	str	r0, [sp, #100]	; 0x64
 8020f08:	6850      	ldr	r0, [r2, #4]
 8020f0a:	6812      	ldr	r2, [r2, #0]
 8020f0c:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8020f0e:	fb00 1303 	mla	r3, r0, r3, r1
 8020f12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020f16:	930a      	str	r3, [sp, #40]	; 0x28
 8020f18:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020f1a:	681b      	ldr	r3, [r3, #0]
 8020f1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8020f1e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020f20:	685e      	ldr	r6, [r3, #4]
 8020f22:	eef0 9a60 	vmov.f32	s19, s1
 8020f26:	eeb0 9a41 	vmov.f32	s18, s2
 8020f2a:	eeb0 8a62 	vmov.f32	s16, s5
 8020f2e:	eef0 8a43 	vmov.f32	s17, s6
 8020f32:	eef0 ba44 	vmov.f32	s23, s8
 8020f36:	eeb0 ba64 	vmov.f32	s22, s9
 8020f3a:	eef0 aa45 	vmov.f32	s21, s10
 8020f3e:	3604      	adds	r6, #4
 8020f40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020f42:	2b00      	cmp	r3, #0
 8020f44:	dc03      	bgt.n	8020f4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8020f46:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020f48:	2b00      	cmp	r3, #0
 8020f4a:	f340 8373 	ble.w	8021634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020f4e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020f50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020f54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020f58:	1e48      	subs	r0, r1, #1
 8020f5a:	1e57      	subs	r7, r2, #1
 8020f5c:	9b07      	ldr	r3, [sp, #28]
 8020f5e:	2b00      	cmp	r3, #0
 8020f60:	f340 8190 	ble.w	8021284 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020f64:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8020f66:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020f6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020f6e:	d406      	bmi.n	8020f7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f70:	4584      	cmp	ip, r0
 8020f72:	da04      	bge.n	8020f7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f74:	2b00      	cmp	r3, #0
 8020f76:	db02      	blt.n	8020f7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020f78:	42bb      	cmp	r3, r7
 8020f7a:	f2c0 8184 	blt.w	8021286 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8020f7e:	f11c 0c01 	adds.w	ip, ip, #1
 8020f82:	f100 8172 	bmi.w	802126a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020f86:	4561      	cmp	r1, ip
 8020f88:	f2c0 816f 	blt.w	802126a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020f8c:	3301      	adds	r3, #1
 8020f8e:	f100 816c 	bmi.w	802126a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020f92:	429a      	cmp	r2, r3
 8020f94:	f2c0 8169 	blt.w	802126a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8020f98:	9b07      	ldr	r3, [sp, #28]
 8020f9a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020f9c:	9317      	str	r3, [sp, #92]	; 0x5c
 8020f9e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020fa0:	2b00      	cmp	r3, #0
 8020fa2:	f340 818e 	ble.w	80212c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020fa6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020fa8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020fac:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8020fae:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020fb2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020fb4:	141b      	asrs	r3, r3, #16
 8020fb6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020fba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020fbe:	f100 81d1 	bmi.w	8021364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020fc2:	f101 38ff 	add.w	r8, r1, #4294967295
 8020fc6:	4543      	cmp	r3, r8
 8020fc8:	f280 81cc 	bge.w	8021364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020fcc:	f1bc 0f00 	cmp.w	ip, #0
 8020fd0:	f2c0 81c8 	blt.w	8021364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020fd4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020fd8:	45c4      	cmp	ip, r8
 8020fda:	f280 81c3 	bge.w	8021364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8020fde:	b209      	sxth	r1, r1
 8020fe0:	fb0c 3301 	mla	r3, ip, r1, r3
 8020fe4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020fe6:	eb04 0803 	add.w	r8, r4, r3
 8020fea:	5ce3      	ldrb	r3, [r4, r3]
 8020fec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020ff0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020ff4:	2a00      	cmp	r2, #0
 8020ff6:	f000 81aa 	beq.w	802134e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8020ffa:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020ffe:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021002:	940b      	str	r4, [sp, #44]	; 0x2c
 8021004:	0e24      	lsrs	r4, r4, #24
 8021006:	9412      	str	r4, [sp, #72]	; 0x48
 8021008:	b178      	cbz	r0, 802102a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802100a:	eb08 0c01 	add.w	ip, r8, r1
 802100e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021012:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021016:	9108      	str	r1, [sp, #32]
 8021018:	0e09      	lsrs	r1, r1, #24
 802101a:	9110      	str	r1, [sp, #64]	; 0x40
 802101c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021020:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021024:	910c      	str	r1, [sp, #48]	; 0x30
 8021026:	0e09      	lsrs	r1, r1, #24
 8021028:	9113      	str	r1, [sp, #76]	; 0x4c
 802102a:	b292      	uxth	r2, r2
 802102c:	b280      	uxth	r0, r0
 802102e:	fb02 f900 	mul.w	r9, r2, r0
 8021032:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021036:	0112      	lsls	r2, r2, #4
 8021038:	eba2 0809 	sub.w	r8, r2, r9
 802103c:	b280      	uxth	r0, r0
 802103e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021042:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021044:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021046:	fa1f f888 	uxth.w	r8, r8
 802104a:	1a12      	subs	r2, r2, r0
 802104c:	b292      	uxth	r2, r2
 802104e:	fb08 f101 	mul.w	r1, r8, r1
 8021052:	fb02 110e 	mla	r1, r2, lr, r1
 8021056:	fb00 1104 	mla	r1, r0, r4, r1
 802105a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802105c:	fb09 1104 	mla	r1, r9, r4, r1
 8021060:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021064:	2900      	cmp	r1, #0
 8021066:	f000 80f5 	beq.w	8021254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802106a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802106e:	d01b      	beq.n	80210a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021070:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021074:	fb0e fa0a 	mul.w	sl, lr, sl
 8021078:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802107c:	fb0e fe03 	mul.w	lr, lr, r3
 8021080:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021084:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021088:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802108c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021090:	4453      	add	r3, sl
 8021092:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021096:	0a1b      	lsrs	r3, r3, #8
 8021098:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802109c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80210a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80210a4:	ea43 030c 	orr.w	r3, r3, ip
 80210a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80210aa:	2cff      	cmp	r4, #255	; 0xff
 80210ac:	d021      	beq.n	80210f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80210ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80210b0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80210b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80210b6:	fb04 fb0b 	mul.w	fp, r4, fp
 80210ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80210bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80210c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80210c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80210c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80210ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80210ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80210d2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80210d6:	44de      	add	lr, fp
 80210d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80210dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80210e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80210e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210ec:	ea4e 040a 	orr.w	r4, lr, sl
 80210f0:	940b      	str	r4, [sp, #44]	; 0x2c
 80210f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80210f4:	2cff      	cmp	r4, #255	; 0xff
 80210f6:	d021      	beq.n	802113c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80210f8:	9c08      	ldr	r4, [sp, #32]
 80210fa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80210fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021100:	fb04 fb0b 	mul.w	fp, r4, fp
 8021104:	9c08      	ldr	r4, [sp, #32]
 8021106:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802110a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802110c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021110:	fb04 fa0a 	mul.w	sl, r4, sl
 8021114:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021118:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802111c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021120:	44de      	add	lr, fp
 8021122:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021126:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802112a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802112e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021132:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021136:	ea4e 040a 	orr.w	r4, lr, sl
 802113a:	9408      	str	r4, [sp, #32]
 802113c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802113e:	2cff      	cmp	r4, #255	; 0xff
 8021140:	d021      	beq.n	8021186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8021142:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021144:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021148:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802114a:	fb04 fb0b 	mul.w	fp, r4, fp
 802114e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021150:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021154:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021156:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802115a:	fb04 fa0a 	mul.w	sl, r4, sl
 802115e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021162:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021166:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802116a:	44de      	add	lr, fp
 802116c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021170:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021174:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021178:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802117c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021180:	ea4e 040a 	orr.w	r4, lr, sl
 8021184:	940c      	str	r4, [sp, #48]	; 0x30
 8021186:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021188:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802118c:	9c08      	ldr	r4, [sp, #32]
 802118e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021192:	fb08 fc0c 	mul.w	ip, r8, ip
 8021196:	fb02 cc0e 	mla	ip, r2, lr, ip
 802119a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802119e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80211a0:	fb00 cc0e 	mla	ip, r0, lr, ip
 80211a4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80211a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80211aa:	fb09 cc0e 	mla	ip, r9, lr, ip
 80211ae:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80211b2:	fb08 f80e 	mul.w	r8, r8, lr
 80211b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80211ba:	fb02 8303 	mla	r3, r2, r3, r8
 80211be:	9a08      	ldr	r2, [sp, #32]
 80211c0:	f8b7 8000 	ldrh.w	r8, [r7]
 80211c4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80211c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80211ca:	fb00 330a 	mla	r3, r0, sl, r3
 80211ce:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80211d2:	fb09 3900 	mla	r9, r9, r0, r3
 80211d6:	43c9      	mvns	r1, r1
 80211d8:	ea4f 2228 	mov.w	r2, r8, asr #8
 80211dc:	fa5f fe81 	uxtb.w	lr, r1
 80211e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80211e8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80211ec:	fb02 f20e 	mul.w	r2, r2, lr
 80211f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80211f4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80211f8:	ea4c 0c09 	orr.w	ip, ip, r9
 80211fc:	1c53      	adds	r3, r2, #1
 80211fe:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021202:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021206:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802120a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802120e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021212:	4a63      	ldr	r2, [pc, #396]	; (80213a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8021214:	fb00 f00e 	mul.w	r0, r0, lr
 8021218:	b2db      	uxtb	r3, r3
 802121a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802121e:	1c43      	adds	r3, r0, #1
 8021220:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021224:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021228:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 802122c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021230:	b2c9      	uxtb	r1, r1
 8021232:	00db      	lsls	r3, r3, #3
 8021234:	fb01 f10e 	mul.w	r1, r1, lr
 8021238:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802123c:	4313      	orrs	r3, r2
 802123e:	1c4a      	adds	r2, r1, #1
 8021240:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021244:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021248:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802124c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021250:	f8a7 c000 	strh.w	ip, [r7]
 8021254:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8021256:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021258:	441a      	add	r2, r3
 802125a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802125c:	922d      	str	r2, [sp, #180]	; 0xb4
 802125e:	441d      	add	r5, r3
 8021260:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021262:	3b01      	subs	r3, #1
 8021264:	3702      	adds	r7, #2
 8021266:	9317      	str	r3, [sp, #92]	; 0x5c
 8021268:	e699      	b.n	8020f9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802126a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 802126c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 802126e:	441c      	add	r4, r3
 8021270:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021272:	942d      	str	r4, [sp, #180]	; 0xb4
 8021274:	441d      	add	r5, r3
 8021276:	9b07      	ldr	r3, [sp, #28]
 8021278:	3b01      	subs	r3, #1
 802127a:	9307      	str	r3, [sp, #28]
 802127c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802127e:	3302      	adds	r3, #2
 8021280:	930a      	str	r3, [sp, #40]	; 0x28
 8021282:	e66b      	b.n	8020f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021284:	d024      	beq.n	80212d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8021286:	9b07      	ldr	r3, [sp, #28]
 8021288:	982f      	ldr	r0, [sp, #188]	; 0xbc
 802128a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 802128c:	3b01      	subs	r3, #1
 802128e:	fb00 4003 	mla	r0, r0, r3, r4
 8021292:	1400      	asrs	r0, r0, #16
 8021294:	f53f ae80 	bmi.w	8020f98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8021298:	3901      	subs	r1, #1
 802129a:	4288      	cmp	r0, r1
 802129c:	f6bf ae7c 	bge.w	8020f98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80212a0:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80212a2:	fb01 5303 	mla	r3, r1, r3, r5
 80212a6:	141b      	asrs	r3, r3, #16
 80212a8:	f53f ae76 	bmi.w	8020f98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80212ac:	3a01      	subs	r2, #1
 80212ae:	4293      	cmp	r3, r2
 80212b0:	f6bf ae72 	bge.w	8020f98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80212b4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80212b8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80212bc:	f1bb 0f00 	cmp.w	fp, #0
 80212c0:	dc70      	bgt.n	80213a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 80212c2:	9b07      	ldr	r3, [sp, #28]
 80212c4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80212c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212ca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80212ce:	930a      	str	r3, [sp, #40]	; 0x28
 80212d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80212d2:	2b00      	cmp	r3, #0
 80212d4:	f340 81ae 	ble.w	8021634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80212d8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80212dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80212e0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80212e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80212e6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80212ea:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80212ee:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80212f2:	eef0 6a48 	vmov.f32	s13, s16
 80212f6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80212fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80212fe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021302:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8021306:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802130a:	eef0 6a68 	vmov.f32	s13, s17
 802130e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021312:	ee18 2a10 	vmov	r2, s16
 8021316:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802131a:	fb92 f3f3 	sdiv	r3, r2, r3
 802131e:	ee18 2a90 	vmov	r2, s17
 8021322:	932f      	str	r3, [sp, #188]	; 0xbc
 8021324:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021326:	fb92 f3f3 	sdiv	r3, r2, r3
 802132a:	9330      	str	r3, [sp, #192]	; 0xc0
 802132c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802132e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021330:	3b01      	subs	r3, #1
 8021332:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021336:	9316      	str	r3, [sp, #88]	; 0x58
 8021338:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802133a:	bf08      	it	eq
 802133c:	4613      	moveq	r3, r2
 802133e:	ee16 5a90 	vmov	r5, s13
 8021342:	9307      	str	r3, [sp, #28]
 8021344:	eef0 8a67 	vmov.f32	s17, s15
 8021348:	eeb0 8a47 	vmov.f32	s16, s14
 802134c:	e5f8      	b.n	8020f40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802134e:	2800      	cmp	r0, #0
 8021350:	f43f ae6b 	beq.w	802102a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8021354:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021358:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802135c:	9108      	str	r1, [sp, #32]
 802135e:	0e09      	lsrs	r1, r1, #24
 8021360:	9110      	str	r1, [sp, #64]	; 0x40
 8021362:	e662      	b.n	802102a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8021364:	f113 0801 	adds.w	r8, r3, #1
 8021368:	f53f af74 	bmi.w	8021254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802136c:	4541      	cmp	r1, r8
 802136e:	f6ff af71 	blt.w	8021254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8021372:	f11c 0801 	adds.w	r8, ip, #1
 8021376:	f53f af6d 	bmi.w	8021254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802137a:	45c6      	cmp	lr, r8
 802137c:	f6ff af6a 	blt.w	8021254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8021380:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021384:	b209      	sxth	r1, r1
 8021386:	fa0f f38e 	sxth.w	r3, lr
 802138a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802138e:	9301      	str	r3, [sp, #4]
 8021390:	9100      	str	r1, [sp, #0]
 8021392:	4633      	mov	r3, r6
 8021394:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021396:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021398:	4639      	mov	r1, r7
 802139a:	f7ff fc4d 	bl	8020c38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802139e:	e759      	b.n	8021254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80213a0:	fffff800 	.word	0xfffff800
 80213a4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80213a6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80213a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80213ac:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80213ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80213b2:	1427      	asrs	r7, r4, #16
 80213b4:	142b      	asrs	r3, r5, #16
 80213b6:	fb01 7303 	mla	r3, r1, r3, r7
 80213ba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213bc:	18e7      	adds	r7, r4, r3
 80213be:	5ce3      	ldrb	r3, [r4, r3]
 80213c0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80213c4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80213c8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80213cc:	2a00      	cmp	r2, #0
 80213ce:	f000 8127 	beq.w	8021620 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80213d2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80213d6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80213da:	940d      	str	r4, [sp, #52]	; 0x34
 80213dc:	0e24      	lsrs	r4, r4, #24
 80213de:	9414      	str	r4, [sp, #80]	; 0x50
 80213e0:	b170      	cbz	r0, 8021400 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80213e2:	eb07 0e01 	add.w	lr, r7, r1
 80213e6:	5c79      	ldrb	r1, [r7, r1]
 80213e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80213ec:	9109      	str	r1, [sp, #36]	; 0x24
 80213ee:	0e09      	lsrs	r1, r1, #24
 80213f0:	9111      	str	r1, [sp, #68]	; 0x44
 80213f2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80213f6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80213fa:	910e      	str	r1, [sp, #56]	; 0x38
 80213fc:	0e09      	lsrs	r1, r1, #24
 80213fe:	9115      	str	r1, [sp, #84]	; 0x54
 8021400:	b292      	uxth	r2, r2
 8021402:	b280      	uxth	r0, r0
 8021404:	fb02 f800 	mul.w	r8, r2, r0
 8021408:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802140c:	0112      	lsls	r2, r2, #4
 802140e:	eba2 0e08 	sub.w	lr, r2, r8
 8021412:	b280      	uxth	r0, r0
 8021414:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021418:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802141a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802141c:	fa1f fe8e 	uxth.w	lr, lr
 8021420:	1a09      	subs	r1, r1, r0
 8021422:	b289      	uxth	r1, r1
 8021424:	fb0e f202 	mul.w	r2, lr, r2
 8021428:	fb01 220c 	mla	r2, r1, ip, r2
 802142c:	fb00 2204 	mla	r2, r0, r4, r2
 8021430:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021432:	fb08 2204 	mla	r2, r8, r4, r2
 8021436:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802143a:	2a00      	cmp	r2, #0
 802143c:	f000 80e5 	beq.w	802160a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8021440:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021444:	d019      	beq.n	802147a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8021446:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802144a:	fb0c fa0a 	mul.w	sl, ip, sl
 802144e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021452:	fb0c fc03 	mul.w	ip, ip, r3
 8021456:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802145a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802145e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021462:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021466:	4453      	add	r3, sl
 8021468:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802146c:	0a1b      	lsrs	r3, r3, #8
 802146e:	0a3f      	lsrs	r7, r7, #8
 8021470:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021474:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021478:	433b      	orrs	r3, r7
 802147a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802147c:	2cff      	cmp	r4, #255	; 0xff
 802147e:	d020      	beq.n	80214c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8021480:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021482:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021486:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021488:	4367      	muls	r7, r4
 802148a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802148c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021490:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021492:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021496:	fb04 fa0a 	mul.w	sl, r4, sl
 802149a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802149e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80214a2:	44bc      	add	ip, r7
 80214a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80214a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80214ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80214b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80214b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80214bc:	ea4c 040a 	orr.w	r4, ip, sl
 80214c0:	940d      	str	r4, [sp, #52]	; 0x34
 80214c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80214c4:	2cff      	cmp	r4, #255	; 0xff
 80214c6:	d020      	beq.n	802150a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80214c8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80214ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80214ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80214d0:	4367      	muls	r7, r4
 80214d2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80214d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80214d8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80214da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80214de:	fb04 fa0a 	mul.w	sl, r4, sl
 80214e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80214e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80214ea:	44bc      	add	ip, r7
 80214ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80214f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80214f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80214f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021500:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021504:	ea4c 040a 	orr.w	r4, ip, sl
 8021508:	9409      	str	r4, [sp, #36]	; 0x24
 802150a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802150c:	2cff      	cmp	r4, #255	; 0xff
 802150e:	d020      	beq.n	8021552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8021510:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021512:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021516:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021518:	4367      	muls	r7, r4
 802151a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802151c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021520:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021522:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021526:	fb04 fa0a 	mul.w	sl, r4, sl
 802152a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802152e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021532:	44bc      	add	ip, r7
 8021534:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021538:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802153c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021540:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021544:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021548:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802154c:	ea4c 040a 	orr.w	r4, ip, sl
 8021550:	940e      	str	r4, [sp, #56]	; 0x38
 8021552:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021554:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021558:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802155a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802155e:	fb0e f707 	mul.w	r7, lr, r7
 8021562:	fb01 770c 	mla	r7, r1, ip, r7
 8021566:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802156a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802156c:	fb00 770c 	mla	r7, r0, ip, r7
 8021570:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021574:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021576:	fb08 770c 	mla	r7, r8, ip, r7
 802157a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802157e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021582:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021586:	fb01 e303 	mla	r3, r1, r3, lr
 802158a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802158c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021590:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021592:	fb00 330a 	mla	r3, r0, sl, r3
 8021596:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802159a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802159e:	f8b9 3000 	ldrh.w	r3, [r9]
 80215a2:	43d2      	mvns	r2, r2
 80215a4:	1218      	asrs	r0, r3, #8
 80215a6:	b2d2      	uxtb	r2, r2
 80215a8:	10d9      	asrs	r1, r3, #3
 80215aa:	0a3f      	lsrs	r7, r7, #8
 80215ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80215b4:	00db      	lsls	r3, r3, #3
 80215b6:	4350      	muls	r0, r2
 80215b8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80215bc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80215c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80215c4:	b2db      	uxtb	r3, r3
 80215c6:	ea47 070c 	orr.w	r7, r7, ip
 80215ca:	4351      	muls	r1, r2
 80215cc:	4353      	muls	r3, r2
 80215ce:	1c42      	adds	r2, r0, #1
 80215d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80215d4:	0c3a      	lsrs	r2, r7, #16
 80215d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80215da:	4a19      	ldr	r2, [pc, #100]	; (8021640 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80215dc:	b2c0      	uxtb	r0, r0
 80215de:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80215e2:	1c4a      	adds	r2, r1, #1
 80215e4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80215e8:	0a3a      	lsrs	r2, r7, #8
 80215ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80215ee:	00c9      	lsls	r1, r1, #3
 80215f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80215f4:	4301      	orrs	r1, r0
 80215f6:	1c58      	adds	r0, r3, #1
 80215f8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80215fc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021600:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8021604:	4308      	orrs	r0, r1
 8021606:	f8a9 0000 	strh.w	r0, [r9]
 802160a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 802160c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802160e:	441a      	add	r2, r3
 8021610:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021612:	922d      	str	r2, [sp, #180]	; 0xb4
 8021614:	f109 0902 	add.w	r9, r9, #2
 8021618:	441d      	add	r5, r3
 802161a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802161e:	e64d      	b.n	80212bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021620:	2800      	cmp	r0, #0
 8021622:	f43f aeed 	beq.w	8021400 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8021626:	5c79      	ldrb	r1, [r7, r1]
 8021628:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802162c:	9109      	str	r1, [sp, #36]	; 0x24
 802162e:	0e09      	lsrs	r1, r1, #24
 8021630:	9111      	str	r1, [sp, #68]	; 0x44
 8021632:	e6e5      	b.n	8021400 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8021634:	b01b      	add	sp, #108	; 0x6c
 8021636:	ecbd 8b08 	vpop	{d8-d11}
 802163a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802163e:	bf00      	nop
 8021640:	fffff800 	.word	0xfffff800

08021644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021648:	b085      	sub	sp, #20
 802164a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 802164e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021652:	9103      	str	r1, [sp, #12]
 8021654:	fb05 7106 	mla	r1, r5, r6, r7
 8021658:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 802165c:	2d00      	cmp	r5, #0
 802165e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021662:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021666:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802166a:	9401      	str	r4, [sp, #4]
 802166c:	eb03 0901 	add.w	r9, r3, r1
 8021670:	f2c0 80c0 	blt.w	80217f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8021674:	45a8      	cmp	r8, r5
 8021676:	f340 80bd 	ble.w	80217f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 802167a:	2f00      	cmp	r7, #0
 802167c:	f2c0 80b6 	blt.w	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8021680:	42be      	cmp	r6, r7
 8021682:	f340 80b3 	ble.w	80217ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8021686:	f813 c001 	ldrb.w	ip, [r3, r1]
 802168a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 802168e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021692:	d019      	beq.n	80216c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8021694:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8021698:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802169c:	435a      	muls	r2, r3
 802169e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80216a2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80216a6:	fb0c f403 	mul.w	r4, ip, r3
 80216aa:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80216ae:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80216b2:	441a      	add	r2, r3
 80216b4:	f104 0320 	add.w	r3, r4, #32
 80216b8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80216bc:	0a1b      	lsrs	r3, r3, #8
 80216be:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80216c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80216c6:	4319      	orrs	r1, r3
 80216c8:	b289      	uxth	r1, r1
 80216ca:	1c7b      	adds	r3, r7, #1
 80216cc:	f100 8097 	bmi.w	80217fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80216d0:	429e      	cmp	r6, r3
 80216d2:	f340 8094 	ble.w	80217fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80216d6:	2800      	cmp	r0, #0
 80216d8:	f000 8094 	beq.w	8021804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80216dc:	f899 4001 	ldrb.w	r4, [r9, #1]
 80216e0:	9b01      	ldr	r3, [sp, #4]
 80216e2:	2cff      	cmp	r4, #255	; 0xff
 80216e4:	885b      	ldrh	r3, [r3, #2]
 80216e6:	d01b      	beq.n	8021720 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80216e8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80216ec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80216f0:	fb0a f202 	mul.w	r2, sl, r2
 80216f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80216f8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80216fc:	fb04 fa03 	mul.w	sl, r4, r3
 8021700:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8021704:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8021708:	441a      	add	r2, r3
 802170a:	f10a 0320 	add.w	r3, sl, #32
 802170e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8021712:	0a1b      	lsrs	r3, r3, #8
 8021714:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8021718:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802171c:	ea4b 0303 	orr.w	r3, fp, r3
 8021720:	b29b      	uxth	r3, r3
 8021722:	3501      	adds	r5, #1
 8021724:	d474      	bmi.n	8021810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8021726:	45a8      	cmp	r8, r5
 8021728:	dd72      	ble.n	8021810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 802172a:	f1be 0f00 	cmp.w	lr, #0
 802172e:	f000 8120 	beq.w	8021972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8021732:	2f00      	cmp	r7, #0
 8021734:	db69      	blt.n	802180a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8021736:	42be      	cmp	r6, r7
 8021738:	dd67      	ble.n	802180a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 802173a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802173e:	9a01      	ldr	r2, [sp, #4]
 8021740:	2dff      	cmp	r5, #255	; 0xff
 8021742:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8021746:	d01c      	beq.n	8021782 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8021748:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 802174c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8021750:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021754:	fb05 fa0b 	mul.w	sl, r5, fp
 8021758:	fb08 f802 	mul.w	r8, r8, r2
 802175c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021760:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8021764:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021768:	4490      	add	r8, r2
 802176a:	f10a 0220 	add.w	r2, sl, #32
 802176e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8021772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021776:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 802177a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802177e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8021782:	fa1f fb8b 	uxth.w	fp, fp
 8021786:	3701      	adds	r7, #1
 8021788:	d447      	bmi.n	802181a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 802178a:	42be      	cmp	r6, r7
 802178c:	dd45      	ble.n	802181a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 802178e:	2800      	cmp	r0, #0
 8021790:	d046      	beq.n	8021820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8021792:	3601      	adds	r6, #1
 8021794:	9a01      	ldr	r2, [sp, #4]
 8021796:	f819 7006 	ldrb.w	r7, [r9, r6]
 802179a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 802179e:	2fff      	cmp	r7, #255	; 0xff
 80217a0:	d01a      	beq.n	80217d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80217a2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80217a6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80217aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80217ae:	fb07 f902 	mul.w	r9, r7, r2
 80217b2:	fb08 f806 	mul.w	r8, r8, r6
 80217b6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80217ba:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80217be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80217c2:	44b0      	add	r8, r6
 80217c4:	f109 0620 	add.w	r6, r9, #32
 80217c8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80217cc:	0a36      	lsrs	r6, r6, #8
 80217ce:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80217d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80217d6:	4332      	orrs	r2, r6
 80217d8:	b292      	uxth	r2, r2
 80217da:	280f      	cmp	r0, #15
 80217dc:	d922      	bls.n	8021824 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80217de:	4b69      	ldr	r3, [pc, #420]	; (8021984 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80217e0:	4a69      	ldr	r2, [pc, #420]	; (8021988 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80217e2:	486a      	ldr	r0, [pc, #424]	; (802198c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80217e4:	f240 11f9 	movw	r1, #505	; 0x1f9
 80217e8:	f005 fe62 	bl	80274b0 <__assert_func>
 80217ec:	f04f 0c00 	mov.w	ip, #0
 80217f0:	4661      	mov	r1, ip
 80217f2:	e76a      	b.n	80216ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80217f4:	2400      	movs	r4, #0
 80217f6:	46a4      	mov	ip, r4
 80217f8:	4623      	mov	r3, r4
 80217fa:	4621      	mov	r1, r4
 80217fc:	e791      	b.n	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80217fe:	2400      	movs	r4, #0
 8021800:	4623      	mov	r3, r4
 8021802:	e78e      	b.n	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8021804:	4604      	mov	r4, r0
 8021806:	4603      	mov	r3, r0
 8021808:	e78b      	b.n	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 802180a:	2500      	movs	r5, #0
 802180c:	46ab      	mov	fp, r5
 802180e:	e7ba      	b.n	8021786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8021810:	2700      	movs	r7, #0
 8021812:	463d      	mov	r5, r7
 8021814:	463a      	mov	r2, r7
 8021816:	46bb      	mov	fp, r7
 8021818:	e7df      	b.n	80217da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 802181a:	2700      	movs	r7, #0
 802181c:	463a      	mov	r2, r7
 802181e:	e7dc      	b.n	80217da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8021820:	4607      	mov	r7, r0
 8021822:	4602      	mov	r2, r0
 8021824:	f1be 0f0f 	cmp.w	lr, #15
 8021828:	d8d9      	bhi.n	80217de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 802182a:	b286      	uxth	r6, r0
 802182c:	fa1f f98e 	uxth.w	r9, lr
 8021830:	fb06 f809 	mul.w	r8, r6, r9
 8021834:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021838:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802183c:	0136      	lsls	r6, r6, #4
 802183e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021842:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021846:	9601      	str	r6, [sp, #4]
 8021848:	ea4a 0101 	orr.w	r1, sl, r1
 802184c:	fa1f f689 	uxth.w	r6, r9
 8021850:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8021854:	fb10 f90e 	smulbb	r9, r0, lr
 8021858:	ea4f 09e9 	mov.w	r9, r9, asr #3
 802185c:	9602      	str	r6, [sp, #8]
 802185e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021862:	460e      	mov	r6, r1
 8021864:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021868:	f1ce 0110 	rsb	r1, lr, #16
 802186c:	1a09      	subs	r1, r1, r0
 802186e:	ea4a 0303 	orr.w	r3, sl, r3
 8021872:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8021876:	4343      	muls	r3, r0
 8021878:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 802187c:	9801      	ldr	r0, [sp, #4]
 802187e:	fb01 3106 	mla	r1, r1, r6, r3
 8021882:	9e02      	ldr	r6, [sp, #8]
 8021884:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021888:	1b80      	subs	r0, r0, r6
 802188a:	9e01      	ldr	r6, [sp, #4]
 802188c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021890:	eba6 0608 	sub.w	r6, r6, r8
 8021894:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021898:	b2b6      	uxth	r6, r6
 802189a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802189e:	ea4a 0202 	orr.w	r2, sl, r2
 80218a2:	b280      	uxth	r0, r0
 80218a4:	4374      	muls	r4, r6
 80218a6:	fb09 1302 	mla	r3, r9, r2, r1
 80218aa:	fb0c 4400 	mla	r4, ip, r0, r4
 80218ae:	9a03      	ldr	r2, [sp, #12]
 80218b0:	9802      	ldr	r0, [sp, #8]
 80218b2:	8811      	ldrh	r1, [r2, #0]
 80218b4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80218b8:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80218bc:	fb00 4505 	mla	r5, r0, r5, r4
 80218c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218c4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80218c8:	fb08 5707 	mla	r7, r8, r7, r5
 80218cc:	ea4a 0b0b 	orr.w	fp, sl, fp
 80218d0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80218d4:	b292      	uxth	r2, r2
 80218d6:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80218da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80218de:	4357      	muls	r7, r2
 80218e0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80218e4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80218e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80218ec:	f107 0801 	add.w	r8, r7, #1
 80218f0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80218f4:	ea43 0e0e 	orr.w	lr, r3, lr
 80218f8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80218fc:	fa1f f38e 	uxth.w	r3, lr
 8021900:	1208      	asrs	r0, r1, #8
 8021902:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021906:	b2ff      	uxtb	r7, r7
 8021908:	121c      	asrs	r4, r3, #8
 802190a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802190e:	fb10 f007 	smulbb	r0, r0, r7
 8021912:	10cd      	asrs	r5, r1, #3
 8021914:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021918:	fb04 0402 	mla	r4, r4, r2, r0
 802191c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021920:	10d8      	asrs	r0, r3, #3
 8021922:	fb15 f507 	smulbb	r5, r5, r7
 8021926:	00db      	lsls	r3, r3, #3
 8021928:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802192c:	fb00 5002 	mla	r0, r0, r2, r5
 8021930:	b2dd      	uxtb	r5, r3
 8021932:	00cb      	lsls	r3, r1, #3
 8021934:	b2db      	uxtb	r3, r3
 8021936:	fb13 f307 	smulbb	r3, r3, r7
 802193a:	fb05 3202 	mla	r2, r5, r2, r3
 802193e:	b2a4      	uxth	r4, r4
 8021940:	b292      	uxth	r2, r2
 8021942:	1c63      	adds	r3, r4, #1
 8021944:	b280      	uxth	r0, r0
 8021946:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802194a:	1c53      	adds	r3, r2, #1
 802194c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021950:	1c42      	adds	r2, r0, #1
 8021952:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021956:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802195a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802195e:	0940      	lsrs	r0, r0, #5
 8021960:	4323      	orrs	r3, r4
 8021962:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021966:	9a03      	ldr	r2, [sp, #12]
 8021968:	4303      	orrs	r3, r0
 802196a:	8013      	strh	r3, [r2, #0]
 802196c:	b005      	add	sp, #20
 802196e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021972:	280f      	cmp	r0, #15
 8021974:	f63f af33 	bhi.w	80217de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8021978:	4677      	mov	r7, lr
 802197a:	4675      	mov	r5, lr
 802197c:	4672      	mov	r2, lr
 802197e:	46f3      	mov	fp, lr
 8021980:	e753      	b.n	802182a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8021982:	bf00      	nop
 8021984:	0802d9a3 	.word	0x0802d9a3
 8021988:	0802ded2 	.word	0x0802ded2
 802198c:	0802d970 	.word	0x0802d970

08021990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021994:	ed2d 8b08 	vpush	{d8-d11}
 8021998:	b097      	sub	sp, #92	; 0x5c
 802199a:	eeb0 aa40 	vmov.f32	s20, s0
 802199e:	9214      	str	r2, [sp, #80]	; 0x50
 80219a0:	9308      	str	r3, [sp, #32]
 80219a2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80219a4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80219a8:	9312      	str	r3, [sp, #72]	; 0x48
 80219aa:	9111      	str	r1, [sp, #68]	; 0x44
 80219ac:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80219b0:	9015      	str	r0, [sp, #84]	; 0x54
 80219b2:	6850      	ldr	r0, [r2, #4]
 80219b4:	6812      	ldr	r2, [r2, #0]
 80219b6:	fb00 1303 	mla	r3, r0, r3, r1
 80219ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80219be:	9309      	str	r3, [sp, #36]	; 0x24
 80219c0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219c2:	681b      	ldr	r3, [r3, #0]
 80219c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80219c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219c8:	685b      	ldr	r3, [r3, #4]
 80219ca:	930c      	str	r3, [sp, #48]	; 0x30
 80219cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80219d0:	930a      	str	r3, [sp, #40]	; 0x28
 80219d2:	eef0 9a60 	vmov.f32	s19, s1
 80219d6:	eeb0 9a41 	vmov.f32	s18, s2
 80219da:	eeb0 8a62 	vmov.f32	s16, s5
 80219de:	eef0 8a43 	vmov.f32	s17, s6
 80219e2:	eef0 ba44 	vmov.f32	s23, s8
 80219e6:	eeb0 ba64 	vmov.f32	s22, s9
 80219ea:	eef0 aa45 	vmov.f32	s21, s10
 80219ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219f0:	2b00      	cmp	r3, #0
 80219f2:	dc03      	bgt.n	80219fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80219f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80219f6:	2b00      	cmp	r3, #0
 80219f8:	f340 83cb 	ble.w	8022192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80219fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80219fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021a06:	1e48      	subs	r0, r1, #1
 8021a08:	1e55      	subs	r5, r2, #1
 8021a0a:	9b08      	ldr	r3, [sp, #32]
 8021a0c:	2b00      	cmp	r3, #0
 8021a0e:	f340 81a3 	ble.w	8021d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021a12:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8021a14:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021a16:	1436      	asrs	r6, r6, #16
 8021a18:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021a1c:	d406      	bmi.n	8021a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021a1e:	4286      	cmp	r6, r0
 8021a20:	da04      	bge.n	8021a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021a22:	2b00      	cmp	r3, #0
 8021a24:	db02      	blt.n	8021a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021a26:	42ab      	cmp	r3, r5
 8021a28:	f2c0 8197 	blt.w	8021d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8021a2c:	3601      	adds	r6, #1
 8021a2e:	f100 8184 	bmi.w	8021d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021a32:	42b1      	cmp	r1, r6
 8021a34:	f2c0 8181 	blt.w	8021d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021a38:	3301      	adds	r3, #1
 8021a3a:	f100 817e 	bmi.w	8021d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021a3e:	429a      	cmp	r2, r3
 8021a40:	f2c0 817b 	blt.w	8021d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021a44:	9b08      	ldr	r3, [sp, #32]
 8021a46:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021a48:	9313      	str	r3, [sp, #76]	; 0x4c
 8021a4a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021a4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021a50:	2b00      	cmp	r3, #0
 8021a52:	f340 81a4 	ble.w	8021d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8021a56:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021a58:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8021a5a:	1418      	asrs	r0, r3, #16
 8021a5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021a5e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021a62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021a64:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021a68:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021a6a:	142d      	asrs	r5, r5, #16
 8021a6c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021a70:	f100 81f8 	bmi.w	8021e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8021a74:	f102 3eff 	add.w	lr, r2, #4294967295
 8021a78:	4575      	cmp	r5, lr
 8021a7a:	f280 81f3 	bge.w	8021e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8021a7e:	2800      	cmp	r0, #0
 8021a80:	f2c0 81f0 	blt.w	8021e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8021a84:	f103 3eff 	add.w	lr, r3, #4294967295
 8021a88:	4570      	cmp	r0, lr
 8021a8a:	f280 81eb 	bge.w	8021e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8021a8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021a90:	b212      	sxth	r2, r2
 8021a92:	fb00 5002 	mla	r0, r0, r2, r5
 8021a96:	fa1f fe81 	uxth.w	lr, r1
 8021a9a:	eb03 0a00 	add.w	sl, r3, r0
 8021a9e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021aa2:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021aa6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021aaa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021aae:	b29b      	uxth	r3, r3
 8021ab0:	f1bc 0f00 	cmp.w	ip, #0
 8021ab4:	f000 81b9 	beq.w	8021e2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8021ab8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021abc:	940d      	str	r4, [sp, #52]	; 0x34
 8021abe:	eb0a 0b02 	add.w	fp, sl, r2
 8021ac2:	fa1f fa8c 	uxth.w	sl, ip
 8021ac6:	fb0a fe0e 	mul.w	lr, sl, lr
 8021aca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021ace:	fa1f fa8a 	uxth.w	sl, sl
 8021ad2:	eba5 050e 	sub.w	r5, r5, lr
 8021ad6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021ada:	940e      	str	r4, [sp, #56]	; 0x38
 8021adc:	eba3 030a 	sub.w	r3, r3, sl
 8021ae0:	b2ad      	uxth	r5, r5
 8021ae2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021ae4:	b29b      	uxth	r3, r3
 8021ae6:	fb08 f505 	mul.w	r5, r8, r5
 8021aea:	fb09 5303 	mla	r3, r9, r3, r5
 8021aee:	fb0a 3304 	mla	r3, sl, r4, r3
 8021af2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021af4:	fb0e 3304 	mla	r3, lr, r4, r3
 8021af8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021afc:	2b00      	cmp	r3, #0
 8021afe:	f000 810f 	beq.w	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021b02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021b08:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021b0c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021b10:	f000 8190 	beq.w	8021e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8021b14:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021b18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021b1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b20:	fb09 f000 	mul.w	r0, r9, r0
 8021b24:	fb0a fe0e 	mul.w	lr, sl, lr
 8021b28:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021b2c:	f100 0b20 	add.w	fp, r0, #32
 8021b30:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021b34:	44ce      	add	lr, r9
 8021b36:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021b3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021b3e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021b42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021b46:	ea4e 0909 	orr.w	r9, lr, r9
 8021b4a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021b4e:	8868      	ldrh	r0, [r5, #2]
 8021b50:	d019      	beq.n	8021b86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8021b52:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021b56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021b5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b5e:	fb08 f800 	mul.w	r8, r8, r0
 8021b62:	fb0a fe0e 	mul.w	lr, sl, lr
 8021b66:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021b6a:	f108 0b20 	add.w	fp, r8, #32
 8021b6e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021b72:	4486      	add	lr, r0
 8021b74:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021b78:	0a00      	lsrs	r0, r0, #8
 8021b7a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021b7e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b82:	ea4e 0000 	orr.w	r0, lr, r0
 8021b86:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021b8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021b8e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021b92:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021b96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b9e:	ea4e 0909 	orr.w	r9, lr, r9
 8021ba2:	ea4a 0000 	orr.w	r0, sl, r0
 8021ba6:	f1bc 0f00 	cmp.w	ip, #0
 8021baa:	f000 8145 	beq.w	8021e38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8021bae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021bb2:	3a01      	subs	r2, #1
 8021bb4:	0052      	lsls	r2, r2, #1
 8021bb6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021bb8:	3202      	adds	r2, #2
 8021bba:	2cff      	cmp	r4, #255	; 0xff
 8021bbc:	eb05 0e02 	add.w	lr, r5, r2
 8021bc0:	5aaa      	ldrh	r2, [r5, r2]
 8021bc2:	d018      	beq.n	8021bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8021bc4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021bc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bcc:	fb04 fa02 	mul.w	sl, r4, r2
 8021bd0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021bd4:	fb08 f805 	mul.w	r8, r8, r5
 8021bd8:	f10a 0520 	add.w	r5, sl, #32
 8021bdc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021be0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021be4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021be8:	4442      	add	r2, r8
 8021bea:	0a2d      	lsrs	r5, r5, #8
 8021bec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021bf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021bf4:	432a      	orrs	r2, r5
 8021bf6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021bf8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021bfc:	2cff      	cmp	r4, #255	; 0xff
 8021bfe:	d01a      	beq.n	8021c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021c00:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021c04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c08:	fb04 fa05 	mul.w	sl, r4, r5
 8021c0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c10:	fb08 f80e 	mul.w	r8, r8, lr
 8021c14:	f10a 0e20 	add.w	lr, sl, #32
 8021c18:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021c1c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021c20:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c24:	4445      	add	r5, r8
 8021c26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c2a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021c2e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021c32:	ea45 050e 	orr.w	r5, r5, lr
 8021c36:	fb1c fe01 	smulbb	lr, ip, r1
 8021c3a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021c3e:	f1cc 0810 	rsb	r8, ip, #16
 8021c42:	eba8 0801 	sub.w	r8, r8, r1
 8021c46:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021c4a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021c4e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021c52:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021c56:	4341      	muls	r1, r0
 8021c58:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c5c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c60:	ea4a 0202 	orr.w	r2, sl, r2
 8021c64:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021c68:	fb09 1108 	mla	r1, r9, r8, r1
 8021c6c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021c70:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021c74:	fb0c 1102 	mla	r1, ip, r2, r1
 8021c78:	ea4b 0505 	orr.w	r5, fp, r5
 8021c7c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021c80:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021c84:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021c88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021c90:	ea42 0e0e 	orr.w	lr, r2, lr
 8021c94:	fa1f f28e 	uxth.w	r2, lr
 8021c98:	2bff      	cmp	r3, #255	; 0xff
 8021c9a:	d103      	bne.n	8021ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8021c9c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021c9e:	29ff      	cmp	r1, #255	; 0xff
 8021ca0:	f000 80de 	beq.w	8021e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8021ca4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021ca6:	8838      	ldrh	r0, [r7, #0]
 8021ca8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021caa:	434b      	muls	r3, r1
 8021cac:	f103 0c01 	add.w	ip, r3, #1
 8021cb0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021cb4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021cb8:	fa5f fc83 	uxtb.w	ip, r3
 8021cbc:	1203      	asrs	r3, r0, #8
 8021cbe:	1215      	asrs	r5, r2, #8
 8021cc0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021cc4:	fb13 f30c 	smulbb	r3, r3, ip
 8021cc8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021ccc:	fb05 3501 	mla	r5, r5, r1, r3
 8021cd0:	10c3      	asrs	r3, r0, #3
 8021cd2:	10d1      	asrs	r1, r2, #3
 8021cd4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021cd8:	fb13 f30c 	smulbb	r3, r3, ip
 8021cdc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021ce0:	fb01 3104 	mla	r1, r1, r4, r3
 8021ce4:	00c3      	lsls	r3, r0, #3
 8021ce6:	00d2      	lsls	r2, r2, #3
 8021ce8:	b2db      	uxtb	r3, r3
 8021cea:	b2d2      	uxtb	r2, r2
 8021cec:	fb13 f30c 	smulbb	r3, r3, ip
 8021cf0:	b2ad      	uxth	r5, r5
 8021cf2:	fb02 3304 	mla	r3, r2, r4, r3
 8021cf6:	b29a      	uxth	r2, r3
 8021cf8:	1c6b      	adds	r3, r5, #1
 8021cfa:	b289      	uxth	r1, r1
 8021cfc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021d00:	1c53      	adds	r3, r2, #1
 8021d02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d06:	1c4a      	adds	r2, r1, #1
 8021d08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021d0c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021d10:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021d14:	0949      	lsrs	r1, r1, #5
 8021d16:	432b      	orrs	r3, r5
 8021d18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d1c:	430b      	orrs	r3, r1
 8021d1e:	803b      	strh	r3, [r7, #0]
 8021d20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021d22:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8021d24:	4413      	add	r3, r2
 8021d26:	9329      	str	r3, [sp, #164]	; 0xa4
 8021d28:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021d2a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021d2c:	441a      	add	r2, r3
 8021d2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021d30:	922a      	str	r2, [sp, #168]	; 0xa8
 8021d32:	3b01      	subs	r3, #1
 8021d34:	3702      	adds	r7, #2
 8021d36:	9313      	str	r3, [sp, #76]	; 0x4c
 8021d38:	e689      	b.n	8021a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8021d3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021d3c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8021d3e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8021d40:	4433      	add	r3, r6
 8021d42:	9329      	str	r3, [sp, #164]	; 0xa4
 8021d44:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021d46:	441c      	add	r4, r3
 8021d48:	9b08      	ldr	r3, [sp, #32]
 8021d4a:	942a      	str	r4, [sp, #168]	; 0xa8
 8021d4c:	3b01      	subs	r3, #1
 8021d4e:	9308      	str	r3, [sp, #32]
 8021d50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d52:	3302      	adds	r3, #2
 8021d54:	9309      	str	r3, [sp, #36]	; 0x24
 8021d56:	e658      	b.n	8021a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021d58:	d028      	beq.n	8021dac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8021d5a:	9b08      	ldr	r3, [sp, #32]
 8021d5c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021d5e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8021d60:	3b01      	subs	r3, #1
 8021d62:	fb00 5003 	mla	r0, r0, r3, r5
 8021d66:	1400      	asrs	r0, r0, #16
 8021d68:	f53f ae6c 	bmi.w	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021d6c:	3901      	subs	r1, #1
 8021d6e:	4288      	cmp	r0, r1
 8021d70:	f6bf ae68 	bge.w	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021d74:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8021d76:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8021d78:	fb01 0303 	mla	r3, r1, r3, r0
 8021d7c:	141b      	asrs	r3, r3, #16
 8021d7e:	f53f ae61 	bmi.w	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021d82:	3a01      	subs	r2, #1
 8021d84:	4293      	cmp	r3, r2
 8021d86:	f6bf ae5d 	bge.w	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021d8a:	9b08      	ldr	r3, [sp, #32]
 8021d8c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021d90:	9313      	str	r3, [sp, #76]	; 0x4c
 8021d92:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021d96:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021d98:	2b00      	cmp	r3, #0
 8021d9a:	f300 8082 	bgt.w	8021ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8021d9e:	9b08      	ldr	r3, [sp, #32]
 8021da0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021da4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021da6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021daa:	9309      	str	r3, [sp, #36]	; 0x24
 8021dac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021dae:	2b00      	cmp	r3, #0
 8021db0:	f340 81ef 	ble.w	8022192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8021db4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021db8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021dbc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021dc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dc2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021dc6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021dca:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021dce:	eef0 6a48 	vmov.f32	s13, s16
 8021dd2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021dd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dda:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021dde:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8021de2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021de6:	eef0 6a68 	vmov.f32	s13, s17
 8021dea:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021dee:	ee18 2a10 	vmov	r2, s16
 8021df2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021df6:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dfa:	ee18 2a90 	vmov	r2, s17
 8021dfe:	932b      	str	r3, [sp, #172]	; 0xac
 8021e00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e02:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e06:	932c      	str	r3, [sp, #176]	; 0xb0
 8021e08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021e0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021e0c:	3b01      	subs	r3, #1
 8021e0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e12:	9311      	str	r3, [sp, #68]	; 0x44
 8021e14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e16:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8021e1a:	bf08      	it	eq
 8021e1c:	4613      	moveq	r3, r2
 8021e1e:	9308      	str	r3, [sp, #32]
 8021e20:	eef0 8a67 	vmov.f32	s17, s15
 8021e24:	eeb0 8a47 	vmov.f32	s16, s14
 8021e28:	e5e1      	b.n	80219ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8021e2a:	fb08 f505 	mul.w	r5, r8, r5
 8021e2e:	fb09 5303 	mla	r3, r9, r3, r5
 8021e32:	e661      	b.n	8021af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8021e34:	4681      	mov	r9, r0
 8021e36:	e688      	b.n	8021b4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8021e38:	f1c1 0210 	rsb	r2, r1, #16
 8021e3c:	4341      	muls	r1, r0
 8021e3e:	fb09 1902 	mla	r9, r9, r2, r1
 8021e42:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021e46:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021e4a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021e4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e52:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021e56:	ea42 0909 	orr.w	r9, r2, r9
 8021e5a:	fa1f f289 	uxth.w	r2, r9
 8021e5e:	e71b      	b.n	8021c98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8021e60:	803a      	strh	r2, [r7, #0]
 8021e62:	e75d      	b.n	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021e64:	f115 0e01 	adds.w	lr, r5, #1
 8021e68:	f53f af5a 	bmi.w	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021e6c:	4572      	cmp	r2, lr
 8021e6e:	f6ff af57 	blt.w	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021e72:	f110 0e01 	adds.w	lr, r0, #1
 8021e76:	f53f af53 	bmi.w	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021e7a:	4573      	cmp	r3, lr
 8021e7c:	f6ff af50 	blt.w	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021e80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021e82:	9502      	str	r5, [sp, #8]
 8021e84:	b21b      	sxth	r3, r3
 8021e86:	b212      	sxth	r2, r2
 8021e88:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021e8c:	9301      	str	r3, [sp, #4]
 8021e8e:	9200      	str	r2, [sp, #0]
 8021e90:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021e94:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021e98:	4639      	mov	r1, r7
 8021e9a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021e9c:	f7ff fbd2 	bl	8021644 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021ea0:	e73e      	b.n	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8021ea2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021ea4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021ea8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021eaa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021eae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021eb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021eb4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021eb6:	141f      	asrs	r7, r3, #16
 8021eb8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021eba:	141b      	asrs	r3, r3, #16
 8021ebc:	fb01 3707 	mla	r7, r1, r7, r3
 8021ec0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021ec2:	fa1f fc82 	uxth.w	ip, r2
 8021ec6:	eb03 0a07 	add.w	sl, r3, r7
 8021eca:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021ece:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021ed2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021ed6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021eda:	b29b      	uxth	r3, r3
 8021edc:	2d00      	cmp	r5, #0
 8021ede:	f000 813d 	beq.w	802215c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8021ee2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021ee6:	940f      	str	r4, [sp, #60]	; 0x3c
 8021ee8:	eb0a 0b01 	add.w	fp, sl, r1
 8021eec:	fa1f fa85 	uxth.w	sl, r5
 8021ef0:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ef4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021ef8:	fa1f fa8a 	uxth.w	sl, sl
 8021efc:	eba0 000c 	sub.w	r0, r0, ip
 8021f00:	eba3 030a 	sub.w	r3, r3, sl
 8021f04:	b280      	uxth	r0, r0
 8021f06:	fb08 f000 	mul.w	r0, r8, r0
 8021f0a:	b29b      	uxth	r3, r3
 8021f0c:	fb09 0303 	mla	r3, r9, r3, r0
 8021f10:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021f12:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021f16:	9410      	str	r4, [sp, #64]	; 0x40
 8021f18:	fb0a 3300 	mla	r3, sl, r0, r3
 8021f1c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021f20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021f24:	2b00      	cmp	r3, #0
 8021f26:	f000 810b 	beq.w	8022140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8021f2a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021f2c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021f2e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021f32:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021f36:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021f3a:	f000 8114 	beq.w	8022166 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8021f3e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021f42:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021f46:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021f4a:	fb09 f707 	mul.w	r7, r9, r7
 8021f4e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f52:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021f56:	f107 0b20 	add.w	fp, r7, #32
 8021f5a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021f5e:	44cc      	add	ip, r9
 8021f60:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021f64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021f68:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021f6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021f70:	ea4c 0909 	orr.w	r9, ip, r9
 8021f74:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021f78:	8847      	ldrh	r7, [r0, #2]
 8021f7a:	d019      	beq.n	8021fb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8021f7c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021f80:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021f84:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021f88:	fb08 f807 	mul.w	r8, r8, r7
 8021f8c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f90:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021f94:	f108 0b20 	add.w	fp, r8, #32
 8021f98:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021f9c:	44bc      	add	ip, r7
 8021f9e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021fa2:	0a3f      	lsrs	r7, r7, #8
 8021fa4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021fa8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021fac:	ea4c 0707 	orr.w	r7, ip, r7
 8021fb0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021fb4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021fb8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021fbc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021fc0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021fc4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021fc8:	ea4c 0909 	orr.w	r9, ip, r9
 8021fcc:	ea4a 0707 	orr.w	r7, sl, r7
 8021fd0:	2d00      	cmp	r5, #0
 8021fd2:	f000 80ca 	beq.w	802216a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8021fd6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021fda:	3901      	subs	r1, #1
 8021fdc:	0049      	lsls	r1, r1, #1
 8021fde:	3102      	adds	r1, #2
 8021fe0:	eb00 0c01 	add.w	ip, r0, r1
 8021fe4:	5a41      	ldrh	r1, [r0, r1]
 8021fe6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021fe8:	28ff      	cmp	r0, #255	; 0xff
 8021fea:	d019      	beq.n	8022020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8021fec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021fee:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021ff2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021ff6:	fb04 fa01 	mul.w	sl, r4, r1
 8021ffa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021ffe:	fb08 f800 	mul.w	r8, r8, r0
 8022002:	f10a 0020 	add.w	r0, sl, #32
 8022006:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802200a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802200e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022012:	4441      	add	r1, r8
 8022014:	0a00      	lsrs	r0, r0, #8
 8022016:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802201a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802201e:	4301      	orrs	r1, r0
 8022020:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022022:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022026:	2cff      	cmp	r4, #255	; 0xff
 8022028:	d01a      	beq.n	8022060 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 802202a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802202e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022032:	fb04 fa00 	mul.w	sl, r4, r0
 8022036:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802203a:	fb08 f80c 	mul.w	r8, r8, ip
 802203e:	f10a 0c20 	add.w	ip, sl, #32
 8022042:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022046:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802204a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802204e:	4440      	add	r0, r8
 8022050:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022054:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022058:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802205c:	ea40 000c 	orr.w	r0, r0, ip
 8022060:	fb15 fc02 	smulbb	ip, r5, r2
 8022064:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022068:	f1c5 0810 	rsb	r8, r5, #16
 802206c:	eba8 0802 	sub.w	r8, r8, r2
 8022070:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022074:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022078:	437a      	muls	r2, r7
 802207a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802207e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022082:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022086:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802208a:	fb09 2208 	mla	r2, r9, r8, r2
 802208e:	ea4a 0101 	orr.w	r1, sl, r1
 8022092:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022096:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802209a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802209e:	fb05 2201 	mla	r2, r5, r1, r2
 80220a2:	ea4b 0000 	orr.w	r0, fp, r0
 80220a6:	fb0c 2200 	mla	r2, ip, r0, r2
 80220aa:	0d57      	lsrs	r7, r2, #21
 80220ac:	0952      	lsrs	r2, r2, #5
 80220ae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80220b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80220b6:	433a      	orrs	r2, r7
 80220b8:	2bff      	cmp	r3, #255	; 0xff
 80220ba:	b292      	uxth	r2, r2
 80220bc:	d102      	bne.n	80220c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80220be:	9912      	ldr	r1, [sp, #72]	; 0x48
 80220c0:	29ff      	cmp	r1, #255	; 0xff
 80220c2:	d063      	beq.n	802218c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 80220c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80220c6:	f8be 1000 	ldrh.w	r1, [lr]
 80220ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80220cc:	4343      	muls	r3, r0
 80220ce:	1c58      	adds	r0, r3, #1
 80220d0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80220d4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80220d8:	1208      	asrs	r0, r1, #8
 80220da:	b2db      	uxtb	r3, r3
 80220dc:	1215      	asrs	r5, r2, #8
 80220de:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80220e2:	fb10 f003 	smulbb	r0, r0, r3
 80220e6:	10cf      	asrs	r7, r1, #3
 80220e8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80220ec:	00c9      	lsls	r1, r1, #3
 80220ee:	fb05 0504 	mla	r5, r5, r4, r0
 80220f2:	b2c9      	uxtb	r1, r1
 80220f4:	10d0      	asrs	r0, r2, #3
 80220f6:	00d2      	lsls	r2, r2, #3
 80220f8:	fb11 f103 	smulbb	r1, r1, r3
 80220fc:	b2d2      	uxtb	r2, r2
 80220fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022102:	fb02 1204 	mla	r2, r2, r4, r1
 8022106:	fb17 f703 	smulbb	r7, r7, r3
 802210a:	b2ad      	uxth	r5, r5
 802210c:	b292      	uxth	r2, r2
 802210e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022112:	fb00 7004 	mla	r0, r0, r4, r7
 8022116:	1c6b      	adds	r3, r5, #1
 8022118:	1c57      	adds	r7, r2, #1
 802211a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802211e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022122:	b280      	uxth	r0, r0
 8022124:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022128:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802212c:	433d      	orrs	r5, r7
 802212e:	1c47      	adds	r7, r0, #1
 8022130:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022134:	097f      	lsrs	r7, r7, #5
 8022136:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802213a:	433d      	orrs	r5, r7
 802213c:	f8ae 5000 	strh.w	r5, [lr]
 8022140:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022142:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022144:	4413      	add	r3, r2
 8022146:	9329      	str	r3, [sp, #164]	; 0xa4
 8022148:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802214a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802214c:	441a      	add	r2, r3
 802214e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022150:	922a      	str	r2, [sp, #168]	; 0xa8
 8022152:	3b01      	subs	r3, #1
 8022154:	f10e 0e02 	add.w	lr, lr, #2
 8022158:	9313      	str	r3, [sp, #76]	; 0x4c
 802215a:	e61c      	b.n	8021d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 802215c:	fb08 f000 	mul.w	r0, r8, r0
 8022160:	fb09 0303 	mla	r3, r9, r3, r0
 8022164:	e6dc      	b.n	8021f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8022166:	46b9      	mov	r9, r7
 8022168:	e704      	b.n	8021f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 802216a:	f1c2 0110 	rsb	r1, r2, #16
 802216e:	437a      	muls	r2, r7
 8022170:	fb09 2901 	mla	r9, r9, r1, r2
 8022174:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022178:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802217c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022180:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022184:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022188:	4302      	orrs	r2, r0
 802218a:	e795      	b.n	80220b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 802218c:	f8ae 2000 	strh.w	r2, [lr]
 8022190:	e7d6      	b.n	8022140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8022192:	b017      	add	sp, #92	; 0x5c
 8022194:	ecbd 8b08 	vpop	{d8-d11}
 8022198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802219c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802219c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221a0:	b085      	sub	sp, #20
 80221a2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80221a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80221aa:	9103      	str	r1, [sp, #12]
 80221ac:	fb05 7106 	mla	r1, r5, r6, r7
 80221b0:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 80221b4:	2d00      	cmp	r5, #0
 80221b6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80221ba:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80221be:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80221c2:	9401      	str	r4, [sp, #4]
 80221c4:	eb02 0901 	add.w	r9, r2, r1
 80221c8:	f2c0 80c0 	blt.w	802234c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80221cc:	45a8      	cmp	r8, r5
 80221ce:	f340 80bd 	ble.w	802234c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80221d2:	2f00      	cmp	r7, #0
 80221d4:	f2c0 80b6 	blt.w	8022344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80221d8:	42be      	cmp	r6, r7
 80221da:	f340 80b3 	ble.w	8022344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80221de:	f812 c001 	ldrb.w	ip, [r2, r1]
 80221e2:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80221e6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80221ea:	d019      	beq.n	8022220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 80221ec:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80221f0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80221f4:	435a      	muls	r2, r3
 80221f6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80221fa:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80221fe:	fb0c f403 	mul.w	r4, ip, r3
 8022202:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8022206:	f602 0201 	addw	r2, r2, #2049	; 0x801
 802220a:	441a      	add	r2, r3
 802220c:	f104 0320 	add.w	r3, r4, #32
 8022210:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8022214:	0a1b      	lsrs	r3, r3, #8
 8022216:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 802221a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802221e:	4319      	orrs	r1, r3
 8022220:	b289      	uxth	r1, r1
 8022222:	1c7b      	adds	r3, r7, #1
 8022224:	f100 8097 	bmi.w	8022356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8022228:	429e      	cmp	r6, r3
 802222a:	f340 8094 	ble.w	8022356 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 802222e:	2800      	cmp	r0, #0
 8022230:	f000 8094 	beq.w	802235c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8022234:	f899 4001 	ldrb.w	r4, [r9, #1]
 8022238:	9b01      	ldr	r3, [sp, #4]
 802223a:	2cff      	cmp	r4, #255	; 0xff
 802223c:	885b      	ldrh	r3, [r3, #2]
 802223e:	d01b      	beq.n	8022278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8022240:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8022244:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8022248:	fb0a f202 	mul.w	r2, sl, r2
 802224c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022250:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022254:	fb04 fa03 	mul.w	sl, r4, r3
 8022258:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 802225c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8022260:	441a      	add	r2, r3
 8022262:	f10a 0320 	add.w	r3, sl, #32
 8022266:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 802226a:	0a1b      	lsrs	r3, r3, #8
 802226c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8022270:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022274:	ea4b 0303 	orr.w	r3, fp, r3
 8022278:	b29b      	uxth	r3, r3
 802227a:	3501      	adds	r5, #1
 802227c:	d474      	bmi.n	8022368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 802227e:	45a8      	cmp	r8, r5
 8022280:	dd72      	ble.n	8022368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8022282:	f1be 0f00 	cmp.w	lr, #0
 8022286:	f000 8110 	beq.w	80224aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 802228a:	2f00      	cmp	r7, #0
 802228c:	db69      	blt.n	8022362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 802228e:	42be      	cmp	r6, r7
 8022290:	dd67      	ble.n	8022362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8022292:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022296:	9a01      	ldr	r2, [sp, #4]
 8022298:	2dff      	cmp	r5, #255	; 0xff
 802229a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 802229e:	d01c      	beq.n	80222da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80222a0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80222a4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80222a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80222ac:	fb05 fa0b 	mul.w	sl, r5, fp
 80222b0:	fb08 f802 	mul.w	r8, r8, r2
 80222b4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80222b8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80222bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80222c0:	4490      	add	r8, r2
 80222c2:	f10a 0220 	add.w	r2, sl, #32
 80222c6:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80222ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80222ce:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80222d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80222d6:	ea4b 0b0a 	orr.w	fp, fp, sl
 80222da:	fa1f fb8b 	uxth.w	fp, fp
 80222de:	3701      	adds	r7, #1
 80222e0:	d447      	bmi.n	8022372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80222e2:	42be      	cmp	r6, r7
 80222e4:	dd45      	ble.n	8022372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80222e6:	2800      	cmp	r0, #0
 80222e8:	d046      	beq.n	8022378 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 80222ea:	3601      	adds	r6, #1
 80222ec:	9a01      	ldr	r2, [sp, #4]
 80222ee:	f819 7006 	ldrb.w	r7, [r9, r6]
 80222f2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80222f6:	2fff      	cmp	r7, #255	; 0xff
 80222f8:	d01a      	beq.n	8022330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 80222fa:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80222fe:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8022302:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022306:	fb07 f902 	mul.w	r9, r7, r2
 802230a:	fb08 f806 	mul.w	r8, r8, r6
 802230e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022312:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8022316:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802231a:	44b0      	add	r8, r6
 802231c:	f109 0620 	add.w	r6, r9, #32
 8022320:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8022324:	0a36      	lsrs	r6, r6, #8
 8022326:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802232a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 802232e:	4332      	orrs	r2, r6
 8022330:	b292      	uxth	r2, r2
 8022332:	280f      	cmp	r0, #15
 8022334:	d922      	bls.n	802237c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8022336:	4b61      	ldr	r3, [pc, #388]	; (80224bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8022338:	4a61      	ldr	r2, [pc, #388]	; (80224c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 802233a:	4862      	ldr	r0, [pc, #392]	; (80224c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 802233c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8022340:	f005 f8b6 	bl	80274b0 <__assert_func>
 8022344:	f04f 0c00 	mov.w	ip, #0
 8022348:	4661      	mov	r1, ip
 802234a:	e76a      	b.n	8022222 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 802234c:	2400      	movs	r4, #0
 802234e:	46a4      	mov	ip, r4
 8022350:	4623      	mov	r3, r4
 8022352:	4621      	mov	r1, r4
 8022354:	e791      	b.n	802227a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8022356:	2400      	movs	r4, #0
 8022358:	4623      	mov	r3, r4
 802235a:	e78e      	b.n	802227a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 802235c:	4604      	mov	r4, r0
 802235e:	4603      	mov	r3, r0
 8022360:	e78b      	b.n	802227a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8022362:	2500      	movs	r5, #0
 8022364:	46ab      	mov	fp, r5
 8022366:	e7ba      	b.n	80222de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8022368:	2700      	movs	r7, #0
 802236a:	463d      	mov	r5, r7
 802236c:	463a      	mov	r2, r7
 802236e:	46bb      	mov	fp, r7
 8022370:	e7df      	b.n	8022332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8022372:	2700      	movs	r7, #0
 8022374:	463a      	mov	r2, r7
 8022376:	e7dc      	b.n	8022332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8022378:	4607      	mov	r7, r0
 802237a:	4602      	mov	r2, r0
 802237c:	f1be 0f0f 	cmp.w	lr, #15
 8022380:	d8d9      	bhi.n	8022336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8022382:	b286      	uxth	r6, r0
 8022384:	fa1f f98e 	uxth.w	r9, lr
 8022388:	fb06 f809 	mul.w	r8, r6, r9
 802238c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022390:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022394:	0136      	lsls	r6, r6, #4
 8022396:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802239a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802239e:	9601      	str	r6, [sp, #4]
 80223a0:	ea4a 0101 	orr.w	r1, sl, r1
 80223a4:	fa1f f689 	uxth.w	r6, r9
 80223a8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80223ac:	fb10 f90e 	smulbb	r9, r0, lr
 80223b0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80223b4:	9602      	str	r6, [sp, #8]
 80223b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223ba:	460e      	mov	r6, r1
 80223bc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80223c0:	f1ce 0110 	rsb	r1, lr, #16
 80223c4:	1a09      	subs	r1, r1, r0
 80223c6:	ea4a 0303 	orr.w	r3, sl, r3
 80223ca:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80223ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80223d2:	4343      	muls	r3, r0
 80223d4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80223d8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80223dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80223e0:	fb01 3106 	mla	r1, r1, r6, r3
 80223e4:	ea4a 0202 	orr.w	r2, sl, r2
 80223e8:	fb09 1302 	mla	r3, r9, r2, r1
 80223ec:	9a03      	ldr	r2, [sp, #12]
 80223ee:	9802      	ldr	r0, [sp, #8]
 80223f0:	8811      	ldrh	r1, [r2, #0]
 80223f2:	9a01      	ldr	r2, [sp, #4]
 80223f4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80223f8:	1a12      	subs	r2, r2, r0
 80223fa:	9801      	ldr	r0, [sp, #4]
 80223fc:	eba0 0608 	sub.w	r6, r0, r8
 8022400:	b2b6      	uxth	r6, r6
 8022402:	b292      	uxth	r2, r2
 8022404:	4374      	muls	r4, r6
 8022406:	fb0c 4402 	mla	r4, ip, r2, r4
 802240a:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 802240e:	9a02      	ldr	r2, [sp, #8]
 8022410:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022414:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022418:	fb02 4505 	mla	r5, r2, r5, r4
 802241c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8022420:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022424:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8022428:	fb08 5707 	mla	r7, r8, r7, r5
 802242c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8022430:	120a      	asrs	r2, r1, #8
 8022432:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022436:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802243a:	b2ff      	uxtb	r7, r7
 802243c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022440:	10c8      	asrs	r0, r1, #3
 8022442:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022446:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802244a:	00c9      	lsls	r1, r1, #3
 802244c:	437a      	muls	r2, r7
 802244e:	ea43 0e0e 	orr.w	lr, r3, lr
 8022452:	b2c9      	uxtb	r1, r1
 8022454:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022458:	fa1f f38e 	uxth.w	r3, lr
 802245c:	4378      	muls	r0, r7
 802245e:	434f      	muls	r7, r1
 8022460:	1c51      	adds	r1, r2, #1
 8022462:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8022466:	121a      	asrs	r2, r3, #8
 8022468:	f022 0207 	bic.w	r2, r2, #7
 802246c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022470:	1c41      	adds	r1, r0, #1
 8022472:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022476:	10d9      	asrs	r1, r3, #3
 8022478:	f021 0103 	bic.w	r1, r1, #3
 802247c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022480:	0212      	lsls	r2, r2, #8
 8022482:	00c9      	lsls	r1, r1, #3
 8022484:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022488:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802248c:	430a      	orrs	r2, r1
 802248e:	1c79      	adds	r1, r7, #1
 8022490:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022494:	00db      	lsls	r3, r3, #3
 8022496:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 802249a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802249e:	4313      	orrs	r3, r2
 80224a0:	9a03      	ldr	r2, [sp, #12]
 80224a2:	8013      	strh	r3, [r2, #0]
 80224a4:	b005      	add	sp, #20
 80224a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80224aa:	280f      	cmp	r0, #15
 80224ac:	f63f af43 	bhi.w	8022336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80224b0:	4677      	mov	r7, lr
 80224b2:	4675      	mov	r5, lr
 80224b4:	4672      	mov	r2, lr
 80224b6:	46f3      	mov	fp, lr
 80224b8:	e763      	b.n	8022382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80224ba:	bf00      	nop
 80224bc:	0802d9a3 	.word	0x0802d9a3
 80224c0:	0802ded2 	.word	0x0802ded2
 80224c4:	0802d970 	.word	0x0802d970

080224c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80224c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224cc:	ed2d 8b08 	vpush	{d8-d11}
 80224d0:	b093      	sub	sp, #76	; 0x4c
 80224d2:	eeb0 aa40 	vmov.f32	s20, s0
 80224d6:	9210      	str	r2, [sp, #64]	; 0x40
 80224d8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80224da:	910e      	str	r1, [sp, #56]	; 0x38
 80224dc:	9306      	str	r3, [sp, #24]
 80224de:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80224e2:	9011      	str	r0, [sp, #68]	; 0x44
 80224e4:	6850      	ldr	r0, [r2, #4]
 80224e6:	6812      	ldr	r2, [r2, #0]
 80224e8:	fb00 1303 	mla	r3, r0, r3, r1
 80224ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80224f0:	9307      	str	r3, [sp, #28]
 80224f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80224f4:	681b      	ldr	r3, [r3, #0]
 80224f6:	9308      	str	r3, [sp, #32]
 80224f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80224fa:	685b      	ldr	r3, [r3, #4]
 80224fc:	9309      	str	r3, [sp, #36]	; 0x24
 80224fe:	eef0 9a60 	vmov.f32	s19, s1
 8022502:	eeb0 9a41 	vmov.f32	s18, s2
 8022506:	eeb0 8a62 	vmov.f32	s16, s5
 802250a:	eef0 8a43 	vmov.f32	s17, s6
 802250e:	eef0 ba44 	vmov.f32	s23, s8
 8022512:	eeb0 ba64 	vmov.f32	s22, s9
 8022516:	eef0 aa45 	vmov.f32	s21, s10
 802251a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802251c:	2b00      	cmp	r3, #0
 802251e:	dc03      	bgt.n	8022528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8022520:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022522:	2b00      	cmp	r3, #0
 8022524:	f340 83b4 	ble.w	8022c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8022528:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802252a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802252e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022532:	1e48      	subs	r0, r1, #1
 8022534:	1e55      	subs	r5, r2, #1
 8022536:	9b06      	ldr	r3, [sp, #24]
 8022538:	2b00      	cmp	r3, #0
 802253a:	f340 8163 	ble.w	8022804 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 802253e:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8022540:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022542:	1436      	asrs	r6, r6, #16
 8022544:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022548:	d406      	bmi.n	8022558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802254a:	4286      	cmp	r6, r0
 802254c:	da04      	bge.n	8022558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802254e:	2b00      	cmp	r3, #0
 8022550:	db02      	blt.n	8022558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022552:	42ab      	cmp	r3, r5
 8022554:	f2c0 8157 	blt.w	8022806 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8022558:	3601      	adds	r6, #1
 802255a:	f100 8144 	bmi.w	80227e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802255e:	42b1      	cmp	r1, r6
 8022560:	f2c0 8141 	blt.w	80227e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022564:	3301      	adds	r3, #1
 8022566:	f100 813e 	bmi.w	80227e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802256a:	429a      	cmp	r2, r3
 802256c:	f2c0 813b 	blt.w	80227e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8022570:	9b06      	ldr	r3, [sp, #24]
 8022572:	9f07      	ldr	r7, [sp, #28]
 8022574:	930f      	str	r3, [sp, #60]	; 0x3c
 8022576:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802257a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802257c:	2b00      	cmp	r3, #0
 802257e:	f340 8164 	ble.w	802284a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8022582:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022584:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8022586:	1418      	asrs	r0, r3, #16
 8022588:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802258a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802258e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022590:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022594:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022596:	142d      	asrs	r5, r5, #16
 8022598:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802259c:	f100 81ee 	bmi.w	802297c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80225a0:	f102 3eff 	add.w	lr, r2, #4294967295
 80225a4:	4575      	cmp	r5, lr
 80225a6:	f280 81e9 	bge.w	802297c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80225aa:	2800      	cmp	r0, #0
 80225ac:	f2c0 81e6 	blt.w	802297c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80225b0:	f103 3eff 	add.w	lr, r3, #4294967295
 80225b4:	4570      	cmp	r0, lr
 80225b6:	f280 81e1 	bge.w	802297c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80225ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80225bc:	b212      	sxth	r2, r2
 80225be:	fb00 5002 	mla	r0, r0, r2, r5
 80225c2:	fa1f fe81 	uxth.w	lr, r1
 80225c6:	eb03 0a00 	add.w	sl, r3, r0
 80225ca:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80225ce:	f813 9000 	ldrb.w	r9, [r3, r0]
 80225d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80225d6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80225da:	b29b      	uxth	r3, r3
 80225dc:	f1bc 0f00 	cmp.w	ip, #0
 80225e0:	f000 8179 	beq.w	80228d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80225e4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80225e8:	940a      	str	r4, [sp, #40]	; 0x28
 80225ea:	eb0a 0b02 	add.w	fp, sl, r2
 80225ee:	fa1f fa8c 	uxth.w	sl, ip
 80225f2:	fb0a fe0e 	mul.w	lr, sl, lr
 80225f6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80225fa:	fa1f fa8a 	uxth.w	sl, sl
 80225fe:	eba5 050e 	sub.w	r5, r5, lr
 8022602:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022606:	940b      	str	r4, [sp, #44]	; 0x2c
 8022608:	eba3 030a 	sub.w	r3, r3, sl
 802260c:	b2ad      	uxth	r5, r5
 802260e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022610:	b29b      	uxth	r3, r3
 8022612:	fb08 f505 	mul.w	r5, r8, r5
 8022616:	fb09 5303 	mla	r3, r9, r3, r5
 802261a:	fb0a 3304 	mla	r3, sl, r4, r3
 802261e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022620:	fb0e 3304 	mla	r3, lr, r4, r3
 8022624:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022628:	2b00      	cmp	r3, #0
 802262a:	f000 80cf 	beq.w	80227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802262e:	9c08      	ldr	r4, [sp, #32]
 8022630:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022634:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022638:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802263c:	f000 8150 	beq.w	80228e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8022640:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022644:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022648:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802264c:	fb09 f000 	mul.w	r0, r9, r0
 8022650:	fb0a fe0e 	mul.w	lr, sl, lr
 8022654:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022658:	f100 0b20 	add.w	fp, r0, #32
 802265c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022660:	44ce      	add	lr, r9
 8022662:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022666:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802266a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802266e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022672:	ea4e 0909 	orr.w	r9, lr, r9
 8022676:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802267a:	8868      	ldrh	r0, [r5, #2]
 802267c:	d019      	beq.n	80226b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802267e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022682:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022686:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802268a:	fb08 f800 	mul.w	r8, r8, r0
 802268e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022692:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022696:	f108 0b20 	add.w	fp, r8, #32
 802269a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802269e:	4486      	add	lr, r0
 80226a0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80226a4:	0a00      	lsrs	r0, r0, #8
 80226a6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80226aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226ae:	ea4e 0000 	orr.w	r0, lr, r0
 80226b2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80226b6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80226ba:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80226be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80226c2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80226ca:	ea4e 0909 	orr.w	r9, lr, r9
 80226ce:	ea4a 0000 	orr.w	r0, sl, r0
 80226d2:	f1bc 0f00 	cmp.w	ip, #0
 80226d6:	f000 8105 	beq.w	80228e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80226da:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80226de:	3a01      	subs	r2, #1
 80226e0:	0052      	lsls	r2, r2, #1
 80226e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80226e4:	3202      	adds	r2, #2
 80226e6:	2cff      	cmp	r4, #255	; 0xff
 80226e8:	eb05 0e02 	add.w	lr, r5, r2
 80226ec:	5aaa      	ldrh	r2, [r5, r2]
 80226ee:	d018      	beq.n	8022722 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80226f0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80226f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226f8:	fb04 fa02 	mul.w	sl, r4, r2
 80226fc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022700:	fb08 f805 	mul.w	r8, r8, r5
 8022704:	f10a 0520 	add.w	r5, sl, #32
 8022708:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802270c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022710:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022714:	4442      	add	r2, r8
 8022716:	0a2d      	lsrs	r5, r5, #8
 8022718:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802271c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022720:	432a      	orrs	r2, r5
 8022722:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022724:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022728:	2cff      	cmp	r4, #255	; 0xff
 802272a:	d01a      	beq.n	8022762 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802272c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022730:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022734:	fb04 fa05 	mul.w	sl, r4, r5
 8022738:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802273c:	fb08 f80e 	mul.w	r8, r8, lr
 8022740:	f10a 0e20 	add.w	lr, sl, #32
 8022744:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022748:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802274c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022750:	4445      	add	r5, r8
 8022752:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022756:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802275a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802275e:	ea45 050e 	orr.w	r5, r5, lr
 8022762:	fb1c fe01 	smulbb	lr, ip, r1
 8022766:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802276a:	f1cc 0810 	rsb	r8, ip, #16
 802276e:	eba8 0801 	sub.w	r8, r8, r1
 8022772:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022776:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802277a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802277e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022782:	4341      	muls	r1, r0
 8022784:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022788:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802278c:	ea4a 0202 	orr.w	r2, sl, r2
 8022790:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022794:	fb09 1108 	mla	r1, r9, r8, r1
 8022798:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802279c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80227a0:	fb0c 1102 	mla	r1, ip, r2, r1
 80227a4:	ea4b 0505 	orr.w	r5, fp, r5
 80227a8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80227ac:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80227b0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80227b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227b8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80227bc:	ea42 0e0e 	orr.w	lr, r2, lr
 80227c0:	fa1f f28e 	uxth.w	r2, lr
 80227c4:	2bff      	cmp	r3, #255	; 0xff
 80227c6:	f040 80a1 	bne.w	802290c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80227ca:	803a      	strh	r2, [r7, #0]
 80227cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80227ce:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80227d0:	4413      	add	r3, r2
 80227d2:	9325      	str	r3, [sp, #148]	; 0x94
 80227d4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80227d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80227d8:	441a      	add	r2, r3
 80227da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80227dc:	9226      	str	r2, [sp, #152]	; 0x98
 80227de:	3b01      	subs	r3, #1
 80227e0:	3702      	adds	r7, #2
 80227e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80227e4:	e6c9      	b.n	802257a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80227e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80227e8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80227ea:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80227ec:	4433      	add	r3, r6
 80227ee:	9325      	str	r3, [sp, #148]	; 0x94
 80227f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80227f2:	441c      	add	r4, r3
 80227f4:	9b06      	ldr	r3, [sp, #24]
 80227f6:	9426      	str	r4, [sp, #152]	; 0x98
 80227f8:	3b01      	subs	r3, #1
 80227fa:	9306      	str	r3, [sp, #24]
 80227fc:	9b07      	ldr	r3, [sp, #28]
 80227fe:	3302      	adds	r3, #2
 8022800:	9307      	str	r3, [sp, #28]
 8022802:	e698      	b.n	8022536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022804:	d028      	beq.n	8022858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8022806:	9b06      	ldr	r3, [sp, #24]
 8022808:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802280a:	9d25      	ldr	r5, [sp, #148]	; 0x94
 802280c:	3b01      	subs	r3, #1
 802280e:	fb00 5003 	mla	r0, r0, r3, r5
 8022812:	1400      	asrs	r0, r0, #16
 8022814:	f53f aeac 	bmi.w	8022570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022818:	3901      	subs	r1, #1
 802281a:	4288      	cmp	r0, r1
 802281c:	f6bf aea8 	bge.w	8022570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022820:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022822:	9826      	ldr	r0, [sp, #152]	; 0x98
 8022824:	fb01 0303 	mla	r3, r1, r3, r0
 8022828:	141b      	asrs	r3, r3, #16
 802282a:	f53f aea1 	bmi.w	8022570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802282e:	3a01      	subs	r2, #1
 8022830:	4293      	cmp	r3, r2
 8022832:	f6bf ae9d 	bge.w	8022570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022836:	9b06      	ldr	r3, [sp, #24]
 8022838:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802283c:	930f      	str	r3, [sp, #60]	; 0x3c
 802283e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022842:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022844:	2b00      	cmp	r3, #0
 8022846:	f300 80b6 	bgt.w	80229b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802284a:	9b06      	ldr	r3, [sp, #24]
 802284c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022850:	9b07      	ldr	r3, [sp, #28]
 8022852:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022856:	9307      	str	r3, [sp, #28]
 8022858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802285a:	2b00      	cmp	r3, #0
 802285c:	f340 8218 	ble.w	8022c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8022860:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022864:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022868:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802286c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802286e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022872:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022876:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802287a:	eef0 6a48 	vmov.f32	s13, s16
 802287e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022882:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022886:	ee37 8a48 	vsub.f32	s16, s14, s16
 802288a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802288e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022892:	eef0 6a68 	vmov.f32	s13, s17
 8022896:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802289a:	ee18 2a10 	vmov	r2, s16
 802289e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80228a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80228a6:	ee18 2a90 	vmov	r2, s17
 80228aa:	9327      	str	r3, [sp, #156]	; 0x9c
 80228ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80228b2:	9328      	str	r3, [sp, #160]	; 0xa0
 80228b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80228b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80228b8:	3b01      	subs	r3, #1
 80228ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228be:	930e      	str	r3, [sp, #56]	; 0x38
 80228c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228c2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80228c6:	bf08      	it	eq
 80228c8:	4613      	moveq	r3, r2
 80228ca:	9306      	str	r3, [sp, #24]
 80228cc:	eef0 8a67 	vmov.f32	s17, s15
 80228d0:	eeb0 8a47 	vmov.f32	s16, s14
 80228d4:	e621      	b.n	802251a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80228d6:	fb08 f505 	mul.w	r5, r8, r5
 80228da:	fb09 5303 	mla	r3, r9, r3, r5
 80228de:	e6a1      	b.n	8022624 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80228e0:	4681      	mov	r9, r0
 80228e2:	e6c8      	b.n	8022676 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80228e4:	f1c1 0210 	rsb	r2, r1, #16
 80228e8:	4341      	muls	r1, r0
 80228ea:	fb09 1902 	mla	r9, r9, r2, r1
 80228ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80228f2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80228f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80228fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228fe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022902:	ea42 0909 	orr.w	r9, r2, r9
 8022906:	fa1f f289 	uxth.w	r2, r9
 802290a:	e75b      	b.n	80227c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 802290c:	f8b7 c000 	ldrh.w	ip, [r7]
 8022910:	43db      	mvns	r3, r3
 8022912:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022916:	fa5f fe83 	uxtb.w	lr, r3
 802291a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802291e:	fb00 f00e 	mul.w	r0, r0, lr
 8022922:	1c41      	adds	r1, r0, #1
 8022924:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022928:	1211      	asrs	r1, r2, #8
 802292a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802292e:	f021 0107 	bic.w	r1, r1, #7
 8022932:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022936:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802293a:	48d8      	ldr	r0, [pc, #864]	; (8022c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 802293c:	fb05 f50e 	mul.w	r5, r5, lr
 8022940:	b2c9      	uxtb	r1, r1
 8022942:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022946:	1c69      	adds	r1, r5, #1
 8022948:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802294c:	10d1      	asrs	r1, r2, #3
 802294e:	f021 0103 	bic.w	r1, r1, #3
 8022952:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022956:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802295a:	b2db      	uxtb	r3, r3
 802295c:	00c9      	lsls	r1, r1, #3
 802295e:	fb03 f30e 	mul.w	r3, r3, lr
 8022962:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022966:	4301      	orrs	r1, r0
 8022968:	1c58      	adds	r0, r3, #1
 802296a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802296e:	00d2      	lsls	r2, r2, #3
 8022970:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022974:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022978:	430a      	orrs	r2, r1
 802297a:	e726      	b.n	80227ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802297c:	f115 0e01 	adds.w	lr, r5, #1
 8022980:	f53f af24 	bmi.w	80227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8022984:	4572      	cmp	r2, lr
 8022986:	f6ff af21 	blt.w	80227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802298a:	f110 0e01 	adds.w	lr, r0, #1
 802298e:	f53f af1d 	bmi.w	80227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8022992:	4573      	cmp	r3, lr
 8022994:	f6ff af1a 	blt.w	80227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8022998:	b21b      	sxth	r3, r3
 802299a:	b212      	sxth	r2, r2
 802299c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80229a0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80229a4:	9301      	str	r3, [sp, #4]
 80229a6:	9200      	str	r2, [sp, #0]
 80229a8:	4639      	mov	r1, r7
 80229aa:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80229ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 80229b0:	f7ff fbf4 	bl	802219c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80229b4:	e70a      	b.n	80227cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80229b6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80229b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80229bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80229be:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80229c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80229c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80229ca:	141f      	asrs	r7, r3, #16
 80229cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80229ce:	141b      	asrs	r3, r3, #16
 80229d0:	fb01 3707 	mla	r7, r1, r7, r3
 80229d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229d6:	fa1f fc82 	uxth.w	ip, r2
 80229da:	eb03 0a07 	add.w	sl, r3, r7
 80229de:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80229e2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80229e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80229ea:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80229ee:	b29b      	uxth	r3, r3
 80229f0:	2d00      	cmp	r5, #0
 80229f2:	f000 80fe 	beq.w	8022bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80229f6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80229fa:	940c      	str	r4, [sp, #48]	; 0x30
 80229fc:	eb0a 0b01 	add.w	fp, sl, r1
 8022a00:	fa1f fa85 	uxth.w	sl, r5
 8022a04:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a08:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022a0c:	fa1f fa8a 	uxth.w	sl, sl
 8022a10:	eba0 000c 	sub.w	r0, r0, ip
 8022a14:	eba3 030a 	sub.w	r3, r3, sl
 8022a18:	b280      	uxth	r0, r0
 8022a1a:	fb08 f000 	mul.w	r0, r8, r0
 8022a1e:	b29b      	uxth	r3, r3
 8022a20:	fb09 0303 	mla	r3, r9, r3, r0
 8022a24:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022a26:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022a2a:	940d      	str	r4, [sp, #52]	; 0x34
 8022a2c:	fb0a 3300 	mla	r3, sl, r0, r3
 8022a30:	fb0c 3304 	mla	r3, ip, r4, r3
 8022a34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022a38:	2b00      	cmp	r3, #0
 8022a3a:	f000 80cc 	beq.w	8022bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8022a3e:	9808      	ldr	r0, [sp, #32]
 8022a40:	9c08      	ldr	r4, [sp, #32]
 8022a42:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022a46:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022a4a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022a4e:	f000 80d5 	beq.w	8022bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8022a52:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022a56:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022a5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a5e:	fb09 f707 	mul.w	r7, r9, r7
 8022a62:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a66:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022a6a:	f107 0b20 	add.w	fp, r7, #32
 8022a6e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022a72:	44cc      	add	ip, r9
 8022a74:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022a78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022a80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022a84:	ea4c 0909 	orr.w	r9, ip, r9
 8022a88:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022a8c:	8847      	ldrh	r7, [r0, #2]
 8022a8e:	d019      	beq.n	8022ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022a90:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022a94:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022a98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a9c:	fb08 f807 	mul.w	r8, r8, r7
 8022aa0:	fb0a fc0c 	mul.w	ip, sl, ip
 8022aa4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022aa8:	f108 0b20 	add.w	fp, r8, #32
 8022aac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022ab0:	44bc      	add	ip, r7
 8022ab2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022ab6:	0a3f      	lsrs	r7, r7, #8
 8022ab8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022abc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ac0:	ea4c 0707 	orr.w	r7, ip, r7
 8022ac4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022ac8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022acc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022ad0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022ad4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022ad8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022adc:	ea4c 0909 	orr.w	r9, ip, r9
 8022ae0:	ea4a 0707 	orr.w	r7, sl, r7
 8022ae4:	2d00      	cmp	r5, #0
 8022ae6:	f000 808b 	beq.w	8022c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8022aea:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022aee:	3901      	subs	r1, #1
 8022af0:	0049      	lsls	r1, r1, #1
 8022af2:	3102      	adds	r1, #2
 8022af4:	eb00 0c01 	add.w	ip, r0, r1
 8022af8:	5a41      	ldrh	r1, [r0, r1]
 8022afa:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022afc:	28ff      	cmp	r0, #255	; 0xff
 8022afe:	d019      	beq.n	8022b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022b00:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022b02:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022b06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b0a:	fb04 fa01 	mul.w	sl, r4, r1
 8022b0e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b12:	fb08 f800 	mul.w	r8, r8, r0
 8022b16:	f10a 0020 	add.w	r0, sl, #32
 8022b1a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022b1e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022b22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b26:	4441      	add	r1, r8
 8022b28:	0a00      	lsrs	r0, r0, #8
 8022b2a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022b2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022b32:	4301      	orrs	r1, r0
 8022b34:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022b36:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022b3a:	2cff      	cmp	r4, #255	; 0xff
 8022b3c:	d01a      	beq.n	8022b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022b3e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022b42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022b46:	fb04 fa00 	mul.w	sl, r4, r0
 8022b4a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022b4e:	fb08 f80c 	mul.w	r8, r8, ip
 8022b52:	f10a 0c20 	add.w	ip, sl, #32
 8022b56:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022b5a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022b5e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022b62:	4440      	add	r0, r8
 8022b64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b68:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022b6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022b70:	ea40 000c 	orr.w	r0, r0, ip
 8022b74:	fb15 fc02 	smulbb	ip, r5, r2
 8022b78:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022b7c:	f1c5 0810 	rsb	r8, r5, #16
 8022b80:	eba8 0802 	sub.w	r8, r8, r2
 8022b84:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022b88:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022b8c:	437a      	muls	r2, r7
 8022b8e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022b92:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022b96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022b9a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b9e:	fb09 2208 	mla	r2, r9, r8, r2
 8022ba2:	ea4a 0101 	orr.w	r1, sl, r1
 8022ba6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022baa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022bae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022bb2:	fb05 2201 	mla	r2, r5, r1, r2
 8022bb6:	ea4b 0000 	orr.w	r0, fp, r0
 8022bba:	fb0c 2200 	mla	r2, ip, r0, r2
 8022bbe:	0d57      	lsrs	r7, r2, #21
 8022bc0:	0952      	lsrs	r2, r2, #5
 8022bc2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022bca:	433a      	orrs	r2, r7
 8022bcc:	2bff      	cmp	r3, #255	; 0xff
 8022bce:	b292      	uxth	r2, r2
 8022bd0:	d127      	bne.n	8022c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022bd2:	f8ae 2000 	strh.w	r2, [lr]
 8022bd6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022bd8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8022bda:	4413      	add	r3, r2
 8022bdc:	9325      	str	r3, [sp, #148]	; 0x94
 8022bde:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8022be0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022be2:	441a      	add	r2, r3
 8022be4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022be6:	9226      	str	r2, [sp, #152]	; 0x98
 8022be8:	3b01      	subs	r3, #1
 8022bea:	f10e 0e02 	add.w	lr, lr, #2
 8022bee:	930f      	str	r3, [sp, #60]	; 0x3c
 8022bf0:	e627      	b.n	8022842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022bf2:	fb08 f000 	mul.w	r0, r8, r0
 8022bf6:	fb09 0303 	mla	r3, r9, r3, r0
 8022bfa:	e71b      	b.n	8022a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022bfc:	46b9      	mov	r9, r7
 8022bfe:	e743      	b.n	8022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022c00:	f1c2 0110 	rsb	r1, r2, #16
 8022c04:	437a      	muls	r2, r7
 8022c06:	fb09 2901 	mla	r9, r9, r1, r2
 8022c0a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022c0e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022c12:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022c16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c1a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c1e:	4302      	orrs	r2, r0
 8022c20:	e7d4      	b.n	8022bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022c22:	f8be 7000 	ldrh.w	r7, [lr]
 8022c26:	4c1d      	ldr	r4, [pc, #116]	; (8022c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8022c28:	43db      	mvns	r3, r3
 8022c2a:	1238      	asrs	r0, r7, #8
 8022c2c:	fa5f fc83 	uxtb.w	ip, r3
 8022c30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022c34:	10fd      	asrs	r5, r7, #3
 8022c36:	fb00 f00c 	mul.w	r0, r0, ip
 8022c3a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022c3e:	fb05 f10c 	mul.w	r1, r5, ip
 8022c42:	1c45      	adds	r5, r0, #1
 8022c44:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022c48:	1215      	asrs	r5, r2, #8
 8022c4a:	f025 0507 	bic.w	r5, r5, #7
 8022c4e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022c52:	1c4d      	adds	r5, r1, #1
 8022c54:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022c58:	10d1      	asrs	r1, r2, #3
 8022c5a:	f021 0103 	bic.w	r1, r1, #3
 8022c5e:	00fb      	lsls	r3, r7, #3
 8022c60:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022c64:	b2db      	uxtb	r3, r3
 8022c66:	b2c0      	uxtb	r0, r0
 8022c68:	00c9      	lsls	r1, r1, #3
 8022c6a:	fb03 f30c 	mul.w	r3, r3, ip
 8022c6e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c72:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022c76:	4308      	orrs	r0, r1
 8022c78:	1c59      	adds	r1, r3, #1
 8022c7a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022c7e:	00d2      	lsls	r2, r2, #3
 8022c80:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022c84:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022c88:	4318      	orrs	r0, r3
 8022c8a:	f8ae 0000 	strh.w	r0, [lr]
 8022c8e:	e7a2      	b.n	8022bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8022c90:	b013      	add	sp, #76	; 0x4c
 8022c92:	ecbd 8b08 	vpop	{d8-d11}
 8022c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c9a:	bf00      	nop
 8022c9c:	fffff800 	.word	0xfffff800

08022ca0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022ca0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022ca4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8022ca8:	fb0c 4e03 	mla	lr, ip, r3, r4
 8022cac:	f1bc 0f00 	cmp.w	ip, #0
 8022cb0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022cb4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8022cb8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8022cbc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8022cc0:	8808      	ldrh	r0, [r1, #0]
 8022cc2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8022cc6:	db2f      	blt.n	8022d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8022cc8:	45e2      	cmp	sl, ip
 8022cca:	dd2d      	ble.n	8022d28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8022ccc:	2c00      	cmp	r4, #0
 8022cce:	db29      	blt.n	8022d24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8022cd0:	42a3      	cmp	r3, r4
 8022cd2:	dd27      	ble.n	8022d24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8022cd4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8022cd8:	1c62      	adds	r2, r4, #1
 8022cda:	d428      	bmi.n	8022d2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8022cdc:	4293      	cmp	r3, r2
 8022cde:	dd26      	ble.n	8022d2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8022ce0:	b32f      	cbz	r7, 8022d2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8022ce2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8022ce6:	f11c 0c01 	adds.w	ip, ip, #1
 8022cea:	d424      	bmi.n	8022d36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8022cec:	45e2      	cmp	sl, ip
 8022cee:	dd22      	ble.n	8022d36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8022cf0:	2e00      	cmp	r6, #0
 8022cf2:	f000 809d 	beq.w	8022e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8022cf6:	2c00      	cmp	r4, #0
 8022cf8:	db1b      	blt.n	8022d32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8022cfa:	42a3      	cmp	r3, r4
 8022cfc:	dd19      	ble.n	8022d32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8022cfe:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8022d02:	3401      	adds	r4, #1
 8022d04:	d41a      	bmi.n	8022d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8022d06:	42a3      	cmp	r3, r4
 8022d08:	dd18      	ble.n	8022d3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8022d0a:	b1cf      	cbz	r7, 8022d40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8022d0c:	3301      	adds	r3, #1
 8022d0e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8022d12:	2f0f      	cmp	r7, #15
 8022d14:	d915      	bls.n	8022d42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8022d16:	4b49      	ldr	r3, [pc, #292]	; (8022e3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8022d18:	4a49      	ldr	r2, [pc, #292]	; (8022e40 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8022d1a:	484a      	ldr	r0, [pc, #296]	; (8022e44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8022d1c:	f240 11db 	movw	r1, #475	; 0x1db
 8022d20:	f004 fbc6 	bl	80274b0 <__assert_func>
 8022d24:	4681      	mov	r9, r0
 8022d26:	e7d7      	b.n	8022cd8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8022d28:	4686      	mov	lr, r0
 8022d2a:	4681      	mov	r9, r0
 8022d2c:	e7db      	b.n	8022ce6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8022d2e:	4686      	mov	lr, r0
 8022d30:	e7d9      	b.n	8022ce6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8022d32:	4684      	mov	ip, r0
 8022d34:	e7e5      	b.n	8022d02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8022d36:	4603      	mov	r3, r0
 8022d38:	4684      	mov	ip, r0
 8022d3a:	e7ea      	b.n	8022d12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8022d3c:	4603      	mov	r3, r0
 8022d3e:	e7e8      	b.n	8022d12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8022d40:	4603      	mov	r3, r0
 8022d42:	2e0f      	cmp	r6, #15
 8022d44:	d8e7      	bhi.n	8022d16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8022d46:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8022d4a:	fb17 f806 	smulbb	r8, r7, r6
 8022d4e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022d52:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8022d56:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022d5a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8022d5e:	ea44 0909 	orr.w	r9, r4, r9
 8022d62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d66:	f1c6 0410 	rsb	r4, r6, #16
 8022d6a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022d6e:	1be4      	subs	r4, r4, r7
 8022d70:	041a      	lsls	r2, r3, #16
 8022d72:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8022d76:	ea4a 0e0e 	orr.w	lr, sl, lr
 8022d7a:	fb07 fe0e 	mul.w	lr, r7, lr
 8022d7e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d82:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8022d86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d8a:	fb04 e409 	mla	r4, r4, r9, lr
 8022d8e:	4313      	orrs	r3, r2
 8022d90:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8022d94:	fb08 4303 	mla	r3, r8, r3, r4
 8022d98:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022d9c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8022da0:	4322      	orrs	r2, r4
 8022da2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8022da6:	fb06 3202 	mla	r2, r6, r2, r3
 8022daa:	0d53      	lsrs	r3, r2, #21
 8022dac:	0952      	lsrs	r2, r2, #5
 8022dae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022db2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022db6:	431a      	orrs	r2, r3
 8022db8:	b293      	uxth	r3, r2
 8022dba:	b2af      	uxth	r7, r5
 8022dbc:	1202      	asrs	r2, r0, #8
 8022dbe:	43ed      	mvns	r5, r5
 8022dc0:	b2ed      	uxtb	r5, r5
 8022dc2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022dc6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022dca:	fb12 f205 	smulbb	r2, r2, r5
 8022dce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022dd2:	fb0c 2c07 	mla	ip, ip, r7, r2
 8022dd6:	00dc      	lsls	r4, r3, #3
 8022dd8:	10da      	asrs	r2, r3, #3
 8022dda:	10c6      	asrs	r6, r0, #3
 8022ddc:	00c3      	lsls	r3, r0, #3
 8022dde:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022de2:	b2db      	uxtb	r3, r3
 8022de4:	fb16 f605 	smulbb	r6, r6, r5
 8022de8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022dec:	b2e4      	uxtb	r4, r4
 8022dee:	fb13 f305 	smulbb	r3, r3, r5
 8022df2:	fa1f fc8c 	uxth.w	ip, ip
 8022df6:	fb02 6207 	mla	r2, r2, r7, r6
 8022dfa:	fb04 3307 	mla	r3, r4, r7, r3
 8022dfe:	b296      	uxth	r6, r2
 8022e00:	b29a      	uxth	r2, r3
 8022e02:	f10c 0301 	add.w	r3, ip, #1
 8022e06:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022e0a:	1c53      	adds	r3, r2, #1
 8022e0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e10:	1c72      	adds	r2, r6, #1
 8022e12:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8022e16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022e1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022e1e:	0952      	lsrs	r2, r2, #5
 8022e20:	ea43 030c 	orr.w	r3, r3, ip
 8022e24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e28:	4313      	orrs	r3, r2
 8022e2a:	800b      	strh	r3, [r1, #0]
 8022e2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022e30:	2f0f      	cmp	r7, #15
 8022e32:	f63f af70 	bhi.w	8022d16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8022e36:	4603      	mov	r3, r0
 8022e38:	4684      	mov	ip, r0
 8022e3a:	e784      	b.n	8022d46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8022e3c:	0802d9a3 	.word	0x0802d9a3
 8022e40:	0802df7b 	.word	0x0802df7b
 8022e44:	0802d970 	.word	0x0802d970

08022e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e4c:	ed2d 8b08 	vpush	{d8-d11}
 8022e50:	b093      	sub	sp, #76	; 0x4c
 8022e52:	461d      	mov	r5, r3
 8022e54:	9210      	str	r2, [sp, #64]	; 0x40
 8022e56:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022e58:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8022e5c:	920b      	str	r2, [sp, #44]	; 0x2c
 8022e5e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8022e62:	910a      	str	r1, [sp, #40]	; 0x28
 8022e64:	6859      	ldr	r1, [r3, #4]
 8022e66:	681b      	ldr	r3, [r3, #0]
 8022e68:	9011      	str	r0, [sp, #68]	; 0x44
 8022e6a:	fb01 2707 	mla	r7, r1, r7, r2
 8022e6e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022e72:	9307      	str	r3, [sp, #28]
 8022e74:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022e76:	681b      	ldr	r3, [r3, #0]
 8022e78:	9309      	str	r3, [sp, #36]	; 0x24
 8022e7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022e7c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8022e80:	43db      	mvns	r3, r3
 8022e82:	b2db      	uxtb	r3, r3
 8022e84:	eeb0 aa40 	vmov.f32	s20, s0
 8022e88:	eef0 9a60 	vmov.f32	s19, s1
 8022e8c:	eeb0 9a41 	vmov.f32	s18, s2
 8022e90:	eeb0 8a62 	vmov.f32	s16, s5
 8022e94:	eef0 8a43 	vmov.f32	s17, s6
 8022e98:	eef0 ba44 	vmov.f32	s23, s8
 8022e9c:	eeb0 ba64 	vmov.f32	s22, s9
 8022ea0:	eef0 aa45 	vmov.f32	s21, s10
 8022ea4:	9308      	str	r3, [sp, #32]
 8022ea6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ea8:	2b00      	cmp	r3, #0
 8022eaa:	dc03      	bgt.n	8022eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022eac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022eae:	2b00      	cmp	r3, #0
 8022eb0:	f340 8203 	ble.w	80232ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8022eb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022eb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022eba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022ebe:	1e48      	subs	r0, r1, #1
 8022ec0:	f102 3cff 	add.w	ip, r2, #4294967295
 8022ec4:	2d00      	cmp	r5, #0
 8022ec6:	f340 80da 	ble.w	802307e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022eca:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022ece:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022ed2:	d406      	bmi.n	8022ee2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022ed4:	4586      	cmp	lr, r0
 8022ed6:	da04      	bge.n	8022ee2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022ed8:	2b00      	cmp	r3, #0
 8022eda:	db02      	blt.n	8022ee2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022edc:	4563      	cmp	r3, ip
 8022ede:	f2c0 80cf 	blt.w	8023080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8022ee2:	f11e 0e01 	adds.w	lr, lr, #1
 8022ee6:	f100 80c1 	bmi.w	802306c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022eea:	4571      	cmp	r1, lr
 8022eec:	f2c0 80be 	blt.w	802306c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022ef0:	3301      	adds	r3, #1
 8022ef2:	f100 80bb 	bmi.w	802306c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022ef6:	429a      	cmp	r2, r3
 8022ef8:	f2c0 80b8 	blt.w	802306c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022efc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022f00:	46a9      	mov	r9, r5
 8022f02:	f1b9 0f00 	cmp.w	r9, #0
 8022f06:	f340 80d8 	ble.w	80230ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022f0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022f0c:	1421      	asrs	r1, r4, #16
 8022f0e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022f12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022f16:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022f1a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022f1e:	f100 8111 	bmi.w	8023144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022f22:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022f26:	4551      	cmp	r1, sl
 8022f28:	f280 810c 	bge.w	8023144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022f2c:	2800      	cmp	r0, #0
 8022f2e:	f2c0 8109 	blt.w	8023144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022f32:	f103 3aff 	add.w	sl, r3, #4294967295
 8022f36:	4550      	cmp	r0, sl
 8022f38:	f280 8104 	bge.w	8023144 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8022f3c:	fa0f f38e 	sxth.w	r3, lr
 8022f40:	fb00 1103 	mla	r1, r0, r3, r1
 8022f44:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022f46:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022f4a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022f4e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022f52:	f1bc 0f00 	cmp.w	ip, #0
 8022f56:	d007      	beq.n	8022f68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8022f58:	005b      	lsls	r3, r3, #1
 8022f5a:	eb0a 0003 	add.w	r0, sl, r3
 8022f5e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022f62:	930c      	str	r3, [sp, #48]	; 0x30
 8022f64:	8843      	ldrh	r3, [r0, #2]
 8022f66:	930d      	str	r3, [sp, #52]	; 0x34
 8022f68:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022f6c:	fb12 f30c 	smulbb	r3, r2, ip
 8022f70:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022f74:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022f78:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f7c:	10db      	asrs	r3, r3, #3
 8022f7e:	ea40 000e 	orr.w	r0, r0, lr
 8022f82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f86:	f1cc 0e10 	rsb	lr, ip, #16
 8022f8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f8e:	ebae 0e02 	sub.w	lr, lr, r2
 8022f92:	ea4a 0101 	orr.w	r1, sl, r1
 8022f96:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f9a:	4351      	muls	r1, r2
 8022f9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022f9e:	9f08      	ldr	r7, [sp, #32]
 8022fa0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022fa4:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022fa8:	0410      	lsls	r0, r2, #16
 8022faa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022fae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022fb2:	4310      	orrs	r0, r2
 8022fb4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022fb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022fb8:	0412      	lsls	r2, r2, #16
 8022fba:	fb03 e000 	mla	r0, r3, r0, lr
 8022fbe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022fc2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022fc6:	ea42 020e 	orr.w	r2, r2, lr
 8022fca:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022fce:	fb03 0302 	mla	r3, r3, r2, r0
 8022fd2:	0d5a      	lsrs	r2, r3, #21
 8022fd4:	095b      	lsrs	r3, r3, #5
 8022fd6:	f8b8 0000 	ldrh.w	r0, [r8]
 8022fda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fde:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022fe2:	4313      	orrs	r3, r2
 8022fe4:	b29b      	uxth	r3, r3
 8022fe6:	1201      	asrs	r1, r0, #8
 8022fe8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022fec:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022ff0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ff4:	fb11 f107 	smulbb	r1, r1, r7
 8022ff8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022ffc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023000:	00c0      	lsls	r0, r0, #3
 8023002:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023006:	b2c0      	uxtb	r0, r0
 8023008:	10d9      	asrs	r1, r3, #3
 802300a:	00db      	lsls	r3, r3, #3
 802300c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023010:	b2db      	uxtb	r3, r3
 8023012:	fb10 f007 	smulbb	r0, r0, r7
 8023016:	fa1f fc8c 	uxth.w	ip, ip
 802301a:	fb03 0302 	mla	r3, r3, r2, r0
 802301e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023022:	fb1e fe07 	smulbb	lr, lr, r7
 8023026:	fb01 e102 	mla	r1, r1, r2, lr
 802302a:	b29a      	uxth	r2, r3
 802302c:	f10c 0301 	add.w	r3, ip, #1
 8023030:	b289      	uxth	r1, r1
 8023032:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023036:	1c53      	adds	r3, r2, #1
 8023038:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802303c:	1c4a      	adds	r2, r1, #1
 802303e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023042:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023046:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802304a:	0949      	lsrs	r1, r1, #5
 802304c:	ea43 030c 	orr.w	r3, r3, ip
 8023050:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023054:	430b      	orrs	r3, r1
 8023056:	f8a8 3000 	strh.w	r3, [r8]
 802305a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802305c:	441c      	add	r4, r3
 802305e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023060:	f108 0802 	add.w	r8, r8, #2
 8023064:	441e      	add	r6, r3
 8023066:	f109 39ff 	add.w	r9, r9, #4294967295
 802306a:	e74a      	b.n	8022f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 802306c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802306e:	441c      	add	r4, r3
 8023070:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023072:	441e      	add	r6, r3
 8023074:	9b07      	ldr	r3, [sp, #28]
 8023076:	3302      	adds	r3, #2
 8023078:	3d01      	subs	r5, #1
 802307a:	9307      	str	r3, [sp, #28]
 802307c:	e722      	b.n	8022ec4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802307e:	d022      	beq.n	80230c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8023080:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023082:	1e6b      	subs	r3, r5, #1
 8023084:	fb00 4003 	mla	r0, r0, r3, r4
 8023088:	1400      	asrs	r0, r0, #16
 802308a:	f53f af37 	bmi.w	8022efc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802308e:	3901      	subs	r1, #1
 8023090:	4288      	cmp	r0, r1
 8023092:	f6bf af33 	bge.w	8022efc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8023096:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023098:	fb01 6303 	mla	r3, r1, r3, r6
 802309c:	141b      	asrs	r3, r3, #16
 802309e:	f53f af2d 	bmi.w	8022efc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80230a2:	3a01      	subs	r2, #1
 80230a4:	4293      	cmp	r3, r2
 80230a6:	f6bf af29 	bge.w	8022efc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80230aa:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80230ae:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80230b2:	46a8      	mov	r8, r5
 80230b4:	f1b8 0f00 	cmp.w	r8, #0
 80230b8:	dc5e      	bgt.n	8023178 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80230ba:	9b07      	ldr	r3, [sp, #28]
 80230bc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80230c0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80230c4:	9307      	str	r3, [sp, #28]
 80230c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80230c8:	2b00      	cmp	r3, #0
 80230ca:	f340 80f6 	ble.w	80232ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80230ce:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80230d2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80230d6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80230da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80230dc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80230e0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80230e4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80230e8:	eef0 6a48 	vmov.f32	s13, s16
 80230ec:	ee69 7a27 	vmul.f32	s15, s18, s15
 80230f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80230f4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80230f8:	ee16 4a90 	vmov	r4, s13
 80230fc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8023100:	eef0 6a68 	vmov.f32	s13, s17
 8023104:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023108:	ee18 2a10 	vmov	r2, s16
 802310c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8023110:	fb92 f3f3 	sdiv	r3, r2, r3
 8023114:	ee18 2a90 	vmov	r2, s17
 8023118:	9327      	str	r3, [sp, #156]	; 0x9c
 802311a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802311c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023120:	9328      	str	r3, [sp, #160]	; 0xa0
 8023122:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023124:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023126:	3b01      	subs	r3, #1
 8023128:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802312c:	930a      	str	r3, [sp, #40]	; 0x28
 802312e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023130:	ee16 6a90 	vmov	r6, s13
 8023134:	bf14      	ite	ne
 8023136:	461d      	movne	r5, r3
 8023138:	4615      	moveq	r5, r2
 802313a:	eef0 8a67 	vmov.f32	s17, s15
 802313e:	eeb0 8a47 	vmov.f32	s16, s14
 8023142:	e6b0      	b.n	8022ea6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8023144:	f111 0a01 	adds.w	sl, r1, #1
 8023148:	d487      	bmi.n	802305a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802314a:	45d6      	cmp	lr, sl
 802314c:	db85      	blt.n	802305a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802314e:	f110 0a01 	adds.w	sl, r0, #1
 8023152:	d482      	bmi.n	802305a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023154:	4553      	cmp	r3, sl
 8023156:	db80      	blt.n	802305a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023158:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802315a:	9101      	str	r1, [sp, #4]
 802315c:	b21b      	sxth	r3, r3
 802315e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023162:	9300      	str	r3, [sp, #0]
 8023164:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023168:	fa0f f38e 	sxth.w	r3, lr
 802316c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802316e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023170:	4641      	mov	r1, r8
 8023172:	f7ff fd95 	bl	8022ca0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023176:	e770      	b.n	802305a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023178:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802317a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802317c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023180:	1430      	asrs	r0, r6, #16
 8023182:	1423      	asrs	r3, r4, #16
 8023184:	fb01 3000 	mla	r0, r1, r0, r3
 8023188:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802318a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802318e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023192:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023196:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802319a:	8858      	ldrh	r0, [r3, #2]
 802319c:	f1be 0f00 	cmp.w	lr, #0
 80231a0:	d00b      	beq.n	80231ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80231a2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80231a6:	3901      	subs	r1, #1
 80231a8:	0049      	lsls	r1, r1, #1
 80231aa:	3102      	adds	r1, #2
 80231ac:	eb03 0b01 	add.w	fp, r3, r1
 80231b0:	5a5b      	ldrh	r3, [r3, r1]
 80231b2:	930e      	str	r3, [sp, #56]	; 0x38
 80231b4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80231b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80231ba:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80231be:	fb12 f30e 	smulbb	r3, r2, lr
 80231c2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80231c6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80231ca:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80231ce:	10db      	asrs	r3, r3, #3
 80231d0:	ea41 010c 	orr.w	r1, r1, ip
 80231d4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231d8:	f1ce 0c10 	rsb	ip, lr, #16
 80231dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80231e0:	ebac 0c02 	sub.w	ip, ip, r2
 80231e4:	ea4b 0000 	orr.w	r0, fp, r0
 80231e8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231ec:	4350      	muls	r0, r2
 80231ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80231f0:	9f08      	ldr	r7, [sp, #32]
 80231f2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80231f6:	fb0c 0c01 	mla	ip, ip, r1, r0
 80231fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80231fe:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023202:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023204:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023206:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802320a:	0412      	lsls	r2, r2, #16
 802320c:	ea4b 0101 	orr.w	r1, fp, r1
 8023210:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023214:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023218:	fb03 c101 	mla	r1, r3, r1, ip
 802321c:	4302      	orrs	r2, r0
 802321e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023222:	fb03 1202 	mla	r2, r3, r2, r1
 8023226:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 802322a:	0952      	lsrs	r2, r2, #5
 802322c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023230:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023234:	f8b9 2000 	ldrh.w	r2, [r9]
 8023238:	ea4b 0303 	orr.w	r3, fp, r3
 802323c:	b29b      	uxth	r3, r3
 802323e:	1211      	asrs	r1, r2, #8
 8023240:	1218      	asrs	r0, r3, #8
 8023242:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023246:	fb11 f107 	smulbb	r1, r1, r7
 802324a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802324e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023252:	00d2      	lsls	r2, r2, #3
 8023254:	fb00 100a 	mla	r0, r0, sl, r1
 8023258:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802325c:	10d9      	asrs	r1, r3, #3
 802325e:	b2d2      	uxtb	r2, r2
 8023260:	00db      	lsls	r3, r3, #3
 8023262:	fb1c fc07 	smulbb	ip, ip, r7
 8023266:	fb12 f207 	smulbb	r2, r2, r7
 802326a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802326e:	b2db      	uxtb	r3, r3
 8023270:	b280      	uxth	r0, r0
 8023272:	fb01 c10a 	mla	r1, r1, sl, ip
 8023276:	fb03 230a 	mla	r3, r3, sl, r2
 802327a:	b29b      	uxth	r3, r3
 802327c:	b289      	uxth	r1, r1
 802327e:	1c42      	adds	r2, r0, #1
 8023280:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023284:	f101 0c01 	add.w	ip, r1, #1
 8023288:	1c5a      	adds	r2, r3, #1
 802328a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802328e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023292:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023294:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023298:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802329c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80232a0:	4310      	orrs	r0, r2
 80232a2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80232a6:	441c      	add	r4, r3
 80232a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80232aa:	ea40 000c 	orr.w	r0, r0, ip
 80232ae:	f829 0b02 	strh.w	r0, [r9], #2
 80232b2:	441e      	add	r6, r3
 80232b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80232b8:	e6fc      	b.n	80230b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80232ba:	b013      	add	sp, #76	; 0x4c
 80232bc:	ecbd 8b08 	vpop	{d8-d11}
 80232c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080232c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80232c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80232c8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80232cc:	fb06 5c03 	mla	ip, r6, r3, r5
 80232d0:	2e00      	cmp	r6, #0
 80232d2:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80232d6:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80232da:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80232de:	8808      	ldrh	r0, [r1, #0]
 80232e0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80232e4:	db2e      	blt.n	8023344 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80232e6:	45b0      	cmp	r8, r6
 80232e8:	dd2c      	ble.n	8023344 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80232ea:	2d00      	cmp	r5, #0
 80232ec:	db28      	blt.n	8023340 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80232ee:	42ab      	cmp	r3, r5
 80232f0:	dd26      	ble.n	8023340 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80232f2:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80232f6:	1c6a      	adds	r2, r5, #1
 80232f8:	d427      	bmi.n	802334a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80232fa:	4293      	cmp	r3, r2
 80232fc:	dd25      	ble.n	802334a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80232fe:	b324      	cbz	r4, 802334a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8023300:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8023304:	3601      	adds	r6, #1
 8023306:	d424      	bmi.n	8023352 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8023308:	45b0      	cmp	r8, r6
 802330a:	dd22      	ble.n	8023352 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 802330c:	b31f      	cbz	r7, 8023356 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 802330e:	2d00      	cmp	r5, #0
 8023310:	db1d      	blt.n	802334e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8023312:	42ab      	cmp	r3, r5
 8023314:	dd1b      	ble.n	802334e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8023316:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 802331a:	3501      	adds	r5, #1
 802331c:	d405      	bmi.n	802332a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 802331e:	42ab      	cmp	r3, r5
 8023320:	dd03      	ble.n	802332a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8023322:	b124      	cbz	r4, 802332e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8023324:	3301      	adds	r3, #1
 8023326:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 802332a:	2c0f      	cmp	r4, #15
 802332c:	d801      	bhi.n	8023332 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802332e:	2f0f      	cmp	r7, #15
 8023330:	d914      	bls.n	802335c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8023332:	4b27      	ldr	r3, [pc, #156]	; (80233d0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8023334:	4a27      	ldr	r2, [pc, #156]	; (80233d4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8023336:	4828      	ldr	r0, [pc, #160]	; (80233d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8023338:	f240 11db 	movw	r1, #475	; 0x1db
 802333c:	f004 f8b8 	bl	80274b0 <__assert_func>
 8023340:	4684      	mov	ip, r0
 8023342:	e7d8      	b.n	80232f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8023344:	4602      	mov	r2, r0
 8023346:	4684      	mov	ip, r0
 8023348:	e7dc      	b.n	8023304 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 802334a:	4602      	mov	r2, r0
 802334c:	e7da      	b.n	8023304 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 802334e:	4606      	mov	r6, r0
 8023350:	e7e3      	b.n	802331a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8023352:	4606      	mov	r6, r0
 8023354:	e7e9      	b.n	802332a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8023356:	2c0f      	cmp	r4, #15
 8023358:	d8eb      	bhi.n	8023332 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802335a:	4606      	mov	r6, r0
 802335c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8023360:	fb14 f307 	smulbb	r3, r4, r7
 8023364:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8023368:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 802336c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023370:	10db      	asrs	r3, r3, #3
 8023372:	ea45 0c0c 	orr.w	ip, r5, ip
 8023376:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802337a:	f1c7 0510 	rsb	r5, r7, #16
 802337e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023382:	1b2d      	subs	r5, r5, r4
 8023384:	ea4e 0202 	orr.w	r2, lr, r2
 8023388:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 802338c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8023390:	4354      	muls	r4, r2
 8023392:	fb05 450c 	mla	r5, r5, ip, r4
 8023396:	0404      	lsls	r4, r0, #16
 8023398:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802339c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233a0:	4320      	orrs	r0, r4
 80233a2:	fb03 5400 	mla	r4, r3, r0, r5
 80233a6:	0430      	lsls	r0, r6, #16
 80233a8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80233ac:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80233b0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80233b4:	4330      	orrs	r0, r6
 80233b6:	fb07 4000 	mla	r0, r7, r0, r4
 80233ba:	0d43      	lsrs	r3, r0, #21
 80233bc:	0940      	lsrs	r0, r0, #5
 80233be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80233c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233c6:	4318      	orrs	r0, r3
 80233c8:	8008      	strh	r0, [r1, #0]
 80233ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80233ce:	bf00      	nop
 80233d0:	0802d9a3 	.word	0x0802d9a3
 80233d4:	0802df7b 	.word	0x0802df7b
 80233d8:	0802d970 	.word	0x0802d970

080233dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80233dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233e0:	ed2d 8b08 	vpush	{d8-d11}
 80233e4:	b08f      	sub	sp, #60	; 0x3c
 80233e6:	461d      	mov	r5, r3
 80233e8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80233ea:	920c      	str	r2, [sp, #48]	; 0x30
 80233ec:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 80233f0:	9107      	str	r1, [sp, #28]
 80233f2:	6859      	ldr	r1, [r3, #4]
 80233f4:	681b      	ldr	r3, [r3, #0]
 80233f6:	900d      	str	r0, [sp, #52]	; 0x34
 80233f8:	fb01 2707 	mla	r7, r1, r7, r2
 80233fc:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023400:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023402:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8023406:	f8d3 8000 	ldr.w	r8, [r3]
 802340a:	eeb0 aa40 	vmov.f32	s20, s0
 802340e:	eef0 9a60 	vmov.f32	s19, s1
 8023412:	eeb0 9a41 	vmov.f32	s18, s2
 8023416:	eeb0 8a62 	vmov.f32	s16, s5
 802341a:	eef0 8a43 	vmov.f32	s17, s6
 802341e:	eef0 ba44 	vmov.f32	s23, s8
 8023422:	eeb0 ba64 	vmov.f32	s22, s9
 8023426:	eef0 aa45 	vmov.f32	s21, s10
 802342a:	9b07      	ldr	r3, [sp, #28]
 802342c:	2b00      	cmp	r3, #0
 802342e:	dc03      	bgt.n	8023438 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8023430:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023432:	2b00      	cmp	r3, #0
 8023434:	f340 8181 	ble.w	802373a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023438:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802343a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802343e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023442:	1e48      	subs	r0, r1, #1
 8023444:	f102 3cff 	add.w	ip, r2, #4294967295
 8023448:	2d00      	cmp	r5, #0
 802344a:	f340 809b 	ble.w	8023584 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 802344e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023452:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023456:	d406      	bmi.n	8023466 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023458:	4586      	cmp	lr, r0
 802345a:	da04      	bge.n	8023466 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802345c:	2b00      	cmp	r3, #0
 802345e:	db02      	blt.n	8023466 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023460:	4563      	cmp	r3, ip
 8023462:	f2c0 8090 	blt.w	8023586 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8023466:	f11e 0e01 	adds.w	lr, lr, #1
 802346a:	f100 8084 	bmi.w	8023576 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802346e:	4571      	cmp	r1, lr
 8023470:	f2c0 8081 	blt.w	8023576 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023474:	3301      	adds	r3, #1
 8023476:	d47e      	bmi.n	8023576 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023478:	429a      	cmp	r2, r3
 802347a:	db7c      	blt.n	8023576 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802347c:	46aa      	mov	sl, r5
 802347e:	46b9      	mov	r9, r7
 8023480:	f1ba 0f00 	cmp.w	sl, #0
 8023484:	f340 8099 	ble.w	80235ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8023488:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802348a:	1421      	asrs	r1, r4, #16
 802348c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023490:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023494:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023498:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802349c:	f100 80d0 	bmi.w	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80234a0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80234a4:	4559      	cmp	r1, fp
 80234a6:	f280 80cb 	bge.w	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80234aa:	2800      	cmp	r0, #0
 80234ac:	f2c0 80c8 	blt.w	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80234b0:	f103 3bff 	add.w	fp, r3, #4294967295
 80234b4:	4558      	cmp	r0, fp
 80234b6:	f280 80c3 	bge.w	8023640 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80234ba:	fa0f fe8e 	sxth.w	lr, lr
 80234be:	fb00 110e 	mla	r1, r0, lr, r1
 80234c2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80234c6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80234ca:	8841      	ldrh	r1, [r0, #2]
 80234cc:	f1bc 0f00 	cmp.w	ip, #0
 80234d0:	d00b      	beq.n	80234ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80234d2:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80234d6:	3b01      	subs	r3, #1
 80234d8:	005b      	lsls	r3, r3, #1
 80234da:	3302      	adds	r3, #2
 80234dc:	eb00 0e03 	add.w	lr, r0, r3
 80234e0:	5ac3      	ldrh	r3, [r0, r3]
 80234e2:	9308      	str	r3, [sp, #32]
 80234e4:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80234e8:	9309      	str	r3, [sp, #36]	; 0x24
 80234ea:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80234ee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80234f2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80234f6:	ea40 000b 	orr.w	r0, r0, fp
 80234fa:	fb12 f30c 	smulbb	r3, r2, ip
 80234fe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023502:	10db      	asrs	r3, r3, #3
 8023504:	f1cc 0e10 	rsb	lr, ip, #16
 8023508:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802350c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023510:	ebae 0e02 	sub.w	lr, lr, r2
 8023514:	ea4b 0101 	orr.w	r1, fp, r1
 8023518:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802351c:	4351      	muls	r1, r2
 802351e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023520:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023524:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023528:	0410      	lsls	r0, r2, #16
 802352a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802352e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023532:	4310      	orrs	r0, r2
 8023534:	9a08      	ldr	r2, [sp, #32]
 8023536:	9908      	ldr	r1, [sp, #32]
 8023538:	0412      	lsls	r2, r2, #16
 802353a:	fb03 e000 	mla	r0, r3, r0, lr
 802353e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023542:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023546:	ea42 020e 	orr.w	r2, r2, lr
 802354a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802354e:	fb03 0302 	mla	r3, r3, r2, r0
 8023552:	0d5a      	lsrs	r2, r3, #21
 8023554:	095b      	lsrs	r3, r3, #5
 8023556:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802355a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802355e:	4313      	orrs	r3, r2
 8023560:	f8a9 3000 	strh.w	r3, [r9]
 8023564:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023566:	441c      	add	r4, r3
 8023568:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802356a:	f109 0902 	add.w	r9, r9, #2
 802356e:	441e      	add	r6, r3
 8023570:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023574:	e784      	b.n	8023480 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8023576:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023578:	441c      	add	r4, r3
 802357a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802357c:	3d01      	subs	r5, #1
 802357e:	441e      	add	r6, r3
 8023580:	3702      	adds	r7, #2
 8023582:	e761      	b.n	8023448 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023584:	d01d      	beq.n	80235c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8023586:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023588:	1e6b      	subs	r3, r5, #1
 802358a:	fb00 4003 	mla	r0, r0, r3, r4
 802358e:	1400      	asrs	r0, r0, #16
 8023590:	f53f af74 	bmi.w	802347c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8023594:	3901      	subs	r1, #1
 8023596:	4288      	cmp	r0, r1
 8023598:	f6bf af70 	bge.w	802347c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802359c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802359e:	fb01 6303 	mla	r3, r1, r3, r6
 80235a2:	141b      	asrs	r3, r3, #16
 80235a4:	f53f af6a 	bmi.w	802347c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80235a8:	3a01      	subs	r2, #1
 80235aa:	4293      	cmp	r3, r2
 80235ac:	f6bf af66 	bge.w	802347c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80235b0:	46a9      	mov	r9, r5
 80235b2:	46ba      	mov	sl, r7
 80235b4:	f1b9 0f00 	cmp.w	r9, #0
 80235b8:	dc5a      	bgt.n	8023670 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80235ba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80235be:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80235c2:	9b07      	ldr	r3, [sp, #28]
 80235c4:	2b00      	cmp	r3, #0
 80235c6:	f340 80b8 	ble.w	802373a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80235ca:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80235ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235d2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80235d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80235d8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80235dc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80235e0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80235e4:	eef0 6a48 	vmov.f32	s13, s16
 80235e8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80235ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235f0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80235f4:	ee16 4a90 	vmov	r4, s13
 80235f8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80235fc:	eef0 6a68 	vmov.f32	s13, s17
 8023600:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023604:	ee18 2a10 	vmov	r2, s16
 8023608:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802360c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023610:	ee18 2a90 	vmov	r2, s17
 8023614:	9323      	str	r3, [sp, #140]	; 0x8c
 8023616:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023618:	fb92 f3f3 	sdiv	r3, r2, r3
 802361c:	9324      	str	r3, [sp, #144]	; 0x90
 802361e:	9b07      	ldr	r3, [sp, #28]
 8023620:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023622:	3b01      	subs	r3, #1
 8023624:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023628:	9307      	str	r3, [sp, #28]
 802362a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802362c:	ee16 6a90 	vmov	r6, s13
 8023630:	bf14      	ite	ne
 8023632:	461d      	movne	r5, r3
 8023634:	4615      	moveq	r5, r2
 8023636:	eef0 8a67 	vmov.f32	s17, s15
 802363a:	eeb0 8a47 	vmov.f32	s16, s14
 802363e:	e6f4      	b.n	802342a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023640:	f111 0b01 	adds.w	fp, r1, #1
 8023644:	d48e      	bmi.n	8023564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023646:	45de      	cmp	lr, fp
 8023648:	db8c      	blt.n	8023564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802364a:	f110 0b01 	adds.w	fp, r0, #1
 802364e:	d489      	bmi.n	8023564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023650:	455b      	cmp	r3, fp
 8023652:	db87      	blt.n	8023564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023654:	b21b      	sxth	r3, r3
 8023656:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802365a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802365e:	9300      	str	r3, [sp, #0]
 8023660:	4642      	mov	r2, r8
 8023662:	fa0f f38e 	sxth.w	r3, lr
 8023666:	4649      	mov	r1, r9
 8023668:	980d      	ldr	r0, [sp, #52]	; 0x34
 802366a:	f7ff fe2b 	bl	80232c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802366e:	e779      	b.n	8023564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023670:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023672:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023676:	1420      	asrs	r0, r4, #16
 8023678:	1431      	asrs	r1, r6, #16
 802367a:	fb03 0101 	mla	r1, r3, r1, r0
 802367e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023682:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023686:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802368a:	8841      	ldrh	r1, [r0, #2]
 802368c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023690:	f1be 0f00 	cmp.w	lr, #0
 8023694:	d00b      	beq.n	80236ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8023696:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802369a:	3b01      	subs	r3, #1
 802369c:	005b      	lsls	r3, r3, #1
 802369e:	3302      	adds	r3, #2
 80236a0:	eb00 0b03 	add.w	fp, r0, r3
 80236a4:	5ac3      	ldrh	r3, [r0, r3]
 80236a6:	930a      	str	r3, [sp, #40]	; 0x28
 80236a8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80236ac:	930b      	str	r3, [sp, #44]	; 0x2c
 80236ae:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80236b2:	fb12 f30e 	smulbb	r3, r2, lr
 80236b6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80236ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80236be:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80236c2:	10db      	asrs	r3, r3, #3
 80236c4:	ea40 000c 	orr.w	r0, r0, ip
 80236c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80236cc:	f1ce 0c10 	rsb	ip, lr, #16
 80236d0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80236d4:	ebac 0c02 	sub.w	ip, ip, r2
 80236d8:	ea4b 0101 	orr.w	r1, fp, r1
 80236dc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80236e0:	4351      	muls	r1, r2
 80236e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80236e4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80236e8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80236ec:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80236f0:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80236f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80236f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80236f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80236fc:	0412      	lsls	r2, r2, #16
 80236fe:	ea4b 0000 	orr.w	r0, fp, r0
 8023702:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023706:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802370a:	fb03 c000 	mla	r0, r3, r0, ip
 802370e:	ea42 0b0b 	orr.w	fp, r2, fp
 8023712:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023716:	fb03 000b 	mla	r0, r3, fp, r0
 802371a:	0d43      	lsrs	r3, r0, #21
 802371c:	0940      	lsrs	r0, r0, #5
 802371e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023722:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023726:	4318      	orrs	r0, r3
 8023728:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802372a:	f82a 0b02 	strh.w	r0, [sl], #2
 802372e:	441c      	add	r4, r3
 8023730:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023732:	f109 39ff 	add.w	r9, r9, #4294967295
 8023736:	441e      	add	r6, r3
 8023738:	e73c      	b.n	80235b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802373a:	b00f      	add	sp, #60	; 0x3c
 802373c:	ecbd 8b08 	vpop	{d8-d11}
 8023740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023744:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023748:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 802374c:	fb04 5603 	mla	r6, r4, r3, r5
 8023750:	2c00      	cmp	r4, #0
 8023752:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8023756:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 802375a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 802375e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8023762:	db36      	blt.n	80237d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8023764:	45a6      	cmp	lr, r4
 8023766:	dd34      	ble.n	80237d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8023768:	2d00      	cmp	r5, #0
 802376a:	db30      	blt.n	80237ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 802376c:	42ab      	cmp	r3, r5
 802376e:	dd2e      	ble.n	80237ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8023770:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8023774:	1c6e      	adds	r6, r5, #1
 8023776:	d42f      	bmi.n	80237d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8023778:	42b3      	cmp	r3, r6
 802377a:	dd2d      	ble.n	80237d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 802377c:	b370      	cbz	r0, 80237dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 802377e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8023782:	3401      	adds	r4, #1
 8023784:	d42e      	bmi.n	80237e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8023786:	45a6      	cmp	lr, r4
 8023788:	dd2c      	ble.n	80237e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 802378a:	b377      	cbz	r7, 80237ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 802378c:	2d00      	cmp	r5, #0
 802378e:	db27      	blt.n	80237e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8023790:	42ab      	cmp	r3, r5
 8023792:	dd25      	ble.n	80237e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8023794:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023798:	3501      	adds	r5, #1
 802379a:	d429      	bmi.n	80237f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 802379c:	42ab      	cmp	r3, r5
 802379e:	dd27      	ble.n	80237f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80237a0:	b340      	cbz	r0, 80237f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80237a2:	3301      	adds	r3, #1
 80237a4:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80237a8:	280f      	cmp	r0, #15
 80237aa:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80237ae:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80237b2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80237b6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80237ba:	d801      	bhi.n	80237c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 80237bc:	2f0f      	cmp	r7, #15
 80237be:	d91b      	bls.n	80237f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80237c0:	4b8d      	ldr	r3, [pc, #564]	; (80239f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 80237c2:	4a8e      	ldr	r2, [pc, #568]	; (80239fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 80237c4:	488e      	ldr	r0, [pc, #568]	; (8023a00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80237c6:	f240 11f9 	movw	r1, #505	; 0x1f9
 80237ca:	f003 fe71 	bl	80274b0 <__assert_func>
 80237ce:	2200      	movs	r2, #0
 80237d0:	e7d0      	b.n	8023774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80237d2:	2600      	movs	r6, #0
 80237d4:	4632      	mov	r2, r6
 80237d6:	e7d4      	b.n	8023782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80237d8:	2600      	movs	r6, #0
 80237da:	e7d2      	b.n	8023782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80237dc:	4606      	mov	r6, r0
 80237de:	e7d0      	b.n	8023782 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80237e0:	2400      	movs	r4, #0
 80237e2:	e7d9      	b.n	8023798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80237e4:	2300      	movs	r3, #0
 80237e6:	461c      	mov	r4, r3
 80237e8:	e7de      	b.n	80237a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80237ea:	463b      	mov	r3, r7
 80237ec:	463c      	mov	r4, r7
 80237ee:	e7db      	b.n	80237a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80237f0:	2300      	movs	r3, #0
 80237f2:	e7d9      	b.n	80237a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80237f4:	4603      	mov	r3, r0
 80237f6:	e7d7      	b.n	80237a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80237f8:	b280      	uxth	r0, r0
 80237fa:	b2bf      	uxth	r7, r7
 80237fc:	fb07 fe00 	mul.w	lr, r7, r0
 8023800:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8023804:	0100      	lsls	r0, r0, #4
 8023806:	eba0 0c0e 	sub.w	ip, r0, lr
 802380a:	b2bf      	uxth	r7, r7
 802380c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8023810:	fa1f fc8c 	uxth.w	ip, ip
 8023814:	1bed      	subs	r5, r5, r7
 8023816:	b2ad      	uxth	r5, r5
 8023818:	fb0a f00c 	mul.w	r0, sl, ip
 802381c:	fb0b 0005 	mla	r0, fp, r5, r0
 8023820:	fb07 0009 	mla	r0, r7, r9, r0
 8023824:	fb0e 0008 	mla	r0, lr, r8, r0
 8023828:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802382c:	9001      	str	r0, [sp, #4]
 802382e:	2800      	cmp	r0, #0
 8023830:	f000 80de 	beq.w	80239f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8023834:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8023838:	d018      	beq.n	802386c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 802383a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 802383e:	fb0b f000 	mul.w	r0, fp, r0
 8023842:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023846:	fb0b fb02 	mul.w	fp, fp, r2
 802384a:	0a02      	lsrs	r2, r0, #8
 802384c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023850:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023854:	4402      	add	r2, r0
 8023856:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802385a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802385e:	0a12      	lsrs	r2, r2, #8
 8023860:	0a00      	lsrs	r0, r0, #8
 8023862:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023866:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802386a:	4302      	orrs	r2, r0
 802386c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8023870:	d01a      	beq.n	80238a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8023872:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8023876:	fb0a f000 	mul.w	r0, sl, r0
 802387a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802387e:	fb0a fa06 	mul.w	sl, sl, r6
 8023882:	0a06      	lsrs	r6, r0, #8
 8023884:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023888:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802388c:	4406      	add	r6, r0
 802388e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8023892:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8023896:	0a36      	lsrs	r6, r6, #8
 8023898:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802389c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80238a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238a4:	ea46 060a 	orr.w	r6, r6, sl
 80238a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80238ac:	d01b      	beq.n	80238e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 80238ae:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80238b2:	fb09 fa0a 	mul.w	sl, r9, sl
 80238b6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80238ba:	fb09 f004 	mul.w	r0, r9, r4
 80238be:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80238c2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80238c6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80238ca:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80238ce:	4454      	add	r4, sl
 80238d0:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80238d4:	0a24      	lsrs	r4, r4, #8
 80238d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80238da:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80238de:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80238e2:	ea44 0409 	orr.w	r4, r4, r9
 80238e6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80238ea:	d01b      	beq.n	8023924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80238ec:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80238f0:	fb08 f909 	mul.w	r9, r8, r9
 80238f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80238f8:	fb08 f003 	mul.w	r0, r8, r3
 80238fc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8023900:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023904:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8023908:	f500 7880 	add.w	r8, r0, #256	; 0x100
 802390c:	444b      	add	r3, r9
 802390e:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8023912:	0a1b      	lsrs	r3, r3, #8
 8023914:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023918:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802391c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023920:	ea43 0308 	orr.w	r3, r3, r8
 8023924:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8023928:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802392c:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8023930:	fb0c f808 	mul.w	r8, ip, r8
 8023934:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023938:	fb0c f606 	mul.w	r6, ip, r6
 802393c:	fb05 8909 	mla	r9, r5, r9, r8
 8023940:	fb05 6502 	mla	r5, r5, r2, r6
 8023944:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8023948:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802394c:	9a01      	ldr	r2, [sp, #4]
 802394e:	8808      	ldrh	r0, [r1, #0]
 8023950:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023954:	fb07 9908 	mla	r9, r7, r8, r9
 8023958:	fb07 5704 	mla	r7, r7, r4, r5
 802395c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8023960:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023964:	b2b6      	uxth	r6, r6
 8023966:	fb0e 9808 	mla	r8, lr, r8, r9
 802396a:	fb0e 7e03 	mla	lr, lr, r3, r7
 802396e:	4372      	muls	r2, r6
 8023970:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023974:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023978:	1c53      	adds	r3, r2, #1
 802397a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 802397e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8023982:	ea48 0e0e 	orr.w	lr, r8, lr
 8023986:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802398a:	1205      	asrs	r5, r0, #8
 802398c:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8023990:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023994:	b2db      	uxtb	r3, r3
 8023996:	fb12 f206 	smulbb	r2, r2, r6
 802399a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802399e:	fb05 2503 	mla	r5, r5, r3, r2
 80239a2:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80239a6:	10c2      	asrs	r2, r0, #3
 80239a8:	fa5f fe8e 	uxtb.w	lr, lr
 80239ac:	00c0      	lsls	r0, r0, #3
 80239ae:	fb14 f406 	smulbb	r4, r4, r6
 80239b2:	b2c0      	uxtb	r0, r0
 80239b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80239b8:	fb1e fe06 	smulbb	lr, lr, r6
 80239bc:	fb02 4203 	mla	r2, r2, r3, r4
 80239c0:	b2ad      	uxth	r5, r5
 80239c2:	fb00 e303 	mla	r3, r0, r3, lr
 80239c6:	b298      	uxth	r0, r3
 80239c8:	b294      	uxth	r4, r2
 80239ca:	1c6b      	adds	r3, r5, #1
 80239cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80239d0:	1c62      	adds	r2, r4, #1
 80239d2:	1c43      	adds	r3, r0, #1
 80239d4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80239d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80239dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80239e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239e4:	0952      	lsrs	r2, r2, #5
 80239e6:	432b      	orrs	r3, r5
 80239e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239ec:	4313      	orrs	r3, r2
 80239ee:	800b      	strh	r3, [r1, #0]
 80239f0:	b003      	add	sp, #12
 80239f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80239f6:	bf00      	nop
 80239f8:	0802d9a3 	.word	0x0802d9a3
 80239fc:	0802ded2 	.word	0x0802ded2
 8023a00:	0802d970 	.word	0x0802d970

08023a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a08:	ed2d 8b08 	vpush	{d8-d11}
 8023a0c:	b09d      	sub	sp, #116	; 0x74
 8023a0e:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8023a12:	9219      	str	r2, [sp, #100]	; 0x64
 8023a14:	9307      	str	r3, [sp, #28]
 8023a16:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8023a18:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8023a1c:	931a      	str	r3, [sp, #104]	; 0x68
 8023a1e:	9117      	str	r1, [sp, #92]	; 0x5c
 8023a20:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8023a24:	901b      	str	r0, [sp, #108]	; 0x6c
 8023a26:	6850      	ldr	r0, [r2, #4]
 8023a28:	6812      	ldr	r2, [r2, #0]
 8023a2a:	fb00 1303 	mla	r3, r0, r3, r1
 8023a2e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a32:	930a      	str	r3, [sp, #40]	; 0x28
 8023a34:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8023a36:	681b      	ldr	r3, [r3, #0]
 8023a38:	9310      	str	r3, [sp, #64]	; 0x40
 8023a3a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023a3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a40:	eeb0 aa40 	vmov.f32	s20, s0
 8023a44:	eef0 9a60 	vmov.f32	s19, s1
 8023a48:	eeb0 9a41 	vmov.f32	s18, s2
 8023a4c:	eeb0 8a62 	vmov.f32	s16, s5
 8023a50:	eef0 8a43 	vmov.f32	s17, s6
 8023a54:	eef0 ba44 	vmov.f32	s23, s8
 8023a58:	eeb0 ba64 	vmov.f32	s22, s9
 8023a5c:	eef0 aa45 	vmov.f32	s21, s10
 8023a60:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a62:	2b00      	cmp	r3, #0
 8023a64:	dc03      	bgt.n	8023a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8023a66:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023a68:	2b00      	cmp	r3, #0
 8023a6a:	f340 8375 	ble.w	8024158 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8023a6e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8023a70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023a78:	1e48      	subs	r0, r1, #1
 8023a7a:	1e57      	subs	r7, r2, #1
 8023a7c:	9b07      	ldr	r3, [sp, #28]
 8023a7e:	2b00      	cmp	r3, #0
 8023a80:	f340 818e 	ble.w	8023da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8023a84:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023a88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023a8c:	d406      	bmi.n	8023a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8023a8e:	4584      	cmp	ip, r0
 8023a90:	da04      	bge.n	8023a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8023a92:	2b00      	cmp	r3, #0
 8023a94:	db02      	blt.n	8023a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8023a96:	42bb      	cmp	r3, r7
 8023a98:	f2c0 8183 	blt.w	8023da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8023a9c:	f11c 0c01 	adds.w	ip, ip, #1
 8023aa0:	f100 8173 	bmi.w	8023d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023aa4:	4561      	cmp	r1, ip
 8023aa6:	f2c0 8170 	blt.w	8023d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023aaa:	3301      	adds	r3, #1
 8023aac:	f100 816d 	bmi.w	8023d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023ab0:	429a      	cmp	r2, r3
 8023ab2:	f2c0 816a 	blt.w	8023d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023ab6:	9b07      	ldr	r3, [sp, #28]
 8023ab8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023aba:	9318      	str	r3, [sp, #96]	; 0x60
 8023abc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023abe:	2b00      	cmp	r3, #0
 8023ac0:	f340 818c 	ble.w	8023ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8023ac4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8023ac6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8023ac8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023acc:	689b      	ldr	r3, [r3, #8]
 8023ace:	1422      	asrs	r2, r4, #16
 8023ad0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023ad4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023ad8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023adc:	f100 81cd 	bmi.w	8023e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023ae0:	f103 38ff 	add.w	r8, r3, #4294967295
 8023ae4:	4542      	cmp	r2, r8
 8023ae6:	f280 81c8 	bge.w	8023e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023aea:	f1bc 0f00 	cmp.w	ip, #0
 8023aee:	f2c0 81c4 	blt.w	8023e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023af2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023af6:	45c4      	cmp	ip, r8
 8023af8:	f280 81bf 	bge.w	8023e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8023afc:	b21b      	sxth	r3, r3
 8023afe:	fb0c 2203 	mla	r2, ip, r3, r2
 8023b02:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023b04:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023b08:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023b0c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023b10:	2800      	cmp	r0, #0
 8023b12:	f000 81a9 	beq.w	8023e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8023b16:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023b1a:	950c      	str	r5, [sp, #48]	; 0x30
 8023b1c:	0e2d      	lsrs	r5, r5, #24
 8023b1e:	9513      	str	r5, [sp, #76]	; 0x4c
 8023b20:	b181      	cbz	r1, 8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8023b22:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023b26:	3b01      	subs	r3, #1
 8023b28:	009b      	lsls	r3, r3, #2
 8023b2a:	3304      	adds	r3, #4
 8023b2c:	eb08 0c03 	add.w	ip, r8, r3
 8023b30:	f858 3003 	ldr.w	r3, [r8, r3]
 8023b34:	9308      	str	r3, [sp, #32]
 8023b36:	0e1b      	lsrs	r3, r3, #24
 8023b38:	9311      	str	r3, [sp, #68]	; 0x44
 8023b3a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023b3e:	930d      	str	r3, [sp, #52]	; 0x34
 8023b40:	0e1b      	lsrs	r3, r3, #24
 8023b42:	9314      	str	r3, [sp, #80]	; 0x50
 8023b44:	b280      	uxth	r0, r0
 8023b46:	b289      	uxth	r1, r1
 8023b48:	fb00 f901 	mul.w	r9, r0, r1
 8023b4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023b50:	0100      	lsls	r0, r0, #4
 8023b52:	eba0 0809 	sub.w	r8, r0, r9
 8023b56:	b289      	uxth	r1, r1
 8023b58:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023b5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023b5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023b60:	fa1f f888 	uxth.w	r8, r8
 8023b64:	1a5b      	subs	r3, r3, r1
 8023b66:	b29b      	uxth	r3, r3
 8023b68:	fb08 f000 	mul.w	r0, r8, r0
 8023b6c:	fb03 000e 	mla	r0, r3, lr, r0
 8023b70:	fb01 0005 	mla	r0, r1, r5, r0
 8023b74:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023b76:	fb09 0005 	mla	r0, r9, r5, r0
 8023b7a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023b7e:	2800      	cmp	r0, #0
 8023b80:	f000 80fa 	beq.w	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023b84:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023b88:	d01b      	beq.n	8023bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8023b8a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023b8e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023b92:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b96:	fb0e fe02 	mul.w	lr, lr, r2
 8023b9a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023b9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023ba2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023ba6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023baa:	4452      	add	r2, sl
 8023bac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023bb0:	0a12      	lsrs	r2, r2, #8
 8023bb2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023bb6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023bba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023bbe:	ea42 020c 	orr.w	r2, r2, ip
 8023bc2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023bc4:	2dff      	cmp	r5, #255	; 0xff
 8023bc6:	d021      	beq.n	8023c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8023bc8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023bca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023bce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023bd0:	fb05 fb0b 	mul.w	fp, r5, fp
 8023bd4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023bd6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023bda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023bdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023be0:	fb05 fa0a 	mul.w	sl, r5, sl
 8023be4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023be8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023bec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023bf0:	44de      	add	lr, fp
 8023bf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023bf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023bfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023bfe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023c02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c06:	ea4e 050a 	orr.w	r5, lr, sl
 8023c0a:	950c      	str	r5, [sp, #48]	; 0x30
 8023c0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023c0e:	2dff      	cmp	r5, #255	; 0xff
 8023c10:	d021      	beq.n	8023c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8023c12:	9d08      	ldr	r5, [sp, #32]
 8023c14:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023c18:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023c1a:	fb05 fb0b 	mul.w	fp, r5, fp
 8023c1e:	9d08      	ldr	r5, [sp, #32]
 8023c20:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c24:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023c26:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023c2a:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023c32:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023c36:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023c3a:	44de      	add	lr, fp
 8023c3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023c4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c50:	ea4e 050a 	orr.w	r5, lr, sl
 8023c54:	9508      	str	r5, [sp, #32]
 8023c56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023c58:	2dff      	cmp	r5, #255	; 0xff
 8023c5a:	d021      	beq.n	8023ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8023c5c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023c5e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023c62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023c64:	fb05 fb0b 	mul.w	fp, r5, fp
 8023c68:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023c6a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c6e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023c70:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023c74:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023c7c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023c80:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023c84:	44de      	add	lr, fp
 8023c86:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c92:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023c96:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c9a:	ea4e 050a 	orr.w	r5, lr, sl
 8023c9e:	950d      	str	r5, [sp, #52]	; 0x34
 8023ca0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ca2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023ca6:	9d08      	ldr	r5, [sp, #32]
 8023ca8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023cac:	fb08 fc0c 	mul.w	ip, r8, ip
 8023cb0:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023cb4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023cb8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023cba:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023cbe:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023cc2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023cc4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023cc8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023ccc:	fb08 f80e 	mul.w	r8, r8, lr
 8023cd0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023cd4:	fb03 8202 	mla	r2, r3, r2, r8
 8023cd8:	9b08      	ldr	r3, [sp, #32]
 8023cda:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023cdc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023ce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023ce2:	fb01 220a 	mla	r2, r1, sl, r2
 8023ce6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023cea:	fb09 2901 	mla	r9, r9, r1, r2
 8023cee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023cf0:	883b      	ldrh	r3, [r7, #0]
 8023cf2:	4342      	muls	r2, r0
 8023cf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023cf8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023cfc:	1c50      	adds	r0, r2, #1
 8023cfe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023d02:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023d06:	ea4c 0c09 	orr.w	ip, ip, r9
 8023d0a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023d0e:	1219      	asrs	r1, r3, #8
 8023d10:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023d14:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023d18:	b2c0      	uxtb	r0, r0
 8023d1a:	fb12 f205 	smulbb	r2, r2, r5
 8023d1e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023d22:	fb01 2100 	mla	r1, r1, r0, r2
 8023d26:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023d2a:	10da      	asrs	r2, r3, #3
 8023d2c:	fa5f fc8c 	uxtb.w	ip, ip
 8023d30:	00db      	lsls	r3, r3, #3
 8023d32:	fb1c fc05 	smulbb	ip, ip, r5
 8023d36:	b2db      	uxtb	r3, r3
 8023d38:	b289      	uxth	r1, r1
 8023d3a:	fb03 c300 	mla	r3, r3, r0, ip
 8023d3e:	fa1f fc83 	uxth.w	ip, r3
 8023d42:	1c4b      	adds	r3, r1, #1
 8023d44:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023d48:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023d4c:	fb1e fe05 	smulbb	lr, lr, r5
 8023d50:	f10c 0301 	add.w	r3, ip, #1
 8023d54:	fb02 e200 	mla	r2, r2, r0, lr
 8023d58:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023d5c:	b292      	uxth	r2, r2
 8023d5e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023d62:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023d66:	430b      	orrs	r3, r1
 8023d68:	1c51      	adds	r1, r2, #1
 8023d6a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023d6e:	0952      	lsrs	r2, r2, #5
 8023d70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023d74:	4313      	orrs	r3, r2
 8023d76:	803b      	strh	r3, [r7, #0]
 8023d78:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023d7a:	441c      	add	r4, r3
 8023d7c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8023d7e:	441e      	add	r6, r3
 8023d80:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023d82:	3b01      	subs	r3, #1
 8023d84:	3702      	adds	r7, #2
 8023d86:	9318      	str	r3, [sp, #96]	; 0x60
 8023d88:	e698      	b.n	8023abc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023d8a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023d8c:	441c      	add	r4, r3
 8023d8e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8023d90:	441e      	add	r6, r3
 8023d92:	9b07      	ldr	r3, [sp, #28]
 8023d94:	3b01      	subs	r3, #1
 8023d96:	9307      	str	r3, [sp, #28]
 8023d98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023d9a:	3302      	adds	r3, #2
 8023d9c:	930a      	str	r3, [sp, #40]	; 0x28
 8023d9e:	e66d      	b.n	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023da0:	d023      	beq.n	8023dea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023da2:	9b07      	ldr	r3, [sp, #28]
 8023da4:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8023da6:	3b01      	subs	r3, #1
 8023da8:	fb00 4003 	mla	r0, r0, r3, r4
 8023dac:	1400      	asrs	r0, r0, #16
 8023dae:	f53f ae82 	bmi.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023db2:	3901      	subs	r1, #1
 8023db4:	4288      	cmp	r0, r1
 8023db6:	f6bf ae7e 	bge.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023dba:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8023dbc:	fb01 6303 	mla	r3, r1, r3, r6
 8023dc0:	141b      	asrs	r3, r3, #16
 8023dc2:	f53f ae78 	bmi.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023dc6:	3a01      	subs	r2, #1
 8023dc8:	4293      	cmp	r3, r2
 8023dca:	f6bf ae74 	bge.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023dce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023dd2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023dd6:	f1bb 0f00 	cmp.w	fp, #0
 8023dda:	dc6c      	bgt.n	8023eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8023ddc:	9b07      	ldr	r3, [sp, #28]
 8023dde:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023de2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023de4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023de8:	930a      	str	r3, [sp, #40]	; 0x28
 8023dea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023dec:	2b00      	cmp	r3, #0
 8023dee:	f340 81b3 	ble.w	8024158 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8023df2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023df6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023dfa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8023dfe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023e00:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8023e04:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8023e08:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8023e0c:	eef0 6a48 	vmov.f32	s13, s16
 8023e10:	ee69 7a27 	vmul.f32	s15, s18, s15
 8023e14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e18:	ee37 8a48 	vsub.f32	s16, s14, s16
 8023e1c:	ee16 4a90 	vmov	r4, s13
 8023e20:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8023e24:	eef0 6a68 	vmov.f32	s13, s17
 8023e28:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023e2c:	ee18 2a10 	vmov	r2, s16
 8023e30:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8023e34:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e38:	ee18 2a90 	vmov	r2, s17
 8023e3c:	9331      	str	r3, [sp, #196]	; 0xc4
 8023e3e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023e40:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e44:	9332      	str	r3, [sp, #200]	; 0xc8
 8023e46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023e48:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023e4a:	3b01      	subs	r3, #1
 8023e4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e50:	9317      	str	r3, [sp, #92]	; 0x5c
 8023e52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023e54:	bf08      	it	eq
 8023e56:	4613      	moveq	r3, r2
 8023e58:	ee16 6a90 	vmov	r6, s13
 8023e5c:	9307      	str	r3, [sp, #28]
 8023e5e:	eef0 8a67 	vmov.f32	s17, s15
 8023e62:	eeb0 8a47 	vmov.f32	s16, s14
 8023e66:	e5fb      	b.n	8023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8023e68:	2900      	cmp	r1, #0
 8023e6a:	f43f ae6b 	beq.w	8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8023e6e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023e72:	9308      	str	r3, [sp, #32]
 8023e74:	0e1b      	lsrs	r3, r3, #24
 8023e76:	9311      	str	r3, [sp, #68]	; 0x44
 8023e78:	e664      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8023e7a:	f112 0801 	adds.w	r8, r2, #1
 8023e7e:	f53f af7b 	bmi.w	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023e82:	4543      	cmp	r3, r8
 8023e84:	f6ff af78 	blt.w	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023e88:	f11c 0801 	adds.w	r8, ip, #1
 8023e8c:	f53f af74 	bmi.w	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023e90:	45c6      	cmp	lr, r8
 8023e92:	f6ff af71 	blt.w	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023e96:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023e98:	9201      	str	r2, [sp, #4]
 8023e9a:	fa0f f28e 	sxth.w	r2, lr
 8023e9e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023ea2:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023ea6:	9200      	str	r2, [sp, #0]
 8023ea8:	b21b      	sxth	r3, r3
 8023eaa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023eac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023eae:	4639      	mov	r1, r7
 8023eb0:	f7ff fc48 	bl	8023744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023eb4:	e760      	b.n	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023eb6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8023eb8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023eba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ebe:	1427      	asrs	r7, r4, #16
 8023ec0:	1433      	asrs	r3, r6, #16
 8023ec2:	fb01 7303 	mla	r3, r1, r3, r7
 8023ec6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023eca:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023ece:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023ed2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023ed6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023eda:	2a00      	cmp	r2, #0
 8023edc:	f000 8133 	beq.w	8024146 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8023ee0:	687d      	ldr	r5, [r7, #4]
 8023ee2:	950e      	str	r5, [sp, #56]	; 0x38
 8023ee4:	0e2d      	lsrs	r5, r5, #24
 8023ee6:	9515      	str	r5, [sp, #84]	; 0x54
 8023ee8:	b178      	cbz	r0, 8023f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023eea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023eee:	3901      	subs	r1, #1
 8023ef0:	0089      	lsls	r1, r1, #2
 8023ef2:	3104      	adds	r1, #4
 8023ef4:	eb07 0e01 	add.w	lr, r7, r1
 8023ef8:	5879      	ldr	r1, [r7, r1]
 8023efa:	9109      	str	r1, [sp, #36]	; 0x24
 8023efc:	0e09      	lsrs	r1, r1, #24
 8023efe:	9112      	str	r1, [sp, #72]	; 0x48
 8023f00:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023f04:	910f      	str	r1, [sp, #60]	; 0x3c
 8023f06:	0e09      	lsrs	r1, r1, #24
 8023f08:	9116      	str	r1, [sp, #88]	; 0x58
 8023f0a:	b292      	uxth	r2, r2
 8023f0c:	b280      	uxth	r0, r0
 8023f0e:	fb02 f800 	mul.w	r8, r2, r0
 8023f12:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023f16:	0112      	lsls	r2, r2, #4
 8023f18:	eba2 0e08 	sub.w	lr, r2, r8
 8023f1c:	b280      	uxth	r0, r0
 8023f1e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023f22:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023f24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f26:	fa1f fe8e 	uxth.w	lr, lr
 8023f2a:	1a12      	subs	r2, r2, r0
 8023f2c:	b292      	uxth	r2, r2
 8023f2e:	fb0e f101 	mul.w	r1, lr, r1
 8023f32:	fb02 110c 	mla	r1, r2, ip, r1
 8023f36:	fb00 1105 	mla	r1, r0, r5, r1
 8023f3a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023f3c:	fb08 1105 	mla	r1, r8, r5, r1
 8023f40:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023f44:	2900      	cmp	r1, #0
 8023f46:	f000 80f5 	beq.w	8024134 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023f4a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023f4e:	d019      	beq.n	8023f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8023f50:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023f54:	fb0c fa0a 	mul.w	sl, ip, sl
 8023f58:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023f5c:	fb0c fc03 	mul.w	ip, ip, r3
 8023f60:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023f64:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023f68:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023f6c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023f70:	4453      	add	r3, sl
 8023f72:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023f76:	0a1b      	lsrs	r3, r3, #8
 8023f78:	0a3f      	lsrs	r7, r7, #8
 8023f7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023f7e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023f82:	433b      	orrs	r3, r7
 8023f84:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023f86:	2dff      	cmp	r5, #255	; 0xff
 8023f88:	d020      	beq.n	8023fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8023f8a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023f8c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023f90:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023f92:	436f      	muls	r7, r5
 8023f94:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023f96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f9a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023f9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023fa0:	fb05 fa0a 	mul.w	sl, r5, sl
 8023fa4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023fa8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023fac:	44bc      	add	ip, r7
 8023fae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023fb2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023fb6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023fc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023fc6:	ea4c 050a 	orr.w	r5, ip, sl
 8023fca:	950e      	str	r5, [sp, #56]	; 0x38
 8023fcc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023fce:	2dff      	cmp	r5, #255	; 0xff
 8023fd0:	d020      	beq.n	8024014 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8023fd2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023fd4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023fd8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023fda:	436f      	muls	r7, r5
 8023fdc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023fde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023fe2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023fe4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023fe8:	fb05 fa0a 	mul.w	sl, r5, sl
 8023fec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023ff0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ff4:	44bc      	add	ip, r7
 8023ff6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023ffa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023ffe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024002:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024006:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802400a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802400e:	ea4c 050a 	orr.w	r5, ip, sl
 8024012:	9509      	str	r5, [sp, #36]	; 0x24
 8024014:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024016:	2dff      	cmp	r5, #255	; 0xff
 8024018:	d020      	beq.n	802405c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 802401a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802401c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024020:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024022:	436f      	muls	r7, r5
 8024024:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024026:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802402a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802402c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024030:	fb05 fa0a 	mul.w	sl, r5, sl
 8024034:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024038:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802403c:	44bc      	add	ip, r7
 802403e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024042:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024046:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802404a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802404e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024052:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024056:	ea4c 050a 	orr.w	r5, ip, sl
 802405a:	950f      	str	r5, [sp, #60]	; 0x3c
 802405c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802405e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024062:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024064:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024068:	fb0e f707 	mul.w	r7, lr, r7
 802406c:	fb02 770c 	mla	r7, r2, ip, r7
 8024070:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024074:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024076:	fb00 770c 	mla	r7, r0, ip, r7
 802407a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802407e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024080:	fb08 770c 	mla	r7, r8, ip, r7
 8024084:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024088:	fb0e fe0c 	mul.w	lr, lr, ip
 802408c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024090:	fb02 e303 	mla	r3, r2, r3, lr
 8024094:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024096:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024098:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802409c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802409e:	fb00 330a 	mla	r3, r0, sl, r3
 80240a2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80240a6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80240aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80240ac:	f8b9 0000 	ldrh.w	r0, [r9]
 80240b0:	4359      	muls	r1, r3
 80240b2:	0a3f      	lsrs	r7, r7, #8
 80240b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80240bc:	1c4b      	adds	r3, r1, #1
 80240be:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80240c2:	ea47 070c 	orr.w	r7, r7, ip
 80240c6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80240ca:	1202      	asrs	r2, r0, #8
 80240cc:	0c3b      	lsrs	r3, r7, #16
 80240ce:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80240d2:	b2c9      	uxtb	r1, r1
 80240d4:	fb13 f305 	smulbb	r3, r3, r5
 80240d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80240dc:	fb02 3201 	mla	r2, r2, r1, r3
 80240e0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80240e4:	10c3      	asrs	r3, r0, #3
 80240e6:	b2ff      	uxtb	r7, r7
 80240e8:	00c0      	lsls	r0, r0, #3
 80240ea:	b2c0      	uxtb	r0, r0
 80240ec:	fb17 f705 	smulbb	r7, r7, r5
 80240f0:	fb00 7001 	mla	r0, r0, r1, r7
 80240f4:	b292      	uxth	r2, r2
 80240f6:	fb1c fc05 	smulbb	ip, ip, r5
 80240fa:	b280      	uxth	r0, r0
 80240fc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024100:	fb03 c301 	mla	r3, r3, r1, ip
 8024104:	1c51      	adds	r1, r2, #1
 8024106:	f100 0c01 	add.w	ip, r0, #1
 802410a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802410e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024112:	b29b      	uxth	r3, r3
 8024114:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024118:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802411c:	ea4c 0202 	orr.w	r2, ip, r2
 8024120:	f103 0c01 	add.w	ip, r3, #1
 8024124:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024128:	095b      	lsrs	r3, r3, #5
 802412a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802412e:	431a      	orrs	r2, r3
 8024130:	f8a9 2000 	strh.w	r2, [r9]
 8024134:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8024136:	441c      	add	r4, r3
 8024138:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802413a:	f109 0902 	add.w	r9, r9, #2
 802413e:	441e      	add	r6, r3
 8024140:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024144:	e647      	b.n	8023dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8024146:	2800      	cmp	r0, #0
 8024148:	f43f aedf 	beq.w	8023f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802414c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024150:	9109      	str	r1, [sp, #36]	; 0x24
 8024152:	0e09      	lsrs	r1, r1, #24
 8024154:	9112      	str	r1, [sp, #72]	; 0x48
 8024156:	e6d8      	b.n	8023f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024158:	b01d      	add	sp, #116	; 0x74
 802415a:	ecbd 8b08 	vpop	{d8-d11}
 802415e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08024164 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024164:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024168:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 802416c:	fb04 5603 	mla	r6, r4, r3, r5
 8024170:	2c00      	cmp	r4, #0
 8024172:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8024176:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 802417a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 802417e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8024182:	db37      	blt.n	80241f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8024184:	45a6      	cmp	lr, r4
 8024186:	dd35      	ble.n	80241f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8024188:	2d00      	cmp	r5, #0
 802418a:	db31      	blt.n	80241f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802418c:	42ab      	cmp	r3, r5
 802418e:	dd2f      	ble.n	80241f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024190:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8024194:	1c6e      	adds	r6, r5, #1
 8024196:	d430      	bmi.n	80241fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8024198:	42b3      	cmp	r3, r6
 802419a:	dd2e      	ble.n	80241fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 802419c:	b378      	cbz	r0, 80241fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 802419e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80241a2:	3401      	adds	r4, #1
 80241a4:	d42f      	bmi.n	8024206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 80241a6:	45a6      	cmp	lr, r4
 80241a8:	dd2d      	ble.n	8024206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 80241aa:	b37f      	cbz	r7, 802420c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 80241ac:	2d00      	cmp	r5, #0
 80241ae:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 80241b2:	db26      	blt.n	8024202 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 80241b4:	42ab      	cmp	r3, r5
 80241b6:	dd24      	ble.n	8024202 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 80241b8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80241bc:	3501      	adds	r5, #1
 80241be:	d428      	bmi.n	8024212 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 80241c0:	42ab      	cmp	r3, r5
 80241c2:	dd26      	ble.n	8024212 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 80241c4:	b338      	cbz	r0, 8024216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 80241c6:	f8de 3004 	ldr.w	r3, [lr, #4]
 80241ca:	280f      	cmp	r0, #15
 80241cc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80241d0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80241d4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80241d8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80241dc:	d801      	bhi.n	80241e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 80241de:	2f0f      	cmp	r7, #15
 80241e0:	d91b      	bls.n	802421a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 80241e2:	4b87      	ldr	r3, [pc, #540]	; (8024400 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 80241e4:	4a87      	ldr	r2, [pc, #540]	; (8024404 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80241e6:	4888      	ldr	r0, [pc, #544]	; (8024408 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80241e8:	f240 11f9 	movw	r1, #505	; 0x1f9
 80241ec:	f003 f960 	bl	80274b0 <__assert_func>
 80241f0:	2200      	movs	r2, #0
 80241f2:	e7cf      	b.n	8024194 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 80241f4:	2600      	movs	r6, #0
 80241f6:	4632      	mov	r2, r6
 80241f8:	e7d3      	b.n	80241a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80241fa:	2600      	movs	r6, #0
 80241fc:	e7d1      	b.n	80241a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80241fe:	4606      	mov	r6, r0
 8024200:	e7cf      	b.n	80241a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8024202:	2400      	movs	r4, #0
 8024204:	e7da      	b.n	80241bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 8024206:	2300      	movs	r3, #0
 8024208:	461c      	mov	r4, r3
 802420a:	e7de      	b.n	80241ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 802420c:	463b      	mov	r3, r7
 802420e:	463c      	mov	r4, r7
 8024210:	e7db      	b.n	80241ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8024212:	2300      	movs	r3, #0
 8024214:	e7d9      	b.n	80241ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8024216:	4603      	mov	r3, r0
 8024218:	e7d7      	b.n	80241ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 802421a:	b280      	uxth	r0, r0
 802421c:	b2bf      	uxth	r7, r7
 802421e:	fb07 fe00 	mul.w	lr, r7, r0
 8024222:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8024226:	0100      	lsls	r0, r0, #4
 8024228:	eba0 0c0e 	sub.w	ip, r0, lr
 802422c:	b2bf      	uxth	r7, r7
 802422e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8024232:	fa1f fc8c 	uxth.w	ip, ip
 8024236:	1bed      	subs	r5, r5, r7
 8024238:	b2ad      	uxth	r5, r5
 802423a:	fb0c f00a 	mul.w	r0, ip, sl
 802423e:	fb0b 0005 	mla	r0, fp, r5, r0
 8024242:	fb07 0009 	mla	r0, r7, r9, r0
 8024246:	fb0e 0008 	mla	r0, lr, r8, r0
 802424a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802424e:	9001      	str	r0, [sp, #4]
 8024250:	2800      	cmp	r0, #0
 8024252:	f000 80d1 	beq.w	80243f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8024256:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 802425a:	d018      	beq.n	802428e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 802425c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8024260:	fb0b f000 	mul.w	r0, fp, r0
 8024264:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024268:	fb0b fb02 	mul.w	fp, fp, r2
 802426c:	0a02      	lsrs	r2, r0, #8
 802426e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024272:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8024276:	4402      	add	r2, r0
 8024278:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802427c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024280:	0a12      	lsrs	r2, r2, #8
 8024282:	0a00      	lsrs	r0, r0, #8
 8024284:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024288:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802428c:	4302      	orrs	r2, r0
 802428e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8024292:	d01a      	beq.n	80242ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8024294:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8024298:	fb0a f000 	mul.w	r0, sl, r0
 802429c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80242a0:	fb0a fa06 	mul.w	sl, sl, r6
 80242a4:	0a06      	lsrs	r6, r0, #8
 80242a6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80242aa:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80242ae:	4406      	add	r6, r0
 80242b0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80242b4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80242b8:	0a36      	lsrs	r6, r6, #8
 80242ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242be:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80242c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80242c6:	ea46 060a 	orr.w	r6, r6, sl
 80242ca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80242ce:	d01b      	beq.n	8024308 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 80242d0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80242d4:	fb09 fa0a 	mul.w	sl, r9, sl
 80242d8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80242dc:	fb09 f004 	mul.w	r0, r9, r4
 80242e0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80242e4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80242e8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80242ec:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80242f0:	4454      	add	r4, sl
 80242f2:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80242f6:	0a24      	lsrs	r4, r4, #8
 80242f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242fc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024300:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024304:	ea44 0409 	orr.w	r4, r4, r9
 8024308:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802430c:	d01b      	beq.n	8024346 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 802430e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8024312:	fb08 f909 	mul.w	r9, r8, r9
 8024316:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802431a:	fb08 f003 	mul.w	r0, r8, r3
 802431e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8024322:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024326:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 802432a:	f500 7880 	add.w	r8, r0, #256	; 0x100
 802432e:	444b      	add	r3, r9
 8024330:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8024334:	0a1b      	lsrs	r3, r3, #8
 8024336:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802433a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802433e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024342:	ea43 0308 	orr.w	r3, r3, r8
 8024346:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 802434a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802434e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8024352:	fb0c f808 	mul.w	r8, ip, r8
 8024356:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802435a:	fb0c f606 	mul.w	r6, ip, r6
 802435e:	fb05 8909 	mla	r9, r5, r9, r8
 8024362:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8024366:	fb05 6502 	mla	r5, r5, r2, r6
 802436a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802436e:	fb07 9908 	mla	r9, r7, r8, r9
 8024372:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8024376:	fb07 5704 	mla	r7, r7, r4, r5
 802437a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802437e:	8808      	ldrh	r0, [r1, #0]
 8024380:	fb0e 9808 	mla	r8, lr, r8, r9
 8024384:	fb0e 7e03 	mla	lr, lr, r3, r7
 8024388:	9b01      	ldr	r3, [sp, #4]
 802438a:	43da      	mvns	r2, r3
 802438c:	1203      	asrs	r3, r0, #8
 802438e:	b2d2      	uxtb	r2, r2
 8024390:	10c4      	asrs	r4, r0, #3
 8024392:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024396:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802439a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802439e:	00c0      	lsls	r0, r0, #3
 80243a0:	4353      	muls	r3, r2
 80243a2:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80243a6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80243aa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80243ae:	b2c0      	uxtb	r0, r0
 80243b0:	ea48 0e0e 	orr.w	lr, r8, lr
 80243b4:	4354      	muls	r4, r2
 80243b6:	4350      	muls	r0, r2
 80243b8:	1c5a      	adds	r2, r3, #1
 80243ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80243be:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80243c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80243c6:	1c62      	adds	r2, r4, #1
 80243c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80243cc:	ea4f 221e 	mov.w	r2, lr, lsr #8
 80243d0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80243d4:	021b      	lsls	r3, r3, #8
 80243d6:	00d2      	lsls	r2, r2, #3
 80243d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80243dc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80243e0:	4313      	orrs	r3, r2
 80243e2:	1c42      	adds	r2, r0, #1
 80243e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80243e8:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 80243ec:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 80243f0:	ea4e 0e03 	orr.w	lr, lr, r3
 80243f4:	f8a1 e000 	strh.w	lr, [r1]
 80243f8:	b003      	add	sp, #12
 80243fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80243fe:	bf00      	nop
 8024400:	0802d9a3 	.word	0x0802d9a3
 8024404:	0802ded2 	.word	0x0802ded2
 8024408:	0802d970 	.word	0x0802d970

0802440c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802440c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024410:	ed2d 8b08 	vpush	{d8-d11}
 8024414:	b09b      	sub	sp, #108	; 0x6c
 8024416:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 802441a:	9218      	str	r2, [sp, #96]	; 0x60
 802441c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 802441e:	9116      	str	r1, [sp, #88]	; 0x58
 8024420:	9307      	str	r3, [sp, #28]
 8024422:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8024426:	9019      	str	r0, [sp, #100]	; 0x64
 8024428:	6850      	ldr	r0, [r2, #4]
 802442a:	6812      	ldr	r2, [r2, #0]
 802442c:	fb00 1303 	mla	r3, r0, r3, r1
 8024430:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024434:	930a      	str	r3, [sp, #40]	; 0x28
 8024436:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8024438:	681b      	ldr	r3, [r3, #0]
 802443a:	930f      	str	r3, [sp, #60]	; 0x3c
 802443c:	eeb0 aa40 	vmov.f32	s20, s0
 8024440:	eef0 9a60 	vmov.f32	s19, s1
 8024444:	eeb0 9a41 	vmov.f32	s18, s2
 8024448:	eeb0 8a62 	vmov.f32	s16, s5
 802444c:	eef0 8a43 	vmov.f32	s17, s6
 8024450:	eef0 ba44 	vmov.f32	s23, s8
 8024454:	eeb0 ba64 	vmov.f32	s22, s9
 8024458:	eef0 aa45 	vmov.f32	s21, s10
 802445c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802445e:	2b00      	cmp	r3, #0
 8024460:	dc03      	bgt.n	802446a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8024462:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024464:	2b00      	cmp	r3, #0
 8024466:	f340 8386 	ble.w	8024b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 802446a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802446c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024470:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024474:	1e48      	subs	r0, r1, #1
 8024476:	1e57      	subs	r7, r2, #1
 8024478:	9b07      	ldr	r3, [sp, #28]
 802447a:	2b00      	cmp	r3, #0
 802447c:	f340 8166 	ble.w	802474c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8024480:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024484:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024488:	d406      	bmi.n	8024498 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802448a:	4584      	cmp	ip, r0
 802448c:	da04      	bge.n	8024498 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802448e:	2b00      	cmp	r3, #0
 8024490:	db02      	blt.n	8024498 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8024492:	42bb      	cmp	r3, r7
 8024494:	f2c0 815b 	blt.w	802474e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8024498:	f11c 0c01 	adds.w	ip, ip, #1
 802449c:	f100 814b 	bmi.w	8024736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80244a0:	4561      	cmp	r1, ip
 80244a2:	f2c0 8148 	blt.w	8024736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80244a6:	3301      	adds	r3, #1
 80244a8:	f100 8145 	bmi.w	8024736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80244ac:	429a      	cmp	r2, r3
 80244ae:	f2c0 8142 	blt.w	8024736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80244b2:	9b07      	ldr	r3, [sp, #28]
 80244b4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80244b6:	9317      	str	r3, [sp, #92]	; 0x5c
 80244b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80244ba:	2b00      	cmp	r3, #0
 80244bc:	f340 8165 	ble.w	802478a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80244c0:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80244c2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80244c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80244c8:	689b      	ldr	r3, [r3, #8]
 80244ca:	1422      	asrs	r2, r4, #16
 80244cc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80244d0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80244d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80244d8:	f100 81d5 	bmi.w	8024886 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80244dc:	f103 38ff 	add.w	r8, r3, #4294967295
 80244e0:	4542      	cmp	r2, r8
 80244e2:	f280 81d0 	bge.w	8024886 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80244e6:	f1bc 0f00 	cmp.w	ip, #0
 80244ea:	f2c0 81cc 	blt.w	8024886 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80244ee:	f10e 38ff 	add.w	r8, lr, #4294967295
 80244f2:	45c4      	cmp	ip, r8
 80244f4:	f280 81c7 	bge.w	8024886 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80244f8:	b21b      	sxth	r3, r3
 80244fa:	fb0c 2203 	mla	r2, ip, r3, r2
 80244fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024500:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024504:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024508:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802450c:	2900      	cmp	r1, #0
 802450e:	f000 8182 	beq.w	8024816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8024512:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024516:	950b      	str	r5, [sp, #44]	; 0x2c
 8024518:	0e2d      	lsrs	r5, r5, #24
 802451a:	9512      	str	r5, [sp, #72]	; 0x48
 802451c:	b180      	cbz	r0, 8024540 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802451e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024522:	3b01      	subs	r3, #1
 8024524:	009b      	lsls	r3, r3, #2
 8024526:	3304      	adds	r3, #4
 8024528:	eb08 0c03 	add.w	ip, r8, r3
 802452c:	f858 3003 	ldr.w	r3, [r8, r3]
 8024530:	9308      	str	r3, [sp, #32]
 8024532:	0e1b      	lsrs	r3, r3, #24
 8024534:	9310      	str	r3, [sp, #64]	; 0x40
 8024536:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802453a:	930c      	str	r3, [sp, #48]	; 0x30
 802453c:	0e1b      	lsrs	r3, r3, #24
 802453e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024540:	b289      	uxth	r1, r1
 8024542:	b280      	uxth	r0, r0
 8024544:	fb01 f900 	mul.w	r9, r1, r0
 8024548:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802454c:	0109      	lsls	r1, r1, #4
 802454e:	eba1 0809 	sub.w	r8, r1, r9
 8024552:	b280      	uxth	r0, r0
 8024554:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024558:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802455a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802455c:	fa1f f888 	uxth.w	r8, r8
 8024560:	1a09      	subs	r1, r1, r0
 8024562:	b289      	uxth	r1, r1
 8024564:	fb08 f303 	mul.w	r3, r8, r3
 8024568:	fb01 330e 	mla	r3, r1, lr, r3
 802456c:	fb00 3305 	mla	r3, r0, r5, r3
 8024570:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024572:	fb09 3305 	mla	r3, r9, r5, r3
 8024576:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802457a:	2b00      	cmp	r3, #0
 802457c:	f000 80d2 	beq.w	8024724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8024580:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024584:	d01b      	beq.n	80245be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8024586:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802458a:	fb0e fa0a 	mul.w	sl, lr, sl
 802458e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024592:	fb0e fe02 	mul.w	lr, lr, r2
 8024596:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802459a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802459e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80245a2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80245a6:	4452      	add	r2, sl
 80245a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80245ac:	0a12      	lsrs	r2, r2, #8
 80245ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80245b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80245ba:	ea42 020c 	orr.w	r2, r2, ip
 80245be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80245c0:	2dff      	cmp	r5, #255	; 0xff
 80245c2:	d021      	beq.n	8024608 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80245c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80245c6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80245ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80245cc:	fb05 fb0b 	mul.w	fp, r5, fp
 80245d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80245d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80245d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80245d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80245dc:	fb05 fa0a 	mul.w	sl, r5, sl
 80245e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80245e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80245ec:	44de      	add	lr, fp
 80245ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80245f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024602:	ea4e 050a 	orr.w	r5, lr, sl
 8024606:	950b      	str	r5, [sp, #44]	; 0x2c
 8024608:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802460a:	2dff      	cmp	r5, #255	; 0xff
 802460c:	d021      	beq.n	8024652 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802460e:	9d08      	ldr	r5, [sp, #32]
 8024610:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024614:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024616:	fb05 fb0b 	mul.w	fp, r5, fp
 802461a:	9d08      	ldr	r5, [sp, #32]
 802461c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024620:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024622:	fb05 fa0e 	mul.w	sl, r5, lr
 8024626:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802462a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802462e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024632:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024636:	44de      	add	lr, fp
 8024638:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802463c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024644:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024648:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802464c:	ea4e 050a 	orr.w	r5, lr, sl
 8024650:	9508      	str	r5, [sp, #32]
 8024652:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024654:	2dff      	cmp	r5, #255	; 0xff
 8024656:	d021      	beq.n	802469c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8024658:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802465a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802465e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024660:	fb05 fb0b 	mul.w	fp, r5, fp
 8024664:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024666:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802466a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802466c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024670:	fb05 fa0a 	mul.w	sl, r5, sl
 8024674:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024678:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802467c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024680:	44de      	add	lr, fp
 8024682:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024686:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802468a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802468e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024692:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024696:	ea4e 050a 	orr.w	r5, lr, sl
 802469a:	950c      	str	r5, [sp, #48]	; 0x30
 802469c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802469e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80246a2:	9d08      	ldr	r5, [sp, #32]
 80246a4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80246a8:	fb08 fc0c 	mul.w	ip, r8, ip
 80246ac:	fb01 cc0e 	mla	ip, r1, lr, ip
 80246b0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80246b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80246b6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80246ba:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80246be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80246c0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80246c4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80246c8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80246cc:	fb08 f80e 	mul.w	r8, r8, lr
 80246d0:	fb01 8202 	mla	r2, r1, r2, r8
 80246d4:	9908      	ldr	r1, [sp, #32]
 80246d6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80246da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80246dc:	fb00 220a 	mla	r2, r0, sl, r2
 80246e0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80246e4:	fb09 2900 	mla	r9, r9, r0, r2
 80246e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80246f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80246f4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80246f8:	ea4c 0c09 	orr.w	ip, ip, r9
 80246fc:	2bff      	cmp	r3, #255	; 0xff
 80246fe:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024702:	f040 8091 	bne.w	8024828 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8024706:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802470a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802470e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024712:	f022 0207 	bic.w	r2, r2, #7
 8024716:	431a      	orrs	r2, r3
 8024718:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802471c:	ea4c 0c02 	orr.w	ip, ip, r2
 8024720:	f8a7 c000 	strh.w	ip, [r7]
 8024724:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8024726:	441c      	add	r4, r3
 8024728:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802472a:	441e      	add	r6, r3
 802472c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802472e:	3b01      	subs	r3, #1
 8024730:	3702      	adds	r7, #2
 8024732:	9317      	str	r3, [sp, #92]	; 0x5c
 8024734:	e6c0      	b.n	80244b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8024736:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8024738:	441c      	add	r4, r3
 802473a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802473c:	441e      	add	r6, r3
 802473e:	9b07      	ldr	r3, [sp, #28]
 8024740:	3b01      	subs	r3, #1
 8024742:	9307      	str	r3, [sp, #28]
 8024744:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024746:	3302      	adds	r3, #2
 8024748:	930a      	str	r3, [sp, #40]	; 0x28
 802474a:	e695      	b.n	8024478 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802474c:	d024      	beq.n	8024798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802474e:	9b07      	ldr	r3, [sp, #28]
 8024750:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8024752:	3b01      	subs	r3, #1
 8024754:	fb00 4003 	mla	r0, r0, r3, r4
 8024758:	1400      	asrs	r0, r0, #16
 802475a:	f53f aeaa 	bmi.w	80244b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802475e:	3901      	subs	r1, #1
 8024760:	4288      	cmp	r0, r1
 8024762:	f6bf aea6 	bge.w	80244b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8024766:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8024768:	fb01 6303 	mla	r3, r1, r3, r6
 802476c:	141b      	asrs	r3, r3, #16
 802476e:	f53f aea0 	bmi.w	80244b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8024772:	3a01      	subs	r2, #1
 8024774:	4293      	cmp	r3, r2
 8024776:	f6bf ae9c 	bge.w	80244b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802477a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802477e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024782:	f1bb 0f00 	cmp.w	fp, #0
 8024786:	f300 809a 	bgt.w	80248be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 802478a:	9b07      	ldr	r3, [sp, #28]
 802478c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024790:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024792:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024796:	930a      	str	r3, [sp, #40]	; 0x28
 8024798:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802479a:	2b00      	cmp	r3, #0
 802479c:	f340 81eb 	ble.w	8024b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80247a0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80247a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80247a8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80247ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80247ae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80247b2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80247b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80247ba:	eef0 6a48 	vmov.f32	s13, s16
 80247be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80247c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80247ca:	ee16 4a90 	vmov	r4, s13
 80247ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80247d2:	eef0 6a68 	vmov.f32	s13, s17
 80247d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80247da:	ee18 2a10 	vmov	r2, s16
 80247de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80247e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80247e6:	ee18 2a90 	vmov	r2, s17
 80247ea:	932f      	str	r3, [sp, #188]	; 0xbc
 80247ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80247ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80247f2:	9330      	str	r3, [sp, #192]	; 0xc0
 80247f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80247f6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80247f8:	3b01      	subs	r3, #1
 80247fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247fe:	9316      	str	r3, [sp, #88]	; 0x58
 8024800:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024802:	bf08      	it	eq
 8024804:	4613      	moveq	r3, r2
 8024806:	ee16 6a90 	vmov	r6, s13
 802480a:	9307      	str	r3, [sp, #28]
 802480c:	eef0 8a67 	vmov.f32	s17, s15
 8024810:	eeb0 8a47 	vmov.f32	s16, s14
 8024814:	e622      	b.n	802445c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8024816:	2800      	cmp	r0, #0
 8024818:	f43f ae92 	beq.w	8024540 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 802481c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024820:	9308      	str	r3, [sp, #32]
 8024822:	0e1b      	lsrs	r3, r3, #24
 8024824:	9310      	str	r3, [sp, #64]	; 0x40
 8024826:	e68b      	b.n	8024540 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8024828:	8839      	ldrh	r1, [r7, #0]
 802482a:	4dd5      	ldr	r5, [pc, #852]	; (8024b80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 802482c:	43db      	mvns	r3, r3
 802482e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024832:	fa5f f883 	uxtb.w	r8, r3
 8024836:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802483a:	fb0e fe08 	mul.w	lr, lr, r8
 802483e:	10c8      	asrs	r0, r1, #3
 8024840:	00cb      	lsls	r3, r1, #3
 8024842:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024846:	f10e 0101 	add.w	r1, lr, #1
 802484a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802484e:	fb00 f008 	mul.w	r0, r0, r8
 8024852:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024856:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802485a:	f100 0e01 	add.w	lr, r0, #1
 802485e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024862:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024866:	b2db      	uxtb	r3, r3
 8024868:	b2c9      	uxtb	r1, r1
 802486a:	00d2      	lsls	r2, r2, #3
 802486c:	fb03 f308 	mul.w	r3, r3, r8
 8024870:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024874:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024878:	430a      	orrs	r2, r1
 802487a:	1c59      	adds	r1, r3, #1
 802487c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024880:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024884:	e748      	b.n	8024718 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024886:	f112 0801 	adds.w	r8, r2, #1
 802488a:	f53f af4b 	bmi.w	8024724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802488e:	4543      	cmp	r3, r8
 8024890:	f6ff af48 	blt.w	8024724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8024894:	f11c 0801 	adds.w	r8, ip, #1
 8024898:	f53f af44 	bmi.w	8024724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802489c:	45c6      	cmp	lr, r8
 802489e:	f6ff af41 	blt.w	8024724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80248a2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80248a6:	fa0f f28e 	sxth.w	r2, lr
 80248aa:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80248ae:	9200      	str	r2, [sp, #0]
 80248b0:	b21b      	sxth	r3, r3
 80248b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80248b4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80248b6:	4639      	mov	r1, r7
 80248b8:	f7ff fc54 	bl	8024164 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80248bc:	e732      	b.n	8024724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80248be:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80248c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80248c2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80248c6:	1421      	asrs	r1, r4, #16
 80248c8:	1433      	asrs	r3, r6, #16
 80248ca:	fb07 1303 	mla	r3, r7, r3, r1
 80248ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80248d0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80248d4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80248d8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80248dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80248e0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80248e4:	2a00      	cmp	r2, #0
 80248e6:	f000 8107 	beq.w	8024af8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80248ea:	684d      	ldr	r5, [r1, #4]
 80248ec:	950d      	str	r5, [sp, #52]	; 0x34
 80248ee:	0e2d      	lsrs	r5, r5, #24
 80248f0:	9514      	str	r5, [sp, #80]	; 0x50
 80248f2:	b178      	cbz	r0, 8024914 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80248f4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80248f8:	3f01      	subs	r7, #1
 80248fa:	00bf      	lsls	r7, r7, #2
 80248fc:	3704      	adds	r7, #4
 80248fe:	eb01 0e07 	add.w	lr, r1, r7
 8024902:	59c9      	ldr	r1, [r1, r7]
 8024904:	9109      	str	r1, [sp, #36]	; 0x24
 8024906:	0e09      	lsrs	r1, r1, #24
 8024908:	9111      	str	r1, [sp, #68]	; 0x44
 802490a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802490e:	910e      	str	r1, [sp, #56]	; 0x38
 8024910:	0e09      	lsrs	r1, r1, #24
 8024912:	9115      	str	r1, [sp, #84]	; 0x54
 8024914:	b292      	uxth	r2, r2
 8024916:	b280      	uxth	r0, r0
 8024918:	fb02 f900 	mul.w	r9, r2, r0
 802491c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024920:	0112      	lsls	r2, r2, #4
 8024922:	eba2 0e09 	sub.w	lr, r2, r9
 8024926:	b280      	uxth	r0, r0
 8024928:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802492c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802492e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024930:	fa1f fe8e 	uxth.w	lr, lr
 8024934:	1a09      	subs	r1, r1, r0
 8024936:	b289      	uxth	r1, r1
 8024938:	fb0e f202 	mul.w	r2, lr, r2
 802493c:	fb01 220c 	mla	r2, r1, ip, r2
 8024940:	fb00 2205 	mla	r2, r0, r5, r2
 8024944:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024946:	fb09 2205 	mla	r2, r9, r5, r2
 802494a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802494e:	2a00      	cmp	r2, #0
 8024950:	f000 80c9 	beq.w	8024ae6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024954:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024958:	d019      	beq.n	802498e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 802495a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802495e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024962:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024966:	fb0c fc03 	mul.w	ip, ip, r3
 802496a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802496e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024972:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024976:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802497a:	4453      	add	r3, sl
 802497c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024980:	0a1b      	lsrs	r3, r3, #8
 8024982:	0a3f      	lsrs	r7, r7, #8
 8024984:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024988:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802498c:	433b      	orrs	r3, r7
 802498e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024990:	2dff      	cmp	r5, #255	; 0xff
 8024992:	d020      	beq.n	80249d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8024994:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024996:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802499a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802499c:	436f      	muls	r7, r5
 802499e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80249a0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80249a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80249a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80249aa:	fb05 fa0a 	mul.w	sl, r5, sl
 80249ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80249b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249b6:	44bc      	add	ip, r7
 80249b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80249bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80249c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80249d0:	ea4c 050a 	orr.w	r5, ip, sl
 80249d4:	950d      	str	r5, [sp, #52]	; 0x34
 80249d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249d8:	2dff      	cmp	r5, #255	; 0xff
 80249da:	d020      	beq.n	8024a1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80249dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80249de:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80249e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249e4:	436f      	muls	r7, r5
 80249e6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80249e8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80249ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80249ee:	fb05 fa0c 	mul.w	sl, r5, ip
 80249f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80249f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80249fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80249fe:	44bc      	add	ip, r7
 8024a00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a18:	ea4c 050a 	orr.w	r5, ip, sl
 8024a1c:	9509      	str	r5, [sp, #36]	; 0x24
 8024a1e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a20:	2dff      	cmp	r5, #255	; 0xff
 8024a22:	d020      	beq.n	8024a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8024a24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a26:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a2a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a2c:	436f      	muls	r7, r5
 8024a2e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a30:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024a34:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024a36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024a3a:	fb05 fa0a 	mul.w	sl, r5, sl
 8024a3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024a42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a46:	44bc      	add	ip, r7
 8024a48:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024a4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a60:	ea4c 050a 	orr.w	r5, ip, sl
 8024a64:	950e      	str	r5, [sp, #56]	; 0x38
 8024a66:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a68:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024a6c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024a6e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024a72:	fb0e f707 	mul.w	r7, lr, r7
 8024a76:	fb01 770c 	mla	r7, r1, ip, r7
 8024a7a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024a7e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a80:	fb00 770c 	mla	r7, r0, ip, r7
 8024a84:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024a88:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024a8a:	fb09 770c 	mla	r7, r9, ip, r7
 8024a8e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024a92:	fb0e fe0c 	mul.w	lr, lr, ip
 8024a96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a9a:	fb01 e303 	mla	r3, r1, r3, lr
 8024a9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024aa0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024aa4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024aa6:	fb00 330a 	mla	r3, r0, sl, r3
 8024aaa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024aae:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024ab2:	0a3f      	lsrs	r7, r7, #8
 8024ab4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ab8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024abc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024ac0:	ea47 070c 	orr.w	r7, r7, ip
 8024ac4:	2aff      	cmp	r2, #255	; 0xff
 8024ac6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024aca:	d11e      	bne.n	8024b0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 8024acc:	097a      	lsrs	r2, r7, #5
 8024ace:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024ad2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ad6:	f023 0307 	bic.w	r3, r3, #7
 8024ada:	4313      	orrs	r3, r2
 8024adc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024ae0:	431f      	orrs	r7, r3
 8024ae2:	f8a8 7000 	strh.w	r7, [r8]
 8024ae6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8024ae8:	441c      	add	r4, r3
 8024aea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024aec:	f108 0802 	add.w	r8, r8, #2
 8024af0:	441e      	add	r6, r3
 8024af2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024af6:	e644      	b.n	8024782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8024af8:	2800      	cmp	r0, #0
 8024afa:	f43f af0b 	beq.w	8024914 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8024afe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024b02:	9109      	str	r1, [sp, #36]	; 0x24
 8024b04:	0e09      	lsrs	r1, r1, #24
 8024b06:	9111      	str	r1, [sp, #68]	; 0x44
 8024b08:	e704      	b.n	8024914 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8024b0a:	f8b8 1000 	ldrh.w	r1, [r8]
 8024b0e:	43d2      	mvns	r2, r2
 8024b10:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024b14:	fa5f fe82 	uxtb.w	lr, r2
 8024b18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024b1c:	fb0c fc0e 	mul.w	ip, ip, lr
 8024b20:	10c8      	asrs	r0, r1, #3
 8024b22:	00ca      	lsls	r2, r1, #3
 8024b24:	f10c 0101 	add.w	r1, ip, #1
 8024b28:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024b2c:	0c39      	lsrs	r1, r7, #16
 8024b2e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024b32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024b36:	4912      	ldr	r1, [pc, #72]	; (8024b80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8024b38:	fb00 f00e 	mul.w	r0, r0, lr
 8024b3c:	fa5f fc8c 	uxtb.w	ip, ip
 8024b40:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024b44:	b2d2      	uxtb	r2, r2
 8024b46:	1c41      	adds	r1, r0, #1
 8024b48:	fb02 f20e 	mul.w	r2, r2, lr
 8024b4c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024b50:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024b54:	1c51      	adds	r1, r2, #1
 8024b56:	00c0      	lsls	r0, r0, #3
 8024b58:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024b5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024b60:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024b64:	ea4c 0c00 	orr.w	ip, ip, r0
 8024b68:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024b6c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024b70:	f8a8 c000 	strh.w	ip, [r8]
 8024b74:	e7b7      	b.n	8024ae6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024b76:	b01b      	add	sp, #108	; 0x6c
 8024b78:	ecbd 8b08 	vpop	{d8-d11}
 8024b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b80:	fffff800 	.word	0xfffff800

08024b84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024b84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024b88:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8024b8c:	2c00      	cmp	r4, #0
 8024b8e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024b92:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024b96:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8024b9a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8024b9e:	fb04 ce03 	mla	lr, r4, r3, ip
 8024ba2:	db60      	blt.n	8024c66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8024ba4:	45a1      	cmp	r9, r4
 8024ba6:	dd5e      	ble.n	8024c66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8024ba8:	f1bc 0f00 	cmp.w	ip, #0
 8024bac:	db59      	blt.n	8024c62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8024bae:	45e0      	cmp	r8, ip
 8024bb0:	dd57      	ble.n	8024c62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8024bb2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8024bb6:	f01e 0f01 	tst.w	lr, #1
 8024bba:	5c16      	ldrb	r6, [r2, r0]
 8024bbc:	bf0c      	ite	eq
 8024bbe:	f006 060f 	andeq.w	r6, r6, #15
 8024bc2:	1136      	asrne	r6, r6, #4
 8024bc4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024bc8:	b2f6      	uxtb	r6, r6
 8024bca:	f11c 0001 	adds.w	r0, ip, #1
 8024bce:	d44d      	bmi.n	8024c6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8024bd0:	4580      	cmp	r8, r0
 8024bd2:	dd4b      	ble.n	8024c6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8024bd4:	2d00      	cmp	r5, #0
 8024bd6:	d04b      	beq.n	8024c70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8024bd8:	f10e 0a01 	add.w	sl, lr, #1
 8024bdc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8024be0:	f01a 0f01 	tst.w	sl, #1
 8024be4:	5c10      	ldrb	r0, [r2, r0]
 8024be6:	bf0c      	ite	eq
 8024be8:	f000 000f 	andeq.w	r0, r0, #15
 8024bec:	1100      	asrne	r0, r0, #4
 8024bee:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024bf2:	b2c0      	uxtb	r0, r0
 8024bf4:	3401      	adds	r4, #1
 8024bf6:	d43f      	bmi.n	8024c78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8024bf8:	45a1      	cmp	r9, r4
 8024bfa:	dd3d      	ble.n	8024c78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8024bfc:	2f00      	cmp	r7, #0
 8024bfe:	f000 80a8 	beq.w	8024d52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 8024c02:	f1bc 0f00 	cmp.w	ip, #0
 8024c06:	db35      	blt.n	8024c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8024c08:	45e0      	cmp	r8, ip
 8024c0a:	dd33      	ble.n	8024c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8024c0c:	eb03 090e 	add.w	r9, r3, lr
 8024c10:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8024c14:	f019 0f01 	tst.w	r9, #1
 8024c18:	5d14      	ldrb	r4, [r2, r4]
 8024c1a:	bf0c      	ite	eq
 8024c1c:	f004 040f 	andeq.w	r4, r4, #15
 8024c20:	1124      	asrne	r4, r4, #4
 8024c22:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024c26:	b2e4      	uxtb	r4, r4
 8024c28:	f11c 0c01 	adds.w	ip, ip, #1
 8024c2c:	d427      	bmi.n	8024c7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8024c2e:	45e0      	cmp	r8, ip
 8024c30:	dd25      	ble.n	8024c7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8024c32:	b335      	cbz	r5, 8024c82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8024c34:	3301      	adds	r3, #1
 8024c36:	449e      	add	lr, r3
 8024c38:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024c3c:	f01e 0f01 	tst.w	lr, #1
 8024c40:	5cd2      	ldrb	r2, [r2, r3]
 8024c42:	bf0c      	ite	eq
 8024c44:	f002 020f 	andeq.w	r2, r2, #15
 8024c48:	1112      	asrne	r2, r2, #4
 8024c4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024c4e:	b2d3      	uxtb	r3, r2
 8024c50:	2d0f      	cmp	r5, #15
 8024c52:	d917      	bls.n	8024c84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8024c54:	4b42      	ldr	r3, [pc, #264]	; (8024d60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 8024c56:	4a43      	ldr	r2, [pc, #268]	; (8024d64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8024c58:	4843      	ldr	r0, [pc, #268]	; (8024d68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 8024c5a:	f240 11f9 	movw	r1, #505	; 0x1f9
 8024c5e:	f002 fc27 	bl	80274b0 <__assert_func>
 8024c62:	2600      	movs	r6, #0
 8024c64:	e7b1      	b.n	8024bca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8024c66:	2000      	movs	r0, #0
 8024c68:	4606      	mov	r6, r0
 8024c6a:	e7c3      	b.n	8024bf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8024c6c:	2000      	movs	r0, #0
 8024c6e:	e7c1      	b.n	8024bf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8024c70:	4628      	mov	r0, r5
 8024c72:	e7bf      	b.n	8024bf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8024c74:	2400      	movs	r4, #0
 8024c76:	e7d7      	b.n	8024c28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8024c78:	2300      	movs	r3, #0
 8024c7a:	461c      	mov	r4, r3
 8024c7c:	e7e8      	b.n	8024c50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8024c7e:	2300      	movs	r3, #0
 8024c80:	e7e6      	b.n	8024c50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8024c82:	462b      	mov	r3, r5
 8024c84:	2f0f      	cmp	r7, #15
 8024c86:	d8e5      	bhi.n	8024c54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8024c88:	b2ad      	uxth	r5, r5
 8024c8a:	b2bf      	uxth	r7, r7
 8024c8c:	fb05 fc07 	mul.w	ip, r5, r7
 8024c90:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8024c94:	012d      	lsls	r5, r5, #4
 8024c96:	b2bf      	uxth	r7, r7
 8024c98:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8024c9c:	eba5 050c 	sub.w	r5, r5, ip
 8024ca0:	1bd2      	subs	r2, r2, r7
 8024ca2:	b2ad      	uxth	r5, r5
 8024ca4:	b292      	uxth	r2, r2
 8024ca6:	4368      	muls	r0, r5
 8024ca8:	fb06 0002 	mla	r0, r6, r2, r0
 8024cac:	fb07 0404 	mla	r4, r7, r4, r0
 8024cb0:	fb0c 4303 	mla	r3, ip, r3, r4
 8024cb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024cb8:	b1b3      	cbz	r3, 8024ce8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8024cba:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024cbe:	435a      	muls	r2, r3
 8024cc0:	1c53      	adds	r3, r2, #1
 8024cc2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024cc6:	4a29      	ldr	r2, [pc, #164]	; (8024d6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 8024cc8:	121b      	asrs	r3, r3, #8
 8024cca:	6812      	ldr	r2, [r2, #0]
 8024ccc:	2bff      	cmp	r3, #255	; 0xff
 8024cce:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024cd2:	d10b      	bne.n	8024cec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 8024cd4:	4b26      	ldr	r3, [pc, #152]	; (8024d70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 8024cd6:	0950      	lsrs	r0, r2, #5
 8024cd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024cdc:	4033      	ands	r3, r6
 8024cde:	4318      	orrs	r0, r3
 8024ce0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ce4:	4302      	orrs	r2, r0
 8024ce6:	800a      	strh	r2, [r1, #0]
 8024ce8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024cec:	880d      	ldrh	r5, [r1, #0]
 8024cee:	b29f      	uxth	r7, r3
 8024cf0:	122c      	asrs	r4, r5, #8
 8024cf2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024cf6:	43db      	mvns	r3, r3
 8024cf8:	b2db      	uxtb	r3, r3
 8024cfa:	fb10 f007 	smulbb	r0, r0, r7
 8024cfe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024d02:	fb04 0403 	mla	r4, r4, r3, r0
 8024d06:	b2f6      	uxtb	r6, r6
 8024d08:	10e8      	asrs	r0, r5, #3
 8024d0a:	b2d2      	uxtb	r2, r2
 8024d0c:	00ed      	lsls	r5, r5, #3
 8024d0e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024d12:	fb12 f207 	smulbb	r2, r2, r7
 8024d16:	fb16 f607 	smulbb	r6, r6, r7
 8024d1a:	b2ed      	uxtb	r5, r5
 8024d1c:	b2a4      	uxth	r4, r4
 8024d1e:	fb00 6603 	mla	r6, r0, r3, r6
 8024d22:	fb05 2303 	mla	r3, r5, r3, r2
 8024d26:	b29a      	uxth	r2, r3
 8024d28:	1c63      	adds	r3, r4, #1
 8024d2a:	b2b0      	uxth	r0, r6
 8024d2c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024d30:	1c53      	adds	r3, r2, #1
 8024d32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d36:	1c42      	adds	r2, r0, #1
 8024d38:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d3c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024d40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d44:	0940      	lsrs	r0, r0, #5
 8024d46:	4323      	orrs	r3, r4
 8024d48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d4c:	4303      	orrs	r3, r0
 8024d4e:	800b      	strh	r3, [r1, #0]
 8024d50:	e7ca      	b.n	8024ce8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8024d52:	2d0f      	cmp	r5, #15
 8024d54:	f63f af7e 	bhi.w	8024c54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8024d58:	463b      	mov	r3, r7
 8024d5a:	463c      	mov	r4, r7
 8024d5c:	e794      	b.n	8024c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8024d5e:	bf00      	nop
 8024d60:	0802d9a3 	.word	0x0802d9a3
 8024d64:	0802ded2 	.word	0x0802ded2
 8024d68:	0802d970 	.word	0x0802d970
 8024d6c:	20014c34 	.word	0x20014c34
 8024d70:	00fff800 	.word	0x00fff800

08024d74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d78:	ed2d 8b08 	vpush	{d8-d11}
 8024d7c:	b097      	sub	sp, #92	; 0x5c
 8024d7e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8024d82:	9214      	str	r2, [sp, #80]	; 0x50
 8024d84:	9309      	str	r3, [sp, #36]	; 0x24
 8024d86:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8024d88:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8024d8c:	910d      	str	r1, [sp, #52]	; 0x34
 8024d8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d90:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8024d94:	9015      	str	r0, [sp, #84]	; 0x54
 8024d96:	6850      	ldr	r0, [r2, #4]
 8024d98:	6812      	ldr	r2, [r2, #0]
 8024d9a:	fb00 1303 	mla	r3, r0, r3, r1
 8024d9e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024da2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024da4:	689b      	ldr	r3, [r3, #8]
 8024da6:	3301      	adds	r3, #1
 8024da8:	f023 0301 	bic.w	r3, r3, #1
 8024dac:	930a      	str	r3, [sp, #40]	; 0x28
 8024dae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024db0:	681f      	ldr	r7, [r3, #0]
 8024db2:	eeb0 aa40 	vmov.f32	s20, s0
 8024db6:	eef0 9a60 	vmov.f32	s19, s1
 8024dba:	eeb0 9a41 	vmov.f32	s18, s2
 8024dbe:	eeb0 8a62 	vmov.f32	s16, s5
 8024dc2:	eef0 8a43 	vmov.f32	s17, s6
 8024dc6:	eef0 ba44 	vmov.f32	s23, s8
 8024dca:	eeb0 ba64 	vmov.f32	s22, s9
 8024dce:	eef0 aa45 	vmov.f32	s21, s10
 8024dd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024dd4:	2b00      	cmp	r3, #0
 8024dd6:	dc03      	bgt.n	8024de0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024dd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024dda:	2b00      	cmp	r3, #0
 8024ddc:	f340 8287 	ble.w	80252ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8024de0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024de2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024de6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024dea:	1e48      	subs	r0, r1, #1
 8024dec:	f102 3cff 	add.w	ip, r2, #4294967295
 8024df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024df2:	2b00      	cmp	r3, #0
 8024df4:	f340 80c4 	ble.w	8024f80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8024df8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024dfc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024e00:	d406      	bmi.n	8024e10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024e02:	4586      	cmp	lr, r0
 8024e04:	da04      	bge.n	8024e10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024e06:	2b00      	cmp	r3, #0
 8024e08:	db02      	blt.n	8024e10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024e0a:	4563      	cmp	r3, ip
 8024e0c:	f2c0 80b9 	blt.w	8024f82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024e10:	f11e 0e01 	adds.w	lr, lr, #1
 8024e14:	f100 80aa 	bmi.w	8024f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8024e18:	4571      	cmp	r1, lr
 8024e1a:	f2c0 80a7 	blt.w	8024f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8024e1e:	3301      	adds	r3, #1
 8024e20:	f100 80a4 	bmi.w	8024f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8024e24:	429a      	cmp	r2, r3
 8024e26:	f2c0 80a1 	blt.w	8024f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8024e2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e2c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024e30:	930e      	str	r3, [sp, #56]	; 0x38
 8024e32:	46c8      	mov	r8, r9
 8024e34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024e36:	2b00      	cmp	r3, #0
 8024e38:	f340 80c3 	ble.w	8024fc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024e3c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024e3e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024e42:	1423      	asrs	r3, r4, #16
 8024e44:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024e48:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024e4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024e50:	f100 814d 	bmi.w	80250ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024e54:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024e58:	455b      	cmp	r3, fp
 8024e5a:	f280 8148 	bge.w	80250ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024e5e:	2800      	cmp	r0, #0
 8024e60:	f2c0 8145 	blt.w	80250ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024e64:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024e68:	4558      	cmp	r0, fp
 8024e6a:	f280 8140 	bge.w	80250ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024e6e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024e70:	fb00 3305 	mla	r3, r0, r5, r3
 8024e74:	0858      	lsrs	r0, r3, #1
 8024e76:	07dd      	lsls	r5, r3, #31
 8024e78:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024e7c:	bf54      	ite	pl
 8024e7e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024e82:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024e86:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e8a:	fa5f fc8c 	uxtb.w	ip, ip
 8024e8e:	2a00      	cmp	r2, #0
 8024e90:	f000 80db 	beq.w	802504a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8024e94:	1c58      	adds	r0, r3, #1
 8024e96:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024e9a:	07c0      	lsls	r0, r0, #31
 8024e9c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024ea0:	bf54      	ite	pl
 8024ea2:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024ea6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024eaa:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024eae:	fa5f f08e 	uxtb.w	r0, lr
 8024eb2:	9010      	str	r0, [sp, #64]	; 0x40
 8024eb4:	b1c9      	cbz	r1, 8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024eb6:	4453      	add	r3, sl
 8024eb8:	0858      	lsrs	r0, r3, #1
 8024eba:	07dd      	lsls	r5, r3, #31
 8024ebc:	5c38      	ldrb	r0, [r7, r0]
 8024ebe:	bf54      	ite	pl
 8024ec0:	f000 000f 	andpl.w	r0, r0, #15
 8024ec4:	1100      	asrmi	r0, r0, #4
 8024ec6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024eca:	3301      	adds	r3, #1
 8024ecc:	b2c0      	uxtb	r0, r0
 8024ece:	900b      	str	r0, [sp, #44]	; 0x2c
 8024ed0:	0858      	lsrs	r0, r3, #1
 8024ed2:	07dd      	lsls	r5, r3, #31
 8024ed4:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024ed8:	bf54      	ite	pl
 8024eda:	f00e 030f 	andpl.w	r3, lr, #15
 8024ede:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024ee2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024ee6:	b2db      	uxtb	r3, r3
 8024ee8:	9311      	str	r3, [sp, #68]	; 0x44
 8024eea:	b292      	uxth	r2, r2
 8024eec:	b289      	uxth	r1, r1
 8024eee:	fb02 f301 	mul.w	r3, r2, r1
 8024ef2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024ef6:	0112      	lsls	r2, r2, #4
 8024ef8:	b289      	uxth	r1, r1
 8024efa:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024efe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024f00:	1ad2      	subs	r2, r2, r3
 8024f02:	1a40      	subs	r0, r0, r1
 8024f04:	b292      	uxth	r2, r2
 8024f06:	436a      	muls	r2, r5
 8024f08:	b280      	uxth	r0, r0
 8024f0a:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024f0e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024f10:	fb01 c102 	mla	r1, r1, r2, ip
 8024f14:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024f16:	fb03 1302 	mla	r3, r3, r2, r1
 8024f1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f1e:	b1db      	cbz	r3, 8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024f20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024f22:	4353      	muls	r3, r2
 8024f24:	1c5a      	adds	r2, r3, #1
 8024f26:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024f2a:	4ac6      	ldr	r2, [pc, #792]	; (8025244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8024f2c:	121b      	asrs	r3, r3, #8
 8024f2e:	6812      	ldr	r2, [r2, #0]
 8024f30:	2bff      	cmp	r3, #255	; 0xff
 8024f32:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024f36:	f040 8099 	bne.w	802506c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8024f3a:	0953      	lsrs	r3, r2, #5
 8024f3c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024f40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f44:	f02c 0c07 	bic.w	ip, ip, #7
 8024f48:	ea43 0c0c 	orr.w	ip, r3, ip
 8024f4c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024f50:	ea4c 0202 	orr.w	r2, ip, r2
 8024f54:	f8a8 2000 	strh.w	r2, [r8]
 8024f58:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024f5a:	441c      	add	r4, r3
 8024f5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f5e:	441e      	add	r6, r3
 8024f60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024f62:	3b01      	subs	r3, #1
 8024f64:	f108 0802 	add.w	r8, r8, #2
 8024f68:	930e      	str	r3, [sp, #56]	; 0x38
 8024f6a:	e763      	b.n	8024e34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8024f6c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024f6e:	441c      	add	r4, r3
 8024f70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024f72:	441e      	add	r6, r3
 8024f74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f76:	3b01      	subs	r3, #1
 8024f78:	9309      	str	r3, [sp, #36]	; 0x24
 8024f7a:	f109 0902 	add.w	r9, r9, #2
 8024f7e:	e737      	b.n	8024df0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024f80:	d024      	beq.n	8024fcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8024f82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f84:	982b      	ldr	r0, [sp, #172]	; 0xac
 8024f86:	3b01      	subs	r3, #1
 8024f88:	fb00 4003 	mla	r0, r0, r3, r4
 8024f8c:	1400      	asrs	r0, r0, #16
 8024f8e:	f53f af4c 	bmi.w	8024e2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024f92:	3901      	subs	r1, #1
 8024f94:	4288      	cmp	r0, r1
 8024f96:	f6bf af48 	bge.w	8024e2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024f9a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024f9c:	fb01 6303 	mla	r3, r1, r3, r6
 8024fa0:	141b      	asrs	r3, r3, #16
 8024fa2:	f53f af42 	bmi.w	8024e2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024fa6:	3a01      	subs	r2, #1
 8024fa8:	4293      	cmp	r3, r2
 8024faa:	f6bf af3e 	bge.w	8024e2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024fae:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024fb2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024fb6:	930e      	str	r3, [sp, #56]	; 0x38
 8024fb8:	46c8      	mov	r8, r9
 8024fba:	f1bb 0f00 	cmp.w	fp, #0
 8024fbe:	f300 80b7 	bgt.w	8025130 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8024fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024fc4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024fc8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024fcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024fce:	2b00      	cmp	r3, #0
 8024fd0:	f340 818d 	ble.w	80252ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8024fd4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024fd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024fdc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8024fe0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024fe2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024fe6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024fea:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8024fee:	eef0 6a48 	vmov.f32	s13, s16
 8024ff2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024ff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ffa:	ee37 8a48 	vsub.f32	s16, s14, s16
 8024ffe:	ee16 4a90 	vmov	r4, s13
 8025002:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8025006:	eef0 6a68 	vmov.f32	s13, s17
 802500a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802500e:	ee18 2a10 	vmov	r2, s16
 8025012:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8025016:	fb92 f3f3 	sdiv	r3, r2, r3
 802501a:	ee18 2a90 	vmov	r2, s17
 802501e:	932b      	str	r3, [sp, #172]	; 0xac
 8025020:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025022:	fb92 f3f3 	sdiv	r3, r2, r3
 8025026:	932c      	str	r3, [sp, #176]	; 0xb0
 8025028:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802502a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802502c:	3b01      	subs	r3, #1
 802502e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025032:	930d      	str	r3, [sp, #52]	; 0x34
 8025034:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025036:	bf08      	it	eq
 8025038:	4613      	moveq	r3, r2
 802503a:	ee16 6a90 	vmov	r6, s13
 802503e:	9309      	str	r3, [sp, #36]	; 0x24
 8025040:	eef0 8a67 	vmov.f32	s17, s15
 8025044:	eeb0 8a47 	vmov.f32	s16, s14
 8025048:	e6c3      	b.n	8024dd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802504a:	2900      	cmp	r1, #0
 802504c:	f43f af4d 	beq.w	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025050:	eb0a 0003 	add.w	r0, sl, r3
 8025054:	0843      	lsrs	r3, r0, #1
 8025056:	07c0      	lsls	r0, r0, #31
 8025058:	5cfb      	ldrb	r3, [r7, r3]
 802505a:	bf54      	ite	pl
 802505c:	f003 030f 	andpl.w	r3, r3, #15
 8025060:	111b      	asrmi	r3, r3, #4
 8025062:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025066:	b2db      	uxtb	r3, r3
 8025068:	930b      	str	r3, [sp, #44]	; 0x2c
 802506a:	e73e      	b.n	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802506c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025070:	fa1f fb83 	uxth.w	fp, r3
 8025074:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025078:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802507c:	43db      	mvns	r3, r3
 802507e:	b2db      	uxtb	r3, r3
 8025080:	fb11 f10b 	smulbb	r1, r1, fp
 8025084:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025088:	fb00 1003 	mla	r0, r0, r3, r1
 802508c:	fa5f fc8c 	uxtb.w	ip, ip
 8025090:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025094:	b2d2      	uxtb	r2, r2
 8025096:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802509a:	b280      	uxth	r0, r0
 802509c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80250a0:	fb1c fc0b 	smulbb	ip, ip, fp
 80250a4:	fa5f fe8e 	uxtb.w	lr, lr
 80250a8:	fb12 fb0b 	smulbb	fp, r2, fp
 80250ac:	fb01 cc03 	mla	ip, r1, r3, ip
 80250b0:	fb0e bb03 	mla	fp, lr, r3, fp
 80250b4:	1c43      	adds	r3, r0, #1
 80250b6:	fa1f fc8c 	uxth.w	ip, ip
 80250ba:	fa1f fb8b 	uxth.w	fp, fp
 80250be:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80250c2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80250c6:	f10c 0101 	add.w	r1, ip, #1
 80250ca:	f10b 0001 	add.w	r0, fp, #1
 80250ce:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80250d2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80250d6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80250da:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80250de:	4318      	orrs	r0, r3
 80250e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80250e4:	ea40 000c 	orr.w	r0, r0, ip
 80250e8:	f8a8 0000 	strh.w	r0, [r8]
 80250ec:	e734      	b.n	8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80250ee:	f113 0b01 	adds.w	fp, r3, #1
 80250f2:	f53f af31 	bmi.w	8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80250f6:	45dc      	cmp	ip, fp
 80250f8:	f6ff af2e 	blt.w	8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80250fc:	f110 0b01 	adds.w	fp, r0, #1
 8025100:	f53f af2a 	bmi.w	8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025104:	45de      	cmp	lr, fp
 8025106:	f6ff af27 	blt.w	8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802510a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802510c:	9302      	str	r3, [sp, #8]
 802510e:	fa0f f38e 	sxth.w	r3, lr
 8025112:	9301      	str	r3, [sp, #4]
 8025114:	fa0f f38c 	sxth.w	r3, ip
 8025118:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802511c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025120:	9300      	str	r3, [sp, #0]
 8025122:	463a      	mov	r2, r7
 8025124:	4653      	mov	r3, sl
 8025126:	4641      	mov	r1, r8
 8025128:	9815      	ldr	r0, [sp, #84]	; 0x54
 802512a:	f7ff fd2b 	bl	8024b84 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802512e:	e713      	b.n	8024f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025130:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025132:	1422      	asrs	r2, r4, #16
 8025134:	1433      	asrs	r3, r6, #16
 8025136:	fb05 2303 	mla	r3, r5, r3, r2
 802513a:	085a      	lsrs	r2, r3, #1
 802513c:	07dd      	lsls	r5, r3, #31
 802513e:	5cba      	ldrb	r2, [r7, r2]
 8025140:	bf54      	ite	pl
 8025142:	f002 020f 	andpl.w	r2, r2, #15
 8025146:	1112      	asrmi	r2, r2, #4
 8025148:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802514c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025150:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025154:	b2d2      	uxtb	r2, r2
 8025156:	2900      	cmp	r1, #0
 8025158:	d076      	beq.n	8025248 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802515a:	f103 0e01 	add.w	lr, r3, #1
 802515e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025162:	f01e 0f01 	tst.w	lr, #1
 8025166:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802516a:	bf0c      	ite	eq
 802516c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025170:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025174:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025178:	fa5f f58c 	uxtb.w	r5, ip
 802517c:	9512      	str	r5, [sp, #72]	; 0x48
 802517e:	b300      	cbz	r0, 80251c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025180:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025182:	442b      	add	r3, r5
 8025184:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025188:	07dd      	lsls	r5, r3, #31
 802518a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802518e:	bf54      	ite	pl
 8025190:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025194:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025198:	3301      	adds	r3, #1
 802519a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802519e:	fa5f f58c 	uxtb.w	r5, ip
 80251a2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80251a6:	950c      	str	r5, [sp, #48]	; 0x30
 80251a8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80251ac:	07dd      	lsls	r5, r3, #31
 80251ae:	bf54      	ite	pl
 80251b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80251b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80251b8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80251bc:	fa5f f38c 	uxtb.w	r3, ip
 80251c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80251c2:	b289      	uxth	r1, r1
 80251c4:	b280      	uxth	r0, r0
 80251c6:	fb01 f300 	mul.w	r3, r1, r0
 80251ca:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80251ce:	0109      	lsls	r1, r1, #4
 80251d0:	b280      	uxth	r0, r0
 80251d2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80251d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80251d8:	1ac9      	subs	r1, r1, r3
 80251da:	ebac 0c00 	sub.w	ip, ip, r0
 80251de:	b289      	uxth	r1, r1
 80251e0:	4369      	muls	r1, r5
 80251e2:	fa1f fc8c 	uxth.w	ip, ip
 80251e6:	fb02 120c 	mla	r2, r2, ip, r1
 80251ea:	990c      	ldr	r1, [sp, #48]	; 0x30
 80251ec:	fb00 2001 	mla	r0, r0, r1, r2
 80251f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80251f2:	fb03 0302 	mla	r3, r3, r2, r0
 80251f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80251fa:	b1d3      	cbz	r3, 8025232 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 80251fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80251fe:	4353      	muls	r3, r2
 8025200:	1c5a      	adds	r2, r3, #1
 8025202:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025206:	4a0f      	ldr	r2, [pc, #60]	; (8025244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8025208:	121b      	asrs	r3, r3, #8
 802520a:	6812      	ldr	r2, [r2, #0]
 802520c:	2bff      	cmp	r3, #255	; 0xff
 802520e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025212:	d12d      	bne.n	8025270 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8025214:	0953      	lsrs	r3, r2, #5
 8025216:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802521a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802521e:	f02c 0c07 	bic.w	ip, ip, #7
 8025222:	ea43 0c0c 	orr.w	ip, r3, ip
 8025226:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802522a:	ea4c 0202 	orr.w	r2, ip, r2
 802522e:	f8a8 2000 	strh.w	r2, [r8]
 8025232:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8025234:	441c      	add	r4, r3
 8025236:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025238:	f108 0802 	add.w	r8, r8, #2
 802523c:	441e      	add	r6, r3
 802523e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025242:	e6ba      	b.n	8024fba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8025244:	20014c34 	.word	0x20014c34
 8025248:	2800      	cmp	r0, #0
 802524a:	d0ba      	beq.n	80251c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802524c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802524e:	442b      	add	r3, r5
 8025250:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025254:	07db      	lsls	r3, r3, #31
 8025256:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802525a:	bf54      	ite	pl
 802525c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025260:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025264:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025268:	fa5f f38c 	uxtb.w	r3, ip
 802526c:	930c      	str	r3, [sp, #48]	; 0x30
 802526e:	e7a8      	b.n	80251c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025270:	f8b8 e000 	ldrh.w	lr, [r8]
 8025274:	fa1f fa83 	uxth.w	sl, r3
 8025278:	ea4f 202e 	mov.w	r0, lr, asr #8
 802527c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025280:	43db      	mvns	r3, r3
 8025282:	b2db      	uxtb	r3, r3
 8025284:	fb11 f10a 	smulbb	r1, r1, sl
 8025288:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802528c:	fb00 1003 	mla	r0, r0, r3, r1
 8025290:	b2d2      	uxtb	r2, r2
 8025292:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025296:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802529a:	fa5f fe8e 	uxtb.w	lr, lr
 802529e:	fb12 f20a 	smulbb	r2, r2, sl
 80252a2:	fb0e 2203 	mla	r2, lr, r3, r2
 80252a6:	fa5f fc8c 	uxtb.w	ip, ip
 80252aa:	b280      	uxth	r0, r0
 80252ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80252b0:	b292      	uxth	r2, r2
 80252b2:	fb1c fc0a 	smulbb	ip, ip, sl
 80252b6:	fb01 cc03 	mla	ip, r1, r3, ip
 80252ba:	1c43      	adds	r3, r0, #1
 80252bc:	1c51      	adds	r1, r2, #1
 80252be:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80252c2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80252c6:	fa1f fc8c 	uxth.w	ip, ip
 80252ca:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80252ce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80252d2:	4308      	orrs	r0, r1
 80252d4:	f10c 0101 	add.w	r1, ip, #1
 80252d8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80252dc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80252e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80252e4:	ea40 000c 	orr.w	r0, r0, ip
 80252e8:	f8a8 0000 	strh.w	r0, [r8]
 80252ec:	e7a1      	b.n	8025232 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 80252ee:	b017      	add	sp, #92	; 0x5c
 80252f0:	ecbd 8b08 	vpop	{d8-d11}
 80252f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080252f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80252f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80252fc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8025300:	2c00      	cmp	r4, #0
 8025302:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025306:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802530a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 802530e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8025312:	fb04 ce03 	mla	lr, r4, r3, ip
 8025316:	db60      	blt.n	80253da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8025318:	45a1      	cmp	r9, r4
 802531a:	dd5e      	ble.n	80253da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 802531c:	f1bc 0f00 	cmp.w	ip, #0
 8025320:	db59      	blt.n	80253d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8025322:	45e0      	cmp	r8, ip
 8025324:	dd57      	ble.n	80253d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8025326:	ea4f 005e 	mov.w	r0, lr, lsr #1
 802532a:	f01e 0f01 	tst.w	lr, #1
 802532e:	5c16      	ldrb	r6, [r2, r0]
 8025330:	bf0c      	ite	eq
 8025332:	f006 060f 	andeq.w	r6, r6, #15
 8025336:	1136      	asrne	r6, r6, #4
 8025338:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802533c:	b2f6      	uxtb	r6, r6
 802533e:	f11c 0001 	adds.w	r0, ip, #1
 8025342:	d44d      	bmi.n	80253e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8025344:	4580      	cmp	r8, r0
 8025346:	dd4b      	ble.n	80253e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8025348:	2d00      	cmp	r5, #0
 802534a:	d04b      	beq.n	80253e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 802534c:	f10e 0a01 	add.w	sl, lr, #1
 8025350:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8025354:	f01a 0f01 	tst.w	sl, #1
 8025358:	5c10      	ldrb	r0, [r2, r0]
 802535a:	bf0c      	ite	eq
 802535c:	f000 000f 	andeq.w	r0, r0, #15
 8025360:	1100      	asrne	r0, r0, #4
 8025362:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025366:	b2c0      	uxtb	r0, r0
 8025368:	3401      	adds	r4, #1
 802536a:	d43f      	bmi.n	80253ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 802536c:	45a1      	cmp	r9, r4
 802536e:	dd3d      	ble.n	80253ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8025370:	2f00      	cmp	r7, #0
 8025372:	f000 8093 	beq.w	802549c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025376:	f1bc 0f00 	cmp.w	ip, #0
 802537a:	db35      	blt.n	80253e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 802537c:	45e0      	cmp	r8, ip
 802537e:	dd33      	ble.n	80253e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8025380:	eb03 090e 	add.w	r9, r3, lr
 8025384:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8025388:	f019 0f01 	tst.w	r9, #1
 802538c:	5d14      	ldrb	r4, [r2, r4]
 802538e:	bf0c      	ite	eq
 8025390:	f004 040f 	andeq.w	r4, r4, #15
 8025394:	1124      	asrne	r4, r4, #4
 8025396:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802539a:	b2e4      	uxtb	r4, r4
 802539c:	f11c 0c01 	adds.w	ip, ip, #1
 80253a0:	d427      	bmi.n	80253f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80253a2:	45e0      	cmp	r8, ip
 80253a4:	dd25      	ble.n	80253f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80253a6:	b335      	cbz	r5, 80253f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 80253a8:	3301      	adds	r3, #1
 80253aa:	449e      	add	lr, r3
 80253ac:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80253b0:	f01e 0f01 	tst.w	lr, #1
 80253b4:	5cd2      	ldrb	r2, [r2, r3]
 80253b6:	bf0c      	ite	eq
 80253b8:	f002 020f 	andeq.w	r2, r2, #15
 80253bc:	1112      	asrne	r2, r2, #4
 80253be:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80253c2:	b2d3      	uxtb	r3, r2
 80253c4:	2d0f      	cmp	r5, #15
 80253c6:	d917      	bls.n	80253f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 80253c8:	4b37      	ldr	r3, [pc, #220]	; (80254a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 80253ca:	4a38      	ldr	r2, [pc, #224]	; (80254ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 80253cc:	4838      	ldr	r0, [pc, #224]	; (80254b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 80253ce:	f240 11f9 	movw	r1, #505	; 0x1f9
 80253d2:	f002 f86d 	bl	80274b0 <__assert_func>
 80253d6:	2600      	movs	r6, #0
 80253d8:	e7b1      	b.n	802533e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 80253da:	2000      	movs	r0, #0
 80253dc:	4606      	mov	r6, r0
 80253de:	e7c3      	b.n	8025368 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80253e0:	2000      	movs	r0, #0
 80253e2:	e7c1      	b.n	8025368 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80253e4:	4628      	mov	r0, r5
 80253e6:	e7bf      	b.n	8025368 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80253e8:	2400      	movs	r4, #0
 80253ea:	e7d7      	b.n	802539c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 80253ec:	2300      	movs	r3, #0
 80253ee:	461c      	mov	r4, r3
 80253f0:	e7e8      	b.n	80253c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80253f2:	2300      	movs	r3, #0
 80253f4:	e7e6      	b.n	80253c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80253f6:	462b      	mov	r3, r5
 80253f8:	2f0f      	cmp	r7, #15
 80253fa:	d8e5      	bhi.n	80253c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80253fc:	b2ad      	uxth	r5, r5
 80253fe:	b2bf      	uxth	r7, r7
 8025400:	fb05 fc07 	mul.w	ip, r5, r7
 8025404:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8025408:	012d      	lsls	r5, r5, #4
 802540a:	b2bf      	uxth	r7, r7
 802540c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8025410:	eba5 050c 	sub.w	r5, r5, ip
 8025414:	1bd2      	subs	r2, r2, r7
 8025416:	b2ad      	uxth	r5, r5
 8025418:	b292      	uxth	r2, r2
 802541a:	4368      	muls	r0, r5
 802541c:	fb06 0002 	mla	r0, r6, r2, r0
 8025420:	fb07 0404 	mla	r4, r7, r4, r0
 8025424:	fb0c 4303 	mla	r3, ip, r3, r4
 8025428:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802542c:	b3a3      	cbz	r3, 8025498 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802542e:	4a21      	ldr	r2, [pc, #132]	; (80254b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8025430:	880e      	ldrh	r6, [r1, #0]
 8025432:	6815      	ldr	r5, [r2, #0]
 8025434:	1234      	asrs	r4, r6, #8
 8025436:	b29a      	uxth	r2, r3
 8025438:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802543c:	43db      	mvns	r3, r3
 802543e:	b2db      	uxtb	r3, r3
 8025440:	fb10 f002 	smulbb	r0, r0, r2
 8025444:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025448:	fb04 0403 	mla	r4, r4, r3, r0
 802544c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025450:	10f0      	asrs	r0, r6, #3
 8025452:	b2ed      	uxtb	r5, r5
 8025454:	00f6      	lsls	r6, r6, #3
 8025456:	fb17 f702 	smulbb	r7, r7, r2
 802545a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802545e:	fb15 f202 	smulbb	r2, r5, r2
 8025462:	b2f6      	uxtb	r6, r6
 8025464:	b2a4      	uxth	r4, r4
 8025466:	fb00 7003 	mla	r0, r0, r3, r7
 802546a:	fb06 2303 	mla	r3, r6, r3, r2
 802546e:	b29a      	uxth	r2, r3
 8025470:	1c63      	adds	r3, r4, #1
 8025472:	b280      	uxth	r0, r0
 8025474:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025478:	1c53      	adds	r3, r2, #1
 802547a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802547e:	1c42      	adds	r2, r0, #1
 8025480:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025484:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025488:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802548c:	0940      	lsrs	r0, r0, #5
 802548e:	4323      	orrs	r3, r4
 8025490:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025494:	4303      	orrs	r3, r0
 8025496:	800b      	strh	r3, [r1, #0]
 8025498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802549c:	2d0f      	cmp	r5, #15
 802549e:	d893      	bhi.n	80253c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80254a0:	463b      	mov	r3, r7
 80254a2:	463c      	mov	r4, r7
 80254a4:	e7aa      	b.n	80253fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 80254a6:	bf00      	nop
 80254a8:	0802d9a3 	.word	0x0802d9a3
 80254ac:	0802ded2 	.word	0x0802ded2
 80254b0:	0802d970 	.word	0x0802d970
 80254b4:	20014c34 	.word	0x20014c34

080254b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80254b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254bc:	ed2d 8b08 	vpush	{d8-d11}
 80254c0:	b093      	sub	sp, #76	; 0x4c
 80254c2:	461d      	mov	r5, r3
 80254c4:	920c      	str	r2, [sp, #48]	; 0x30
 80254c6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80254c8:	9107      	str	r1, [sp, #28]
 80254ca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80254ce:	9011      	str	r0, [sp, #68]	; 0x44
 80254d0:	6850      	ldr	r0, [r2, #4]
 80254d2:	6812      	ldr	r2, [r2, #0]
 80254d4:	fb00 1303 	mla	r3, r0, r3, r1
 80254d8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80254dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80254de:	689b      	ldr	r3, [r3, #8]
 80254e0:	3301      	adds	r3, #1
 80254e2:	f023 0301 	bic.w	r3, r3, #1
 80254e6:	9306      	str	r3, [sp, #24]
 80254e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80254ea:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80254ee:	681f      	ldr	r7, [r3, #0]
 80254f0:	eeb0 aa40 	vmov.f32	s20, s0
 80254f4:	eef0 9a60 	vmov.f32	s19, s1
 80254f8:	eeb0 9a41 	vmov.f32	s18, s2
 80254fc:	eeb0 8a62 	vmov.f32	s16, s5
 8025500:	eef0 8a43 	vmov.f32	s17, s6
 8025504:	eef0 ba44 	vmov.f32	s23, s8
 8025508:	eeb0 ba64 	vmov.f32	s22, s9
 802550c:	eef0 aa45 	vmov.f32	s21, s10
 8025510:	9b07      	ldr	r3, [sp, #28]
 8025512:	2b00      	cmp	r3, #0
 8025514:	dc03      	bgt.n	802551e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025516:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025518:	2b00      	cmp	r3, #0
 802551a:	f340 8267 	ble.w	80259ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 802551e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025520:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025524:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025528:	1e48      	subs	r0, r1, #1
 802552a:	f102 3cff 	add.w	ip, r2, #4294967295
 802552e:	2d00      	cmp	r5, #0
 8025530:	f340 80b8 	ble.w	80256a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8025534:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025538:	ea4f 4326 	mov.w	r3, r6, asr #16
 802553c:	d406      	bmi.n	802554c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802553e:	4586      	cmp	lr, r0
 8025540:	da04      	bge.n	802554c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025542:	2b00      	cmp	r3, #0
 8025544:	db02      	blt.n	802554c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8025546:	4563      	cmp	r3, ip
 8025548:	f2c0 80ad 	blt.w	80256a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802554c:	f11e 0e01 	adds.w	lr, lr, #1
 8025550:	f100 80a0 	bmi.w	8025694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8025554:	4571      	cmp	r1, lr
 8025556:	f2c0 809d 	blt.w	8025694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802555a:	3301      	adds	r3, #1
 802555c:	f100 809a 	bmi.w	8025694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8025560:	429a      	cmp	r2, r3
 8025562:	f2c0 8097 	blt.w	8025694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8025566:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802556a:	9509      	str	r5, [sp, #36]	; 0x24
 802556c:	46c8      	mov	r8, r9
 802556e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025570:	2b00      	cmp	r3, #0
 8025572:	f340 80b6 	ble.w	80256e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8025576:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802557a:	9308      	str	r3, [sp, #32]
 802557c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802557e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025582:	1423      	asrs	r3, r4, #16
 8025584:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025588:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802558c:	f100 813e 	bmi.w	802580c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8025590:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025594:	455b      	cmp	r3, fp
 8025596:	f280 8139 	bge.w	802580c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 802559a:	2800      	cmp	r0, #0
 802559c:	f2c0 8136 	blt.w	802580c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80255a0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80255a4:	4558      	cmp	r0, fp
 80255a6:	f280 8131 	bge.w	802580c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80255aa:	9a06      	ldr	r2, [sp, #24]
 80255ac:	fb00 3302 	mla	r3, r0, r2, r3
 80255b0:	0858      	lsrs	r0, r3, #1
 80255b2:	07da      	lsls	r2, r3, #31
 80255b4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80255b8:	9a08      	ldr	r2, [sp, #32]
 80255ba:	bf54      	ite	pl
 80255bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80255c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80255c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80255c8:	fa5f fc8c 	uxtb.w	ip, ip
 80255cc:	2a00      	cmp	r2, #0
 80255ce:	f000 80cb 	beq.w	8025768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80255d2:	1c58      	adds	r0, r3, #1
 80255d4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80255d8:	07c0      	lsls	r0, r0, #31
 80255da:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80255de:	bf54      	ite	pl
 80255e0:	f00e 0e0f 	andpl.w	lr, lr, #15
 80255e4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80255e8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80255ec:	fa5f fe8e 	uxtb.w	lr, lr
 80255f0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80255f4:	b1b9      	cbz	r1, 8025626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80255f6:	4453      	add	r3, sl
 80255f8:	0858      	lsrs	r0, r3, #1
 80255fa:	07da      	lsls	r2, r3, #31
 80255fc:	5c38      	ldrb	r0, [r7, r0]
 80255fe:	bf54      	ite	pl
 8025600:	f000 000f 	andpl.w	r0, r0, #15
 8025604:	1100      	asrmi	r0, r0, #4
 8025606:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802560a:	b2c0      	uxtb	r0, r0
 802560c:	900a      	str	r0, [sp, #40]	; 0x28
 802560e:	1c58      	adds	r0, r3, #1
 8025610:	0843      	lsrs	r3, r0, #1
 8025612:	07c2      	lsls	r2, r0, #31
 8025614:	5cfb      	ldrb	r3, [r7, r3]
 8025616:	bf54      	ite	pl
 8025618:	f003 030f 	andpl.w	r3, r3, #15
 802561c:	111b      	asrmi	r3, r3, #4
 802561e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025622:	b2db      	uxtb	r3, r3
 8025624:	930e      	str	r3, [sp, #56]	; 0x38
 8025626:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802562a:	b289      	uxth	r1, r1
 802562c:	fb02 f301 	mul.w	r3, r2, r1
 8025630:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025634:	0112      	lsls	r2, r2, #4
 8025636:	b289      	uxth	r1, r1
 8025638:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802563c:	1a40      	subs	r0, r0, r1
 802563e:	fa1f fe80 	uxth.w	lr, r0
 8025642:	1ad2      	subs	r2, r2, r3
 8025644:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025646:	b292      	uxth	r2, r2
 8025648:	4342      	muls	r2, r0
 802564a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802564e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025650:	fb01 c102 	mla	r1, r1, r2, ip
 8025654:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025656:	fb03 1302 	mla	r3, r3, r2, r1
 802565a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802565e:	2bff      	cmp	r3, #255	; 0xff
 8025660:	f040 8093 	bne.w	802578a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8025664:	4bbe      	ldr	r3, [pc, #760]	; (8025960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8025666:	681a      	ldr	r2, [r3, #0]
 8025668:	4bbe      	ldr	r3, [pc, #760]	; (8025964 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802566a:	0951      	lsrs	r1, r2, #5
 802566c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025670:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025674:	430b      	orrs	r3, r1
 8025676:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802567a:	4313      	orrs	r3, r2
 802567c:	f8a8 3000 	strh.w	r3, [r8]
 8025680:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025682:	441c      	add	r4, r3
 8025684:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025686:	441e      	add	r6, r3
 8025688:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802568a:	3b01      	subs	r3, #1
 802568c:	f108 0802 	add.w	r8, r8, #2
 8025690:	9309      	str	r3, [sp, #36]	; 0x24
 8025692:	e76c      	b.n	802556e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8025694:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025696:	441c      	add	r4, r3
 8025698:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802569a:	3d01      	subs	r5, #1
 802569c:	441e      	add	r6, r3
 802569e:	f109 0902 	add.w	r9, r9, #2
 80256a2:	e744      	b.n	802552e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80256a4:	d021      	beq.n	80256ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80256a6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80256a8:	1e6b      	subs	r3, r5, #1
 80256aa:	fb00 4003 	mla	r0, r0, r3, r4
 80256ae:	1400      	asrs	r0, r0, #16
 80256b0:	f53f af59 	bmi.w	8025566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80256b4:	3901      	subs	r1, #1
 80256b6:	4288      	cmp	r0, r1
 80256b8:	f6bf af55 	bge.w	8025566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80256bc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80256be:	fb01 6303 	mla	r3, r1, r3, r6
 80256c2:	141b      	asrs	r3, r3, #16
 80256c4:	f53f af4f 	bmi.w	8025566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80256c8:	3a01      	subs	r2, #1
 80256ca:	4293      	cmp	r3, r2
 80256cc:	f6bf af4b 	bge.w	8025566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80256d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80256d4:	9308      	str	r3, [sp, #32]
 80256d6:	46a8      	mov	r8, r5
 80256d8:	46ce      	mov	lr, r9
 80256da:	f1b8 0f00 	cmp.w	r8, #0
 80256de:	f300 80b5 	bgt.w	802584c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80256e2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80256e6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80256ea:	9b07      	ldr	r3, [sp, #28]
 80256ec:	2b00      	cmp	r3, #0
 80256ee:	f340 817d 	ble.w	80259ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80256f2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80256f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80256fa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80256fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025700:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8025704:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8025708:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802570c:	eef0 6a48 	vmov.f32	s13, s16
 8025710:	ee69 7a27 	vmul.f32	s15, s18, s15
 8025714:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025718:	ee37 8a48 	vsub.f32	s16, s14, s16
 802571c:	ee16 4a90 	vmov	r4, s13
 8025720:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8025724:	eef0 6a68 	vmov.f32	s13, s17
 8025728:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802572c:	ee18 2a10 	vmov	r2, s16
 8025730:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8025734:	fb92 f3f3 	sdiv	r3, r2, r3
 8025738:	ee18 2a90 	vmov	r2, s17
 802573c:	9327      	str	r3, [sp, #156]	; 0x9c
 802573e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025740:	fb92 f3f3 	sdiv	r3, r2, r3
 8025744:	9328      	str	r3, [sp, #160]	; 0xa0
 8025746:	9b07      	ldr	r3, [sp, #28]
 8025748:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802574a:	3b01      	subs	r3, #1
 802574c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025750:	9307      	str	r3, [sp, #28]
 8025752:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025754:	ee16 6a90 	vmov	r6, s13
 8025758:	bf14      	ite	ne
 802575a:	461d      	movne	r5, r3
 802575c:	4615      	moveq	r5, r2
 802575e:	eef0 8a67 	vmov.f32	s17, s15
 8025762:	eeb0 8a47 	vmov.f32	s16, s14
 8025766:	e6d3      	b.n	8025510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025768:	2900      	cmp	r1, #0
 802576a:	f43f af5c 	beq.w	8025626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802576e:	eb0a 0003 	add.w	r0, sl, r3
 8025772:	0843      	lsrs	r3, r0, #1
 8025774:	07c0      	lsls	r0, r0, #31
 8025776:	5cfb      	ldrb	r3, [r7, r3]
 8025778:	bf54      	ite	pl
 802577a:	f003 030f 	andpl.w	r3, r3, #15
 802577e:	111b      	asrmi	r3, r3, #4
 8025780:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025784:	b2db      	uxtb	r3, r3
 8025786:	930a      	str	r3, [sp, #40]	; 0x28
 8025788:	e74d      	b.n	8025626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802578a:	2b00      	cmp	r3, #0
 802578c:	f43f af78 	beq.w	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025790:	4a73      	ldr	r2, [pc, #460]	; (8025960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8025792:	f8b8 c000 	ldrh.w	ip, [r8]
 8025796:	6810      	ldr	r0, [r2, #0]
 8025798:	fa1f fe83 	uxth.w	lr, r3
 802579c:	ea4f 212c 	mov.w	r1, ip, asr #8
 80257a0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80257a4:	43db      	mvns	r3, r3
 80257a6:	b2db      	uxtb	r3, r3
 80257a8:	fb12 f20e 	smulbb	r2, r2, lr
 80257ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80257b0:	fb01 2103 	mla	r1, r1, r3, r2
 80257b4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80257b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80257bc:	b2c0      	uxtb	r0, r0
 80257be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80257c2:	fb1b fb0e 	smulbb	fp, fp, lr
 80257c6:	b289      	uxth	r1, r1
 80257c8:	fb10 fe0e 	smulbb	lr, r0, lr
 80257cc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80257d0:	fa5f fc8c 	uxtb.w	ip, ip
 80257d4:	fb02 b203 	mla	r2, r2, r3, fp
 80257d8:	1c48      	adds	r0, r1, #1
 80257da:	fb0c e303 	mla	r3, ip, r3, lr
 80257de:	b292      	uxth	r2, r2
 80257e0:	b29b      	uxth	r3, r3
 80257e2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80257e6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80257ea:	f102 0b01 	add.w	fp, r2, #1
 80257ee:	1c59      	adds	r1, r3, #1
 80257f0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80257f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80257f8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80257fc:	0952      	lsrs	r2, r2, #5
 80257fe:	4301      	orrs	r1, r0
 8025800:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025804:	4311      	orrs	r1, r2
 8025806:	f8a8 1000 	strh.w	r1, [r8]
 802580a:	e739      	b.n	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802580c:	f113 0b01 	adds.w	fp, r3, #1
 8025810:	f53f af36 	bmi.w	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025814:	45dc      	cmp	ip, fp
 8025816:	f6ff af33 	blt.w	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802581a:	f110 0b01 	adds.w	fp, r0, #1
 802581e:	f53f af2f 	bmi.w	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025822:	45de      	cmp	lr, fp
 8025824:	f6ff af2c 	blt.w	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025828:	9a08      	ldr	r2, [sp, #32]
 802582a:	9302      	str	r3, [sp, #8]
 802582c:	fa0f f38e 	sxth.w	r3, lr
 8025830:	9301      	str	r3, [sp, #4]
 8025832:	fa0f f38c 	sxth.w	r3, ip
 8025836:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802583a:	9105      	str	r1, [sp, #20]
 802583c:	9300      	str	r3, [sp, #0]
 802583e:	463a      	mov	r2, r7
 8025840:	4653      	mov	r3, sl
 8025842:	4641      	mov	r1, r8
 8025844:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025846:	f7ff fd57 	bl	80252f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802584a:	e719      	b.n	8025680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802584c:	9906      	ldr	r1, [sp, #24]
 802584e:	1422      	asrs	r2, r4, #16
 8025850:	1433      	asrs	r3, r6, #16
 8025852:	fb01 2303 	mla	r3, r1, r3, r2
 8025856:	085a      	lsrs	r2, r3, #1
 8025858:	07d9      	lsls	r1, r3, #31
 802585a:	5cba      	ldrb	r2, [r7, r2]
 802585c:	bf54      	ite	pl
 802585e:	f002 020f 	andpl.w	r2, r2, #15
 8025862:	1112      	asrmi	r2, r2, #4
 8025864:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025868:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802586c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025870:	b2d2      	uxtb	r2, r2
 8025872:	2800      	cmp	r0, #0
 8025874:	d062      	beq.n	802593c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8025876:	f103 0a01 	add.w	sl, r3, #1
 802587a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802587e:	f01a 0f01 	tst.w	sl, #1
 8025882:	5c79      	ldrb	r1, [r7, r1]
 8025884:	bf0c      	ite	eq
 8025886:	f001 010f 	andeq.w	r1, r1, #15
 802588a:	1109      	asrne	r1, r1, #4
 802588c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025890:	b2c9      	uxtb	r1, r1
 8025892:	910f      	str	r1, [sp, #60]	; 0x3c
 8025894:	f1bc 0f00 	cmp.w	ip, #0
 8025898:	d019      	beq.n	80258ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802589a:	9908      	ldr	r1, [sp, #32]
 802589c:	440b      	add	r3, r1
 802589e:	0859      	lsrs	r1, r3, #1
 80258a0:	f013 0f01 	tst.w	r3, #1
 80258a4:	5c79      	ldrb	r1, [r7, r1]
 80258a6:	bf0c      	ite	eq
 80258a8:	f001 010f 	andeq.w	r1, r1, #15
 80258ac:	1109      	asrne	r1, r1, #4
 80258ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80258b2:	b2c9      	uxtb	r1, r1
 80258b4:	3301      	adds	r3, #1
 80258b6:	910b      	str	r1, [sp, #44]	; 0x2c
 80258b8:	0859      	lsrs	r1, r3, #1
 80258ba:	07db      	lsls	r3, r3, #31
 80258bc:	5c79      	ldrb	r1, [r7, r1]
 80258be:	bf54      	ite	pl
 80258c0:	f001 010f 	andpl.w	r1, r1, #15
 80258c4:	1109      	asrmi	r1, r1, #4
 80258c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80258ca:	b2c9      	uxtb	r1, r1
 80258cc:	9110      	str	r1, [sp, #64]	; 0x40
 80258ce:	b280      	uxth	r0, r0
 80258d0:	fa1f fc8c 	uxth.w	ip, ip
 80258d4:	fb00 f30c 	mul.w	r3, r0, ip
 80258d8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80258dc:	0100      	lsls	r0, r0, #4
 80258de:	fa1f fc8c 	uxth.w	ip, ip
 80258e2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80258e6:	eba1 010c 	sub.w	r1, r1, ip
 80258ea:	fa1f fa81 	uxth.w	sl, r1
 80258ee:	1ac0      	subs	r0, r0, r3
 80258f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80258f2:	b280      	uxth	r0, r0
 80258f4:	4348      	muls	r0, r1
 80258f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80258f8:	fb02 020a 	mla	r2, r2, sl, r0
 80258fc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025900:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025902:	fb03 c302 	mla	r3, r3, r2, ip
 8025906:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802590a:	2bff      	cmp	r3, #255	; 0xff
 802590c:	d12c      	bne.n	8025968 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802590e:	4b14      	ldr	r3, [pc, #80]	; (8025960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8025910:	681a      	ldr	r2, [r3, #0]
 8025912:	4b14      	ldr	r3, [pc, #80]	; (8025964 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025914:	0951      	lsrs	r1, r2, #5
 8025916:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802591a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802591e:	430b      	orrs	r3, r1
 8025920:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025924:	4313      	orrs	r3, r2
 8025926:	f8ae 3000 	strh.w	r3, [lr]
 802592a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802592c:	441c      	add	r4, r3
 802592e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025930:	f10e 0e02 	add.w	lr, lr, #2
 8025934:	441e      	add	r6, r3
 8025936:	f108 38ff 	add.w	r8, r8, #4294967295
 802593a:	e6ce      	b.n	80256da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802593c:	f1bc 0f00 	cmp.w	ip, #0
 8025940:	d0c5      	beq.n	80258ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8025942:	9908      	ldr	r1, [sp, #32]
 8025944:	440b      	add	r3, r1
 8025946:	0859      	lsrs	r1, r3, #1
 8025948:	07db      	lsls	r3, r3, #31
 802594a:	5c79      	ldrb	r1, [r7, r1]
 802594c:	bf54      	ite	pl
 802594e:	f001 010f 	andpl.w	r1, r1, #15
 8025952:	1109      	asrmi	r1, r1, #4
 8025954:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025958:	b2c9      	uxtb	r1, r1
 802595a:	910b      	str	r1, [sp, #44]	; 0x2c
 802595c:	e7b7      	b.n	80258ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802595e:	bf00      	nop
 8025960:	20014c34 	.word	0x20014c34
 8025964:	fffff800 	.word	0xfffff800
 8025968:	2b00      	cmp	r3, #0
 802596a:	d0de      	beq.n	802592a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802596c:	4a22      	ldr	r2, [pc, #136]	; (80259f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 802596e:	f8be c000 	ldrh.w	ip, [lr]
 8025972:	6810      	ldr	r0, [r2, #0]
 8025974:	fa1f fa83 	uxth.w	sl, r3
 8025978:	ea4f 212c 	mov.w	r1, ip, asr #8
 802597c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025980:	43db      	mvns	r3, r3
 8025982:	b2db      	uxtb	r3, r3
 8025984:	fb12 f20a 	smulbb	r2, r2, sl
 8025988:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802598c:	fb01 2103 	mla	r1, r1, r3, r2
 8025990:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025994:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025998:	b2c0      	uxtb	r0, r0
 802599a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802599e:	fa5f fc8c 	uxtb.w	ip, ip
 80259a2:	fb10 f00a 	smulbb	r0, r0, sl
 80259a6:	fb0c 0003 	mla	r0, ip, r3, r0
 80259aa:	b289      	uxth	r1, r1
 80259ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80259b0:	b280      	uxth	r0, r0
 80259b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80259b6:	fb02 b203 	mla	r2, r2, r3, fp
 80259ba:	1c4b      	adds	r3, r1, #1
 80259bc:	f100 0b01 	add.w	fp, r0, #1
 80259c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80259c4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80259c8:	b292      	uxth	r2, r2
 80259ca:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80259ce:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80259d2:	ea4b 0101 	orr.w	r1, fp, r1
 80259d6:	f102 0b01 	add.w	fp, r2, #1
 80259da:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80259de:	0952      	lsrs	r2, r2, #5
 80259e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80259e4:	4311      	orrs	r1, r2
 80259e6:	f8ae 1000 	strh.w	r1, [lr]
 80259ea:	e79e      	b.n	802592a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80259ec:	b013      	add	sp, #76	; 0x4c
 80259ee:	ecbd 8b08 	vpop	{d8-d11}
 80259f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259f6:	bf00      	nop
 80259f8:	20014c34 	.word	0x20014c34

080259fc <CRC_Lock>:
 80259fc:	b530      	push	{r4, r5, lr}
 80259fe:	4a20      	ldr	r2, [pc, #128]	; (8025a80 <CRC_Lock+0x84>)
 8025a00:	6813      	ldr	r3, [r2, #0]
 8025a02:	f023 0301 	bic.w	r3, r3, #1
 8025a06:	6013      	str	r3, [r2, #0]
 8025a08:	4b1e      	ldr	r3, [pc, #120]	; (8025a84 <CRC_Lock+0x88>)
 8025a0a:	681a      	ldr	r2, [r3, #0]
 8025a0c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025a10:	4022      	ands	r2, r4
 8025a12:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025a16:	42aa      	cmp	r2, r5
 8025a18:	d005      	beq.n	8025a26 <CRC_Lock+0x2a>
 8025a1a:	681b      	ldr	r3, [r3, #0]
 8025a1c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025a20:	4023      	ands	r3, r4
 8025a22:	4293      	cmp	r3, r2
 8025a24:	d124      	bne.n	8025a70 <CRC_Lock+0x74>
 8025a26:	4b18      	ldr	r3, [pc, #96]	; (8025a88 <CRC_Lock+0x8c>)
 8025a28:	681b      	ldr	r3, [r3, #0]
 8025a2a:	bb0b      	cbnz	r3, 8025a70 <CRC_Lock+0x74>
 8025a2c:	4b17      	ldr	r3, [pc, #92]	; (8025a8c <CRC_Lock+0x90>)
 8025a2e:	681a      	ldr	r2, [r3, #0]
 8025a30:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025a34:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025a38:	d00d      	beq.n	8025a56 <CRC_Lock+0x5a>
 8025a3a:	681a      	ldr	r2, [r3, #0]
 8025a3c:	f240 4483 	movw	r4, #1155	; 0x483
 8025a40:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025a44:	42a2      	cmp	r2, r4
 8025a46:	d006      	beq.n	8025a56 <CRC_Lock+0x5a>
 8025a48:	681b      	ldr	r3, [r3, #0]
 8025a4a:	f240 4285 	movw	r2, #1157	; 0x485
 8025a4e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025a52:	4293      	cmp	r3, r2
 8025a54:	d10c      	bne.n	8025a70 <CRC_Lock+0x74>
 8025a56:	4b0e      	ldr	r3, [pc, #56]	; (8025a90 <CRC_Lock+0x94>)
 8025a58:	2201      	movs	r2, #1
 8025a5a:	601a      	str	r2, [r3, #0]
 8025a5c:	681a      	ldr	r2, [r3, #0]
 8025a5e:	2a00      	cmp	r2, #0
 8025a60:	d1fc      	bne.n	8025a5c <CRC_Lock+0x60>
 8025a62:	4b0c      	ldr	r3, [pc, #48]	; (8025a94 <CRC_Lock+0x98>)
 8025a64:	6018      	str	r0, [r3, #0]
 8025a66:	6818      	ldr	r0, [r3, #0]
 8025a68:	1a43      	subs	r3, r0, r1
 8025a6a:	4258      	negs	r0, r3
 8025a6c:	4158      	adcs	r0, r3
 8025a6e:	bd30      	pop	{r4, r5, pc}
 8025a70:	4b09      	ldr	r3, [pc, #36]	; (8025a98 <CRC_Lock+0x9c>)
 8025a72:	2201      	movs	r2, #1
 8025a74:	601a      	str	r2, [r3, #0]
 8025a76:	681a      	ldr	r2, [r3, #0]
 8025a78:	2a00      	cmp	r2, #0
 8025a7a:	d1fc      	bne.n	8025a76 <CRC_Lock+0x7a>
 8025a7c:	4b07      	ldr	r3, [pc, #28]	; (8025a9c <CRC_Lock+0xa0>)
 8025a7e:	e7f1      	b.n	8025a64 <CRC_Lock+0x68>
 8025a80:	e0002000 	.word	0xe0002000
 8025a84:	e000ed00 	.word	0xe000ed00
 8025a88:	e0042000 	.word	0xe0042000
 8025a8c:	5c001000 	.word	0x5c001000
 8025a90:	58024c08 	.word	0x58024c08
 8025a94:	58024c00 	.word	0x58024c00
 8025a98:	40023008 	.word	0x40023008
 8025a9c:	40023000 	.word	0x40023000

08025aa0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025aa0:	6101      	str	r1, [r0, #16]
 8025aa2:	4770      	bx	lr

08025aa4 <_ZN8touchgfx8Gestures4tickEv>:
 8025aa4:	7b83      	ldrb	r3, [r0, #14]
 8025aa6:	b14b      	cbz	r3, 8025abc <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025aa8:	8903      	ldrh	r3, [r0, #8]
 8025aaa:	3301      	adds	r3, #1
 8025aac:	b29b      	uxth	r3, r3
 8025aae:	2b07      	cmp	r3, #7
 8025ab0:	8103      	strh	r3, [r0, #8]
 8025ab2:	bf81      	itttt	hi
 8025ab4:	2300      	movhi	r3, #0
 8025ab6:	8143      	strhhi	r3, [r0, #10]
 8025ab8:	8183      	strhhi	r3, [r0, #12]
 8025aba:	7383      	strbhi	r3, [r0, #14]
 8025abc:	4770      	bx	lr
	...

08025ac0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025ac0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025ac4:	4698      	mov	r8, r3
 8025ac6:	8883      	ldrh	r3, [r0, #4]
 8025ac8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025acc:	eba8 0303 	sub.w	r3, r8, r3
 8025ad0:	b21b      	sxth	r3, r3
 8025ad2:	4604      	mov	r4, r0
 8025ad4:	2b00      	cmp	r3, #0
 8025ad6:	4617      	mov	r7, r2
 8025ad8:	4a18      	ldr	r2, [pc, #96]	; (8025b3c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025ada:	9200      	str	r2, [sp, #0]
 8025adc:	bfb8      	it	lt
 8025ade:	425b      	neglt	r3, r3
 8025ae0:	8aa2      	ldrh	r2, [r4, #20]
 8025ae2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025ae6:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025aea:	b21b      	sxth	r3, r3
 8025aec:	460e      	mov	r6, r1
 8025aee:	4293      	cmp	r3, r2
 8025af0:	88c1      	ldrh	r1, [r0, #6]
 8025af2:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025af6:	f04f 0000 	mov.w	r0, #0
 8025afa:	f88d 0004 	strb.w	r0, [sp, #4]
 8025afe:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025b02:	dc07      	bgt.n	8025b14 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025b04:	1a69      	subs	r1, r5, r1
 8025b06:	b209      	sxth	r1, r1
 8025b08:	2900      	cmp	r1, #0
 8025b0a:	bfb8      	it	lt
 8025b0c:	4249      	neglt	r1, r1
 8025b0e:	b209      	sxth	r1, r1
 8025b10:	428a      	cmp	r2, r1
 8025b12:	da10      	bge.n	8025b36 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025b14:	6920      	ldr	r0, [r4, #16]
 8025b16:	6803      	ldr	r3, [r0, #0]
 8025b18:	4669      	mov	r1, sp
 8025b1a:	685b      	ldr	r3, [r3, #4]
 8025b1c:	4798      	blx	r3
 8025b1e:	eba8 0606 	sub.w	r6, r8, r6
 8025b22:	2300      	movs	r3, #0
 8025b24:	1bef      	subs	r7, r5, r7
 8025b26:	2001      	movs	r0, #1
 8025b28:	8123      	strh	r3, [r4, #8]
 8025b2a:	8166      	strh	r6, [r4, #10]
 8025b2c:	81a7      	strh	r7, [r4, #12]
 8025b2e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025b32:	80e5      	strh	r5, [r4, #6]
 8025b34:	73a0      	strb	r0, [r4, #14]
 8025b36:	b004      	add	sp, #16
 8025b38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b3c:	0802b350 	.word	0x0802b350

08025b40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025b42:	461e      	mov	r6, r3
 8025b44:	1e4b      	subs	r3, r1, #1
 8025b46:	2b01      	cmp	r3, #1
 8025b48:	b085      	sub	sp, #20
 8025b4a:	4604      	mov	r4, r0
 8025b4c:	460d      	mov	r5, r1
 8025b4e:	4617      	mov	r7, r2
 8025b50:	d84b      	bhi.n	8025bea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025b52:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025b56:	1cd3      	adds	r3, r2, #3
 8025b58:	b29b      	uxth	r3, r3
 8025b5a:	2b06      	cmp	r3, #6
 8025b5c:	d916      	bls.n	8025b8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025b5e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025c00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025b62:	f8cd c004 	str.w	ip, [sp, #4]
 8025b66:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025b6a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025b6e:	6900      	ldr	r0, [r0, #16]
 8025b70:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025b74:	f04f 0c00 	mov.w	ip, #0
 8025b78:	f88d c008 	strb.w	ip, [sp, #8]
 8025b7c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025b80:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025b84:	6803      	ldr	r3, [r0, #0]
 8025b86:	a901      	add	r1, sp, #4
 8025b88:	689b      	ldr	r3, [r3, #8]
 8025b8a:	4798      	blx	r3
 8025b8c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025b90:	1cd3      	adds	r3, r2, #3
 8025b92:	b29b      	uxth	r3, r3
 8025b94:	2b06      	cmp	r3, #6
 8025b96:	d916      	bls.n	8025bc6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025b98:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025c00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025b9c:	f8cd c004 	str.w	ip, [sp, #4]
 8025ba0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025ba4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025ba8:	6920      	ldr	r0, [r4, #16]
 8025baa:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025bae:	f04f 0c01 	mov.w	ip, #1
 8025bb2:	f88d c008 	strb.w	ip, [sp, #8]
 8025bb6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025bba:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025bbe:	6803      	ldr	r3, [r0, #0]
 8025bc0:	a901      	add	r1, sp, #4
 8025bc2:	689b      	ldr	r3, [r3, #8]
 8025bc4:	4798      	blx	r3
 8025bc6:	4b0d      	ldr	r3, [pc, #52]	; (8025bfc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025bc8:	9301      	str	r3, [sp, #4]
 8025bca:	6920      	ldr	r0, [r4, #16]
 8025bcc:	f88d 5008 	strb.w	r5, [sp, #8]
 8025bd0:	2300      	movs	r3, #0
 8025bd2:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025bd6:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025bda:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025bde:	6803      	ldr	r3, [r0, #0]
 8025be0:	a901      	add	r1, sp, #4
 8025be2:	681b      	ldr	r3, [r3, #0]
 8025be4:	4798      	blx	r3
 8025be6:	b005      	add	sp, #20
 8025be8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025bea:	2900      	cmp	r1, #0
 8025bec:	d1eb      	bne.n	8025bc6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025bee:	80a2      	strh	r2, [r4, #4]
 8025bf0:	80c6      	strh	r6, [r0, #6]
 8025bf2:	60a1      	str	r1, [r4, #8]
 8025bf4:	81a1      	strh	r1, [r4, #12]
 8025bf6:	73a1      	strb	r1, [r4, #14]
 8025bf8:	e7e5      	b.n	8025bc6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025bfa:	bf00      	nop
 8025bfc:	0802b33c 	.word	0x0802b33c
 8025c00:	0802cde4 	.word	0x0802cde4

08025c04 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>:
 8025c04:	10c9      	asrs	r1, r1, #3
 8025c06:	2900      	cmp	r1, #0
 8025c08:	bfb8      	it	lt
 8025c0a:	4249      	neglt	r1, r1
 8025c0c:	2801      	cmp	r0, #1
 8025c0e:	d108      	bne.n	8025c22 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 8025c10:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025c14:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025c18:	4601      	mov	r1, r0
 8025c1a:	dd02      	ble.n	8025c22 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 8025c1c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025c20:	4770      	bx	lr
 8025c22:	29ff      	cmp	r1, #255	; 0xff
 8025c24:	bfa8      	it	ge
 8025c26:	21ff      	movge	r1, #255	; 0xff
 8025c28:	4608      	mov	r0, r1
 8025c2a:	4770      	bx	lr

08025c2c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 8025c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c30:	688c      	ldr	r4, [r1, #8]
 8025c32:	2c00      	cmp	r4, #0
 8025c34:	b087      	sub	sp, #28
 8025c36:	4607      	mov	r7, r0
 8025c38:	db2b      	blt.n	8025c92 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 8025c3a:	6803      	ldr	r3, [r0, #0]
 8025c3c:	691a      	ldr	r2, [r3, #16]
 8025c3e:	42a2      	cmp	r2, r4
 8025c40:	dd27      	ble.n	8025c92 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 8025c42:	685a      	ldr	r2, [r3, #4]
 8025c44:	695e      	ldr	r6, [r3, #20]
 8025c46:	68cd      	ldr	r5, [r1, #12]
 8025c48:	f8d1 901c 	ldr.w	r9, [r1, #28]
 8025c4c:	f893 a008 	ldrb.w	sl, [r3, #8]
 8025c50:	f8d1 8020 	ldr.w	r8, [r1, #32]
 8025c54:	fb06 2604 	mla	r6, r6, r4, r2
 8025c58:	698a      	ldr	r2, [r1, #24]
 8025c5a:	9205      	str	r2, [sp, #20]
 8025c5c:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 8025c60:	9b05      	ldr	r3, [sp, #20]
 8025c62:	6839      	ldr	r1, [r7, #0]
 8025c64:	eb03 0c02 	add.w	ip, r3, r2
 8025c68:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8025c6c:	68c9      	ldr	r1, [r1, #12]
 8025c6e:	1898      	adds	r0, r3, r2
 8025c70:	4288      	cmp	r0, r1
 8025c72:	db02      	blt.n	8025c7a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 8025c74:	1a8b      	subs	r3, r1, r2
 8025c76:	2b00      	cmp	r3, #0
 8025c78:	dd09      	ble.n	8025c8e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 8025c7a:	6878      	ldr	r0, [r7, #4]
 8025c7c:	6801      	ldr	r1, [r0, #0]
 8025c7e:	9400      	str	r4, [sp, #0]
 8025c80:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 8025c84:	4653      	mov	r3, sl
 8025c86:	f8d1 b008 	ldr.w	fp, [r1, #8]
 8025c8a:	4631      	mov	r1, r6
 8025c8c:	47d8      	blx	fp
 8025c8e:	3d01      	subs	r5, #1
 8025c90:	d1e4      	bne.n	8025c5c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 8025c92:	b007      	add	sp, #28
 8025c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c98 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025c98:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 8025c9c:	b90b      	cbnz	r3, 8025ca2 <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 8025c9e:	f001 b999 	b.w	8026fd4 <_ZN8touchgfx7Outline6lineToEii>
 8025ca2:	4770      	bx	lr

08025ca4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025ca4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025ca8:	4b90      	ldr	r3, [pc, #576]	; (8025eec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 8025caa:	4604      	mov	r4, r0
 8025cac:	2600      	movs	r6, #0
 8025cae:	f100 0518 	add.w	r5, r0, #24
 8025cb2:	e9c0 3100 	strd	r3, r1, [r0]
 8025cb6:	b086      	sub	sp, #24
 8025cb8:	e9c0 6602 	strd	r6, r6, [r0, #8]
 8025cbc:	e9c0 6604 	strd	r6, r6, [r0, #16]
 8025cc0:	f104 0730 	add.w	r7, r4, #48	; 0x30
 8025cc4:	4628      	mov	r0, r5
 8025cc6:	4690      	mov	r8, r2
 8025cc8:	f001 fbaa 	bl	8027420 <_ZN8touchgfx15RenderingBufferC1Ev>
 8025ccc:	4638      	mov	r0, r7
 8025cce:	f000 fb45 	bl	802635c <_ZN8touchgfx7OutlineC1Ev>
 8025cd2:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8025cd6:	f001 fb4b 	bl	8027370 <_ZN8touchgfx8ScanlineC1Ev>
 8025cda:	2301      	movs	r3, #1
 8025cdc:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 8025ce0:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 8025ce4:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 8025ce8:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8025cec:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 8025cf0:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 8025cf4:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8025cf8:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 8025cfc:	f7ef f80e 	bl	8014d1c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 8025d00:	b928      	cbnz	r0, 8025d0e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x6a>
 8025d02:	4b7b      	ldr	r3, [pc, #492]	; (8025ef0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 8025d04:	4a7b      	ldr	r2, [pc, #492]	; (8025ef4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 8025d06:	212a      	movs	r1, #42	; 0x2a
 8025d08:	487b      	ldr	r0, [pc, #492]	; (8025ef8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 8025d0a:	f001 fbd1 	bl	80274b0 <__assert_func>
 8025d0e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025d12:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025d16:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025d1a:	9602      	str	r6, [sp, #8]
 8025d1c:	4410      	add	r0, r2
 8025d1e:	b280      	uxth	r0, r0
 8025d20:	fa0f fa80 	sxth.w	sl, r0
 8025d24:	f1ba 0f00 	cmp.w	sl, #0
 8025d28:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025d2c:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8025d30:	dd70      	ble.n	8025e14 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8025d32:	4591      	cmp	r9, r2
 8025d34:	dd6e      	ble.n	8025e14 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8025d36:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025d3a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8025d3e:	440b      	add	r3, r1
 8025d40:	b29b      	uxth	r3, r3
 8025d42:	b21e      	sxth	r6, r3
 8025d44:	2e00      	cmp	r6, #0
 8025d46:	dd65      	ble.n	8025e14 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8025d48:	458e      	cmp	lr, r1
 8025d4a:	dd63      	ble.n	8025e14 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8025d4c:	45d1      	cmp	r9, sl
 8025d4e:	bfb8      	it	lt
 8025d50:	fa1f f089 	uxthlt.w	r0, r9
 8025d54:	45b6      	cmp	lr, r6
 8025d56:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025d5a:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8025d5e:	bfb8      	it	lt
 8025d60:	fa1f f38e 	uxthlt.w	r3, lr
 8025d64:	1a80      	subs	r0, r0, r2
 8025d66:	1a5b      	subs	r3, r3, r1
 8025d68:	f8ad 000c 	strh.w	r0, [sp, #12]
 8025d6c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025d70:	f8ad 2008 	strh.w	r2, [sp, #8]
 8025d74:	f8ad 100a 	strh.w	r1, [sp, #10]
 8025d78:	f10d 0808 	add.w	r8, sp, #8
 8025d7c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8025d80:	ae04      	add	r6, sp, #16
 8025d82:	e886 0003 	stmia.w	r6, {r0, r1}
 8025d86:	f8dc 3000 	ldr.w	r3, [ip]
 8025d8a:	4660      	mov	r0, ip
 8025d8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025d8e:	4631      	mov	r1, r6
 8025d90:	4798      	blx	r3
 8025d92:	6861      	ldr	r1, [r4, #4]
 8025d94:	4640      	mov	r0, r8
 8025d96:	3104      	adds	r1, #4
 8025d98:	f7f0 fb14 	bl	80163c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025d9c:	4630      	mov	r0, r6
 8025d9e:	f7f0 facd 	bl	801633c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025da2:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8025da6:	f7ee ff49 	bl	8014c3c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 8025daa:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 8025dae:	4638      	mov	r0, r7
 8025db0:	f000 fab0 	bl	8026314 <_ZN8touchgfx7Outline5resetEv>
 8025db4:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8025db8:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 8025dbc:	015b      	lsls	r3, r3, #5
 8025dbe:	60e3      	str	r3, [r4, #12]
 8025dc0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8025dc4:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8025dc8:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 8025dcc:	015b      	lsls	r3, r3, #5
 8025dce:	6123      	str	r3, [r4, #16]
 8025dd0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8025dd4:	015b      	lsls	r3, r3, #5
 8025dd6:	6163      	str	r3, [r4, #20]
 8025dd8:	4b48      	ldr	r3, [pc, #288]	; (8025efc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 8025dda:	0152      	lsls	r2, r2, #5
 8025ddc:	6818      	ldr	r0, [r3, #0]
 8025dde:	60a2      	str	r2, [r4, #8]
 8025de0:	6803      	ldr	r3, [r0, #0]
 8025de2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025de4:	4798      	blx	r3
 8025de6:	4606      	mov	r6, r0
 8025de8:	f7ea fdb4 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8025dec:	6803      	ldr	r3, [r0, #0]
 8025dee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025df0:	4798      	blx	r3
 8025df2:	4607      	mov	r7, r0
 8025df4:	f7ea fdae 	bl	8010954 <_ZN8touchgfx3HAL3lcdEv>
 8025df8:	6803      	ldr	r3, [r0, #0]
 8025dfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025dfc:	4798      	blx	r3
 8025dfe:	280d      	cmp	r0, #13
 8025e00:	d855      	bhi.n	8025eae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x20a>
 8025e02:	e8df f000 	tbb	[pc, r0]
 8025e06:	564c      	.short	0x564c
 8025e08:	2b6f0a67 	.word	0x2b6f0a67
 8025e0c:	6060603b 	.word	0x6060603b
 8025e10:	6f6f6060 	.word	0x6f6f6060
 8025e14:	2300      	movs	r3, #0
 8025e16:	9303      	str	r3, [sp, #12]
 8025e18:	e7ae      	b.n	8025d78 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd4>
 8025e1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025e1e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025e22:	2108      	movs	r1, #8
 8025e24:	fb92 f1f1 	sdiv	r1, r2, r1
 8025e28:	fb07 1303 	mla	r3, r7, r3, r1
 8025e2c:	441e      	add	r6, r3
 8025e2e:	4253      	negs	r3, r2
 8025e30:	f003 0307 	and.w	r3, r3, #7
 8025e34:	f002 0207 	and.w	r2, r2, #7
 8025e38:	bf58      	it	pl
 8025e3a:	425a      	negpl	r2, r3
 8025e3c:	b2d2      	uxtb	r2, r2
 8025e3e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8025e42:	6721      	str	r1, [r4, #112]	; 0x70
 8025e44:	e9cd 1700 	strd	r1, r7, [sp]
 8025e48:	4628      	mov	r0, r5
 8025e4a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8025e4e:	4631      	mov	r1, r6
 8025e50:	f001 faf2 	bl	8027438 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 8025e54:	4620      	mov	r0, r4
 8025e56:	b006      	add	sp, #24
 8025e58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025e5c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025e60:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025e64:	2104      	movs	r1, #4
 8025e66:	fb92 f1f1 	sdiv	r1, r2, r1
 8025e6a:	fb07 1303 	mla	r3, r7, r3, r1
 8025e6e:	441e      	add	r6, r3
 8025e70:	4253      	negs	r3, r2
 8025e72:	f003 0303 	and.w	r3, r3, #3
 8025e76:	f002 0203 	and.w	r2, r2, #3
 8025e7a:	e7dd      	b.n	8025e38 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 8025e7c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025e80:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025e84:	2a00      	cmp	r2, #0
 8025e86:	f04f 0102 	mov.w	r1, #2
 8025e8a:	fb92 f1f1 	sdiv	r1, r2, r1
 8025e8e:	f002 0201 	and.w	r2, r2, #1
 8025e92:	fb07 1303 	mla	r3, r7, r3, r1
 8025e96:	441e      	add	r6, r3
 8025e98:	bfb8      	it	lt
 8025e9a:	4252      	neglt	r2, r2
 8025e9c:	e7ce      	b.n	8025e3c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x198>
 8025e9e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025ea2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025ea6:	437b      	muls	r3, r7
 8025ea8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8025eac:	441e      	add	r6, r3
 8025eae:	2200      	movs	r2, #0
 8025eb0:	e7c5      	b.n	8025e3e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x19a>
 8025eb2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025eb6:	fb07 f203 	mul.w	r2, r7, r3
 8025eba:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8025ebe:	2103      	movs	r1, #3
 8025ec0:	fb13 2301 	smlabb	r3, r3, r1, r2
 8025ec4:	e7f2      	b.n	8025eac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8025ec6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025eca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025ece:	fb07 2303 	mla	r3, r7, r3, r2
 8025ed2:	e7eb      	b.n	8025eac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8025ed4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025ed8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025edc:	437b      	muls	r3, r7
 8025ede:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8025ee2:	e7e3      	b.n	8025eac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8025ee4:	4b06      	ldr	r3, [pc, #24]	; (8025f00 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x25c>)
 8025ee6:	4a03      	ldr	r2, [pc, #12]	; (8025ef4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 8025ee8:	2169      	movs	r1, #105	; 0x69
 8025eea:	e70d      	b.n	8025d08 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x64>
 8025eec:	0802e258 	.word	0x0802e258
 8025ef0:	0802e1a0 	.word	0x0802e1a0
 8025ef4:	0802e260 	.word	0x0802e260
 8025ef8:	0802e1fc 	.word	0x0802e1fc
 8025efc:	20014c0c 	.word	0x20014c0c
 8025f00:	0802e230 	.word	0x0802e230

08025f04 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 8025f04:	6812      	ldr	r2, [r2, #0]
 8025f06:	2a00      	cmp	r2, #0
 8025f08:	db0b      	blt.n	8025f22 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 8025f0a:	9800      	ldr	r0, [sp, #0]
 8025f0c:	6800      	ldr	r0, [r0, #0]
 8025f0e:	4290      	cmp	r0, r2
 8025f10:	bfd4      	ite	le
 8025f12:	2002      	movle	r0, #2
 8025f14:	2000      	movgt	r0, #0
 8025f16:	680a      	ldr	r2, [r1, #0]
 8025f18:	2a00      	cmp	r2, #0
 8025f1a:	da04      	bge.n	8025f26 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 8025f1c:	f040 0004 	orr.w	r0, r0, #4
 8025f20:	4770      	bx	lr
 8025f22:	2001      	movs	r0, #1
 8025f24:	e7f7      	b.n	8025f16 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 8025f26:	681b      	ldr	r3, [r3, #0]
 8025f28:	4293      	cmp	r3, r2
 8025f2a:	bfd8      	it	le
 8025f2c:	f040 0008 	orrle.w	r0, r0, #8
 8025f30:	4770      	bx	lr
	...

08025f34 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8025f34:	b510      	push	{r4, lr}
 8025f36:	4b07      	ldr	r3, [pc, #28]	; (8025f54 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8025f38:	781b      	ldrb	r3, [r3, #0]
 8025f3a:	2b01      	cmp	r3, #1
 8025f3c:	d108      	bne.n	8025f50 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8025f3e:	6843      	ldr	r3, [r0, #4]
 8025f40:	6814      	ldr	r4, [r2, #0]
 8025f42:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8025f46:	680b      	ldr	r3, [r1, #0]
 8025f48:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8025f4c:	6013      	str	r3, [r2, #0]
 8025f4e:	600c      	str	r4, [r1, #0]
 8025f50:	bd10      	pop	{r4, pc}
 8025f52:	bf00      	nop
 8025f54:	20014c04 	.word	0x20014c04

08025f58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8025f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025f5a:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8025f5e:	b085      	sub	sp, #20
 8025f60:	4604      	mov	r4, r0
 8025f62:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8025f66:	b33b      	cbz	r3, 8025fb8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 8025f68:	aa02      	add	r2, sp, #8
 8025f6a:	a903      	add	r1, sp, #12
 8025f6c:	f7ff ffe2 	bl	8025f34 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8025f70:	68a3      	ldr	r3, [r4, #8]
 8025f72:	9e03      	ldr	r6, [sp, #12]
 8025f74:	9f02      	ldr	r7, [sp, #8]
 8025f76:	1af6      	subs	r6, r6, r3
 8025f78:	68e3      	ldr	r3, [r4, #12]
 8025f7a:	9603      	str	r6, [sp, #12]
 8025f7c:	1aff      	subs	r7, r7, r3
 8025f7e:	f104 0314 	add.w	r3, r4, #20
 8025f82:	9300      	str	r3, [sp, #0]
 8025f84:	aa02      	add	r2, sp, #8
 8025f86:	f104 0310 	add.w	r3, r4, #16
 8025f8a:	a903      	add	r1, sp, #12
 8025f8c:	4620      	mov	r0, r4
 8025f8e:	9702      	str	r7, [sp, #8]
 8025f90:	f7ff ffb8 	bl	8025f04 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 8025f94:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 8025f98:	4605      	mov	r5, r0
 8025f9a:	b97b      	cbnz	r3, 8025fbc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 8025f9c:	463a      	mov	r2, r7
 8025f9e:	4631      	mov	r1, r6
 8025fa0:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8025fa4:	f7ff fe78 	bl	8025c98 <_ZN8touchgfx10Rasterizer6lineToEii>
 8025fa8:	9b03      	ldr	r3, [sp, #12]
 8025faa:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8025fae:	9b02      	ldr	r3, [sp, #8]
 8025fb0:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 8025fb4:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 8025fb8:	b005      	add	sp, #20
 8025fba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025fbc:	b110      	cbz	r0, 8025fc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 8025fbe:	ea13 0200 	ands.w	r2, r3, r0
 8025fc2:	d11c      	bne.n	8025ffe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8025fc4:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 8025fc8:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8025fcc:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 8025fd0:	b188      	cbz	r0, 8025ff6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 8025fd2:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 8025fd6:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8025fda:	b913      	cbnz	r3, 8025fe2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 8025fdc:	4630      	mov	r0, r6
 8025fde:	f001 f829 	bl	8027034 <_ZN8touchgfx7Outline6moveToEii>
 8025fe2:	2300      	movs	r3, #0
 8025fe4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8025fe8:	2301      	movs	r3, #1
 8025fea:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 8025fee:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8025ff2:	4630      	mov	r0, r6
 8025ff4:	e7d6      	b.n	8025fa4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 8025ff6:	4630      	mov	r0, r6
 8025ff8:	f7ff fe4e 	bl	8025c98 <_ZN8touchgfx10Rasterizer6lineToEii>
 8025ffc:	e7f7      	b.n	8025fee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 8025ffe:	4615      	mov	r5, r2
 8026000:	e7d2      	b.n	8025fa8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

08026002 <_ZN8touchgfx6Canvas5closeEv>:
 8026002:	b538      	push	{r3, r4, r5, lr}
 8026004:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 8026008:	4604      	mov	r4, r0
 802600a:	b993      	cbnz	r3, 8026032 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802600c:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 8026010:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 8026014:	4213      	tst	r3, r2
 8026016:	d10c      	bne.n	8026032 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026018:	f100 0530 	add.w	r5, r0, #48	; 0x30
 802601c:	b123      	cbz	r3, 8026028 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802601e:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 8026022:	4628      	mov	r0, r5
 8026024:	f7ff fe38 	bl	8025c98 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026028:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 802602c:	4628      	mov	r0, r5
 802602e:	f7ff fe33 	bl	8025c98 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026032:	2300      	movs	r3, #0
 8026034:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8026038:	bd38      	pop	{r3, r4, r5, pc}

0802603a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802603a:	b5f0      	push	{r4, r5, r6, r7, lr}
 802603c:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8026040:	b085      	sub	sp, #20
 8026042:	4604      	mov	r4, r0
 8026044:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8026048:	b353      	cbz	r3, 80260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 802604a:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 802604e:	b90b      	cbnz	r3, 8026054 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 8026050:	f7ff ffd7 	bl	8026002 <_ZN8touchgfx6Canvas5closeEv>
 8026054:	aa02      	add	r2, sp, #8
 8026056:	a903      	add	r1, sp, #12
 8026058:	4620      	mov	r0, r4
 802605a:	f7ff ff6b 	bl	8025f34 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802605e:	68a3      	ldr	r3, [r4, #8]
 8026060:	9d03      	ldr	r5, [sp, #12]
 8026062:	9e02      	ldr	r6, [sp, #8]
 8026064:	1aed      	subs	r5, r5, r3
 8026066:	68e3      	ldr	r3, [r4, #12]
 8026068:	9503      	str	r5, [sp, #12]
 802606a:	1af6      	subs	r6, r6, r3
 802606c:	f104 0314 	add.w	r3, r4, #20
 8026070:	9300      	str	r3, [sp, #0]
 8026072:	aa02      	add	r2, sp, #8
 8026074:	f104 0310 	add.w	r3, r4, #16
 8026078:	a903      	add	r1, sp, #12
 802607a:	4620      	mov	r0, r4
 802607c:	9602      	str	r6, [sp, #8]
 802607e:	f7ff ff41 	bl	8025f04 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 8026082:	4607      	mov	r7, r0
 8026084:	b170      	cbz	r0, 80260a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 8026086:	2301      	movs	r3, #1
 8026088:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 802608c:	9a03      	ldr	r2, [sp, #12]
 802608e:	9b02      	ldr	r3, [sp, #8]
 8026090:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 8026094:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 8026098:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 802609c:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 80260a0:	b005      	add	sp, #20
 80260a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80260a4:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 80260a8:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 80260ac:	b92b      	cbnz	r3, 80260ba <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 80260ae:	4632      	mov	r2, r6
 80260b0:	4629      	mov	r1, r5
 80260b2:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80260b6:	f000 ffbd 	bl	8027034 <_ZN8touchgfx7Outline6moveToEii>
 80260ba:	2300      	movs	r3, #0
 80260bc:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 80260c0:	2301      	movs	r3, #1
 80260c2:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 80260c6:	e7e1      	b.n	802608c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

080260c8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 80260c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260cc:	b087      	sub	sp, #28
 80260ce:	4604      	mov	r4, r0
 80260d0:	9105      	str	r1, [sp, #20]
 80260d2:	f001 f8f6 	bl	80272c2 <_ZN8touchgfx7Outline8getCellsEv>
 80260d6:	f8d4 9008 	ldr.w	r9, [r4, #8]
 80260da:	4605      	mov	r5, r0
 80260dc:	f1b9 0f00 	cmp.w	r9, #0
 80260e0:	d103      	bne.n	80260ea <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 80260e2:	2001      	movs	r0, #1
 80260e4:	b007      	add	sp, #28
 80260e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260ea:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 80260ee:	2e00      	cmp	r6, #0
 80260f0:	d139      	bne.n	8026166 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 80260f2:	f104 0848 	add.w	r8, r4, #72	; 0x48
 80260f6:	4640      	mov	r0, r8
 80260f8:	f001 f925 	bl	8027346 <_ZN8touchgfx8Scanline5resetEv>
 80260fc:	f109 33ff 	add.w	r3, r9, #4294967295
 8026100:	f105 0708 	add.w	r7, r5, #8
 8026104:	9303      	str	r3, [sp, #12]
 8026106:	f9b5 b000 	ldrsh.w	fp, [r5]
 802610a:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 802610e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8026112:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8026116:	46da      	mov	sl, fp
 8026118:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 802611c:	9b03      	ldr	r3, [sp, #12]
 802611e:	9504      	str	r5, [sp, #16]
 8026120:	3b01      	subs	r3, #1
 8026122:	9303      	str	r3, [sp, #12]
 8026124:	3301      	adds	r3, #1
 8026126:	4416      	add	r6, r2
 8026128:	463d      	mov	r5, r7
 802612a:	d01e      	beq.n	802616a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 802612c:	3708      	adds	r7, #8
 802612e:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 8026132:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 8026136:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 802613a:	4290      	cmp	r0, r2
 802613c:	d11e      	bne.n	802617c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 802613e:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 8026142:	4411      	add	r1, r2
 8026144:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 8026148:	e7e8      	b.n	802611c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 802614a:	1c91      	adds	r1, r2, #2
 802614c:	f04f 0301 	mov.w	r3, #1
 8026150:	65e1      	str	r1, [r4, #92]	; 0x5c
 8026152:	8053      	strh	r3, [r2, #2]
 8026154:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8026156:	1c91      	adds	r1, r2, #2
 8026158:	65a1      	str	r1, [r4, #88]	; 0x58
 802615a:	f8a2 b002 	strh.w	fp, [r2, #2]
 802615e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8026160:	3201      	adds	r2, #1
 8026162:	6562      	str	r2, [r4, #84]	; 0x54
 8026164:	e03a      	b.n	80261dc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 8026166:	2000      	movs	r0, #0
 8026168:	e7bc      	b.n	80260e4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 802616a:	b951      	cbnz	r1, 8026182 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 802616c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 802616e:	2b00      	cmp	r3, #0
 8026170:	d0b7      	beq.n	80260e2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 8026172:	4641      	mov	r1, r8
 8026174:	9805      	ldr	r0, [sp, #20]
 8026176:	f7ff fd59 	bl	8025c2c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 802617a:	e7b2      	b.n	80260e2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 802617c:	2900      	cmp	r1, #0
 802617e:	d035      	beq.n	80261ec <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 8026180:	9504      	str	r5, [sp, #16]
 8026182:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 8026186:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 802618a:	f7ff fd3b 	bl	8025c04 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 802618e:	4605      	mov	r5, r0
 8026190:	b330      	cbz	r0, 80261e0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8026192:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8026194:	b182      	cbz	r2, 80261b8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 8026196:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8026198:	4591      	cmp	r9, r2
 802619a:	d00d      	beq.n	80261b8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 802619c:	4641      	mov	r1, r8
 802619e:	9805      	ldr	r0, [sp, #20]
 80261a0:	f7ff fd44 	bl	8025c2c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 80261a4:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80261a8:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 80261aa:	65e2      	str	r2, [r4, #92]	; 0x5c
 80261ac:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80261b0:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80261b2:	65a2      	str	r2, [r4, #88]	; 0x58
 80261b4:	2300      	movs	r3, #0
 80261b6:	6563      	str	r3, [r4, #84]	; 0x54
 80261b8:	f1bb 0f00 	cmp.w	fp, #0
 80261bc:	db10      	blt.n	80261e0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 80261be:	f7ee fdbb 	bl	8014d38 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 80261c2:	4583      	cmp	fp, r0
 80261c4:	da0c      	bge.n	80261e0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 80261c6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80261c8:	f802 500b 	strb.w	r5, [r2, fp]
 80261cc:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 80261ce:	3201      	adds	r2, #1
 80261d0:	4593      	cmp	fp, r2
 80261d2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80261d4:	d1b9      	bne.n	802614a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 80261d6:	8811      	ldrh	r1, [r2, #0]
 80261d8:	3101      	adds	r1, #1
 80261da:	8011      	strh	r1, [r2, #0]
 80261dc:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 80261e0:	9b03      	ldr	r3, [sp, #12]
 80261e2:	3301      	adds	r3, #1
 80261e4:	d0c2      	beq.n	802616c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 80261e6:	9d04      	ldr	r5, [sp, #16]
 80261e8:	f10b 0a01 	add.w	sl, fp, #1
 80261ec:	f9b5 3000 	ldrsh.w	r3, [r5]
 80261f0:	4553      	cmp	r3, sl
 80261f2:	dd88      	ble.n	8026106 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 80261f4:	01b1      	lsls	r1, r6, #6
 80261f6:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 80261fa:	f7ff fd03 	bl	8025c04 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 80261fe:	4683      	mov	fp, r0
 8026200:	2800      	cmp	r0, #0
 8026202:	d080      	beq.n	8026106 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 8026204:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8026206:	b183      	cbz	r3, 802622a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 8026208:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802620a:	4599      	cmp	r9, r3
 802620c:	d00d      	beq.n	802622a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 802620e:	4641      	mov	r1, r8
 8026210:	9805      	ldr	r0, [sp, #20]
 8026212:	f7ff fd0b 	bl	8025c2c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8026216:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802621a:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 802621e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8026220:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026222:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026224:	65a3      	str	r3, [r4, #88]	; 0x58
 8026226:	2300      	movs	r3, #0
 8026228:	6563      	str	r3, [r4, #84]	; 0x54
 802622a:	f9b5 3000 	ldrsh.w	r3, [r5]
 802622e:	f8cd b000 	str.w	fp, [sp]
 8026232:	eba3 030a 	sub.w	r3, r3, sl
 8026236:	464a      	mov	r2, r9
 8026238:	4651      	mov	r1, sl
 802623a:	4640      	mov	r0, r8
 802623c:	f001 f8ae 	bl	802739c <_ZN8touchgfx8Scanline7addSpanEiijj>
 8026240:	e761      	b.n	8026106 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

08026242 <_ZN8touchgfx6Canvas6renderEh>:
 8026242:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8026244:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8026248:	4604      	mov	r4, r0
 802624a:	460d      	mov	r5, r1
 802624c:	b913      	cbnz	r3, 8026254 <_ZN8touchgfx6Canvas6renderEh+0x12>
 802624e:	2001      	movs	r0, #1
 8026250:	b003      	add	sp, #12
 8026252:	bd30      	pop	{r4, r5, pc}
 8026254:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8026258:	2b00      	cmp	r3, #0
 802625a:	d12f      	bne.n	80262bc <_ZN8touchgfx6Canvas6renderEh+0x7a>
 802625c:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 8026260:	2b00      	cmp	r3, #0
 8026262:	d0f4      	beq.n	802624e <_ZN8touchgfx6Canvas6renderEh+0xc>
 8026264:	6840      	ldr	r0, [r0, #4]
 8026266:	6803      	ldr	r3, [r0, #0]
 8026268:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802626a:	4798      	blx	r3
 802626c:	fb10 f105 	smulbb	r1, r0, r5
 8026270:	b288      	uxth	r0, r1
 8026272:	1c41      	adds	r1, r0, #1
 8026274:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026278:	120d      	asrs	r5, r1, #8
 802627a:	d0e8      	beq.n	802624e <_ZN8touchgfx6Canvas6renderEh+0xc>
 802627c:	4620      	mov	r0, r4
 802627e:	f7ff fec0 	bl	8026002 <_ZN8touchgfx6Canvas5closeEv>
 8026282:	6860      	ldr	r0, [r4, #4]
 8026284:	6803      	ldr	r3, [r0, #0]
 8026286:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026288:	4798      	blx	r3
 802628a:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 802628e:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 8026292:	80c3      	strh	r3, [r0, #6]
 8026294:	8082      	strh	r2, [r0, #4]
 8026296:	6860      	ldr	r0, [r4, #4]
 8026298:	6803      	ldr	r3, [r0, #0]
 802629a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802629c:	4798      	blx	r3
 802629e:	7205      	strb	r5, [r0, #8]
 80262a0:	6860      	ldr	r0, [r4, #4]
 80262a2:	6803      	ldr	r3, [r0, #0]
 80262a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80262a6:	4798      	blx	r3
 80262a8:	f104 0318 	add.w	r3, r4, #24
 80262ac:	e9cd 3000 	strd	r3, r0, [sp]
 80262b0:	4669      	mov	r1, sp
 80262b2:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80262b6:	f7ff ff07 	bl	80260c8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 80262ba:	e7c9      	b.n	8026250 <_ZN8touchgfx6Canvas6renderEh+0xe>
 80262bc:	2000      	movs	r0, #0
 80262be:	e7c7      	b.n	8026250 <_ZN8touchgfx6Canvas6renderEh+0xe>

080262c0 <_ZN8touchgfx6CanvasD1Ev>:
 80262c0:	b538      	push	{r3, r4, r5, lr}
 80262c2:	4605      	mov	r5, r0
 80262c4:	4b08      	ldr	r3, [pc, #32]	; (80262e8 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 80262c6:	f845 3b30 	str.w	r3, [r5], #48
 80262ca:	4b08      	ldr	r3, [pc, #32]	; (80262ec <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 80262cc:	4604      	mov	r4, r0
 80262ce:	6818      	ldr	r0, [r3, #0]
 80262d0:	6803      	ldr	r3, [r0, #0]
 80262d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80262d4:	4798      	blx	r3
 80262d6:	4628      	mov	r0, r5
 80262d8:	f000 f814 	bl	8026304 <_ZN8touchgfx7OutlineD1Ev>
 80262dc:	f104 0018 	add.w	r0, r4, #24
 80262e0:	f001 f895 	bl	802740e <_ZN8touchgfx15RenderingBufferD1Ev>
 80262e4:	4620      	mov	r0, r4
 80262e6:	bd38      	pop	{r3, r4, r5, pc}
 80262e8:	0802e258 	.word	0x0802e258
 80262ec:	20014c0c 	.word	0x20014c0c

080262f0 <_ZN8touchgfx6CanvasD0Ev>:
 80262f0:	b510      	push	{r4, lr}
 80262f2:	4604      	mov	r4, r0
 80262f4:	f7ff ffe4 	bl	80262c0 <_ZN8touchgfx6CanvasD1Ev>
 80262f8:	4620      	mov	r0, r4
 80262fa:	21bc      	movs	r1, #188	; 0xbc
 80262fc:	f001 f8a9 	bl	8027452 <_ZdlPvj>
 8026300:	4620      	mov	r0, r4
 8026302:	bd10      	pop	{r4, pc}

08026304 <_ZN8touchgfx7OutlineD1Ev>:
 8026304:	4770      	bx	lr

08026306 <_ZN8touchgfx7OutlineD0Ev>:
 8026306:	b510      	push	{r4, lr}
 8026308:	2148      	movs	r1, #72	; 0x48
 802630a:	4604      	mov	r4, r0
 802630c:	f001 f8a1 	bl	8027452 <_ZdlPvj>
 8026310:	4620      	mov	r0, r4
 8026312:	bd10      	pop	{r4, pc}

08026314 <_ZN8touchgfx7Outline5resetEv>:
 8026314:	b510      	push	{r4, lr}
 8026316:	4604      	mov	r4, r0
 8026318:	f7ee fd26 	bl	8014d68 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 802631c:	60e0      	str	r0, [r4, #12]
 802631e:	f7ee fd29 	bl	8014d74 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8026322:	68e3      	ldr	r3, [r4, #12]
 8026324:	6123      	str	r3, [r4, #16]
 8026326:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802632a:	82a3      	strh	r3, [r4, #20]
 802632c:	82e3      	strh	r3, [r4, #22]
 802632e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8026330:	f023 0301 	bic.w	r3, r3, #1
 8026334:	f043 0302 	orr.w	r3, r3, #2
 8026338:	63e3      	str	r3, [r4, #60]	; 0x3c
 802633a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 802633e:	2200      	movs	r2, #0
 8026340:	08c0      	lsrs	r0, r0, #3
 8026342:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8026346:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802634a:	6060      	str	r0, [r4, #4]
 802634c:	60a2      	str	r2, [r4, #8]
 802634e:	8322      	strh	r2, [r4, #24]
 8026350:	8362      	strh	r2, [r4, #26]
 8026352:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8026356:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802635a:	bd10      	pop	{r4, pc}

0802635c <_ZN8touchgfx7OutlineC1Ev>:
 802635c:	b510      	push	{r4, lr}
 802635e:	4b0f      	ldr	r3, [pc, #60]	; (802639c <_ZN8touchgfx7OutlineC1Ev+0x40>)
 8026360:	6003      	str	r3, [r0, #0]
 8026362:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8026366:	2300      	movs	r3, #0
 8026368:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 802636c:	4604      	mov	r4, r0
 802636e:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8026372:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8026376:	e9c0 3305 	strd	r3, r3, [r0, #20]
 802637a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 802637e:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 8026382:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 8026386:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 802638a:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 802638e:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 8026392:	f7ff ffbf 	bl	8026314 <_ZN8touchgfx7Outline5resetEv>
 8026396:	4620      	mov	r0, r4
 8026398:	bd10      	pop	{r4, pc}
 802639a:	bf00      	nop
 802639c:	0802e328 	.word	0x0802e328

080263a0 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80263a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263a4:	b095      	sub	sp, #84	; 0x54
 80263a6:	4604      	mov	r4, r0
 80263a8:	981e      	ldr	r0, [sp, #120]	; 0x78
 80263aa:	9304      	str	r3, [sp, #16]
 80263ac:	1153      	asrs	r3, r2, #5
 80263ae:	9300      	str	r3, [sp, #0]
 80263b0:	1143      	asrs	r3, r0, #5
 80263b2:	930c      	str	r3, [sp, #48]	; 0x30
 80263b4:	f000 031f 	and.w	r3, r0, #31
 80263b8:	9303      	str	r3, [sp, #12]
 80263ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80263bc:	1155      	asrs	r5, r2, #5
 80263be:	42ab      	cmp	r3, r5
 80263c0:	bfc4      	itt	gt
 80263c2:	462b      	movgt	r3, r5
 80263c4:	6323      	strgt	r3, [r4, #48]	; 0x30
 80263c6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80263c8:	1155      	asrs	r5, r2, #5
 80263ca:	42ab      	cmp	r3, r5
 80263cc:	bfde      	ittt	le
 80263ce:	462b      	movle	r3, r5
 80263d0:	3301      	addle	r3, #1
 80263d2:	63a3      	strle	r3, [r4, #56]	; 0x38
 80263d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80263d6:	1145      	asrs	r5, r0, #5
 80263d8:	42ab      	cmp	r3, r5
 80263da:	bfc4      	itt	gt
 80263dc:	462b      	movgt	r3, r5
 80263de:	6323      	strgt	r3, [r4, #48]	; 0x30
 80263e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80263e2:	1145      	asrs	r5, r0, #5
 80263e4:	42ab      	cmp	r3, r5
 80263e6:	bfde      	ittt	le
 80263e8:	462b      	movle	r3, r5
 80263ea:	3301      	addle	r3, #1
 80263ec:	63a3      	strle	r3, [r4, #56]	; 0x38
 80263ee:	9b04      	ldr	r3, [sp, #16]
 80263f0:	1157      	asrs	r7, r2, #5
 80263f2:	eba3 0a01 	sub.w	sl, r3, r1
 80263f6:	1143      	asrs	r3, r0, #5
 80263f8:	429f      	cmp	r7, r3
 80263fa:	f002 061f 	and.w	r6, r2, #31
 80263fe:	ea4f 1561 	mov.w	r5, r1, asr #5
 8026402:	f040 8122 	bne.w	802664a <_ZN8touchgfx7Outline10renderLineEiiii+0x2aa>
 8026406:	9b04      	ldr	r3, [sp, #16]
 8026408:	ea4f 1b63 	mov.w	fp, r3, asr #5
 802640c:	9b03      	ldr	r3, [sp, #12]
 802640e:	429e      	cmp	r6, r3
 8026410:	d131      	bne.n	8026476 <_ZN8touchgfx7Outline10renderLineEiiii+0xd6>
 8026412:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8026416:	f9bd 2000 	ldrsh.w	r2, [sp]
 802641a:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802641e:	fa0f fb8b 	sxth.w	fp, fp
 8026422:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8026426:	eb0b 4002 	add.w	r0, fp, r2, lsl #16
 802642a:	4281      	cmp	r1, r0
 802642c:	f000 80eb 	beq.w	8026606 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8026430:	8b60      	ldrh	r0, [r4, #26]
 8026432:	8b21      	ldrh	r1, [r4, #24]
 8026434:	4301      	orrs	r1, r0
 8026436:	d00b      	beq.n	8026450 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8026438:	2b00      	cmp	r3, #0
 802643a:	db09      	blt.n	8026450 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 802643c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802643e:	428b      	cmp	r3, r1
 8026440:	da06      	bge.n	8026450 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8026442:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8026446:	4299      	cmp	r1, r3
 8026448:	d308      	bcc.n	802645c <_ZN8touchgfx7Outline10renderLineEiiii+0xbc>
 802644a:	2301      	movs	r3, #1
 802644c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8026450:	f8a4 b014 	strh.w	fp, [r4, #20]
 8026454:	2300      	movs	r3, #0
 8026456:	82e2      	strh	r2, [r4, #22]
 8026458:	8323      	strh	r3, [r4, #24]
 802645a:	e01f      	b.n	802649c <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 802645c:	f104 0314 	add.w	r3, r4, #20
 8026460:	cb03      	ldmia	r3!, {r0, r1}
 8026462:	6925      	ldr	r5, [r4, #16]
 8026464:	6028      	str	r0, [r5, #0]
 8026466:	6069      	str	r1, [r5, #4]
 8026468:	6923      	ldr	r3, [r4, #16]
 802646a:	3308      	adds	r3, #8
 802646c:	6123      	str	r3, [r4, #16]
 802646e:	68a3      	ldr	r3, [r4, #8]
 8026470:	3301      	adds	r3, #1
 8026472:	60a3      	str	r3, [r4, #8]
 8026474:	e7ec      	b.n	8026450 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8026476:	9b04      	ldr	r3, [sp, #16]
 8026478:	8b20      	ldrh	r0, [r4, #24]
 802647a:	8b62      	ldrh	r2, [r4, #26]
 802647c:	f003 031f 	and.w	r3, r3, #31
 8026480:	9305      	str	r3, [sp, #20]
 8026482:	9b03      	ldr	r3, [sp, #12]
 8026484:	45ab      	cmp	fp, r5
 8026486:	f001 011f 	and.w	r1, r1, #31
 802648a:	eba3 0306 	sub.w	r3, r3, r6
 802648e:	d107      	bne.n	80264a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x100>
 8026490:	4418      	add	r0, r3
 8026492:	8320      	strh	r0, [r4, #24]
 8026494:	9805      	ldr	r0, [sp, #20]
 8026496:	4401      	add	r1, r0
 8026498:	fb03 2301 	mla	r3, r3, r1, r2
 802649c:	8363      	strh	r3, [r4, #26]
 802649e:	e0b2      	b.n	8026606 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 80264a0:	f1ba 0f00 	cmp.w	sl, #0
 80264a4:	db35      	blt.n	8026512 <_ZN8touchgfx7Outline10renderLineEiiii+0x172>
 80264a6:	2701      	movs	r7, #1
 80264a8:	f1c1 0c20 	rsb	ip, r1, #32
 80264ac:	9702      	str	r7, [sp, #8]
 80264ae:	fb03 f30c 	mul.w	r3, r3, ip
 80264b2:	2720      	movs	r7, #32
 80264b4:	9701      	str	r7, [sp, #4]
 80264b6:	fb93 fcfa 	sdiv	ip, r3, sl
 80264ba:	9f01      	ldr	r7, [sp, #4]
 80264bc:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 80264c0:	fb0a 331c 	mls	r3, sl, ip, r3
 80264c4:	2b00      	cmp	r3, #0
 80264c6:	bfb8      	it	lt
 80264c8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80264cc:	4439      	add	r1, r7
 80264ce:	fb0c 2101 	mla	r1, ip, r1, r2
 80264d2:	9a02      	ldr	r2, [sp, #8]
 80264d4:	4415      	add	r5, r2
 80264d6:	f9bd 2000 	ldrsh.w	r2, [sp]
 80264da:	9200      	str	r2, [sp, #0]
 80264dc:	ea4f 4702 	mov.w	r7, r2, lsl #16
 80264e0:	9704      	str	r7, [sp, #16]
 80264e2:	9a04      	ldr	r2, [sp, #16]
 80264e4:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 80264e8:	fa0f fe85 	sxth.w	lr, r5
 80264ec:	4460      	add	r0, ip
 80264ee:	eb07 4708 	add.w	r7, r7, r8, lsl #16
 80264f2:	eb0e 0902 	add.w	r9, lr, r2
 80264f6:	bfb8      	it	lt
 80264f8:	4453      	addlt	r3, sl
 80264fa:	b200      	sxth	r0, r0
 80264fc:	b209      	sxth	r1, r1
 80264fe:	454f      	cmp	r7, r9
 8026500:	8320      	strh	r0, [r4, #24]
 8026502:	8361      	strh	r1, [r4, #26]
 8026504:	d10d      	bne.n	8026522 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8026506:	4ba1      	ldr	r3, [pc, #644]	; (802678c <_ZN8touchgfx7Outline10renderLineEiiii+0x3ec>)
 8026508:	4aa1      	ldr	r2, [pc, #644]	; (8026790 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f0>)
 802650a:	48a2      	ldr	r0, [pc, #648]	; (8026794 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f4>)
 802650c:	2176      	movs	r1, #118	; 0x76
 802650e:	f000 ffcf 	bl	80274b0 <__assert_func>
 8026512:	f04f 37ff 	mov.w	r7, #4294967295
 8026516:	9702      	str	r7, [sp, #8]
 8026518:	434b      	muls	r3, r1
 802651a:	f1ca 0a00 	rsb	sl, sl, #0
 802651e:	2700      	movs	r7, #0
 8026520:	e7c8      	b.n	80264b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x114>
 8026522:	ea50 0201 	orrs.w	r2, r0, r1
 8026526:	d00c      	beq.n	8026542 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8026528:	f1b8 0f00 	cmp.w	r8, #0
 802652c:	db09      	blt.n	8026542 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 802652e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026530:	4588      	cmp	r8, r1
 8026532:	da06      	bge.n	8026542 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8026534:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8026538:	4288      	cmp	r0, r1
 802653a:	d367      	bcc.n	802660c <_ZN8touchgfx7Outline10renderLineEiiii+0x26c>
 802653c:	2101      	movs	r1, #1
 802653e:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8026542:	2100      	movs	r1, #0
 8026544:	9a00      	ldr	r2, [sp, #0]
 8026546:	f8a4 e014 	strh.w	lr, [r4, #20]
 802654a:	45ab      	cmp	fp, r5
 802654c:	82e2      	strh	r2, [r4, #22]
 802654e:	8321      	strh	r1, [r4, #24]
 8026550:	8361      	strh	r1, [r4, #26]
 8026552:	4466      	add	r6, ip
 8026554:	d04e      	beq.n	80265f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 8026556:	9a03      	ldr	r2, [sp, #12]
 8026558:	1b91      	subs	r1, r2, r6
 802655a:	448c      	add	ip, r1
 802655c:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 8026560:	fb9c f7fa 	sdiv	r7, ip, sl
 8026564:	fb0a cc17 	mls	ip, sl, r7, ip
 8026568:	f1bc 0f00 	cmp.w	ip, #0
 802656c:	bfb8      	it	lt
 802656e:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8026572:	f107 0201 	add.w	r2, r7, #1
 8026576:	bfb8      	it	lt
 8026578:	44d4      	addlt	ip, sl
 802657a:	eba3 030a 	sub.w	r3, r3, sl
 802657e:	9207      	str	r2, [sp, #28]
 8026580:	f04f 0800 	mov.w	r8, #0
 8026584:	eb13 030c 	adds.w	r3, r3, ip
 8026588:	bf58      	it	pl
 802658a:	9807      	ldrpl	r0, [sp, #28]
 802658c:	9a02      	ldr	r2, [sp, #8]
 802658e:	bf48      	it	mi
 8026590:	4638      	movmi	r0, r7
 8026592:	fa0f fe80 	sxth.w	lr, r0
 8026596:	ea4f 1140 	mov.w	r1, r0, lsl #5
 802659a:	4415      	add	r5, r2
 802659c:	4406      	add	r6, r0
 802659e:	9a04      	ldr	r2, [sp, #16]
 80265a0:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80265a4:	f8a4 e018 	strh.w	lr, [r4, #24]
 80265a8:	fa0f f985 	sxth.w	r9, r5
 80265ac:	4410      	add	r0, r2
 80265ae:	444a      	add	r2, r9
 80265b0:	bf58      	it	pl
 80265b2:	eba3 030a 	subpl.w	r3, r3, sl
 80265b6:	b209      	sxth	r1, r1
 80265b8:	4290      	cmp	r0, r2
 80265ba:	8361      	strh	r1, [r4, #26]
 80265bc:	d0a3      	beq.n	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80265be:	ea5e 0201 	orrs.w	r2, lr, r1
 80265c2:	d00d      	beq.n	80265e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 80265c4:	9a00      	ldr	r2, [sp, #0]
 80265c6:	2a00      	cmp	r2, #0
 80265c8:	db0a      	blt.n	80265e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 80265ca:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80265cc:	428a      	cmp	r2, r1
 80265ce:	da07      	bge.n	80265e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 80265d0:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80265d4:	4288      	cmp	r0, r1
 80265d6:	d329      	bcc.n	802662c <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80265d8:	f04f 0201 	mov.w	r2, #1
 80265dc:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80265e0:	9a00      	ldr	r2, [sp, #0]
 80265e2:	f8a4 9014 	strh.w	r9, [r4, #20]
 80265e6:	45ab      	cmp	fp, r5
 80265e8:	82e2      	strh	r2, [r4, #22]
 80265ea:	f8a4 8018 	strh.w	r8, [r4, #24]
 80265ee:	f8a4 801a 	strh.w	r8, [r4, #26]
 80265f2:	d1c7      	bne.n	8026584 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80265f4:	9b03      	ldr	r3, [sp, #12]
 80265f6:	9a01      	ldr	r2, [sp, #4]
 80265f8:	1b9e      	subs	r6, r3, r6
 80265fa:	9b05      	ldr	r3, [sp, #20]
 80265fc:	8326      	strh	r6, [r4, #24]
 80265fe:	3320      	adds	r3, #32
 8026600:	1a9b      	subs	r3, r3, r2
 8026602:	435e      	muls	r6, r3
 8026604:	8366      	strh	r6, [r4, #26]
 8026606:	b015      	add	sp, #84	; 0x54
 8026608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802660c:	f104 0714 	add.w	r7, r4, #20
 8026610:	cf03      	ldmia	r7!, {r0, r1}
 8026612:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8026616:	f8c8 0000 	str.w	r0, [r8]
 802661a:	f8c8 1004 	str.w	r1, [r8, #4]
 802661e:	6921      	ldr	r1, [r4, #16]
 8026620:	3108      	adds	r1, #8
 8026622:	6121      	str	r1, [r4, #16]
 8026624:	68a1      	ldr	r1, [r4, #8]
 8026626:	3101      	adds	r1, #1
 8026628:	60a1      	str	r1, [r4, #8]
 802662a:	e78a      	b.n	8026542 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 802662c:	f104 0e14 	add.w	lr, r4, #20
 8026630:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 8026634:	6922      	ldr	r2, [r4, #16]
 8026636:	9206      	str	r2, [sp, #24]
 8026638:	6010      	str	r0, [r2, #0]
 802663a:	6051      	str	r1, [r2, #4]
 802663c:	6921      	ldr	r1, [r4, #16]
 802663e:	3108      	adds	r1, #8
 8026640:	6121      	str	r1, [r4, #16]
 8026642:	68a1      	ldr	r1, [r4, #8]
 8026644:	3101      	adds	r1, #1
 8026646:	60a1      	str	r1, [r4, #8]
 8026648:	e7ca      	b.n	80265e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 802664a:	eba0 0b02 	sub.w	fp, r0, r2
 802664e:	f1ba 0f00 	cmp.w	sl, #0
 8026652:	f040 80a1 	bne.w	8026798 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f8>
 8026656:	f1bb 0f00 	cmp.w	fp, #0
 802665a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802665e:	8b62      	ldrh	r2, [r4, #26]
 8026660:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 8026664:	f9b4 c014 	ldrsh.w	ip, [r4, #20]
 8026668:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 802666c:	bfa8      	it	ge
 802666e:	f04f 0a20 	movge.w	sl, #32
 8026672:	8b21      	ldrh	r1, [r4, #24]
 8026674:	ebaa 0606 	sub.w	r6, sl, r6
 8026678:	4431      	add	r1, r6
 802667a:	fb06 2603 	mla	r6, r6, r3, r2
 802667e:	9a00      	ldr	r2, [sp, #0]
 8026680:	bfb4      	ite	lt
 8026682:	f04f 39ff 	movlt.w	r9, #4294967295
 8026686:	f04f 0901 	movge.w	r9, #1
 802668a:	444a      	add	r2, r9
 802668c:	b22d      	sxth	r5, r5
 802668e:	b217      	sxth	r7, r2
 8026690:	eb0c 4c00 	add.w	ip, ip, r0, lsl #16
 8026694:	eb05 4e07 	add.w	lr, r5, r7, lsl #16
 8026698:	b209      	sxth	r1, r1
 802669a:	b236      	sxth	r6, r6
 802669c:	45f4      	cmp	ip, lr
 802669e:	8321      	strh	r1, [r4, #24]
 80266a0:	8366      	strh	r6, [r4, #26]
 80266a2:	f43f af30 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80266a6:	4331      	orrs	r1, r6
 80266a8:	d00b      	beq.n	80266c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80266aa:	2800      	cmp	r0, #0
 80266ac:	db09      	blt.n	80266c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80266ae:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80266b0:	4288      	cmp	r0, r1
 80266b2:	da06      	bge.n	80266c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80266b4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80266b8:	4288      	cmp	r0, r1
 80266ba:	d33b      	bcc.n	8026734 <_ZN8touchgfx7Outline10renderLineEiiii+0x394>
 80266bc:	2101      	movs	r1, #1
 80266be:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80266c2:	f1aa 0610 	sub.w	r6, sl, #16
 80266c6:	0076      	lsls	r6, r6, #1
 80266c8:	fb06 fc03 	mul.w	ip, r6, r3
 80266cc:	fa0f fc8c 	sxth.w	ip, ip
 80266d0:	b236      	sxth	r6, r6
 80266d2:	82e7      	strh	r7, [r4, #22]
 80266d4:	ea46 010c 	orr.w	r1, r6, ip
 80266d8:	2700      	movs	r7, #0
 80266da:	82a5      	strh	r5, [r4, #20]
 80266dc:	8327      	strh	r7, [r4, #24]
 80266de:	8367      	strh	r7, [r4, #26]
 80266e0:	9100      	str	r1, [sp, #0]
 80266e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80266e4:	428a      	cmp	r2, r1
 80266e6:	d046      	beq.n	8026776 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d6>
 80266e8:	444a      	add	r2, r9
 80266ea:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 80266ee:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80266f2:	8326      	strh	r6, [r4, #24]
 80266f4:	fa0f f882 	sxth.w	r8, r2
 80266f8:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 80266fc:	eb05 4e08 	add.w	lr, r5, r8, lsl #16
 8026700:	4570      	cmp	r0, lr
 8026702:	f8a4 c01a 	strh.w	ip, [r4, #26]
 8026706:	f43f aefe 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 802670a:	9800      	ldr	r0, [sp, #0]
 802670c:	b160      	cbz	r0, 8026728 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 802670e:	2900      	cmp	r1, #0
 8026710:	db0a      	blt.n	8026728 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8026712:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8026714:	4281      	cmp	r1, r0
 8026716:	da07      	bge.n	8026728 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8026718:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802671c:	4288      	cmp	r0, r1
 802671e:	d319      	bcc.n	8026754 <_ZN8touchgfx7Outline10renderLineEiiii+0x3b4>
 8026720:	f04f 0101 	mov.w	r1, #1
 8026724:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8026728:	82a5      	strh	r5, [r4, #20]
 802672a:	f8a4 8016 	strh.w	r8, [r4, #22]
 802672e:	8327      	strh	r7, [r4, #24]
 8026730:	8367      	strh	r7, [r4, #26]
 8026732:	e7d6      	b.n	80266e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x342>
 8026734:	f104 0614 	add.w	r6, r4, #20
 8026738:	ce03      	ldmia	r6!, {r0, r1}
 802673a:	f8d4 c010 	ldr.w	ip, [r4, #16]
 802673e:	f8cc 0000 	str.w	r0, [ip]
 8026742:	f8cc 1004 	str.w	r1, [ip, #4]
 8026746:	6921      	ldr	r1, [r4, #16]
 8026748:	3108      	adds	r1, #8
 802674a:	6121      	str	r1, [r4, #16]
 802674c:	68a1      	ldr	r1, [r4, #8]
 802674e:	3101      	adds	r1, #1
 8026750:	60a1      	str	r1, [r4, #8]
 8026752:	e7b6      	b.n	80266c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 8026754:	f104 0e14 	add.w	lr, r4, #20
 8026758:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 802675c:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8026760:	f8cb 0000 	str.w	r0, [fp]
 8026764:	f8cb 1004 	str.w	r1, [fp, #4]
 8026768:	6921      	ldr	r1, [r4, #16]
 802676a:	3108      	adds	r1, #8
 802676c:	6121      	str	r1, [r4, #16]
 802676e:	68a1      	ldr	r1, [r4, #8]
 8026770:	3101      	adds	r1, #1
 8026772:	60a1      	str	r1, [r4, #8]
 8026774:	e7d8      	b.n	8026728 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8026776:	9a03      	ldr	r2, [sp, #12]
 8026778:	8b61      	ldrh	r1, [r4, #26]
 802677a:	f1a2 0e20 	sub.w	lr, r2, #32
 802677e:	8b22      	ldrh	r2, [r4, #24]
 8026780:	44d6      	add	lr, sl
 8026782:	4472      	add	r2, lr
 8026784:	8322      	strh	r2, [r4, #24]
 8026786:	fb0e 1303 	mla	r3, lr, r3, r1
 802678a:	e687      	b.n	802649c <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 802678c:	0802e2af 	.word	0x0802e2af
 8026790:	0802e330 	.word	0x0802e330
 8026794:	0802e2e0 	.word	0x0802e2e0
 8026798:	f1bb 0f00 	cmp.w	fp, #0
 802679c:	f2c0 8124 	blt.w	80269e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x648>
 80267a0:	2201      	movs	r2, #1
 80267a2:	f1c6 0320 	rsb	r3, r6, #32
 80267a6:	920b      	str	r2, [sp, #44]	; 0x2c
 80267a8:	fb0a f303 	mul.w	r3, sl, r3
 80267ac:	2220      	movs	r2, #32
 80267ae:	fb93 fcfb 	sdiv	ip, r3, fp
 80267b2:	fb0b 331c 	mls	r3, fp, ip, r3
 80267b6:	2b00      	cmp	r3, #0
 80267b8:	9308      	str	r3, [sp, #32]
 80267ba:	bfbe      	ittt	lt
 80267bc:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80267c0:	445b      	addlt	r3, fp
 80267c2:	9308      	strlt	r3, [sp, #32]
 80267c4:	eb0c 0301 	add.w	r3, ip, r1
 80267c8:	9301      	str	r3, [sp, #4]
 80267ca:	115b      	asrs	r3, r3, #5
 80267cc:	9305      	str	r3, [sp, #20]
 80267ce:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 80267d2:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80267d6:	9202      	str	r2, [sp, #8]
 80267d8:	eb03 4308 	add.w	r3, r3, r8, lsl #16
 80267dc:	461f      	mov	r7, r3
 80267de:	9b02      	ldr	r3, [sp, #8]
 80267e0:	42b3      	cmp	r3, r6
 80267e2:	f040 8117 	bne.w	8026a14 <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 80267e6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80267ea:	f9bd 3000 	ldrsh.w	r3, [sp]
 80267ee:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 80267f2:	42b9      	cmp	r1, r7
 80267f4:	d016      	beq.n	8026824 <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 80267f6:	8b60      	ldrh	r0, [r4, #26]
 80267f8:	8b21      	ldrh	r1, [r4, #24]
 80267fa:	4301      	orrs	r1, r0
 80267fc:	d00d      	beq.n	802681a <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 80267fe:	f1b8 0f00 	cmp.w	r8, #0
 8026802:	db0a      	blt.n	802681a <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8026804:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026806:	4541      	cmp	r1, r8
 8026808:	dd07      	ble.n	802681a <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802680a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802680e:	4288      	cmp	r0, r1
 8026810:	f0c0 80f3 	bcc.w	80269fa <_ZN8touchgfx7Outline10renderLineEiiii+0x65a>
 8026814:	2101      	movs	r1, #1
 8026816:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802681a:	82e3      	strh	r3, [r4, #22]
 802681c:	2300      	movs	r3, #0
 802681e:	82a2      	strh	r2, [r4, #20]
 8026820:	8323      	strh	r3, [r4, #24]
 8026822:	8363      	strh	r3, [r4, #26]
 8026824:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026826:	9a00      	ldr	r2, [sp, #0]
 8026828:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802682c:	441a      	add	r2, r3
 802682e:	4691      	mov	r9, r2
 8026830:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8026834:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 8026838:	fa0f f589 	sxth.w	r5, r9
 802683c:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 8026840:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 8026844:	4281      	cmp	r1, r0
 8026846:	d015      	beq.n	8026874 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d4>
 8026848:	8b60      	ldrh	r0, [r4, #26]
 802684a:	8b21      	ldrh	r1, [r4, #24]
 802684c:	4301      	orrs	r1, r0
 802684e:	d00c      	beq.n	802686a <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8026850:	2a00      	cmp	r2, #0
 8026852:	db0a      	blt.n	802686a <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8026854:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026856:	428a      	cmp	r2, r1
 8026858:	da07      	bge.n	802686a <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 802685a:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 802685e:	4291      	cmp	r1, r2
 8026860:	f0c0 81b4 	bcc.w	8026bcc <_ZN8touchgfx7Outline10renderLineEiiii+0x82c>
 8026864:	2201      	movs	r2, #1
 8026866:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802686a:	82a3      	strh	r3, [r4, #20]
 802686c:	2300      	movs	r3, #0
 802686e:	82e5      	strh	r5, [r4, #22]
 8026870:	8323      	strh	r3, [r4, #24]
 8026872:	8363      	strh	r3, [r4, #26]
 8026874:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026876:	454b      	cmp	r3, r9
 8026878:	f000 808a 	beq.w	8026990 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 802687c:	ea4f 134a 	mov.w	r3, sl, lsl #5
 8026880:	fb93 f2fb 	sdiv	r2, r3, fp
 8026884:	fb0b 3312 	mls	r3, fp, r2, r3
 8026888:	2b00      	cmp	r3, #0
 802688a:	9205      	str	r2, [sp, #20]
 802688c:	9307      	str	r3, [sp, #28]
 802688e:	da04      	bge.n	802689a <_ZN8touchgfx7Outline10renderLineEiiii+0x4fa>
 8026890:	1e53      	subs	r3, r2, #1
 8026892:	9305      	str	r3, [sp, #20]
 8026894:	9b07      	ldr	r3, [sp, #28]
 8026896:	445b      	add	r3, fp
 8026898:	9307      	str	r3, [sp, #28]
 802689a:	9b08      	ldr	r3, [sp, #32]
 802689c:	eba3 030b 	sub.w	r3, r3, fp
 80268a0:	9308      	str	r3, [sp, #32]
 80268a2:	e9dd c301 	ldrd	ip, r3, [sp, #4]
 80268a6:	f1c3 0320 	rsb	r3, r3, #32
 80268aa:	930a      	str	r3, [sp, #40]	; 0x28
 80268ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80268ae:	9b02      	ldr	r3, [sp, #8]
 80268b0:	1a9b      	subs	r3, r3, r2
 80268b2:	9309      	str	r3, [sp, #36]	; 0x24
 80268b4:	f04f 0a00 	mov.w	sl, #0
 80268b8:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80268bc:	189b      	adds	r3, r3, r2
 80268be:	9308      	str	r3, [sp, #32]
 80268c0:	bf5d      	ittte	pl
 80268c2:	eba3 030b 	subpl.w	r3, r3, fp
 80268c6:	9308      	strpl	r3, [sp, #32]
 80268c8:	9b05      	ldrpl	r3, [sp, #20]
 80268ca:	9b05      	ldrmi	r3, [sp, #20]
 80268cc:	9902      	ldr	r1, [sp, #8]
 80268ce:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 80268d2:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 80268d6:	bf58      	it	pl
 80268d8:	3301      	addpl	r3, #1
 80268da:	9300      	str	r3, [sp, #0]
 80268dc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80268e0:	4413      	add	r3, r2
 80268e2:	9301      	str	r3, [sp, #4]
 80268e4:	115b      	asrs	r3, r3, #5
 80268e6:	9306      	str	r3, [sp, #24]
 80268e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80268ea:	428b      	cmp	r3, r1
 80268ec:	eb08 4806 	add.w	r8, r8, r6, lsl #16
 80268f0:	f040 8186 	bne.w	8026c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x860>
 80268f4:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80268f8:	fa0f f389 	sxth.w	r3, r9
 80268fc:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 8026900:	4541      	cmp	r1, r8
 8026902:	d017      	beq.n	8026934 <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 8026904:	8b60      	ldrh	r0, [r4, #26]
 8026906:	8b21      	ldrh	r1, [r4, #24]
 8026908:	4301      	orrs	r1, r0
 802690a:	d00d      	beq.n	8026928 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 802690c:	2e00      	cmp	r6, #0
 802690e:	db0b      	blt.n	8026928 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8026910:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026912:	42b1      	cmp	r1, r6
 8026914:	dd08      	ble.n	8026928 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8026916:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802691a:	4288      	cmp	r0, r1
 802691c:	f0c0 8163 	bcc.w	8026be6 <_ZN8touchgfx7Outline10renderLineEiiii+0x846>
 8026920:	f04f 0101 	mov.w	r1, #1
 8026924:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8026928:	82a2      	strh	r2, [r4, #20]
 802692a:	82e3      	strh	r3, [r4, #22]
 802692c:	f8a4 a018 	strh.w	sl, [r4, #24]
 8026930:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8026934:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026936:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 802693a:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802693e:	4499      	add	r9, r3
 8026940:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026944:	fa0f f589 	sxth.w	r5, r9
 8026948:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 802694c:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 8026950:	4281      	cmp	r1, r0
 8026952:	f43f add8 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026956:	8b60      	ldrh	r0, [r4, #26]
 8026958:	8b21      	ldrh	r1, [r4, #24]
 802695a:	4301      	orrs	r1, r0
 802695c:	d00d      	beq.n	802697a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 802695e:	2a00      	cmp	r2, #0
 8026960:	db0b      	blt.n	802697a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8026962:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026964:	428a      	cmp	r2, r1
 8026966:	da08      	bge.n	802697a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8026968:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 802696c:	4291      	cmp	r1, r2
 802696e:	f0c0 8230 	bcc.w	8026dd2 <_ZN8touchgfx7Outline10renderLineEiiii+0xa32>
 8026972:	f04f 0201 	mov.w	r2, #1
 8026976:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802697a:	82a3      	strh	r3, [r4, #20]
 802697c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802697e:	82e5      	strh	r5, [r4, #22]
 8026980:	454b      	cmp	r3, r9
 8026982:	f8a4 a018 	strh.w	sl, [r4, #24]
 8026986:	f8a4 a01a 	strh.w	sl, [r4, #26]
 802698a:	f8dd c004 	ldr.w	ip, [sp, #4]
 802698e:	d193      	bne.n	80268b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x518>
 8026990:	9b02      	ldr	r3, [sp, #8]
 8026992:	f1c3 0e20 	rsb	lr, r3, #32
 8026996:	9b04      	ldr	r3, [sp, #16]
 8026998:	ea4f 1b63 	mov.w	fp, r3, asr #5
 802699c:	9b03      	ldr	r3, [sp, #12]
 802699e:	459e      	cmp	lr, r3
 80269a0:	f040 8231 	bne.w	8026e06 <_ZN8touchgfx7Outline10renderLineEiiii+0xa66>
 80269a4:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80269a8:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 80269ac:	fa0f f58b 	sxth.w	r5, fp
 80269b0:	fa0f f289 	sxth.w	r2, r9
 80269b4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80269b8:	eb05 4002 	add.w	r0, r5, r2, lsl #16
 80269bc:	4281      	cmp	r1, r0
 80269be:	f43f ae22 	beq.w	8026606 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 80269c2:	8b60      	ldrh	r0, [r4, #26]
 80269c4:	8b21      	ldrh	r1, [r4, #24]
 80269c6:	4301      	orrs	r1, r0
 80269c8:	d00c      	beq.n	80269e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 80269ca:	2b00      	cmp	r3, #0
 80269cc:	db0a      	blt.n	80269e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 80269ce:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80269d0:	428b      	cmp	r3, r1
 80269d2:	da07      	bge.n	80269e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 80269d4:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 80269d8:	4299      	cmp	r1, r3
 80269da:	f0c0 8207 	bcc.w	8026dec <_ZN8touchgfx7Outline10renderLineEiiii+0xa4c>
 80269de:	2301      	movs	r3, #1
 80269e0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80269e4:	82a5      	strh	r5, [r4, #20]
 80269e6:	e535      	b.n	8026454 <_ZN8touchgfx7Outline10renderLineEiiii+0xb4>
 80269e8:	f04f 32ff 	mov.w	r2, #4294967295
 80269ec:	920b      	str	r2, [sp, #44]	; 0x2c
 80269ee:	fb0a f306 	mul.w	r3, sl, r6
 80269f2:	f1cb 0b00 	rsb	fp, fp, #0
 80269f6:	2200      	movs	r2, #0
 80269f8:	e6d9      	b.n	80267ae <_ZN8touchgfx7Outline10renderLineEiiii+0x40e>
 80269fa:	f104 0514 	add.w	r5, r4, #20
 80269fe:	cd03      	ldmia	r5!, {r0, r1}
 8026a00:	6926      	ldr	r6, [r4, #16]
 8026a02:	6030      	str	r0, [r6, #0]
 8026a04:	6071      	str	r1, [r6, #4]
 8026a06:	6921      	ldr	r1, [r4, #16]
 8026a08:	3108      	adds	r1, #8
 8026a0a:	6121      	str	r1, [r4, #16]
 8026a0c:	68a1      	ldr	r1, [r4, #8]
 8026a0e:	3101      	adds	r1, #1
 8026a10:	60a1      	str	r1, [r4, #8]
 8026a12:	e702      	b.n	802681a <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8026a14:	9b01      	ldr	r3, [sp, #4]
 8026a16:	8b20      	ldrh	r0, [r4, #24]
 8026a18:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 8026a1c:	f003 031f 	and.w	r3, r3, #31
 8026a20:	930d      	str	r3, [sp, #52]	; 0x34
 8026a22:	9b02      	ldr	r3, [sp, #8]
 8026a24:	1b9a      	subs	r2, r3, r6
 8026a26:	9b05      	ldr	r3, [sp, #20]
 8026a28:	42ab      	cmp	r3, r5
 8026a2a:	f001 011f 	and.w	r1, r1, #31
 8026a2e:	d107      	bne.n	8026a40 <_ZN8touchgfx7Outline10renderLineEiiii+0x6a0>
 8026a30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a32:	4419      	add	r1, r3
 8026a34:	4410      	add	r0, r2
 8026a36:	fb02 9201 	mla	r2, r2, r1, r9
 8026a3a:	8320      	strh	r0, [r4, #24]
 8026a3c:	8362      	strh	r2, [r4, #26]
 8026a3e:	e6f1      	b.n	8026824 <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 8026a40:	f1bc 0f00 	cmp.w	ip, #0
 8026a44:	f2c0 8099 	blt.w	8026b7a <_ZN8touchgfx7Outline10renderLineEiiii+0x7da>
 8026a48:	f1c1 0320 	rsb	r3, r1, #32
 8026a4c:	435a      	muls	r2, r3
 8026a4e:	2301      	movs	r3, #1
 8026a50:	9309      	str	r3, [sp, #36]	; 0x24
 8026a52:	2320      	movs	r3, #32
 8026a54:	9307      	str	r3, [sp, #28]
 8026a56:	fb92 fefc 	sdiv	lr, r2, ip
 8026a5a:	9b07      	ldr	r3, [sp, #28]
 8026a5c:	fb0c 221e 	mls	r2, ip, lr, r2
 8026a60:	2a00      	cmp	r2, #0
 8026a62:	bfb8      	it	lt
 8026a64:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8026a68:	4419      	add	r1, r3
 8026a6a:	fb0e 9101 	mla	r1, lr, r1, r9
 8026a6e:	b20b      	sxth	r3, r1
 8026a70:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026a72:	8363      	strh	r3, [r4, #26]
 8026a74:	440d      	add	r5, r1
 8026a76:	f9bd 1000 	ldrsh.w	r1, [sp]
 8026a7a:	9106      	str	r1, [sp, #24]
 8026a7c:	fa0f f985 	sxth.w	r9, r5
 8026a80:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8026a84:	4470      	add	r0, lr
 8026a86:	910a      	str	r1, [sp, #40]	; 0x28
 8026a88:	4449      	add	r1, r9
 8026a8a:	bfb8      	it	lt
 8026a8c:	4462      	addlt	r2, ip
 8026a8e:	b200      	sxth	r0, r0
 8026a90:	42b9      	cmp	r1, r7
 8026a92:	8320      	strh	r0, [r4, #24]
 8026a94:	f43f ad37 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026a98:	4303      	orrs	r3, r0
 8026a9a:	d00c      	beq.n	8026ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 8026a9c:	f1b8 0f00 	cmp.w	r8, #0
 8026aa0:	db09      	blt.n	8026ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 8026aa2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026aa4:	4543      	cmp	r3, r8
 8026aa6:	dd06      	ble.n	8026ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 8026aa8:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8026aac:	4299      	cmp	r1, r3
 8026aae:	d36c      	bcc.n	8026b8a <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 8026ab0:	2301      	movs	r3, #1
 8026ab2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8026ab6:	9b06      	ldr	r3, [sp, #24]
 8026ab8:	82e3      	strh	r3, [r4, #22]
 8026aba:	2300      	movs	r3, #0
 8026abc:	8323      	strh	r3, [r4, #24]
 8026abe:	8363      	strh	r3, [r4, #26]
 8026ac0:	9b05      	ldr	r3, [sp, #20]
 8026ac2:	f8a4 9014 	strh.w	r9, [r4, #20]
 8026ac6:	42ab      	cmp	r3, r5
 8026ac8:	4476      	add	r6, lr
 8026aca:	d04c      	beq.n	8026b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x7c6>
 8026acc:	9b02      	ldr	r3, [sp, #8]
 8026ace:	1b9b      	subs	r3, r3, r6
 8026ad0:	4473      	add	r3, lr
 8026ad2:	015b      	lsls	r3, r3, #5
 8026ad4:	fb93 f8fc 	sdiv	r8, r3, ip
 8026ad8:	fb0c 3318 	mls	r3, ip, r8, r3
 8026adc:	2b00      	cmp	r3, #0
 8026ade:	bfb8      	it	lt
 8026ae0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8026ae4:	f108 0101 	add.w	r1, r8, #1
 8026ae8:	bfb8      	it	lt
 8026aea:	4463      	addlt	r3, ip
 8026aec:	eba2 020c 	sub.w	r2, r2, ip
 8026af0:	910f      	str	r1, [sp, #60]	; 0x3c
 8026af2:	18d2      	adds	r2, r2, r3
 8026af4:	bf58      	it	pl
 8026af6:	980f      	ldrpl	r0, [sp, #60]	; 0x3c
 8026af8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8026afa:	bf48      	it	mi
 8026afc:	4640      	movmi	r0, r8
 8026afe:	fa0f fe80 	sxth.w	lr, r0
 8026b02:	ea4f 1140 	mov.w	r1, r0, lsl #5
 8026b06:	4406      	add	r6, r0
 8026b08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026b0a:	f8a4 e018 	strh.w	lr, [r4, #24]
 8026b0e:	4405      	add	r5, r0
 8026b10:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8026b14:	fa0f f985 	sxth.w	r9, r5
 8026b18:	4438      	add	r0, r7
 8026b1a:	444f      	add	r7, r9
 8026b1c:	bf58      	it	pl
 8026b1e:	eba2 020c 	subpl.w	r2, r2, ip
 8026b22:	b209      	sxth	r1, r1
 8026b24:	42b8      	cmp	r0, r7
 8026b26:	8361      	strh	r1, [r4, #26]
 8026b28:	f43f aced 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026b2c:	ea5e 0101 	orrs.w	r1, lr, r1
 8026b30:	d00e      	beq.n	8026b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8026b32:	9906      	ldr	r1, [sp, #24]
 8026b34:	2900      	cmp	r1, #0
 8026b36:	db0b      	blt.n	8026b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8026b38:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026b3a:	9806      	ldr	r0, [sp, #24]
 8026b3c:	4288      	cmp	r0, r1
 8026b3e:	da07      	bge.n	8026b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8026b40:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8026b44:	4288      	cmp	r0, r1
 8026b46:	d330      	bcc.n	8026baa <_ZN8touchgfx7Outline10renderLineEiiii+0x80a>
 8026b48:	f04f 0101 	mov.w	r1, #1
 8026b4c:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8026b50:	9906      	ldr	r1, [sp, #24]
 8026b52:	82e1      	strh	r1, [r4, #22]
 8026b54:	f04f 0100 	mov.w	r1, #0
 8026b58:	8321      	strh	r1, [r4, #24]
 8026b5a:	8361      	strh	r1, [r4, #26]
 8026b5c:	9905      	ldr	r1, [sp, #20]
 8026b5e:	f8a4 9014 	strh.w	r9, [r4, #20]
 8026b62:	42a9      	cmp	r1, r5
 8026b64:	d1c5      	bne.n	8026af2 <_ZN8touchgfx7Outline10renderLineEiiii+0x752>
 8026b66:	9b02      	ldr	r3, [sp, #8]
 8026b68:	990d      	ldr	r1, [sp, #52]	; 0x34
 8026b6a:	1b9e      	subs	r6, r3, r6
 8026b6c:	9b07      	ldr	r3, [sp, #28]
 8026b6e:	8326      	strh	r6, [r4, #24]
 8026b70:	3120      	adds	r1, #32
 8026b72:	1ac9      	subs	r1, r1, r3
 8026b74:	434e      	muls	r6, r1
 8026b76:	8366      	strh	r6, [r4, #26]
 8026b78:	e654      	b.n	8026824 <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 8026b7a:	f04f 33ff 	mov.w	r3, #4294967295
 8026b7e:	9309      	str	r3, [sp, #36]	; 0x24
 8026b80:	434a      	muls	r2, r1
 8026b82:	f1cc 0c00 	rsb	ip, ip, #0
 8026b86:	2300      	movs	r3, #0
 8026b88:	e764      	b.n	8026a54 <_ZN8touchgfx7Outline10renderLineEiiii+0x6b4>
 8026b8a:	f104 0314 	add.w	r3, r4, #20
 8026b8e:	cb03      	ldmia	r3!, {r0, r1}
 8026b90:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8026b94:	f8c8 0000 	str.w	r0, [r8]
 8026b98:	f8c8 1004 	str.w	r1, [r8, #4]
 8026b9c:	6923      	ldr	r3, [r4, #16]
 8026b9e:	3308      	adds	r3, #8
 8026ba0:	6123      	str	r3, [r4, #16]
 8026ba2:	68a3      	ldr	r3, [r4, #8]
 8026ba4:	3301      	adds	r3, #1
 8026ba6:	60a3      	str	r3, [r4, #8]
 8026ba8:	e785      	b.n	8026ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 8026baa:	6921      	ldr	r1, [r4, #16]
 8026bac:	910e      	str	r1, [sp, #56]	; 0x38
 8026bae:	f104 0e14 	add.w	lr, r4, #20
 8026bb2:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 8026bb6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8026bb8:	6038      	str	r0, [r7, #0]
 8026bba:	6079      	str	r1, [r7, #4]
 8026bbc:	6921      	ldr	r1, [r4, #16]
 8026bbe:	3108      	adds	r1, #8
 8026bc0:	6121      	str	r1, [r4, #16]
 8026bc2:	68a1      	ldr	r1, [r4, #8]
 8026bc4:	3101      	adds	r1, #1
 8026bc6:	4638      	mov	r0, r7
 8026bc8:	60a1      	str	r1, [r4, #8]
 8026bca:	e7c1      	b.n	8026b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8026bcc:	f104 0214 	add.w	r2, r4, #20
 8026bd0:	ca03      	ldmia	r2!, {r0, r1}
 8026bd2:	6926      	ldr	r6, [r4, #16]
 8026bd4:	6030      	str	r0, [r6, #0]
 8026bd6:	6071      	str	r1, [r6, #4]
 8026bd8:	6922      	ldr	r2, [r4, #16]
 8026bda:	3208      	adds	r2, #8
 8026bdc:	6122      	str	r2, [r4, #16]
 8026bde:	68a2      	ldr	r2, [r4, #8]
 8026be0:	3201      	adds	r2, #1
 8026be2:	60a2      	str	r2, [r4, #8]
 8026be4:	e641      	b.n	802686a <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8026be6:	f104 0514 	add.w	r5, r4, #20
 8026bea:	cd03      	ldmia	r5!, {r0, r1}
 8026bec:	6926      	ldr	r6, [r4, #16]
 8026bee:	6030      	str	r0, [r6, #0]
 8026bf0:	6071      	str	r1, [r6, #4]
 8026bf2:	6921      	ldr	r1, [r4, #16]
 8026bf4:	3108      	adds	r1, #8
 8026bf6:	6121      	str	r1, [r4, #16]
 8026bf8:	68a1      	ldr	r1, [r4, #8]
 8026bfa:	3101      	adds	r1, #1
 8026bfc:	60a1      	str	r1, [r4, #8]
 8026bfe:	e693      	b.n	8026928 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8026c00:	9b01      	ldr	r3, [sp, #4]
 8026c02:	8b20      	ldrh	r0, [r4, #24]
 8026c04:	f8b4 e01a 	ldrh.w	lr, [r4, #26]
 8026c08:	f003 031f 	and.w	r3, r3, #31
 8026c0c:	9310      	str	r3, [sp, #64]	; 0x40
 8026c0e:	9b06      	ldr	r3, [sp, #24]
 8026c10:	ea4f 176c 	mov.w	r7, ip, asr #5
 8026c14:	429f      	cmp	r7, r3
 8026c16:	f00c 0c1f 	and.w	ip, ip, #31
 8026c1a:	d10a      	bne.n	8026c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x892>
 8026c1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c1e:	4418      	add	r0, r3
 8026c20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026c22:	8320      	strh	r0, [r4, #24]
 8026c24:	449c      	add	ip, r3
 8026c26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c28:	fb03 ee0c 	mla	lr, r3, ip, lr
 8026c2c:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8026c30:	e680      	b.n	8026934 <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 8026c32:	9b00      	ldr	r3, [sp, #0]
 8026c34:	2b00      	cmp	r3, #0
 8026c36:	f2c0 80a2 	blt.w	8026d7e <_ZN8touchgfx7Outline10renderLineEiiii+0x9de>
 8026c3a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026c3c:	f1cc 0320 	rsb	r3, ip, #32
 8026c40:	434b      	muls	r3, r1
 8026c42:	2101      	movs	r1, #1
 8026c44:	910e      	str	r1, [sp, #56]	; 0x38
 8026c46:	2120      	movs	r1, #32
 8026c48:	9a00      	ldr	r2, [sp, #0]
 8026c4a:	910d      	str	r1, [sp, #52]	; 0x34
 8026c4c:	fb93 f5f2 	sdiv	r5, r3, r2
 8026c50:	990d      	ldr	r1, [sp, #52]	; 0x34
 8026c52:	fb02 3315 	mls	r3, r2, r5, r3
 8026c56:	2b00      	cmp	r3, #0
 8026c58:	bfbc      	itt	lt
 8026c5a:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8026c5e:	189b      	addlt	r3, r3, r2
 8026c60:	448c      	add	ip, r1
 8026c62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026c64:	fb05 ec0c 	mla	ip, r5, ip, lr
 8026c68:	fa0f f18c 	sxth.w	r1, ip
 8026c6c:	4417      	add	r7, r2
 8026c6e:	fa0f fc89 	sxth.w	ip, r9
 8026c72:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8026c76:	fa0f fe87 	sxth.w	lr, r7
 8026c7a:	4428      	add	r0, r5
 8026c7c:	920f      	str	r2, [sp, #60]	; 0x3c
 8026c7e:	4472      	add	r2, lr
 8026c80:	b200      	sxth	r0, r0
 8026c82:	4542      	cmp	r2, r8
 8026c84:	8320      	strh	r0, [r4, #24]
 8026c86:	8361      	strh	r1, [r4, #26]
 8026c88:	f43f ac3d 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026c8c:	ea50 0201 	orrs.w	r2, r0, r1
 8026c90:	d00c      	beq.n	8026cac <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8026c92:	2e00      	cmp	r6, #0
 8026c94:	db0a      	blt.n	8026cac <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8026c96:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026c98:	42b1      	cmp	r1, r6
 8026c9a:	dd07      	ble.n	8026cac <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8026c9c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8026ca0:	4288      	cmp	r0, r1
 8026ca2:	d377      	bcc.n	8026d94 <_ZN8touchgfx7Outline10renderLineEiiii+0x9f4>
 8026ca4:	f04f 0201 	mov.w	r2, #1
 8026ca8:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8026cac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026cae:	f8a4 e014 	strh.w	lr, [r4, #20]
 8026cb2:	1956      	adds	r6, r2, r5
 8026cb4:	9a06      	ldr	r2, [sp, #24]
 8026cb6:	f8a4 c016 	strh.w	ip, [r4, #22]
 8026cba:	42ba      	cmp	r2, r7
 8026cbc:	f8a4 a018 	strh.w	sl, [r4, #24]
 8026cc0:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8026cc4:	d04e      	beq.n	8026d64 <_ZN8touchgfx7Outline10renderLineEiiii+0x9c4>
 8026cc6:	9a02      	ldr	r2, [sp, #8]
 8026cc8:	1b91      	subs	r1, r2, r6
 8026cca:	440d      	add	r5, r1
 8026ccc:	9a00      	ldr	r2, [sp, #0]
 8026cce:	016d      	lsls	r5, r5, #5
 8026cd0:	fb95 fef2 	sdiv	lr, r5, r2
 8026cd4:	fb02 551e 	mls	r5, r2, lr, r5
 8026cd8:	2d00      	cmp	r5, #0
 8026cda:	bfb8      	it	lt
 8026cdc:	18ad      	addlt	r5, r5, r2
 8026cde:	9a00      	ldr	r2, [sp, #0]
 8026ce0:	bfb8      	it	lt
 8026ce2:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8026ce6:	1a9b      	subs	r3, r3, r2
 8026ce8:	f10e 0201 	add.w	r2, lr, #1
 8026cec:	9213      	str	r2, [sp, #76]	; 0x4c
 8026cee:	195b      	adds	r3, r3, r5
 8026cf0:	bf5e      	ittt	pl
 8026cf2:	9a00      	ldrpl	r2, [sp, #0]
 8026cf4:	9813      	ldrpl	r0, [sp, #76]	; 0x4c
 8026cf6:	1a9b      	subpl	r3, r3, r2
 8026cf8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026cfa:	4417      	add	r7, r2
 8026cfc:	bf48      	it	mi
 8026cfe:	4670      	movmi	r0, lr
 8026d00:	b23a      	sxth	r2, r7
 8026d02:	fa0f f880 	sxth.w	r8, r0
 8026d06:	0141      	lsls	r1, r0, #5
 8026d08:	9211      	str	r2, [sp, #68]	; 0x44
 8026d0a:	4406      	add	r6, r0
 8026d0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026d0e:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8026d12:	f8a4 8018 	strh.w	r8, [r4, #24]
 8026d16:	1882      	adds	r2, r0, r2
 8026d18:	9212      	str	r2, [sp, #72]	; 0x48
 8026d1a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8026d1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026d1e:	4402      	add	r2, r0
 8026d20:	9812      	ldr	r0, [sp, #72]	; 0x48
 8026d22:	b209      	sxth	r1, r1
 8026d24:	4290      	cmp	r0, r2
 8026d26:	8361      	strh	r1, [r4, #26]
 8026d28:	f43f abed 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026d2c:	ea58 0201 	orrs.w	r2, r8, r1
 8026d30:	d00d      	beq.n	8026d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8026d32:	f1bc 0f00 	cmp.w	ip, #0
 8026d36:	db0a      	blt.n	8026d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8026d38:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026d3a:	458c      	cmp	ip, r1
 8026d3c:	da07      	bge.n	8026d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8026d3e:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8026d42:	4288      	cmp	r0, r1
 8026d44:	d336      	bcc.n	8026db4 <_ZN8touchgfx7Outline10renderLineEiiii+0xa14>
 8026d46:	f04f 0201 	mov.w	r2, #1
 8026d4a:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8026d4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026d50:	82a2      	strh	r2, [r4, #20]
 8026d52:	9a06      	ldr	r2, [sp, #24]
 8026d54:	f8a4 c016 	strh.w	ip, [r4, #22]
 8026d58:	42ba      	cmp	r2, r7
 8026d5a:	f8a4 a018 	strh.w	sl, [r4, #24]
 8026d5e:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8026d62:	d1c4      	bne.n	8026cee <_ZN8touchgfx7Outline10renderLineEiiii+0x94e>
 8026d64:	9b02      	ldr	r3, [sp, #8]
 8026d66:	1b9e      	subs	r6, r3, r6
 8026d68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026d6a:	8326      	strh	r6, [r4, #24]
 8026d6c:	f103 0c20 	add.w	ip, r3, #32
 8026d70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026d72:	ebac 0c03 	sub.w	ip, ip, r3
 8026d76:	fb06 f60c 	mul.w	r6, r6, ip
 8026d7a:	8366      	strh	r6, [r4, #26]
 8026d7c:	e5da      	b.n	8026934 <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 8026d7e:	9a00      	ldr	r2, [sp, #0]
 8026d80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d82:	f04f 31ff 	mov.w	r1, #4294967295
 8026d86:	4252      	negs	r2, r2
 8026d88:	910e      	str	r1, [sp, #56]	; 0x38
 8026d8a:	fb03 f30c 	mul.w	r3, r3, ip
 8026d8e:	9200      	str	r2, [sp, #0]
 8026d90:	2100      	movs	r1, #0
 8026d92:	e759      	b.n	8026c48 <_ZN8touchgfx7Outline10renderLineEiiii+0x8a8>
 8026d94:	f104 0614 	add.w	r6, r4, #20
 8026d98:	ce03      	ldmia	r6!, {r0, r1}
 8026d9a:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8026d9e:	f8c8 0000 	str.w	r0, [r8]
 8026da2:	f8c8 1004 	str.w	r1, [r8, #4]
 8026da6:	6921      	ldr	r1, [r4, #16]
 8026da8:	3108      	adds	r1, #8
 8026daa:	6121      	str	r1, [r4, #16]
 8026dac:	68a1      	ldr	r1, [r4, #8]
 8026dae:	3101      	adds	r1, #1
 8026db0:	60a1      	str	r1, [r4, #8]
 8026db2:	e77b      	b.n	8026cac <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8026db4:	f104 0814 	add.w	r8, r4, #20
 8026db8:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8026dbc:	6922      	ldr	r2, [r4, #16]
 8026dbe:	9212      	str	r2, [sp, #72]	; 0x48
 8026dc0:	6010      	str	r0, [r2, #0]
 8026dc2:	6051      	str	r1, [r2, #4]
 8026dc4:	6921      	ldr	r1, [r4, #16]
 8026dc6:	3108      	adds	r1, #8
 8026dc8:	6121      	str	r1, [r4, #16]
 8026dca:	68a1      	ldr	r1, [r4, #8]
 8026dcc:	3101      	adds	r1, #1
 8026dce:	60a1      	str	r1, [r4, #8]
 8026dd0:	e7bd      	b.n	8026d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8026dd2:	f104 0214 	add.w	r2, r4, #20
 8026dd6:	ca03      	ldmia	r2!, {r0, r1}
 8026dd8:	6926      	ldr	r6, [r4, #16]
 8026dda:	6030      	str	r0, [r6, #0]
 8026ddc:	6071      	str	r1, [r6, #4]
 8026dde:	6922      	ldr	r2, [r4, #16]
 8026de0:	3208      	adds	r2, #8
 8026de2:	6122      	str	r2, [r4, #16]
 8026de4:	68a2      	ldr	r2, [r4, #8]
 8026de6:	3201      	adds	r2, #1
 8026de8:	60a2      	str	r2, [r4, #8]
 8026dea:	e5c6      	b.n	802697a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8026dec:	f104 0314 	add.w	r3, r4, #20
 8026df0:	cb03      	ldmia	r3!, {r0, r1}
 8026df2:	6926      	ldr	r6, [r4, #16]
 8026df4:	6030      	str	r0, [r6, #0]
 8026df6:	6071      	str	r1, [r6, #4]
 8026df8:	6923      	ldr	r3, [r4, #16]
 8026dfa:	3308      	adds	r3, #8
 8026dfc:	6123      	str	r3, [r4, #16]
 8026dfe:	68a3      	ldr	r3, [r4, #8]
 8026e00:	3301      	adds	r3, #1
 8026e02:	60a3      	str	r3, [r4, #8]
 8026e04:	e5ee      	b.n	80269e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8026e06:	9b01      	ldr	r3, [sp, #4]
 8026e08:	8b20      	ldrh	r0, [r4, #24]
 8026e0a:	8b66      	ldrh	r6, [r4, #26]
 8026e0c:	ea4f 1c63 	mov.w	ip, r3, asr #5
 8026e10:	f003 021f 	and.w	r2, r3, #31
 8026e14:	9b04      	ldr	r3, [sp, #16]
 8026e16:	f003 031f 	and.w	r3, r3, #31
 8026e1a:	9305      	str	r3, [sp, #20]
 8026e1c:	9b03      	ldr	r3, [sp, #12]
 8026e1e:	45dc      	cmp	ip, fp
 8026e20:	eba3 050e 	sub.w	r5, r3, lr
 8026e24:	d108      	bne.n	8026e38 <_ZN8touchgfx7Outline10renderLineEiiii+0xa98>
 8026e26:	9b05      	ldr	r3, [sp, #20]
 8026e28:	441a      	add	r2, r3
 8026e2a:	4428      	add	r0, r5
 8026e2c:	fb05 6502 	mla	r5, r5, r2, r6
 8026e30:	8320      	strh	r0, [r4, #24]
 8026e32:	8365      	strh	r5, [r4, #26]
 8026e34:	f7ff bbe7 	b.w	8026606 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8026e38:	9b04      	ldr	r3, [sp, #16]
 8026e3a:	9901      	ldr	r1, [sp, #4]
 8026e3c:	1a5b      	subs	r3, r3, r1
 8026e3e:	9300      	str	r3, [sp, #0]
 8026e40:	f100 809f 	bmi.w	8026f82 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe2>
 8026e44:	f1c2 0120 	rsb	r1, r2, #32
 8026e48:	434d      	muls	r5, r1
 8026e4a:	2101      	movs	r1, #1
 8026e4c:	9102      	str	r1, [sp, #8]
 8026e4e:	2120      	movs	r1, #32
 8026e50:	9b00      	ldr	r3, [sp, #0]
 8026e52:	9101      	str	r1, [sp, #4]
 8026e54:	fb95 f7f3 	sdiv	r7, r5, r3
 8026e58:	9901      	ldr	r1, [sp, #4]
 8026e5a:	fb03 5517 	mls	r5, r3, r7, r5
 8026e5e:	2d00      	cmp	r5, #0
 8026e60:	bfb8      	it	lt
 8026e62:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8026e66:	440a      	add	r2, r1
 8026e68:	fb07 6202 	mla	r2, r7, r2, r6
 8026e6c:	b211      	sxth	r1, r2
 8026e6e:	9a02      	ldr	r2, [sp, #8]
 8026e70:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 8026e74:	8361      	strh	r1, [r4, #26]
 8026e76:	4494      	add	ip, r2
 8026e78:	fa0f f289 	sxth.w	r2, r9
 8026e7c:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 8026e80:	bfb8      	it	lt
 8026e82:	18ed      	addlt	r5, r5, r3
 8026e84:	fa0f f88c 	sxth.w	r8, ip
 8026e88:	0413      	lsls	r3, r2, #16
 8026e8a:	4438      	add	r0, r7
 8026e8c:	eb09 4906 	add.w	r9, r9, r6, lsl #16
 8026e90:	eb08 0a03 	add.w	sl, r8, r3
 8026e94:	b200      	sxth	r0, r0
 8026e96:	45d1      	cmp	r9, sl
 8026e98:	8320      	strh	r0, [r4, #24]
 8026e9a:	9304      	str	r3, [sp, #16]
 8026e9c:	f43f ab33 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026ea0:	ea50 0301 	orrs.w	r3, r0, r1
 8026ea4:	d00b      	beq.n	8026ebe <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8026ea6:	2e00      	cmp	r6, #0
 8026ea8:	db09      	blt.n	8026ebe <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8026eaa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026eac:	428e      	cmp	r6, r1
 8026eae:	da06      	bge.n	8026ebe <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8026eb0:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8026eb4:	4288      	cmp	r0, r1
 8026eb6:	d36d      	bcc.n	8026f94 <_ZN8touchgfx7Outline10renderLineEiiii+0xbf4>
 8026eb8:	2101      	movs	r1, #1
 8026eba:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8026ebe:	2100      	movs	r1, #0
 8026ec0:	45e3      	cmp	fp, ip
 8026ec2:	f8a4 8014 	strh.w	r8, [r4, #20]
 8026ec6:	82e2      	strh	r2, [r4, #22]
 8026ec8:	8321      	strh	r1, [r4, #24]
 8026eca:	8361      	strh	r1, [r4, #26]
 8026ecc:	44be      	add	lr, r7
 8026ece:	d049      	beq.n	8026f64 <_ZN8touchgfx7Outline10renderLineEiiii+0xbc4>
 8026ed0:	9b03      	ldr	r3, [sp, #12]
 8026ed2:	eba3 060e 	sub.w	r6, r3, lr
 8026ed6:	443e      	add	r6, r7
 8026ed8:	9b00      	ldr	r3, [sp, #0]
 8026eda:	0176      	lsls	r6, r6, #5
 8026edc:	fb96 f7f3 	sdiv	r7, r6, r3
 8026ee0:	fb03 6617 	mls	r6, r3, r7, r6
 8026ee4:	428e      	cmp	r6, r1
 8026ee6:	bfb8      	it	lt
 8026ee8:	18f6      	addlt	r6, r6, r3
 8026eea:	9b00      	ldr	r3, [sp, #0]
 8026eec:	bfb8      	it	lt
 8026eee:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8026ef2:	1aed      	subs	r5, r5, r3
 8026ef4:	1c7b      	adds	r3, r7, #1
 8026ef6:	9307      	str	r3, [sp, #28]
 8026ef8:	f04f 0900 	mov.w	r9, #0
 8026efc:	19ad      	adds	r5, r5, r6
 8026efe:	bf5e      	ittt	pl
 8026f00:	9b00      	ldrpl	r3, [sp, #0]
 8026f02:	9807      	ldrpl	r0, [sp, #28]
 8026f04:	1aed      	subpl	r5, r5, r3
 8026f06:	9b02      	ldr	r3, [sp, #8]
 8026f08:	bf48      	it	mi
 8026f0a:	4638      	movmi	r0, r7
 8026f0c:	fa0f f880 	sxth.w	r8, r0
 8026f10:	0141      	lsls	r1, r0, #5
 8026f12:	449c      	add	ip, r3
 8026f14:	4486      	add	lr, r0
 8026f16:	9b04      	ldr	r3, [sp, #16]
 8026f18:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8026f1c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8026f20:	fa0f fa8c 	sxth.w	sl, ip
 8026f24:	4418      	add	r0, r3
 8026f26:	4453      	add	r3, sl
 8026f28:	b209      	sxth	r1, r1
 8026f2a:	4298      	cmp	r0, r3
 8026f2c:	8361      	strh	r1, [r4, #26]
 8026f2e:	f43f aaea 	beq.w	8026506 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8026f32:	ea58 0301 	orrs.w	r3, r8, r1
 8026f36:	d00c      	beq.n	8026f52 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8026f38:	2a00      	cmp	r2, #0
 8026f3a:	db0a      	blt.n	8026f52 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8026f3c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026f3e:	428a      	cmp	r2, r1
 8026f40:	da07      	bge.n	8026f52 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8026f42:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8026f46:	4288      	cmp	r0, r1
 8026f48:	d334      	bcc.n	8026fb4 <_ZN8touchgfx7Outline10renderLineEiiii+0xc14>
 8026f4a:	f04f 0301 	mov.w	r3, #1
 8026f4e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8026f52:	45e3      	cmp	fp, ip
 8026f54:	f8a4 a014 	strh.w	sl, [r4, #20]
 8026f58:	82e2      	strh	r2, [r4, #22]
 8026f5a:	f8a4 9018 	strh.w	r9, [r4, #24]
 8026f5e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8026f62:	d1cb      	bne.n	8026efc <_ZN8touchgfx7Outline10renderLineEiiii+0xb5c>
 8026f64:	9b03      	ldr	r3, [sp, #12]
 8026f66:	9e05      	ldr	r6, [sp, #20]
 8026f68:	eba3 0e0e 	sub.w	lr, r3, lr
 8026f6c:	9b01      	ldr	r3, [sp, #4]
 8026f6e:	f8a4 e018 	strh.w	lr, [r4, #24]
 8026f72:	3620      	adds	r6, #32
 8026f74:	1af6      	subs	r6, r6, r3
 8026f76:	fb0e fe06 	mul.w	lr, lr, r6
 8026f7a:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8026f7e:	f7ff bb42 	b.w	8026606 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8026f82:	9b00      	ldr	r3, [sp, #0]
 8026f84:	f04f 31ff 	mov.w	r1, #4294967295
 8026f88:	425b      	negs	r3, r3
 8026f8a:	9102      	str	r1, [sp, #8]
 8026f8c:	4355      	muls	r5, r2
 8026f8e:	9300      	str	r3, [sp, #0]
 8026f90:	2100      	movs	r1, #0
 8026f92:	e75d      	b.n	8026e50 <_ZN8touchgfx7Outline10renderLineEiiii+0xab0>
 8026f94:	f104 0614 	add.w	r6, r4, #20
 8026f98:	ce03      	ldmia	r6!, {r0, r1}
 8026f9a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8026f9e:	f8c9 0000 	str.w	r0, [r9]
 8026fa2:	f8c9 1004 	str.w	r1, [r9, #4]
 8026fa6:	6921      	ldr	r1, [r4, #16]
 8026fa8:	3108      	adds	r1, #8
 8026faa:	6121      	str	r1, [r4, #16]
 8026fac:	68a1      	ldr	r1, [r4, #8]
 8026fae:	3101      	adds	r1, #1
 8026fb0:	60a1      	str	r1, [r4, #8]
 8026fb2:	e784      	b.n	8026ebe <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8026fb4:	f104 0814 	add.w	r8, r4, #20
 8026fb8:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8026fbc:	6923      	ldr	r3, [r4, #16]
 8026fbe:	9306      	str	r3, [sp, #24]
 8026fc0:	6018      	str	r0, [r3, #0]
 8026fc2:	6059      	str	r1, [r3, #4]
 8026fc4:	6921      	ldr	r1, [r4, #16]
 8026fc6:	3108      	adds	r1, #8
 8026fc8:	6121      	str	r1, [r4, #16]
 8026fca:	68a1      	ldr	r1, [r4, #8]
 8026fcc:	3101      	adds	r1, #1
 8026fce:	60a1      	str	r1, [r4, #8]
 8026fd0:	e7bf      	b.n	8026f52 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8026fd2:	bf00      	nop

08026fd4 <_ZN8touchgfx7Outline6lineToEii>:
 8026fd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026fd6:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8026fd8:	079b      	lsls	r3, r3, #30
 8026fda:	4604      	mov	r4, r0
 8026fdc:	460d      	mov	r5, r1
 8026fde:	4616      	mov	r6, r2
 8026fe0:	d526      	bpl.n	8027030 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8026fe2:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8026fe6:	ea85 0001 	eor.w	r0, r5, r1
 8026fea:	ea86 0302 	eor.w	r3, r6, r2
 8026fee:	4303      	orrs	r3, r0
 8026ff0:	d01e      	beq.n	8027030 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8026ff2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8026ff4:	9600      	str	r6, [sp, #0]
 8026ff6:	114b      	asrs	r3, r1, #5
 8026ff8:	4283      	cmp	r3, r0
 8026ffa:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026ffc:	bfb8      	it	lt
 8026ffe:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8027000:	3301      	adds	r3, #1
 8027002:	4283      	cmp	r3, r0
 8027004:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8027006:	bfc8      	it	gt
 8027008:	6363      	strgt	r3, [r4, #52]	; 0x34
 802700a:	116b      	asrs	r3, r5, #5
 802700c:	4283      	cmp	r3, r0
 802700e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8027010:	bfb8      	it	lt
 8027012:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8027014:	3301      	adds	r3, #1
 8027016:	4283      	cmp	r3, r0
 8027018:	bfc8      	it	gt
 802701a:	6363      	strgt	r3, [r4, #52]	; 0x34
 802701c:	4620      	mov	r0, r4
 802701e:	462b      	mov	r3, r5
 8027020:	f7ff f9be 	bl	80263a0 <_ZN8touchgfx7Outline10renderLineEiiii>
 8027024:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8027026:	e9c4 5607 	strd	r5, r6, [r4, #28]
 802702a:	f043 0301 	orr.w	r3, r3, #1
 802702e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027030:	b002      	add	sp, #8
 8027032:	bd70      	pop	{r4, r5, r6, pc}

08027034 <_ZN8touchgfx7Outline6moveToEii>:
 8027034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027036:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8027038:	4615      	mov	r5, r2
 802703a:	079a      	lsls	r2, r3, #30
 802703c:	4604      	mov	r4, r0
 802703e:	460e      	mov	r6, r1
 8027040:	d401      	bmi.n	8027046 <_ZN8touchgfx7Outline6moveToEii+0x12>
 8027042:	f7ff f967 	bl	8026314 <_ZN8touchgfx7Outline5resetEv>
 8027046:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8027048:	07db      	lsls	r3, r3, #31
 802704a:	d504      	bpl.n	8027056 <_ZN8touchgfx7Outline6moveToEii+0x22>
 802704c:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 8027050:	4620      	mov	r0, r4
 8027052:	f7ff ffbf 	bl	8026fd4 <_ZN8touchgfx7Outline6lineToEii>
 8027056:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802705a:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 802705e:	f346 1c4f 	sbfx	ip, r6, #5, #16
 8027062:	f345 174f 	sbfx	r7, r5, #5, #16
 8027066:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 802706a:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 802706e:	428a      	cmp	r2, r1
 8027070:	d015      	beq.n	802709e <_ZN8touchgfx7Outline6moveToEii+0x6a>
 8027072:	8b61      	ldrh	r1, [r4, #26]
 8027074:	8b22      	ldrh	r2, [r4, #24]
 8027076:	430a      	orrs	r2, r1
 8027078:	d00b      	beq.n	8027092 <_ZN8touchgfx7Outline6moveToEii+0x5e>
 802707a:	2b00      	cmp	r3, #0
 802707c:	db09      	blt.n	8027092 <_ZN8touchgfx7Outline6moveToEii+0x5e>
 802707e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8027080:	4293      	cmp	r3, r2
 8027082:	da06      	bge.n	8027092 <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8027084:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8027088:	429a      	cmp	r2, r3
 802708a:	d30d      	bcc.n	80270a8 <_ZN8touchgfx7Outline6moveToEii+0x74>
 802708c:	2301      	movs	r3, #1
 802708e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8027092:	2300      	movs	r3, #0
 8027094:	f8a4 c014 	strh.w	ip, [r4, #20]
 8027098:	82e7      	strh	r7, [r4, #22]
 802709a:	8323      	strh	r3, [r4, #24]
 802709c:	8363      	strh	r3, [r4, #26]
 802709e:	61e6      	str	r6, [r4, #28]
 80270a0:	e9c4 5608 	strd	r5, r6, [r4, #32]
 80270a4:	62a5      	str	r5, [r4, #40]	; 0x28
 80270a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80270a8:	f104 0314 	add.w	r3, r4, #20
 80270ac:	cb03      	ldmia	r3!, {r0, r1}
 80270ae:	6922      	ldr	r2, [r4, #16]
 80270b0:	6010      	str	r0, [r2, #0]
 80270b2:	6051      	str	r1, [r2, #4]
 80270b4:	6923      	ldr	r3, [r4, #16]
 80270b6:	3308      	adds	r3, #8
 80270b8:	6123      	str	r3, [r4, #16]
 80270ba:	68a3      	ldr	r3, [r4, #8]
 80270bc:	3301      	adds	r3, #1
 80270be:	60a3      	str	r3, [r4, #8]
 80270c0:	e7e7      	b.n	8027092 <_ZN8touchgfx7Outline6moveToEii+0x5e>

080270c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80270c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80270c6:	b0d1      	sub	sp, #324	; 0x144
 80270c8:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80270cc:	466c      	mov	r4, sp
 80270ce:	1a0d      	subs	r5, r1, r0
 80270d0:	2d48      	cmp	r5, #72	; 0x48
 80270d2:	f100 0208 	add.w	r2, r0, #8
 80270d6:	f340 80bb 	ble.w	8027250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 80270da:	112d      	asrs	r5, r5, #4
 80270dc:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 80270e0:	f9b0 8000 	ldrsh.w	r8, [r0]
 80270e4:	681e      	ldr	r6, [r3, #0]
 80270e6:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 80270ea:	6006      	str	r6, [r0, #0]
 80270ec:	685e      	ldr	r6, [r3, #4]
 80270ee:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 80270f2:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 80270f6:	6046      	str	r6, [r0, #4]
 80270f8:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 80270fc:	f8a3 e002 	strh.w	lr, [r3, #2]
 8027100:	f8a3 c004 	strh.w	ip, [r3, #4]
 8027104:	80df      	strh	r7, [r3, #6]
 8027106:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 802710a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 802710e:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 8027112:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8027116:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 802711a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 802711e:	4565      	cmp	r5, ip
 8027120:	f1a1 0308 	sub.w	r3, r1, #8
 8027124:	da0f      	bge.n	8027146 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 8027126:	681d      	ldr	r5, [r3, #0]
 8027128:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 802712c:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8027130:	6015      	str	r5, [r2, #0]
 8027132:	685d      	ldr	r5, [r3, #4]
 8027134:	6055      	str	r5, [r2, #4]
 8027136:	f821 7c08 	strh.w	r7, [r1, #-8]
 802713a:	f821 6c06 	strh.w	r6, [r1, #-6]
 802713e:	f821 ec04 	strh.w	lr, [r1, #-4]
 8027142:	f821 cc02 	strh.w	ip, [r1, #-2]
 8027146:	f9b0 7000 	ldrsh.w	r7, [r0]
 802714a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 802714e:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8027152:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8027156:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 802715a:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 802715e:	45ac      	cmp	ip, r5
 8027160:	da0d      	bge.n	802717e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 8027162:	6815      	ldr	r5, [r2, #0]
 8027164:	6005      	str	r5, [r0, #0]
 8027166:	6855      	ldr	r5, [r2, #4]
 8027168:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 802716c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8027170:	8107      	strh	r7, [r0, #8]
 8027172:	6045      	str	r5, [r0, #4]
 8027174:	8146      	strh	r6, [r0, #10]
 8027176:	f8a0 e00c 	strh.w	lr, [r0, #12]
 802717a:	f8a0 c00e 	strh.w	ip, [r0, #14]
 802717e:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8027182:	f9b0 7000 	ldrsh.w	r7, [r0]
 8027186:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 802718a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 802718e:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8027192:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8027196:	4565      	cmp	r5, ip
 8027198:	da0f      	bge.n	80271ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 802719a:	681d      	ldr	r5, [r3, #0]
 802719c:	6005      	str	r5, [r0, #0]
 802719e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80271a2:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80271a6:	685d      	ldr	r5, [r3, #4]
 80271a8:	6045      	str	r5, [r0, #4]
 80271aa:	f821 7c08 	strh.w	r7, [r1, #-8]
 80271ae:	f821 6c06 	strh.w	r6, [r1, #-6]
 80271b2:	f821 ec04 	strh.w	lr, [r1, #-4]
 80271b6:	f821 cc02 	strh.w	ip, [r1, #-2]
 80271ba:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 80271be:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 80271c2:	f9b0 e000 	ldrsh.w	lr, [r0]
 80271c6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80271ca:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 80271ce:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 80271d2:	f102 0508 	add.w	r5, r2, #8
 80271d6:	4556      	cmp	r6, sl
 80271d8:	462f      	mov	r7, r5
 80271da:	db18      	blt.n	802720e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 80271dc:	3b08      	subs	r3, #8
 80271de:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 80271e2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80271e6:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 80271ea:	45b2      	cmp	sl, r6
 80271ec:	dbf6      	blt.n	80271dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 80271ee:	42ab      	cmp	r3, r5
 80271f0:	681e      	ldr	r6, [r3, #0]
 80271f2:	d30e      	bcc.n	8027212 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 80271f4:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 80271f8:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 80271fc:	602e      	str	r6, [r5, #0]
 80271fe:	685e      	ldr	r6, [r3, #4]
 8027200:	606e      	str	r6, [r5, #4]
 8027202:	f8a3 9000 	strh.w	r9, [r3]
 8027206:	f8a3 8002 	strh.w	r8, [r3, #2]
 802720a:	809f      	strh	r7, [r3, #4]
 802720c:	80da      	strh	r2, [r3, #6]
 802720e:	462a      	mov	r2, r5
 8027210:	e7d3      	b.n	80271ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8027212:	6006      	str	r6, [r0, #0]
 8027214:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8027218:	685e      	ldr	r6, [r3, #4]
 802721a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 802721e:	6046      	str	r6, [r0, #4]
 8027220:	80da      	strh	r2, [r3, #6]
 8027222:	1b4a      	subs	r2, r1, r5
 8027224:	1a1e      	subs	r6, r3, r0
 8027226:	10d2      	asrs	r2, r2, #3
 8027228:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 802722c:	bfb8      	it	lt
 802722e:	e9c4 0300 	strdlt	r0, r3, [r4]
 8027232:	f8a3 e000 	strh.w	lr, [r3]
 8027236:	f8a3 c002 	strh.w	ip, [r3, #2]
 802723a:	f8a3 8004 	strh.w	r8, [r3, #4]
 802723e:	bfaa      	itet	ge
 8027240:	4607      	movge	r7, r0
 8027242:	460b      	movlt	r3, r1
 8027244:	e9c4 5100 	strdge	r5, r1, [r4]
 8027248:	4638      	mov	r0, r7
 802724a:	3408      	adds	r4, #8
 802724c:	4619      	mov	r1, r3
 802724e:	e73e      	b.n	80270ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8027250:	4291      	cmp	r1, r2
 8027252:	d926      	bls.n	80272a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 8027254:	f1a2 0310 	sub.w	r3, r2, #16
 8027258:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 802725c:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 8027260:	f9b3 e00a 	ldrsh.w	lr, [r3, #10]
 8027264:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8027268:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 802726c:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8027270:	42ae      	cmp	r6, r5
 8027272:	da14      	bge.n	802729e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 8027274:	461d      	mov	r5, r3
 8027276:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 802727a:	f855 6f08 	ldr.w	r6, [r5, #8]!
 802727e:	611e      	str	r6, [r3, #16]
 8027280:	686e      	ldr	r6, [r5, #4]
 8027282:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 8027286:	f8a3 c008 	strh.w	ip, [r3, #8]
 802728a:	42a8      	cmp	r0, r5
 802728c:	615e      	str	r6, [r3, #20]
 802728e:	815f      	strh	r7, [r3, #10]
 8027290:	f8a3 800c 	strh.w	r8, [r3, #12]
 8027294:	f8a3 e00e 	strh.w	lr, [r3, #14]
 8027298:	f1a3 0308 	sub.w	r3, r3, #8
 802729c:	d1dc      	bne.n	8027258 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 802729e:	3208      	adds	r2, #8
 80272a0:	e7d6      	b.n	8027250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 80272a2:	466b      	mov	r3, sp
 80272a4:	429c      	cmp	r4, r3
 80272a6:	d903      	bls.n	80272b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 80272a8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80272ac:	3c08      	subs	r4, #8
 80272ae:	e70e      	b.n	80270ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 80272b0:	b051      	add	sp, #324	; 0x144
 80272b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080272b6 <_ZN8touchgfx7Outline9sortCellsEv>:
 80272b6:	6881      	ldr	r1, [r0, #8]
 80272b8:	b111      	cbz	r1, 80272c0 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 80272ba:	68c0      	ldr	r0, [r0, #12]
 80272bc:	f7ff bf01 	b.w	80270c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80272c0:	4770      	bx	lr

080272c2 <_ZN8touchgfx7Outline8getCellsEv>:
 80272c2:	b510      	push	{r4, lr}
 80272c4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80272c6:	07da      	lsls	r2, r3, #31
 80272c8:	4604      	mov	r4, r0
 80272ca:	d507      	bpl.n	80272dc <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 80272cc:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 80272d0:	f7ff fe80 	bl	8026fd4 <_ZN8touchgfx7Outline6lineToEii>
 80272d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80272d6:	f023 0301 	bic.w	r3, r3, #1
 80272da:	63e3      	str	r3, [r4, #60]	; 0x3c
 80272dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80272de:	079b      	lsls	r3, r3, #30
 80272e0:	d51a      	bpl.n	8027318 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 80272e2:	8b62      	ldrh	r2, [r4, #26]
 80272e4:	8b23      	ldrh	r3, [r4, #24]
 80272e6:	4313      	orrs	r3, r2
 80272e8:	d00d      	beq.n	8027306 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 80272ea:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80272ee:	2b00      	cmp	r3, #0
 80272f0:	db09      	blt.n	8027306 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 80272f2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80272f4:	4293      	cmp	r3, r2
 80272f6:	da06      	bge.n	8027306 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 80272f8:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 80272fc:	429a      	cmp	r2, r3
 80272fe:	d80d      	bhi.n	802731c <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 8027300:	2301      	movs	r3, #1
 8027302:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8027306:	68a0      	ldr	r0, [r4, #8]
 8027308:	b138      	cbz	r0, 802731a <_ZN8touchgfx7Outline8getCellsEv+0x58>
 802730a:	4620      	mov	r0, r4
 802730c:	f7ff ffd3 	bl	80272b6 <_ZN8touchgfx7Outline9sortCellsEv>
 8027310:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8027312:	f023 0302 	bic.w	r3, r3, #2
 8027316:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027318:	68e0      	ldr	r0, [r4, #12]
 802731a:	bd10      	pop	{r4, pc}
 802731c:	f104 0314 	add.w	r3, r4, #20
 8027320:	cb03      	ldmia	r3!, {r0, r1}
 8027322:	6922      	ldr	r2, [r4, #16]
 8027324:	6010      	str	r0, [r2, #0]
 8027326:	6051      	str	r1, [r2, #4]
 8027328:	6923      	ldr	r3, [r4, #16]
 802732a:	3308      	adds	r3, #8
 802732c:	6123      	str	r3, [r4, #16]
 802732e:	68a3      	ldr	r3, [r4, #8]
 8027330:	3301      	adds	r3, #1
 8027332:	60a3      	str	r3, [r4, #8]
 8027334:	e7e7      	b.n	8027306 <_ZN8touchgfx7Outline8getCellsEv+0x44>

08027336 <_ZN8touchgfx8ScanlineD1Ev>:
 8027336:	4770      	bx	lr

08027338 <_ZN8touchgfx8ScanlineD0Ev>:
 8027338:	b510      	push	{r4, lr}
 802733a:	2124      	movs	r1, #36	; 0x24
 802733c:	4604      	mov	r4, r0
 802733e:	f000 f888 	bl	8027452 <_ZdlPvj>
 8027342:	4620      	mov	r0, r4
 8027344:	bd10      	pop	{r4, pc}

08027346 <_ZN8touchgfx8Scanline5resetEv>:
 8027346:	b510      	push	{r4, lr}
 8027348:	4604      	mov	r4, r0
 802734a:	f7ed fcfb 	bl	8014d44 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 802734e:	61a0      	str	r0, [r4, #24]
 8027350:	f7ed fcfe 	bl	8014d50 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 8027354:	61e0      	str	r0, [r4, #28]
 8027356:	f7ed fd01 	bl	8014d5c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 802735a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802735e:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8027362:	69e3      	ldr	r3, [r4, #28]
 8027364:	6123      	str	r3, [r4, #16]
 8027366:	2300      	movs	r3, #0
 8027368:	6220      	str	r0, [r4, #32]
 802736a:	6160      	str	r0, [r4, #20]
 802736c:	60e3      	str	r3, [r4, #12]
 802736e:	bd10      	pop	{r4, pc}

08027370 <_ZN8touchgfx8ScanlineC1Ev>:
 8027370:	b510      	push	{r4, lr}
 8027372:	4b09      	ldr	r3, [pc, #36]	; (8027398 <_ZN8touchgfx8ScanlineC1Ev+0x28>)
 8027374:	6003      	str	r3, [r0, #0]
 8027376:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802737a:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802737e:	2300      	movs	r3, #0
 8027380:	4604      	mov	r4, r0
 8027382:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8027386:	e9c0 3305 	strd	r3, r3, [r0, #20]
 802738a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 802738e:	f7ff ffda 	bl	8027346 <_ZN8touchgfx8Scanline5resetEv>
 8027392:	4620      	mov	r0, r4
 8027394:	bd10      	pop	{r4, pc}
 8027396:	bf00      	nop
 8027398:	0802e368 	.word	0x0802e368

0802739c <_ZN8touchgfx8Scanline7addSpanEiijj>:
 802739c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80273a0:	1e0c      	subs	r4, r1, #0
 80273a2:	4605      	mov	r5, r0
 80273a4:	4617      	mov	r7, r2
 80273a6:	461e      	mov	r6, r3
 80273a8:	da03      	bge.n	80273b2 <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 80273aa:	4426      	add	r6, r4
 80273ac:	2e01      	cmp	r6, #1
 80273ae:	d421      	bmi.n	80273f4 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 80273b0:	2400      	movs	r4, #0
 80273b2:	f7ed fcc1 	bl	8014d38 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 80273b6:	42a0      	cmp	r0, r4
 80273b8:	dd1c      	ble.n	80273f4 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 80273ba:	f7ed fcbd 	bl	8014d38 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 80273be:	eb04 0806 	add.w	r8, r4, r6
 80273c2:	4580      	cmp	r8, r0
 80273c4:	d902      	bls.n	80273cc <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 80273c6:	f7ed fcb7 	bl	8014d38 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 80273ca:	1b06      	subs	r6, r0, r4
 80273cc:	69a8      	ldr	r0, [r5, #24]
 80273ce:	f89d 1018 	ldrb.w	r1, [sp, #24]
 80273d2:	4632      	mov	r2, r6
 80273d4:	4420      	add	r0, r4
 80273d6:	f7f0 fa95 	bl	8017904 <_ZN8touchgfx6memsetEPvhm>
 80273da:	686b      	ldr	r3, [r5, #4]
 80273dc:	3301      	adds	r3, #1
 80273de:	42a3      	cmp	r3, r4
 80273e0:	b2b2      	uxth	r2, r6
 80273e2:	696b      	ldr	r3, [r5, #20]
 80273e4:	d108      	bne.n	80273f8 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 80273e6:	8819      	ldrh	r1, [r3, #0]
 80273e8:	440a      	add	r2, r1
 80273ea:	801a      	strh	r2, [r3, #0]
 80273ec:	3c01      	subs	r4, #1
 80273ee:	4434      	add	r4, r6
 80273f0:	e9c5 4701 	strd	r4, r7, [r5, #4]
 80273f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80273f8:	1c99      	adds	r1, r3, #2
 80273fa:	6169      	str	r1, [r5, #20]
 80273fc:	805a      	strh	r2, [r3, #2]
 80273fe:	692b      	ldr	r3, [r5, #16]
 8027400:	1c9a      	adds	r2, r3, #2
 8027402:	612a      	str	r2, [r5, #16]
 8027404:	805c      	strh	r4, [r3, #2]
 8027406:	68eb      	ldr	r3, [r5, #12]
 8027408:	3301      	adds	r3, #1
 802740a:	60eb      	str	r3, [r5, #12]
 802740c:	e7ee      	b.n	80273ec <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0802740e <_ZN8touchgfx15RenderingBufferD1Ev>:
 802740e:	4770      	bx	lr

08027410 <_ZN8touchgfx15RenderingBufferD0Ev>:
 8027410:	b510      	push	{r4, lr}
 8027412:	2118      	movs	r1, #24
 8027414:	4604      	mov	r4, r0
 8027416:	f000 f81c 	bl	8027452 <_ZdlPvj>
 802741a:	4620      	mov	r0, r4
 802741c:	bd10      	pop	{r4, pc}
	...

08027420 <_ZN8touchgfx15RenderingBufferC1Ev>:
 8027420:	4a04      	ldr	r2, [pc, #16]	; (8027434 <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 8027422:	6002      	str	r2, [r0, #0]
 8027424:	2200      	movs	r2, #0
 8027426:	6042      	str	r2, [r0, #4]
 8027428:	7202      	strb	r2, [r0, #8]
 802742a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 802742e:	6142      	str	r2, [r0, #20]
 8027430:	4770      	bx	lr
 8027432:	bf00      	nop
 8027434:	0802e378 	.word	0x0802e378

08027438 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 8027438:	60c3      	str	r3, [r0, #12]
 802743a:	9b00      	ldr	r3, [sp, #0]
 802743c:	6103      	str	r3, [r0, #16]
 802743e:	9b01      	ldr	r3, [sp, #4]
 8027440:	6041      	str	r1, [r0, #4]
 8027442:	7202      	strb	r2, [r0, #8]
 8027444:	6143      	str	r3, [r0, #20]
 8027446:	4770      	bx	lr

08027448 <__aeabi_atexit>:
 8027448:	460b      	mov	r3, r1
 802744a:	4601      	mov	r1, r0
 802744c:	4618      	mov	r0, r3
 802744e:	f000 b853 	b.w	80274f8 <__cxa_atexit>

08027452 <_ZdlPvj>:
 8027452:	f000 b812 	b.w	802747a <_ZdlPv>

08027456 <__cxa_guard_acquire>:
 8027456:	6803      	ldr	r3, [r0, #0]
 8027458:	07db      	lsls	r3, r3, #31
 802745a:	d406      	bmi.n	802746a <__cxa_guard_acquire+0x14>
 802745c:	7843      	ldrb	r3, [r0, #1]
 802745e:	b103      	cbz	r3, 8027462 <__cxa_guard_acquire+0xc>
 8027460:	deff      	udf	#255	; 0xff
 8027462:	2301      	movs	r3, #1
 8027464:	7043      	strb	r3, [r0, #1]
 8027466:	4618      	mov	r0, r3
 8027468:	4770      	bx	lr
 802746a:	2000      	movs	r0, #0
 802746c:	4770      	bx	lr

0802746e <__cxa_guard_release>:
 802746e:	2301      	movs	r3, #1
 8027470:	6003      	str	r3, [r0, #0]
 8027472:	4770      	bx	lr

08027474 <__cxa_pure_virtual>:
 8027474:	b508      	push	{r3, lr}
 8027476:	f000 f80f 	bl	8027498 <_ZSt9terminatev>

0802747a <_ZdlPv>:
 802747a:	f000 b989 	b.w	8027790 <free>

0802747e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802747e:	b508      	push	{r3, lr}
 8027480:	4780      	blx	r0
 8027482:	f000 f80e 	bl	80274a2 <abort>
	...

08027488 <_ZSt13get_terminatev>:
 8027488:	4b02      	ldr	r3, [pc, #8]	; (8027494 <_ZSt13get_terminatev+0xc>)
 802748a:	6818      	ldr	r0, [r3, #0]
 802748c:	f3bf 8f5b 	dmb	ish
 8027490:	4770      	bx	lr
 8027492:	bf00      	nop
 8027494:	2000011c 	.word	0x2000011c

08027498 <_ZSt9terminatev>:
 8027498:	b508      	push	{r3, lr}
 802749a:	f7ff fff5 	bl	8027488 <_ZSt13get_terminatev>
 802749e:	f7ff ffee 	bl	802747e <_ZN10__cxxabiv111__terminateEPFvvE>

080274a2 <abort>:
 80274a2:	b508      	push	{r3, lr}
 80274a4:	2006      	movs	r0, #6
 80274a6:	f000 fe01 	bl	80280ac <raise>
 80274aa:	2001      	movs	r0, #1
 80274ac:	f7da fa9c 	bl	80019e8 <_exit>

080274b0 <__assert_func>:
 80274b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80274b2:	4614      	mov	r4, r2
 80274b4:	461a      	mov	r2, r3
 80274b6:	4b09      	ldr	r3, [pc, #36]	; (80274dc <__assert_func+0x2c>)
 80274b8:	681b      	ldr	r3, [r3, #0]
 80274ba:	4605      	mov	r5, r0
 80274bc:	68d8      	ldr	r0, [r3, #12]
 80274be:	b14c      	cbz	r4, 80274d4 <__assert_func+0x24>
 80274c0:	4b07      	ldr	r3, [pc, #28]	; (80274e0 <__assert_func+0x30>)
 80274c2:	9100      	str	r1, [sp, #0]
 80274c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80274c8:	4906      	ldr	r1, [pc, #24]	; (80274e4 <__assert_func+0x34>)
 80274ca:	462b      	mov	r3, r5
 80274cc:	f000 f8fe 	bl	80276cc <fiprintf>
 80274d0:	f7ff ffe7 	bl	80274a2 <abort>
 80274d4:	4b04      	ldr	r3, [pc, #16]	; (80274e8 <__assert_func+0x38>)
 80274d6:	461c      	mov	r4, r3
 80274d8:	e7f3      	b.n	80274c2 <__assert_func+0x12>
 80274da:	bf00      	nop
 80274dc:	20000120 	.word	0x20000120
 80274e0:	0802e380 	.word	0x0802e380
 80274e4:	0802e38d 	.word	0x0802e38d
 80274e8:	0802e3bb 	.word	0x0802e3bb

080274ec <atexit>:
 80274ec:	2300      	movs	r3, #0
 80274ee:	4601      	mov	r1, r0
 80274f0:	461a      	mov	r2, r3
 80274f2:	4618      	mov	r0, r3
 80274f4:	f000 bf14 	b.w	8028320 <__register_exitproc>

080274f8 <__cxa_atexit>:
 80274f8:	b510      	push	{r4, lr}
 80274fa:	4c05      	ldr	r4, [pc, #20]	; (8027510 <__cxa_atexit+0x18>)
 80274fc:	4613      	mov	r3, r2
 80274fe:	b12c      	cbz	r4, 802750c <__cxa_atexit+0x14>
 8027500:	460a      	mov	r2, r1
 8027502:	4601      	mov	r1, r0
 8027504:	2002      	movs	r0, #2
 8027506:	f000 ff0b 	bl	8028320 <__register_exitproc>
 802750a:	bd10      	pop	{r4, pc}
 802750c:	4620      	mov	r0, r4
 802750e:	e7fc      	b.n	802750a <__cxa_atexit+0x12>
 8027510:	08028321 	.word	0x08028321

08027514 <__errno>:
 8027514:	4b01      	ldr	r3, [pc, #4]	; (802751c <__errno+0x8>)
 8027516:	6818      	ldr	r0, [r3, #0]
 8027518:	4770      	bx	lr
 802751a:	bf00      	nop
 802751c:	20000120 	.word	0x20000120

08027520 <std>:
 8027520:	2300      	movs	r3, #0
 8027522:	b510      	push	{r4, lr}
 8027524:	4604      	mov	r4, r0
 8027526:	e9c0 3300 	strd	r3, r3, [r0]
 802752a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802752e:	6083      	str	r3, [r0, #8]
 8027530:	8181      	strh	r1, [r0, #12]
 8027532:	6643      	str	r3, [r0, #100]	; 0x64
 8027534:	81c2      	strh	r2, [r0, #14]
 8027536:	6183      	str	r3, [r0, #24]
 8027538:	4619      	mov	r1, r3
 802753a:	2208      	movs	r2, #8
 802753c:	305c      	adds	r0, #92	; 0x5c
 802753e:	f000 f93d 	bl	80277bc <memset>
 8027542:	4b05      	ldr	r3, [pc, #20]	; (8027558 <std+0x38>)
 8027544:	6263      	str	r3, [r4, #36]	; 0x24
 8027546:	4b05      	ldr	r3, [pc, #20]	; (802755c <std+0x3c>)
 8027548:	62a3      	str	r3, [r4, #40]	; 0x28
 802754a:	4b05      	ldr	r3, [pc, #20]	; (8027560 <std+0x40>)
 802754c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802754e:	4b05      	ldr	r3, [pc, #20]	; (8027564 <std+0x44>)
 8027550:	6224      	str	r4, [r4, #32]
 8027552:	6323      	str	r3, [r4, #48]	; 0x30
 8027554:	bd10      	pop	{r4, pc}
 8027556:	bf00      	nop
 8027558:	080280e5 	.word	0x080280e5
 802755c:	08028107 	.word	0x08028107
 8027560:	0802813f 	.word	0x0802813f
 8027564:	08028163 	.word	0x08028163

08027568 <_cleanup_r>:
 8027568:	4901      	ldr	r1, [pc, #4]	; (8027570 <_cleanup_r+0x8>)
 802756a:	f000 b8c1 	b.w	80276f0 <_fwalk_reent>
 802756e:	bf00      	nop
 8027570:	08028511 	.word	0x08028511

08027574 <__sfmoreglue>:
 8027574:	b570      	push	{r4, r5, r6, lr}
 8027576:	2268      	movs	r2, #104	; 0x68
 8027578:	1e4d      	subs	r5, r1, #1
 802757a:	4355      	muls	r5, r2
 802757c:	460e      	mov	r6, r1
 802757e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8027582:	f000 f98f 	bl	80278a4 <_malloc_r>
 8027586:	4604      	mov	r4, r0
 8027588:	b140      	cbz	r0, 802759c <__sfmoreglue+0x28>
 802758a:	2100      	movs	r1, #0
 802758c:	e9c0 1600 	strd	r1, r6, [r0]
 8027590:	300c      	adds	r0, #12
 8027592:	60a0      	str	r0, [r4, #8]
 8027594:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8027598:	f000 f910 	bl	80277bc <memset>
 802759c:	4620      	mov	r0, r4
 802759e:	bd70      	pop	{r4, r5, r6, pc}

080275a0 <__sfp_lock_acquire>:
 80275a0:	4801      	ldr	r0, [pc, #4]	; (80275a8 <__sfp_lock_acquire+0x8>)
 80275a2:	f000 b8ea 	b.w	802777a <__retarget_lock_acquire_recursive>
 80275a6:	bf00      	nop
 80275a8:	20014d2a 	.word	0x20014d2a

080275ac <__sfp_lock_release>:
 80275ac:	4801      	ldr	r0, [pc, #4]	; (80275b4 <__sfp_lock_release+0x8>)
 80275ae:	f000 b8e6 	b.w	802777e <__retarget_lock_release_recursive>
 80275b2:	bf00      	nop
 80275b4:	20014d2a 	.word	0x20014d2a

080275b8 <__sinit_lock_acquire>:
 80275b8:	4801      	ldr	r0, [pc, #4]	; (80275c0 <__sinit_lock_acquire+0x8>)
 80275ba:	f000 b8de 	b.w	802777a <__retarget_lock_acquire_recursive>
 80275be:	bf00      	nop
 80275c0:	20014d2b 	.word	0x20014d2b

080275c4 <__sinit_lock_release>:
 80275c4:	4801      	ldr	r0, [pc, #4]	; (80275cc <__sinit_lock_release+0x8>)
 80275c6:	f000 b8da 	b.w	802777e <__retarget_lock_release_recursive>
 80275ca:	bf00      	nop
 80275cc:	20014d2b 	.word	0x20014d2b

080275d0 <__sinit>:
 80275d0:	b510      	push	{r4, lr}
 80275d2:	4604      	mov	r4, r0
 80275d4:	f7ff fff0 	bl	80275b8 <__sinit_lock_acquire>
 80275d8:	69a3      	ldr	r3, [r4, #24]
 80275da:	b11b      	cbz	r3, 80275e4 <__sinit+0x14>
 80275dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80275e0:	f7ff bff0 	b.w	80275c4 <__sinit_lock_release>
 80275e4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80275e8:	6523      	str	r3, [r4, #80]	; 0x50
 80275ea:	4b13      	ldr	r3, [pc, #76]	; (8027638 <__sinit+0x68>)
 80275ec:	4a13      	ldr	r2, [pc, #76]	; (802763c <__sinit+0x6c>)
 80275ee:	681b      	ldr	r3, [r3, #0]
 80275f0:	62a2      	str	r2, [r4, #40]	; 0x28
 80275f2:	42a3      	cmp	r3, r4
 80275f4:	bf04      	itt	eq
 80275f6:	2301      	moveq	r3, #1
 80275f8:	61a3      	streq	r3, [r4, #24]
 80275fa:	4620      	mov	r0, r4
 80275fc:	f000 f820 	bl	8027640 <__sfp>
 8027600:	6060      	str	r0, [r4, #4]
 8027602:	4620      	mov	r0, r4
 8027604:	f000 f81c 	bl	8027640 <__sfp>
 8027608:	60a0      	str	r0, [r4, #8]
 802760a:	4620      	mov	r0, r4
 802760c:	f000 f818 	bl	8027640 <__sfp>
 8027610:	2200      	movs	r2, #0
 8027612:	60e0      	str	r0, [r4, #12]
 8027614:	2104      	movs	r1, #4
 8027616:	6860      	ldr	r0, [r4, #4]
 8027618:	f7ff ff82 	bl	8027520 <std>
 802761c:	68a0      	ldr	r0, [r4, #8]
 802761e:	2201      	movs	r2, #1
 8027620:	2109      	movs	r1, #9
 8027622:	f7ff ff7d 	bl	8027520 <std>
 8027626:	68e0      	ldr	r0, [r4, #12]
 8027628:	2202      	movs	r2, #2
 802762a:	2112      	movs	r1, #18
 802762c:	f7ff ff78 	bl	8027520 <std>
 8027630:	2301      	movs	r3, #1
 8027632:	61a3      	str	r3, [r4, #24]
 8027634:	e7d2      	b.n	80275dc <__sinit+0xc>
 8027636:	bf00      	nop
 8027638:	0802e41c 	.word	0x0802e41c
 802763c:	08027569 	.word	0x08027569

08027640 <__sfp>:
 8027640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027642:	4607      	mov	r7, r0
 8027644:	f7ff ffac 	bl	80275a0 <__sfp_lock_acquire>
 8027648:	4b1e      	ldr	r3, [pc, #120]	; (80276c4 <__sfp+0x84>)
 802764a:	681e      	ldr	r6, [r3, #0]
 802764c:	69b3      	ldr	r3, [r6, #24]
 802764e:	b913      	cbnz	r3, 8027656 <__sfp+0x16>
 8027650:	4630      	mov	r0, r6
 8027652:	f7ff ffbd 	bl	80275d0 <__sinit>
 8027656:	3648      	adds	r6, #72	; 0x48
 8027658:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802765c:	3b01      	subs	r3, #1
 802765e:	d503      	bpl.n	8027668 <__sfp+0x28>
 8027660:	6833      	ldr	r3, [r6, #0]
 8027662:	b30b      	cbz	r3, 80276a8 <__sfp+0x68>
 8027664:	6836      	ldr	r6, [r6, #0]
 8027666:	e7f7      	b.n	8027658 <__sfp+0x18>
 8027668:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802766c:	b9d5      	cbnz	r5, 80276a4 <__sfp+0x64>
 802766e:	4b16      	ldr	r3, [pc, #88]	; (80276c8 <__sfp+0x88>)
 8027670:	60e3      	str	r3, [r4, #12]
 8027672:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8027676:	6665      	str	r5, [r4, #100]	; 0x64
 8027678:	f000 f87e 	bl	8027778 <__retarget_lock_init_recursive>
 802767c:	f7ff ff96 	bl	80275ac <__sfp_lock_release>
 8027680:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8027684:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8027688:	6025      	str	r5, [r4, #0]
 802768a:	61a5      	str	r5, [r4, #24]
 802768c:	2208      	movs	r2, #8
 802768e:	4629      	mov	r1, r5
 8027690:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8027694:	f000 f892 	bl	80277bc <memset>
 8027698:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802769c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80276a0:	4620      	mov	r0, r4
 80276a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80276a4:	3468      	adds	r4, #104	; 0x68
 80276a6:	e7d9      	b.n	802765c <__sfp+0x1c>
 80276a8:	2104      	movs	r1, #4
 80276aa:	4638      	mov	r0, r7
 80276ac:	f7ff ff62 	bl	8027574 <__sfmoreglue>
 80276b0:	4604      	mov	r4, r0
 80276b2:	6030      	str	r0, [r6, #0]
 80276b4:	2800      	cmp	r0, #0
 80276b6:	d1d5      	bne.n	8027664 <__sfp+0x24>
 80276b8:	f7ff ff78 	bl	80275ac <__sfp_lock_release>
 80276bc:	230c      	movs	r3, #12
 80276be:	603b      	str	r3, [r7, #0]
 80276c0:	e7ee      	b.n	80276a0 <__sfp+0x60>
 80276c2:	bf00      	nop
 80276c4:	0802e41c 	.word	0x0802e41c
 80276c8:	ffff0001 	.word	0xffff0001

080276cc <fiprintf>:
 80276cc:	b40e      	push	{r1, r2, r3}
 80276ce:	b503      	push	{r0, r1, lr}
 80276d0:	4601      	mov	r1, r0
 80276d2:	ab03      	add	r3, sp, #12
 80276d4:	4805      	ldr	r0, [pc, #20]	; (80276ec <fiprintf+0x20>)
 80276d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80276da:	6800      	ldr	r0, [r0, #0]
 80276dc:	9301      	str	r3, [sp, #4]
 80276de:	f000 f97f 	bl	80279e0 <_vfiprintf_r>
 80276e2:	b002      	add	sp, #8
 80276e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80276e8:	b003      	add	sp, #12
 80276ea:	4770      	bx	lr
 80276ec:	20000120 	.word	0x20000120

080276f0 <_fwalk_reent>:
 80276f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80276f4:	4606      	mov	r6, r0
 80276f6:	4688      	mov	r8, r1
 80276f8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80276fc:	2700      	movs	r7, #0
 80276fe:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027702:	f1b9 0901 	subs.w	r9, r9, #1
 8027706:	d505      	bpl.n	8027714 <_fwalk_reent+0x24>
 8027708:	6824      	ldr	r4, [r4, #0]
 802770a:	2c00      	cmp	r4, #0
 802770c:	d1f7      	bne.n	80276fe <_fwalk_reent+0xe>
 802770e:	4638      	mov	r0, r7
 8027710:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027714:	89ab      	ldrh	r3, [r5, #12]
 8027716:	2b01      	cmp	r3, #1
 8027718:	d907      	bls.n	802772a <_fwalk_reent+0x3a>
 802771a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802771e:	3301      	adds	r3, #1
 8027720:	d003      	beq.n	802772a <_fwalk_reent+0x3a>
 8027722:	4629      	mov	r1, r5
 8027724:	4630      	mov	r0, r6
 8027726:	47c0      	blx	r8
 8027728:	4307      	orrs	r7, r0
 802772a:	3568      	adds	r5, #104	; 0x68
 802772c:	e7e9      	b.n	8027702 <_fwalk_reent+0x12>
	...

08027730 <__libc_init_array>:
 8027730:	b570      	push	{r4, r5, r6, lr}
 8027732:	4d0d      	ldr	r5, [pc, #52]	; (8027768 <__libc_init_array+0x38>)
 8027734:	4c0d      	ldr	r4, [pc, #52]	; (802776c <__libc_init_array+0x3c>)
 8027736:	1b64      	subs	r4, r4, r5
 8027738:	10a4      	asrs	r4, r4, #2
 802773a:	2600      	movs	r6, #0
 802773c:	42a6      	cmp	r6, r4
 802773e:	d109      	bne.n	8027754 <__libc_init_array+0x24>
 8027740:	4d0b      	ldr	r5, [pc, #44]	; (8027770 <__libc_init_array+0x40>)
 8027742:	4c0c      	ldr	r4, [pc, #48]	; (8027774 <__libc_init_array+0x44>)
 8027744:	f000 ffd8 	bl	80286f8 <_init>
 8027748:	1b64      	subs	r4, r4, r5
 802774a:	10a4      	asrs	r4, r4, #2
 802774c:	2600      	movs	r6, #0
 802774e:	42a6      	cmp	r6, r4
 8027750:	d105      	bne.n	802775e <__libc_init_array+0x2e>
 8027752:	bd70      	pop	{r4, r5, r6, pc}
 8027754:	f855 3b04 	ldr.w	r3, [r5], #4
 8027758:	4798      	blx	r3
 802775a:	3601      	adds	r6, #1
 802775c:	e7ee      	b.n	802773c <__libc_init_array+0xc>
 802775e:	f855 3b04 	ldr.w	r3, [r5], #4
 8027762:	4798      	blx	r3
 8027764:	3601      	adds	r6, #1
 8027766:	e7f2      	b.n	802774e <__libc_init_array+0x1e>
 8027768:	08084524 	.word	0x08084524
 802776c:	08084524 	.word	0x08084524
 8027770:	08084524 	.word	0x08084524
 8027774:	08084538 	.word	0x08084538

08027778 <__retarget_lock_init_recursive>:
 8027778:	4770      	bx	lr

0802777a <__retarget_lock_acquire_recursive>:
 802777a:	4770      	bx	lr

0802777c <__retarget_lock_release>:
 802777c:	4770      	bx	lr

0802777e <__retarget_lock_release_recursive>:
 802777e:	4770      	bx	lr

08027780 <malloc>:
 8027780:	4b02      	ldr	r3, [pc, #8]	; (802778c <malloc+0xc>)
 8027782:	4601      	mov	r1, r0
 8027784:	6818      	ldr	r0, [r3, #0]
 8027786:	f000 b88d 	b.w	80278a4 <_malloc_r>
 802778a:	bf00      	nop
 802778c:	20000120 	.word	0x20000120

08027790 <free>:
 8027790:	4b02      	ldr	r3, [pc, #8]	; (802779c <free+0xc>)
 8027792:	4601      	mov	r1, r0
 8027794:	6818      	ldr	r0, [r3, #0]
 8027796:	f000 b819 	b.w	80277cc <_free_r>
 802779a:	bf00      	nop
 802779c:	20000120 	.word	0x20000120

080277a0 <memcpy>:
 80277a0:	440a      	add	r2, r1
 80277a2:	4291      	cmp	r1, r2
 80277a4:	f100 33ff 	add.w	r3, r0, #4294967295
 80277a8:	d100      	bne.n	80277ac <memcpy+0xc>
 80277aa:	4770      	bx	lr
 80277ac:	b510      	push	{r4, lr}
 80277ae:	f811 4b01 	ldrb.w	r4, [r1], #1
 80277b2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80277b6:	4291      	cmp	r1, r2
 80277b8:	d1f9      	bne.n	80277ae <memcpy+0xe>
 80277ba:	bd10      	pop	{r4, pc}

080277bc <memset>:
 80277bc:	4402      	add	r2, r0
 80277be:	4603      	mov	r3, r0
 80277c0:	4293      	cmp	r3, r2
 80277c2:	d100      	bne.n	80277c6 <memset+0xa>
 80277c4:	4770      	bx	lr
 80277c6:	f803 1b01 	strb.w	r1, [r3], #1
 80277ca:	e7f9      	b.n	80277c0 <memset+0x4>

080277cc <_free_r>:
 80277cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80277ce:	2900      	cmp	r1, #0
 80277d0:	d044      	beq.n	802785c <_free_r+0x90>
 80277d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80277d6:	9001      	str	r0, [sp, #4]
 80277d8:	2b00      	cmp	r3, #0
 80277da:	f1a1 0404 	sub.w	r4, r1, #4
 80277de:	bfb8      	it	lt
 80277e0:	18e4      	addlt	r4, r4, r3
 80277e2:	f000 ff49 	bl	8028678 <__malloc_lock>
 80277e6:	4a1e      	ldr	r2, [pc, #120]	; (8027860 <_free_r+0x94>)
 80277e8:	9801      	ldr	r0, [sp, #4]
 80277ea:	6813      	ldr	r3, [r2, #0]
 80277ec:	b933      	cbnz	r3, 80277fc <_free_r+0x30>
 80277ee:	6063      	str	r3, [r4, #4]
 80277f0:	6014      	str	r4, [r2, #0]
 80277f2:	b003      	add	sp, #12
 80277f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80277f8:	f000 bf44 	b.w	8028684 <__malloc_unlock>
 80277fc:	42a3      	cmp	r3, r4
 80277fe:	d908      	bls.n	8027812 <_free_r+0x46>
 8027800:	6825      	ldr	r5, [r4, #0]
 8027802:	1961      	adds	r1, r4, r5
 8027804:	428b      	cmp	r3, r1
 8027806:	bf01      	itttt	eq
 8027808:	6819      	ldreq	r1, [r3, #0]
 802780a:	685b      	ldreq	r3, [r3, #4]
 802780c:	1949      	addeq	r1, r1, r5
 802780e:	6021      	streq	r1, [r4, #0]
 8027810:	e7ed      	b.n	80277ee <_free_r+0x22>
 8027812:	461a      	mov	r2, r3
 8027814:	685b      	ldr	r3, [r3, #4]
 8027816:	b10b      	cbz	r3, 802781c <_free_r+0x50>
 8027818:	42a3      	cmp	r3, r4
 802781a:	d9fa      	bls.n	8027812 <_free_r+0x46>
 802781c:	6811      	ldr	r1, [r2, #0]
 802781e:	1855      	adds	r5, r2, r1
 8027820:	42a5      	cmp	r5, r4
 8027822:	d10b      	bne.n	802783c <_free_r+0x70>
 8027824:	6824      	ldr	r4, [r4, #0]
 8027826:	4421      	add	r1, r4
 8027828:	1854      	adds	r4, r2, r1
 802782a:	42a3      	cmp	r3, r4
 802782c:	6011      	str	r1, [r2, #0]
 802782e:	d1e0      	bne.n	80277f2 <_free_r+0x26>
 8027830:	681c      	ldr	r4, [r3, #0]
 8027832:	685b      	ldr	r3, [r3, #4]
 8027834:	6053      	str	r3, [r2, #4]
 8027836:	4421      	add	r1, r4
 8027838:	6011      	str	r1, [r2, #0]
 802783a:	e7da      	b.n	80277f2 <_free_r+0x26>
 802783c:	d902      	bls.n	8027844 <_free_r+0x78>
 802783e:	230c      	movs	r3, #12
 8027840:	6003      	str	r3, [r0, #0]
 8027842:	e7d6      	b.n	80277f2 <_free_r+0x26>
 8027844:	6825      	ldr	r5, [r4, #0]
 8027846:	1961      	adds	r1, r4, r5
 8027848:	428b      	cmp	r3, r1
 802784a:	bf04      	itt	eq
 802784c:	6819      	ldreq	r1, [r3, #0]
 802784e:	685b      	ldreq	r3, [r3, #4]
 8027850:	6063      	str	r3, [r4, #4]
 8027852:	bf04      	itt	eq
 8027854:	1949      	addeq	r1, r1, r5
 8027856:	6021      	streq	r1, [r4, #0]
 8027858:	6054      	str	r4, [r2, #4]
 802785a:	e7ca      	b.n	80277f2 <_free_r+0x26>
 802785c:	b003      	add	sp, #12
 802785e:	bd30      	pop	{r4, r5, pc}
 8027860:	20014d2c 	.word	0x20014d2c

08027864 <sbrk_aligned>:
 8027864:	b570      	push	{r4, r5, r6, lr}
 8027866:	4e0e      	ldr	r6, [pc, #56]	; (80278a0 <sbrk_aligned+0x3c>)
 8027868:	460c      	mov	r4, r1
 802786a:	6831      	ldr	r1, [r6, #0]
 802786c:	4605      	mov	r5, r0
 802786e:	b911      	cbnz	r1, 8027876 <sbrk_aligned+0x12>
 8027870:	f000 fbe4 	bl	802803c <_sbrk_r>
 8027874:	6030      	str	r0, [r6, #0]
 8027876:	4621      	mov	r1, r4
 8027878:	4628      	mov	r0, r5
 802787a:	f000 fbdf 	bl	802803c <_sbrk_r>
 802787e:	1c43      	adds	r3, r0, #1
 8027880:	d00a      	beq.n	8027898 <sbrk_aligned+0x34>
 8027882:	1cc4      	adds	r4, r0, #3
 8027884:	f024 0403 	bic.w	r4, r4, #3
 8027888:	42a0      	cmp	r0, r4
 802788a:	d007      	beq.n	802789c <sbrk_aligned+0x38>
 802788c:	1a21      	subs	r1, r4, r0
 802788e:	4628      	mov	r0, r5
 8027890:	f000 fbd4 	bl	802803c <_sbrk_r>
 8027894:	3001      	adds	r0, #1
 8027896:	d101      	bne.n	802789c <sbrk_aligned+0x38>
 8027898:	f04f 34ff 	mov.w	r4, #4294967295
 802789c:	4620      	mov	r0, r4
 802789e:	bd70      	pop	{r4, r5, r6, pc}
 80278a0:	20014d30 	.word	0x20014d30

080278a4 <_malloc_r>:
 80278a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80278a8:	1ccd      	adds	r5, r1, #3
 80278aa:	f025 0503 	bic.w	r5, r5, #3
 80278ae:	3508      	adds	r5, #8
 80278b0:	2d0c      	cmp	r5, #12
 80278b2:	bf38      	it	cc
 80278b4:	250c      	movcc	r5, #12
 80278b6:	2d00      	cmp	r5, #0
 80278b8:	4607      	mov	r7, r0
 80278ba:	db01      	blt.n	80278c0 <_malloc_r+0x1c>
 80278bc:	42a9      	cmp	r1, r5
 80278be:	d905      	bls.n	80278cc <_malloc_r+0x28>
 80278c0:	230c      	movs	r3, #12
 80278c2:	603b      	str	r3, [r7, #0]
 80278c4:	2600      	movs	r6, #0
 80278c6:	4630      	mov	r0, r6
 80278c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80278cc:	4e2e      	ldr	r6, [pc, #184]	; (8027988 <_malloc_r+0xe4>)
 80278ce:	f000 fed3 	bl	8028678 <__malloc_lock>
 80278d2:	6833      	ldr	r3, [r6, #0]
 80278d4:	461c      	mov	r4, r3
 80278d6:	bb34      	cbnz	r4, 8027926 <_malloc_r+0x82>
 80278d8:	4629      	mov	r1, r5
 80278da:	4638      	mov	r0, r7
 80278dc:	f7ff ffc2 	bl	8027864 <sbrk_aligned>
 80278e0:	1c43      	adds	r3, r0, #1
 80278e2:	4604      	mov	r4, r0
 80278e4:	d14d      	bne.n	8027982 <_malloc_r+0xde>
 80278e6:	6834      	ldr	r4, [r6, #0]
 80278e8:	4626      	mov	r6, r4
 80278ea:	2e00      	cmp	r6, #0
 80278ec:	d140      	bne.n	8027970 <_malloc_r+0xcc>
 80278ee:	6823      	ldr	r3, [r4, #0]
 80278f0:	4631      	mov	r1, r6
 80278f2:	4638      	mov	r0, r7
 80278f4:	eb04 0803 	add.w	r8, r4, r3
 80278f8:	f000 fba0 	bl	802803c <_sbrk_r>
 80278fc:	4580      	cmp	r8, r0
 80278fe:	d13a      	bne.n	8027976 <_malloc_r+0xd2>
 8027900:	6821      	ldr	r1, [r4, #0]
 8027902:	3503      	adds	r5, #3
 8027904:	1a6d      	subs	r5, r5, r1
 8027906:	f025 0503 	bic.w	r5, r5, #3
 802790a:	3508      	adds	r5, #8
 802790c:	2d0c      	cmp	r5, #12
 802790e:	bf38      	it	cc
 8027910:	250c      	movcc	r5, #12
 8027912:	4629      	mov	r1, r5
 8027914:	4638      	mov	r0, r7
 8027916:	f7ff ffa5 	bl	8027864 <sbrk_aligned>
 802791a:	3001      	adds	r0, #1
 802791c:	d02b      	beq.n	8027976 <_malloc_r+0xd2>
 802791e:	6823      	ldr	r3, [r4, #0]
 8027920:	442b      	add	r3, r5
 8027922:	6023      	str	r3, [r4, #0]
 8027924:	e00e      	b.n	8027944 <_malloc_r+0xa0>
 8027926:	6822      	ldr	r2, [r4, #0]
 8027928:	1b52      	subs	r2, r2, r5
 802792a:	d41e      	bmi.n	802796a <_malloc_r+0xc6>
 802792c:	2a0b      	cmp	r2, #11
 802792e:	d916      	bls.n	802795e <_malloc_r+0xba>
 8027930:	1961      	adds	r1, r4, r5
 8027932:	42a3      	cmp	r3, r4
 8027934:	6025      	str	r5, [r4, #0]
 8027936:	bf18      	it	ne
 8027938:	6059      	strne	r1, [r3, #4]
 802793a:	6863      	ldr	r3, [r4, #4]
 802793c:	bf08      	it	eq
 802793e:	6031      	streq	r1, [r6, #0]
 8027940:	5162      	str	r2, [r4, r5]
 8027942:	604b      	str	r3, [r1, #4]
 8027944:	4638      	mov	r0, r7
 8027946:	f104 060b 	add.w	r6, r4, #11
 802794a:	f000 fe9b 	bl	8028684 <__malloc_unlock>
 802794e:	f026 0607 	bic.w	r6, r6, #7
 8027952:	1d23      	adds	r3, r4, #4
 8027954:	1af2      	subs	r2, r6, r3
 8027956:	d0b6      	beq.n	80278c6 <_malloc_r+0x22>
 8027958:	1b9b      	subs	r3, r3, r6
 802795a:	50a3      	str	r3, [r4, r2]
 802795c:	e7b3      	b.n	80278c6 <_malloc_r+0x22>
 802795e:	6862      	ldr	r2, [r4, #4]
 8027960:	42a3      	cmp	r3, r4
 8027962:	bf0c      	ite	eq
 8027964:	6032      	streq	r2, [r6, #0]
 8027966:	605a      	strne	r2, [r3, #4]
 8027968:	e7ec      	b.n	8027944 <_malloc_r+0xa0>
 802796a:	4623      	mov	r3, r4
 802796c:	6864      	ldr	r4, [r4, #4]
 802796e:	e7b2      	b.n	80278d6 <_malloc_r+0x32>
 8027970:	4634      	mov	r4, r6
 8027972:	6876      	ldr	r6, [r6, #4]
 8027974:	e7b9      	b.n	80278ea <_malloc_r+0x46>
 8027976:	230c      	movs	r3, #12
 8027978:	603b      	str	r3, [r7, #0]
 802797a:	4638      	mov	r0, r7
 802797c:	f000 fe82 	bl	8028684 <__malloc_unlock>
 8027980:	e7a1      	b.n	80278c6 <_malloc_r+0x22>
 8027982:	6025      	str	r5, [r4, #0]
 8027984:	e7de      	b.n	8027944 <_malloc_r+0xa0>
 8027986:	bf00      	nop
 8027988:	20014d2c 	.word	0x20014d2c

0802798c <__sfputc_r>:
 802798c:	6893      	ldr	r3, [r2, #8]
 802798e:	3b01      	subs	r3, #1
 8027990:	2b00      	cmp	r3, #0
 8027992:	b410      	push	{r4}
 8027994:	6093      	str	r3, [r2, #8]
 8027996:	da08      	bge.n	80279aa <__sfputc_r+0x1e>
 8027998:	6994      	ldr	r4, [r2, #24]
 802799a:	42a3      	cmp	r3, r4
 802799c:	db01      	blt.n	80279a2 <__sfputc_r+0x16>
 802799e:	290a      	cmp	r1, #10
 80279a0:	d103      	bne.n	80279aa <__sfputc_r+0x1e>
 80279a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80279a6:	f000 bbe9 	b.w	802817c <__swbuf_r>
 80279aa:	6813      	ldr	r3, [r2, #0]
 80279ac:	1c58      	adds	r0, r3, #1
 80279ae:	6010      	str	r0, [r2, #0]
 80279b0:	7019      	strb	r1, [r3, #0]
 80279b2:	4608      	mov	r0, r1
 80279b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80279b8:	4770      	bx	lr

080279ba <__sfputs_r>:
 80279ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80279bc:	4606      	mov	r6, r0
 80279be:	460f      	mov	r7, r1
 80279c0:	4614      	mov	r4, r2
 80279c2:	18d5      	adds	r5, r2, r3
 80279c4:	42ac      	cmp	r4, r5
 80279c6:	d101      	bne.n	80279cc <__sfputs_r+0x12>
 80279c8:	2000      	movs	r0, #0
 80279ca:	e007      	b.n	80279dc <__sfputs_r+0x22>
 80279cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80279d0:	463a      	mov	r2, r7
 80279d2:	4630      	mov	r0, r6
 80279d4:	f7ff ffda 	bl	802798c <__sfputc_r>
 80279d8:	1c43      	adds	r3, r0, #1
 80279da:	d1f3      	bne.n	80279c4 <__sfputs_r+0xa>
 80279dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080279e0 <_vfiprintf_r>:
 80279e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80279e4:	460d      	mov	r5, r1
 80279e6:	b09d      	sub	sp, #116	; 0x74
 80279e8:	4614      	mov	r4, r2
 80279ea:	4698      	mov	r8, r3
 80279ec:	4606      	mov	r6, r0
 80279ee:	b118      	cbz	r0, 80279f8 <_vfiprintf_r+0x18>
 80279f0:	6983      	ldr	r3, [r0, #24]
 80279f2:	b90b      	cbnz	r3, 80279f8 <_vfiprintf_r+0x18>
 80279f4:	f7ff fdec 	bl	80275d0 <__sinit>
 80279f8:	4b89      	ldr	r3, [pc, #548]	; (8027c20 <_vfiprintf_r+0x240>)
 80279fa:	429d      	cmp	r5, r3
 80279fc:	d11b      	bne.n	8027a36 <_vfiprintf_r+0x56>
 80279fe:	6875      	ldr	r5, [r6, #4]
 8027a00:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027a02:	07d9      	lsls	r1, r3, #31
 8027a04:	d405      	bmi.n	8027a12 <_vfiprintf_r+0x32>
 8027a06:	89ab      	ldrh	r3, [r5, #12]
 8027a08:	059a      	lsls	r2, r3, #22
 8027a0a:	d402      	bmi.n	8027a12 <_vfiprintf_r+0x32>
 8027a0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027a0e:	f7ff feb4 	bl	802777a <__retarget_lock_acquire_recursive>
 8027a12:	89ab      	ldrh	r3, [r5, #12]
 8027a14:	071b      	lsls	r3, r3, #28
 8027a16:	d501      	bpl.n	8027a1c <_vfiprintf_r+0x3c>
 8027a18:	692b      	ldr	r3, [r5, #16]
 8027a1a:	b9eb      	cbnz	r3, 8027a58 <_vfiprintf_r+0x78>
 8027a1c:	4629      	mov	r1, r5
 8027a1e:	4630      	mov	r0, r6
 8027a20:	f000 fc10 	bl	8028244 <__swsetup_r>
 8027a24:	b1c0      	cbz	r0, 8027a58 <_vfiprintf_r+0x78>
 8027a26:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027a28:	07dc      	lsls	r4, r3, #31
 8027a2a:	d50e      	bpl.n	8027a4a <_vfiprintf_r+0x6a>
 8027a2c:	f04f 30ff 	mov.w	r0, #4294967295
 8027a30:	b01d      	add	sp, #116	; 0x74
 8027a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a36:	4b7b      	ldr	r3, [pc, #492]	; (8027c24 <_vfiprintf_r+0x244>)
 8027a38:	429d      	cmp	r5, r3
 8027a3a:	d101      	bne.n	8027a40 <_vfiprintf_r+0x60>
 8027a3c:	68b5      	ldr	r5, [r6, #8]
 8027a3e:	e7df      	b.n	8027a00 <_vfiprintf_r+0x20>
 8027a40:	4b79      	ldr	r3, [pc, #484]	; (8027c28 <_vfiprintf_r+0x248>)
 8027a42:	429d      	cmp	r5, r3
 8027a44:	bf08      	it	eq
 8027a46:	68f5      	ldreq	r5, [r6, #12]
 8027a48:	e7da      	b.n	8027a00 <_vfiprintf_r+0x20>
 8027a4a:	89ab      	ldrh	r3, [r5, #12]
 8027a4c:	0598      	lsls	r0, r3, #22
 8027a4e:	d4ed      	bmi.n	8027a2c <_vfiprintf_r+0x4c>
 8027a50:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027a52:	f7ff fe94 	bl	802777e <__retarget_lock_release_recursive>
 8027a56:	e7e9      	b.n	8027a2c <_vfiprintf_r+0x4c>
 8027a58:	2300      	movs	r3, #0
 8027a5a:	9309      	str	r3, [sp, #36]	; 0x24
 8027a5c:	2320      	movs	r3, #32
 8027a5e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8027a62:	f8cd 800c 	str.w	r8, [sp, #12]
 8027a66:	2330      	movs	r3, #48	; 0x30
 8027a68:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8027c2c <_vfiprintf_r+0x24c>
 8027a6c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8027a70:	f04f 0901 	mov.w	r9, #1
 8027a74:	4623      	mov	r3, r4
 8027a76:	469a      	mov	sl, r3
 8027a78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8027a7c:	b10a      	cbz	r2, 8027a82 <_vfiprintf_r+0xa2>
 8027a7e:	2a25      	cmp	r2, #37	; 0x25
 8027a80:	d1f9      	bne.n	8027a76 <_vfiprintf_r+0x96>
 8027a82:	ebba 0b04 	subs.w	fp, sl, r4
 8027a86:	d00b      	beq.n	8027aa0 <_vfiprintf_r+0xc0>
 8027a88:	465b      	mov	r3, fp
 8027a8a:	4622      	mov	r2, r4
 8027a8c:	4629      	mov	r1, r5
 8027a8e:	4630      	mov	r0, r6
 8027a90:	f7ff ff93 	bl	80279ba <__sfputs_r>
 8027a94:	3001      	adds	r0, #1
 8027a96:	f000 80aa 	beq.w	8027bee <_vfiprintf_r+0x20e>
 8027a9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027a9c:	445a      	add	r2, fp
 8027a9e:	9209      	str	r2, [sp, #36]	; 0x24
 8027aa0:	f89a 3000 	ldrb.w	r3, [sl]
 8027aa4:	2b00      	cmp	r3, #0
 8027aa6:	f000 80a2 	beq.w	8027bee <_vfiprintf_r+0x20e>
 8027aaa:	2300      	movs	r3, #0
 8027aac:	f04f 32ff 	mov.w	r2, #4294967295
 8027ab0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8027ab4:	f10a 0a01 	add.w	sl, sl, #1
 8027ab8:	9304      	str	r3, [sp, #16]
 8027aba:	9307      	str	r3, [sp, #28]
 8027abc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8027ac0:	931a      	str	r3, [sp, #104]	; 0x68
 8027ac2:	4654      	mov	r4, sl
 8027ac4:	2205      	movs	r2, #5
 8027ac6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027aca:	4858      	ldr	r0, [pc, #352]	; (8027c2c <_vfiprintf_r+0x24c>)
 8027acc:	f7d8 fb98 	bl	8000200 <memchr>
 8027ad0:	9a04      	ldr	r2, [sp, #16]
 8027ad2:	b9d8      	cbnz	r0, 8027b0c <_vfiprintf_r+0x12c>
 8027ad4:	06d1      	lsls	r1, r2, #27
 8027ad6:	bf44      	itt	mi
 8027ad8:	2320      	movmi	r3, #32
 8027ada:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027ade:	0713      	lsls	r3, r2, #28
 8027ae0:	bf44      	itt	mi
 8027ae2:	232b      	movmi	r3, #43	; 0x2b
 8027ae4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027ae8:	f89a 3000 	ldrb.w	r3, [sl]
 8027aec:	2b2a      	cmp	r3, #42	; 0x2a
 8027aee:	d015      	beq.n	8027b1c <_vfiprintf_r+0x13c>
 8027af0:	9a07      	ldr	r2, [sp, #28]
 8027af2:	4654      	mov	r4, sl
 8027af4:	2000      	movs	r0, #0
 8027af6:	f04f 0c0a 	mov.w	ip, #10
 8027afa:	4621      	mov	r1, r4
 8027afc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8027b00:	3b30      	subs	r3, #48	; 0x30
 8027b02:	2b09      	cmp	r3, #9
 8027b04:	d94e      	bls.n	8027ba4 <_vfiprintf_r+0x1c4>
 8027b06:	b1b0      	cbz	r0, 8027b36 <_vfiprintf_r+0x156>
 8027b08:	9207      	str	r2, [sp, #28]
 8027b0a:	e014      	b.n	8027b36 <_vfiprintf_r+0x156>
 8027b0c:	eba0 0308 	sub.w	r3, r0, r8
 8027b10:	fa09 f303 	lsl.w	r3, r9, r3
 8027b14:	4313      	orrs	r3, r2
 8027b16:	9304      	str	r3, [sp, #16]
 8027b18:	46a2      	mov	sl, r4
 8027b1a:	e7d2      	b.n	8027ac2 <_vfiprintf_r+0xe2>
 8027b1c:	9b03      	ldr	r3, [sp, #12]
 8027b1e:	1d19      	adds	r1, r3, #4
 8027b20:	681b      	ldr	r3, [r3, #0]
 8027b22:	9103      	str	r1, [sp, #12]
 8027b24:	2b00      	cmp	r3, #0
 8027b26:	bfbb      	ittet	lt
 8027b28:	425b      	neglt	r3, r3
 8027b2a:	f042 0202 	orrlt.w	r2, r2, #2
 8027b2e:	9307      	strge	r3, [sp, #28]
 8027b30:	9307      	strlt	r3, [sp, #28]
 8027b32:	bfb8      	it	lt
 8027b34:	9204      	strlt	r2, [sp, #16]
 8027b36:	7823      	ldrb	r3, [r4, #0]
 8027b38:	2b2e      	cmp	r3, #46	; 0x2e
 8027b3a:	d10c      	bne.n	8027b56 <_vfiprintf_r+0x176>
 8027b3c:	7863      	ldrb	r3, [r4, #1]
 8027b3e:	2b2a      	cmp	r3, #42	; 0x2a
 8027b40:	d135      	bne.n	8027bae <_vfiprintf_r+0x1ce>
 8027b42:	9b03      	ldr	r3, [sp, #12]
 8027b44:	1d1a      	adds	r2, r3, #4
 8027b46:	681b      	ldr	r3, [r3, #0]
 8027b48:	9203      	str	r2, [sp, #12]
 8027b4a:	2b00      	cmp	r3, #0
 8027b4c:	bfb8      	it	lt
 8027b4e:	f04f 33ff 	movlt.w	r3, #4294967295
 8027b52:	3402      	adds	r4, #2
 8027b54:	9305      	str	r3, [sp, #20]
 8027b56:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8027c3c <_vfiprintf_r+0x25c>
 8027b5a:	7821      	ldrb	r1, [r4, #0]
 8027b5c:	2203      	movs	r2, #3
 8027b5e:	4650      	mov	r0, sl
 8027b60:	f7d8 fb4e 	bl	8000200 <memchr>
 8027b64:	b140      	cbz	r0, 8027b78 <_vfiprintf_r+0x198>
 8027b66:	2340      	movs	r3, #64	; 0x40
 8027b68:	eba0 000a 	sub.w	r0, r0, sl
 8027b6c:	fa03 f000 	lsl.w	r0, r3, r0
 8027b70:	9b04      	ldr	r3, [sp, #16]
 8027b72:	4303      	orrs	r3, r0
 8027b74:	3401      	adds	r4, #1
 8027b76:	9304      	str	r3, [sp, #16]
 8027b78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027b7c:	482c      	ldr	r0, [pc, #176]	; (8027c30 <_vfiprintf_r+0x250>)
 8027b7e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8027b82:	2206      	movs	r2, #6
 8027b84:	f7d8 fb3c 	bl	8000200 <memchr>
 8027b88:	2800      	cmp	r0, #0
 8027b8a:	d03f      	beq.n	8027c0c <_vfiprintf_r+0x22c>
 8027b8c:	4b29      	ldr	r3, [pc, #164]	; (8027c34 <_vfiprintf_r+0x254>)
 8027b8e:	bb1b      	cbnz	r3, 8027bd8 <_vfiprintf_r+0x1f8>
 8027b90:	9b03      	ldr	r3, [sp, #12]
 8027b92:	3307      	adds	r3, #7
 8027b94:	f023 0307 	bic.w	r3, r3, #7
 8027b98:	3308      	adds	r3, #8
 8027b9a:	9303      	str	r3, [sp, #12]
 8027b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027b9e:	443b      	add	r3, r7
 8027ba0:	9309      	str	r3, [sp, #36]	; 0x24
 8027ba2:	e767      	b.n	8027a74 <_vfiprintf_r+0x94>
 8027ba4:	fb0c 3202 	mla	r2, ip, r2, r3
 8027ba8:	460c      	mov	r4, r1
 8027baa:	2001      	movs	r0, #1
 8027bac:	e7a5      	b.n	8027afa <_vfiprintf_r+0x11a>
 8027bae:	2300      	movs	r3, #0
 8027bb0:	3401      	adds	r4, #1
 8027bb2:	9305      	str	r3, [sp, #20]
 8027bb4:	4619      	mov	r1, r3
 8027bb6:	f04f 0c0a 	mov.w	ip, #10
 8027bba:	4620      	mov	r0, r4
 8027bbc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8027bc0:	3a30      	subs	r2, #48	; 0x30
 8027bc2:	2a09      	cmp	r2, #9
 8027bc4:	d903      	bls.n	8027bce <_vfiprintf_r+0x1ee>
 8027bc6:	2b00      	cmp	r3, #0
 8027bc8:	d0c5      	beq.n	8027b56 <_vfiprintf_r+0x176>
 8027bca:	9105      	str	r1, [sp, #20]
 8027bcc:	e7c3      	b.n	8027b56 <_vfiprintf_r+0x176>
 8027bce:	fb0c 2101 	mla	r1, ip, r1, r2
 8027bd2:	4604      	mov	r4, r0
 8027bd4:	2301      	movs	r3, #1
 8027bd6:	e7f0      	b.n	8027bba <_vfiprintf_r+0x1da>
 8027bd8:	ab03      	add	r3, sp, #12
 8027bda:	9300      	str	r3, [sp, #0]
 8027bdc:	462a      	mov	r2, r5
 8027bde:	4b16      	ldr	r3, [pc, #88]	; (8027c38 <_vfiprintf_r+0x258>)
 8027be0:	a904      	add	r1, sp, #16
 8027be2:	4630      	mov	r0, r6
 8027be4:	f3af 8000 	nop.w
 8027be8:	4607      	mov	r7, r0
 8027bea:	1c78      	adds	r0, r7, #1
 8027bec:	d1d6      	bne.n	8027b9c <_vfiprintf_r+0x1bc>
 8027bee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027bf0:	07d9      	lsls	r1, r3, #31
 8027bf2:	d405      	bmi.n	8027c00 <_vfiprintf_r+0x220>
 8027bf4:	89ab      	ldrh	r3, [r5, #12]
 8027bf6:	059a      	lsls	r2, r3, #22
 8027bf8:	d402      	bmi.n	8027c00 <_vfiprintf_r+0x220>
 8027bfa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027bfc:	f7ff fdbf 	bl	802777e <__retarget_lock_release_recursive>
 8027c00:	89ab      	ldrh	r3, [r5, #12]
 8027c02:	065b      	lsls	r3, r3, #25
 8027c04:	f53f af12 	bmi.w	8027a2c <_vfiprintf_r+0x4c>
 8027c08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8027c0a:	e711      	b.n	8027a30 <_vfiprintf_r+0x50>
 8027c0c:	ab03      	add	r3, sp, #12
 8027c0e:	9300      	str	r3, [sp, #0]
 8027c10:	462a      	mov	r2, r5
 8027c12:	4b09      	ldr	r3, [pc, #36]	; (8027c38 <_vfiprintf_r+0x258>)
 8027c14:	a904      	add	r1, sp, #16
 8027c16:	4630      	mov	r0, r6
 8027c18:	f000 f880 	bl	8027d1c <_printf_i>
 8027c1c:	e7e4      	b.n	8027be8 <_vfiprintf_r+0x208>
 8027c1e:	bf00      	nop
 8027c20:	0802e3dc 	.word	0x0802e3dc
 8027c24:	0802e3fc 	.word	0x0802e3fc
 8027c28:	0802e3bc 	.word	0x0802e3bc
 8027c2c:	0802e420 	.word	0x0802e420
 8027c30:	0802e42a 	.word	0x0802e42a
 8027c34:	00000000 	.word	0x00000000
 8027c38:	080279bb 	.word	0x080279bb
 8027c3c:	0802e426 	.word	0x0802e426

08027c40 <_printf_common>:
 8027c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027c44:	4616      	mov	r6, r2
 8027c46:	4699      	mov	r9, r3
 8027c48:	688a      	ldr	r2, [r1, #8]
 8027c4a:	690b      	ldr	r3, [r1, #16]
 8027c4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8027c50:	4293      	cmp	r3, r2
 8027c52:	bfb8      	it	lt
 8027c54:	4613      	movlt	r3, r2
 8027c56:	6033      	str	r3, [r6, #0]
 8027c58:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8027c5c:	4607      	mov	r7, r0
 8027c5e:	460c      	mov	r4, r1
 8027c60:	b10a      	cbz	r2, 8027c66 <_printf_common+0x26>
 8027c62:	3301      	adds	r3, #1
 8027c64:	6033      	str	r3, [r6, #0]
 8027c66:	6823      	ldr	r3, [r4, #0]
 8027c68:	0699      	lsls	r1, r3, #26
 8027c6a:	bf42      	ittt	mi
 8027c6c:	6833      	ldrmi	r3, [r6, #0]
 8027c6e:	3302      	addmi	r3, #2
 8027c70:	6033      	strmi	r3, [r6, #0]
 8027c72:	6825      	ldr	r5, [r4, #0]
 8027c74:	f015 0506 	ands.w	r5, r5, #6
 8027c78:	d106      	bne.n	8027c88 <_printf_common+0x48>
 8027c7a:	f104 0a19 	add.w	sl, r4, #25
 8027c7e:	68e3      	ldr	r3, [r4, #12]
 8027c80:	6832      	ldr	r2, [r6, #0]
 8027c82:	1a9b      	subs	r3, r3, r2
 8027c84:	42ab      	cmp	r3, r5
 8027c86:	dc26      	bgt.n	8027cd6 <_printf_common+0x96>
 8027c88:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8027c8c:	1e13      	subs	r3, r2, #0
 8027c8e:	6822      	ldr	r2, [r4, #0]
 8027c90:	bf18      	it	ne
 8027c92:	2301      	movne	r3, #1
 8027c94:	0692      	lsls	r2, r2, #26
 8027c96:	d42b      	bmi.n	8027cf0 <_printf_common+0xb0>
 8027c98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8027c9c:	4649      	mov	r1, r9
 8027c9e:	4638      	mov	r0, r7
 8027ca0:	47c0      	blx	r8
 8027ca2:	3001      	adds	r0, #1
 8027ca4:	d01e      	beq.n	8027ce4 <_printf_common+0xa4>
 8027ca6:	6823      	ldr	r3, [r4, #0]
 8027ca8:	68e5      	ldr	r5, [r4, #12]
 8027caa:	6832      	ldr	r2, [r6, #0]
 8027cac:	f003 0306 	and.w	r3, r3, #6
 8027cb0:	2b04      	cmp	r3, #4
 8027cb2:	bf08      	it	eq
 8027cb4:	1aad      	subeq	r5, r5, r2
 8027cb6:	68a3      	ldr	r3, [r4, #8]
 8027cb8:	6922      	ldr	r2, [r4, #16]
 8027cba:	bf0c      	ite	eq
 8027cbc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8027cc0:	2500      	movne	r5, #0
 8027cc2:	4293      	cmp	r3, r2
 8027cc4:	bfc4      	itt	gt
 8027cc6:	1a9b      	subgt	r3, r3, r2
 8027cc8:	18ed      	addgt	r5, r5, r3
 8027cca:	2600      	movs	r6, #0
 8027ccc:	341a      	adds	r4, #26
 8027cce:	42b5      	cmp	r5, r6
 8027cd0:	d11a      	bne.n	8027d08 <_printf_common+0xc8>
 8027cd2:	2000      	movs	r0, #0
 8027cd4:	e008      	b.n	8027ce8 <_printf_common+0xa8>
 8027cd6:	2301      	movs	r3, #1
 8027cd8:	4652      	mov	r2, sl
 8027cda:	4649      	mov	r1, r9
 8027cdc:	4638      	mov	r0, r7
 8027cde:	47c0      	blx	r8
 8027ce0:	3001      	adds	r0, #1
 8027ce2:	d103      	bne.n	8027cec <_printf_common+0xac>
 8027ce4:	f04f 30ff 	mov.w	r0, #4294967295
 8027ce8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027cec:	3501      	adds	r5, #1
 8027cee:	e7c6      	b.n	8027c7e <_printf_common+0x3e>
 8027cf0:	18e1      	adds	r1, r4, r3
 8027cf2:	1c5a      	adds	r2, r3, #1
 8027cf4:	2030      	movs	r0, #48	; 0x30
 8027cf6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8027cfa:	4422      	add	r2, r4
 8027cfc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8027d00:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8027d04:	3302      	adds	r3, #2
 8027d06:	e7c7      	b.n	8027c98 <_printf_common+0x58>
 8027d08:	2301      	movs	r3, #1
 8027d0a:	4622      	mov	r2, r4
 8027d0c:	4649      	mov	r1, r9
 8027d0e:	4638      	mov	r0, r7
 8027d10:	47c0      	blx	r8
 8027d12:	3001      	adds	r0, #1
 8027d14:	d0e6      	beq.n	8027ce4 <_printf_common+0xa4>
 8027d16:	3601      	adds	r6, #1
 8027d18:	e7d9      	b.n	8027cce <_printf_common+0x8e>
	...

08027d1c <_printf_i>:
 8027d1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8027d20:	7e0f      	ldrb	r7, [r1, #24]
 8027d22:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027d24:	2f78      	cmp	r7, #120	; 0x78
 8027d26:	4691      	mov	r9, r2
 8027d28:	4680      	mov	r8, r0
 8027d2a:	460c      	mov	r4, r1
 8027d2c:	469a      	mov	sl, r3
 8027d2e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8027d32:	d807      	bhi.n	8027d44 <_printf_i+0x28>
 8027d34:	2f62      	cmp	r7, #98	; 0x62
 8027d36:	d80a      	bhi.n	8027d4e <_printf_i+0x32>
 8027d38:	2f00      	cmp	r7, #0
 8027d3a:	f000 80d8 	beq.w	8027eee <_printf_i+0x1d2>
 8027d3e:	2f58      	cmp	r7, #88	; 0x58
 8027d40:	f000 80a3 	beq.w	8027e8a <_printf_i+0x16e>
 8027d44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027d48:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8027d4c:	e03a      	b.n	8027dc4 <_printf_i+0xa8>
 8027d4e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8027d52:	2b15      	cmp	r3, #21
 8027d54:	d8f6      	bhi.n	8027d44 <_printf_i+0x28>
 8027d56:	a101      	add	r1, pc, #4	; (adr r1, 8027d5c <_printf_i+0x40>)
 8027d58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8027d5c:	08027db5 	.word	0x08027db5
 8027d60:	08027dc9 	.word	0x08027dc9
 8027d64:	08027d45 	.word	0x08027d45
 8027d68:	08027d45 	.word	0x08027d45
 8027d6c:	08027d45 	.word	0x08027d45
 8027d70:	08027d45 	.word	0x08027d45
 8027d74:	08027dc9 	.word	0x08027dc9
 8027d78:	08027d45 	.word	0x08027d45
 8027d7c:	08027d45 	.word	0x08027d45
 8027d80:	08027d45 	.word	0x08027d45
 8027d84:	08027d45 	.word	0x08027d45
 8027d88:	08027ed5 	.word	0x08027ed5
 8027d8c:	08027df9 	.word	0x08027df9
 8027d90:	08027eb7 	.word	0x08027eb7
 8027d94:	08027d45 	.word	0x08027d45
 8027d98:	08027d45 	.word	0x08027d45
 8027d9c:	08027ef7 	.word	0x08027ef7
 8027da0:	08027d45 	.word	0x08027d45
 8027da4:	08027df9 	.word	0x08027df9
 8027da8:	08027d45 	.word	0x08027d45
 8027dac:	08027d45 	.word	0x08027d45
 8027db0:	08027ebf 	.word	0x08027ebf
 8027db4:	682b      	ldr	r3, [r5, #0]
 8027db6:	1d1a      	adds	r2, r3, #4
 8027db8:	681b      	ldr	r3, [r3, #0]
 8027dba:	602a      	str	r2, [r5, #0]
 8027dbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027dc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8027dc4:	2301      	movs	r3, #1
 8027dc6:	e0a3      	b.n	8027f10 <_printf_i+0x1f4>
 8027dc8:	6820      	ldr	r0, [r4, #0]
 8027dca:	6829      	ldr	r1, [r5, #0]
 8027dcc:	0606      	lsls	r6, r0, #24
 8027dce:	f101 0304 	add.w	r3, r1, #4
 8027dd2:	d50a      	bpl.n	8027dea <_printf_i+0xce>
 8027dd4:	680e      	ldr	r6, [r1, #0]
 8027dd6:	602b      	str	r3, [r5, #0]
 8027dd8:	2e00      	cmp	r6, #0
 8027dda:	da03      	bge.n	8027de4 <_printf_i+0xc8>
 8027ddc:	232d      	movs	r3, #45	; 0x2d
 8027dde:	4276      	negs	r6, r6
 8027de0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8027de4:	485e      	ldr	r0, [pc, #376]	; (8027f60 <_printf_i+0x244>)
 8027de6:	230a      	movs	r3, #10
 8027de8:	e019      	b.n	8027e1e <_printf_i+0x102>
 8027dea:	680e      	ldr	r6, [r1, #0]
 8027dec:	602b      	str	r3, [r5, #0]
 8027dee:	f010 0f40 	tst.w	r0, #64	; 0x40
 8027df2:	bf18      	it	ne
 8027df4:	b236      	sxthne	r6, r6
 8027df6:	e7ef      	b.n	8027dd8 <_printf_i+0xbc>
 8027df8:	682b      	ldr	r3, [r5, #0]
 8027dfa:	6820      	ldr	r0, [r4, #0]
 8027dfc:	1d19      	adds	r1, r3, #4
 8027dfe:	6029      	str	r1, [r5, #0]
 8027e00:	0601      	lsls	r1, r0, #24
 8027e02:	d501      	bpl.n	8027e08 <_printf_i+0xec>
 8027e04:	681e      	ldr	r6, [r3, #0]
 8027e06:	e002      	b.n	8027e0e <_printf_i+0xf2>
 8027e08:	0646      	lsls	r6, r0, #25
 8027e0a:	d5fb      	bpl.n	8027e04 <_printf_i+0xe8>
 8027e0c:	881e      	ldrh	r6, [r3, #0]
 8027e0e:	4854      	ldr	r0, [pc, #336]	; (8027f60 <_printf_i+0x244>)
 8027e10:	2f6f      	cmp	r7, #111	; 0x6f
 8027e12:	bf0c      	ite	eq
 8027e14:	2308      	moveq	r3, #8
 8027e16:	230a      	movne	r3, #10
 8027e18:	2100      	movs	r1, #0
 8027e1a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8027e1e:	6865      	ldr	r5, [r4, #4]
 8027e20:	60a5      	str	r5, [r4, #8]
 8027e22:	2d00      	cmp	r5, #0
 8027e24:	bfa2      	ittt	ge
 8027e26:	6821      	ldrge	r1, [r4, #0]
 8027e28:	f021 0104 	bicge.w	r1, r1, #4
 8027e2c:	6021      	strge	r1, [r4, #0]
 8027e2e:	b90e      	cbnz	r6, 8027e34 <_printf_i+0x118>
 8027e30:	2d00      	cmp	r5, #0
 8027e32:	d04d      	beq.n	8027ed0 <_printf_i+0x1b4>
 8027e34:	4615      	mov	r5, r2
 8027e36:	fbb6 f1f3 	udiv	r1, r6, r3
 8027e3a:	fb03 6711 	mls	r7, r3, r1, r6
 8027e3e:	5dc7      	ldrb	r7, [r0, r7]
 8027e40:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8027e44:	4637      	mov	r7, r6
 8027e46:	42bb      	cmp	r3, r7
 8027e48:	460e      	mov	r6, r1
 8027e4a:	d9f4      	bls.n	8027e36 <_printf_i+0x11a>
 8027e4c:	2b08      	cmp	r3, #8
 8027e4e:	d10b      	bne.n	8027e68 <_printf_i+0x14c>
 8027e50:	6823      	ldr	r3, [r4, #0]
 8027e52:	07de      	lsls	r6, r3, #31
 8027e54:	d508      	bpl.n	8027e68 <_printf_i+0x14c>
 8027e56:	6923      	ldr	r3, [r4, #16]
 8027e58:	6861      	ldr	r1, [r4, #4]
 8027e5a:	4299      	cmp	r1, r3
 8027e5c:	bfde      	ittt	le
 8027e5e:	2330      	movle	r3, #48	; 0x30
 8027e60:	f805 3c01 	strble.w	r3, [r5, #-1]
 8027e64:	f105 35ff 	addle.w	r5, r5, #4294967295
 8027e68:	1b52      	subs	r2, r2, r5
 8027e6a:	6122      	str	r2, [r4, #16]
 8027e6c:	f8cd a000 	str.w	sl, [sp]
 8027e70:	464b      	mov	r3, r9
 8027e72:	aa03      	add	r2, sp, #12
 8027e74:	4621      	mov	r1, r4
 8027e76:	4640      	mov	r0, r8
 8027e78:	f7ff fee2 	bl	8027c40 <_printf_common>
 8027e7c:	3001      	adds	r0, #1
 8027e7e:	d14c      	bne.n	8027f1a <_printf_i+0x1fe>
 8027e80:	f04f 30ff 	mov.w	r0, #4294967295
 8027e84:	b004      	add	sp, #16
 8027e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027e8a:	4835      	ldr	r0, [pc, #212]	; (8027f60 <_printf_i+0x244>)
 8027e8c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8027e90:	6829      	ldr	r1, [r5, #0]
 8027e92:	6823      	ldr	r3, [r4, #0]
 8027e94:	f851 6b04 	ldr.w	r6, [r1], #4
 8027e98:	6029      	str	r1, [r5, #0]
 8027e9a:	061d      	lsls	r5, r3, #24
 8027e9c:	d514      	bpl.n	8027ec8 <_printf_i+0x1ac>
 8027e9e:	07df      	lsls	r7, r3, #31
 8027ea0:	bf44      	itt	mi
 8027ea2:	f043 0320 	orrmi.w	r3, r3, #32
 8027ea6:	6023      	strmi	r3, [r4, #0]
 8027ea8:	b91e      	cbnz	r6, 8027eb2 <_printf_i+0x196>
 8027eaa:	6823      	ldr	r3, [r4, #0]
 8027eac:	f023 0320 	bic.w	r3, r3, #32
 8027eb0:	6023      	str	r3, [r4, #0]
 8027eb2:	2310      	movs	r3, #16
 8027eb4:	e7b0      	b.n	8027e18 <_printf_i+0xfc>
 8027eb6:	6823      	ldr	r3, [r4, #0]
 8027eb8:	f043 0320 	orr.w	r3, r3, #32
 8027ebc:	6023      	str	r3, [r4, #0]
 8027ebe:	2378      	movs	r3, #120	; 0x78
 8027ec0:	4828      	ldr	r0, [pc, #160]	; (8027f64 <_printf_i+0x248>)
 8027ec2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8027ec6:	e7e3      	b.n	8027e90 <_printf_i+0x174>
 8027ec8:	0659      	lsls	r1, r3, #25
 8027eca:	bf48      	it	mi
 8027ecc:	b2b6      	uxthmi	r6, r6
 8027ece:	e7e6      	b.n	8027e9e <_printf_i+0x182>
 8027ed0:	4615      	mov	r5, r2
 8027ed2:	e7bb      	b.n	8027e4c <_printf_i+0x130>
 8027ed4:	682b      	ldr	r3, [r5, #0]
 8027ed6:	6826      	ldr	r6, [r4, #0]
 8027ed8:	6961      	ldr	r1, [r4, #20]
 8027eda:	1d18      	adds	r0, r3, #4
 8027edc:	6028      	str	r0, [r5, #0]
 8027ede:	0635      	lsls	r5, r6, #24
 8027ee0:	681b      	ldr	r3, [r3, #0]
 8027ee2:	d501      	bpl.n	8027ee8 <_printf_i+0x1cc>
 8027ee4:	6019      	str	r1, [r3, #0]
 8027ee6:	e002      	b.n	8027eee <_printf_i+0x1d2>
 8027ee8:	0670      	lsls	r0, r6, #25
 8027eea:	d5fb      	bpl.n	8027ee4 <_printf_i+0x1c8>
 8027eec:	8019      	strh	r1, [r3, #0]
 8027eee:	2300      	movs	r3, #0
 8027ef0:	6123      	str	r3, [r4, #16]
 8027ef2:	4615      	mov	r5, r2
 8027ef4:	e7ba      	b.n	8027e6c <_printf_i+0x150>
 8027ef6:	682b      	ldr	r3, [r5, #0]
 8027ef8:	1d1a      	adds	r2, r3, #4
 8027efa:	602a      	str	r2, [r5, #0]
 8027efc:	681d      	ldr	r5, [r3, #0]
 8027efe:	6862      	ldr	r2, [r4, #4]
 8027f00:	2100      	movs	r1, #0
 8027f02:	4628      	mov	r0, r5
 8027f04:	f7d8 f97c 	bl	8000200 <memchr>
 8027f08:	b108      	cbz	r0, 8027f0e <_printf_i+0x1f2>
 8027f0a:	1b40      	subs	r0, r0, r5
 8027f0c:	6060      	str	r0, [r4, #4]
 8027f0e:	6863      	ldr	r3, [r4, #4]
 8027f10:	6123      	str	r3, [r4, #16]
 8027f12:	2300      	movs	r3, #0
 8027f14:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8027f18:	e7a8      	b.n	8027e6c <_printf_i+0x150>
 8027f1a:	6923      	ldr	r3, [r4, #16]
 8027f1c:	462a      	mov	r2, r5
 8027f1e:	4649      	mov	r1, r9
 8027f20:	4640      	mov	r0, r8
 8027f22:	47d0      	blx	sl
 8027f24:	3001      	adds	r0, #1
 8027f26:	d0ab      	beq.n	8027e80 <_printf_i+0x164>
 8027f28:	6823      	ldr	r3, [r4, #0]
 8027f2a:	079b      	lsls	r3, r3, #30
 8027f2c:	d413      	bmi.n	8027f56 <_printf_i+0x23a>
 8027f2e:	68e0      	ldr	r0, [r4, #12]
 8027f30:	9b03      	ldr	r3, [sp, #12]
 8027f32:	4298      	cmp	r0, r3
 8027f34:	bfb8      	it	lt
 8027f36:	4618      	movlt	r0, r3
 8027f38:	e7a4      	b.n	8027e84 <_printf_i+0x168>
 8027f3a:	2301      	movs	r3, #1
 8027f3c:	4632      	mov	r2, r6
 8027f3e:	4649      	mov	r1, r9
 8027f40:	4640      	mov	r0, r8
 8027f42:	47d0      	blx	sl
 8027f44:	3001      	adds	r0, #1
 8027f46:	d09b      	beq.n	8027e80 <_printf_i+0x164>
 8027f48:	3501      	adds	r5, #1
 8027f4a:	68e3      	ldr	r3, [r4, #12]
 8027f4c:	9903      	ldr	r1, [sp, #12]
 8027f4e:	1a5b      	subs	r3, r3, r1
 8027f50:	42ab      	cmp	r3, r5
 8027f52:	dcf2      	bgt.n	8027f3a <_printf_i+0x21e>
 8027f54:	e7eb      	b.n	8027f2e <_printf_i+0x212>
 8027f56:	2500      	movs	r5, #0
 8027f58:	f104 0619 	add.w	r6, r4, #25
 8027f5c:	e7f5      	b.n	8027f4a <_printf_i+0x22e>
 8027f5e:	bf00      	nop
 8027f60:	0802e431 	.word	0x0802e431
 8027f64:	0802e442 	.word	0x0802e442

08027f68 <cleanup_glue>:
 8027f68:	b538      	push	{r3, r4, r5, lr}
 8027f6a:	460c      	mov	r4, r1
 8027f6c:	6809      	ldr	r1, [r1, #0]
 8027f6e:	4605      	mov	r5, r0
 8027f70:	b109      	cbz	r1, 8027f76 <cleanup_glue+0xe>
 8027f72:	f7ff fff9 	bl	8027f68 <cleanup_glue>
 8027f76:	4621      	mov	r1, r4
 8027f78:	4628      	mov	r0, r5
 8027f7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8027f7e:	f7ff bc25 	b.w	80277cc <_free_r>
	...

08027f84 <_reclaim_reent>:
 8027f84:	4b2c      	ldr	r3, [pc, #176]	; (8028038 <_reclaim_reent+0xb4>)
 8027f86:	681b      	ldr	r3, [r3, #0]
 8027f88:	4283      	cmp	r3, r0
 8027f8a:	b570      	push	{r4, r5, r6, lr}
 8027f8c:	4604      	mov	r4, r0
 8027f8e:	d051      	beq.n	8028034 <_reclaim_reent+0xb0>
 8027f90:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8027f92:	b143      	cbz	r3, 8027fa6 <_reclaim_reent+0x22>
 8027f94:	68db      	ldr	r3, [r3, #12]
 8027f96:	2b00      	cmp	r3, #0
 8027f98:	d14a      	bne.n	8028030 <_reclaim_reent+0xac>
 8027f9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027f9c:	6819      	ldr	r1, [r3, #0]
 8027f9e:	b111      	cbz	r1, 8027fa6 <_reclaim_reent+0x22>
 8027fa0:	4620      	mov	r0, r4
 8027fa2:	f7ff fc13 	bl	80277cc <_free_r>
 8027fa6:	6961      	ldr	r1, [r4, #20]
 8027fa8:	b111      	cbz	r1, 8027fb0 <_reclaim_reent+0x2c>
 8027faa:	4620      	mov	r0, r4
 8027fac:	f7ff fc0e 	bl	80277cc <_free_r>
 8027fb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8027fb2:	b111      	cbz	r1, 8027fba <_reclaim_reent+0x36>
 8027fb4:	4620      	mov	r0, r4
 8027fb6:	f7ff fc09 	bl	80277cc <_free_r>
 8027fba:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8027fbc:	b111      	cbz	r1, 8027fc4 <_reclaim_reent+0x40>
 8027fbe:	4620      	mov	r0, r4
 8027fc0:	f7ff fc04 	bl	80277cc <_free_r>
 8027fc4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8027fc6:	b111      	cbz	r1, 8027fce <_reclaim_reent+0x4a>
 8027fc8:	4620      	mov	r0, r4
 8027fca:	f7ff fbff 	bl	80277cc <_free_r>
 8027fce:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8027fd0:	b111      	cbz	r1, 8027fd8 <_reclaim_reent+0x54>
 8027fd2:	4620      	mov	r0, r4
 8027fd4:	f7ff fbfa 	bl	80277cc <_free_r>
 8027fd8:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8027fda:	b111      	cbz	r1, 8027fe2 <_reclaim_reent+0x5e>
 8027fdc:	4620      	mov	r0, r4
 8027fde:	f7ff fbf5 	bl	80277cc <_free_r>
 8027fe2:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8027fe4:	b111      	cbz	r1, 8027fec <_reclaim_reent+0x68>
 8027fe6:	4620      	mov	r0, r4
 8027fe8:	f7ff fbf0 	bl	80277cc <_free_r>
 8027fec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8027fee:	b111      	cbz	r1, 8027ff6 <_reclaim_reent+0x72>
 8027ff0:	4620      	mov	r0, r4
 8027ff2:	f7ff fbeb 	bl	80277cc <_free_r>
 8027ff6:	69a3      	ldr	r3, [r4, #24]
 8027ff8:	b1e3      	cbz	r3, 8028034 <_reclaim_reent+0xb0>
 8027ffa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8027ffc:	4620      	mov	r0, r4
 8027ffe:	4798      	blx	r3
 8028000:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8028002:	b1b9      	cbz	r1, 8028034 <_reclaim_reent+0xb0>
 8028004:	4620      	mov	r0, r4
 8028006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802800a:	f7ff bfad 	b.w	8027f68 <cleanup_glue>
 802800e:	5949      	ldr	r1, [r1, r5]
 8028010:	b941      	cbnz	r1, 8028024 <_reclaim_reent+0xa0>
 8028012:	3504      	adds	r5, #4
 8028014:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8028016:	2d80      	cmp	r5, #128	; 0x80
 8028018:	68d9      	ldr	r1, [r3, #12]
 802801a:	d1f8      	bne.n	802800e <_reclaim_reent+0x8a>
 802801c:	4620      	mov	r0, r4
 802801e:	f7ff fbd5 	bl	80277cc <_free_r>
 8028022:	e7ba      	b.n	8027f9a <_reclaim_reent+0x16>
 8028024:	680e      	ldr	r6, [r1, #0]
 8028026:	4620      	mov	r0, r4
 8028028:	f7ff fbd0 	bl	80277cc <_free_r>
 802802c:	4631      	mov	r1, r6
 802802e:	e7ef      	b.n	8028010 <_reclaim_reent+0x8c>
 8028030:	2500      	movs	r5, #0
 8028032:	e7ef      	b.n	8028014 <_reclaim_reent+0x90>
 8028034:	bd70      	pop	{r4, r5, r6, pc}
 8028036:	bf00      	nop
 8028038:	20000120 	.word	0x20000120

0802803c <_sbrk_r>:
 802803c:	b538      	push	{r3, r4, r5, lr}
 802803e:	4d06      	ldr	r5, [pc, #24]	; (8028058 <_sbrk_r+0x1c>)
 8028040:	2300      	movs	r3, #0
 8028042:	4604      	mov	r4, r0
 8028044:	4608      	mov	r0, r1
 8028046:	602b      	str	r3, [r5, #0]
 8028048:	f7d9 fcfc 	bl	8001a44 <_sbrk>
 802804c:	1c43      	adds	r3, r0, #1
 802804e:	d102      	bne.n	8028056 <_sbrk_r+0x1a>
 8028050:	682b      	ldr	r3, [r5, #0]
 8028052:	b103      	cbz	r3, 8028056 <_sbrk_r+0x1a>
 8028054:	6023      	str	r3, [r4, #0]
 8028056:	bd38      	pop	{r3, r4, r5, pc}
 8028058:	20014e3c 	.word	0x20014e3c

0802805c <_raise_r>:
 802805c:	291f      	cmp	r1, #31
 802805e:	b538      	push	{r3, r4, r5, lr}
 8028060:	4604      	mov	r4, r0
 8028062:	460d      	mov	r5, r1
 8028064:	d904      	bls.n	8028070 <_raise_r+0x14>
 8028066:	2316      	movs	r3, #22
 8028068:	6003      	str	r3, [r0, #0]
 802806a:	f04f 30ff 	mov.w	r0, #4294967295
 802806e:	bd38      	pop	{r3, r4, r5, pc}
 8028070:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8028072:	b112      	cbz	r2, 802807a <_raise_r+0x1e>
 8028074:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8028078:	b94b      	cbnz	r3, 802808e <_raise_r+0x32>
 802807a:	4620      	mov	r0, r4
 802807c:	f000 f830 	bl	80280e0 <_getpid_r>
 8028080:	462a      	mov	r2, r5
 8028082:	4601      	mov	r1, r0
 8028084:	4620      	mov	r0, r4
 8028086:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802808a:	f000 b817 	b.w	80280bc <_kill_r>
 802808e:	2b01      	cmp	r3, #1
 8028090:	d00a      	beq.n	80280a8 <_raise_r+0x4c>
 8028092:	1c59      	adds	r1, r3, #1
 8028094:	d103      	bne.n	802809e <_raise_r+0x42>
 8028096:	2316      	movs	r3, #22
 8028098:	6003      	str	r3, [r0, #0]
 802809a:	2001      	movs	r0, #1
 802809c:	e7e7      	b.n	802806e <_raise_r+0x12>
 802809e:	2400      	movs	r4, #0
 80280a0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80280a4:	4628      	mov	r0, r5
 80280a6:	4798      	blx	r3
 80280a8:	2000      	movs	r0, #0
 80280aa:	e7e0      	b.n	802806e <_raise_r+0x12>

080280ac <raise>:
 80280ac:	4b02      	ldr	r3, [pc, #8]	; (80280b8 <raise+0xc>)
 80280ae:	4601      	mov	r1, r0
 80280b0:	6818      	ldr	r0, [r3, #0]
 80280b2:	f7ff bfd3 	b.w	802805c <_raise_r>
 80280b6:	bf00      	nop
 80280b8:	20000120 	.word	0x20000120

080280bc <_kill_r>:
 80280bc:	b538      	push	{r3, r4, r5, lr}
 80280be:	4d07      	ldr	r5, [pc, #28]	; (80280dc <_kill_r+0x20>)
 80280c0:	2300      	movs	r3, #0
 80280c2:	4604      	mov	r4, r0
 80280c4:	4608      	mov	r0, r1
 80280c6:	4611      	mov	r1, r2
 80280c8:	602b      	str	r3, [r5, #0]
 80280ca:	f7d9 fc85 	bl	80019d8 <_kill>
 80280ce:	1c43      	adds	r3, r0, #1
 80280d0:	d102      	bne.n	80280d8 <_kill_r+0x1c>
 80280d2:	682b      	ldr	r3, [r5, #0]
 80280d4:	b103      	cbz	r3, 80280d8 <_kill_r+0x1c>
 80280d6:	6023      	str	r3, [r4, #0]
 80280d8:	bd38      	pop	{r3, r4, r5, pc}
 80280da:	bf00      	nop
 80280dc:	20014e3c 	.word	0x20014e3c

080280e0 <_getpid_r>:
 80280e0:	f7d9 bc78 	b.w	80019d4 <_getpid>

080280e4 <__sread>:
 80280e4:	b510      	push	{r4, lr}
 80280e6:	460c      	mov	r4, r1
 80280e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80280ec:	f000 fad0 	bl	8028690 <_read_r>
 80280f0:	2800      	cmp	r0, #0
 80280f2:	bfab      	itete	ge
 80280f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80280f6:	89a3      	ldrhlt	r3, [r4, #12]
 80280f8:	181b      	addge	r3, r3, r0
 80280fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80280fe:	bfac      	ite	ge
 8028100:	6563      	strge	r3, [r4, #84]	; 0x54
 8028102:	81a3      	strhlt	r3, [r4, #12]
 8028104:	bd10      	pop	{r4, pc}

08028106 <__swrite>:
 8028106:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802810a:	461f      	mov	r7, r3
 802810c:	898b      	ldrh	r3, [r1, #12]
 802810e:	05db      	lsls	r3, r3, #23
 8028110:	4605      	mov	r5, r0
 8028112:	460c      	mov	r4, r1
 8028114:	4616      	mov	r6, r2
 8028116:	d505      	bpl.n	8028124 <__swrite+0x1e>
 8028118:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802811c:	2302      	movs	r3, #2
 802811e:	2200      	movs	r2, #0
 8028120:	f000 fa32 	bl	8028588 <_lseek_r>
 8028124:	89a3      	ldrh	r3, [r4, #12]
 8028126:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802812a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802812e:	81a3      	strh	r3, [r4, #12]
 8028130:	4632      	mov	r2, r6
 8028132:	463b      	mov	r3, r7
 8028134:	4628      	mov	r0, r5
 8028136:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802813a:	f000 b871 	b.w	8028220 <_write_r>

0802813e <__sseek>:
 802813e:	b510      	push	{r4, lr}
 8028140:	460c      	mov	r4, r1
 8028142:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028146:	f000 fa1f 	bl	8028588 <_lseek_r>
 802814a:	1c43      	adds	r3, r0, #1
 802814c:	89a3      	ldrh	r3, [r4, #12]
 802814e:	bf15      	itete	ne
 8028150:	6560      	strne	r0, [r4, #84]	; 0x54
 8028152:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8028156:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802815a:	81a3      	strheq	r3, [r4, #12]
 802815c:	bf18      	it	ne
 802815e:	81a3      	strhne	r3, [r4, #12]
 8028160:	bd10      	pop	{r4, pc}

08028162 <__sclose>:
 8028162:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028166:	f000 b93d 	b.w	80283e4 <_close_r>

0802816a <strcpy>:
 802816a:	4603      	mov	r3, r0
 802816c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8028170:	f803 2b01 	strb.w	r2, [r3], #1
 8028174:	2a00      	cmp	r2, #0
 8028176:	d1f9      	bne.n	802816c <strcpy+0x2>
 8028178:	4770      	bx	lr
	...

0802817c <__swbuf_r>:
 802817c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802817e:	460e      	mov	r6, r1
 8028180:	4614      	mov	r4, r2
 8028182:	4605      	mov	r5, r0
 8028184:	b118      	cbz	r0, 802818e <__swbuf_r+0x12>
 8028186:	6983      	ldr	r3, [r0, #24]
 8028188:	b90b      	cbnz	r3, 802818e <__swbuf_r+0x12>
 802818a:	f7ff fa21 	bl	80275d0 <__sinit>
 802818e:	4b21      	ldr	r3, [pc, #132]	; (8028214 <__swbuf_r+0x98>)
 8028190:	429c      	cmp	r4, r3
 8028192:	d12b      	bne.n	80281ec <__swbuf_r+0x70>
 8028194:	686c      	ldr	r4, [r5, #4]
 8028196:	69a3      	ldr	r3, [r4, #24]
 8028198:	60a3      	str	r3, [r4, #8]
 802819a:	89a3      	ldrh	r3, [r4, #12]
 802819c:	071a      	lsls	r2, r3, #28
 802819e:	d52f      	bpl.n	8028200 <__swbuf_r+0x84>
 80281a0:	6923      	ldr	r3, [r4, #16]
 80281a2:	b36b      	cbz	r3, 8028200 <__swbuf_r+0x84>
 80281a4:	6923      	ldr	r3, [r4, #16]
 80281a6:	6820      	ldr	r0, [r4, #0]
 80281a8:	1ac0      	subs	r0, r0, r3
 80281aa:	6963      	ldr	r3, [r4, #20]
 80281ac:	b2f6      	uxtb	r6, r6
 80281ae:	4283      	cmp	r3, r0
 80281b0:	4637      	mov	r7, r6
 80281b2:	dc04      	bgt.n	80281be <__swbuf_r+0x42>
 80281b4:	4621      	mov	r1, r4
 80281b6:	4628      	mov	r0, r5
 80281b8:	f000 f9aa 	bl	8028510 <_fflush_r>
 80281bc:	bb30      	cbnz	r0, 802820c <__swbuf_r+0x90>
 80281be:	68a3      	ldr	r3, [r4, #8]
 80281c0:	3b01      	subs	r3, #1
 80281c2:	60a3      	str	r3, [r4, #8]
 80281c4:	6823      	ldr	r3, [r4, #0]
 80281c6:	1c5a      	adds	r2, r3, #1
 80281c8:	6022      	str	r2, [r4, #0]
 80281ca:	701e      	strb	r6, [r3, #0]
 80281cc:	6963      	ldr	r3, [r4, #20]
 80281ce:	3001      	adds	r0, #1
 80281d0:	4283      	cmp	r3, r0
 80281d2:	d004      	beq.n	80281de <__swbuf_r+0x62>
 80281d4:	89a3      	ldrh	r3, [r4, #12]
 80281d6:	07db      	lsls	r3, r3, #31
 80281d8:	d506      	bpl.n	80281e8 <__swbuf_r+0x6c>
 80281da:	2e0a      	cmp	r6, #10
 80281dc:	d104      	bne.n	80281e8 <__swbuf_r+0x6c>
 80281de:	4621      	mov	r1, r4
 80281e0:	4628      	mov	r0, r5
 80281e2:	f000 f995 	bl	8028510 <_fflush_r>
 80281e6:	b988      	cbnz	r0, 802820c <__swbuf_r+0x90>
 80281e8:	4638      	mov	r0, r7
 80281ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80281ec:	4b0a      	ldr	r3, [pc, #40]	; (8028218 <__swbuf_r+0x9c>)
 80281ee:	429c      	cmp	r4, r3
 80281f0:	d101      	bne.n	80281f6 <__swbuf_r+0x7a>
 80281f2:	68ac      	ldr	r4, [r5, #8]
 80281f4:	e7cf      	b.n	8028196 <__swbuf_r+0x1a>
 80281f6:	4b09      	ldr	r3, [pc, #36]	; (802821c <__swbuf_r+0xa0>)
 80281f8:	429c      	cmp	r4, r3
 80281fa:	bf08      	it	eq
 80281fc:	68ec      	ldreq	r4, [r5, #12]
 80281fe:	e7ca      	b.n	8028196 <__swbuf_r+0x1a>
 8028200:	4621      	mov	r1, r4
 8028202:	4628      	mov	r0, r5
 8028204:	f000 f81e 	bl	8028244 <__swsetup_r>
 8028208:	2800      	cmp	r0, #0
 802820a:	d0cb      	beq.n	80281a4 <__swbuf_r+0x28>
 802820c:	f04f 37ff 	mov.w	r7, #4294967295
 8028210:	e7ea      	b.n	80281e8 <__swbuf_r+0x6c>
 8028212:	bf00      	nop
 8028214:	0802e3dc 	.word	0x0802e3dc
 8028218:	0802e3fc 	.word	0x0802e3fc
 802821c:	0802e3bc 	.word	0x0802e3bc

08028220 <_write_r>:
 8028220:	b538      	push	{r3, r4, r5, lr}
 8028222:	4d07      	ldr	r5, [pc, #28]	; (8028240 <_write_r+0x20>)
 8028224:	4604      	mov	r4, r0
 8028226:	4608      	mov	r0, r1
 8028228:	4611      	mov	r1, r2
 802822a:	2200      	movs	r2, #0
 802822c:	602a      	str	r2, [r5, #0]
 802822e:	461a      	mov	r2, r3
 8028230:	f7d9 fbee 	bl	8001a10 <_write>
 8028234:	1c43      	adds	r3, r0, #1
 8028236:	d102      	bne.n	802823e <_write_r+0x1e>
 8028238:	682b      	ldr	r3, [r5, #0]
 802823a:	b103      	cbz	r3, 802823e <_write_r+0x1e>
 802823c:	6023      	str	r3, [r4, #0]
 802823e:	bd38      	pop	{r3, r4, r5, pc}
 8028240:	20014e3c 	.word	0x20014e3c

08028244 <__swsetup_r>:
 8028244:	4b32      	ldr	r3, [pc, #200]	; (8028310 <__swsetup_r+0xcc>)
 8028246:	b570      	push	{r4, r5, r6, lr}
 8028248:	681d      	ldr	r5, [r3, #0]
 802824a:	4606      	mov	r6, r0
 802824c:	460c      	mov	r4, r1
 802824e:	b125      	cbz	r5, 802825a <__swsetup_r+0x16>
 8028250:	69ab      	ldr	r3, [r5, #24]
 8028252:	b913      	cbnz	r3, 802825a <__swsetup_r+0x16>
 8028254:	4628      	mov	r0, r5
 8028256:	f7ff f9bb 	bl	80275d0 <__sinit>
 802825a:	4b2e      	ldr	r3, [pc, #184]	; (8028314 <__swsetup_r+0xd0>)
 802825c:	429c      	cmp	r4, r3
 802825e:	d10f      	bne.n	8028280 <__swsetup_r+0x3c>
 8028260:	686c      	ldr	r4, [r5, #4]
 8028262:	89a3      	ldrh	r3, [r4, #12]
 8028264:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028268:	0719      	lsls	r1, r3, #28
 802826a:	d42c      	bmi.n	80282c6 <__swsetup_r+0x82>
 802826c:	06dd      	lsls	r5, r3, #27
 802826e:	d411      	bmi.n	8028294 <__swsetup_r+0x50>
 8028270:	2309      	movs	r3, #9
 8028272:	6033      	str	r3, [r6, #0]
 8028274:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8028278:	81a3      	strh	r3, [r4, #12]
 802827a:	f04f 30ff 	mov.w	r0, #4294967295
 802827e:	e03e      	b.n	80282fe <__swsetup_r+0xba>
 8028280:	4b25      	ldr	r3, [pc, #148]	; (8028318 <__swsetup_r+0xd4>)
 8028282:	429c      	cmp	r4, r3
 8028284:	d101      	bne.n	802828a <__swsetup_r+0x46>
 8028286:	68ac      	ldr	r4, [r5, #8]
 8028288:	e7eb      	b.n	8028262 <__swsetup_r+0x1e>
 802828a:	4b24      	ldr	r3, [pc, #144]	; (802831c <__swsetup_r+0xd8>)
 802828c:	429c      	cmp	r4, r3
 802828e:	bf08      	it	eq
 8028290:	68ec      	ldreq	r4, [r5, #12]
 8028292:	e7e6      	b.n	8028262 <__swsetup_r+0x1e>
 8028294:	0758      	lsls	r0, r3, #29
 8028296:	d512      	bpl.n	80282be <__swsetup_r+0x7a>
 8028298:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802829a:	b141      	cbz	r1, 80282ae <__swsetup_r+0x6a>
 802829c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80282a0:	4299      	cmp	r1, r3
 80282a2:	d002      	beq.n	80282aa <__swsetup_r+0x66>
 80282a4:	4630      	mov	r0, r6
 80282a6:	f7ff fa91 	bl	80277cc <_free_r>
 80282aa:	2300      	movs	r3, #0
 80282ac:	6363      	str	r3, [r4, #52]	; 0x34
 80282ae:	89a3      	ldrh	r3, [r4, #12]
 80282b0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80282b4:	81a3      	strh	r3, [r4, #12]
 80282b6:	2300      	movs	r3, #0
 80282b8:	6063      	str	r3, [r4, #4]
 80282ba:	6923      	ldr	r3, [r4, #16]
 80282bc:	6023      	str	r3, [r4, #0]
 80282be:	89a3      	ldrh	r3, [r4, #12]
 80282c0:	f043 0308 	orr.w	r3, r3, #8
 80282c4:	81a3      	strh	r3, [r4, #12]
 80282c6:	6923      	ldr	r3, [r4, #16]
 80282c8:	b94b      	cbnz	r3, 80282de <__swsetup_r+0x9a>
 80282ca:	89a3      	ldrh	r3, [r4, #12]
 80282cc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80282d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80282d4:	d003      	beq.n	80282de <__swsetup_r+0x9a>
 80282d6:	4621      	mov	r1, r4
 80282d8:	4630      	mov	r0, r6
 80282da:	f000 f98d 	bl	80285f8 <__smakebuf_r>
 80282de:	89a0      	ldrh	r0, [r4, #12]
 80282e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80282e4:	f010 0301 	ands.w	r3, r0, #1
 80282e8:	d00a      	beq.n	8028300 <__swsetup_r+0xbc>
 80282ea:	2300      	movs	r3, #0
 80282ec:	60a3      	str	r3, [r4, #8]
 80282ee:	6963      	ldr	r3, [r4, #20]
 80282f0:	425b      	negs	r3, r3
 80282f2:	61a3      	str	r3, [r4, #24]
 80282f4:	6923      	ldr	r3, [r4, #16]
 80282f6:	b943      	cbnz	r3, 802830a <__swsetup_r+0xc6>
 80282f8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80282fc:	d1ba      	bne.n	8028274 <__swsetup_r+0x30>
 80282fe:	bd70      	pop	{r4, r5, r6, pc}
 8028300:	0781      	lsls	r1, r0, #30
 8028302:	bf58      	it	pl
 8028304:	6963      	ldrpl	r3, [r4, #20]
 8028306:	60a3      	str	r3, [r4, #8]
 8028308:	e7f4      	b.n	80282f4 <__swsetup_r+0xb0>
 802830a:	2000      	movs	r0, #0
 802830c:	e7f7      	b.n	80282fe <__swsetup_r+0xba>
 802830e:	bf00      	nop
 8028310:	20000120 	.word	0x20000120
 8028314:	0802e3dc 	.word	0x0802e3dc
 8028318:	0802e3fc 	.word	0x0802e3fc
 802831c:	0802e3bc 	.word	0x0802e3bc

08028320 <__register_exitproc>:
 8028320:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028324:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80283e0 <__register_exitproc+0xc0>
 8028328:	4606      	mov	r6, r0
 802832a:	f8d8 0000 	ldr.w	r0, [r8]
 802832e:	461f      	mov	r7, r3
 8028330:	460d      	mov	r5, r1
 8028332:	4691      	mov	r9, r2
 8028334:	f7ff fa21 	bl	802777a <__retarget_lock_acquire_recursive>
 8028338:	4b25      	ldr	r3, [pc, #148]	; (80283d0 <__register_exitproc+0xb0>)
 802833a:	681c      	ldr	r4, [r3, #0]
 802833c:	b934      	cbnz	r4, 802834c <__register_exitproc+0x2c>
 802833e:	4c25      	ldr	r4, [pc, #148]	; (80283d4 <__register_exitproc+0xb4>)
 8028340:	601c      	str	r4, [r3, #0]
 8028342:	4b25      	ldr	r3, [pc, #148]	; (80283d8 <__register_exitproc+0xb8>)
 8028344:	b113      	cbz	r3, 802834c <__register_exitproc+0x2c>
 8028346:	681b      	ldr	r3, [r3, #0]
 8028348:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802834c:	6863      	ldr	r3, [r4, #4]
 802834e:	2b1f      	cmp	r3, #31
 8028350:	dd07      	ble.n	8028362 <__register_exitproc+0x42>
 8028352:	f8d8 0000 	ldr.w	r0, [r8]
 8028356:	f7ff fa12 	bl	802777e <__retarget_lock_release_recursive>
 802835a:	f04f 30ff 	mov.w	r0, #4294967295
 802835e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028362:	b34e      	cbz	r6, 80283b8 <__register_exitproc+0x98>
 8028364:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028368:	b988      	cbnz	r0, 802838e <__register_exitproc+0x6e>
 802836a:	4b1c      	ldr	r3, [pc, #112]	; (80283dc <__register_exitproc+0xbc>)
 802836c:	b923      	cbnz	r3, 8028378 <__register_exitproc+0x58>
 802836e:	f8d8 0000 	ldr.w	r0, [r8]
 8028372:	f7ff fa03 	bl	802777c <__retarget_lock_release>
 8028376:	e7f0      	b.n	802835a <__register_exitproc+0x3a>
 8028378:	f44f 7084 	mov.w	r0, #264	; 0x108
 802837c:	f7ff fa00 	bl	8027780 <malloc>
 8028380:	2800      	cmp	r0, #0
 8028382:	d0f4      	beq.n	802836e <__register_exitproc+0x4e>
 8028384:	2300      	movs	r3, #0
 8028386:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802838a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802838e:	6863      	ldr	r3, [r4, #4]
 8028390:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028394:	2201      	movs	r2, #1
 8028396:	409a      	lsls	r2, r3
 8028398:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802839c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80283a0:	4313      	orrs	r3, r2
 80283a2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80283a6:	2e02      	cmp	r6, #2
 80283a8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80283ac:	bf02      	ittt	eq
 80283ae:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80283b2:	4313      	orreq	r3, r2
 80283b4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80283b8:	6863      	ldr	r3, [r4, #4]
 80283ba:	f8d8 0000 	ldr.w	r0, [r8]
 80283be:	1c5a      	adds	r2, r3, #1
 80283c0:	3302      	adds	r3, #2
 80283c2:	6062      	str	r2, [r4, #4]
 80283c4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80283c8:	f7ff f9d9 	bl	802777e <__retarget_lock_release_recursive>
 80283cc:	2000      	movs	r0, #0
 80283ce:	e7c6      	b.n	802835e <__register_exitproc+0x3e>
 80283d0:	20014ecc 	.word	0x20014ecc
 80283d4:	20014e40 	.word	0x20014e40
 80283d8:	0802e454 	.word	0x0802e454
 80283dc:	08027781 	.word	0x08027781
 80283e0:	20000184 	.word	0x20000184

080283e4 <_close_r>:
 80283e4:	b538      	push	{r3, r4, r5, lr}
 80283e6:	4d06      	ldr	r5, [pc, #24]	; (8028400 <_close_r+0x1c>)
 80283e8:	2300      	movs	r3, #0
 80283ea:	4604      	mov	r4, r0
 80283ec:	4608      	mov	r0, r1
 80283ee:	602b      	str	r3, [r5, #0]
 80283f0:	f7d9 fb1c 	bl	8001a2c <_close>
 80283f4:	1c43      	adds	r3, r0, #1
 80283f6:	d102      	bne.n	80283fe <_close_r+0x1a>
 80283f8:	682b      	ldr	r3, [r5, #0]
 80283fa:	b103      	cbz	r3, 80283fe <_close_r+0x1a>
 80283fc:	6023      	str	r3, [r4, #0]
 80283fe:	bd38      	pop	{r3, r4, r5, pc}
 8028400:	20014e3c 	.word	0x20014e3c

08028404 <__sflush_r>:
 8028404:	898a      	ldrh	r2, [r1, #12]
 8028406:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802840a:	4605      	mov	r5, r0
 802840c:	0710      	lsls	r0, r2, #28
 802840e:	460c      	mov	r4, r1
 8028410:	d458      	bmi.n	80284c4 <__sflush_r+0xc0>
 8028412:	684b      	ldr	r3, [r1, #4]
 8028414:	2b00      	cmp	r3, #0
 8028416:	dc05      	bgt.n	8028424 <__sflush_r+0x20>
 8028418:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802841a:	2b00      	cmp	r3, #0
 802841c:	dc02      	bgt.n	8028424 <__sflush_r+0x20>
 802841e:	2000      	movs	r0, #0
 8028420:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028424:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028426:	2e00      	cmp	r6, #0
 8028428:	d0f9      	beq.n	802841e <__sflush_r+0x1a>
 802842a:	2300      	movs	r3, #0
 802842c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8028430:	682f      	ldr	r7, [r5, #0]
 8028432:	602b      	str	r3, [r5, #0]
 8028434:	d032      	beq.n	802849c <__sflush_r+0x98>
 8028436:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028438:	89a3      	ldrh	r3, [r4, #12]
 802843a:	075a      	lsls	r2, r3, #29
 802843c:	d505      	bpl.n	802844a <__sflush_r+0x46>
 802843e:	6863      	ldr	r3, [r4, #4]
 8028440:	1ac0      	subs	r0, r0, r3
 8028442:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8028444:	b10b      	cbz	r3, 802844a <__sflush_r+0x46>
 8028446:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028448:	1ac0      	subs	r0, r0, r3
 802844a:	2300      	movs	r3, #0
 802844c:	4602      	mov	r2, r0
 802844e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028450:	6a21      	ldr	r1, [r4, #32]
 8028452:	4628      	mov	r0, r5
 8028454:	47b0      	blx	r6
 8028456:	1c43      	adds	r3, r0, #1
 8028458:	89a3      	ldrh	r3, [r4, #12]
 802845a:	d106      	bne.n	802846a <__sflush_r+0x66>
 802845c:	6829      	ldr	r1, [r5, #0]
 802845e:	291d      	cmp	r1, #29
 8028460:	d82c      	bhi.n	80284bc <__sflush_r+0xb8>
 8028462:	4a2a      	ldr	r2, [pc, #168]	; (802850c <__sflush_r+0x108>)
 8028464:	40ca      	lsrs	r2, r1
 8028466:	07d6      	lsls	r6, r2, #31
 8028468:	d528      	bpl.n	80284bc <__sflush_r+0xb8>
 802846a:	2200      	movs	r2, #0
 802846c:	6062      	str	r2, [r4, #4]
 802846e:	04d9      	lsls	r1, r3, #19
 8028470:	6922      	ldr	r2, [r4, #16]
 8028472:	6022      	str	r2, [r4, #0]
 8028474:	d504      	bpl.n	8028480 <__sflush_r+0x7c>
 8028476:	1c42      	adds	r2, r0, #1
 8028478:	d101      	bne.n	802847e <__sflush_r+0x7a>
 802847a:	682b      	ldr	r3, [r5, #0]
 802847c:	b903      	cbnz	r3, 8028480 <__sflush_r+0x7c>
 802847e:	6560      	str	r0, [r4, #84]	; 0x54
 8028480:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028482:	602f      	str	r7, [r5, #0]
 8028484:	2900      	cmp	r1, #0
 8028486:	d0ca      	beq.n	802841e <__sflush_r+0x1a>
 8028488:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802848c:	4299      	cmp	r1, r3
 802848e:	d002      	beq.n	8028496 <__sflush_r+0x92>
 8028490:	4628      	mov	r0, r5
 8028492:	f7ff f99b 	bl	80277cc <_free_r>
 8028496:	2000      	movs	r0, #0
 8028498:	6360      	str	r0, [r4, #52]	; 0x34
 802849a:	e7c1      	b.n	8028420 <__sflush_r+0x1c>
 802849c:	6a21      	ldr	r1, [r4, #32]
 802849e:	2301      	movs	r3, #1
 80284a0:	4628      	mov	r0, r5
 80284a2:	47b0      	blx	r6
 80284a4:	1c41      	adds	r1, r0, #1
 80284a6:	d1c7      	bne.n	8028438 <__sflush_r+0x34>
 80284a8:	682b      	ldr	r3, [r5, #0]
 80284aa:	2b00      	cmp	r3, #0
 80284ac:	d0c4      	beq.n	8028438 <__sflush_r+0x34>
 80284ae:	2b1d      	cmp	r3, #29
 80284b0:	d001      	beq.n	80284b6 <__sflush_r+0xb2>
 80284b2:	2b16      	cmp	r3, #22
 80284b4:	d101      	bne.n	80284ba <__sflush_r+0xb6>
 80284b6:	602f      	str	r7, [r5, #0]
 80284b8:	e7b1      	b.n	802841e <__sflush_r+0x1a>
 80284ba:	89a3      	ldrh	r3, [r4, #12]
 80284bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80284c0:	81a3      	strh	r3, [r4, #12]
 80284c2:	e7ad      	b.n	8028420 <__sflush_r+0x1c>
 80284c4:	690f      	ldr	r7, [r1, #16]
 80284c6:	2f00      	cmp	r7, #0
 80284c8:	d0a9      	beq.n	802841e <__sflush_r+0x1a>
 80284ca:	0793      	lsls	r3, r2, #30
 80284cc:	680e      	ldr	r6, [r1, #0]
 80284ce:	bf08      	it	eq
 80284d0:	694b      	ldreq	r3, [r1, #20]
 80284d2:	600f      	str	r7, [r1, #0]
 80284d4:	bf18      	it	ne
 80284d6:	2300      	movne	r3, #0
 80284d8:	eba6 0807 	sub.w	r8, r6, r7
 80284dc:	608b      	str	r3, [r1, #8]
 80284de:	f1b8 0f00 	cmp.w	r8, #0
 80284e2:	dd9c      	ble.n	802841e <__sflush_r+0x1a>
 80284e4:	6a21      	ldr	r1, [r4, #32]
 80284e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80284e8:	4643      	mov	r3, r8
 80284ea:	463a      	mov	r2, r7
 80284ec:	4628      	mov	r0, r5
 80284ee:	47b0      	blx	r6
 80284f0:	2800      	cmp	r0, #0
 80284f2:	dc06      	bgt.n	8028502 <__sflush_r+0xfe>
 80284f4:	89a3      	ldrh	r3, [r4, #12]
 80284f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80284fa:	81a3      	strh	r3, [r4, #12]
 80284fc:	f04f 30ff 	mov.w	r0, #4294967295
 8028500:	e78e      	b.n	8028420 <__sflush_r+0x1c>
 8028502:	4407      	add	r7, r0
 8028504:	eba8 0800 	sub.w	r8, r8, r0
 8028508:	e7e9      	b.n	80284de <__sflush_r+0xda>
 802850a:	bf00      	nop
 802850c:	20400001 	.word	0x20400001

08028510 <_fflush_r>:
 8028510:	b538      	push	{r3, r4, r5, lr}
 8028512:	690b      	ldr	r3, [r1, #16]
 8028514:	4605      	mov	r5, r0
 8028516:	460c      	mov	r4, r1
 8028518:	b913      	cbnz	r3, 8028520 <_fflush_r+0x10>
 802851a:	2500      	movs	r5, #0
 802851c:	4628      	mov	r0, r5
 802851e:	bd38      	pop	{r3, r4, r5, pc}
 8028520:	b118      	cbz	r0, 802852a <_fflush_r+0x1a>
 8028522:	6983      	ldr	r3, [r0, #24]
 8028524:	b90b      	cbnz	r3, 802852a <_fflush_r+0x1a>
 8028526:	f7ff f853 	bl	80275d0 <__sinit>
 802852a:	4b14      	ldr	r3, [pc, #80]	; (802857c <_fflush_r+0x6c>)
 802852c:	429c      	cmp	r4, r3
 802852e:	d11b      	bne.n	8028568 <_fflush_r+0x58>
 8028530:	686c      	ldr	r4, [r5, #4]
 8028532:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028536:	2b00      	cmp	r3, #0
 8028538:	d0ef      	beq.n	802851a <_fflush_r+0xa>
 802853a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802853c:	07d0      	lsls	r0, r2, #31
 802853e:	d404      	bmi.n	802854a <_fflush_r+0x3a>
 8028540:	0599      	lsls	r1, r3, #22
 8028542:	d402      	bmi.n	802854a <_fflush_r+0x3a>
 8028544:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028546:	f7ff f918 	bl	802777a <__retarget_lock_acquire_recursive>
 802854a:	4628      	mov	r0, r5
 802854c:	4621      	mov	r1, r4
 802854e:	f7ff ff59 	bl	8028404 <__sflush_r>
 8028552:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028554:	07da      	lsls	r2, r3, #31
 8028556:	4605      	mov	r5, r0
 8028558:	d4e0      	bmi.n	802851c <_fflush_r+0xc>
 802855a:	89a3      	ldrh	r3, [r4, #12]
 802855c:	059b      	lsls	r3, r3, #22
 802855e:	d4dd      	bmi.n	802851c <_fflush_r+0xc>
 8028560:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028562:	f7ff f90c 	bl	802777e <__retarget_lock_release_recursive>
 8028566:	e7d9      	b.n	802851c <_fflush_r+0xc>
 8028568:	4b05      	ldr	r3, [pc, #20]	; (8028580 <_fflush_r+0x70>)
 802856a:	429c      	cmp	r4, r3
 802856c:	d101      	bne.n	8028572 <_fflush_r+0x62>
 802856e:	68ac      	ldr	r4, [r5, #8]
 8028570:	e7df      	b.n	8028532 <_fflush_r+0x22>
 8028572:	4b04      	ldr	r3, [pc, #16]	; (8028584 <_fflush_r+0x74>)
 8028574:	429c      	cmp	r4, r3
 8028576:	bf08      	it	eq
 8028578:	68ec      	ldreq	r4, [r5, #12]
 802857a:	e7da      	b.n	8028532 <_fflush_r+0x22>
 802857c:	0802e3dc 	.word	0x0802e3dc
 8028580:	0802e3fc 	.word	0x0802e3fc
 8028584:	0802e3bc 	.word	0x0802e3bc

08028588 <_lseek_r>:
 8028588:	b538      	push	{r3, r4, r5, lr}
 802858a:	4d07      	ldr	r5, [pc, #28]	; (80285a8 <_lseek_r+0x20>)
 802858c:	4604      	mov	r4, r0
 802858e:	4608      	mov	r0, r1
 8028590:	4611      	mov	r1, r2
 8028592:	2200      	movs	r2, #0
 8028594:	602a      	str	r2, [r5, #0]
 8028596:	461a      	mov	r2, r3
 8028598:	f7d9 fa52 	bl	8001a40 <_lseek>
 802859c:	1c43      	adds	r3, r0, #1
 802859e:	d102      	bne.n	80285a6 <_lseek_r+0x1e>
 80285a0:	682b      	ldr	r3, [r5, #0]
 80285a2:	b103      	cbz	r3, 80285a6 <_lseek_r+0x1e>
 80285a4:	6023      	str	r3, [r4, #0]
 80285a6:	bd38      	pop	{r3, r4, r5, pc}
 80285a8:	20014e3c 	.word	0x20014e3c

080285ac <__swhatbuf_r>:
 80285ac:	b570      	push	{r4, r5, r6, lr}
 80285ae:	460e      	mov	r6, r1
 80285b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80285b4:	2900      	cmp	r1, #0
 80285b6:	b096      	sub	sp, #88	; 0x58
 80285b8:	4614      	mov	r4, r2
 80285ba:	461d      	mov	r5, r3
 80285bc:	da08      	bge.n	80285d0 <__swhatbuf_r+0x24>
 80285be:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80285c2:	2200      	movs	r2, #0
 80285c4:	602a      	str	r2, [r5, #0]
 80285c6:	061a      	lsls	r2, r3, #24
 80285c8:	d410      	bmi.n	80285ec <__swhatbuf_r+0x40>
 80285ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80285ce:	e00e      	b.n	80285ee <__swhatbuf_r+0x42>
 80285d0:	466a      	mov	r2, sp
 80285d2:	f000 f86f 	bl	80286b4 <_fstat_r>
 80285d6:	2800      	cmp	r0, #0
 80285d8:	dbf1      	blt.n	80285be <__swhatbuf_r+0x12>
 80285da:	9a01      	ldr	r2, [sp, #4]
 80285dc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80285e0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80285e4:	425a      	negs	r2, r3
 80285e6:	415a      	adcs	r2, r3
 80285e8:	602a      	str	r2, [r5, #0]
 80285ea:	e7ee      	b.n	80285ca <__swhatbuf_r+0x1e>
 80285ec:	2340      	movs	r3, #64	; 0x40
 80285ee:	2000      	movs	r0, #0
 80285f0:	6023      	str	r3, [r4, #0]
 80285f2:	b016      	add	sp, #88	; 0x58
 80285f4:	bd70      	pop	{r4, r5, r6, pc}
	...

080285f8 <__smakebuf_r>:
 80285f8:	898b      	ldrh	r3, [r1, #12]
 80285fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80285fc:	079d      	lsls	r5, r3, #30
 80285fe:	4606      	mov	r6, r0
 8028600:	460c      	mov	r4, r1
 8028602:	d507      	bpl.n	8028614 <__smakebuf_r+0x1c>
 8028604:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8028608:	6023      	str	r3, [r4, #0]
 802860a:	6123      	str	r3, [r4, #16]
 802860c:	2301      	movs	r3, #1
 802860e:	6163      	str	r3, [r4, #20]
 8028610:	b002      	add	sp, #8
 8028612:	bd70      	pop	{r4, r5, r6, pc}
 8028614:	ab01      	add	r3, sp, #4
 8028616:	466a      	mov	r2, sp
 8028618:	f7ff ffc8 	bl	80285ac <__swhatbuf_r>
 802861c:	9900      	ldr	r1, [sp, #0]
 802861e:	4605      	mov	r5, r0
 8028620:	4630      	mov	r0, r6
 8028622:	f7ff f93f 	bl	80278a4 <_malloc_r>
 8028626:	b948      	cbnz	r0, 802863c <__smakebuf_r+0x44>
 8028628:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802862c:	059a      	lsls	r2, r3, #22
 802862e:	d4ef      	bmi.n	8028610 <__smakebuf_r+0x18>
 8028630:	f023 0303 	bic.w	r3, r3, #3
 8028634:	f043 0302 	orr.w	r3, r3, #2
 8028638:	81a3      	strh	r3, [r4, #12]
 802863a:	e7e3      	b.n	8028604 <__smakebuf_r+0xc>
 802863c:	4b0d      	ldr	r3, [pc, #52]	; (8028674 <__smakebuf_r+0x7c>)
 802863e:	62b3      	str	r3, [r6, #40]	; 0x28
 8028640:	89a3      	ldrh	r3, [r4, #12]
 8028642:	6020      	str	r0, [r4, #0]
 8028644:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8028648:	81a3      	strh	r3, [r4, #12]
 802864a:	9b00      	ldr	r3, [sp, #0]
 802864c:	6163      	str	r3, [r4, #20]
 802864e:	9b01      	ldr	r3, [sp, #4]
 8028650:	6120      	str	r0, [r4, #16]
 8028652:	b15b      	cbz	r3, 802866c <__smakebuf_r+0x74>
 8028654:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028658:	4630      	mov	r0, r6
 802865a:	f000 f83d 	bl	80286d8 <_isatty_r>
 802865e:	b128      	cbz	r0, 802866c <__smakebuf_r+0x74>
 8028660:	89a3      	ldrh	r3, [r4, #12]
 8028662:	f023 0303 	bic.w	r3, r3, #3
 8028666:	f043 0301 	orr.w	r3, r3, #1
 802866a:	81a3      	strh	r3, [r4, #12]
 802866c:	89a0      	ldrh	r0, [r4, #12]
 802866e:	4305      	orrs	r5, r0
 8028670:	81a5      	strh	r5, [r4, #12]
 8028672:	e7cd      	b.n	8028610 <__smakebuf_r+0x18>
 8028674:	08027569 	.word	0x08027569

08028678 <__malloc_lock>:
 8028678:	4801      	ldr	r0, [pc, #4]	; (8028680 <__malloc_lock+0x8>)
 802867a:	f7ff b87e 	b.w	802777a <__retarget_lock_acquire_recursive>
 802867e:	bf00      	nop
 8028680:	20014d29 	.word	0x20014d29

08028684 <__malloc_unlock>:
 8028684:	4801      	ldr	r0, [pc, #4]	; (802868c <__malloc_unlock+0x8>)
 8028686:	f7ff b87a 	b.w	802777e <__retarget_lock_release_recursive>
 802868a:	bf00      	nop
 802868c:	20014d29 	.word	0x20014d29

08028690 <_read_r>:
 8028690:	b538      	push	{r3, r4, r5, lr}
 8028692:	4d07      	ldr	r5, [pc, #28]	; (80286b0 <_read_r+0x20>)
 8028694:	4604      	mov	r4, r0
 8028696:	4608      	mov	r0, r1
 8028698:	4611      	mov	r1, r2
 802869a:	2200      	movs	r2, #0
 802869c:	602a      	str	r2, [r5, #0]
 802869e:	461a      	mov	r2, r3
 80286a0:	f7d9 f9a8 	bl	80019f4 <_read>
 80286a4:	1c43      	adds	r3, r0, #1
 80286a6:	d102      	bne.n	80286ae <_read_r+0x1e>
 80286a8:	682b      	ldr	r3, [r5, #0]
 80286aa:	b103      	cbz	r3, 80286ae <_read_r+0x1e>
 80286ac:	6023      	str	r3, [r4, #0]
 80286ae:	bd38      	pop	{r3, r4, r5, pc}
 80286b0:	20014e3c 	.word	0x20014e3c

080286b4 <_fstat_r>:
 80286b4:	b538      	push	{r3, r4, r5, lr}
 80286b6:	4d07      	ldr	r5, [pc, #28]	; (80286d4 <_fstat_r+0x20>)
 80286b8:	2300      	movs	r3, #0
 80286ba:	4604      	mov	r4, r0
 80286bc:	4608      	mov	r0, r1
 80286be:	4611      	mov	r1, r2
 80286c0:	602b      	str	r3, [r5, #0]
 80286c2:	f7d9 f9b6 	bl	8001a32 <_fstat>
 80286c6:	1c43      	adds	r3, r0, #1
 80286c8:	d102      	bne.n	80286d0 <_fstat_r+0x1c>
 80286ca:	682b      	ldr	r3, [r5, #0]
 80286cc:	b103      	cbz	r3, 80286d0 <_fstat_r+0x1c>
 80286ce:	6023      	str	r3, [r4, #0]
 80286d0:	bd38      	pop	{r3, r4, r5, pc}
 80286d2:	bf00      	nop
 80286d4:	20014e3c 	.word	0x20014e3c

080286d8 <_isatty_r>:
 80286d8:	b538      	push	{r3, r4, r5, lr}
 80286da:	4d06      	ldr	r5, [pc, #24]	; (80286f4 <_isatty_r+0x1c>)
 80286dc:	2300      	movs	r3, #0
 80286de:	4604      	mov	r4, r0
 80286e0:	4608      	mov	r0, r1
 80286e2:	602b      	str	r3, [r5, #0]
 80286e4:	f7d9 f9aa 	bl	8001a3c <_isatty>
 80286e8:	1c43      	adds	r3, r0, #1
 80286ea:	d102      	bne.n	80286f2 <_isatty_r+0x1a>
 80286ec:	682b      	ldr	r3, [r5, #0]
 80286ee:	b103      	cbz	r3, 80286f2 <_isatty_r+0x1a>
 80286f0:	6023      	str	r3, [r4, #0]
 80286f2:	bd38      	pop	{r3, r4, r5, pc}
 80286f4:	20014e3c 	.word	0x20014e3c

080286f8 <_init>:
 80286f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80286fa:	bf00      	nop
 80286fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80286fe:	bc08      	pop	{r3}
 8028700:	469e      	mov	lr, r3
 8028702:	4770      	bx	lr

08028704 <_fini>:
 8028704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028706:	bf00      	nop
 8028708:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802870a:	bc08      	pop	{r3}
 802870c:	469e      	mov	lr, r3
 802870e:	4770      	bx	lr
